### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  id: TransferCodingWithQualityHeaderValue
  children:
  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)
  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality
  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)
  langs:
  - csharp
  name: TransferCodingWithQualityHeaderValue
  nameWithType: TransferCodingWithQualityHeaderValue
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  type: Class
  summary: "Represents an Accept-Encoding header value.with optional quality factor."
  remarks: "The TransferCodingWithQualityHeaderValue class provides support for the Accept-Encoding header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF.       Quality factors allow a user agent to indicate the relative degree of preference for an Accept-Encoding header value, using the qvalue scale from 0 to 1. The default value is q=1.       This type derives from <xref:System.Net.Http.Headers.TransferCodingHeaderValue>."
  syntax:
    content: 'public sealed class TransferCodingWithQualityHeaderValue : System.Net.Http.Headers.TransferCodingHeaderValue, ICloneable'
  inheritance:
  - System.Object
  - System.Net.Http.Headers.TransferCodingHeaderValue
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode
  - System.Net.Http.Headers.TransferCodingHeaderValue.Parameters
  - System.Net.Http.Headers.TransferCodingHeaderValue.ToString
  - System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)
  - System.Net.Http.Headers.TransferCodingHeaderValue.Value
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  langs:
  - csharp
  name: TransferCodingWithQualityHeaderValue(String)
  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see> class."
  syntax:
    content: public TransferCodingWithQualityHeaderValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "A string used to initialize the new instance."
  overload: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  langs:
  - csharp
  name: TransferCodingWithQualityHeaderValue(String,Double)
  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String,Double)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see> class."
  syntax:
    content: public TransferCodingWithQualityHeaderValue (string value, double quality);
    parameters:
    - id: value
      type: System.String
      description: "A string used to initialize the new instance."
    - id: quality
      type: System.Double
      description: "A value for the quality factor."
  overload: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: TransferCodingWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converts a string to an <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see> instance."
  syntax:
    content: public static System.Net.Http.Headers.TransferCodingWithQualityHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "A string that represents transfer-coding value information."
    return:
      type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
      description: "To be added."
  overload: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    input is a  reference."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n    input is not valid transfer-coding with quality header value information."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality
  id: Quality
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  langs:
  - csharp
  name: Quality
  nameWithType: TransferCodingWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Gets the quality factor from the <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see>."
  syntax:
    content: public Nullable<double> Quality { get; set; }
    return:
      type: System.Nullable{System.Double}
      description: "The quality factor from the <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see>."
  overload: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TransferCodingWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Creates a new object that is a copy of the current <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see> instance."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  langs:
  - csharp
  name: TryParse(String,TransferCodingWithQualityHeaderValue)
  nameWithType: TransferCodingWithQualityHeaderValue.TryParse(String,TransferCodingWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(String,TransferCodingWithQualityHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determines whether a string is valid <see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot;></see> information."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.TransferCodingWithQualityHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "The string to validate."
    - id: parsedValue
      type: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
      description: "The  version of the string."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Net.Http.Headers.TransferCodingHeaderValue
  isExternal: false
  name: System.Net.Http.Headers.TransferCodingHeaderValue
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: TransferCodingWithQualityHeaderValue(String)
  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: TransferCodingWithQualityHeaderValue(String,Double)
  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: TransferCodingWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: TransferCodingWithQualityHeaderValue
  nameWithType: TransferCodingWithQualityHeaderValue
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: TransferCodingWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TransferCodingWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: TryParse(String,TransferCodingWithQualityHeaderValue)
  nameWithType: TransferCodingWithQualityHeaderValue.TryParse(String,TransferCodingWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(String,TransferCodingWithQualityHeaderValue)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor*
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: TransferCodingWithQualityHeaderValue
  nameWithType: TransferCodingWithQualityHeaderValue.TransferCodingWithQualityHeaderValue
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse*
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: Parse
  nameWithType: TransferCodingWithQualityHeaderValue.Parse
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality*
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: TransferCodingWithQualityHeaderValue.Quality
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TransferCodingWithQualityHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse*
  parent: System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: TransferCodingWithQualityHeaderValue.TryParse
