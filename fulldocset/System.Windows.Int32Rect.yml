### YamlMime:ManagedReference
items:
- uid: System.Windows.Int32Rect
  id: Int32Rect
  children:
  - System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Int32Rect.Empty
  - System.Windows.Int32Rect.Equals(System.Object)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.GetHashCode
  - System.Windows.Int32Rect.HasArea
  - System.Windows.Int32Rect.Height
  - System.Windows.Int32Rect.IsEmpty
  - System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Parse(System.String)
  - System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Int32Rect.ToString
  - System.Windows.Int32Rect.ToString(System.IFormatProvider)
  - System.Windows.Int32Rect.Width
  - System.Windows.Int32Rect.X
  - System.Windows.Int32Rect.Y
  langs:
  - csharp
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
  type: Struct
  summary: "Describes the width, height, and location of an integer rectangle."
  remarks: "<a name=&quot;xamlAttributeUsage_Duration&quot;></a>    ## XAML Attribute Usage      ```   <object property=&quot;X,Y,Width,Height&quot;/>   - or    <object property=&quot;Empty&quot;/>   ```      <a name=&quot;xamlValues_MinWidth&quot;></a>    ## XAML Values    *X*    <xref:System.Int32?displayProperty=fullName>       The x-coordinate of the top-left corner of the rectangle.       *Y*    <xref:System.Int32?displayProperty=fullName>       The y-coordinate of the top-left corner of the rectangle.       *Width*    <xref:System.Int32?displayProperty=fullName>       The width of the rectangle.       *Height*    <xref:System.Int32?displayProperty=fullName>       The height of the rectangle.      <a name=&quot;xamlTextUsage_Int32Rect&quot;></a>    ## XAML Text Usage    You can also use whitespace instead of commas to delimit values. Whitespace can also be used with a comma delimited value set."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Int32RectConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.Int32RectValueSerializer))]

      public struct Int32Rect : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Initializes a new instance of an <xref href=&quot;System.Windows.Int32Rect&quot;></xref> with the specified <xref:System.Windows.Int32Rect.X*> and <xref:System.Windows.Int32Rect.Y*> coordinates and the specified <xref:System.Windows.Int32Rect.Width*> and <xref:System.Windows.Int32Rect.Height*>."
  syntax:
    content: public Int32Rect (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "The <xref:System.Windows.Int32Rect.X*> of the new <xref href=&quot;System.Windows.Int32Rect&quot;></xref> instance which specifies the x-coordinate of the top-left corner of the rectangle."
    - id: y
      type: System.Int32
      description: "The <xref:System.Windows.Int32Rect.Y*> of the new <xref href=&quot;System.Windows.Int32Rect&quot;></xref> instance which specifies the y-coordinate of the top-left corner of the rectangle."
    - id: width
      type: System.Int32
      description: "The <xref:System.Windows.Int32Rect.Width*> of the new <xref href=&quot;System.Windows.Int32Rect&quot;></xref> instance which specifies the width of the rectangle."
    - id: height
      type: System.Int32
      description: "The <xref:System.Windows.Int32Rect.Height*> of the new <xref href=&quot;System.Windows.Int32Rect&quot;></xref> instance which specifies the height of the rectangle."
  overload: System.Windows.Int32Rect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Empty
  id: Empty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the empty rectangle, a special value that represents a rectangle with no position or area."
  remarks: "This property is the same as calling the constructor using 0 for all parameter values.      <a name=&quot;xamlAttributeUsage_Automatic&quot;></a>    ## XAML Attribute Usage      ```   <object property=&quot;Empty&quot; />   ```      <a name=&quot;xamlValues_Automatic&quot;></a>    ## XAML Values    *property*    A property that accepts a <xref:System.Windows.Int32Rect> value."
  syntax:
    content: public static System.Windows.Int32Rect Empty { get; }
    return:
      type: System.Windows.Int32Rect
      description: "An empty rectangle with no position or area."
  overload: System.Windows.Int32Rect.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether the specified rectangle is equal to this rectangle."
  remarks: "This operation tests for object equality."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object to compare to the current rectangle."
    return:
      type: System.Boolean
      description: '**true** if *o* is an <xref href=&quot;System.Windows.Int32Rect&quot;></xref> and the same <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*> as this rectangle; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether the specified rectangle is equal to this rectangle."
  remarks: "This operation tests for object equality."
  syntax:
    content: public bool Equals (System.Windows.Int32Rect value);
    parameters:
    - id: value
      type: System.Windows.Int32Rect
      description: "The rectangle to compare to the current rectangle."
    return:
      type: System.Boolean
      description: '**true** if both rectangles have the same <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*> as this rectangle; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether the specified rectangles are equal."
  remarks: "This operation tests for object equality."
  syntax:
    content: public static bool Equals (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "The first rectangle to compare."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "The second rectangle to compare."
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.GetHashCode
  id: GetHashCode
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Creates a hash code from this rectangle&quot;s <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*> values."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "This rectangle&quot;s hash code."
  overload: System.Windows.Int32Rect.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.HasArea
  id: HasArea
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets a value that indicates whether the <xref:System.Windows.Int32Rect.Width*> and <xref:System.Windows.Int32Rect.Height*> properties of the <xref href=&quot;System.Windows.Int32Rect&quot;></xref> are greater than 0."
  syntax:
    content: public bool HasArea { get; }
    return:
      type: System.Boolean
      description: "true if the <xref:System.Windows.Int32Rect.Width*> and <xref:System.Windows.Int32Rect.Height*> properties of the <xref href=&quot;System.Windows.Int32Rect&quot;></xref> are greater than 0; otherwise, <code>false</code>."
  overload: System.Windows.Int32Rect.HasArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Height
  id: Height
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets or sets the height of the rectangle."
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "The height of the rectangle. The default value is `0`."
  overload: System.Windows.Int32Rect.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.IsEmpty
  id: IsEmpty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets a value indicating whether the rectangle is empty."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: '**true** if the rectangle is empty; otherwise, **false**. The default value is **true**.'
  overload: System.Windows.Int32Rect.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares two rectangles for exact equality."
  syntax:
    content: public static bool op_Equality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "The first rectangle to compare."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "The second rectangle to compare."
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares two rectangles for inequality."
  syntax:
    content: public static bool op_Inequality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "The first rectangle to compare."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "The second rectangle to compare."
    return:
      type: System.Boolean
      description: '**false** if *int32Rect1* and *int32Rect2* have the same <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*>; otherwise, if all of these values are the same, then **true**.'
  overload: System.Windows.Int32Rect.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Creates an <xref href=&quot;System.Windows.Int32Rect&quot;></xref> structure from the specified <xref:System.String> representation."
  syntax:
    content: public static System.Windows.Int32Rect Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "A string representation of an <xref href=&quot;System.Windows.Int32Rect&quot;></xref>."
    return:
      type: System.Windows.Int32Rect
      description: "The equivalent <xref href=&quot;System.Windows.Int32Rect&quot;></xref> structure."
  overload: System.Windows.Int32Rect.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Formats the value of the current instance using the specified format."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Int32Rect> instance is cast to an <xref:System.IFormattable> interface."
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "The format to use."
    - id: provider
      type: System.IFormatProvider
      description: "The provider to use to format the value"
    return:
      type: System.String
      description: "The value of the current instance in the specified format."
  overload: System.Windows.Int32Rect.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString
  id: ToString
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Creates a string representation of this <xref href=&quot;System.Windows.Int32Rect&quot;></xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string containing the same <xref:System.Windows.Int32Rect.X*>, <xref:System.Windows.Int32Rect.Y*>, <xref:System.Windows.Int32Rect.Width*>, and <xref:System.Windows.Int32Rect.Height*> values of this <xref href=&quot;System.Windows.Int32Rect&quot;></xref> structure."
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Creates a string representation of this <xref href=&quot;System.Windows.Int32Rect&quot;></xref> based on the supplied <xref:System.IFormatProvider>."
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "The format provider to use. If provider is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the current culture is used."
    return:
      type: System.String
      description: "A string representation of this instance of <xref href=&quot;System.Windows.Int32Rect&quot;></xref>."
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Width
  id: Width
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets or sets the width of the rectangle."
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "The width of the rectangle. The default value is `0`."
  overload: System.Windows.Int32Rect.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.X
  id: X
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets or sets the x-coordinate of the top-left corner of the rectangle."
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "The x-coordinate of the top-left corner of the rectangle. The default value is `0`."
  overload: System.Windows.Int32Rect.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Y
  id: Y
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets or sets the y-coordinate of the top-left corner of the rectangle."
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "The y-coordinate of the top-left corner of the rectangle. The default value is `0`."
  overload: System.Windows.Int32Rect.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Int32Rect.Empty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Int32Rect.Equals(System.Object)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.GetHashCode
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
- uid: System.Windows.Int32Rect.HasArea
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.Parse(System.String)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Int32Rect.ToString
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
- uid: System.Windows.Int32Rect.Width
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
- uid: System.Windows.Int32Rect.X
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
- uid: System.Windows.Int32Rect.Y
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
- uid: System.Windows.Int32Rect.#ctor*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect.Int32Rect
- uid: System.Windows.Int32Rect.Empty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
- uid: System.Windows.Int32Rect.Equals*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals
  nameWithType: Int32Rect.Equals
- uid: System.Windows.Int32Rect.GetHashCode*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode
  nameWithType: Int32Rect.GetHashCode
- uid: System.Windows.Int32Rect.HasArea*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality
  nameWithType: Int32Rect.op_Equality
- uid: System.Windows.Int32Rect.op_Inequality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality
  nameWithType: Int32Rect.op_Inequality
- uid: System.Windows.Int32Rect.Parse*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse
  nameWithType: Int32Rect.Parse
- uid: System.Windows.Int32Rect.System#IFormattable#ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Int32Rect.System.IFormattable.ToString
- uid: System.Windows.Int32Rect.ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString
  nameWithType: Int32Rect.ToString
- uid: System.Windows.Int32Rect.Width*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
- uid: System.Windows.Int32Rect.X*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
- uid: System.Windows.Int32Rect.Y*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
