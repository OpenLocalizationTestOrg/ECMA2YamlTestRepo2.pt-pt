### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyPressEventArgs
  id: KeyPressEventArgs
  children:
  - System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  - System.Windows.Forms.KeyPressEventArgs.Handled
  - System.Windows.Forms.KeyPressEventArgs.KeyChar
  langs:
  - csharp
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> eventos."
  remarks: "Um KeyPressEventArgs Especifica o caráter que é composto quando o utilizador prime uma chave. Por exemplo, quando o utilizador prime SHIFT + K, a propriedade <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>devolve um k maiúsculas       A <xref:System.Windows.Forms.Control.KeyPress>evento ocorre quando o utilizador prime uma chave.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Dois eventos que estão estreitamente relacionadas com os <xref:System.Windows.Forms.Control.KeyPress>eventos são <xref:System.Windows.Forms.Control.KeyUp>e <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> O <xref:System.Windows.Forms.Control.KeyDown>eventos precede cada <xref:System.Windows.Forms.Control.KeyPress>eventos quando o utilizador prime uma chave e um <xref:System.Windows.Forms.Control.KeyUp>evento ocorre quando o utilizador liberta uma tecla.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Quando o utilizador retém para baixo de uma chave, duplicar <xref:System.Windows.Forms.Control.KeyDown>e <xref:System.Windows.Forms.Control.KeyPress>eventos ocorrem sempre que o caráter repete.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.Control.KeyDown> Um <xref:System.Windows.Forms.Control.KeyUp>evento é gerado após a versão.</xref:System.Windows.Forms.Control.KeyUp>       Com cada <xref:System.Windows.Forms.Control.KeyPress>evento, um KeyPressEventArgs é transmitida.</xref:System.Windows.Forms.Control.KeyPress> A <xref:System.Windows.Forms.KeyEventArgs>seja passado com cada <xref:System.Windows.Forms.Control.KeyDown>e <xref:System.Windows.Forms.Control.KeyUp>eventos.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.KeyEventArgs> A <xref:System.Windows.Forms.KeyEventArgs>Especifica se a quaisquer chaves modificador (CTRL, SHIFT ou ALT) foram premidos juntamente com outra chave.</xref:System.Windows.Forms.KeyEventArgs> (Esta informação modificador também pode ser obtida através de <xref:System.Windows.Forms.Control.ModifierKeys%2A>propriedade o <xref:System.Windows.Forms.Control>classe.)</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.ModifierKeys%2A>       Definir <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>para `true` para cancelar o `KeyPress` eventos.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Isto mantém o controlo de processar prima chave.      > [!NOTE] > Alguns controlos processará determinados traços chaves no <xref:System.Windows.Forms.Control.KeyDown>.</xref:System.Windows.Forms.Control.KeyDown> Por exemplo, <xref:System.Windows.Forms.RichTextBox>processa a tecla Enter antes <xref:System.Windows.Forms.Control.KeyPress>é chamado.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.RichTextBox> Nestes casos, não é possível cancelar a <xref:System.Windows.Forms.Control.KeyPress>evento e têm de cancelar o traço chave do <xref:System.Windows.Forms.Control.KeyDown>em vez disso.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.Control.KeyPress>       Para obter informações sobre o modelo de evento, consulte [eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates using the KeyPressEventArgs to count keys as they are pressed and to display the results after each key press. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> is then set to true to keep the operating system from further processing the key. The example assumes a form with a <xref:System.Windows.Forms.TextBox> placed on it.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#1](~/add/codesnippet/cpp/t-system.windows.forms.k_0_1.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#1](~/add/codesnippet/csharp/t-system.windows.forms.k_0_1.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_1.vb)]  \n  \n You must create a new instance of this class. You must also set the event handler. You can do this in the constructor for your class.  \n  \n [!code-cpp[Classic KeyPressEventArgs Example#2](~/add/codesnippet/cpp/t-system.windows.forms.k_0_2.cpp)]\n [!code-cs[Classic KeyPressEventArgs Example#2](~/add/codesnippet/csharp/t-system.windows.forms.k_0_2.cs)]\n [!code-vb[Classic KeyPressEventArgs Example#2](~/add/codesnippet/visualbasic/t-system.windows.forms.k_0_2.vb)]  \n  \n When the specified event is raised in the control, the attached method is called and the application can execute code in response to the event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyPressEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> classe."
  remarks: "Utilize o <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>propriedade para obter o estado atual das chaves modificador.</xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=fullName>"
  example:
  - The following example displays a message box that shows the current state of the SHIFT key.
  syntax:
    content: public KeyPressEventArgs (char keyChar);
    parameters:
    - id: keyChar
      type: System.Char
      description: "O correspondente à chave de carateres ASCII em que o utilizador premido."
  overload: System.Windows.Forms.KeyPressEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> evento foi processado."
  remarks: "Se o evento não é processado, serão enviada para o sistema operativo para o processamento de predefinição. Definir Handled `true` para cancelar o `KeyPress` eventos."
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_4_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_4_1.cpp)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o evento é processado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyPressEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  id: KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  langs:
  - csharp
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o caráter correspondente à chave premido."
  remarks: "Utilize a propriedade KeyChar batimentos de tecla de exemplo no tempo de execução e modificar batimentos de tecla circunstâncias especiais do tempo de execução. Por exemplo, pode utilizar KeyChar para desativar keypresses não numéricos quando o utilizador introduz um código postal, alterar keypresses alfabética com todos os em maiúsculas num campo de entrada de dados, ou monitorizar o teclado ou outro dispositivo de entrada chave para combinações de teclas específicos.       Pode obter ou definir as seguintes chaves: - a-z, A-Z.      -CTRL.      -Sinais de pontuação.      -Número de chaves, tanto na parte superior do teclado e no teclado numérico.      -INTRODUZA.       Não é possível obter ou definir as seguintes chaves:-tecla de tabulação o.      -INSERT e eliminar.      -INICIAL.      -END.      -PAGE UP e PAGE DOWN.      F1 F2.      -ALT.      -Teclas de seta.      > [!NOTE] > Para obter informações sobre como detetar qualquer uma das chaves de caráter não mencionadas acima, consulte a <xref:System.Windows.Forms.KeyEventArgs>classe.</xref:System.Windows.Forms.KeyEventArgs>      -"
  example:
  - "The following example creates a <xref:System.Windows.Forms.TextBox> control. The `keypressed` method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> property is set to `true`, which indicates the event is handled.  \n  \n [!code-vb[KeyPressEventArgs#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_2_1.vb)]\n [!code-cs[KeyPressEventArgs#1](~/add/codesnippet/csharp/p-system.windows.forms.k_2_1.cs)]\n [!code-cpp[KeyPressEventArgs#1](~/add/codesnippet/cpp/p-system.windows.forms.k_2_1.cpp)]"
  syntax:
    content: public char KeyChar { get; set; }
    return:
      type: System.Char
      description: "O caráter de ASCII que é composto. Por exemplo, se o utilizador prime SHIFT + K, esta propriedade devolve um k maiúsculas"
  overload: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs(Char)
  nameWithType: KeyPressEventArgs.KeyPressEventArgs(Char)
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyPressEventArgs(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.KeyPressEventArgs.Handled
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
  fullName: System.Windows.Forms.KeyPressEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
  fullName: System.Windows.Forms.KeyPressEventArgs.KeyChar
- uid: System.Windows.Forms.KeyPressEventArgs.#ctor*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs.KeyPressEventArgs
- uid: System.Windows.Forms.KeyPressEventArgs.Handled*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyPressEventArgs.Handled
- uid: System.Windows.Forms.KeyPressEventArgs.KeyChar*
  parent: System.Windows.Forms.KeyPressEventArgs
  isExternal: false
  name: KeyChar
  nameWithType: KeyPressEventArgs.KeyChar
