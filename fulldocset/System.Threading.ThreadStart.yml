### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadStart
  id: ThreadStart
  langs:
  - csharp
  name: ThreadStart
  nameWithType: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  summary: "Representa o método que executa num <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  remarks: "Quando é criado um thread gerido, o método que executa no thread é representado por um delegado ThreadStart ou um <xref:System.Threading.ParameterizedThreadStart>delegado que é transferido para o <xref:System.Threading.Thread.%23ctor%2A>construtor.</xref:System.Threading.Thread.%23ctor%2A> </xref:System.Threading.ParameterizedThreadStart> O thread não começa a execução até o <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>método é chamado.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName> Execução começa com a primeira linha do método representado pelo ThreadStart ou <xref:System.Threading.ParameterizedThreadStart>Delegar.</xref:System.Threading.ParameterizedThreadStart>      > [!NOTE] > Utilizadores Visual Basic e c#, podem omitir o ThreadStart ou <xref:System.Threading.ParameterizedThreadStart>Construtor de delegado durante a criação de um thread.</xref:System.Threading.ParameterizedThreadStart> No Visual Basic, utilize o `AddressOf` operador ao transmitir o seu método para o <xref:System.Threading.Thread.%23ctor%2A>construtor; por exemplo, `Dim t As New Thread(AddressOf ThreadProc)`.</xref:System.Threading.Thread.%23ctor%2A> Em c#, basta especificar o nome do procedimento de thread. O compilador seleciona o construtor de delegado correto.       [C++] > [!NOTE] > na versão 2.0 do .NET Framework, a criação de um delegado ThreadStart para um método estático em C++ requer apenas um parâmetro: o endereço do método de chamada de retorno, qualificado pelo nome de classe. Em versões anteriores dois parâmetros eram necessários durante a criação de um delegado para um método estático: zero (nulo) e o endereço de método. Para um método de instância, todas as versões de exigem dois parâmetros: a variável de instância e o endereço de método."
  example:
  - "The following code example shows the syntax for creating and using a ThreadStart delegate with an instance method and with a static method.  \n  \n For another simple example that demonstrates how to create a ThreadStart delegate, see the <xref:System.Threading.Thread.Start?displayProperty=fullName> method overload. For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Threading.ThreadStart2#1](~/add/codesnippet/cpp/t-system.threading.threa_6_1.cpp)]\n [!code-cs[System.Threading.ThreadStart2#1](~/add/codesnippet/csharp/t-system.threading.threa_6_1.cs)]\n [!code-vb[System.Threading.ThreadStart2#1](~/add/codesnippet/visualbasic/t-system.threading.threa_6_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void ThreadStart();
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
