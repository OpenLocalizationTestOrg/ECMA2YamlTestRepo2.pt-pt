### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "Direitos de controlos para aceder a recursos de Internet de HTTP."
  remarks: "WebPermission fornece um conjunto de métodos e propriedades para controlar o acesso aos recursos da Internet. Pode utilizar um WebPermission para fornecer acesso restrito ou sem restrições para o recurso, com base no <xref:System.Security.Permissions.PermissionState>que é definida quando o WebPermission é criado.</xref:System.Security.Permissions.PermissionState>       Criar uma instância de WebPermission ao chamar o construtor utilizando um dos seguintes conjuntos de parâmetros:-sem parâmetros. A predefinição <xref:System.Security.Permissions.PermissionState>é <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> Especifique o <xref:System.Security.Permissions.PermissionState>para permitir que qualquer URI a ser utilizado na classe de destino, ou <xref:System.Security.Permissions.PermissionState>para permitir o acesso apenas a URIs que especificou através da utilização do <xref:System.Net.WebPermission.AddPermission%2A>método.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A <xref:System.Net.NetworkAccess>valor e uma cadeia URI.</xref:System.Net.NetworkAccess> O URI especificado tem permissões concedidas à <xref:System.Net.NetworkAccess>valor.</xref:System.Net.NetworkAccess>      -A <xref:System.Net.NetworkAccess>Especificador e a expressão regular de URI.</xref:System.Net.NetworkAccess>       O <xref:System.Net.WebPermission.ConnectList%2A>e <xref:System.Net.WebPermission.AcceptList%2A>Reter URIs aos quais concedeu permissão de acesso.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> Para adicionar um URI para qualquer uma destas listas, utilize <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> Se passa <xref:System.Net.NetworkAccess>como o <xref:System.Net.NetworkAccess>parâmetro, o URI será adicionado ao <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission irá permitir ligações para a classe de destino com os URIs correspondente <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>      > [!CAUTION] > Para negar o acesso a um recurso de Internet, tem de negar o acesso a todos os caminhos de possíveis para esse recurso. Isto requer que <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>com o parâmetro de estado definido como <xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A> </xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> Uma abordagem de melhor é permitir o acesso ao recurso específico apenas. Para obter mais informações sobre este assunto, consulte o [NIB: utilizando o método negar](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) tópico.      > [!NOTE] > Precisa de negar o acesso utilizando apenas o caminho de canónico do recurso. Não é necessário utilizar variações syntactical do caminho.      > [!NOTE] > Informações de porta de nome e a predefinição do utilizador são eliminadas do <xref:System.Uri>antes da comparação com o argumento de expressão regular fornecida para o <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>construtor.</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> Se a expressão regular contém informações de utilizador ou o número de porta predefinido, em seguida, todos os entrada <xref:System.Uri>s irão falhar corresponder à expressão regular.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe."
  remarks: "Cria uma nova instância de <xref:System.Net.WebPermission>classe.</xref:System.Net.WebPermission> Este construtor cria uma permissão vazia que não concede quaisquer direitos."
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe passa em todos os imperativas ou todas as exigências de falha."
  remarks: "O valor da `state` parâmetro está <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>ou <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, respetivamente gerar resultados totalmente restrito ou totalmente acesso sem restrições para todas as variáveis de segurança.</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> Se especificar <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, em seguida, pode conceder acesso de URIs individuais utilizando <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe com os direitos de acesso especificado para o URI especificado."
  remarks: "Este construtor inicializa um <xref:System.Net.WebPermission>e concede a permissão de destino para se tornar remoto alojar ligação ou aceitar uma ligação de anfitrião remoto utilizando o URI descrito através do `uriString` parâmetro.</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Um valor de NetworkAccess que indica o tipo de acesso para conceder para o URI especificado. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica que a aplicação está autorizada a aceitar ligações a partir da Internet num recurso local. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica que a aplicação tem permissão para ligar a recursos de Internet específicos."
    - id: uriString
      type: System.String
      description: "Uma cadeia URI para que o acesso são concedidos direitos."
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe com os direitos de acesso especificado para a expressão regular de URI especificada."
  remarks: "Este construtor inicializa um <xref:System.Net.WebPermission>e concede a permissão de destino para se tornar remoto alojar ligação ou aceitar uma ligação de anfitrião remoto utilizando o URI descrito através do `uriRegex`parâmetro.</xref:System.Net.WebPermission>      > [!NOTE] > É recomendado que crie `uriRegex` utilizando o <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, e <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>sinalizadores.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > Um candidato a cadeia URI é verificado com a lista de expressões regulares relevantes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de duas formas.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Em primeiro lugar, o cadeia URI do candidato é verificado face à lista de adequadas; em seguida, se não houver nenhuma correspondência, o candidate cadeia URI é convertido para um <xref:System.Uri>e verificado face à lista de adequado.</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> valor que indica o tipo de acesso para conceder para o URI especificado. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica que a aplicação está autorizada a aceitar ligações a partir da Internet num recurso local. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica que a aplicação tem permissão para ligar a recursos de Internet específicos."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Uma expressão regular que descreve o URI para o qual o acesso é para ser concedido."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Esta propriedade devolve uma enumeração de um único aceitar permissões contidas por este <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Os objetos possíveis são tipos contidos na enumeração devolvida <xref:System.String>e &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Esta propriedade obtém uma lista de recursos locais permitidos pela <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> A classe a que aplicou <xref:System.Net.WebPermission>só tem permissão para receber uma ligação recebida aos recursos locais encontrado nesta lista.</xref:System.Net.WebPermission>      > [!NOTE] > Pode adicionar os URIs a esta lista utilizando <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Um candidato a cadeia URI é verificado com a lista de expressões regulares relevantes (AcceptList ou <xref:System.Net.WebPermission.ConnectList%2A>) de duas formas.</xref:System.Net.WebPermission.ConnectList%2A> Em primeiro lugar, o cadeia URI do candidato é verificado face à lista de adequadas; em seguida, se não houver nenhuma correspondência, o candidate cadeia URI é convertido para um <xref:System.Uri>e verificado face à lista de adequado.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "O <xref:System.Collections.IEnumerator>interface contém aceitar permissões.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Adiciona a cadeia URI especificada com os direitos de acesso especificado para o atual <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Se tiver especificado <xref:System.Security.Permissions.PermissionState>como o <xref:System.Security.Permissions.PermissionState>, utilize AddPermission para permitir a utilização de `uriString` na classe de destino.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> A forma que `uriString` pode ser utilizado de destino da classe especificada pela `access`. Especifique <xref:System.Net.NetworkAccess>como o parâmetro de acesso para adicionar o URI especificado pelo `uriString` parâmetro à lista de URI aceitar as cadeias ou especifique <xref:System.Net.NetworkAccess>como o acesso de parâmetro para adicionar o URI à lista de URI ligar cadeias.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Chamar AddPermission no <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>não tem qualquer efeito, porque a permissão é concedida a todos os URIs.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      > [!NOTE] > Um candidato a cadeia URI é verificado com a lista de expressões regulares relevantes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de duas formas.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Em primeiro lugar, o cadeia URI do candidato é verificado face à lista de adequadas; em seguida, se não houver nenhuma correspondência, o candidate cadeia URI é convertido para um <xref:System.Uri>e verificado face à lista de adequado.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> que especifica os direitos de acesso que são concedidos para o URI."
    - id: uriString
      type: System.String
      description: "Uma cadeia que descreve o URI para que o acesso são concedidos direitos."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Adiciona o URI especificado com os direitos de acesso especificado para o atual <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Se tiver especificado <xref:System.Security.Permissions.PermissionState>como o <xref:System.Security.Permissions.PermissionState>, utilize <xref:System.Net.WebPermission.AddPermission%2A>para permitir a utilização de `uriRegex` na classe de destino.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Especifique <xref:System.Net.NetworkAccess>como o `access` parâmetro para adicionar o URI especificado pelo `uriRegex` parâmetro à lista de URI aceitar as cadeias ou especifique <xref:System.Net.NetworkAccess>como o acesso de parâmetro para adicionar o URI à lista de URI ligar cadeias.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Chamar <xref:System.Net.WebPermission.AddPermission%2A>num <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>instância não tem qualquer efeito como permissão é concedida a todos os URIs.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > É recomendado que crie `uriRegex` utilizando o <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, e <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>sinalizadores.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > Um candidato a cadeia URI é verificado com a lista de expressões regulares relevantes (<xref:System.Net.WebPermission.AcceptList%2A> ou <xref:System.Net.WebPermission.ConnectList%2A>) de duas formas.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Em primeiro lugar, o cadeia URI do candidato é verificado face à lista de adequadas; em seguida, se não houver nenhuma correspondência, o candidate cadeia URI é convertido para um <xref:System.Uri>e verificado face à lista de adequado.</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "NetworkAccess que especifica os direitos de acesso que são concedidos para o URI."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Uma expressão regular que descreve o conjunto de URIs para que o acesso são concedidos direitos."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Esta propriedade devolve uma enumeração de um único ligar permissões contidas por este <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Os objetos possíveis são tipos contidos na enumeração devolvida <xref:System.String>e &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Esta propriedade obtém uma lista dos recursos remotos que sejam permitidos pela <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> A classe a que aplicou <xref:System.Net.WebPermission>só tem permissão para estabelecer ligação com os recursos localizados nesta lista.</xref:System.Net.WebPermission>      > [!NOTE] > Pode adicionar os URIs a esta lista utilizando <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Um candidato a cadeia URI é verificado com a lista de expressões regulares relevantes (<xref:System.Net.WebPermission.AcceptList%2A> ou ConnectList) de duas formas.</xref:System.Net.WebPermission.AcceptList%2A> Em primeiro lugar, o cadeia URI do candidato é verificado face à lista de adequadas; em seguida, se não houver nenhuma correspondência, o candidate cadeia URI é convertido para um <xref:System.Uri>e verificado face à lista de adequado.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "O <xref:System.Collections.IEnumerator>permissões de ligação de interface que contém.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma cópia de um <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "O <xref:System.Security.IPermission>devolvidos por esta representa método o mesmo acesso a recursos que o original <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> </xref:System.Security.IPermission> Este método substitui <xref:System.Security.CodeAccessPermission.Copy%2A>e implementados para suportar o <xref:System.Security.IPermission>interface.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Uma nova instância do <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe que possui os mesmos valores que o original."
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Reconstructs um <xref href=&quot;System.Net.WebPermission&quot;> </xref> de uma codificação de XML."
  remarks: "O método FromXml reconstructs um <xref:System.Net.WebPermission>de uma codificação XML que é definido pela <xref:System.Security.SecurityElement>classe.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission>       Utilize o <xref:System.Net.WebPermission.ToXml%2A>método para codificar o XML de <xref:System.Net.WebPermission>, incluindo informações de estado.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A codificação XML partir do qual reconstrua o <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> securityElement </code> é o parâmetro<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>Não é um elemento de permissão para este tipo."
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Devolve a intersecção de dois lógica <xref href=&quot;System.Net.WebPermission&quot;> </xref> instâncias."
  remarks: "Intersect devolve um <xref:System.Net.WebPermission>que contenha essas permissões que são comuns em ambos `target` e a instância atual.</xref:System.Net.WebPermission>       Este método substitui <xref:System.Security.CodeAccessPermission.Intersect%2A>e implementados para suportar o <xref:System.Security.IPermission>interface.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "O <xref href=&quot;System.Net.WebPermission&quot;> </xref> para comparar com a instância atual."
    return:
      type: System.Security.IPermission
      description: "Um novo <xref href=&quot;System.Net.WebPermission&quot;> </xref> que representa a interseção da instância atual e o <code> target </code> parâmetro. O método devolve a interseção estiver vazia, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>Não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou do tipo<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Determina se atual <xref href=&quot;System.Net.WebPermission&quot;> </xref> é um subconjunto do objeto especificado."
  remarks: "Se atual <xref:System.Net.WebPermission>Especifica um conjunto de recursos associados que detida está contido pelo `target` parâmetro, em seguida, atual <xref:System.Net.WebPermission>é um subconjunto de `target`.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> Este método substitui IsSubsetOf e implementado para suportar o <xref:System.Security.IPermission>interface.</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "O <xref href=&quot;System.Net.WebPermission&quot;> </xref> para comparar a atual <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instância atual é um subconjunto do <code> target </code> parâmetro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se o destino é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> uma permissão atual vazia que não é restrita e <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário."
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O parâmetro de destino não é uma instância de <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A instância atual contém um direito de Regex codificados e não existe não é exatamente o mesmo direito encontrado na instância de destino."
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Verifica o estado de permissão geral a <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Se <xref:System.Net.WebPermission>é <xref:System.Security.Permissions.PermissionState>, em seguida, a classe de destino, pode utilizar todos os URIs.</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> Caso contrário, a permissão específica deve ser dada para qualquer URI que pretende utilizar com a classe de destino.      > [!NOTE] > Utilize <xref:System.Net.WebPermission.AddPermission%2A>para adicionar um URI e especifique as respetivas permissões.</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria uma codificação XML de um <xref href=&quot;System.Net.WebPermission&quot;> </xref> e o respetivo estado atual."
  remarks: "Utilize o <xref:System.Net.WebPermission.FromXml%2A>método para restaurar as informações de estado de um <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> que contém uma representação XML codificado o <xref href=&quot;System.Net.WebPermission&quot;> </xref>, incluindo informações de estado."
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Devolve a união lógica entre as duas instâncias do <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe."
  remarks: "Devolve a União um <xref:System.Net.WebPermission>que contém todas as permissões no `target` e a instância atual.</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "O <xref href=&quot;System.Net.WebPermission&quot;> </xref> combinar com atual <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> que representa a União da instância atual e o <code> target </code> parâmetro. If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. Se o destino é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o método devolve uma cópia da atual <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "o destino não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou tipo <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
