### YamlMime:ManagedReference
items:
- uid: System.Transactions.IEnlistmentNotification
  id: IEnlistmentNotification
  children:
  - System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  - System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  - System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  langs:
  - csharp
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
  type: Interface
  summary: "Descreve uma interface que deve implementar um Gestor de recursos para fornecer duas fase consolidar notificação chamadas de retorno para o Gestor de transações após inscrever para participação."
  remarks: "Ordem de um Gestor de recursos a participar numa transação, deve inscrever na transação através do Gestor de transações. O <xref:System.Transactions.Transaction>classe define um conjunto de métodos cujos nomes começam por `Enlist` que fornecem esta funcionalidade.</xref:System.Transactions.Transaction> Os diferentes `Enlist` métodos correspondem aos tipos diferentes de inscrição pode ter um maanger de recursos.       Esta classe descreve uma interface que deve implementar um Gestor de recursos para fornecer duas fase consolidar notificação chamadas de retorno para o Gestor de transações após inscrever para participação. Para implementação de cada gestor de recursos da IEnlistmentNotification interface, deve inscrevê-la utilizando o <xref:System.Transactions.Transaction.EnlistVolatile%2A>método ou <xref:System.Transactions.Transaction.EnlistDurable%2A>método do <xref:System.Transactions.Transaction>classe, dependendo se o seu recurso é voláteis ou durável.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A> Para obter mais informações sobre a inscrição e 2PC, consulte [inscrever recursos como participantes numa transação](~/add/includes/ajax-current-ext-md.md) e [consolidar uma transação em Single-Phase e fase Multi](~/add/includes/ajax-current-ext-md.md) respetivamente.       O Gestor de transações notifica o objeto inscritas em diferentes fases do protocolo de consolidação de fase dois através dos seguintes métodos.      | Método | Descrição |   |------------|-----------------|   | <xref:System.Transactions.IEnlistmentNotification.Prepare%2A>| Este método de um objeto inscritas é utilizado como uma chamada de retorno pelo Gestor de transações durante a primeira fase de uma transação, quando o Gestor de transações pede-lhe participantes se estes podem consolidar a transação. |   | <xref:System.Transactions.IEnlistmentNotification.Commit%2A>| Este método de um objeto inscritas é utilizado como uma chamada de retorno pelo Gestor de transações durante a segunda fase de uma transação se a transação está consolidado. |   | <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>| Este método de um objeto inscritas é utilizado como uma chamada de retorno pelo Gestor de transações durante a segunda fase de uma transação se a transação foi abortada (que é, revertida). |   | <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>| Este método de um objeto inscritas é utilizado como uma chamada de retorno pelo Gestor de transações durante a segunda fase de uma transação se a transação está em dúvida. |      > [!NOTE] > Deve estar ciente de que não podem ser enviadas notificações sequencialmente, ou por uma ordem específica.</xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> </xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A> </xref:System.Transactions.IEnlistmentNotification.Prepare%2A>"
  example:
  - "The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.  \n  \n [!code-cs[Tx_Enlist#1](~/add/codesnippet/csharp/t-system.transactions.ie_1.cs)]\n [!code-vb[Tx_Enlist#1](~/add/codesnippet/visualbasic/t-system.transactions.ie_1.vb)]"
  syntax:
    content: public interface IEnlistmentNotification
  implements: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  id: Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Notifica um inscritas objeto que está a ser consolidada uma transação."
  remarks: "O Gestor de transações chama este método de um objeto inscritas durante a segunda fase de um compromisso, quando dá instruções ao para todos os participantes para consolidar a transação.       O Gestor de recursos deve efetuar o trabalho necessário para concluir a transação e, em seguida, informar sobre a gt concluiu a ser chamando a <xref:System.Transactions.Enlistment.Done%2A>método no `enlistment` parâmetro.</xref:System.Transactions.Enlistment.Done%2A>       Se o Gestor de recursos tem inscrita de forma durável, mas não responder ao chamar <xref:System.Transactions.Enlistment.Done%2A>método, o Gestor de transações é não souber de que o Gestor de recursos recebeu a chamada de confirmação.</xref:System.Transactions.Enlistment.Done%2A> Como tal, o Gestor de transações mantém a aguardar uma resposta e mantém as informações relevantes para esta transação.  Se <xref:System.Transactions.Enlistment.Done%2A>é nunca chama, este elemento de informação é mantido em torno indefinidamente na memória ou num recurso de sistema.</xref:System.Transactions.Enlistment.Done%2A> Isto resulta em recursos a ser recuperada. No caso de uma transação distribuída, isto pode preencher eventualmente o registo MSDTC que forem o processo MSDTC. No caso de uma transação gerida pelo <xref:System.Transactions>, isto resulta num aumento gradual e expedição no consumo de memória do processo do Gestor de recursos.</xref:System.Transactions> Por conseguinte, é fundamental que chamar a <xref:System.Transactions.Enlistment.Done%2A>método depois do Gestor de recursos é feito com a preparar o trabalho.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Commit (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "Um <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objecto utilizado para enviar uma resposta para o Gestor de transações."
  overload: System.Transactions.IEnlistmentNotification.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  id: InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Notifica um objeto inscritas que o estado de uma transação está em dúvida."
  remarks: "Este método é denominado recursos volátil quando o Gestor de transações foi invocada uma operação única fase de confirmação para um único recurso durável e, em seguida, perdeu a ligação ao recurso durável antes de obter o resultado da transação. Nessa altura, o resultado da transação não é possível em segurança determinar.       Como InDoubt é considerada um estado final de uma transação, não deve chamar <xref:System.Transactions.IEnlistmentNotification.Commit%2A>ou <xref:System.Transactions.IEnlistmentNotification.Rollback%2A>depois de chamar InDoubt.</xref:System.Transactions.IEnlistmentNotification.Rollback%2A> </xref:System.Transactions.IEnlistmentNotification.Commit%2A>      > [!NOTE] > A implementação deste método para o recurso volátil deve executar qualquer operação de recuperação ou contenção compreende os dados afetados.  Também tem de chamar o <xref:System.Transactions.Enlistment.Done%2A>método no no `enlistment` parâmetro quando tiver concluído o trabalho.</xref:System.Transactions.Enlistment.Done%2A>       Se o Gestor de recursos tem inscrita de forma durável, mas não responder ao chamar <xref:System.Transactions.Enlistment.Done%2A>método, o Gestor de transações é não souber de que o Gestor de recursos recebeu a chamada de InDoubt.</xref:System.Transactions.Enlistment.Done%2A> Como tal, o Gestor de transações mantém a aguardar uma resposta e mantém as informações relevantes para esta transação.  Se <xref:System.Transactions.Enlistment.Done%2A>é nunca chama, este elemento de informação é mantido em torno indefinidamente na memória ou num recurso de sistema.</xref:System.Transactions.Enlistment.Done%2A> Isto resulta em recursos a ser recuperada. No caso de uma transação distribuída, isto pode preencher eventualmente o registo MSDTC que forem o processo MSDTC. No caso de uma transação gerida pelo <xref:System.Transactions>, isto resulta num aumento gradual e expedição no consumo de memória do processo do Gestor de recursos.</xref:System.Transactions> Por conseguinte, é fundamental que chamar a <xref:System.Transactions.Enlistment.Done%2A>método depois do Gestor de recursos é feito com a preparar o trabalho.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void InDoubt (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "Um <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objecto utilizado para enviar uma resposta para o Gestor de transações."
  overload: System.Transactions.IEnlistmentNotification.InDoubt*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  id: Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Notifica um objeto inscritas que uma transação está a ser preparada para o compromisso."
  remarks: "O Gestor de transações chama este método de um recurso inscritas manager durante a fase 1 de um compromisso, quando este pede-lhe participantes se estes podem consolidar a transação.       Quando estiver a implementar um Gestor de recursos durável, deve iniciar sessão a preparar o registo durante esta fase. O registo deve conter todas as informações necessárias para efetuar a recuperação. Isto inclui o <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>propriedade, o que é transferida para o Gestor de transações no <xref:System.Transactions.TransactionManager.Reenlist%2A>método durante a recuperação.</xref:System.Transactions.TransactionManager.Reenlist%2A> </xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> Para obter mais informações sobre a recuperação, consulte [efetuar recuperação](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).       O Gestor de recursos deve concluir todo o trabalho que tem de ser concluído antes de chamar o <xref:System.Transactions.PreparingEnlistment.Prepared%2A>método o `preparingEnlistment` parâmetro para indicar o voto de compromisso.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Certifique-se de que isto é conseguido antes de receber as notificações de fase 2 tais como consolidar reversão ou em dúvida. Isto acontece porque as notificações de fase 2 podem acontecer inline no mesmo thread que chamada o <xref:System.Transactions.PreparingEnlistment.Prepared%2A>método fase 1.</xref:System.Transactions.PreparingEnlistment.Prepared%2A> Como tal, não deve fazer qualquer trabalho após o <xref:System.Transactions.PreparingEnlistment.Prepared%2A>chamada (por exemplo, libertar bloqueios) que seria de esperar para concluir antes de receber as notificações de fase 2.</xref:System.Transactions.PreparingEnlistment.Prepared%2A>       Também pode chamar o método do `preparingEnlistment` parâmetro para indicar um voto de reversão.       Se pretender que o objeto simplesmente observar e reagir ao progresso da transação, sem a participar no mesmo, a implementação deste método deve chamar o <xref:System.Transactions.Enlistment.Done%2A>método o `preparingEnlistment` parâmetro quando tiver concluído o trabalho.</xref:System.Transactions.Enlistment.Done%2A> Ao fazê-lo, o Gestor de recursos não seria receber as notificações de fase 2."
  syntax:
    content: public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);
    parameters:
    - id: preparingEnlistment
      type: System.Transactions.PreparingEnlistment
      description: "A <xref href=&quot;System.Transactions.PreparingEnlistment&quot;> </xref> objecto utilizado para enviar uma resposta para o Gestor de transações."
  overload: System.Transactions.IEnlistmentNotification.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  id: Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  langs:
  - csharp
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Notifica um objeto inscritas que uma transação está a ser revertida (abortada)."
  remarks: "O Gestor de transações chama este método de um objeto inscritas quando a transação está a ser revertida (abortada) devido a incapacidade de participantes de transação de um ou mais para consolidar a transação.       O Gestor de recursos deve efetuar o trabalho necessário para concluir a transação e, em seguida, informar sobre a gt concluiu a ser chamando a <xref:System.Transactions.Enlistment.Done%2A>método no `enlistment` parâmetro.</xref:System.Transactions.Enlistment.Done%2A>       Se o Gestor de recursos tem inscrita de forma durável, mas não responder ao chamar <xref:System.Transactions.Enlistment.Done%2A>método, o Gestor de transações é não souber de que o Gestor de recursos recebeu a chamada de reversão.</xref:System.Transactions.Enlistment.Done%2A> Como tal, o Gestor de transações mantém a aguardar uma resposta e mantém as informações relevantes para esta transação.  Se <xref:System.Transactions.Enlistment.Done%2A>é nunca chama, este elemento de informação é mantido em torno indefinidamente na memória ou num recurso de sistema.</xref:System.Transactions.Enlistment.Done%2A> Isto resulta em recursos a ser recuperada. No caso de uma transação distribuída, isto pode preencher eventualmente o registo MSDTC que forem o processo MSDTC. No caso de uma transação gerida pelo <xref:System.Transactions>, isto resulta num aumento gradual e expedição no consumo de memória do processo do Gestor de recursos.</xref:System.Transactions> Por conseguinte, é fundamental que chamar a <xref:System.Transactions.Enlistment.Done%2A>método depois do Gestor de recursos é feito com a preparar o trabalho.</xref:System.Transactions.Enlistment.Done%2A>"
  syntax:
    content: public void Rollback (System.Transactions.Enlistment enlistment);
    parameters:
    - id: enlistment
      type: System.Transactions.Enlistment
      description: "A <xref href=&quot;System.Transactions.Enlistment&quot;> </xref> objecto utilizado para enviar uma resposta para o Gestor de transações."
  overload: System.Transactions.IEnlistmentNotification.Rollback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit(Enlistment)
  nameWithType: IEnlistmentNotification.Commit(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Commit(Enlistment)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt(Enlistment)
  nameWithType: IEnlistmentNotification.InDoubt(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.InDoubt(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare(PreparingEnlistment)
  nameWithType: IEnlistmentNotification.Prepare(PreparingEnlistment)
  fullName: System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment)
- uid: System.Transactions.PreparingEnlistment
  parent: System.Transactions
  isExternal: false
  name: PreparingEnlistment
  nameWithType: PreparingEnlistment
  fullName: System.Transactions.PreparingEnlistment
- uid: System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback(Enlistment)
  nameWithType: IEnlistmentNotification.Rollback(Enlistment)
  fullName: System.Transactions.IEnlistmentNotification.Rollback(Enlistment)
- uid: System.Transactions.IEnlistmentNotification.Commit*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Commit
  nameWithType: IEnlistmentNotification.Commit
- uid: System.Transactions.IEnlistmentNotification.InDoubt*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: InDoubt
  nameWithType: IEnlistmentNotification.InDoubt
- uid: System.Transactions.IEnlistmentNotification.Prepare*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Prepare
  nameWithType: IEnlistmentNotification.Prepare
- uid: System.Transactions.IEnlistmentNotification.Rollback*
  parent: System.Transactions.IEnlistmentNotification
  isExternal: false
  name: Rollback
  nameWithType: IEnlistmentNotification.Rollback
