### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Utilities.ToolTask
  id: ToolTask
  children:
  - Microsoft.Build.Utilities.ToolTask.#ctor
  - Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)
  - Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)
  - Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute
  - Microsoft.Build.Utilities.ToolTask.Cancel
  - Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)
  - Microsoft.Build.Utilities.ToolTask.EchoOff
  - Microsoft.Build.Utilities.ToolTask.EnvironmentOverride
  - Microsoft.Build.Utilities.ToolTask.EnvironmentVariables
  - Microsoft.Build.Utilities.ToolTask.Execute
  - Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)
  - Microsoft.Build.Utilities.ToolTask.ExitCode
  - Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands
  - Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool
  - Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands
  - Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)
  - Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)
  - Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory
  - Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors
  - Microsoft.Build.Utilities.ToolTask.HasLoggedErrors
  - Microsoft.Build.Utilities.ToolTask.InitializeHostObject
  - Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)
  - Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)
  - Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError
  - Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)
  - Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding
  - Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)
  - Microsoft.Build.Utilities.ToolTask.SkipTaskExecution
  - Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding
  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportance
  - Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse
  - Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance
  - Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding
  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportance
  - Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse
  - Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance
  - Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout
  - Microsoft.Build.Utilities.ToolTask.Timeout
  - Microsoft.Build.Utilities.ToolTask.ToolCanceled
  - Microsoft.Build.Utilities.ToolTask.ToolExe
  - Microsoft.Build.Utilities.ToolTask.ToolName
  - Microsoft.Build.Utilities.ToolTask.ToolPath
  - Microsoft.Build.Utilities.ToolTask.UseCommandProcessor
  - Microsoft.Build.Utilities.ToolTask.ValidateParameters
  - Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution
  langs:
  - csharp
  name: ToolTask
  nameWithType: ToolTask
  fullName: Microsoft.Build.Utilities.ToolTask
  type: Class
  summary: "When overridden in a derived form, provides functionality for a task that wraps a command line tool."
  remarks: "This abstract class provides default implementations for the methods and properties of a task that wraps a command line tool."
  example:
  - "The following example creates a ToolTask that runs [Ilasm.exe (IL Assembler)](~/add/includes/ajax-current-ext-md.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-cs[msbuild_ToolTask#1](~/add/codesnippet/csharp/ILAsm/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/add/codesnippet/visualbasic/ILAsmVB/ILAsm.vb#1)]"
  syntax:
    content: 'public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  implements:
  - Microsoft.Build.Framework.ICancelableTask
  inheritedMembers:
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.Log
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolTask()
  nameWithType: ToolTask.ToolTask()
  fullName: Microsoft.Build.Utilities.ToolTask.ToolTask()
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Build.Utilities.ToolTask&quot;></xref> class."
  syntax:
    content: protected ToolTask ();
    parameters: []
  overload: Microsoft.Build.Utilities.ToolTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)
  id: '#ctor(System.Resources.ResourceManager)'
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolTask(ResourceManager)
  nameWithType: ToolTask.ToolTask(ResourceManager)
  fullName: Microsoft.Build.Utilities.ToolTask.ToolTask(ResourceManager)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Build.Utilities.ToolTask&quot;></xref> class with the specified <xref:System.Resources.ResourceManager>."
  syntax:
    content: protected ToolTask (System.Resources.ResourceManager taskResources);
    parameters:
    - id: taskResources
      type: System.Resources.ResourceManager
      description: "The <xref:System.Resources.ResourceManager> for task resources."
  overload: Microsoft.Build.Utilities.ToolTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)
  id: '#ctor(System.Resources.ResourceManager,System.String)'
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolTask(ResourceManager,String)
  nameWithType: ToolTask.ToolTask(ResourceManager,String)
  fullName: Microsoft.Build.Utilities.ToolTask.ToolTask(ResourceManager,String)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Build.Utilities.ToolTask&quot;></xref> class with the specified <xref:System.Resources.ResourceManager> and Help keyword prefix."
  syntax:
    content: protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);
    parameters:
    - id: taskResources
      type: System.Resources.ResourceManager
      description: "The <xref:System.Resources.ResourceManager> for task resources."
    - id: helpKeywordPrefix
      type: System.String
      description: "The Help keyword to use for messages raised by the task."
  overload: Microsoft.Build.Utilities.ToolTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute
  id: CallHostObjectToExecute
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: CallHostObjectToExecute()
  nameWithType: ToolTask.CallHostObjectToExecute()
  fullName: Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Calls the host object to perform the work of the task."
  syntax:
    content: protected virtual bool CallHostObjectToExecute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the method was successfule; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.Cancel
  id: Cancel
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: Cancel()
  nameWithType: ToolTask.Cancel()
  fullName: Microsoft.Build.Utilities.ToolTask.Cancel()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination."
  syntax:
    content: public virtual void Cancel ();
    parameters: []
  overload: Microsoft.Build.Utilities.ToolTask.Cancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)
  id: DeleteTempFile(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: DeleteTempFile(String)
  nameWithType: ToolTask.DeleteTempFile(String)
  fullName: Microsoft.Build.Utilities.ToolTask.DeleteTempFile(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Deletes the specified temporary file."
  remarks: "If the delete operation fails for any reason (such as if a file is locked by antivirus software), then this method logs a warning rather than throwing an exception, which would cause the build to fail."
  syntax:
    content: protected void DeleteTempFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "The name of the temporary file to delete."
  overload: Microsoft.Build.Utilities.ToolTask.DeleteTempFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.EchoOff
  id: EchoOff
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: EchoOff
  nameWithType: ToolTask.EchoOff
  fullName: Microsoft.Build.Utilities.ToolTask.EchoOff
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Indicates that command line echoing is turned off."
  remarks: "MSBuild turns off command line echoing by passing /Q on the cmd.exe command line."
  syntax:
    content: public bool EchoOff { get; set; }
    return:
      type: System.Boolean
      description: "True when command line echo is off."
  overload: Microsoft.Build.Utilities.ToolTask.EchoOff*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.EnvironmentOverride
  id: EnvironmentOverride
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: EnvironmentOverride
  nameWithType: ToolTask.EnvironmentOverride
  fullName: Microsoft.Build.Utilities.ToolTask.EnvironmentOverride
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets a set of environment variable name-value pairs. Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool."
  remarks: "The ExecuteTool method passes these environment variables to the StartInfo of the process in which the tool executes. Any environment variables not included in the EnvironmentOverride dictionary are inherited from the process in which the ExecuteTool method executes."
  example:
  - "```  \nusing System;  \nusing Microsoft.Build.Utilities;  \nusing System.Collections.Specialized;  \n  \n/// <summary>  \n/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  \n/// to the Path environment variable of the process being executed  \n/// </summary>  \nabstract class CustomToolTask : ToolTask  \n{  \n      protected override StringDictionary EnvironmentOverride  \n      {  \n            get  \n            {  \n                  string newPath = Environment.GetEnvironmentVariable(\"Path\", EnvironmentVariableTarget.Process) + @\";C:\\MyDirectory\";  \n                  StringDictionary result = new StringDictionary();  \n                  result.Add(\"Path\", newPath);  \n                  return result;  \n            }  \n      }  \n}  \n  \n```"
  syntax:
    content: protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Returns a set of environment variables. Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable. The default implementation of EnvironmentOverride returns null."
  overload: Microsoft.Build.Utilities.ToolTask.EnvironmentOverride*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.EnvironmentVariables
  id: EnvironmentVariables
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: EnvironmentVariables
  nameWithType: ToolTask.EnvironmentVariables
  fullName: Microsoft.Build.Utilities.ToolTask.EnvironmentVariables
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block."
  remarks: "Using this instead of EnvironmentOverride as that takes a StringDictionary, which cannot be set from an MSBuild project."
  syntax:
    content: public string[] EnvironmentVariables { get; set; }
    return:
      type: System.String[]
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.EnvironmentVariables*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.Execute
  id: Execute
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: Execute()
  nameWithType: ToolTask.Execute()
  fullName: Microsoft.Build.Utilities.ToolTask.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Runs the exectuable file with the specified task parameters."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the task runs successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Utilities.ToolTask.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)
  id: ExecuteTool(System.String,System.String,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ExecuteTool(String,String,String)
  nameWithType: ToolTask.ExecuteTool(String,String,String)
  fullName: Microsoft.Build.Utilities.ToolTask.ExecuteTool(String,String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Creates a temporoary response (.rsp) file and runs the executable file."
  syntax:
    content: protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);
    parameters:
    - id: pathToTool
      type: System.String
      description: "The path to the executable file."
    - id: responseFileCommands
      type: System.String
      description: "The command line arguments to place in the .rsp file."
    - id: commandLineCommands
      type: System.String
      description: "The command line arguments to pass directly to the executable file."
    return:
      type: System.Int32
      description: "The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1."
  overload: Microsoft.Build.Utilities.ToolTask.ExecuteTool*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ExitCode
  id: ExitCode
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ExitCode
  nameWithType: ToolTask.ExitCode
  fullName: Microsoft.Build.Utilities.ToolTask.ExitCode
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the returned exit code of the executable file."
  syntax:
    content: public int ExitCode { get; }
    return:
      type: System.Int32
      description: "The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1."
  overload: Microsoft.Build.Utilities.ToolTask.ExitCode*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands
  id: GenerateCommandLineCommands
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: GenerateCommandLineCommands()
  nameWithType: ToolTask.GenerateCommandLineCommands()
  fullName: Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns a string value containing the command line arguments to pass directly to the executable file."
  remarks: "This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>."
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/add/includes/ajax-current-ext-md.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-cs[msbuild_ToolTask#1](~/add/codesnippet/csharp/ILAsm/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/add/codesnippet/visualbasic/ILAsmVB/ILAsm.vb#1)]"
  syntax:
    content: protected virtual string GenerateCommandLineCommands ();
    parameters: []
    return:
      type: System.String
      description: "A string value containing the command line arguments to pass directly to the executable file."
  overload: Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool
  id: GenerateFullPathToTool
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: GenerateFullPathToTool()
  nameWithType: ToolTask.GenerateFullPathToTool()
  fullName: Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns the fully qualified path to the executable file."
  remarks: "This method returns the value of the <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> property if the tool is located in the system path."
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/add/includes/ajax-current-ext-md.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-cs[msbuild_ToolTask#1](~/add/codesnippet/csharp/ILAsm/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/add/codesnippet/visualbasic/ILAsmVB/ILAsm.vb#1)]"
  syntax:
    content: protected abstract string GenerateFullPathToTool ();
    parameters: []
    return:
      type: System.String
      description: "The fully qualified path to the executable file."
  overload: Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands
  id: GenerateResponseFileCommands
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: GenerateResponseFileCommands()
  nameWithType: ToolTask.GenerateResponseFileCommands()
  fullName: Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file."
  remarks: "This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>."
  syntax:
    content: protected virtual string GenerateResponseFileCommands ();
    parameters: []
    return:
      type: System.String
      description: "a string value containing the command line arguments to add to the response (.rsp) file before running the executable file."
  overload: Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)
  id: GetProcessStartInfo(System.String,System.String,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: GetProcessStartInfo(String,String,String)
  nameWithType: ToolTask.GetProcessStartInfo(String,String,String)
  fullName: Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(String,String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Initializes the information required to spawn the process executing the tool."
  syntax:
    content: protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);
    parameters:
    - id: pathToTool
      type: System.String
      description: "The path to the tool."
    - id: commandLineCommands
      type: System.String
      description: "The command line commands."
    - id: responseFileSwitch
      type: System.String
      description: "The response file switch."
    return:
      type: System.Diagnostics.ProcessStartInfo
      description: "The information required to start the process."
  overload: Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)
  id: GetResponseFileSwitch(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: GetResponseFileSwitch(String)
  nameWithType: ToolTask.GetResponseFileSwitch(String)
  fullName: Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns the command line switch used by the executable file to specifiy a response (.rsp) file."
  remarks: "This method is only called if <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> returns a non-empty string value.       This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> and <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>."
  syntax:
    content: protected virtual string GetResponseFileSwitch (string responseFilePath);
    parameters:
    - id: responseFilePath
      type: System.String
      description: "The full path to the temporary .rsp file."
    return:
      type: System.String
      description: "The command line switch used by the executable file to specifiy a response (.rsp) file."
  overload: Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory
  id: GetWorkingDirectory
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: GetWorkingDirectory()
  nameWithType: ToolTask.GetWorkingDirectory()
  fullName: Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns the directory in which to run the executable file."
  remarks: "This is a method rather than a property so that derived classes (like Exec) can choose to expose a public WorkingDirectory property, and it would be confusing to have two properties."
  syntax:
    content: protected virtual string GetWorkingDirectory ();
    parameters: []
    return:
      type: System.String
      description: "The directory in which to run the executable file, or a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]) if the executable file should be run in the current directory."
  overload: Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors
  id: HandleTaskExecutionErrors
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: HandleTaskExecutionErrors()
  nameWithType: ToolTask.HandleTaskExecutionErrors()
  fullName: Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Handles execution errors raised by the executable file."
  remarks: "This method is called only if the executable file returns a non-zero exit code.       The return value of this method is used as the return value of the task."
  syntax:
    content: protected virtual bool HandleTaskExecutionErrors ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the method runs successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.HasLoggedErrors
  id: HasLoggedErrors
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: HasLoggedErrors
  nameWithType: ToolTask.HasLoggedErrors
  fullName: Microsoft.Build.Utilities.ToolTask.HasLoggedErrors
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Whether this ToolTask has logged any errors"
  syntax:
    content: protected virtual bool HasLoggedErrors { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.HasLoggedErrors*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.InitializeHostObject
  id: InitializeHostObject
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: InitializeHostObject()
  nameWithType: ToolTask.InitializeHostObject()
  fullName: Microsoft.Build.Utilities.ToolTask.InitializeHostObject()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Initializes the host object of the task."
  syntax:
    content: protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();
    parameters: []
    return:
      type: Microsoft.Build.Utilities.HostObjectInitializationStatus
      description: "The <xref href=&quot;Microsoft.Build.Utilities.HostObjectInitializationStatus&quot;></xref> of the host object."
  overload: Microsoft.Build.Utilities.ToolTask.InitializeHostObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)
  id: LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: LogEventsFromTextOutput(String,MessageImportance)
  nameWithType: ToolTask.LogEventsFromTextOutput(String,MessageImportance)
  fullName: Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(String,MessageImportance)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Parses a single line of text to identify any errors or warnings in canonical format."
  syntax:
    content: protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);
    parameters:
    - id: singleLine
      type: System.String
      description: "A single line of text for the method to parse."
    - id: messageImportance
      type: Microsoft.Build.Framework.MessageImportance
      description: "A value of <xref href=&quot;Microsoft.Build.Framework.MessageImportance&quot;></xref> that indicates the importance level with which to log the message."
  overload: Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)
  id: LogPathToTool(System.String,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: LogPathToTool(String,String)
  nameWithType: ToolTask.LogPathToTool(String,String)
  fullName: Microsoft.Build.Utilities.ToolTask.LogPathToTool(String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Logs the tool name and path to all registered loggers."
  syntax:
    content: protected virtual void LogPathToTool (string toolName, string pathToTool);
    parameters:
    - id: toolName
      type: System.String
      description: "The executable file name."
    - id: pathToTool
      type: System.String
      description: "The path to the executable file."
  overload: Microsoft.Build.Utilities.ToolTask.LogPathToTool*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError
  id: LogStandardErrorAsError
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: LogStandardErrorAsError
  nameWithType: ToolTask.LogStandardErrorAsError
  fullName: Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Should ALL messages received on the standard error stream be logged as errors."
  syntax:
    content: public bool LogStandardErrorAsError { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)
  id: LogToolCommand(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: LogToolCommand(String)
  nameWithType: ToolTask.LogToolCommand(String)
  fullName: Microsoft.Build.Utilities.ToolTask.LogToolCommand(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Logs the starting point of the run to all registered loggers."
  syntax:
    content: protected virtual void LogToolCommand (string message);
    parameters:
    - id: message
      type: System.String
      description: "A descriptive message to provide loggers, usually the command line and switches."
  overload: Microsoft.Build.Utilities.ToolTask.LogToolCommand*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding
  id: ResponseFileEncoding
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ResponseFileEncoding
  nameWithType: ToolTask.ResponseFileEncoding
  fullName: Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the <xref:System.Text.Encoding> of the response file."
  remarks: "The encoding is <xref:System.Text.Encoding.UTF8%2A> by default."
  syntax:
    content: protected virtual System.Text.Encoding ResponseFileEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "The <xref:System.Text.Encoding> of the response file."
  overload: Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)
  id: ResponseFileEscape(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ResponseFileEscape(String)
  nameWithType: ToolTask.ResponseFileEscape(String)
  fullName: Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Overridable method to escape the content of the response file."
  syntax:
    content: protected virtual string ResponseFileEscape (string responseString);
    parameters:
    - id: responseString
      type: System.String
      description: "The response string."
    return:
      type: System.String
      description: "Returns the response string."
  overload: Microsoft.Build.Utilities.ToolTask.ResponseFileEscape*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.SkipTaskExecution
  id: SkipTaskExecution
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: SkipTaskExecution()
  nameWithType: ToolTask.SkipTaskExecution()
  fullName: Microsoft.Build.Utilities.ToolTask.SkipTaskExecution()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Indicates whether task execution should be skipped."
  remarks: "This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>."
  syntax:
    content: protected virtual bool SkipTaskExecution ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to skip task execution; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Utilities.ToolTask.SkipTaskExecution*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding
  id: StandardErrorEncoding
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardErrorEncoding
  nameWithType: ToolTask.StandardErrorEncoding
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the <xref:System.Text.Encoding> of the standard error stream of the task."
  remarks: "Console-based output uses the current system OEM code page by default. Note that we should not use Console.OutputEncoding here since processes we run don&quot;t really have much to do with our console window (and also Console.OutputEncoding doesn&quot;t return the OEM code page if the running application that hosts MSBuild is not a console application)."
  syntax:
    content: protected virtual System.Text.Encoding StandardErrorEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "The <xref:System.Text.Encoding> of the response file."
  overload: Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorImportance
  id: StandardErrorImportance
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardErrorImportance
  nameWithType: ToolTask.StandardErrorImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorImportance
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: 'Task Parameter: Importance with which to log text from the standard error stream.'
  syntax:
    content: public string StandardErrorImportance { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.StandardErrorImportance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse
  id: StandardErrorImportanceToUse
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardErrorImportanceToUse
  nameWithType: ToolTask.StandardErrorImportanceToUse
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the actual importance at which standard error messages will be logged."
  syntax:
    content: protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }
    return:
      type: Microsoft.Build.Framework.MessageImportance
      description: "Returns the actual importance at which standard error messages will be logged."
  overload: Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance
  id: StandardErrorLoggingImportance
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardErrorLoggingImportance
  nameWithType: ToolTask.StandardErrorLoggingImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the <xref href=&quot;Microsoft.Build.Framework.MessageImportance&quot;></xref> with which to log errors."
  syntax:
    content: protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }
    return:
      type: Microsoft.Build.Framework.MessageImportance
      description: "The <xref href=&quot;Microsoft.Build.Framework.MessageImportance&quot;></xref> with which to log errors."
  overload: Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding
  id: StandardOutputEncoding
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardOutputEncoding
  nameWithType: ToolTask.StandardOutputEncoding
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the <xref:System.Text.Encoding> of the standard output stream of the task."
  remarks: "Console-based output uses the current system OEM code page by default. Note that we should not use Console.OutputEncoding here since processes we run don&quot;t really have much to do with our console window (and also Console.OutputEncoding doesn&quot;t return the OEM code page if the running application that hosts MSBuild is not a console application)."
  syntax:
    content: protected virtual System.Text.Encoding StandardOutputEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "The <xref:System.Text.Encoding> of the response file."
  overload: Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputImportance
  id: StandardOutputImportance
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardOutputImportance
  nameWithType: ToolTask.StandardOutputImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputImportance
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: 'Task Parameter: Importance with which to log text from the standard out stream.'
  syntax:
    content: public string StandardOutputImportance { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.StandardOutputImportance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse
  id: StandardOutputImportanceToUse
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardOutputImportanceToUse
  nameWithType: ToolTask.StandardOutputImportanceToUse
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the actual importance at which standard out messages will be logged."
  syntax:
    content: protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }
    return:
      type: Microsoft.Build.Framework.MessageImportance
      description: "Returns the actual importance at which standard out messages will be logged."
  overload: Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance
  id: StandardOutputLoggingImportance
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: StandardOutputLoggingImportance
  nameWithType: ToolTask.StandardOutputLoggingImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the <xref href=&quot;Microsoft.Build.Framework.MessageImportance&quot;></xref> with which to log errors."
  syntax:
    content: protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }
    return:
      type: Microsoft.Build.Framework.MessageImportance
      description: "The <xref href=&quot;Microsoft.Build.Framework.MessageImportance&quot;></xref> with which to log errors."
  overload: Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout
  id: TaskProcessTerminationTimeout
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: TaskProcessTerminationTimeout
  nameWithType: ToolTask.TaskProcessTerminationTimeout
  fullName: Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "A timeout to wait for a task to terminate before killing it. In milliseconds."
  syntax:
    content: protected int TaskProcessTerminationTimeout { get; set; }
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.Timeout
  id: Timeout
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: Timeout
  nameWithType: ToolTask.Timeout
  fullName: Microsoft.Build.Utilities.ToolTask.Timeout
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the amount of time after which the task executable is terminated."
  syntax:
    content: public virtual int Timeout { get; set; }
    return:
      type: System.Int32
      description: "The time-out length, in milliseconds."
  overload: Microsoft.Build.Utilities.ToolTask.Timeout*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ToolCanceled
  id: ToolCanceled
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolCanceled
  nameWithType: ToolTask.ToolCanceled
  fullName: Microsoft.Build.Utilities.ToolTask.ToolCanceled
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Used to signal when a tool has been cancelled."
  syntax:
    content: protected System.Threading.ManualResetEvent ToolCanceled { get; }
    return:
      type: System.Threading.ManualResetEvent
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.ToolCanceled*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ToolExe
  id: ToolExe
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolExe
  nameWithType: ToolTask.ToolExe
  fullName: Microsoft.Build.Utilities.ToolTask.ToolExe
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Projects may set this to override a task&quot;s ToolName. Tasks may override this to prevent that."
  syntax:
    content: public virtual string ToolExe { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: Microsoft.Build.Utilities.ToolTask.ToolExe*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ToolName
  id: ToolName
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolName
  nameWithType: ToolTask.ToolName
  fullName: Microsoft.Build.Utilities.ToolTask.ToolName
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the name of the executable file to run."
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/add/includes/ajax-current-ext-md.md). The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.  \n  \n [!code-cs[msbuild_ToolTask#1](~/add/codesnippet/csharp/ILAsm/ILAsm.cs#1)]\n [!code-vb[msbuild_ToolTask#1](~/add/codesnippet/visualbasic/ILAsmVB/ILAsm.vb#1)]"
  syntax:
    content: protected abstract string ToolName { get; }
    return:
      type: System.String
      description: "The name of the executable file to run."
  overload: Microsoft.Build.Utilities.ToolTask.ToolName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ToolPath
  id: ToolPath
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ToolPath
  nameWithType: ToolTask.ToolPath
  fullName: Microsoft.Build.Utilities.ToolTask.ToolPath
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the path of the executable file to run."
  syntax:
    content: public string ToolPath { get; set; }
    return:
      type: System.String
      description: "The path of the file to run."
  overload: Microsoft.Build.Utilities.ToolTask.ToolPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.UseCommandProcessor
  id: UseCommandProcessor
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: UseCommandProcessor
  nameWithType: ToolTask.UseCommandProcessor
  fullName: Microsoft.Build.Utilities.ToolTask.UseCommandProcessor
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly."
  syntax:
    content: public bool UseCommandProcessor { get; set; }
    return:
      type: System.Boolean
      description: "If true, the tool task will create a batch file for the command-line and execute that using the command-processor. If false the tool task will execute the command directly."
  overload: Microsoft.Build.Utilities.ToolTask.UseCommandProcessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.ValidateParameters
  id: ValidateParameters
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: ValidateParameters()
  nameWithType: ToolTask.ValidateParameters()
  fullName: Microsoft.Build.Utilities.ToolTask.ValidateParameters()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Indicates whether all task paratmeters are valid."
  syntax:
    content: protected virtual bool ValidateParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all task parameters are valid; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Utilities.ToolTask.ValidateParameters*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution
  id: YieldDuringToolExecution
  parent: Microsoft.Build.Utilities.ToolTask
  langs:
  - csharp
  name: YieldDuringToolExecution
  nameWithType: ToolTask.YieldDuringToolExecution
  fullName: Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Indicates if the task will yield the node during tool execution."
  syntax:
    content: public bool YieldDuringToolExecution { get; set; }
    return:
      type: System.Boolean
      description: "True when the task will yield the node during tool execution."
  overload: Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Utilities.Task
  isExternal: false
  name: Microsoft.Build.Utilities.Task
- uid: Microsoft.Build.Utilities.ToolTask.#ctor
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolTask()
  nameWithType: ToolTask.ToolTask()
  fullName: Microsoft.Build.Utilities.ToolTask.ToolTask()
- uid: Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolTask(ResourceManager)
  nameWithType: ToolTask.ToolTask(ResourceManager)
  fullName: Microsoft.Build.Utilities.ToolTask.ToolTask(ResourceManager)
- uid: System.Resources.ResourceManager
  parent: System.Resources
  isExternal: true
  name: ResourceManager
  nameWithType: ResourceManager
  fullName: System.Resources.ResourceManager
- uid: Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolTask(ResourceManager,String)
  nameWithType: ToolTask.ToolTask(ResourceManager,String)
  fullName: Microsoft.Build.Utilities.ToolTask.ToolTask(ResourceManager,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: CallHostObjectToExecute()
  nameWithType: ToolTask.CallHostObjectToExecute()
  fullName: Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Utilities.ToolTask.Cancel
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: Cancel()
  nameWithType: ToolTask.Cancel()
  fullName: Microsoft.Build.Utilities.ToolTask.Cancel()
- uid: Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: DeleteTempFile(String)
  nameWithType: ToolTask.DeleteTempFile(String)
  fullName: Microsoft.Build.Utilities.ToolTask.DeleteTempFile(String)
- uid: Microsoft.Build.Utilities.ToolTask.EchoOff
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: EchoOff
  nameWithType: ToolTask.EchoOff
  fullName: Microsoft.Build.Utilities.ToolTask.EchoOff
- uid: Microsoft.Build.Utilities.ToolTask.EnvironmentOverride
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: EnvironmentOverride
  nameWithType: ToolTask.EnvironmentOverride
  fullName: Microsoft.Build.Utilities.ToolTask.EnvironmentOverride
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: Microsoft.Build.Utilities.ToolTask.EnvironmentVariables
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: EnvironmentVariables
  nameWithType: ToolTask.EnvironmentVariables
  fullName: Microsoft.Build.Utilities.ToolTask.EnvironmentVariables
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Utilities.ToolTask.Execute
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: Execute()
  nameWithType: ToolTask.Execute()
  fullName: Microsoft.Build.Utilities.ToolTask.Execute()
- uid: Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ExecuteTool(String,String,String)
  nameWithType: ToolTask.ExecuteTool(String,String,String)
  fullName: Microsoft.Build.Utilities.ToolTask.ExecuteTool(String,String,String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Utilities.ToolTask.ExitCode
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ExitCode
  nameWithType: ToolTask.ExitCode
  fullName: Microsoft.Build.Utilities.ToolTask.ExitCode
- uid: Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GenerateCommandLineCommands()
  nameWithType: ToolTask.GenerateCommandLineCommands()
  fullName: Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands()
- uid: Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GenerateFullPathToTool()
  nameWithType: ToolTask.GenerateFullPathToTool()
  fullName: Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool()
- uid: Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GenerateResponseFileCommands()
  nameWithType: ToolTask.GenerateResponseFileCommands()
  fullName: Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands()
- uid: Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GetProcessStartInfo(String,String,String)
  nameWithType: ToolTask.GetProcessStartInfo(String,String,String)
  fullName: Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(String,String,String)
- uid: System.Diagnostics.ProcessStartInfo
  parent: System.Diagnostics
  isExternal: false
  name: ProcessStartInfo
  nameWithType: ProcessStartInfo
  fullName: System.Diagnostics.ProcessStartInfo
- uid: Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GetResponseFileSwitch(String)
  nameWithType: ToolTask.GetResponseFileSwitch(String)
  fullName: Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(String)
- uid: Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GetWorkingDirectory()
  nameWithType: ToolTask.GetWorkingDirectory()
  fullName: Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory()
- uid: Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: HandleTaskExecutionErrors()
  nameWithType: ToolTask.HandleTaskExecutionErrors()
  fullName: Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors()
- uid: Microsoft.Build.Utilities.ToolTask.HasLoggedErrors
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: HasLoggedErrors
  nameWithType: ToolTask.HasLoggedErrors
  fullName: Microsoft.Build.Utilities.ToolTask.HasLoggedErrors
- uid: Microsoft.Build.Utilities.ToolTask.InitializeHostObject
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: InitializeHostObject()
  nameWithType: ToolTask.InitializeHostObject()
  fullName: Microsoft.Build.Utilities.ToolTask.InitializeHostObject()
- uid: Microsoft.Build.Utilities.HostObjectInitializationStatus
  parent: Microsoft.Build.Utilities
  isExternal: false
  name: HostObjectInitializationStatus
  nameWithType: HostObjectInitializationStatus
  fullName: Microsoft.Build.Utilities.HostObjectInitializationStatus
- uid: Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogEventsFromTextOutput(String,MessageImportance)
  nameWithType: ToolTask.LogEventsFromTextOutput(String,MessageImportance)
  fullName: Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(String,MessageImportance)
- uid: Microsoft.Build.Framework.MessageImportance
  parent: Microsoft.Build.Framework
  isExternal: false
  name: MessageImportance
  nameWithType: MessageImportance
  fullName: Microsoft.Build.Framework.MessageImportance
- uid: Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogPathToTool(String,String)
  nameWithType: ToolTask.LogPathToTool(String,String)
  fullName: Microsoft.Build.Utilities.ToolTask.LogPathToTool(String,String)
- uid: Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogStandardErrorAsError
  nameWithType: ToolTask.LogStandardErrorAsError
  fullName: Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError
- uid: Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogToolCommand(String)
  nameWithType: ToolTask.LogToolCommand(String)
  fullName: Microsoft.Build.Utilities.ToolTask.LogToolCommand(String)
- uid: Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ResponseFileEncoding
  nameWithType: ToolTask.ResponseFileEncoding
  fullName: Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ResponseFileEscape(String)
  nameWithType: ToolTask.ResponseFileEscape(String)
  fullName: Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(String)
- uid: Microsoft.Build.Utilities.ToolTask.SkipTaskExecution
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: SkipTaskExecution()
  nameWithType: ToolTask.SkipTaskExecution()
  fullName: Microsoft.Build.Utilities.ToolTask.SkipTaskExecution()
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorEncoding
  nameWithType: ToolTask.StandardErrorEncoding
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorImportance
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorImportance
  nameWithType: ToolTask.StandardErrorImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorImportance
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorImportanceToUse
  nameWithType: ToolTask.StandardErrorImportanceToUse
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorLoggingImportance
  nameWithType: ToolTask.StandardErrorLoggingImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputEncoding
  nameWithType: ToolTask.StandardOutputEncoding
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputImportance
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputImportance
  nameWithType: ToolTask.StandardOutputImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputImportance
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputImportanceToUse
  nameWithType: ToolTask.StandardOutputImportanceToUse
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputLoggingImportance
  nameWithType: ToolTask.StandardOutputLoggingImportance
  fullName: Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance
- uid: Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: TaskProcessTerminationTimeout
  nameWithType: ToolTask.TaskProcessTerminationTimeout
  fullName: Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout
- uid: Microsoft.Build.Utilities.ToolTask.Timeout
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: Timeout
  nameWithType: ToolTask.Timeout
  fullName: Microsoft.Build.Utilities.ToolTask.Timeout
- uid: Microsoft.Build.Utilities.ToolTask.ToolCanceled
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolCanceled
  nameWithType: ToolTask.ToolCanceled
  fullName: Microsoft.Build.Utilities.ToolTask.ToolCanceled
- uid: System.Threading.ManualResetEvent
  parent: System.Threading
  isExternal: true
  name: ManualResetEvent
  nameWithType: ManualResetEvent
  fullName: System.Threading.ManualResetEvent
- uid: Microsoft.Build.Utilities.ToolTask.ToolExe
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolExe
  nameWithType: ToolTask.ToolExe
  fullName: Microsoft.Build.Utilities.ToolTask.ToolExe
- uid: Microsoft.Build.Utilities.ToolTask.ToolName
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolName
  nameWithType: ToolTask.ToolName
  fullName: Microsoft.Build.Utilities.ToolTask.ToolName
- uid: Microsoft.Build.Utilities.ToolTask.ToolPath
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolPath
  nameWithType: ToolTask.ToolPath
  fullName: Microsoft.Build.Utilities.ToolTask.ToolPath
- uid: Microsoft.Build.Utilities.ToolTask.UseCommandProcessor
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: UseCommandProcessor
  nameWithType: ToolTask.UseCommandProcessor
  fullName: Microsoft.Build.Utilities.ToolTask.UseCommandProcessor
- uid: Microsoft.Build.Utilities.ToolTask.ValidateParameters
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ValidateParameters()
  nameWithType: ToolTask.ValidateParameters()
  fullName: Microsoft.Build.Utilities.ToolTask.ValidateParameters()
- uid: Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: YieldDuringToolExecution
  nameWithType: ToolTask.YieldDuringToolExecution
  fullName: Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution
- uid: Microsoft.Build.Utilities.ToolTask.#ctor*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolTask
  nameWithType: ToolTask.ToolTask
- uid: Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: CallHostObjectToExecute
  nameWithType: ToolTask.CallHostObjectToExecute
- uid: Microsoft.Build.Utilities.ToolTask.Cancel*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: Cancel
  nameWithType: ToolTask.Cancel
- uid: Microsoft.Build.Utilities.ToolTask.DeleteTempFile*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: DeleteTempFile
  nameWithType: ToolTask.DeleteTempFile
- uid: Microsoft.Build.Utilities.ToolTask.EchoOff*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: EchoOff
  nameWithType: ToolTask.EchoOff
- uid: Microsoft.Build.Utilities.ToolTask.EnvironmentOverride*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: EnvironmentOverride
  nameWithType: ToolTask.EnvironmentOverride
- uid: Microsoft.Build.Utilities.ToolTask.EnvironmentVariables*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: EnvironmentVariables
  nameWithType: ToolTask.EnvironmentVariables
- uid: Microsoft.Build.Utilities.ToolTask.Execute*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: Execute
  nameWithType: ToolTask.Execute
- uid: Microsoft.Build.Utilities.ToolTask.ExecuteTool*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ExecuteTool
  nameWithType: ToolTask.ExecuteTool
- uid: Microsoft.Build.Utilities.ToolTask.ExitCode*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ExitCode
  nameWithType: ToolTask.ExitCode
- uid: Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GenerateCommandLineCommands
  nameWithType: ToolTask.GenerateCommandLineCommands
- uid: Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GenerateFullPathToTool
  nameWithType: ToolTask.GenerateFullPathToTool
- uid: Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GenerateResponseFileCommands
  nameWithType: ToolTask.GenerateResponseFileCommands
- uid: Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GetProcessStartInfo
  nameWithType: ToolTask.GetProcessStartInfo
- uid: Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GetResponseFileSwitch
  nameWithType: ToolTask.GetResponseFileSwitch
- uid: Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: GetWorkingDirectory
  nameWithType: ToolTask.GetWorkingDirectory
- uid: Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: HandleTaskExecutionErrors
  nameWithType: ToolTask.HandleTaskExecutionErrors
- uid: Microsoft.Build.Utilities.ToolTask.HasLoggedErrors*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: HasLoggedErrors
  nameWithType: ToolTask.HasLoggedErrors
- uid: Microsoft.Build.Utilities.ToolTask.InitializeHostObject*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: InitializeHostObject
  nameWithType: ToolTask.InitializeHostObject
- uid: Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogEventsFromTextOutput
  nameWithType: ToolTask.LogEventsFromTextOutput
- uid: Microsoft.Build.Utilities.ToolTask.LogPathToTool*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogPathToTool
  nameWithType: ToolTask.LogPathToTool
- uid: Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogStandardErrorAsError
  nameWithType: ToolTask.LogStandardErrorAsError
- uid: Microsoft.Build.Utilities.ToolTask.LogToolCommand*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: LogToolCommand
  nameWithType: ToolTask.LogToolCommand
- uid: Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ResponseFileEncoding
  nameWithType: ToolTask.ResponseFileEncoding
- uid: Microsoft.Build.Utilities.ToolTask.ResponseFileEscape*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ResponseFileEscape
  nameWithType: ToolTask.ResponseFileEscape
- uid: Microsoft.Build.Utilities.ToolTask.SkipTaskExecution*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: SkipTaskExecution
  nameWithType: ToolTask.SkipTaskExecution
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorEncoding
  nameWithType: ToolTask.StandardErrorEncoding
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorImportance*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorImportance
  nameWithType: ToolTask.StandardErrorImportance
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorImportanceToUse
  nameWithType: ToolTask.StandardErrorImportanceToUse
- uid: Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardErrorLoggingImportance
  nameWithType: ToolTask.StandardErrorLoggingImportance
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputEncoding
  nameWithType: ToolTask.StandardOutputEncoding
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputImportance*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputImportance
  nameWithType: ToolTask.StandardOutputImportance
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputImportanceToUse
  nameWithType: ToolTask.StandardOutputImportanceToUse
- uid: Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: StandardOutputLoggingImportance
  nameWithType: ToolTask.StandardOutputLoggingImportance
- uid: Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: TaskProcessTerminationTimeout
  nameWithType: ToolTask.TaskProcessTerminationTimeout
- uid: Microsoft.Build.Utilities.ToolTask.Timeout*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: Timeout
  nameWithType: ToolTask.Timeout
- uid: Microsoft.Build.Utilities.ToolTask.ToolCanceled*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolCanceled
  nameWithType: ToolTask.ToolCanceled
- uid: Microsoft.Build.Utilities.ToolTask.ToolExe*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolExe
  nameWithType: ToolTask.ToolExe
- uid: Microsoft.Build.Utilities.ToolTask.ToolName*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolName
  nameWithType: ToolTask.ToolName
- uid: Microsoft.Build.Utilities.ToolTask.ToolPath*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ToolPath
  nameWithType: ToolTask.ToolPath
- uid: Microsoft.Build.Utilities.ToolTask.UseCommandProcessor*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: UseCommandProcessor
  nameWithType: ToolTask.UseCommandProcessor
- uid: Microsoft.Build.Utilities.ToolTask.ValidateParameters*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: ValidateParameters
  nameWithType: ToolTask.ValidateParameters
- uid: Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution*
  parent: Microsoft.Build.Utilities.ToolTask
  isExternal: false
  name: YieldDuringToolExecution
  nameWithType: ToolTask.YieldDuringToolExecution
