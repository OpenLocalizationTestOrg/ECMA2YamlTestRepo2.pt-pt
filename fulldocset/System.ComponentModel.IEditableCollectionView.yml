### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IEditableCollectionView
  id: IEditableCollectionView
  children:
  - System.ComponentModel.IEditableCollectionView.AddNew
  - System.ComponentModel.IEditableCollectionView.CanAddNew
  - System.ComponentModel.IEditableCollectionView.CanCancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelNew
  - System.ComponentModel.IEditableCollectionView.CanRemove
  - System.ComponentModel.IEditableCollectionView.CommitEdit
  - System.ComponentModel.IEditableCollectionView.CommitNew
  - System.ComponentModel.IEditableCollectionView.CurrentAddItem
  - System.ComponentModel.IEditableCollectionView.CurrentEditItem
  - System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  - System.ComponentModel.IEditableCollectionView.IsAddingNew
  - System.ComponentModel.IEditableCollectionView.IsEditingItem
  - System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  - System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  - System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  langs:
  - csharp
  name: IEditableCollectionView
  nameWithType: IEditableCollectionView
  fullName: System.ComponentModel.IEditableCollectionView
  type: Interface
  summary: "Define as propriedades e métodos que um <xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref> implementa para fornecer capacidades de edição para uma coleção."
  remarks: "Quando uma vista de coleção implementa a interface de IEditableCollectionView, pode alterar diretamente a colecção subjacente, se permite que as alterações efetuadas utilizando os métodos e as propriedades que expõe IEditableCollectionView, independentemente do tipo da coleção.       Os tipos de <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, e <xref:System.Windows.Data.ListCollectionView>são os tipos que são enviados juntamente com [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] que herdam <xref:System.Windows.Data.CollectionView>.</xref:System.Windows.Data.CollectionView> </xref:System.Windows.Data.ListCollectionView> </xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Controls.ItemCollection>  Estes tipos também implementam IEditableCollectionView, pelo que pode editar uma coleção que utilize um desses tipos.  <xref:System.Windows.Controls.ItemCollection>, em particular, é frequentemente utilizado porque a <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=fullName>propriedade é um <xref:System.Windows.Controls.ItemCollection>.</xref:System.Windows.Controls.ItemCollection> </xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=fullName></xref:System.Windows.Controls.ItemCollection>"
  example:
  - "The following example shows how to add an item to a collection by using methods that are defined by IEditableCollectionView.  This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.  When the user adds or edits an item, a form prompts the user to enter a new item.  If the user submits the form, the item is committed to the collection.  If the user cancels the form, the item is discarded. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public interface IEditableCollectionView
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  id: AddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Adiciona um novo item à coleção."
  remarks: "Chamar AddNew começa uma transação de adicionar.  Deve chamar <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>ou <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>para terminar a transação de adicionar.</xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> </xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> Um novo item sempre aparece na vista de coleção. Qualquer filtragem, ordenação ou agrupamento que é aplicada para a vista é aplicada para o novo item quando <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>é chamado.</xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.  Then it calls AddNew to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "O novo item que é adicionado à coleção."
  overload: System.ComponentModel.IEditableCollectionView.AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  id: CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se pode ser adicionado um novo item à coleção."
  remarks: "Um <xref:System.ComponentModel.IEditableCollectionView>pode adicionar um novo item se as seguintes seguem verificarem:-é possível adicionar um item para a colecção subjacente.</xref:System.ComponentModel.IEditableCollectionView>  Por exemplo, se a coleção é só de leitura, CanAddNew é `false`.      -O <xref:System.ComponentModel.IEditableCollectionView>pode criar um objeto do tipo que se encontra na coleção.</xref:System.ComponentModel.IEditableCollectionView>  Por exemplo, se a coleção é do tipo <xref:System.Collections.ObjectModel.ObservableCollection%601>, a <xref:System.ComponentModel.IEditableCollectionView>tem de ser capaz de criar um objeto do tipo `T`.</xref:System.ComponentModel.IEditableCollectionView> </xref:System.Collections.ObjectModel.ObservableCollection%601>"
  example:
  - "The following example checks whether an item can be added to the collection.  If CanAddNew is `false`, the example tells the user that an item cannot be added.  Otherwise, it shows a form that prompts the user to add a new item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974) .  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public bool CanAddNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um novo item pode ser adicionado à coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.CanAddNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  id: CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se a vista de coleção pode rejeitar as alterações pendentes e restaurar os valores originais de um objeto editado."
  remarks: "É CanCancelEdit `true` se a vista suporta a noção de &quot;alterações pendentes&quot; no item atualmente editado.   Por exemplo, pode devolver uma vista de coleção `true` se implementa o item editado <xref:System.ComponentModel.IEditableObject>, ou se a vista contém informações sobre o estado do item que pode utilizar a reversão fazer uma cópia de alterações.</xref:System.ComponentModel.IEditableObject> É CanCancelEdit `false` se a vista não é possível reverter as alterações de um objeto.  Nesse caso, chamar <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>para a vista sair do Estado de edição e fornecer a lógica para reverter as alterações no objeto que foi editado.</xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>"
  example:
  - "The following example gets CanCancelEdit to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.  If the values cannot be restored, you must supply additional logic to do so.  If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.   For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public bool CanCancelEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a vista de coleção pode rejeitar as alterações pendentes e restaurar os valores originais de um objeto editado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  id: CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Termine a transação de editar e, se possível, restaura o valor original para o item."
  remarks: "Conjuntos de CancelEdit <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>para `null` e faz com que a vista de coleção sair do Estado de edição.</xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>  Se <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>é `true`, CancelEdit também restaura os valores originais do objeto editado.</xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>"
  example:
  - "The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls CancelEdit.  If the values cannot be restored, you must supply additional logic to do so.  If they can be, the values are restored when the example calls CancelEdit. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  id: CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Termine a transação de adicionar e elimina o novo item pendente."
  remarks: ''
  example:
  - "The following example displays a form that prompts the user to add a new item.  If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.  If the user cancels the form, the example calls CancelNew to discard the item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public void CancelNew ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CancelNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  id: CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se um item pode ser removido da coleção."
  remarks: "É CanRemove `false` se a colecção subjacente é só de leitura."
  example:
  - "The following example calls CanRemove to check whether an item can be removed from the collection.  If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#removeitem)]\n [!code-vb[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#removeitem)]"
  syntax:
    content: public bool CanRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um item pode ser removido da coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  id: CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Termine a transação de edição e guarda as alterações pendentes."
  remarks: ''
  example:
  - "The following example creates a form that prompts the user to edit an existing item.  If the user submits the form, the example calls CommitEdit to save the changes to the collection.  If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#EditItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#edititem)]\n [!code-vb[EditingCollectionsSnippets#EditItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#edititem)]"
  syntax:
    content: public void CommitEdit ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  id: CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Termine a transação de adicionar e guarda o novo item pendente."
  remarks: "Qualquer filtragem, ordenação ou agrupamento que é aplicada para a <xref:System.Windows.Data.CollectionView>é aplicada para o novo item quando CommitNew é chamado.</xref:System.Windows.Data.CollectionView>"
  example:
  - "The following example displays a form that prompts the user to add a new item.  If the user submits the form, the example calls CommitNew to add the item to the collection.  If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public void CommitNew ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CommitNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  id: CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém o item que está a ser adicionado durante atual adicionar transação."
  syntax:
    content: public object CurrentAddItem { get; }
    return:
      type: System.Object
      description: "O item que está a ser adicionado se <xref:System.ComponentModel.IEditableCollectionView.IsAddingNew*>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IEditableCollectionView.IsAddingNew*>"
  overload: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  id: CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém o item na coleção que está a ser editada."
  syntax:
    content: public object CurrentEditItem { get; }
    return:
      type: System.Object
      description: "O item na coleção que está a ser editado se <xref:System.ComponentModel.IEditableCollectionView.IsEditingItem*>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IEditableCollectionView.IsEditingItem*>"
  overload: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  id: EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Começa uma transação de edição do item especificado."
  remarks: ''
  example:
  - "The following example creates a form that prompts the user to edit an existing item.  If the user submits the form, the changes are committed to the collection.  If the user cancels the form, the changes are discarded. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974) .  \n  \n [!code-cs[EditingCollectionsSnippets#EditItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#edititem)]\n [!code-vb[EditingCollectionsSnippets#EditItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#edititem)]"
  syntax:
    content: public void EditItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "O item a editar."
  overload: System.ComponentModel.IEditableCollectionView.EditItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  id: IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se uma transação de adicionar está em curso."
  remarks: "Iniciar uma transação de adicionar ao chamar o <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>e termine a transação de adicionar ao chamar <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>ou <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> </xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> </xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>"
  syntax:
    content: public bool IsAddingNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma transação de adicionar está em curso; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  id: IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se uma transação de edição está em curso."
  remarks: "Iniciar uma transação de edição chamando o <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>e termine a transação chamando <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>ou <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> </xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> </xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>"
  syntax:
    content: public bool IsEditingItem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma transação de edição está em curso; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  id: NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Obtém ou define a posição do marcador de posição de item novo na vista de coleção."
  syntax:
    content: public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }
    return:
      type: System.ComponentModel.NewItemPlaceholderPosition
      description: "Um dos valores da enumeração que especifica a posição do marcador de posição de item novo na vista de coleção."
  overload: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Remove o item especificado da coleção."
  remarks: "Se `item` é não na coleção, remova não produz qualquer efeito."
  example:
  - "The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.  If an item can be removed, the example prompts the user to confirm the action and calls Remove if the user clicks **Yes**. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#removeitem)]\n [!code-vb[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#removeitem)]"
  syntax:
    content: public void Remove (object item);
    parameters:
    - id: item
      type: System.Object
      description: "O item a remover."
  overload: System.ComponentModel.IEditableCollectionView.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(Int32)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Remove o item na posição especificada da coleção."
  remarks: '`index`é relativo à vista de coleção, não a coleção.  Por exemplo, se a coleção tem 10 itens e a vista tem um <xref:System.ComponentModel.ICollectionView.Filter%2A>para que 7 itens são apresentados os valores válidos de `index` são 0 e 6.</xref:System.ComponentModel.ICollectionView.Filter%2A>'
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A posição do item a remover."
  overload: System.ComponentModel.IEditableCollectionView.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que 0 ou superior ao número de itens na vista de coleção."
  platform:
  - net462
references:
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(Object)
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.NewItemPlaceholderPosition
  parent: System.ComponentModel
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: NewItemPlaceholderPosition
  fullName: System.ComponentModel.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(Object)
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IEditableCollectionView.AddNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: AddNew
  nameWithType: IEditableCollectionView.AddNew
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelEdit
  nameWithType: IEditableCollectionView.CancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelNew
  nameWithType: IEditableCollectionView.CancelNew
- uid: System.ComponentModel.IEditableCollectionView.CanRemove*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitEdit
  nameWithType: IEditableCollectionView.CommitEdit
- uid: System.ComponentModel.IEditableCollectionView.CommitNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitNew
  nameWithType: IEditableCollectionView.CommitNew
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: EditItem
  nameWithType: IEditableCollectionView.EditItem
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.Remove*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: Remove
  nameWithType: IEditableCollectionView.Remove
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: RemoveAt
  nameWithType: IEditableCollectionView.RemoveAt
