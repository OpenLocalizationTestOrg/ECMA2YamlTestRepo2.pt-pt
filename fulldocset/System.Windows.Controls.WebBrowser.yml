### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.WebBrowser
  id: WebBrowser
  children:
  - System.Windows.Controls.WebBrowser.#ctor
  - System.Windows.Controls.WebBrowser.CanGoBack
  - System.Windows.Controls.WebBrowser.CanGoForward
  - System.Windows.Controls.WebBrowser.Document
  - System.Windows.Controls.WebBrowser.GoBack
  - System.Windows.Controls.WebBrowser.GoForward
  - System.Windows.Controls.WebBrowser.InvokeScript(System.String)
  - System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])
  - System.Windows.Controls.WebBrowser.LoadCompleted
  - System.Windows.Controls.WebBrowser.Navigate(System.String)
  - System.Windows.Controls.WebBrowser.Navigate(System.Uri)
  - System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  - System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  - System.Windows.Controls.WebBrowser.Navigated
  - System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)
  - System.Windows.Controls.WebBrowser.NavigateToString(System.String)
  - System.Windows.Controls.WebBrowser.Navigating
  - System.Windows.Controls.WebBrowser.ObjectForScripting
  - System.Windows.Controls.WebBrowser.Refresh
  - System.Windows.Controls.WebBrowser.Refresh(System.Boolean)
  - System.Windows.Controls.WebBrowser.Source
  - System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)
  - System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  langs:
  - csharp
  name: WebBrowser
  nameWithType: WebBrowser
  fullName: System.Windows.Controls.WebBrowser
  type: Class
  summary: "Hosts and navigates between [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] documents. Enables interoperability between [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] managed code and [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] script."
  remarks: "The WebBrowser control provides the following capabilities:       **Navigation**: <xref:System.Windows.Controls.WebBrowser.Source%2A>, <xref:System.Windows.Controls.WebBrowser.Navigate%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToString%2A>, and <xref:System.Windows.Controls.WebBrowser.Refresh%2A>.       **Navigation Lifetime**: <xref:System.Windows.Controls.WebBrowser.Navigating>, <xref:System.Windows.Controls.WebBrowser.Navigated>, and <xref:System.Windows.Controls.WebBrowser.LoadCompleted>.       **Navigation Journaling**: <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>, <xref:System.Windows.Controls.WebBrowser.GoBack%2A>, <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>, and <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.       **WPF/HTML Interoperability**: <xref:System.Windows.Controls.WebBrowser.InvokeScript%2A> and <xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A>, and <xref:System.Windows.Controls.WebBrowser.Document%2A>.       WebBrowser is bound by the security constraints of the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application that is hosting the WebBrowser:      -   When WebBrowser is hosted by a full-trust [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application (a stand-alone application, for example), WebBrowser can host [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] documents from any location.      -   When WebBrowser is hosted by a partial-trust [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application (an [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)], for example), WebBrowser can only host documents that are **Site Of Origin** application data files. For more information, see [WPF Application Resource, Content, and Data Files](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] >  The WebBrowser control internally instantiates the native WebBrowser ActiveX control. WPF enables security features by applying feature controls to the WebBrowser ActiveX control. The feature controls that are applied differ for XBAPs and stand-alone applications. Some applications should apply additional feature controls to prevent malicious content from running. For more information, see the &quot;WebBrowser Control and Feature Controls&quot; section in [Security (WPF)](~/add/includes/ajax-current-ext-md.md) and [WebBrowser Control Overviews and Tutorials](http://go.microsoft.com/fwlink/?LinkId=179388)."
  example:
  - "The following example shows how to configure WebBrowser to navigate to an [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by using markup only.  \n  \n```xaml  \n<!-- Web Browser Control that hosts a web page. -->  \n<WebBrowser x:Name=\"webBrowser\" Source=\"http://msdn.com\"   \n  Width=\"600\" Height=\"600\"  />  \n```  \n  \n The following example shows how to configure WebBrowser to navigate to a document by using markup and code-behind.  \n  \n```xaml  \n<StackPanel>  \n    <StackPanel Orientation=\"Horizontal\">  \n        <TextBox x:Name=\"addressTextBox\" Width=\"200\" />  \n        <Button Click=\"goNavigateButton_Click\">Go</Button>  \n    </StackPanel>  \n    <WebBrowser x:Name=\"myWebBrowser\" />  \n</StackPanel>  \n```  \n  \n```c#  \nprivate void goNavigateButton_Click(object sender, RoutedEventArgs e)  \n{  \n    // Get URI to navigate to  \n    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  \n  \n    // Only absolute URIs can be navigated to  \n    if (!uri.IsAbsoluteUri)  \n    {  \n        MessageBox.Show(\"The Address URI must be absolute eg 'http://www.microsoft.com'\");  \n        return;  \n    }  \n  \n    // Navigate to the desired URL by calling the .Navigate method  \n    this.myWebBrowser.Navigate(uri);  \n}  \n```  \n  \n The following example shows how to handle the `NewWindow2` event and similar events using a WebBrowser control. This example requires a reference to **SHDocVw.dll**, a `using System.Runtime.InteropServices;` statement, and a WebBrowser control named `webBrowser1`.  \n  \n```c#  \npublic MainWindow()  \n{  \n    InitializeComponent();  \n  \n    var serviceProvider = (IServiceProvider)webBrowser1.Document;  \n    if (serviceProvider != null)  \n    {  \n        Guid serviceGuid = new Guid(\"0002DF05-0000-0000-C000-000000000046\");  \n        Guid iid = typeof(SHDocVw.WebBrowser).GUID;  \n        var webBrowserPtr = (SHDocVw.WebBrowser)serviceProvider  \n            .QueryService(ref serviceGuid, ref iid);  \n        if (webBrowserPtr != null)  \n        {  \n            webBrowserPtr.NewWindow2 += webBrowser1_NewWindow2;  \n        }  \n    }  \n}  \n  \nprivate void webBrowser1_NewWindow2(ref object ppDisp, ref bool Cancel)  \n{  \n    // Handle the event.  \n}  \n  \n[ComImport, InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]  \n[Guid(\"6d5140c1-7436-11ce-8034-00aa006009fa\")]  \ninternal interface IServiceProvider  \n{  \n    [return: MarshalAs(UnmanagedType.IUnknown)]  \n    object QueryService(ref Guid guidService, ref Guid riid);  \n}  \n```"
  syntax:
    content: 'public sealed class WebBrowser : System.Windows.Interop.ActiveXHost'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  - System.Windows.Interop.HwndHost
  - System.Windows.Interop.ActiveXHost
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)
  - System.Windows.FrameworkElement.BeginInit
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.EndInit
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetUIParentCore
  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.LogicalChildren
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnApplyTemplate
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.VisualChildrenCount
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)
  - System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)
  - System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)
  - System.Windows.Interop.ActiveXHost.IsDisposed
  - System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)
  - System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)
  - System.Windows.Interop.HwndHost.Dispose
  - System.Windows.Interop.HwndHost.DpiChanged
  - System.Windows.Interop.HwndHost.DpiChangedEvent
  - System.Windows.Interop.HwndHost.Handle
  - System.Windows.Interop.HwndHost.HasFocusWithinCore
  - System.Windows.Interop.HwndHost.MessageHook
  - System.Windows.Interop.HwndHost.OnCreateAutomationPeer
  - System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  - System.Windows.Interop.HwndHost.UpdateWindowPos
  - System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: WebBrowser()
  nameWithType: WebBrowser.WebBrowser()
  fullName: System.Windows.Controls.WebBrowser.WebBrowser()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> class."
  syntax:
    content: public WebBrowser ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.CanGoBack
  id: CanGoBack
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
  fullName: System.Windows.Controls.WebBrowser.CanGoBack
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a value that indicates whether there is a document to navigate back to."
  remarks: ''
  example:
  - "The following example shows how to navigate back to the previous document by calling <xref:System.Windows.Controls.WebBrowser.GoBack%2A>. The example first checks that there are documents to navigate back to by checking CanGoBack.  \n  \n```c#  \nprivate void backButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the previous HTML document, if there is one  \n  if (this.webBrowser.CanGoBack)  \n  {  \n    this.webBrowser.GoBack();  \n  }  \n}  \n```"
  syntax:
    content: public bool CanGoBack { get; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean> value that indicates whether there is a document to navigate back to."
  overload: System.Windows.Controls.WebBrowser.CanGoBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.CanGoForward
  id: CanGoForward
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
  fullName: System.Windows.Controls.WebBrowser.CanGoForward
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a value that indicates whether there is a document to navigate forward to."
  remarks: ''
  example:
  - "The following example shows how to navigate forward to the next [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by calling <xref:System.Windows.Controls.WebBrowser.GoForward%2A>. The example first checks that there are documents to navigate forward to by checking CanGoForward.  \n  \n```c#  \nprivate void forwardButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the next HTML document, if there is one  \n  if (this.webBrowser.CanGoForward)  \n  {  \n    this.webBrowser.GoForward();  \n  }  \n}  \n```"
  syntax:
    content: public bool CanGoForward { get; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean> value that indicates whether there is a document to navigate forward to."
  overload: System.Windows.Controls.WebBrowser.CanGoForward*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Document
  id: Document
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Document
  nameWithType: WebBrowser.Document
  fullName: System.Windows.Controls.WebBrowser.Document
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the Document object that represents the hosted [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] page."
  remarks: "The Document object needs to be cast to the COM interface you are expecting."
  syntax:
    content: public object Document { get; }
    return:
      type: System.Object
      description: "A Document object."
  overload: System.Windows.Controls.WebBrowser.Document*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.GoBack
  id: GoBack
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: GoBack()
  nameWithType: WebBrowser.GoBack()
  fullName: System.Windows.Controls.WebBrowser.GoBack()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigate back to the previous document, if there is one."
  remarks: "If you call GoBack and there are not any documents to navigate back to, <xref:System.Windows.Controls.WebBrowser> does not perform a navigation and an exception is thrown. If you need to, you can inspect the value of the <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A> property to determine whether there are documents to navigate back to."
  example:
  - "The following example shows how to navigate back to the previous [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by calling GoBack. The example first checks that there are [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] documents to navigate back to by checking <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>.  \n  \n```c#  \nprivate void backButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the previous HTML document, if there is one  \n  if (this.webBrowser.CanGoBack)  \n  {  \n    this.webBrowser.GoBack();  \n  }  \n}  \n```"
  syntax:
    content: public void GoBack ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.GoBack*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no document to navigate back to."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.GoForward
  id: GoForward
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: GoForward()
  nameWithType: WebBrowser.GoForward()
  fullName: System.Windows.Controls.WebBrowser.GoForward()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigate forward to the next [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document, if there is one."
  remarks: "If you call GoForward and there are not any documents to navigate forward to, <xref:System.Windows.Controls.WebBrowser> does not perform a navigation and an exception is thrown. If you need to, you can inspect the value of the <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A> property to determine whether there are documents to navigate forward to."
  example:
  - "The following example shows how to navigate forward to the next document by calling GoForward. The example first checks that there are documents to navigate forward to by checking <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>.  \n  \n```c#  \nprivate void forwardButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Navigate to the next HTML document, if there is one  \n  if (this.webBrowser.CanGoForward)  \n  {  \n    this.webBrowser.GoForward();  \n  }  \n}  \n```"
  syntax:
    content: public void GoForward ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.GoForward*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no document to navigate forward to."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String)
  id: InvokeScript(System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: InvokeScript(String)
  nameWithType: WebBrowser.InvokeScript(String)
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Executes a script function that is implemented by the currently loaded document."
  remarks: "InvokeScript should not be called before the document that implements it has finished loading. You can detect when a document has finished loading by handling the <xref:System.Windows.Controls.WebBrowser.LoadCompleted> event."
  example:
  - "The following example shows how to call a script function in a document from a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] application by using InvokeScript. In this example, the script function has no parameters.  \n  \n The following is the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document that implements the script function that will be called from [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)].  \n  \n```html  \n<html>  \n    <head>  \n        <script type=\"text/javascript\">  \n            // Function Without Parameters  \n            function JavaScriptFunctionWithoutParameters()    \n            {  \n              outputID.innerHTML = \"JavaScript function called!\";  \n            }  \n        </script>  \n    </head>  \n    <body>  \n    <div id=\"outputID\" style=\"color:Red; font-size:16\">  \n        Hello from HTML document with script!  \n    </div>  \n    </body>  \n</html>  \n```  \n  \n The following shows the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] implementation to call the script function in the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document.  \n  \n```c#  \nprivate void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Make sure the HTML document has loaded before attempting to  \n  // invoke script of the document page. You could set loadCompleted  \n  // to true when the LoadCompleted event on the WebBrowser fires.  \n  if (this.loadCompleted)  \n  {  \n    try  \n    {  \n      this.webBrowser.InvokeScript(\"JavaScriptFunctionWithoutParameters\");  \n    }  \n    catch (Exception ex)  \n    {  \n      string msg = \"Could not call script: \" +  \n                   ex.Message +  \n                  \"\\n\\nPlease click the 'Load HTML Document with Script' button to load.\";  \n      MessageBox.Show(msg);  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public object InvokeScript (string scriptName);
    parameters:
    - id: scriptName
      type: System.String
      description: "The name of the script function to execute."
    return:
      type: System.Object
      description: "The object returned by the Active Scripting call."
  overload: System.Windows.Controls.WebBrowser.InvokeScript*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "The script function does not exist."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])
  id: InvokeScript(System.String,System.Object[])
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: InvokeScript(String,Object[])
  nameWithType: WebBrowser.InvokeScript(String,Object[])
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String,Object[])
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Executes a script function that is defined in the currently loaded document."
  remarks: "InvokeScript should not be called before the document that implements it has finished loading. You can detect when a document has finished loading by handling the <xref:System.Windows.Controls.WebBrowser.LoadCompleted> event.       If you do not pass enough parameter values to the script that you are invoking, the parameters that you do not pass values to will have the undefined value. If you pass too many parameter values, the excess values are ignored."
  example:
  - "The following example shows how to call script functions in a document from an application by using InvokeScript. In this example, the script functions require parameters.  \n  \n The following is the document that implements the script functions that will be called from [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)].  \n  \n```html  \n<html>  \n    <head>  \n        <script type=\"text/javascript\">  \n            // Function Without Parameters  \n            function JavaScriptFunctionWithoutParameters()    \n            {  \n              outputID.innerHTML = \"JavaScript function 'called: \" + message + \".\";  \n            }  \n        </script>  \n    </head>  \n    <body>  \n    <div id=\"outputID\" style=\"color:Red; font-size:16\">  \n        Hello from HTML document with script!  \n    </div>  \n    </body>  \n</html>  \n```  \n  \n The following shows the [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] implementation to call the script functions in the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document.  \n  \n```c#  \nprivate void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Make sure the HTML document has loaded before attempting to  \n  // invoke script of the document page. You could set loadCompleted  \n  // to true when the LoadCompleted event on the WebBrowser fires.  \n  if (this.loadCompleted)  \n  {  \n    try  \n    {  \n      this.webBrowser.InvokeScript(\"JavaScriptFunctionWithoutParameters\", this.messageTextBox.Text);  \n    }  \n    catch (Exception ex)  \n    {  \n      string msg = \"Could not call script: \" +  \n                   ex.Message +  \n                  \"\\n\\nPlease click the 'Load HTML Document with Script' button to load.\";  \n      MessageBox.Show(msg);  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public object InvokeScript (string scriptName, object[] args);
    parameters:
    - id: scriptName
      type: System.String
      description: "The name of the script function to execute."
    - id: args
      type: System.Object[]
      description: "The parameters to pass to the script function."
    return:
      type: System.Object
      description: "The object returned by the Active Scripting call."
  overload: System.Windows.Controls.WebBrowser.InvokeScript*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "The script function does not exist."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: WebBrowser.LoadCompleted
  fullName: System.Windows.Controls.WebBrowser.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Occurs when the document being navigated to has finished downloading."
  remarks: "Navigated event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigationEventArgs> class, which provides contextual information about the navigation, including Web response details.       This event will only be fired for top-level navigations."
  syntax:
    content: public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;
    return:
      type: System.Windows.Navigation.LoadCompletedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String)
  id: Navigate(System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(String)
  nameWithType: WebBrowser.Navigate(String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigates asynchronously to the document at the specified URL."
  remarks: "Use the Navigate method to navigate to a URL that may include escape characters. Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method to navigate to a <xref:System.Uri> that does not include escape characters."
  syntax:
    content: public void Navigate (string source);
    parameters:
    - id: source
      type: System.String
      description: "The URL to navigate to."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri)
  id: Navigate(System.Uri)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri)
  nameWithType: WebBrowser.Navigate(Uri)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigate asynchronously to the document at the specified <xref:System.Uri>."
  remarks: "Calling Navigate has the same effect as setting the <xref:System.Windows.Controls.WebBrowser.Source%2A> property. <xref:System.Windows.Controls.WebBrowser.Source%2A> is used from markup by developers who want to declaratively specify the initial document that <xref:System.Windows.Controls.WebBrowser> navigates to when <xref:System.Windows.Controls.WebBrowser> is initialized.       Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> method to navigate to a URL that may include escape characters. Use the Navigate method to navigate to a <xref:System.Uri> that does not include escape characters."
  example:
  - "The following example shows how to use <xref:System.Windows.Controls.WebBrowser> to navigate to a document by using the Navigate method.  \n  \n```xaml  \n<StackPanel>  \n    <StackPanel Orientation=\"Horizontal\">  \n        <TextBox x:Name=\"addressTextBox\" Width=\"200\" />  \n        <Button Click=\"goNavigateButton_Click\">Go</Button>  \n    </StackPanel>  \n    <WebBrowser x:Name=\"myWebBrowser\" />  \n</StackPanel>  \n```  \n  \n```c#  \nprivate void goNavigateButton_Click(object sender, RoutedEventArgs e)  \n{  \n    // Get URI to navigate to  \n    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  \n  \n    // Only absolute URIs can be navigated to  \n    if (!uri.IsAbsoluteUri)  \n    {  \n        MessageBox.Show(\"The Address URI must be absolute eg 'http://www.microsoft.com'\");  \n        return;  \n    }  \n  \n    // Navigate to the desired URL by calling the .Navigate method  \n    this.myWebBrowser.Navigate(uri);  \n}  \n```"
  syntax:
    content: public void Navigate (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: "The <xref:System.Uri> to navigate to."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Navigation from an application that is running in partial trust to a <xref:System.Uri> that is not located at the site of origin."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  id: Navigate(System.String,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(String,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(String,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String,String,Byte[],String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigates asynchronously to the document at the specified URL and specify the target frame to load the document&quot;s content into. Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request."
  remarks: "Use the Navigate method to navigate to a URL that may include escape characters. Use the [Navigate(Uri, String, Byte\\[\\], String)](assetId:///M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)?qualifyHint=False&autoUpgrade=False) method to navigate to a <xref:System.Uri> that does not include escape characters."
  syntax:
    content: public void Navigate (string source, string targetFrameName, byte[] postData, string additionalHeaders);
    parameters:
    - id: source
      type: System.String
      description: "The URL to navigate to."
    - id: targetFrameName
      type: System.String
      description: "The name of the frame to display the document&quot;s content in."
    - id: postData
      type: System.Byte[]
      description: "HTTP POST data to send to the server when the source is requested."
    - id: additionalHeaders
      type: System.String
      description: "HTTP headers to send to the server when the source is requested."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  id: Navigate(System.Uri,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigate(Uri,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(Uri,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri,String,Byte[],String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigate asynchronously to the document at the specified <xref:System.Uri> and specify the target frame to load the document&quot;s content into. Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request."
  remarks: "Use the [Navigate(String, String, Byte\\[\\], String)](assetId:///M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)?qualifyHint=False&autoUpgrade=False) method to navigate to a URL that may include escape characters. Use the Navigate method to navigate to a <xref:System.Uri> that does not include escape characters."
  example:
  - "The following example shows how to navigate to a document and open it in a new browser window by specifying the \"about:blank\" target.  \n  \n```xaml  \n<StackPanel>  \n    <StackPanel Orientation=\"Horizontal\">  \n        <TextBox x:Name=\"addressTextBox\" Width=\"200\" />  \n        <Button Click=\"goNavigateButton_Click\">Go</Button>  \n    </StackPanel>  \n    <WebBrowser x:Name=\"myWebBrowser\" />  \n</StackPanel>  \n```  \n  \n```c#  \nprivate void goNavigateButton_Click(object sender, RoutedEventArgs e)  \n{  \n    // Get URI to navigate to  \n    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  \n  \n    // Only absolute URIs can be navigated to  \n    if (!uri.IsAbsoluteUri)  \n    {  \n        MessageBox.Show(\"The Address URI must be absolute eg 'http://www.microsoft.com'\");  \n        return;  \n    }  \n  \n    // Navigate to the desired URL by calling the .Navigate method  \n    this.myWebBrowser.Navigate(uri, \"_blank\", null, null);  \n}  \n```"
  syntax:
    content: public void Navigate (Uri source, string targetFrameName, byte[] postData, string additionalHeaders);
    parameters:
    - id: source
      type: System.Uri
      description: "The <xref:System.Uri> to navigate to."
    - id: targetFrameName
      type: System.String
      description: "The name of the frame to display the document&quot;s content in."
    - id: postData
      type: System.Byte[]
      description: "HTTP POST data to send to the server when the source is requested."
    - id: additionalHeaders
      type: System.String
      description: "HTTP headers to send to the server when the source is requested."
  overload: System.Windows.Controls.WebBrowser.Navigate*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Navigation from an application that is running in partial trust:      -   To a <xref:System.Uri> that is not located at the site of origin, or      -   <code>targetFrameName</code> name is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigated
  id: Navigated
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigated
  nameWithType: WebBrowser.Navigated
  fullName: System.Windows.Controls.WebBrowser.Navigated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Occurs when the document being navigated to is located and has started downloading."
  remarks: "Navigated event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigationEventArgs> class, which provides contextual information about the navigation, including Web response details.       This event will only be fired for top-level navigations."
  syntax:
    content: public event System.Windows.Navigation.NavigatedEventHandler Navigated;
    return:
      type: System.Windows.Navigation.NavigatedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)
  id: NavigateToStream(System.IO.Stream)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: NavigateToStream(Stream)
  nameWithType: WebBrowser.NavigateToStream(Stream)
  fullName: System.Windows.Controls.WebBrowser.NavigateToStream(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigate asynchronously to a <xref:System.IO.Stream> that contains the content for a document."
  remarks: "If the `stream` parameter is `null`, <xref:System.Windows.Controls.WebBrowser> navigates to a blank document (&quot;about:blank&quot;).       If the stream parameter is not in a valid [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] format, it will be displayed as plain text.       After navigation, <xref:System.Windows.Controls.WebBrowser.Source%2A> will be `null`."
  example:
  - "The following example shows how to navigate to a stream that contains a document.  \n  \n```c#  \nprivate void goNavigateToStreamButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Load HTML document as a stream  \n  Uri uri = new Uri(@\"pack://application:,,,/HTMLDocumentWithScript.html\", UriKind.Absolute);  \n  Stream source = Application.GetResourceStream(uri).Stream;  \n  \n  // Navigate to HTML document stream  \n  this.webBrowser.NavigateToStream(source);  \n}  \n```"
  syntax:
    content: public void NavigateToStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The <xref:System.IO.Stream> that contains the content for a document."
  overload: System.Windows.Controls.WebBrowser.NavigateToStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.NavigateToString(System.String)
  id: NavigateToString(System.String)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: NavigateToString(String)
  nameWithType: WebBrowser.NavigateToString(String)
  fullName: System.Windows.Controls.WebBrowser.NavigateToString(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Navigate asynchronously to a <xref:System.String> that contains the content for a document."
  remarks: "If the `text` parameter is `null`, <xref:System.Windows.Controls.WebBrowser> navigates to a blank document (&quot;about:blank&quot;).       If the text parameter is not in valid [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] format, it will be displayed as plain text.       After navigation, <xref:System.Windows.Controls.WebBrowser.Source%2A> will be `null`."
  example:
  - "The following example shows how to navigate to a string that contains a document.  \n  \n```c#  \nprivate void goNavigateToStringButton_Click(object sender, RoutedEventArgs e)  \n{  \n  // Load HTML document as a string  \n  Uri uri = new Uri(@\"pack://application:,,,/HTMLDocumentWithoutScript.html\", UriKind.Absolute);  \n  Stream stream = Application.GetResourceStream(uri).Stream;  \n  using (StreamReader reader = new StreamReader(stream))  \n  {  \n    // Navigate to HTML document string  \n    this.webBrowser.NavigateToString(reader.ReadToEnd());  \n  }  \n}  \n```"
  syntax:
    content: public void NavigateToString (string text);
    parameters:
    - id: text
      type: System.String
      description: "The <xref:System.String> that contains the content for a document."
  overload: System.Windows.Controls.WebBrowser.NavigateToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Navigating
  id: Navigating
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Navigating
  nameWithType: WebBrowser.Navigating
  fullName: System.Windows.Controls.WebBrowser.Navigating
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Occurs just before navigation to a document."
  remarks: "Navigating event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigatingCancelEventArgs> class. You can cancel the navigation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Navigation.NavigatingCancelEventArgs> object to `true`.       This event will only be fired for top-level navigations."
  syntax:
    content: public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;
    return:
      type: System.Windows.Navigation.NavigatingCancelEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.ObjectForScripting
  id: ObjectForScripting
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
  fullName: System.Windows.Controls.WebBrowser.ObjectForScripting
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets an instance of a public class, implemented by the host application, that can be accessed by script from a hosted document."
  remarks: "This property can be set to any COM-visible object for which you want its public properties and methods available to scripting code. You can make a class COM-visible by marking it with the <xref:System.Runtime.InteropServices.ComVisibleAttribute>.       The object that is set for scripting is exposed to the current document by the [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] DOM using the `window.external` property."
  syntax:
    content: public object ObjectForScripting { get; set; }
    return:
      type: System.Object
      description: "The <xref:System.Object> that is an instance of a <xref uid=&quot;langword_csharp_public&quot; name=&quot;public&quot; href=&quot;&quot;></xref> class, implemented by the host application, that can be accessed by script from a hosted document."
  overload: System.Windows.Controls.WebBrowser.ObjectForScripting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ObjectForScripting is set with an instance of type that is not <xref uid=&quot;langword_csharp_COMVisible&quot; name=&quot;COMVisible&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Refresh
  id: Refresh
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Refresh()
  nameWithType: WebBrowser.Refresh()
  fullName: System.Windows.Controls.WebBrowser.Refresh()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Reloads the current page."
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.Windows.Controls.WebBrowser.Refresh*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Refresh(System.Boolean)
  id: Refresh(System.Boolean)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Refresh(Boolean)
  nameWithType: WebBrowser.Refresh(Boolean)
  fullName: System.Windows.Controls.WebBrowser.Refresh(Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Reloads the current page with optional cache validation."
  remarks: "If `noCache` is `true`, the <xref:System.Windows.Controls.WebBrowser> control refreshes without cache validation by sending a &quot;Pragma:no-cache&quot; header to the server."
  syntax:
    content: public void Refresh (bool noCache);
    parameters:
    - id: noCache
      type: System.Boolean
      description: "Specifies whether to refresh without cache validation."
  overload: System.Windows.Controls.WebBrowser.Refresh*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.Source
  id: Source
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: Source
  nameWithType: WebBrowser.Source
  fullName: System.Windows.Controls.WebBrowser.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets the <xref:System.Uri> of the current document hosted in the <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref>."
  remarks: "Setting the source property causes <xref:System.Windows.Controls.WebBrowser> to navigate to the document specified by the <xref:System.Uri>. If the <xref:System.Uri> is `null`, a blank document is displayed (&quot;about:blank&quot;)."
  example:
  - "The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to an [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document by using markup only.  \n  \n```xaml  \n<!-- Web Browser Control that hosts a web page. -->  \n<WebBrowser x:Name=\"webBrowser\" Source=\"http://msdn.com\"   \n  Width=\"600\" Height=\"600\"  />  \n```"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "The <xref:System.Uri> for the current [!INCLUDE[TLA2#tla_html](~/add/includes/tla2sharptla-html-md.md)] document."
  overload: System.Windows.Controls.WebBrowser.Source*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Windows.Controls.WebBrowser&quot;></xref> instance is no longer valid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A reference to the underlying native `WebBrowser` could not be retrieved."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Navigation from an application that is running in partial trust to a <xref:System.Uri> that is not located at the site of origin."
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)
  id: TabIntoCore(System.Windows.Input.TraversalRequest)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: TabIntoCore(TraversalRequest)
  nameWithType: WebBrowser.TabIntoCore(TraversalRequest)
  fullName: System.Windows.Controls.WebBrowser.TabIntoCore(TraversalRequest)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  syntax:
    content: protected override bool TabIntoCore (System.Windows.Input.TraversalRequest request);
    parameters:
    - id: request
      type: System.Windows.Input.TraversalRequest
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Controls.WebBrowser.TabIntoCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  id: TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Controls.WebBrowser
  langs:
  - csharp
  name: TranslateAcceleratorCore(MSG,ModifierKeys)
  nameWithType: WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
  fullName: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  syntax:
    content: protected override bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);
    parameters:
    - id: msg
      type: System.Windows.Interop.MSG
      description: "To be added."
    - id: modifiers
      type: System.Windows.Input.ModifierKeys
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Interop.ActiveXHost
  isExternal: false
  name: System.Windows.Interop.ActiveXHost
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Controls.WebBrowser.#ctor
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: WebBrowser()
  nameWithType: WebBrowser.WebBrowser()
  fullName: System.Windows.Controls.WebBrowser.WebBrowser()
- uid: System.Windows.Controls.WebBrowser.CanGoBack
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
  fullName: System.Windows.Controls.WebBrowser.CanGoBack
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.WebBrowser.CanGoForward
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
  fullName: System.Windows.Controls.WebBrowser.CanGoForward
- uid: System.Windows.Controls.WebBrowser.Document
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Document
  nameWithType: WebBrowser.Document
  fullName: System.Windows.Controls.WebBrowser.Document
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.WebBrowser.GoBack
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoBack()
  nameWithType: WebBrowser.GoBack()
  fullName: System.Windows.Controls.WebBrowser.GoBack()
- uid: System.Windows.Controls.WebBrowser.GoForward
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoForward()
  nameWithType: WebBrowser.GoForward()
  fullName: System.Windows.Controls.WebBrowser.GoForward()
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: InvokeScript(String)
  nameWithType: WebBrowser.InvokeScript(String)
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: InvokeScript(String,Object[])
  nameWithType: WebBrowser.InvokeScript(String,Object[])
  fullName: System.Windows.Controls.WebBrowser.InvokeScript(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Controls.WebBrowser.LoadCompleted
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: LoadCompleted
  nameWithType: WebBrowser.LoadCompleted
  fullName: System.Windows.Controls.WebBrowser.LoadCompleted
- uid: System.Windows.Navigation.LoadCompletedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: LoadCompletedEventHandler
  nameWithType: LoadCompletedEventHandler
  fullName: System.Windows.Navigation.LoadCompletedEventHandler
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(String)
  nameWithType: WebBrowser.Navigate(String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String)
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(Uri)
  nameWithType: WebBrowser.Navigate(Uri)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(String,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(String,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(String,String,Byte[],String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate(Uri,String,Byte[],String)
  nameWithType: WebBrowser.Navigate(Uri,String,Byte[],String)
  fullName: System.Windows.Controls.WebBrowser.Navigate(Uri,String,Byte[],String)
- uid: System.Windows.Controls.WebBrowser.Navigated
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigated
  nameWithType: WebBrowser.Navigated
  fullName: System.Windows.Controls.WebBrowser.Navigated
- uid: System.Windows.Navigation.NavigatedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatedEventHandler
  nameWithType: NavigatedEventHandler
  fullName: System.Windows.Navigation.NavigatedEventHandler
- uid: System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToStream(Stream)
  nameWithType: WebBrowser.NavigateToStream(Stream)
  fullName: System.Windows.Controls.WebBrowser.NavigateToStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Controls.WebBrowser.NavigateToString(System.String)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToString(String)
  nameWithType: WebBrowser.NavigateToString(String)
  fullName: System.Windows.Controls.WebBrowser.NavigateToString(String)
- uid: System.Windows.Controls.WebBrowser.Navigating
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigating
  nameWithType: WebBrowser.Navigating
  fullName: System.Windows.Controls.WebBrowser.Navigating
- uid: System.Windows.Navigation.NavigatingCancelEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventHandler
  nameWithType: NavigatingCancelEventHandler
  fullName: System.Windows.Navigation.NavigatingCancelEventHandler
- uid: System.Windows.Controls.WebBrowser.ObjectForScripting
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
  fullName: System.Windows.Controls.WebBrowser.ObjectForScripting
- uid: System.Windows.Controls.WebBrowser.Refresh
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Refresh()
  nameWithType: WebBrowser.Refresh()
  fullName: System.Windows.Controls.WebBrowser.Refresh()
- uid: System.Windows.Controls.WebBrowser.Refresh(System.Boolean)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Refresh(Boolean)
  nameWithType: WebBrowser.Refresh(Boolean)
  fullName: System.Windows.Controls.WebBrowser.Refresh(Boolean)
- uid: System.Windows.Controls.WebBrowser.Source
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Source
  nameWithType: WebBrowser.Source
  fullName: System.Windows.Controls.WebBrowser.Source
- uid: System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TabIntoCore(TraversalRequest)
  nameWithType: WebBrowser.TabIntoCore(TraversalRequest)
  fullName: System.Windows.Controls.WebBrowser.TabIntoCore(TraversalRequest)
- uid: System.Windows.Input.TraversalRequest
  parent: System.Windows.Input
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
- uid: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TranslateAcceleratorCore(MSG,ModifierKeys)
  nameWithType: WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
  fullName: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(MSG,ModifierKeys)
- uid: System.Windows.Interop.MSG
  parent: System.Windows.Interop
  isExternal: false
  name: MSG
  nameWithType: MSG
  fullName: System.Windows.Interop.MSG
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: ModifierKeys
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Controls.WebBrowser.#ctor*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: WebBrowser
  nameWithType: WebBrowser.WebBrowser
- uid: System.Windows.Controls.WebBrowser.CanGoBack*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoBack
  nameWithType: WebBrowser.CanGoBack
- uid: System.Windows.Controls.WebBrowser.CanGoForward*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: CanGoForward
  nameWithType: WebBrowser.CanGoForward
- uid: System.Windows.Controls.WebBrowser.Document*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Document
  nameWithType: WebBrowser.Document
- uid: System.Windows.Controls.WebBrowser.GoBack*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoBack
  nameWithType: WebBrowser.GoBack
- uid: System.Windows.Controls.WebBrowser.GoForward*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: GoForward
  nameWithType: WebBrowser.GoForward
- uid: System.Windows.Controls.WebBrowser.InvokeScript*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: InvokeScript
  nameWithType: WebBrowser.InvokeScript
- uid: System.Windows.Controls.WebBrowser.Navigate*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Navigate
  nameWithType: WebBrowser.Navigate
- uid: System.Windows.Controls.WebBrowser.NavigateToStream*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToStream
  nameWithType: WebBrowser.NavigateToStream
- uid: System.Windows.Controls.WebBrowser.NavigateToString*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: NavigateToString
  nameWithType: WebBrowser.NavigateToString
- uid: System.Windows.Controls.WebBrowser.ObjectForScripting*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: ObjectForScripting
  nameWithType: WebBrowser.ObjectForScripting
- uid: System.Windows.Controls.WebBrowser.Refresh*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Refresh
  nameWithType: WebBrowser.Refresh
- uid: System.Windows.Controls.WebBrowser.Source*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: Source
  nameWithType: WebBrowser.Source
- uid: System.Windows.Controls.WebBrowser.TabIntoCore*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TabIntoCore
  nameWithType: WebBrowser.TabIntoCore
- uid: System.Windows.Controls.WebBrowser.TranslateAcceleratorCore*
  parent: System.Windows.Controls.WebBrowser
  isExternal: false
  name: TranslateAcceleratorCore
  nameWithType: WebBrowser.TranslateAcceleratorCore
