### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Flowchart
  id: Flowchart
  children:
  - System.Activities.Statements.Flowchart.#ctor
  - System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Flowchart.Nodes
  - System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Statements.Flowchart.StartNode
  - System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Activities.Statements.Flowchart.ValidateUnconnectedNodes
  - System.Activities.Statements.Flowchart.Variables
  langs:
  - csharp
  name: Flowchart
  nameWithType: Flowchart
  fullName: System.Activities.Statements.Flowchart
  type: Class
  summary: "Represents the models workflows using the familiar flowchart paradigm."
  remarks: "The Flowchart activity allows free-form creation of a workflow using nodes and links."
  example:
  - "The following code sample demonstrates creating a Flowchart activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#2](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Nodes")]

      public sealed class Flowchart : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: Flowchart()
  nameWithType: Flowchart.Flowchart()
  fullName: System.Activities.Statements.Flowchart.Flowchart()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Creates a new instance of the <xref href=&quot;System.Activities.Statements.Flowchart&quot;></xref> class."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#2](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#2)]"
  syntax:
    content: public Flowchart ();
    parameters: []
  overload: System.Activities.Statements.Flowchart.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Flowchart.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Flowchart.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "To be added."
  overload: System.Activities.Statements.Flowchart.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: Flowchart.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Flowchart.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.Flowchart.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.Nodes
  id: Nodes
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: Nodes
  nameWithType: Flowchart.Nodes
  fullName: System.Activities.Statements.Flowchart.Nodes
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Gets or sets the collection of <xref href=&quot;System.Activities.Statements.FlowNode&quot;></xref> objects contained by the flowchart."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#2](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#2)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Statements.FlowNode> Nodes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.FlowNode}
      description: "A collection of <xref href=&quot;System.Activities.Statements.FlowNode&quot;></xref> objects.."
  overload: System.Activities.Statements.Flowchart.Nodes*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: "To be added."
    - id: originalActivity
      type: System.Activities.Activity
      description: "To be added."
  overload: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.StartNode
  id: StartNode
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: StartNode
  nameWithType: Flowchart.StartNode
  fullName: System.Activities.Statements.Flowchart.StartNode
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Gets or sets the <xref href=&quot;System.Activities.Statements.FlowNode&quot;></xref> to be executed when the flowchart starts."
  remarks: "There must only be one StartNode."
  example:
  - "The following code sample demonstrates configuring the StartNode of a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#2](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#2)]"
  syntax:
    content: public System.Activities.Statements.FlowNode StartNode { get; set; }
    return:
      type: System.Activities.Statements.FlowNode
      description: "The starting node."
  overload: System.Activities.Statements.Flowchart.StartNode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  id: UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: Flowchart.UpdateInstance(NativeActivityUpdateContext)
  fullName: System.Activities.Statements.Flowchart.UpdateInstance(NativeActivityUpdateContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);
    parameters:
    - id: updateContext
      type: System.Activities.DynamicUpdate.NativeActivityUpdateContext
      description: "To be added."
  overload: System.Activities.Statements.Flowchart.UpdateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes
  id: ValidateUnconnectedNodes
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: ValidateUnconnectedNodes
  nameWithType: Flowchart.ValidateUnconnectedNodes
  fullName: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Gets or sets a value that indicates whether unconnected nodes are validated."
  syntax:
    content: public bool ValidateUnconnectedNodes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if unconnected nodes are validated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Flowchart.Variables
  id: Variables
  parent: System.Activities.Statements.Flowchart
  langs:
  - csharp
  name: Variables
  nameWithType: Flowchart.Variables
  fullName: System.Activities.Statements.Flowchart.Variables
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Gets or sets the collection of <xref:System.WorkflowModel.Variable> objects associated with the <xref href=&quot;System.Activities.Statements.Flowchart&quot;></xref>, which are available to share state across the child activities contained within the Flowchart."
  remarks: ''
  example:
  - "The following code sample demonstrates using Variables in a <xref:System.Activities.Statements.Flowchart> activity. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#2](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#2)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "The collection of variables."
  overload: System.Activities.Statements.Flowchart.Variables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.Flowchart.#ctor
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Flowchart()
  nameWithType: Flowchart.Flowchart()
  fullName: System.Activities.Statements.Flowchart.Flowchart()
- uid: System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Flowchart.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Flowchart.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: Flowchart.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Flowchart.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.Flowchart.Nodes
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Nodes
  nameWithType: Flowchart.Nodes
  fullName: System.Activities.Statements.Flowchart.Nodes
- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.FlowNode}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<FlowNode>
  nameWithType: Collection<FlowNode>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.FlowNode>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Statements.FlowNode>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Statements.FlowNode
    name: FlowNode
    nameWithType: FlowNode
    fullName: FlowNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.Flowchart.StartNode
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: StartNode
  nameWithType: Flowchart.StartNode
  fullName: System.Activities.Statements.Flowchart.StartNode
- uid: System.Activities.Statements.FlowNode
  parent: System.Activities.Statements
  isExternal: false
  name: FlowNode
  nameWithType: FlowNode
  fullName: System.Activities.Statements.FlowNode
- uid: System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: Flowchart.UpdateInstance(NativeActivityUpdateContext)
  fullName: System.Activities.Statements.Flowchart.UpdateInstance(NativeActivityUpdateContext)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateContext
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateContext
  nameWithType: NativeActivityUpdateContext
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateContext
- uid: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: ValidateUnconnectedNodes
  nameWithType: Flowchart.ValidateUnconnectedNodes
  fullName: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Statements.Flowchart.Variables
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Variables
  nameWithType: Flowchart.Variables
  fullName: System.Activities.Statements.Flowchart.Variables
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Flowchart.#ctor*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Flowchart
  nameWithType: Flowchart.Flowchart
- uid: System.Activities.Statements.Flowchart.CacheMetadata*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: CacheMetadata
  nameWithType: Flowchart.CacheMetadata
- uid: System.Activities.Statements.Flowchart.Execute*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Execute
  nameWithType: Flowchart.Execute
- uid: System.Activities.Statements.Flowchart.Nodes*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Nodes
  nameWithType: Flowchart.Nodes
- uid: System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: Flowchart.OnCreateDynamicUpdateMap
- uid: System.Activities.Statements.Flowchart.StartNode*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: StartNode
  nameWithType: Flowchart.StartNode
- uid: System.Activities.Statements.Flowchart.UpdateInstance*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: UpdateInstance
  nameWithType: Flowchart.UpdateInstance
- uid: System.Activities.Statements.Flowchart.ValidateUnconnectedNodes*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: ValidateUnconnectedNodes
  nameWithType: Flowchart.ValidateUnconnectedNodes
- uid: System.Activities.Statements.Flowchart.Variables*
  parent: System.Activities.Statements.Flowchart
  isExternal: false
  name: Variables
  nameWithType: Flowchart.Variables
