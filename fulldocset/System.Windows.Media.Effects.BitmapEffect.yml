### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffect
  id: BitmapEffect
  children:
  - System.Windows.Media.Effects.BitmapEffect.#ctor
  - System.Windows.Media.Effects.BitmapEffect.Clone
  - System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
  type: Class
  summary: "**Nota: Esta API está obsoleta.** A alternativa não obsoleta é <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>.       Define um efeito de mapa de bits. Classes derivadas definem efeitos que podem ser aplicados a um <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> objeto, tal como um <xref href=&quot;System.Windows.Controls.Button&quot;> </xref> ou um <xref href=&quot;System.Windows.Controls.Image&quot;> </xref>."
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]os efeitos de mapa de bits são composto de software. Qualquer objeto que aplica-se um efeito também será composto no software. Não devem ser aplicados mapa de bits efeitos visuais grandes ou animações, porque esta pode degradar o desempenho.      > [!CAUTION] > Efeitos de mapa de bits não suportam a execução de fidedignidade parcial. Uma aplicação tem de ter permissões de fidedignidade total para efeitos de mapa de bits de utilizar.       Transformações de escala são aplicadas a um visual antes de um efeito é aplicado. Em caso de uma transformação não uniform escala, o efeito irá utilizar mais dos valores da escala.       As atualizações da árvore visual de um <xref:System.Windows.Media.VisualBrush>não serão propagadas se for um BitmapEffect na cadeia de principal de pincel.</xref:System.Windows.Media.VisualBrush> Pode contornar esta limitação ao aplicar uma atualização de cena no objeto principal do efeito. Pode chamar <xref:System.Windows.UIElement.InvalidateVisual%2A>ou incluem uma animação para forçar uma atualização de cenas.</xref:System.Windows.UIElement.InvalidateVisual%2A>       Efeitos personalizados herdam esta classe para criar uma interface de gerido para o efeito de não gerido. Para obter mais informações, consulte o [BitmapEffect não gerido](https://msdn.microsoft.com/library/ms735092.aspx) API."
  syntax:
    content: 'public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> classe."
  syntax:
    content: protected BitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref>, efetuar cópias profundas de valores deste objeto. Quando copiar propriedades de dependência, este método copia enlaces de referências e os dados de recursos (mas já não poderão resolver), mas não animações ou os respetivos valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> objeto, tornando profundas cópias dos valores atuais deste objeto. As referências de recurso, enlaces de dados e animações não são copiadas, mas são os seus valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  id: CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Cria um identificador um [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objeto que é utilizado para inicializar um efeito personalizado."
  remarks: "Interação de Framework com efeitos personalizados é processada através de um [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objeto. O efeito externo é inicializado com o efeito personalizado através do <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>método.</xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>"
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the CreateBitmapEffectOuter method to retrieve a wrapper effect object.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "Um identificador um [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objeto."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Quando substituí-lo de uma classe derivada, cria um clone do efeito não gerido."
  remarks: ''
  example:
  - "The following example demonstrates an override of the CreateUnmanagedEffect method.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "Um identificador para o clone não geridos em vigor."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  id: GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Devolve o <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> que resulta quando o efeito é aplicado ao especificado <xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);
    parameters:
    - id: input
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "A entrada para aplicar o efeito para."
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "O <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> com o efeito aplicado para a entrada."
  overload: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  id: InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Inicializa uma [IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx) identificador obtida <xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>com o fornecido [IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx).</xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>"
  remarks: ''
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the InitializeBitmapEffect method to initialize the wrapper object with the custom effect.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);
    parameters:
    - id: outerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "O wrapper de IMILBitmapEffect externo ao inicializar."
    - id: innerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "IMILBitmapEffectPrimitive interna."
  overload: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  id: SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Define a propriedade especificada para o valor indicado."
  remarks: "Este método destina-se como um método de programa auxiliar para <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A> Quando substituir <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>, utilize SetValue para atualizar os valores de propriedade não gerido.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>"
  syntax:
    content: protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);
    parameters:
    - id: effect
      type: System.Runtime.InteropServices.SafeHandle
      description: "O identificador para o efeito que contém a propriedade para alterar."
    - id: propertyName
      type: System.String
      description: "O nome da propriedade para alterar."
    - id: value
      type: System.Object
      description: "O valor a utilizar para definir a propriedade."
  overload: System.Windows.Media.Effects.BitmapEffect.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Quando substituí-lo de uma classe derivada, atualiza os Estados de propriedade das propriedades do efeito não geridos."
  remarks: "Quando definir propriedades de não geridas dentro de uma substituição deste método, utilize o método de programa auxiliar <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>"
  syntax:
    content: protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "O identificador para o efeito que contém as propriedades para atualizar."
  overload: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BitmapEffect.Clone
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter
  nameWithType: BitmapEffect.CreateBitmapEffectOuter
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput
  nameWithType: BitmapEffect.GetOutput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect
  nameWithType: BitmapEffect.InitializeBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue
  nameWithType: BitmapEffect.SetValue
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState
