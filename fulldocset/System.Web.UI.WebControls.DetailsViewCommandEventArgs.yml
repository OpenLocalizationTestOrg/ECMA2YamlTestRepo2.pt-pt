### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  id: DetailsViewCommandEventArgs
  children:
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  langs:
  - csharp
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.DetailsView.ItemCommand&quot;></xref> event."
  remarks: "The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event when a button within a <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, or <xref:System.Web.UI.WebControls.TemplateField> row field is clicked. This allows you to provide an event handler that performs a custom routine whenever this event occurs.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.DetailsView> control also raises other specialized events when certain buttons are clicked (buttons with the `CommandName` property set to &quot;Delete&quot;, &quot;Insert&quot;, &quot;Page&quot;, or &quot;Update&quot;). When using one of these buttons, you should consider using one of the specialized events provided by the control (such as <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> or <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>).       A DetailsViewCommandEventArgs object is passed to the event handler. If the button that raised the event has a command name or command argument value, you can use the DetailsViewCommandEventArgs object to determine these values. To determine the command name and command argument of the button clicked, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> and <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> properties, respectively. You can also access the <xref:System.Web.UI.WebControls.DetailsView> control that raised the event by using the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> property.       For a list of initial property values for an instance of the DetailsViewCommandEventArgs class, see the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A> constructor."
  example:
  - "The following code example demonstrates how to use the DetailsViewCommandEventArgs object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event to determine the command name of the button clicked by the user. This example uses the single-file coding model.  \n  \n [!code-vb[DetailsViewCommandEventArgsCodeInline#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_1.aspx)]\n [!code-cs[DetailsViewCommandEventArgsCodeInline#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_1.aspx)]  \n  \n The following code example shows a code-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code-behind file.  \n  \n [!code-cs[DetailsViewCommandEventArgsCodeBehind2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_2.aspx)]\n [!code-vb[DetailsViewCommandEventArgsCodeBehind2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_2.aspx)]  \n  \n The following code example shows the code-behind file for the previous example.  \n  \n [!code-cs[DetailsViewCommandEventArgsCodeBehind2#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_153_3.cs)]\n [!code-vb[DetailsViewCommandEventArgsCodeBehind2#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_153_3.vb)]"
  syntax:
    content: 'public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs'
  inheritance:
  - System.EventArgs
  - System.Web.UI.WebControls.CommandEventArgs
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  langs:
  - csharp
  name: DetailsViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.DetailsViewCommandEventArgs&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> class.       The following table shows the initial property values for an instance of <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs>.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|The value of the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> contained in the `originalArgs` parameter.|   |<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|The value of the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property of the <xref:System.Web.UI.WebControls.CommandEventArgs> object contained in the `originalArgs` parameter.|   |<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>|The object contained in the `commandSource` parameter.|      > [!NOTE] >  This constructor is used primarily by control developers when raising events."
  syntax:
    content: public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);
    parameters:
    - id: commandSource
      type: System.Object
      description: "The source of the command."
    - id: originalArgs
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref> that contains event data."
  overload: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  id: CommandSource
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  langs:
  - csharp
  name: CommandSource
  nameWithType: DetailsViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the source of the command."
  remarks: "Use the CommandSource property to access the properties of the object that represents the source of the command. In some cases, this will be the <xref:System.Web.UI.WebControls.DetailsView> control itself, and in other cases it will be the <xref:System.Web.UI.WebControls.Button> control that was clicked."
  example:
  - "The following code example demonstrates how to use the CommandSource property to determine which of two <xref:System.Web.UI.WebControls.DetailsView> controls raised the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event.  \n  \n [!code-cs[DetailsViewCommandEventArgsCommandSource#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_379_1.aspx)]\n [!code-vb[DetailsViewCommandEventArgsCommandSource#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_379_1.aspx)]"
  syntax:
    content: public object CommandSource { get; }
    return:
      type: System.Object
      description: "An instance of the &lt;xref:System.Object?displayProperty=fullName&gt; class that represents the source of the command."
  overload: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  id: Handled
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: DetailsViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether the control has handled the event."
  remarks: "Set this property to `true` in the event handler to specify that the <xref:System.Web.UI.WebControls.DetailsView> control should not handle the event because you are handling it in your code."
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if data-bound event code was skipped or has finished running; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: DetailsViewCommandEventArgs(Object,CommandEventArgs)
  nameWithType: DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.DetailsViewCommandEventArgs(Object,CommandEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: DetailsViewCommandEventArgs.CommandSource
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: DetailsViewCommandEventArgs.Handled
  fullName: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: DetailsViewCommandEventArgs
  nameWithType: DetailsViewCommandEventArgs.DetailsViewCommandEventArgs
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource*
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: CommandSource
  nameWithType: DetailsViewCommandEventArgs.CommandSource
- uid: System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled*
  parent: System.Web.UI.WebControls.DetailsViewCommandEventArgs
  isExternal: false
  name: Handled
  nameWithType: DetailsViewCommandEventArgs.Handled
