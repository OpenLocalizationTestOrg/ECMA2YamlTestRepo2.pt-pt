### YamlMime:ManagedReference
items:
- uid: System.Net.SocketPermissionAttribute
  id: SocketPermissionAttribute
  children:
  - System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Net.SocketPermissionAttribute.Access
  - System.Net.SocketPermissionAttribute.CreatePermission
  - System.Net.SocketPermissionAttribute.Host
  - System.Net.SocketPermissionAttribute.Port
  - System.Net.SocketPermissionAttribute.Transport
  langs:
  - csharp
  name: SocketPermissionAttribute
  nameWithType: SocketPermissionAttribute
  fullName: System.Net.SocketPermissionAttribute
  type: Class
  summary: "Specifies security actions to control <xref:System.Net.Sockets.Socket> connections. This class cannot be inherited."
  remarks: "To use this attribute, your <xref:System.Net.Sockets.Socket> connection must conform to the properties that are specified in your SocketPermissionAttribute. For example, to apply the permission to a <xref:System.Net.Sockets.Socket> connection on port 80, set the <xref:System.Net.SocketPermissionAttribute.Port%2A> property of the SocketPermissionAttribute to &quot;80&quot;. The security information that is specified in SocketPermissionAttribute is stored in the metadata of the attribute target, which is the class to which the SocketPermissionAttribute is applied. The system then accesses the information at run time. The <xref:System.Security.Permissions.SecurityAction> that is passed to the constructor determines the allowable SocketPermissionAttribute targets.      > [!NOTE] >  The properties of a SocketPermissionAttribute must have values that are not `null`. Also, once set, the values of the properties cannot be changed.      > [!NOTE] >  For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class SocketPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: SocketPermissionAttribute(SecurityAction)
  nameWithType: SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
  fullName: System.Net.SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref> class with the specified <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> value."
  remarks: "The <xref:System.Security.Permissions.SecurityAction> value that is passed to this constructor specifies the allowable <xref:System.Net.SocketPermissionAttribute> targets."
  syntax:
    content: public SocketPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "One of the <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> values."
  overload: System.Net.SocketPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>action</code> is not a valid <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> value."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Access
  id: Access
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Access
  nameWithType: SocketPermissionAttribute.Access
  fullName: System.Net.SocketPermissionAttribute.Access
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets the network access method that is allowed by this <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  remarks: "This property is write-once. Valid values for this property correspond to <xref:System.Net.NetworkAccess> enumeration values."
  syntax:
    content: public string Access { get; set; }
    return:
      type: System.String
      description: "A string that contains the network access method that is allowed by this instance of <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>. Valid values are &quot;Accept&quot; and &quot;Connect.&quot;"
  overload: System.Net.SocketPermissionAttribute.Access*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The Access property is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. To specify more than one Access method, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SocketPermissionAttribute.CreatePermission()
  fullName: System.Net.SocketPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Creates and returns a new instance of the <xref href=&quot;System.Net.SocketPermission&quot;></xref> class."
  remarks: "The CreatePermission method is called by the security system, not by the application code. The security information described by <xref:System.Net.SocketPermissionAttribute> is stored in the metadata of the attribute target, which is the class to which the <xref:System.Net.SocketPermissionAttribute> is applied. The system then accesses the information at run-time and calls CreatePermission. The system uses the returned <xref:System.Security.IPermission> to enforce the specified security requirements."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "An instance of the <xref href=&quot;System.Net.SocketPermission&quot;></xref> class that corresponds to the security declaration."
  overload: System.Net.SocketPermissionAttribute.CreatePermission*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One or more of the current instance&quot;s <xref:System.Net.SocketPermissionAttribute.Access*>, <xref:System.Net.SocketPermissionAttribute.Host*>, <xref:System.Net.SocketPermissionAttribute.Transport*>, or <xref:System.Net.SocketPermissionAttribute.Port*> properties is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Host
  id: Host
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Host
  nameWithType: SocketPermissionAttribute.Host
  fullName: System.Net.SocketPermissionAttribute.Host
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets the DNS host name or IP address that is specified by this <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  remarks: "This property is write-once and specifies the Domain Name Services (DNS) host name to which this permission applies."
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: "A string that contains the DNS host name or IP address that is associated with this instance of <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  overload: System.Net.SocketPermissionAttribute.Host*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Host is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. To specify more than one host, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Port
  id: Port
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Port
  nameWithType: SocketPermissionAttribute.Port
  fullName: System.Net.SocketPermissionAttribute.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets the port number that is associated with this <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  remarks: "This property is write-once and specifies the port number to which this permission applies. The valid values are a string-encoded integer or the string &quot;All&quot;."
  syntax:
    content: public string Port { get; set; }
    return:
      type: System.String
      description: "A string that contains the port number that is associated with this instance of <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  overload: System.Net.SocketPermissionAttribute.Port*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The Port property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. To specify more than one port, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.SocketPermissionAttribute.Transport
  id: Transport
  parent: System.Net.SocketPermissionAttribute
  langs:
  - csharp
  name: Transport
  nameWithType: SocketPermissionAttribute.Transport
  fullName: System.Net.SocketPermissionAttribute.Transport
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets the <xref href=&quot;System.Net.TransportType&quot;></xref> that is specified by this <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  remarks: "Possible string values of this property are <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, <xref:System.Net.TransportType>, and <xref:System.Net.TransportType>."
  syntax:
    content: public string Transport { get; set; }
    return:
      type: System.String
      description: "A string that contains the <xref href=&quot;System.Net.TransportType&quot;></xref> that is associated with this <xref href=&quot;System.Net.SocketPermissionAttribute&quot;></xref>."
  overload: System.Net.SocketPermissionAttribute.Transport*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Transport is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. To specify more than one transport type, use an additional attribute declaration statement."
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: SocketPermissionAttribute(SecurityAction)
  nameWithType: SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
  fullName: System.Net.SocketPermissionAttribute.SocketPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Net.SocketPermissionAttribute.Access
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Access
  nameWithType: SocketPermissionAttribute.Access
  fullName: System.Net.SocketPermissionAttribute.Access
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.SocketPermissionAttribute.CreatePermission
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SocketPermissionAttribute.CreatePermission()
  fullName: System.Net.SocketPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.SocketPermissionAttribute.Host
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Host
  nameWithType: SocketPermissionAttribute.Host
  fullName: System.Net.SocketPermissionAttribute.Host
- uid: System.Net.SocketPermissionAttribute.Port
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Port
  nameWithType: SocketPermissionAttribute.Port
  fullName: System.Net.SocketPermissionAttribute.Port
- uid: System.Net.SocketPermissionAttribute.Transport
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Transport
  nameWithType: SocketPermissionAttribute.Transport
  fullName: System.Net.SocketPermissionAttribute.Transport
- uid: System.Net.SocketPermissionAttribute.#ctor*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: SocketPermissionAttribute
  nameWithType: SocketPermissionAttribute.SocketPermissionAttribute
- uid: System.Net.SocketPermissionAttribute.Access*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Access
  nameWithType: SocketPermissionAttribute.Access
- uid: System.Net.SocketPermissionAttribute.CreatePermission*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: SocketPermissionAttribute.CreatePermission
- uid: System.Net.SocketPermissionAttribute.Host*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Host
  nameWithType: SocketPermissionAttribute.Host
- uid: System.Net.SocketPermissionAttribute.Port*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Port
  nameWithType: SocketPermissionAttribute.Port
- uid: System.Net.SocketPermissionAttribute.Transport*
  parent: System.Net.SocketPermissionAttribute
  isExternal: false
  name: Transport
  nameWithType: SocketPermissionAttribute.Transport
