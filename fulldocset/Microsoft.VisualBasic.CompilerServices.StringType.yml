### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.StringType
  id: StringType
  children:
  - Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)
  - Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)
  - Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)
  - Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)
  - Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)
  langs:
  - csharp
  name: StringType
  nameWithType: StringType
  fullName: Microsoft.VisualBasic.CompilerServices.StringType
  type: Class
  summary: "This class has been deprecated as of Visual Basic 2005."
  remarks: "This class provides methods for manipulating data that potentially represents a `String` value."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public sealed class StringType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)
  id: FromBoolean(System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromBoolean(Boolean)
  nameWithType: StringType.FromBoolean(Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to the specified <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromBoolean (bool Value);
    parameters:
    - id: Value
      type: System.Boolean
      description: "Required. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)
  id: FromByte(System.Byte)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromByte(Byte)
  nameWithType: StringType.FromByte(Byte)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(Byte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to the specified <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromByte (byte Value);
    parameters:
    - id: Value
      type: System.Byte
      description: "Required. <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromByte*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)
  id: FromChar(System.Char)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromChar(Char)
  nameWithType: StringType.FromChar(Char)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to the specified <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromChar (char Value);
    parameters:
    - id: Value
      type: System.Char
      description: "Required. <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromChar*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)
  id: FromDate(System.DateTime)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromDate(DateTime)
  nameWithType: StringType.FromDate(DateTime)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to the specified date."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromDate (DateTime Value);
    parameters:
    - id: Value
      type: System.DateTime
      description: "Required. Date to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)
  id: FromDecimal(System.Decimal)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromDecimal(Decimal)
  nameWithType: StringType.FromDecimal(Decimal)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to the specified <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromDecimal (decimal Value);
    parameters:
    - id: Value
      type: System.Decimal
      description: "Required. <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)
  id: FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromDecimal(Decimal,NumberFormatInfo)
  nameWithType: StringType.FromDecimal(Decimal,NumberFormatInfo)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal,NumberFormatInfo)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref> and number format information."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromDecimal (decimal Value, System.Globalization.NumberFormatInfo NumberFormat);
    parameters:
    - id: Value
      type: System.Decimal
      description: "Required. <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    - id: NumberFormat
      type: System.Globalization.NumberFormatInfo
      description: "A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)
  id: FromDouble(System.Double)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromDouble(Double)
  nameWithType: StringType.FromDouble(Double)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromDouble (double Value);
    parameters:
    - id: Value
      type: System.Double
      description: "Required. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)
  id: FromDouble(System.Double,System.Globalization.NumberFormatInfo)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromDouble(Double,NumberFormatInfo)
  nameWithType: StringType.FromDouble(Double,NumberFormatInfo)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double,NumberFormatInfo)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> and number format information."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromDouble (double Value, System.Globalization.NumberFormatInfo NumberFormat);
    parameters:
    - id: Value
      type: System.Double
      description: "Required. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    - id: NumberFormat
      type: System.Globalization.NumberFormatInfo
      description: "A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)
  id: FromInteger(System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromInteger(Int32)
  nameWithType: StringType.FromInteger(Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromInteger (int Value);
    parameters:
    - id: Value
      type: System.Int32
      description: "Required. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)
  id: FromLong(System.Int64)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromLong(Int64)
  nameWithType: StringType.FromLong(Int64)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(Int64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Int64&quot; name=&quot;Int64&quot; href=&quot;&quot;></xref> (64-bit integer)."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromLong (long Value);
    parameters:
    - id: Value
      type: System.Int64
      description: "Required. <xref uid=&quot;langword_csharp_Int64&quot; name=&quot;Int64&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromLong*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)
  id: FromObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromObject(Object)
  nameWithType: StringType.FromObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to the specified object."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromObject (object Value);
    parameters:
    - id: Value
      type: System.Object
      description: "Required. Object to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)
  id: FromShort(System.Int16)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromShort(Int16)
  nameWithType: StringType.FromShort(Int16)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;></xref> (16-bit integer)."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromShort (short Value);
    parameters:
    - id: Value
      type: System.Int16
      description: "Required. <xref uid=&quot;langword_csharp_Int616&quot; name=&quot;Int616&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromShort*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)
  id: FromSingle(System.Single)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromSingle(Single)
  nameWithType: StringType.FromSingle(Single)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref>."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromSingle (float Value);
    parameters:
    - id: Value
      type: System.Single
      description: "Required. <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)
  id: FromSingle(System.Single,System.Globalization.NumberFormatInfo)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: FromSingle(Single,NumberFormatInfo)
  nameWithType: StringType.FromSingle(Single,NumberFormatInfo)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single,NumberFormatInfo)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Returns a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value that corresponds to a specified <xref uid=&quot;langword_csharp_Single&quot; name=&quot;Single&quot; href=&quot;&quot;></xref> and number format information."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static string FromSingle (float Value, System.Globalization.NumberFormatInfo NumberFormat);
    parameters:
    - id: Value
      type: System.Single
      description: "Required. <xref uid=&quot;langword_csharp_Sinble&quot; name=&quot;Sinble&quot; href=&quot;&quot;></xref> to convert to a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value."
    - id: NumberFormat
      type: System.Globalization.NumberFormatInfo
      description: "A <xref:System.Globalization.NumberFormatInfo> object that defines how numeric values are formatted and displayed, depending on the culture."
    return:
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> value corresponding to <code>Value</code>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)
  id: MidStmtStr(System.String@,System.Int32,System.Int32,System.String)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: MidStmtStr(String,Int32,Int32,String)
  nameWithType: StringType.MidStmtStr(String,Int32,Int32,String)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(String,Int32,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Overwrites the <code>sDest</code> parameter with the contents of the <code>sInsert</code> parameter."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static void MidStmtStr (ref string sDest, int StartPosition, int MaxInsertLength, string sInsert);
    parameters:
    - id: sDest
      type: System.String
      description: "Required. String variable to modify."
    - id: StartPosition
      type: System.Int32
      description: "Required. Location in the `sDest` parameter to begin overwriting from. The index is 1-based."
    - id: MaxInsertLength
      type: System.Int32
      description: "Required. Maximum number of characters from the `sInsert` parameter to use, starting from the first character."
    - id: sInsert
      type: System.String
      description: "Required. String value to overwrite the `sDest` parameter with."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)
  id: StrCmp(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: StrCmp(String,String,Boolean)
  nameWithType: StringType.StrCmp(String,String,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Compares two strings."
  remarks: "This class supports the Visual Basic compiler and is not intended to be used directly from your code."
  syntax:
    content: public static int StrCmp (string sLeft, string sRight, bool TextCompare);
    parameters:
    - id: sLeft
      type: System.String
      description: "Required. String to compare with `sRight`."
    - id: sRight
      type: System.String
      description: "Required. String to compare with `sLeft`."
    - id: TextCompare
      type: System.Boolean
      description: "Required. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> to perform a case-insensitive comparison; otherwise <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "<table><thead><tr><th> Value       </th><th> Condition       </th></tr></thead><tbody><tr><td> zero       </td><td> The two strings are equal.       </td></tr><tr><td> less than zero       </td><td>           <code>sLeft</code> is less than <code>sRight</code>.       </td></tr><tr><td> greater than zero       </td><td>           <code>sLeft</code> is greater than <code>sRight</code>.       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: StrLike(String,String,CompareMethod)
  nameWithType: StringType.StrLike(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=&quot;langword_csharp_Like&quot; name=&quot;Like&quot; href=&quot;&quot;></xref> operator."
  remarks: "This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a Boolean value indicating whether or not the string satisfies the pattern."
  syntax:
    content: public static bool StrLike (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: Source
      type: System.String
      description: "Required. Any <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> expression."
    - id: Pattern
      type: System.String
      description: "Any <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> expression conforming to the pattern-matching conventions described in Like Operator."
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: "Specifies how to compare strings to patterns, according to the <xref href=&quot;Microsoft.VisualBasic.CompareMethod&quot;></xref>. Can be <xref uid=&quot;langword_csharp_vbBinaryCompare&quot; name=&quot;vbBinaryCompare&quot; href=&quot;&quot;></xref> for binary comparison or <xref uid=&quot;langword_csharp_vbTextCompare&quot; name=&quot;vbTextCompare&quot; href=&quot;&quot;></xref> for comparison based on a case-insensitive text sort order determined by your system&quot;s <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;></xref> value."
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. If the string does not satisfy the pattern, result is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>. If both string and pattern are empty strings, the result is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLike*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)
  id: StrLikeBinary(System.String,System.String)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: StrLikeBinary(String,String)
  nameWithType: StringType.StrLikeBinary(String,String)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=&quot;langword_csharp_Like&quot; name=&quot;Like&quot; href=&quot;&quot;></xref> operator, using binary comparison."
  remarks: "This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a Boolean value indicating whether or not the string satisfies the pattern.       This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison."
  syntax:
    content: public static bool StrLikeBinary (string Source, string Pattern);
    parameters:
    - id: Source
      type: System.String
      description: "Required. Any <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> expression."
    - id: Pattern
      type: System.String
      description: "Required. Any <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> expression conforming to the pattern-matching conventions described in Like Operator."
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. If the string does not satisfy the pattern, result is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>. If both string and pattern are empty strings, the result is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)
  id: StrLikeText(System.String,System.String)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  langs:
  - csharp
  name: StrLikeText(String,String)
  nameWithType: StringType.StrLikeText(String,String)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Compares the parameters <code>Source</code> and <code>Pattern</code> and returns the same results as the <xref uid=&quot;langword_csharp_Like&quot; name=&quot;Like&quot; href=&quot;&quot;></xref> operator, using text comparison."
  remarks: "This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/add/includes/ajax-current-ext-md.md). The result is a `Boolean` value indicating whether or not the string satisfies the pattern.       This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system&quot;s `LocaleID` value."
  syntax:
    content: public static bool StrLikeText (string Source, string Pattern);
    parameters:
    - id: Source
      type: System.String
      description: "Required. Any <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> expression."
    - id: Pattern
      type: System.String
      description: "Required. Any <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> expression conforming to the pattern-matching conventions described in Like Operator."
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. If the string does not satisfy the pattern, result is <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>. If both string and pattern are empty strings, the result is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromBoolean(Boolean)
  nameWithType: StringType.FromBoolean(Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromByte(Byte)
  nameWithType: StringType.FromByte(Byte)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromChar(Char)
  nameWithType: StringType.FromChar(Char)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDate(DateTime)
  nameWithType: StringType.FromDate(DateTime)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDecimal(Decimal)
  nameWithType: StringType.FromDecimal(Decimal)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDecimal(Decimal,NumberFormatInfo)
  nameWithType: StringType.FromDecimal(Decimal,NumberFormatInfo)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(Decimal,NumberFormatInfo)
- uid: System.Globalization.NumberFormatInfo
  parent: System.Globalization
  isExternal: true
  name: NumberFormatInfo
  nameWithType: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDouble(Double)
  nameWithType: StringType.FromDouble(Double)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDouble(Double,NumberFormatInfo)
  nameWithType: StringType.FromDouble(Double,NumberFormatInfo)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(Double,NumberFormatInfo)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromInteger(Int32)
  nameWithType: StringType.FromInteger(Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromLong(Int64)
  nameWithType: StringType.FromLong(Int64)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromLong(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromObject(Object)
  nameWithType: StringType.FromObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromShort(Int16)
  nameWithType: StringType.FromShort(Int16)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromShort(Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromSingle(Single)
  nameWithType: StringType.FromSingle(Single)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromSingle(Single,NumberFormatInfo)
  nameWithType: StringType.FromSingle(Single,NumberFormatInfo)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(Single,NumberFormatInfo)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: MidStmtStr(String,Int32,Int32,String)
  nameWithType: StringType.MidStmtStr(String,Int32,Int32,String)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(String,Int32,Int32,String)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrCmp(String,String,Boolean)
  nameWithType: StringType.StrCmp(String,String,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(String,String,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrLike(String,String,CompareMethod)
  nameWithType: StringType.StrLike(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLike(String,String,CompareMethod)
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrLikeBinary(String,String)
  nameWithType: StringType.StrLikeBinary(String,String)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(String,String)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrLikeText(String,String)
  nameWithType: StringType.StrLikeText(String,String)
  fullName: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(String,String)
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromBoolean
  nameWithType: StringType.FromBoolean
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromByte*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromByte
  nameWithType: StringType.FromByte
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromChar*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromChar
  nameWithType: StringType.FromChar
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDate*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDate
  nameWithType: StringType.FromDate
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDecimal
  nameWithType: StringType.FromDecimal
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromDouble*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromDouble
  nameWithType: StringType.FromDouble
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromInteger*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromInteger
  nameWithType: StringType.FromInteger
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromLong*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromLong
  nameWithType: StringType.FromLong
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromObject*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromObject
  nameWithType: StringType.FromObject
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromShort*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromShort
  nameWithType: StringType.FromShort
- uid: Microsoft.VisualBasic.CompilerServices.StringType.FromSingle*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: FromSingle
  nameWithType: StringType.FromSingle
- uid: Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: MidStmtStr
  nameWithType: StringType.MidStmtStr
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrCmp*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrCmp
  nameWithType: StringType.StrCmp
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLike*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrLike
  nameWithType: StringType.StrLike
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrLikeBinary
  nameWithType: StringType.StrLikeBinary
- uid: Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText*
  parent: Microsoft.VisualBasic.CompilerServices.StringType
  isExternal: false
  name: StrLikeText
  nameWithType: StringType.StrLikeText
