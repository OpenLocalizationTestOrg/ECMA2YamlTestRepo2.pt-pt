### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDsaCng
  id: ECDsaCng
  children:
  - System.Security.Cryptography.ECDsaCng.#ctor
  - System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)
  - System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)
  - System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)
  - System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDsaCng.HashAlgorithm
  - System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsaCng.Key
  - System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])
  - System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)
  - System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])
  - System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)
  - System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])
  - System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  - System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: ECDsaCng
  nameWithType: ECDsaCng
  fullName: System.Security.Cryptography.ECDsaCng
  type: Class
  summary: "Fornece uma implementação de Cryptography Next Generation (CNG) da elíptica curva Digital assinatura algoritmo (ECDSA)."
  remarks: "Esta classe deriva da <xref:System.Security.Cryptography.ECDsa>classe abstracta. a base</xref:System.Security.Cryptography.ECDsa>"
  example:
  - "The following example shows how to use the ECDsaCng class to sign a message and how to use the signature to verify that the message has not been altered.  \n  \n [!code-cs[ECDsaCng#1](~/add/codesnippet/csharp/t-system.security.crypto_32_1.cs)]\n [!code-vb[ECDsaCng#1](~/add/codesnippet/visualbasic/t-system.security.crypto_32_1.vb)]"
  syntax:
    content: 'public sealed class ECDsaCng : System.Security.Cryptography.ECDsa'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.ECDsa
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.ECDsa.Create
  - System.Security.Cryptography.ECDsa.Create(System.String)
  - System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm
  - System.Security.Cryptography.ECDsa.SignatureAlgorithm
  - System.Security.Cryptography.ECDsa.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDsa.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ECDsaCng()
  nameWithType: ECDsaCng.ECDsaCng()
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;> </xref> classe com um par de chaves aleatório."
  remarks: "O par de chaves aleatório tem um comprimento de chave público de 521 bits."
  syntax:
    content: public ECDsaCng ();
    parameters: []
  overload: System.Security.Cryptography.ECDsaCng.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Classes do Cryptography Next Generation (CNG) não são suportadas neste sistema."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ECDsaCng(Int32)
  nameWithType: ECDsaCng.ECDsaCng(Int32)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;> </xref> classe com um par de chaves aleatório, utilizando o tamanho de chave especificado."
  remarks: "O par de chaves aleatório terão o comprimento de chave público definido pelo `keySize` parâmetro."
  syntax:
    content: public ECDsaCng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "O tamanho da chave. Os tamanhos de chaves válidos são 256, 384 e 521 bits."
  overload: System.Security.Cryptography.ECDsaCng.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Classes do Cryptography Next Generation (CNG) não são suportadas neste sistema."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>keySize</code>Especifica um comprimento inválido."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ECDsaCng(CngKey)
  nameWithType: ECDsaCng.ECDsaCng(CngKey)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.ECDsaCng&quot;> </xref> classe utilizando especificado <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objeto."
  syntax:
    content: public ECDsaCng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "A chave que será utilizada como entrada para as operações criptográficas efetuada pelo objecto actual."
  overload: System.Security.Cryptography.ECDsaCng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>não especifique um grupo de elíptica curva Digital assinatura algoritmo (ECDSA)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Classes do Cryptography Next Generation (CNG) não são suportadas neste sistema."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ECDsaCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A adicionar."
  overload: System.Security.Cryptography.ECDsaCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: ECDsaCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Este método não está implementado."
  remarks: "Para anular a serialização de uma chave XML, utilize o <xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>sobrecarga em vez disso.</xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "As informações chaves baseado em XML para anular a serialização."
  overload: System.Security.Cryptography.ECDsaCng.FromXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Este método não foi substituído para esta instância."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  id: FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Deserializes as informações da chave de uma cadeia de carateres do XML utilizando o formato especificado."
  syntax:
    content: public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: xml
      type: System.String
      description: "As informações chaves baseado em XML para anular a serialização."
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "Um dos valores da enumeração que especifica o formato da cadeia XML. O único atualmente aceite o formato é <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>Especifica um formato inválido. É o único valor aceite <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Todos os outros erros."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm
  id: HashAlgorithm
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: ECDsaCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDsaCng.HashAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém ou define o algoritmo de hash para utilizar quando iniciar sessão e verificar dados."
  remarks: "Esta propriedade aceita os algoritmos seguintes: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>e <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A> </xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>       Outros algoritmos de hash personalizado também podem ser utilizados.       O algoritmo predefinido é <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>       Esta propriedade não é utilizada se estiver a assinatura ou verificar os dados que já estão a ser protegido por hash."
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Um objeto que especifica o algoritmo de hash."
  overload: System.Security.Cryptography.ECDsaCng.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "A adicionar."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A adicionar."
    return:
      type: System.Byte[]
      description: "A adicionar."
  overload: System.Security.Cryptography.ECDsaCng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "A adicionar."
    - id: offset
      type: System.Int32
      description: "A adicionar."
    - id: count
      type: System.Int32
      description: "A adicionar."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A adicionar."
    return:
      type: System.Byte[]
      description: "A adicionar."
  overload: System.Security.Cryptography.ECDsaCng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.Key
  id: Key
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: Key
  nameWithType: ECDsaCng.Key
  fullName: System.Security.Cryptography.ECDsaCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém ou define a chave a utilizar quando iniciar sessão e verificar dados."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "Um objeto que especifica a chave."
  overload: System.Security.Cryptography.ECDsaCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])
  id: SignData(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignData(Byte[])
  nameWithType: ECDsaCng.SignData(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gera uma assinatura de dados especificados."
  remarks: "Este método gera uma assinatura para os dados especificados por hash de dados de entrada a utilizar o <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>propriedade e, em seguida, o resultado de assinatura.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>       O <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>sinalizador é necessário se a chave de Cryptography Next Generation (CNG) não for gerada aleatoriamente pelo <xref:System.Security.Cryptography.ECDsaCng>objeto.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public byte[] SignData (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Os dados de mensagens sejam assinadas."
    return:
      type: System.Byte[]
      description: "Uma assinatura digital para os dados especificados."
  overload: System.Security.Cryptography.ECDsaCng.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "As informações da chave que estão associadas com a instância não tem uma chave privada."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)
  id: SignData(System.IO.Stream)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignData(Stream)
  nameWithType: ECDsaCng.SignData(Stream)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Stream)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gera uma assinatura para o fluxo de dados especificado, a ler para o fim da sequência."
  remarks: "Este método gera uma assinatura para o fluxo de dados especificada por hash de dados de entrada a utilizar o <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>propriedade e, em seguida, o resultado de assinatura.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>       O <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>sinalizador é necessário se a chave de Cryptography Next Generation (CNG) não for gerada aleatoriamente pelo <xref:System.Security.Cryptography.ECDsaCng>objeto.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public byte[] SignData (System.IO.Stream data);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "O fluxo de dados sejam assinados."
    return:
      type: System.Byte[]
      description: "Uma assinatura digital para o fluxo de dados especificado."
  overload: System.Security.Cryptography.ECDsaCng.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "As informações da chave que estão associadas com a instância não tem uma chave privada."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)
  id: SignData(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32)
  nameWithType: ECDsaCng.SignData(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gera uma assinatura digital para o comprimento especificado dos dados, começando no desvio especificado."
  remarks: "Este método gera uma assinatura para os dados especificados por hash de dados de entrada a utilizar o <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>propriedade e, em seguida, o resultado de assinatura de <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>sinalizador é necessário se a chave de Cryptography Next Generation (CNG) não for gerada aleatoriamente pelo <xref:System.Security.Cryptography.ECDsaCng>objeto.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public byte[] SignData (byte[] data, int offset, int count);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Os dados de mensagens sejam assinadas."
    - id: offset
      type: System.Int32
      description: "A localização na cadeia de no qual pretende iniciar a assinatura."
    - id: count
      type: System.Int32
      description: "O comprimento da cadeia, em carateres, a seguir `offset` que será assinada."
    return:
      type: System.Byte[]
      description: "Uma assinatura digital para o comprimento especificado dos dados."
  overload: System.Security.Cryptography.ECDsaCng.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>count</code>ou <code>offset</code> causado leitura fora dos limites da cadeia de dados."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "As informações da chave que estão associadas com a instância não tem uma chave privada."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])
  id: SignHash(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: SignHash(Byte[])
  nameWithType: ECDsaCng.SignHash(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignHash(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gera uma assinatura para o valor de hash especificado."
  remarks: "O <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>sinalizador é necessário se a chave de Cryptography Next Generation (CNG) não for gerada aleatoriamente pelo <xref:System.Security.Cryptography.ECDsaCng>objeto.</xref:System.Security.Cryptography.ECDsaCng> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public override byte[] SignHash (byte[] hash);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "O valor de hash dos dados sejam assinados."
    return:
      type: System.Byte[]
      description: "Uma assinatura digital para o valor de hash especificado."
  overload: System.Security.Cryptography.ECDsaCng.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "As informações da chave que estão associadas com a instância não tem uma chave privada."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: ECDsaCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Este método não está implementado."
  remarks: "Para converter a chave atual para uma representação XML, utilize o <xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>sobrecarga em vez disso.</xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir parâmetros privados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Não aplicável."
  overload: System.Security.Cryptography.ECDsaCng.ToXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Este método não está implementado."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  id: ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDsaCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializa as informações da chave para uma cadeia de carateres do XML utilizando o formato especificado."
  syntax:
    content: public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "Um dos valores da enumeração que especifica o formato da cadeia XML. O único atualmente aceite o formato é <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
    return:
      type: System.String
      description: "Um objeto string que contém as informações da chave, serializadas como uma cadeia XML, de acordo com o formato do pedido."
  overload: System.Security.Cryptography.ECDsaCng.ToXmlString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>Especifica um formato inválido. É o único valor aceite <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Todos os outros erros."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])
  id: VerifyData(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyData(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Verifica a assinatura digital dos dados especificados."
  remarks: "Este método gera uma assinatura para os dados especificados por hash de dados de entrada a utilizar o <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>propriedade e, em seguida, o resultado de assinatura.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public bool VerifyData (byte[] data, byte[] signature);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Os dados que foi iniciados."
    - id: signature
      type: System.Byte[]
      description: "A assinatura ser verificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a assinatura é válida. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])
  id: VerifyData(System.IO.Stream,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyData(Stream,Byte[])
  nameWithType: ECDsaCng.VerifyData(Stream,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Stream,Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Verifica a assinatura digital do fluxo de dados especificada ao ler o fim do fluxo."
  remarks: "Este método codifica os dados de entrada, utilizando o <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>propriedade antes de verificação.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public bool VerifyData (System.IO.Stream data, byte[] signature);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "O fluxo de dados que foi iniciado."
    - id: signature
      type: System.Byte[]
      description: "A assinatura ser verificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a assinatura é válida. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyData(Byte[],Int32,Int32,Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Verifica uma assinatura para o comprimento especificado dos dados, começando no desvio especificado."
  remarks: "Este método codifica os dados de entrada, utilizando o <xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>propriedade antes de verificação.</xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A>"
  syntax:
    content: public bool VerifyData (byte[] data, int offset, int count, byte[] signature);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Os dados que foi iniciados."
    - id: offset
      type: System.Int32
      description: "A localização dos dados a que os dados assinados começa."
    - id: count
      type: System.Int32
      description: "O comprimento dos dados, em carateres, a seguir `offset` que será assinada."
    - id: signature
      type: System.Byte[]
      description: "A assinatura ser verificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a assinatura é válida. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyData*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>ou <code>count</code> é inferior a zero.       - ou - <code>offset</code> ou <code>count</code> excede o comprimento da matriz de bytes transmitido a <code>data</code> parâmetro."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])
  id: VerifyHash(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyHash(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyHash(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Verifica a assinatura digital especificada em relação a um valor de hash especificado."
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "O valor de hash dos dados a ser verificado."
    - id: signature
      type: System.Byte[]
      description: "A assinatura digital dos dados a ser verificado em relação ao valor de hash."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a assinatura é válida. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDsaCng.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>or <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.ECDsa
  isExternal: false
  name: System.Security.Cryptography.ECDsa
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.ECDsaCng.#ctor
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng()
  nameWithType: ECDsaCng.ECDsaCng()
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng()
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng(Int32)
  nameWithType: ECDsaCng.ECDsaCng(Int32)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng(CngKey)
  nameWithType: ECDsaCng.ECDsaCng(CngKey)
  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ECDsaCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: FromXmlString(String)
  nameWithType: ECDsaCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String,ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECKeyXmlFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: ECKeyXmlFormat
  nameWithType: ECKeyXmlFormat
  fullName: System.Security.Cryptography.ECKeyXmlFormat
- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDsaCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDsaCng.HashAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Stream,HashAlgorithmName)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.ECDsaCng.Key
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Key
  nameWithType: ECDsaCng.Key
  fullName: System.Security.Cryptography.ECDsaCng.Key
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData(Byte[])
  nameWithType: ECDsaCng.SignData(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[])
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData(Stream)
  nameWithType: ECDsaCng.SignData(Stream)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Stream)
- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData(Byte[],Int32,Int32)
  nameWithType: ECDsaCng.SignData(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignHash(Byte[])
  nameWithType: ECDsaCng.SignHash(Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.SignHash(Byte[])
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: ECDsaCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(Boolean)
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDsaCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Byte[])
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData(Stream,Byte[])
  nameWithType: ECDsaCng.VerifyData(Stream,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Stream,Byte[])
- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData(Byte[],Int32,Int32,Byte[])
  nameWithType: ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])
- uid: System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyHash(Byte[],Byte[])
  nameWithType: ECDsaCng.VerifyHash(Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDsaCng.VerifyHash(Byte[],Byte[])
- uid: System.Security.Cryptography.ECDsaCng.#ctor*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ECDsaCng
  nameWithType: ECDsaCng.ECDsaCng
- uid: System.Security.Cryptography.ECDsaCng.Dispose*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Dispose
  nameWithType: ECDsaCng.Dispose
- uid: System.Security.Cryptography.ECDsaCng.FromXmlString*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: FromXmlString
  nameWithType: ECDsaCng.FromXmlString
- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDsaCng.HashAlgorithm
- uid: System.Security.Cryptography.ECDsaCng.HashData*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: HashData
  nameWithType: ECDsaCng.HashData
- uid: System.Security.Cryptography.ECDsaCng.Key*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: Key
  nameWithType: ECDsaCng.Key
- uid: System.Security.Cryptography.ECDsaCng.SignData*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignData
  nameWithType: ECDsaCng.SignData
- uid: System.Security.Cryptography.ECDsaCng.SignHash*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: SignHash
  nameWithType: ECDsaCng.SignHash
- uid: System.Security.Cryptography.ECDsaCng.ToXmlString*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: ToXmlString
  nameWithType: ECDsaCng.ToXmlString
- uid: System.Security.Cryptography.ECDsaCng.VerifyData*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyData
  nameWithType: ECDsaCng.VerifyData
- uid: System.Security.Cryptography.ECDsaCng.VerifyHash*
  parent: System.Security.Cryptography.ECDsaCng
  isExternal: false
  name: VerifyHash
  nameWithType: ECDsaCng.VerifyHash
