### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  id: SafeNCryptProviderHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor
  - Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle
  langs:
  - csharp
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  type: Class
  summary: "Provides a safe handle that represents a key storage provider (NCRYPT_PROV_HANDLE)."
  remarks: "This class should be used when working with native code that expects an NCRYPT_PROV_HANDLE.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeNCryptProviderHandle : Microsoft.Win32.SafeHandles.SafeNCryptHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  langs:
  - csharp
  name: SafeNCryptProviderHandle()
  nameWithType: SafeNCryptProviderHandle.SafeNCryptProviderHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.SafeNCryptProviderHandle()
  type: Constructor
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle&quot;></xref> class."
  syntax:
    content: public SafeNCryptProviderHandle ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle
  id: ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  langs:
  - csharp
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptProviderHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseNativeHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeNCryptHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: SafeNCryptProviderHandle()
  nameWithType: SafeNCryptProviderHandle.SafeNCryptProviderHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.SafeNCryptProviderHandle()
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptProviderHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle.SafeNCryptProviderHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle.ReleaseNativeHandle*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  isExternal: false
  name: ReleaseNativeHandle
  nameWithType: SafeNCryptProviderHandle.ReleaseNativeHandle
