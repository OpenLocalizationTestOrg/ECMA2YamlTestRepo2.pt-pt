### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymbolToken
  id: SymbolToken
  children:
  - System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)
  - System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)
  - System.Diagnostics.SymbolStore.SymbolToken.GetHashCode
  - System.Diagnostics.SymbolStore.SymbolToken.GetToken
  - System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  langs:
  - csharp
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
  type: Struct
  summary: "A estrutura de SymbolToken é uma representação de objeto de um token que representa o simbólicas informações."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct SymbolToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: SymbolToken(Int32)
  nameWithType: SymbolToken.SymbolToken(Int32)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.SymbolToken(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> estrutura quando indicado um valor."
  syntax:
    content: public SymbolToken (int val);
    parameters:
    - id: val
      type: System.Int32
      description: "O valor a ser utilizado para o token."
  overload: System.Diagnostics.SymbolStore.SymbolToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)
  id: Equals(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: Equals(SymbolToken)
  nameWithType: SymbolToken.Equals(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(SymbolToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Determina se <code> obj </code> é igual a esta instância."
  syntax:
    content: public bool Equals (System.Diagnostics.SymbolStore.SymbolToken obj);
    parameters:
    - id: obj
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "O <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> é igual a esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.SymbolStore.SymbolToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SymbolToken.Equals(Object)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Determina se <code> obj </code> é uma instância de <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> e é igual a esta instância."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> é uma instância de <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> e é igual a esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.SymbolStore.SymbolToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode
  id: GetHashCode
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SymbolToken.GetHashCode()
  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Gera o código hash para o token atual."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para o token atual."
  overload: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.GetToken
  id: GetToken
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: GetToken()
  nameWithType: SymbolToken.GetToken()
  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetToken()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Obtém o valor do token atual."
  syntax:
    content: public int GetToken ();
    parameters: []
    return:
      type: System.Int32
      description: "O valor do token atual."
  overload: System.Diagnostics.SymbolStore.SymbolToken.GetToken*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  id: op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: op_Equality(SymbolToken,SymbolToken)
  nameWithType: SymbolToken.op_Equality(SymbolToken,SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(SymbolToken,SymbolToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Devolve um valor que indica se duas <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> objetos são iguais."
  syntax:
    content: public static bool op_Equality (System.Diagnostics.SymbolStore.SymbolToken a, System.Diagnostics.SymbolStore.SymbolToken b);
    parameters:
    - id: a
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> estrutura."
    - id: b
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> estrutura."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> and <code>b</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.SymbolStore.SymbolToken.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  id: op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  langs:
  - csharp
  name: op_Inequality(SymbolToken,SymbolToken)
  nameWithType: SymbolToken.op_Inequality(SymbolToken,SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(SymbolToken,SymbolToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Devolve um valor que indica se duas <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> objetos não são iguais."
  syntax:
    content: public static bool op_Inequality (System.Diagnostics.SymbolStore.SymbolToken a, System.Diagnostics.SymbolStore.SymbolToken b);
    parameters:
    - id: a
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> estrutura."
    - id: b
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A <xref href=&quot;System.Diagnostics.SymbolStore.SymbolToken&quot;> </xref> estrutura."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> and <code>b</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Diagnostics.SymbolStore.SymbolToken.#ctor(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: SymbolToken(Int32)
  nameWithType: SymbolToken.SymbolToken(Int32)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.SymbolToken(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: Equals(SymbolToken)
  nameWithType: SymbolToken.Equals(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(SymbolToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals(System.Object)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: Equals(Object)
  nameWithType: SymbolToken.Equals(Object)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: GetHashCode()
  nameWithType: SymbolToken.GetHashCode()
  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode()
- uid: System.Diagnostics.SymbolStore.SymbolToken.GetToken
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: GetToken()
  nameWithType: SymbolToken.GetToken()
  fullName: System.Diagnostics.SymbolStore.SymbolToken.GetToken()
- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: op_Equality(SymbolToken,SymbolToken)
  nameWithType: SymbolToken.op_Equality(SymbolToken,SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Equality(SymbolToken,SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(System.Diagnostics.SymbolStore.SymbolToken,System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: op_Inequality(SymbolToken,SymbolToken)
  nameWithType: SymbolToken.op_Inequality(SymbolToken,SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality(SymbolToken,SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymbolToken.#ctor*
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken.SymbolToken
- uid: System.Diagnostics.SymbolStore.SymbolToken.Equals*
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: Equals
  nameWithType: SymbolToken.Equals
- uid: System.Diagnostics.SymbolStore.SymbolToken.GetHashCode*
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: GetHashCode
  nameWithType: SymbolToken.GetHashCode
- uid: System.Diagnostics.SymbolStore.SymbolToken.GetToken*
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: GetToken
  nameWithType: SymbolToken.GetToken
- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Equality*
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: op_Equality
  nameWithType: SymbolToken.op_Equality
- uid: System.Diagnostics.SymbolStore.SymbolToken.op_Inequality*
  parent: System.Diagnostics.SymbolStore.SymbolToken
  isExternal: false
  name: op_Inequality
  nameWithType: SymbolToken.op_Inequality
