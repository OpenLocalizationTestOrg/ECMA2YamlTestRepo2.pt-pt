### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  id: WSTrustMessage
  children:
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  langs:
  - csharp
  name: WSTrustMessage
  nameWithType: WSTrustMessage
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  type: Class
  summary: "The Base class for RST and RSTR."
  remarks: "For more information about the message and elements that this class represents, see the version of the WS-Trust specification that applies to your scenario."
  syntax:
    content: 'public abstract class WSTrustMessage : System.IdentityModel.OpenObject'
  inheritance:
  - System.Object
  - System.IdentityModel.OpenObject
  implements: []
  inheritedMembers:
  - System.IdentityModel.OpenObject.Properties
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: WSTrustMessage()
  nameWithType: WSTrustMessage.WSTrustMessage()
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.WSTrustMessage()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustMessage&quot;></xref> class."
  remarks: "The default constructor for extensibility."
  syntax:
    content: protected WSTrustMessage ();
    parameters: []
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  id: AllowPostdating
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: AllowPostdating
  nameWithType: WSTrustMessage.AllowPostdating
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:AllowPostdating element."
  remarks: "This optional element indicates that returned tokens should allow requests for postdated tokens.       This property is usually used with the token renewal binding."
  syntax:
    content: public bool AllowPostdating { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if returned tokens should allow requests for postdated tokens; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  id: AppliesTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: AppliesTo
  nameWithType: WSTrustMessage.AppliesTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wsp:AppliesTo element."
  remarks: "This optional element specifies the endpoint address for which this security token is desired; for example, the service to which the token applies.       Either wst:TokenType or wst:AppliesTo should be defined in the token request message. If both are specified, the wst:AppliesTo field takes precedence."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.EndpointReference
      description: "An <xref:System.ServiceModel.EndpointAddress> that represents the endpoint address for which the security token is desired."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  id: AuthenticationType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: WSTrustMessage.AuthenticationType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:AuthenticationType element."
  remarks: "This optional element indicates the type of authentication desired, specified as a URI."
  syntax:
    content: public string AuthenticationType { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the type of authentication desired."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  id: BinaryExchange
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: BinaryExchange
  nameWithType: WSTrustMessage.BinaryExchange
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:BinaryExchange element."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.BinaryExchange
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.BinaryExchange&quot;></xref> that contains the binary data exchanged. This includes the contents of the ValueType and EncodingType attributes as well as the actual data."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  id: CanonicalizationAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: CanonicalizationAlgorithm
  nameWithType: WSTrustMessage.CanonicalizationAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:CanonicalizationAlgorithm element."
  syntax:
    content: public string CanonicalizationAlgorithm { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the canonicalization algorithm."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  id: Context
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: Context
  nameWithType: WSTrustMessage.Context
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the Context attribute on the RST or RSTR."
  remarks: "The optional Context attribute on an RST element specifies an identifier (context) for a request. All subsequent RSTR elements relating to this request must carry this attribute."
  syntax:
    content: public string Context { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that identifies the context of a request or response message."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: WSTrustMessage.EncryptionAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:EncryptionAlgorithm element."
  remarks: "This optional URI element indicates the desired encryption algorithm used within the returned token."
  syntax:
    content: public string EncryptionAlgorithm { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the encryption algorithm."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  id: EncryptWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: EncryptWith
  nameWithType: WSTrustMessage.EncryptWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:EncryptWith element."
  remarks: "This optional URI element indicates the desired encryption algorithm to be used with the issued security token."
  syntax:
    content: public string EncryptWith { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the desired encryption algoritm to be used with the issued security token."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "An attempt to set the property to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string occurs."
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  id: Entropy
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: Entropy
  nameWithType: WSTrustMessage.Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:Entropy element."
  remarks: "This optional element allows a requestor to specify entropy that is to be used in creating the key. This is commonly used in a token issuance request message. The value of this element should be either an EncryptedKey or BinarySecret depending on whether or not the key is encrypted."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.Entropy Entropy { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.Entropy
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Entropy&quot;></xref> that represents the contents of the entropy element."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  id: KeySizeInBits
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: KeySizeInBits
  nameWithType: WSTrustMessage.KeySizeInBits
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:KeySize element inside a RequestSecurityToken (RST) message."
  syntax:
    content: public Nullable<int> KeySizeInBits { get; set; }
    return:
      type: System.Nullable{System.Int32}
      description: "The key size in bits."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "An attempt to set a value less than or equal to zero occurs."
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  id: KeyType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: KeyType
  nameWithType: WSTrustMessage.KeyType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:KeyType element inside a RequestSecurityToken (RST) message."
  remarks: "This optional URI element indicates the type of key desired in the security token."
  syntax:
    content: public string KeyType { get; set; }
    return:
      type: System.String
      description: "A string that contains the URI that identifies the type of key desired."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  id: KeyWrapAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: KeyWrapAlgorithm
  nameWithType: WSTrustMessage.KeyWrapAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:KeyWrapAlgorithm element."
  remarks: "This optional URI indicates the desired algorithm to use for key wrapping when STS encrypts the issued token for the relying party using an asymmetric key."
  syntax:
    content: public string KeyWrapAlgorithm { get; set; }
    return:
      type: System.String
      description: "A string that contains the URI that identifies the key wrap algorithm."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  id: Lifetime
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: Lifetime
  nameWithType: WSTrustMessage.Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:Lifetime element inside a RequestSecurityToken (RST) message."
  remarks: "This optional element specifies the desired time range during which the returned security token is valid."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;></xref> that represents the desired time during which the returned token will be valid."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  id: ReplyTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: ReplyTo
  nameWithType: WSTrustMessage.ReplyTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the address to be used for replying to the Relying Party."
  remarks: "This is a local extension that is used exclusively in passive scenarios with the WS-Federation protocol."
  syntax:
    content: public string ReplyTo { get; set; }
    return:
      type: System.String
      description: "A string that contains the address."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  id: RequestType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: RequestType
  nameWithType: WSTrustMessage.RequestType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the wst:RequestType element."
  remarks: "This required element indicates the request type."
  syntax:
    content: public string RequestType { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the request type; for example, one of the constants defined in the <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes&quot;></xref> class."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: WSTrustMessage.SignatureAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:SignatureAlgorithm element."
  remarks: "This optional URI element indicates the desired signature algorithm used within the returned token."
  syntax:
    content: public string SignatureAlgorithm { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the signature algorithm."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  id: SignWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: SignWith
  nameWithType: WSTrustMessage.SignWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:SignWith element."
  remarks: "This optional URI element indicates the desired signature algorithm to be used with the issued security token. This is an extension to the RequestSecurityToken element."
  syntax:
    content: public string SignWith { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that identifies the desired signature algorithm."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "An attempt to set the value to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string occurs."
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  id: TokenType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: TokenType
  nameWithType: WSTrustMessage.TokenType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:TokenType element."
  remarks: "This optional element indicates the desired token type."
  syntax:
    content: public string TokenType { get; set; }
    return:
      type: System.String
      description: "A string that contains a URI that indicates the token type."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  id: UseKey
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: UseKey
  nameWithType: WSTrustMessage.UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Gets or sets the contents of the wst:UseKey element."
  remarks: "If the requestor wishes to use an existing key rather than create a new one, then this property can be used to reference a security token containing the desired key. This is commonly used in the asymetric key issurance case."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.UseKey UseKey { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.UseKey
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;></xref> that contains the key."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.OpenObject
  isExternal: false
  name: System.IdentityModel.OpenObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: WSTrustMessage()
  nameWithType: WSTrustMessage.WSTrustMessage()
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.WSTrustMessage()
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AllowPostdating
  nameWithType: WSTrustMessage.AllowPostdating
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AppliesTo
  nameWithType: WSTrustMessage.AppliesTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
- uid: System.IdentityModel.Protocols.WSTrust.EndpointReference
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: EndpointReference
  nameWithType: EndpointReference
  fullName: System.IdentityModel.Protocols.WSTrust.EndpointReference
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AuthenticationType
  nameWithType: WSTrustMessage.AuthenticationType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: BinaryExchange
  nameWithType: WSTrustMessage.BinaryExchange
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
- uid: System.IdentityModel.Protocols.WSTrust.BinaryExchange
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: BinaryExchange
  nameWithType: BinaryExchange
  fullName: System.IdentityModel.Protocols.WSTrust.BinaryExchange
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: CanonicalizationAlgorithm
  nameWithType: WSTrustMessage.CanonicalizationAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Context
  nameWithType: WSTrustMessage.Context
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: WSTrustMessage.EncryptionAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptWith
  nameWithType: WSTrustMessage.EncryptWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Entropy
  nameWithType: WSTrustMessage.Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
- uid: System.IdentityModel.Protocols.WSTrust.Entropy
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Entropy
  nameWithType: Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeySizeInBits
  nameWithType: WSTrustMessage.KeySizeInBits
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyType
  nameWithType: WSTrustMessage.KeyType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyWrapAlgorithm
  nameWithType: WSTrustMessage.KeyWrapAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Lifetime
  nameWithType: WSTrustMessage.Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: ReplyTo
  nameWithType: WSTrustMessage.ReplyTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: RequestType
  nameWithType: WSTrustMessage.RequestType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: WSTrustMessage.SignatureAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignWith
  nameWithType: WSTrustMessage.SignWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: TokenType
  nameWithType: WSTrustMessage.TokenType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: UseKey
  nameWithType: WSTrustMessage.UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
- uid: System.IdentityModel.Protocols.WSTrust.UseKey
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: UseKey
  nameWithType: UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: WSTrustMessage
  nameWithType: WSTrustMessage.WSTrustMessage
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AllowPostdating
  nameWithType: WSTrustMessage.AllowPostdating
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AppliesTo
  nameWithType: WSTrustMessage.AppliesTo
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AuthenticationType
  nameWithType: WSTrustMessage.AuthenticationType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: BinaryExchange
  nameWithType: WSTrustMessage.BinaryExchange
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: CanonicalizationAlgorithm
  nameWithType: WSTrustMessage.CanonicalizationAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Context
  nameWithType: WSTrustMessage.Context
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: WSTrustMessage.EncryptionAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptWith
  nameWithType: WSTrustMessage.EncryptWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Entropy
  nameWithType: WSTrustMessage.Entropy
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeySizeInBits
  nameWithType: WSTrustMessage.KeySizeInBits
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyType
  nameWithType: WSTrustMessage.KeyType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyWrapAlgorithm
  nameWithType: WSTrustMessage.KeyWrapAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Lifetime
  nameWithType: WSTrustMessage.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: ReplyTo
  nameWithType: WSTrustMessage.ReplyTo
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: RequestType
  nameWithType: WSTrustMessage.RequestType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: WSTrustMessage.SignatureAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignWith
  nameWithType: WSTrustMessage.SignWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: TokenType
  nameWithType: WSTrustMessage.TokenType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: UseKey
  nameWithType: WSTrustMessage.UseKey
