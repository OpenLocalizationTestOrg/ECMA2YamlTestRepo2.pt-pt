### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypeDescriptorContext
  id: ITypeDescriptorContext
  children:
  - System.ComponentModel.ITypeDescriptorContext.Container
  - System.ComponentModel.ITypeDescriptorContext.Instance
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  - System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  langs:
  - csharp
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
  type: Interface
  summary: "Provides contextual information about a component, such as its container and property descriptor."
  remarks: "The ITypeDescriptorContext interface provides contextual information about a component. ITypeDescriptorContext is typically used at design time to provide information about a design-time container. This interface is commonly used in type conversion. For details, see <xref:System.ComponentModel.TypeConverter>.      > [!NOTE] >  Do not rely on the presence of this interface when you design a type converter. If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception. This interface&quot;s properties can return `null` at any time, and you should plan for this."
  example:
  - "The following code example demonstrates how to use the ITypeDescriptorContext interface to support type conversion.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._73_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._73_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._73_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ITypeDescriptorContext : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  id: Container
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets the container representing this <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> request."
  remarks: "The Container property gets the logical container of the component associated with the type descriptor."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "An <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> with the set of objects for this <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no container or if the <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> does not use outside objects."
  overload: System.ComponentModel.ITypeDescriptorContext.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  id: Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets the object that is connected with this type descriptor request."
  remarks: "The Instance property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface. For example, if a type converter is given a <xref:System.Drawing.Color> to convert, Instance returns the actual instance of the control that is using the <xref:System.Drawing.Color>. You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>."
  syntax:
    content: public object Instance { get; }
    return:
      type: System.Object
      description: "The object that invokes the method on the <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no object responsible for the call."
  overload: System.ComponentModel.ITypeDescriptorContext.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  id: OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Raises the <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;></xref> event."
  remarks: "Use the OnComponentChanged method to send notification that an instance of an object has changed.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnComponentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: public void OnComponentChanged ();
    parameters: []
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  id: OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Raises the <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;></xref> event."
  remarks: "Use the OnComponentChanging method to send notification that an instance of an object is about to be changed. This method also returns a value indicating whether this object can be changed. When `false` is returned, do not change the object.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnComponentChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: public bool OnComponentChanging ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this object can be changed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  id: PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets the <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> that is associated with the given context item."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "The <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> that describes the given context item; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> responsible for the call."
  overload: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ITypeDescriptorContext.Container*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
- uid: System.ComponentModel.ITypeDescriptorContext.Instance*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged
  nameWithType: ITypeDescriptorContext.OnComponentChanged
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging
  nameWithType: ITypeDescriptorContext.OnComponentChanging
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
