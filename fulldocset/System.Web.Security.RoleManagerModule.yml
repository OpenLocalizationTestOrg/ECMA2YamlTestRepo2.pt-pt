### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RoleManagerModule
  id: RoleManagerModule
  children:
  - System.Web.Security.RoleManagerModule.#ctor
  - System.Web.Security.RoleManagerModule.Dispose
  - System.Web.Security.RoleManagerModule.GetRoles
  - System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: RoleManagerModule
  nameWithType: RoleManagerModule
  fullName: System.Web.Security.RoleManagerModule
  type: Class
  summary: "Manages a <xref href=&quot;System.Web.Security.RolePrincipal&quot;></xref> instance for the current user. This class cannot be inherited."
  remarks: "The RoleManagerModule class is used to assign a <xref:System.Web.Security.RolePrincipal> to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.       When a request completes, the RoleManagerModule refreshes the roles cookie that contains cached role information. If the <xref:System.Web.HttpContext.User%2A> property is of type <xref:System.Web.Security.RolePrincipal>, and that <xref:System.Web.Security.RolePrincipal> indicates that its cached role list has been modified by setting the <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property to `true`, the RoleManagerModule will update the roles cookie that contains cached role information.       This class is not intended to be used directly from your code."
  syntax:
    content: 'public sealed class RoleManagerModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Creates a new instance of the <xref href=&quot;System.Web.Security.RoleManagerModule&quot;></xref> class."
  remarks: "The <xref:System.Web.Security.RoleManagerModule> class is used to place a <xref:System.Web.Security.RolePrincipal> in the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext> and is not intended to be used directly from your code."
  syntax:
    content: public RoleManagerModule ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Dispose
  id: Dispose
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Called by the HTTP runtime to dispose of the role-manager module."
  remarks: "Call Dispose when you are finished using the <xref:System.Web.Security.RoleManagerModule>. The Dispose method leaves the <xref:System.Web.Security.RoleManagerModule> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Web.Security.RoleManagerModule> so the memory it occupied can be reclaimed by garbage collection.       This method is not intended to be used directly from your code."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.RoleManagerModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.GetRoles
  id: GetRoles
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A global application event that is raised when the <xref href=&quot;System.Web.Security.RoleManagerModule&quot;></xref> is ready to create a <xref href=&quot;System.Web.Security.RolePrincipal&quot;></xref> that represents the current user."
  remarks: "The GetRoles event is raised before the <xref:System.Web.Security.RoleManagerModule> creates a <xref:System.Web.Security.RolePrincipal> object and assigns it to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>. You can use this event to audit when role information is applied or to replace the creation of a <xref:System.Web.Security.RolePrincipal> by the <xref:System.Web.Security.RoleManagerModule> with your own code.       You can cancel the application of role information by the <xref:System.Web.Security.RoleManagerModule> by setting the <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> property of the <xref:System.Web.Security.RoleManagerEventArgs> to `true` in the GetRoles event.       If you set <xref:System.Web.Security.RoleManagerEventArgs.RolesPopulated%2A> to `true` in your GetRoles event handler, then the <xref:System.Web.HttpContext.User%2A> property of the current <xref:System.Web.HttpContext> is not set to a <xref:System.Web.Security.RolePrincipal> object by the <xref:System.Web.Security.RoleManagerModule>."
  example:
  - "The following example shows the GetRoles event included in the Global.asax file for an ASP.NET application. The GetRoles event adds a trace notification for an application where trace is enabled in the Web.config file.  \n  \n [!code-cs[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/csharp/e-system.web.security.ro_1.asax)]\n [!code-vb[System.Web.Security.RoleManagerModule#1](~/add/codesnippet/visualbasic/e-system.web.security.ro_1.asax)]"
  syntax:
    content: public event System.Web.Security.RoleManagerEventHandler GetRoles;
    return:
      type: System.Web.Security.RoleManagerEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Associates the role manager with the specified application."
  remarks: "This method subscribes to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> and <xref:System.Web.HttpApplication.EndRequest> methods of the specified <xref:System.Web.HttpApplication> for the purpose of managing role information and is not intended to be used directly from your code."
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "The <xref href=&quot;System.Web.HttpApplication&quot;></xref> to associate the <xref href=&quot;System.Web.Security.RoleManagerModule&quot;></xref> with."
  overload: System.Web.Security.RoleManagerModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.RoleManagerModule.#ctor
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule()
  nameWithType: RoleManagerModule.RoleManagerModule()
  fullName: System.Web.Security.RoleManagerModule.RoleManagerModule()
- uid: System.Web.Security.RoleManagerModule.Dispose
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose()
  nameWithType: RoleManagerModule.Dispose()
  fullName: System.Web.Security.RoleManagerModule.Dispose()
- uid: System.Web.Security.RoleManagerModule.GetRoles
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: GetRoles
  nameWithType: RoleManagerModule.GetRoles
  fullName: System.Web.Security.RoleManagerModule.GetRoles
- uid: System.Web.Security.RoleManagerEventHandler
  parent: System.Web.Security
  isExternal: false
  name: RoleManagerEventHandler
  nameWithType: RoleManagerEventHandler
  fullName: System.Web.Security.RoleManagerEventHandler
- uid: System.Web.Security.RoleManagerModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: RoleManagerModule.Init(HttpApplication)
  fullName: System.Web.Security.RoleManagerModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.RoleManagerModule.#ctor*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: RoleManagerModule
  nameWithType: RoleManagerModule.RoleManagerModule
- uid: System.Web.Security.RoleManagerModule.Dispose*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Dispose
  nameWithType: RoleManagerModule.Dispose
- uid: System.Web.Security.RoleManagerModule.Init*
  parent: System.Web.Security.RoleManagerModule
  isExternal: false
  name: Init
  nameWithType: RoleManagerModule.Init
