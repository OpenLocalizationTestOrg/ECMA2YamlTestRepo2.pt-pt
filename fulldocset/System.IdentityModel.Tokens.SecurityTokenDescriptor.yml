### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  id: SecurityTokenDescriptor
  children:
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  - System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  langs:
  - csharp
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
  type: Class
  summary: "Este é um marcador de posição para todos os atributos relacionados com o token emitido"
  syntax:
    content: public class SecurityTokenDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: SecurityTokenDescriptor()
  nameWithType: SecurityTokenDescriptor.SecurityTokenDescriptor()
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.SecurityTokenDescriptor()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenDescriptor&quot;> </xref> classe."
  syntax:
    content: public SecurityTokenDescriptor ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  id: AddAuthenticationClaims(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: AddAuthenticationClaims(String)
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Adiciona uma afirmação para o método de autenticação especificado para o assunto da instância atual. A autenticação instantânea está definida para a hora atual."
  remarks: "A <xref:System.Security.Claims.Claim>com um tipo de afirmação de <xref:System.Security.Claims.ClaimTypes.AuthenticationMethod>e um valor de `authType` e uma <xref:System.Security.Claims.Claim>com um tipo de afirmação e <xref:System.Security.Claims.ClaimTypes.AuthenticationInstant>um valor de <xref:System.DateTime.UtcNow%2A>são adicionados ao <xref:System.Security.Claims.ClaimsIdentity>especificado pela <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>propriedade …</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.DateTime.UtcNow%2A> </xref:System.Security.Claims.ClaimTypes.AuthenticationInstant> </xref:System.Security.Claims.Claim> </xref:System.Security.Claims.ClaimTypes.AuthenticationMethod> </xref:System.Security.Claims.Claim>"
  syntax:
    content: public void AddAuthenticationClaims (string authType);
    parameters:
    - id: authType
      type: System.String
      description: "URI que especifica o método de autenticação."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)
  id: AddAuthenticationClaims(System.String,System.DateTime)
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: AddAuthenticationClaims(String,DateTime)
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims(String,DateTime)
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(String,DateTime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Adiciona afirmações para o tipo de autenticação especificado e a autenticação instantânea para o assunto da instância atual."
  remarks: "A <xref:System.Security.Claims.Claim>com um tipo de afirmação de <xref:System.Security.Claims.ClaimTypes.AuthenticationMethod>e um valor de `authType` e um <xref:System.Security.Claims.Claim>com um tipo de afirmação de <xref:System.Security.Claims.ClaimTypes.AuthenticationInstant>e um valor de `time` são adicionadas para o <xref:System.Security.Claims.ClaimsIdentity>especificada pelo <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>propriedade.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimTypes.AuthenticationInstant> </xref:System.Security.Claims.Claim> </xref:System.Security.Claims.ClaimTypes.AuthenticationMethod> </xref:System.Security.Claims.Claim>"
  syntax:
    content: public void AddAuthenticationClaims (string authType, DateTime time);
    parameters:
    - id: authType
      type: System.String
      description: "URI que especifica o método de autenticação."
    - id: time
      type: System.DateTime
      description: "A autenticação instantânea em UTC. Se a hora não está em UTC, será convertida para UTC."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  id: AppliesToAddress
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: AppliesToAddress
  nameWithType: SecurityTokenDescriptor.AppliesToAddress
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o endereço para a propriedade AppliesTo no <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>."
  syntax:
    content: public string AppliesToAddress { get; set; }
    return:
      type: System.String
      description: "Um URI absoluto que representa o endereço."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorre uma tentativa para definir a propriedade para um valor que não é um URI absoluto."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  id: ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SecurityTokenDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(RequestSecurityTokenResponse)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Define as propriedades adequadas de RSTR especificado com base nas propriedades da instância atual."
  syntax:
    content: public virtual void ApplyTo (System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse response);
    parameters:
    - id: response
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "O RSTR ao qual pretende aplicar as definições da instância atual."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>response</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  id: AttachedReference
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: AttachedReference
  nameWithType: SecurityTokenDescriptor.AttachedReference
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define a cláusula do identificador da chave quando o token é anexado à mensagem"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause AttachedReference { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A cláusula do identificador da chave."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  id: AuthenticationInfo
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: AuthenticationInfo
  nameWithType: SecurityTokenDescriptor.AuthenticationInfo
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define as informações de autenticação para o token."
  syntax:
    content: public System.Security.Claims.AuthenticationInformation AuthenticationInfo { get; set; }
    return:
      type: System.Security.Claims.AuthenticationInformation
      description: "As informações de autenticação para o token."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  id: EncryptingCredentials
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: EncryptingCredentials
  nameWithType: SecurityTokenDescriptor.EncryptingCredentials
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define as credenciais que são utilizadas para encriptar o token."
  syntax:
    content: public System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "As credenciais que são utilizadas para encriptar o token."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  id: Lifetime
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: Lifetime
  nameWithType: SecurityTokenDescriptor.Lifetime
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define as informações de duração para o token emitido."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "As informações de duração para o token emitido."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof
  id: Proof
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: Proof
  nameWithType: SecurityTokenDescriptor.Proof
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o descritor de prova para o token emitido, o que pode ser utilizado para modificar alguns campos dentro RSTR, tais como token de prova pedida."
  syntax:
    content: public System.IdentityModel.Tokens.ProofDescriptor Proof { get; set; }
    return:
      type: System.IdentityModel.Tokens.ProofDescriptor
      description: "O descritor de prova."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  id: Properties
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: Properties
  nameWithType: SecurityTokenDescriptor.Properties
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a matriz de propriedades para o token emitido."
  syntax:
    content: public System.Collections.Generic.Dictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "O dicionário que representa a matriz de propriedades."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  id: ReplyToAddress
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: ReplyToAddress
  nameWithType: SecurityTokenDescriptor.ReplyToAddress
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o endereço para a propriedade ReplyToAddress no <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref>."
  syntax:
    content: public string ReplyToAddress { get; set; }
    return:
      type: System.String
      description: "URI que representa o endereço."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SecurityTokenDescriptor.SigningCredentials
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define as credenciais que são utilizadas para assinar o token."
  syntax:
    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "As credenciais que são utilizadas para assinar o token."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  id: Subject
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: Subject
  nameWithType: SecurityTokenDescriptor.Subject
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define as afirmações de saída para ser incluída no token emitido."
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Subject { get; set; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "A identidade de afirmações que contém as afirmações de saída."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  id: Token
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: Token
  nameWithType: SecurityTokenDescriptor.Token
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o token de segurança emitido."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken Token { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O token de segurança emitido."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.Token*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  id: TokenIssuerName
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: TokenIssuerName
  nameWithType: SecurityTokenDescriptor.TokenIssuerName
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o nome do emissor, o que pode ser utilizado dentro do token emitido também."
  syntax:
    content: public string TokenIssuerName { get; set; }
    return:
      type: System.String
      description: "O nome do emissor."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: TokenType
  nameWithType: SecurityTokenDescriptor.TokenType
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém ou define o tipo de token do token emitido"
  syntax:
    content: public string TokenType { get; set; }
    return:
      type: System.String
      description: "O tipo de token."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  id: UnattachedReference
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  langs:
  - csharp
  name: UnattachedReference
  nameWithType: SecurityTokenDescriptor.UnattachedReference
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A cláusula do identificador da chave quando o token emitido não está anexado à mensagem."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause UnattachedReference { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A cláusula do identificador da chave."
  overload: System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: SecurityTokenDescriptor()
  nameWithType: SecurityTokenDescriptor.SecurityTokenDescriptor()
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.SecurityTokenDescriptor()
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AddAuthenticationClaims(String)
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AddAuthenticationClaims(String,DateTime)
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims(String,DateTime)
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(String,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AppliesToAddress
  nameWithType: SecurityTokenDescriptor.AppliesToAddress
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: ApplyTo(RequestSecurityTokenResponse)
  nameWithType: SecurityTokenDescriptor.ApplyTo(RequestSecurityTokenResponse)
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(RequestSecurityTokenResponse)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AttachedReference
  nameWithType: SecurityTokenDescriptor.AttachedReference
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AuthenticationInfo
  nameWithType: SecurityTokenDescriptor.AuthenticationInfo
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo
- uid: System.Security.Claims.AuthenticationInformation
  parent: System.Security.Claims
  isExternal: false
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: System.Security.Claims.AuthenticationInformation
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: EncryptingCredentials
  nameWithType: SecurityTokenDescriptor.EncryptingCredentials
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Lifetime
  nameWithType: SecurityTokenDescriptor.Lifetime
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Proof
  nameWithType: SecurityTokenDescriptor.Proof
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof
- uid: System.IdentityModel.Tokens.ProofDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: ProofDescriptor
  nameWithType: ProofDescriptor
  fullName: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenDescriptor.Properties
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: ReplyToAddress
  nameWithType: SecurityTokenDescriptor.ReplyToAddress
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: SigningCredentials
  nameWithType: SecurityTokenDescriptor.SigningCredentials
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Subject
  nameWithType: SecurityTokenDescriptor.Subject
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Token
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Token
  nameWithType: SecurityTokenDescriptor.Token
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.Token
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: TokenIssuerName
  nameWithType: SecurityTokenDescriptor.TokenIssuerName
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenDescriptor.TokenType
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: UnattachedReference
  nameWithType: SecurityTokenDescriptor.UnattachedReference
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AddAuthenticationClaims
  nameWithType: SecurityTokenDescriptor.AddAuthenticationClaims
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AppliesToAddress
  nameWithType: SecurityTokenDescriptor.AppliesToAddress
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: ApplyTo
  nameWithType: SecurityTokenDescriptor.ApplyTo
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AttachedReference
  nameWithType: SecurityTokenDescriptor.AttachedReference
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: AuthenticationInfo
  nameWithType: SecurityTokenDescriptor.AuthenticationInfo
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: EncryptingCredentials
  nameWithType: SecurityTokenDescriptor.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Lifetime
  nameWithType: SecurityTokenDescriptor.Lifetime
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Proof
  nameWithType: SecurityTokenDescriptor.Proof
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenDescriptor.Properties
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: ReplyToAddress
  nameWithType: SecurityTokenDescriptor.ReplyToAddress
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: SigningCredentials
  nameWithType: SecurityTokenDescriptor.SigningCredentials
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Subject
  nameWithType: SecurityTokenDescriptor.Subject
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.Token*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: Token
  nameWithType: SecurityTokenDescriptor.Token
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: TokenIssuerName
  nameWithType: SecurityTokenDescriptor.TokenIssuerName
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenDescriptor.TokenType
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference*
  parent: System.IdentityModel.Tokens.SecurityTokenDescriptor
  isExternal: false
  name: UnattachedReference
  nameWithType: SecurityTokenDescriptor.UnattachedReference
