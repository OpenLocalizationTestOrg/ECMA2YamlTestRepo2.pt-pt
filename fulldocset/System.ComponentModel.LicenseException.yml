### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicenseException
  id: LicenseException
  children:
  - System.ComponentModel.LicenseException.#ctor(System.Type)
  - System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  - System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ComponentModel.LicenseException.LicensedType
  langs:
  - csharp
  name: LicenseException
  nameWithType: LicenseException
  fullName: System.ComponentModel.LicenseException
  type: Class
  summary: "Represents the exception thrown when a component cannot be granted a license."
  remarks: "The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws LicenseException when a component cannot obtain a valid license. This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.       For more information on licensing, see [How to: License Components and Controls](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to catch a LicenseException and interpret its content. In the sample, the application calls the <xref:System.ComponentModel.LicenseManager.Validate%2A> method for a <xref:System.Windows.Forms.Form?displayProperty=fullName> that is not licensed. Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.  \n  \n This example requires that you have specified the <xref:System.ComponentModel.LicenseProvider> by marking the <xref:System.Windows.Forms.Form?displayProperty=fullName> with a <xref:System.ComponentModel.LicenseProviderAttribute> attribute. For more information on how to do this, see the <xref:System.ComponentModel.LicenseManager> class.  \n  \n [!code-cpp[LicenseException#1](~/add/codesnippet/cpp/t-system.componentmodel._85_1.cpp)]\n [!code-vb[LicenseException#1](~/add/codesnippet/visualbasic/t-system.componentmodel._85_1.vb)]\n [!code-cs[LicenseException#1](~/add/codesnippet/csharp/t-system.componentmodel._85_1.cs)]"
  syntax:
    content: 'public class LicenseException : SystemException'
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type)
  nameWithType: LicenseException.LicenseException(Type)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.LicenseException&quot;></xref> class for the type of component that was denied a license."
  syntax:
    content: public LicenseException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type> that represents the type of component that was not granted a license."
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(SerializationInfo,StreamingContext)
  nameWithType: LicenseException.LicenseException(SerializationInfo,StreamingContext)
  fullName: System.ComponentModel.LicenseException.LicenseException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.LicenseException&quot;></xref> class with the given <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> and <xref:System.Runtime.Serialization.StreamingContext>."
  syntax:
    content: protected LicenseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> to be used for deserialization."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The destination to be used for deserialization."
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type,Object)
  nameWithType: LicenseException.LicenseException(Type,Object)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type,Object)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.LicenseException&quot;></xref> class for the type and the instance of the component that was denied a license."
  syntax:
    content: public LicenseException (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type> that represents the type of component that was not granted a license."
    - id: instance
      type: System.Object
      description: "The instance of the component that was not granted a license."
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  id: '#ctor(System.Type,System.Object,System.String)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type,Object,String)
  nameWithType: LicenseException.LicenseException(Type,Object,String)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type,Object,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.LicenseException&quot;></xref> class for the type and the instance of the component that was denied a license, along with a message to display."
  syntax:
    content: public LicenseException (Type type, object instance, string message);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type> that represents the type of component that was not granted a license."
    - id: instance
      type: System.Object
      description: "The instance of the component that was not granted a license."
    - id: message
      type: System.String
      description: "The exception message to display."
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  id: '#ctor(System.Type,System.Object,System.String,System.Exception)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type,Object,String,Exception)
  nameWithType: LicenseException.LicenseException(Type,Object,String,Exception)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type,Object,String,Exception)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.LicenseException&quot;></xref> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown."
  syntax:
    content: public LicenseException (Type type, object instance, string message, Exception innerException);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type> that represents the type of component that was not granted a license."
    - id: instance
      type: System.Object
      description: "The instance of the component that was not granted a license."
    - id: message
      type: System.String
      description: "The exception message to display."
    - id: innerException
      type: System.Exception
      description: "An <xref:System.Exception> that represents the original exception."
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LicenseException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ComponentModel.LicenseException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sets the <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> with information about the exception."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> to be used for deserialization."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The destination to be used for deserialization."
  overload: System.ComponentModel.LicenseException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.LicenseException.LicensedType
  id: LicensedType
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicensedType
  nameWithType: LicenseException.LicensedType
  fullName: System.ComponentModel.LicenseException.LicensedType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gets the type of the component that was not granted a license."
  syntax:
    content: public Type LicensedType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> that represents the type of component that was not granted a license."
  overload: System.ComponentModel.LicenseException.LicensedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.LicenseException.#ctor(System.Type)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type)
  nameWithType: LicenseException.LicenseException(Type)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(SerializationInfo,StreamingContext)
  nameWithType: LicenseException.LicenseException(SerializationInfo,StreamingContext)
  fullName: System.ComponentModel.LicenseException.LicenseException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type,Object)
  nameWithType: LicenseException.LicenseException(Type,Object)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type,Object,String)
  nameWithType: LicenseException.LicenseException(Type,Object,String)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type,Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type,Object,String,Exception)
  nameWithType: LicenseException.LicenseException(Type,Object,String,Exception)
  fullName: System.ComponentModel.LicenseException.LicenseException(Type,Object,String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LicenseException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ComponentModel.LicenseException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.ComponentModel.LicenseException.LicensedType
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicensedType
  nameWithType: LicenseException.LicensedType
  fullName: System.ComponentModel.LicenseException.LicensedType
- uid: System.ComponentModel.LicenseException.#ctor*
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException
  nameWithType: LicenseException.LicenseException
- uid: System.ComponentModel.LicenseException.GetObjectData*
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: GetObjectData
  nameWithType: LicenseException.GetObjectData
- uid: System.ComponentModel.LicenseException.LicensedType*
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicensedType
  nameWithType: LicenseException.LicensedType
