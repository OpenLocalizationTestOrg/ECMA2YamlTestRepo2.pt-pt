### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider
  id: TypeProvider
  children:
  - System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  - System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  - System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  - System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)
  - System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  - System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  - System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  langs:
  - csharp
  name: TypeProvider
  nameWithType: TypeProvider
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider
  type: Class
  summary: "Uma implementação de <xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;> </xref> que atos como um contentor dos tipos de assemblagens indicadas e do código compilam unidades."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Isto <xref:System.Workflow.ComponentModel.Compiler.ITypeProvider>compilado de implementação, para além de processamento de assemblagens (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A> e <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A>métodos), pode processar tipos que ainda não foram compilados (<xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A>).</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit%2A> </xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference%2A> </xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%2A> </xref:System.Workflow.ComponentModel.Compiler.ITypeProvider> A implementação limitada de <xref:System.Type?displayProperty=fullName>é devolvido para tipos referenciados utilizando <xref:System.CodeDom.CodeCompileUnit>.</xref:System.CodeDom.CodeCompileUnit> </xref:System.Type?displayProperty=fullName>      > [!NOTE] > TypeProvider devolve apenas os tipos públicos de assemblagens referenciadas e tipos públicos e não público de assemblagens locais."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class TypeProvider : IDisposable, IServiceProvider, System.Workflow.ComponentModel.Compiler.ITypeProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  - System.Workflow.ComponentModel.Compiler.ITypeProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypeProvider(IServiceProvider)
  nameWithType: TypeProvider.TypeProvider(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeProvider(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.ComponentModel.Compiler.TypeProvider&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> class.  This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/en-us/55925adf-2daa-4dc2-b1bf-61aa0190d734).  \n  \n [!code-cs[WF_Samples#256](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#256)]\n [!code-vb[WF_Samples#256](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#256)]"
  syntax:
    content: public TypeProvider (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "O encapsulados <xref:System.IServiceProvider>para esta instância.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)
  id: AddAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AddAssembly(Assembly)
  nameWithType: TypeProvider.AddAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(Assembly)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Adiciona uma assemblagem já carregada. Responsabilidade do emissor para carregar a assemblagem e <xref href=&quot;System.Workflow.ComponentModel.Compiler.TypeProvider&quot;> </xref> inclui os tipos desta assemblagem para dispensing quando <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*>é chamado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*>"
  syntax:
    content: public void AddAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Type.Assembly*>Para adicionar um for. de referência</xref:System.Type.Assembly*>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>é uma referência nula (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)
  id: AddAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AddAssemblyReference(String)
  nameWithType: TypeProvider.AddAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Adiciona uma referência para o <> </> *> para a lista interna. Esta assemblagem é utilizada para o <xref:System.Type>procura no <> </> *> método.</xref:System.Type>"
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.ComponentModel.Compiler.TypeProvider> class and run the AddAssemblyReference method. This code example is part of the BasicDesignerHosting SDK Sample from the WorkflowLoader.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Basic Designer Hosting](http://msdn.microsoft.com/en-us/55925adf-2daa-4dc2-b1bf-61aa0190d734).  \n  \n [!code-cs[Wf_samples#256](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#256)]\n [!code-vb[Wf_samples#256](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#256)]"
  syntax:
    content: public void AddAssemblyReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho <xref:System.Type.Assembly*>para adição.</xref:System.Type.Assembly*>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma referência nula (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  id: AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AddCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Adiciona uma referência para o <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> para a lista interna. Isto <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> é utilizado para o <xref:System.Type>procura no <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*>método.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*> </xref:System.Type>"
  syntax:
    content: public void AddCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "The <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref> to add."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>codeCompileUnit</code>é uma referência nula (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>codeCompileUnit</code>já é referenciado nesta instância."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  id: AssemblyNameResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: AssemblyNameResolver
  nameWithType: TypeProvider.AssemblyNameResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém ou define o delegado que referencia um método com um parâmetro e um valor de retorno que devolve a assemblagem em que um tipo especificado pertence para o nome a apresentar."
  syntax:
    content: public Func<Type,string> AssemblyNameResolver { get; set; }
    return:
      type: System.Func{System.Type,System.String}
      description: "O delegado que faça referência a um método com um parâmetro e um valor de retorno que devolve a assemblagem de nome a apresentar que pertence um tipo especificado."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose
  id: Dispose
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: TypeProvider.Dispose()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Workflow.ComponentModel.Compiler.TypeProvider&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)
  id: GetAssemblyName(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetAssemblyName(Type)
  nameWithType: TypeProvider.GetAssemblyName(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Devolve a assemblagem de nome a apresentar da assemblagem declarado na qual o tipo especificado."
  syntax:
    content: public string GetAssemblyName (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo cuja assemblagem nome obter."
    return:
      type: System.String
      description: "A assemblagem de nome a apresentar da assemblagem declarado na qual o tipo especificado."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)
  id: GetEnumNames(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetEnumNames(Type)
  nameWithType: TypeProvider.GetEnumNames(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Fornece uma matriz de cadeia que contém os nomes dos especificado <xref:System.Enum>ordem indexada.</xref:System.Enum>"
  syntax:
    content: public static string[] GetEnumNames (Type enumType);
    parameters:
    - id: enumType
      type: System.Type
      description: "O tipo para obter os nomes de."
    return:
      type: System.String[]
      description: "Os nomes dos especificado <xref:System.Enum>ordem indexada.</xref:System.Enum>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>enumType</code>é uma referência nula (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enumType</code>Não é um <xref:System.Enum>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)
  id: GetEventHandlerType(System.Reflection.EventInfo)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetEventHandlerType(EventInfo)
  nameWithType: TypeProvider.GetEventHandlerType(EventInfo)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(EventInfo)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém o <xref:System.Type>de um <xref:System.EventHandler>, dada uma referência a um <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.EventHandler> </xref:System.Type>"
  syntax:
    content: public static Type GetEventHandlerType (System.Reflection.EventInfo eventInfo);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "O <xref:System.Reflection.EventInfo>para obter o <xref:System.EventHandler>tipo de.</xref:System.EventHandler> </xref:System.Reflection.EventInfo>"
    return:
      type: System.Type
      description: "O <xref:System.Type>de um <xref:System.EventHandler>, dada uma referência a um <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.EventHandler> </xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventInfo</code>é uma referência nula (Visual Basic <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: TypeProvider.GetService(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém o <xref:System.Object>que fornece o serviço designado <xref:System.Type>.</xref:System.Type> </xref:System.Object>"
  remarks: "Se o encapsulados <xref:System.IServiceProvider>associada a esta instância é uma referência nula (`Nothing` no Visual Basic), em seguida, uma referência nula (`Nothing`) é devolvido.</xref:System.IServiceProvider>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O serviço <xref:System.Type>que o <xref:System.Object>consiste em fornecer.</xref:System.Object> </xref:System.Type>"
    return:
      type: System.Object
      description: "O <xref:System.Object>que fornece o serviço designado <xref:System.Type>.</xref:System.Type> </xref:System.Object>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)
  id: GetType(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetType(String)
  nameWithType: TypeProvider.GetType(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém o tipo do conjunto de assemblagens adicionadas para o <xref uid=&quot;langword_csharp_TypeProvider&quot; name=&quot;TypeProvider&quot; href=&quot;&quot;> </xref> utilizando <> </> *>, <> </> *>, ou <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>"
  remarks: "Se o nome não é resolvível dentro da cache de assemblagens e unidades compiladas desta instância, uma referência nula (Visual Basic `Nothing`) é devolvido. Invocar esta sobrecarga de é igual a invocar as duas sobrecargas de parâmetro com o valor do parâmetro `throwOnError` definido como `true`."
  syntax:
    content: public Type GetType (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome de tipo."
    return:
      type: System.Type
      description: "O pedido <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: TypeProvider.GetType(String,Boolean)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém o tipo do conjunto de assemblagens adicionadas para o <xref uid=&quot;langword_csharp_TypeProvider&quot; name=&quot;TypeProvider&quot; href=&quot;&quot;> </xref> utilizando <> </> *>, <> </> *>, ou <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*>"
  remarks: "Se o nome não é resolvível dentro da cache de assemblagens e unidades compiladas desta instância, uma referência nula (`Nothing`) é devolvido; no caso que `throwOnError` é `false`."
  syntax:
    content: public Type GetType (string name, bool throwOnError);
    parameters:
    - id: name
      type: System.String
      description: "O nome de tipo."
    - id: throwOnError
      type: System.Boolean
      description: "Um valor que indica se deve acionar uma excepção se `name` não é resolvível."
    return:
      type: System.Type
      description: "O pedido <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)"
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>name</code>Não é resolvível e <code>throwOnError</code> é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes
  id: GetTypes
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: GetTypes()
  nameWithType: TypeProvider.GetTypes()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Cria uma matriz que contém cada <xref:System.Type>conhecidos para esta instância.</xref:System.Type>"
  syntax:
    content: public Type[] GetTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Uma matriz que contém cada <xref:System.Type>conhecidos para esta instância.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes*
  exceptions:
  - type: System.Reflection.ReflectionTypeLoadException
    commentId: T:System.Reflection.ReflectionTypeLoadException
    description: "Qualquer <xref:System.Type>falhar ao carregar.</xref:System.Type>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)
  id: IsAssignable(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsAssignable(Type,Type)
  nameWithType: TypeProvider.IsAssignable(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(Type,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Indica se um tipo pode ser atribuído em segurança a outro tipo."
  syntax:
    content: public static bool IsAssignable (Type toType, Type fromType);
    parameters:
    - id: toType
      type: System.Type
      description: "O destino <xref:System.Type>da atribuição da.</xref:System.Type>"
    - id: fromType
      type: System.Type
      description: "A origem <xref:System.Type>da atribuição da.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a atribuição de pode ser efetuada em segurança; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)
  id: IsEnum(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsEnum(Type)
  nameWithType: TypeProvider.IsEnum(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Indica se um <xref:System.Type>é do tipo <xref:System.Enum>.</xref:System.Enum> </xref:System.Type>"
  syntax:
    content: public static bool IsEnum (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>a testar.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é um <xref:System.Enum>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Enum> </xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)
  id: IsSubclassOf(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsSubclassOf(Type,Type)
  nameWithType: TypeProvider.IsSubclassOf(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(Type,Type)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Indica se um <xref:System.Type>é uma classe derivada de outro <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
  syntax:
    content: public static bool IsSubclassOf (Type subclass, Type superClass);
    parameters:
    - id: subclass
      type: System.Type
      description: "O <xref:System.Type>que está a ser testados como uma classe derivada.</xref:System.Type>"
    - id: superClass
      type: System.Type
      description: "O <xref:System.Type>que está a ser testada da classe.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a relação testada for true; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  id: IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsSupportedProperty(PropertyInfo,Object)
  nameWithType: TypeProvider.IsSupportedProperty(PropertyInfo,Object)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(PropertyInfo,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Devolve um valor que determina se a propriedade especificada é suportada no destino [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  syntax:
    content: public bool IsSupportedProperty (System.Reflection.PropertyInfo property, object declaringInstance);
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
      description: "A propriedade resolver."
    - id: declaringInstance
      type: System.Object
      description: "A instância em que a propriedade especificada foi declarada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade especificada é suportada no destino [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  id: IsSupportedPropertyResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: IsSupportedPropertyResolver
  nameWithType: TypeProvider.IsSupportedPropertyResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém ou define o delegado que faça referência a um método com dois parâmetros e um valor de retorno que determina se a propriedade especificada é suportada no destino [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  syntax:
    content: public Func<System.Reflection.PropertyInfo,object,bool> IsSupportedPropertyResolver { get; set; }
    return:
      type: System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
      description: "O delegado que faça referência a um método com dois parâmetros e um valor de retorno que determina se a propriedade especificada é suportada no destino [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  id: LocalAssembly
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: LocalAssembly
  nameWithType: TypeProvider.LocalAssembly
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém um valor que representa o definido localmente <xref:System.Reflection.Assembly>para esta instância.</xref:System.Reflection.Assembly>"
  syntax:
    content: public System.Reflection.Assembly LocalAssembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "Definido localmente <xref:System.Reflection.Assembly>para esta instância.</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: TypeProvider.ReferencedAssemblies
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém uma coleção de todas as assemblagens referenciadas por <xref:System.Type>.</xref:System.Type>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Reflection.Assembly> ReferencedAssemblies { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Reflection.Assembly}
      description: "Uma coleção de todas as assemblagens referenciadas por <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  id: RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  nameWithType: TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Atualizações a <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> referência associada a esta instância."
  remarks: "O <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>é gerado quando este método é invocado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RefreshCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit, EventHandler refresher);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "O <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> atualizar com."
    - id: refresher
      type: System.EventHandler
      description: "O <xref:System.EventHandler>Delegar este evento para.</xref:System.EventHandler>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>codeCompileUnit</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Esta instância já referencia o assunto <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)
  id: RemoveAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RemoveAssembly(Assembly)
  nameWithType: TypeProvider.RemoveAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(Assembly)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Remove todas as referências para o assunto <xref:System.Reflection.Assembly>desta instância.</xref:System.Reflection.Assembly>"
  remarks: "O <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>é gerado quando este método é invocado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RemoveAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "O <xref:System.Reflection.Assembly>para remover esta instância.</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)
  id: RemoveAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RemoveAssemblyReference(String)
  nameWithType: TypeProvider.RemoveAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Remove um caminho com base em <xref:System.Reflection.Assembly>referência desta instância.</xref:System.Reflection.Assembly>"
  remarks: "O <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>é gerado quando este método é invocado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RemoveAssemblyReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho do <xref:System.Reflection.Assembly>a serem removidos.</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  id: RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: RemoveCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Remove todas as referências para o assunto <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> desta instância."
  remarks: "O <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>é gerado quando este método é invocado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>"
  syntax:
    content: public void RemoveCodeCompileUnit (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "O <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> a serem removidos."
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>codeCompileUnit</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)
  id: SetLocalAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: SetLocalAssembly(Assembly)
  nameWithType: TypeProvider.SetLocalAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(Assembly)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Define o valor do local <xref:System.Reflection.Assembly>para o <xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> referenciado</xref:System.Reflection.Assembly>"
  remarks: "O <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged>é gerado quando este método é invocado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged> Chamar SetLocalAssembly antes de chamar <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29>caso contrário, não terá qualquer efeito no <xref:System.Workflow.ComponentModel.Compiler.TypeProvider>.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider> </xref:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly%28System.Reflection.Assembly%29>"
  syntax:
    content: public void SetLocalAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>Utilizado para definir este valor</xref:System.Reflection.Assembly>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  id: TypeLoadErrors
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypeLoadErrors
  nameWithType: TypeProvider.TypeLoadErrors
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Obtém <xref:System.Collections.IDictionary>carga de exceções de erros codificadas pelo <xref:System.Object>que faz com que o <xref:System.Exception>.</xref:System.Exception> </xref:System.Object> </xref:System.Collections.IDictionary>"
  remarks: "Desliga um atualizado <xref:System.Collections.IDictionary>é criado em cada referência a esta propriedade.</xref:System.Collections.IDictionary>"
  syntax:
    content: public System.Collections.Generic.IDictionary<object,Exception> TypeLoadErrors { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Exception}
      description: "Uma <xref:System.Collections.IDictionary>carga de exceções de erros codificadas pelo <xref:System.Object>que faz com que o <xref:System.Exception>.</xref:System.Exception> </xref:System.Object> </xref:System.Collections.IDictionary>"
  overload: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  id: TypeLoadErrorsChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypeLoadErrorsChanged
  nameWithType: TypeProvider.TypeLoadErrorsChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Ocorre quando a coleção <xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*>está modificado.</xref:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*>"
  syntax:
    content: public event EventHandler TypeLoadErrorsChanged;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  id: TypesChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  langs:
  - csharp
  name: TypesChanged
  nameWithType: TypeProvider.TypesChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Compiler
  summary: "Ocorre quando a coleção de tipos definidos está modificada."
  syntax:
    content: public event EventHandler TypesChanged;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Reflection.ReflectionTypeLoadException
  isExternal: true
  name: System.Reflection.ReflectionTypeLoadException
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeProvider(IServiceProvider)
  nameWithType: TypeProvider.TypeProvider(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeProvider(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssembly(Assembly)
  nameWithType: TypeProvider.AddAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssemblyReference(String)
  nameWithType: TypeProvider.AddAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AssemblyNameResolver
  nameWithType: TypeProvider.AssemblyNameResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver
- uid: System.Func{System.Type,System.String}
  parent: System
  isExternal: true
  name: Func<Type,String>
  nameWithType: Func<Type,String>
  fullName: System.Func<System.Type,System.String>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Type,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: Dispose()
  nameWithType: TypeProvider.Dispose()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose()
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetAssemblyName(Type)
  nameWithType: TypeProvider.GetAssemblyName(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEnumNames(Type)
  nameWithType: TypeProvider.GetEnumNames(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(Type)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEventHandlerType(EventInfo)
  nameWithType: TypeProvider.GetEventHandlerType(EventInfo)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(EventInfo)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetService(Type)
  nameWithType: TypeProvider.GetService(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetType(String)
  nameWithType: TypeProvider.GetType(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: TypeProvider.GetType(String,Boolean)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetTypes()
  nameWithType: TypeProvider.GetTypes()
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsAssignable(Type,Type)
  nameWithType: TypeProvider.IsAssignable(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(Type,Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsEnum(Type)
  nameWithType: TypeProvider.IsEnum(Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSubclassOf(Type,Type)
  nameWithType: TypeProvider.IsSubclassOf(Type,Type)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(Type,Type)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedProperty(PropertyInfo,Object)
  nameWithType: TypeProvider.IsSupportedProperty(PropertyInfo,Object)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(PropertyInfo,Object)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedPropertyResolver
  nameWithType: TypeProvider.IsSupportedPropertyResolver
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver
- uid: System.Func{System.Reflection.PropertyInfo,System.Object,System.Boolean}
  parent: System
  isExternal: true
  name: Func<PropertyInfo,Object,Boolean>
  nameWithType: Func<PropertyInfo,Object,Boolean>
  fullName: System.Func<System.Reflection.PropertyInfo,System.Object,System.Boolean>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Reflection.PropertyInfo,System.Object,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: LocalAssembly
  nameWithType: TypeProvider.LocalAssembly
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: TypeProvider.ReferencedAssemblies
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies
- uid: System.Collections.Generic.ICollection{System.Reflection.Assembly}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Assembly>
  nameWithType: ICollection<Assembly>
  fullName: System.Collections.Generic.ICollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  nameWithType: TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(CodeCompileUnit,EventHandler)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssembly(Assembly)
  nameWithType: TypeProvider.RemoveAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(Assembly)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssemblyReference(String)
  nameWithType: TypeProvider.RemoveAssemblyReference(String)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(String)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveCodeCompileUnit(CodeCompileUnit)
  nameWithType: TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(CodeCompileUnit)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: SetLocalAssembly(Assembly)
  nameWithType: TypeProvider.SetLocalAssembly(Assembly)
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(Assembly)
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeLoadErrors
  nameWithType: TypeProvider.TypeLoadErrors
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors
- uid: System.Collections.Generic.IDictionary{System.Object,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Object,Exception>
  nameWithType: IDictionary<Object,Exception>
  fullName: System.Collections.Generic.IDictionary<System.Object,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Object,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeLoadErrorsChanged
  nameWithType: TypeProvider.TypeLoadErrorsChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypesChanged
  nameWithType: TypeProvider.TypesChanged
  fullName: System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeProvider
  nameWithType: TypeProvider.TypeProvider
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssembly
  nameWithType: TypeProvider.AddAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddAssemblyReference
  nameWithType: TypeProvider.AddAssemblyReference
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AddCodeCompileUnit
  nameWithType: TypeProvider.AddCodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: AssemblyNameResolver
  nameWithType: TypeProvider.AssemblyNameResolver
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: Dispose
  nameWithType: TypeProvider.Dispose
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetAssemblyName
  nameWithType: TypeProvider.GetAssemblyName
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEnumNames
  nameWithType: TypeProvider.GetEnumNames
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetEventHandlerType
  nameWithType: TypeProvider.GetEventHandlerType
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetService*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetService
  nameWithType: TypeProvider.GetService
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetType*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetType
  nameWithType: TypeProvider.GetType
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: GetTypes
  nameWithType: TypeProvider.GetTypes
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsAssignable
  nameWithType: TypeProvider.IsAssignable
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsEnum
  nameWithType: TypeProvider.IsEnum
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSubclassOf
  nameWithType: TypeProvider.IsSubclassOf
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedProperty
  nameWithType: TypeProvider.IsSupportedProperty
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: IsSupportedPropertyResolver
  nameWithType: TypeProvider.IsSupportedPropertyResolver
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: LocalAssembly
  nameWithType: TypeProvider.LocalAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: TypeProvider.ReferencedAssemblies
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RefreshCodeCompileUnit
  nameWithType: TypeProvider.RefreshCodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssembly
  nameWithType: TypeProvider.RemoveAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveAssemblyReference
  nameWithType: TypeProvider.RemoveAssemblyReference
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: RemoveCodeCompileUnit
  nameWithType: TypeProvider.RemoveCodeCompileUnit
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: SetLocalAssembly
  nameWithType: TypeProvider.SetLocalAssembly
- uid: System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors*
  parent: System.Workflow.ComponentModel.Compiler.TypeProvider
  isExternal: false
  name: TypeLoadErrors
  nameWithType: TypeProvider.TypeLoadErrors
