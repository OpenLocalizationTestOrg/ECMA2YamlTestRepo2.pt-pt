### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  id: IpcChannel
  children:
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(System.String,System.Object,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(System.Object)
  langs:
  - csharp
  name: IpcChannel
  nameWithType: IpcChannel
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  type: Class
  summary: "Provides a channel implementation that uses the IPC protocol to transmit messages."
  remarks: "Channels are used by the.NET Framework remoting infrastructure to transport remote calls. When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. After the message is received, it is deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.       The IpcChannel class is a convenience class combining the functionality of the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class and the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.      > [!CAUTION] >  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used."
  example:
  - "The following code example shows how to use a IpcChannel to set up a remoting server and its client. The example contains three parts:  \n  \n-   A server  \n  \n-   A client  \n  \n-   A remote object used by the server and the client.  \n  \n The following code example shows a server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#10](~/add/codesnippet/cpp/t-system.runtime.remotin_12_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#10](~/add/codesnippet/csharp/t-system.runtime.remotin_12_1.cs)]  \n  \n The following code example shows a client for this server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#20](~/add/codesnippet/cpp/t-system.runtime.remotin_12_2.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#20](~/add/codesnippet/csharp/t-system.runtime.remotin_12_2.cs)]  \n  \n The following code example shows the remote object used by the server and the client.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#30](~/add/codesnippet/cpp/t-system.runtime.remotin_12_3.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#30](~/add/codesnippet/csharp/t-system.runtime.remotin_12_3.cs)]"
  syntax:
    content: 'public class IpcChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.IChannelSender
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: IpcChannel()
  nameWithType: IpcChannel.IpcChannel()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref> class, activating only a client channel, and not a server channel."
  remarks: ''
  example:
  - "The following code example shows how to use this constructor. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#21](~/add/codesnippet/cpp/m-system.runtime.remotin_38_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#21](~/add/codesnippet/csharp/m-system.runtime.remotin_38_1.cs)]"
  syntax:
    content: public IpcChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: IpcChannel(String)
  nameWithType: IpcChannel.IpcChannel(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel(String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref> class with a server channel that listens on the specified IPC port."
  remarks: ''
  example:
  - "The following code example shows how to use this constructor. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#11](~/add/codesnippet/cpp/m-system.runtime.remotin_17_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#11](~/add/codesnippet/csharp/m-system.runtime.remotin_17_1.cs)]"
  syntax:
    content: public IpcChannel (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "The name of the IPC port."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  nameWithType: IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref> class with the specified configuration properties and sinks."
  remarks: "For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).       Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are also responsible for transporting messages between the client and the server. Channel sinks are linked together in a chain, and all channel messages flow through this chain of sinks before the message is finally serialized and transported. If you do not require sink functionality, set the `clientSinkProvider` and `serverSinkProvider` parameters to `null`.      > [!CAUTION] >  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used."
  example:
  - "The following code example shows how to use this constructor. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#41](~/add/codesnippet/csharp/76706566-a7b6-4da4-9e17-_1.cs)]\n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#41](~/add/codesnippet/cpp/76706566-a7b6-4da4-9e17-_1.cpp)]"
  syntax:
    content: public IpcChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary> collection specifying values for configuration properties to be used by the client and server channels."
    - id: clientSinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "The <xref href=&quot;System.Runtime.Remoting.Channels.IClientChannelSinkProvider&quot;></xref> implementation to be used by the client channel."
    - id: serverSinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "The <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;></xref> implementation to be used by the server channel."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider,CommonSecurityDescriptor)
  nameWithType: IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider,CommonSecurityDescriptor)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider,CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref> class with the specified configuration properties and sinks."
  syntax:
    content: public IpcChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary> collection specifying values for configuration properties to be used by the client and server channels."
    - id: clientSinkProvider
      type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
      description: "The <xref href=&quot;System.Runtime.Remoting.Channels.IClientChannelSinkProvider&quot;></xref> implementation to be used by the client channel."
    - id: serverSinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "The <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;></xref> implementation to be used by the server channel."
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: "The security descriptor."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: IpcChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Gets the channel-specific data."
  remarks: "Although returned as an instance of <xref:System.Object?displayProperty=fullName>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens."
  example:
  - "The following code example shows how to use the ChannelData property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#15](~/add/codesnippet/cpp/p-system.runtime.remotin_79_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#15](~/add/codesnippet/csharp/p-system.runtime.remotin_79_1.cs)]"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;></xref> instance that contains channel-specific data."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IpcChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Gets the name of the current channel."
  remarks: "Every registered channel has a unique name. The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>. The default name is &quot;ipc&quot;."
  example:
  - "The following code example shows how to use the ChannelName property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#12](~/add/codesnippet/cpp/p-system.runtime.remotin_15_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#12](~/add/codesnippet/csharp/p-system.runtime.remotin_15_1.cs)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A <xref:System.String> that contains the name of the channel."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IpcChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Gets the priority of the current channel."
  remarks: "The default priority is 20."
  example:
  - "The following code example shows how to use the ChannelPriority property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#13](~/add/codesnippet/cpp/p-system.runtime.remotin_107_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#13](~/add/codesnippet/csharp/p-system.runtime.remotin_107_1.cs)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "An integer that represents the priority assigned to the channel."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(System.String,System.Object,System.String@)
  id: CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: CreateMessageSink(String,Object,String)
  nameWithType: IpcChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(String,Object,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Returns a channel message sink that delivers messages to the specified URL or channel data object."
  remarks: "The CreateMessageSink method returns a channel message sink that delivers messages to either the specified URL or channel data object. If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink. Either the `url` or `remoteChannelData` parameters can be `null`, but not both.       Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of `ChannelSinkProviders` and all channel messages flow through this chain of sinks before the message is finally serialized and transported."
  example:
  - "The following code example shows how to use the CreateMessageSink method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#22](~/add/codesnippet/cpp/e0cd4f6b-7da0-480b-badc-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#22](~/add/codesnippet/csharp/e0cd4f6b-7da0-480b-badc-_1.cs)]"
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "The URL to which the new sink should deliver messages. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: remoteChannelData
      type: System.Object
      description: "The channel data object of the remote host to which the new sink should deliver messages. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: objectURI
      type: System.String
      description: "When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A channel message sink that delivers messages to the specified URL or channel data object."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: IpcChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Returns an array of all the URLs for an object with the specified URI, hosted on the current <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref>."
  remarks: "This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>."
  example:
  - "The following code example shows how to use the GetUrlsForUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/add/codesnippet/cpp/m-system.runtime.remotin_60_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/add/codesnippet/csharp/m-system.runtime.remotin_60_1.cs)]"
  syntax:
    content: public string[] GetUrlsForUri (string objectURI);
    parameters:
    - id: objectURI
      type: System.String
      description: "The URI of the object for which URLs are required."
    return:
      type: System.String[]
      description: "An array of the URLs for an object with the specified URI, hosted on the current <xref href=&quot;System.Runtime.Remoting.Channels.Ipc.IpcChannel&quot;></xref>."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: IpcChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Gets or sets a Boolean value that indicates whether the current channel is secure."
  remarks: "This property need not be set explicitly, as it is sufficient to set the ensureSecurity parameter of <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>."
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: "A Boolean value that indicates whether the current instance is secure."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IpcChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Extracts the channel URI and the remote well-known object URI from the specified URL."
  remarks: "A URI of an object is a value that uniquely identifies a specific object instance."
  example:
  - "The following code example shows how to use the Parse method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/add/codesnippet/cpp/5ff7b03d-b651-42d2-a0ec-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/add/codesnippet/csharp/5ff7b03d-b651-42d2-a0ec-_1.cs)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "The URL from which to extract the URI of the remote well-known object."
    - id: objectURI
      type: System.String
      description: "When this method returns, contains a <xref:System.String> that holds the URI of the remote well-known object. This parameter is passed uninitialized."
    return:
      type: System.String
      description: "The URI of the current channel."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: IpcChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Instructs the current channel to start listening for requests."
  remarks: "It is not necessary to call this method to begin listening on a newly initialized channel.       Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening%2A> method has been called.       The `data` parameter can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`."
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Optional initialization information."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: IpcChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: "Instructs the current channel to stop listening for requests."
  remarks: "Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening%2A> method.       The `data` parameter can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, set `data` to `null`."
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Optional state information for the channel."
  overload: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IpcChannel()
  nameWithType: IpcChannel.IpcChannel()
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel()
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IpcChannel(String)
  nameWithType: IpcChannel.IpcChannel(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  nameWithType: IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IClientChannelSinkProvider
  nameWithType: IClientChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider,CommonSecurityDescriptor)
  nameWithType: IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider,CommonSecurityDescriptor)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IpcChannel(IDictionary,IClientChannelSinkProvider,IServerChannelSinkProvider,CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(System.String,System.Object,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: CreateMessageSink(String,Object,String)
  nameWithType: IpcChannel.CreateMessageSink(String,Object,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(String,Object,String)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: IpcChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcChannel.IsSecured
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IpcChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: IpcChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: IpcChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IpcChannel
  nameWithType: IpcChannel.IpcChannel
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: CreateMessageSink
  nameWithType: IpcChannel.CreateMessageSink
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: IpcChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcChannel.IsSecured
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: Parse
  nameWithType: IpcChannel.Parse
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: StartListening
  nameWithType: IpcChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcChannel
  isExternal: false
  name: StopListening
  nameWithType: IpcChannel.StopListening
