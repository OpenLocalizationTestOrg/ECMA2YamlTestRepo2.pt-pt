### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "Contém informações detalhadas, geradas pelo utilitário de reconhecimento de voz, sobre a entrada reconhecido."
  remarks: "Esta classe contém informações detalhadas sobre palavras e expressões processados durante as operações de reconhecimento de voz, incluindo o seguinte: - <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>referências de propriedade de <xref:System.Speech.Recognition.Grammar>que o reconhecedor utilizado para identificar a entrada.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      -O <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>propriedade contém o texto para o frase normalizado.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      -O <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>propriedade referencia as semânticos informações contidas nos resultados.</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> A informação semântica é um dicionário da nomes de chaves e os dados de semânticos associados.      -O <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>propriedade contém uma coleção ordenada de <xref:System.Speech.Recognition.RecognizedWordUnit>objetos que representam cada reconhecido word na entrada.</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Cada unidade word contém formato de apresentação, formato lexical e pronunciação informações para o word correspondente.      -O <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>propriedade contém informações sobre a substituição do word especializado.</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      -O <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>e <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>propriedades contêm informações sobre alternates de reconhecimento que têm a mesma ou semelhante pronunciação.</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      -O valor da <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>propriedade indica o grau de certainty atribuído pelo utilitário de reconhecimento de voz, se uma expressão de reconhecido corresponde à entrada.</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       O utilitário de reconhecimento de voz devolve resultados de reconhecimento num <xref:System.Speech.Recognition.RecognitionResult>objeto que herda de RecognizedPhrase.</xref:System.Speech.Recognition.RecognitionResult> O resultado de reconhecimento <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>propriedade contém uma coleção ordenada de RecognizedPhrase objetos, cada um dos quais é uma correspondência possíveis para a entrada para o reconhecedor.</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém um valor, atribuído pelo reconhecedor, que representa a probabilidade que um <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> corresponde a uma entrada fornecida."
  remarks: "Pontuações de confiança de que não indicam a probabilidade absoluta que uma expressão foi reconhecida corretamente. Em vez disso, as pontuações de confiança fornecem um mecanismo para comparar a precisão relativa de vários reconhecimento alternates para uma entrada fornecida. Isto facilita devolvendo o resultado de reconhecimento mais exato. Por exemplo, se uma expressão de reconhecido tem uma pontuação de confiança de 0.8, isto não significa que a expressão tem uma oportunidade de 80% de que está a ser a correspondência correta para a entrada.  Significa que o frase é mais provável que seja a correspondência correta para a entrada do que outros resultados que têm confiança pontuações inferior 0.8.       Uma pontuação de confiança na sua própria não é significativa, a menos que tenha alternativos resultados de comparação, a mesma operação de reconhecimento ou do recognitions anteriores da entrada mesma. Os valores são utilizados para classificar que candidato alternativo expressões devolvidos pelo <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>propriedade <xref:System.Speech.Recognition.RecognitionResult>objetos.</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       Valores de confiança são relativo e exclusivo para cada motor de reconhecimento. Os valores de confiança devolvidos por dois motores de reconhecimento diferentes não não possível comparar modo significativo.       Um motor de reconhecimento de voz pode atribuir uma pontuação baixa confiança de que a entrada ditas por vários motivos, incluindo interferências em segundo plano, inarticulate reconhecimento de voz, ou palavras inesperadas ou sequências de palavra. Se a aplicação estiver a utilizar um <xref:System.Speech.Recognition.SpeechRecognitionEngine>instância, pode modificar o nível de confiança no qual voz entrada seja aceite ou rejeitada com um do <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>métodos.</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Limiares de confiança para o reconhecedor partilhado, geridos pelo <xref:System.Speech.Recognition.SpeechRecognizer>, estão associados a um perfil de utilizador e armazenados no registo do Windows.</xref:System.Speech.Recognition.SpeechRecognizer> Aplicações não devem escrever alterações para o registo para as propriedades do reconhecedor partilhado.       O <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>propriedade o <xref:System.Speech.Recognition.RecognitionResult>objeto contém uma coleção ordenada de <xref:System.Speech.Recognition.RecognizedPhrase>objetos, cada um dos quais é uma correspondência possíveis para a entrada para o reconhecedor.</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> Os alternates estão ordenadas do valor mais alto a confiança mais baixa."
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "Uma medida relativa dos certainty de reconhecimento correto de uma expressão. O valor é entre 0.0 e 1.0, para baixa até elevada confiança, respetivamente."
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Devolve um semântica markup language (SML) documento para a informação semântica de <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> objeto."
  remarks: "Para obter informações sobre a linguagem XML semântica markup language (SML), consulte o [referência de linguagem semântica do Markup](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)."
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "Devolve uma descrição SML a semântica do <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> como um [XPath](http://msdn.microsoft.com/library/ms256115.aspx) navegáveis dos objetos."
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> que o utilitário de reconhecimento de voz utilizado para devolver o <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>."
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "O objeto de gramática o utilitário de reconhecimento de voz utilizado para identificar a entrada."
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o identificador para o grupo de homophone para a frase de acesso."
  remarks: "O utilitário de reconhecimento de voz atribui um identificador de grupo para todos os alternates de reconhecimento que têm a mesma pronunciação. Para cada alternativo que tenha uma pronunciação exclusiva, o reconhecedor cria um grupo de homophone. O utilitário de reconhecimento de voz gera de novo grupo de identificadores para cada operação de reconhecimento, e os identificadores não podem ser utilizados para comparar alternates de gerado a partir de operações de reconhecimento separado.       Por exemplo, para um resultado de reconhecimento que continha as alternates &quot;o tale&quot;, &quot;a cauda&quot; e &quot;a ale&quot;, os dois primeiros alternates deverá pertencer a um grupo de homophone e a último alternativa seria o membro de um segundo grupo de homophone único."
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "O identificador para o grupo de homophone para a frase de acesso."
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém uma coleção de alternates o reconhecimento que têm a mesma pronunciação como esta frase reconhecido."
  remarks: "Esta propriedade devolve todos os outros alternates de reconhecimento que têm a mesma pronunciação como esta frase reconhecido.       Por exemplo, para um resultado de reconhecimento que continha as alternates, &quot;o tale&quot; e &quot;a cauda&quot;, a coleção de homophones para a primeira alternativo, &quot;tale&quot; iria conter o frase segundo, &quot;a cauda&quot;. A coleção de homophones para a segunda alternativo, &quot;seguimento&quot; iria conter o frase primeiro, &quot;o tale&quot;."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "Uma coleção de só de leitura de alternates o reconhecimento que têm a mesma pronunciação como esta frase reconhecido."
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém informações sobre o texto que o utilitário de reconhecimento de voz foram alterado como parte de voz para texto normalização."
  remarks: "Como parte do processo de reconhecimento de voz, o utilitário de reconhecimento de voz normaliza a entrada reconhecida para um formulário de apresentação.       Por exemplo, a entrada ditas, &quot;vinte e cinco não utilizados no compromisso&quot;, gera um resultado de reconhecimento onde o <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>propriedade contém as palavras, &quot;twenty&quot;, &quot;cinco&quot; e &quot;utilizados no compromisso&quot; e o <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>propriedade contém o frase, &quot;$25.00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Para obter mais informações sobre a normalização de texto, consulte a <xref:System.Speech.Recognition.ReplacementText>classe.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "Uma coleção de <xref href=&quot;System.Speech.Recognition.ReplacementText&quot;> </xref> objetos que descrevem secções de texto que o utilitário de reconhecimento de voz substituído quando normalizado-lo a entrada reconhecida."
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém a informação semântica associada a frase reconhecida."
  remarks: "Uma gramática de reconhecimento de voz pode incluir informações de semânticos. Quando um utilitário de reconhecimento de voz gera um resultado de reconhecimento para este tipo uma gramática, as informações de semânticos podem estar incluídas no resultado de reconhecimento, de acordo com as regras da gramática e a entrada para o reconhecedor. Para obter mais informações sobre a informação semântica, consulte [resultados semântica compreender](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) e <xref:System.Speech.Recognition.SemanticResultKey>e <xref:System.Speech.Recognition.SemanticResultValue>classes.</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "A informação semântica associada a frase reconhecida."
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o texto normalizado gerado por um utilitário de reconhecimento de voz de entrada reconhecido."
  remarks: "Como parte do processo de reconhecimento de voz, o utilitário de reconhecimento de voz efetua a normalização de reconhecimento de voz para texto de entrada reconhecida para um formulário de apresentação.       Por exemplo, a entrada ditas, &quot;vinte e cinco não utilizados no compromisso&quot;, gera um resultado de reconhecimento onde o <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>propriedade contém as palavras, &quot;twenty&quot;, &quot;cinco&quot; e &quot;utilizados no compromisso&quot; e a propriedade de texto contém o frase, &quot;$25.00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Para obter mais informações sobre a normalização de texto, consulte <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "O texto normalizado gerado por um utilitário de reconhecimento de voz de entrada reconhecido."
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém as palavras geradas por um utilitário de reconhecimento de voz de entrada reconhecido."
  remarks: "Esta propriedade contém as palavras produzidas da entrada, o utilitário de reconhecimento de voz antes de normalização de reconhecimento de voz para texto o reconhecedor do resultado.       Por exemplo, a entrada ditas, &quot;vinte e cinco não utilizados no compromisso&quot;, gera um resultado de reconhecimento em que a propriedade palavras contém as palavras, &quot;twenty&quot;, &quot;cinco&quot; e &quot;utilizados no compromisso&quot;, e o <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>propriedade contém o frase, &quot;$25.00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> Para obter mais informações sobre a normalização de texto, consulte <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "A coleção de <xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;> </xref> objetos gerados por um utilitário de reconhecimento de voz para a entrada reconhecido."
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
