### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustEnumerator
  id: ApplicationTrustEnumerator
  children:
  - System.Security.Policy.ApplicationTrustEnumerator.Current
  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  - System.Security.Policy.ApplicationTrustEnumerator.Reset
  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
  type: Class
  summary: "Representa o enumerador para <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objetos no <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> coleção."
  remarks: "Enumeradores permitem apenas ao ler os dados na coleção. Enumeradores não podem ser utilizados para modificar a colecção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento da coleção. O <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>método também coloca o enumerador nesta posição.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> AT isto posicionar, ao chamar o <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>propriedade emite uma exceção.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> Por conseguinte, tem de chamar o <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>método para avançar o enumerador para o primeiro elemento da coleção de antes de ler o valor da <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>propriedade.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>Devolve o mesmo objeto até ser <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>ou <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>é chamado.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>Define <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>para o próximo elemento.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Após o final da colecção é passado, o enumerador está posicionado após o último elemento da coleção e chamar <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>devolve `false`.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Se a última chamada para <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>devolvido `false`, chamar <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>emite uma exceção.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Para repor a <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>para o primeiro elemento da coleção, chamada <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>seguido por uma chamada para <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permanece inalterada. Se serem efetuadas alterações à coleção, como adicionar, modificar, ou eliminar elementos, o enumerador está irrevogavelmente invalidado e a próxima chamada para <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>ou <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>emite um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Se a coleção é modificada entre chamar <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>e <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>devolve o elemento ao qual atualmente, está definido, mesmo que o enumerador já é invalidado.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       O enumerador não tem acesso exclusivo à coleção; Por conseguinte, a enumerar através de uma coleção intrinsecamente não é um procedimento seguro para thread. Mesmo quando uma coleção está sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador acionar uma excepção. Para garantir a segurança de thread durante a enumeração, pode bloquear a coleção durante a enumeração de toda ou detetar exceções resultantes das alterações efetuadas por outros threads."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  id: Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém atual <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objeto o <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> coleção."
  remarks: "Quando o enumerador está criado, este não aponta para um objeto, para que a propriedade atual não é válida e irá gerar uma exceção se está acessível. Primeiro tem de chamar o <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>método posicione o cursor o primeiro objecto na coleção.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Várias chamadas para atual com nenhuma chamadas intervenientes para <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>irá devolver o mesmo <xref:System.Security.Policy.ApplicationTrust>objeto.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust Current { get; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "The current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Passar para o elemento seguinte no <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> coleção."
  remarks: "O método MoveNext devolve imediatamente `false` se existem quaisquer objetos na coleção.       MoveNext irá devolver `true` até ter atingido o fim da colecção. Em seguida, irá devolver `false` para cada chamada sucessivas. No entanto, depois de MoveNext devolveu `false`, aceder a <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>propriedade irá gerar uma exceção.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       Após a criação, um enumerador está posicionado antes do primeiro <xref:System.Security.Policy.ApplicationTrust>objeto na coleção e a primeira chamada para MoveNext positions o enumerador do objecto primeiro na coleção.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o enumerador foi produzido com êxito para o próximo elemento; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o enumerador ter passado o fim da colecção."
  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  id: Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Repõe o enumerador no início do <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> coleção."
  remarks: "Move um enumerador uma direção apenas de reencaminhamento. Utilize este método para devolver o enumerador no início do conjunto de <xref:System.Security.Policy.ApplicationTrust>objetos.</xref:System.Security.Policy.ApplicationTrust>       O método de reposição positions o cursor o primeiro objecto na coleção. Depois de chamar reposição, não terá de chamar o <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>método para mover o cursor reencaminhar para o objeto primeiro.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém atual <xref:System.Object>no <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> coleção.</xref:System.Object>"
  remarks: "Não chame este método; Utilize o <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>propriedade em vez disso.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Atual <xref:System.Object>no <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: ApplicationTrustEnumerator.MoveNext
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset
  nameWithType: ApplicationTrustEnumerator.Reset
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
