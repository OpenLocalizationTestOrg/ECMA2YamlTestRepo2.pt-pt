### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustEnumerator
  id: ApplicationTrustEnumerator
  children:
  - System.Security.Policy.ApplicationTrustEnumerator.Current
  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  - System.Security.Policy.ApplicationTrustEnumerator.Reset
  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
  type: Class
  summary: "Represents the enumerator for <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> objects in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref> collection."
  remarks: "Enumerators only allow reading the data in the collection. Enumerators cannot be used to modify the underlying collection.       Initially, the enumerator is positioned before the first element in the collection. The <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> method also brings the enumerator back to this position. At this position, calling the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property throws an exception. Therefore, you must call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property.       <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the same object until either <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> is called. <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> sets <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the next element.       After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> throws an exception. To reset <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> followed by a call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.       An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> or <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException> exception. If the collection is modified between calling <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> and <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.       The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  id: Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets the current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> object in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref> collection."
  remarks: "When the enumerator is created, it does not point to an object, so the Current property is not valid and will throw an exception if it is accessed. You must first call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.       Multiple calls to Current with no intervening calls to <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> will return the same <xref:System.Security.Policy.ApplicationTrust> object."
  syntax:
    content: public System.Security.Policy.ApplicationTrust Current { get; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "The current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Moves to the next element in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref> collection."
  remarks: "The MoveNext method immediately returns `false` if there are no objects in the collection.       MoveNext will return `true` until it has reached the end of the collection. It will then return `false` for each successive call. However, after MoveNext has returned `false`, accessing the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property will throw an exception.       Upon creation, an enumerator is positioned before the first <xref:System.Security.Policy.ApplicationTrust> object in the collection, and the first call to MoveNext positions the enumerator at the first object in the collection."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the enumerator was successfully advanced to the next element; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the enumerator has passed the end of the collection."
  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  id: Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Resets the enumerator to the beginning of the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref> collection."
  remarks: "An enumerator moves in a forward-only direction. Use this method to return the enumerator to the beginning of the collection of <xref:System.Security.Policy.ApplicationTrust> objects.       The Reset method positions the cursor at the first object in the collection. After calling Reset, you do not need to call the <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> method to move the cursor forward to the first object."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets the current <xref:System.Object> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref> collection."
  remarks: "Do not call this method; use the <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> property instead."
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "The current <xref:System.Object> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: ApplicationTrustEnumerator.MoveNext
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset
  nameWithType: ApplicationTrustEnumerator.Reset
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
