### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.CallSiteOps
  id: CallSiteOps
  children:
  - System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  - System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  - System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)
  - System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  - System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)
  - System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)
  - System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  - System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  - System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)
  - System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)
  - System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  langs:
  - csharp
  name: CallSiteOps
  nameWithType: CallSiteOps
  fullName: System.Runtime.CompilerServices.CallSiteOps
  type: Class
  summary: "Creates and caches binding rules."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Diagnostics.DebuggerStepThrough]

      public static class CallSiteOps
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  id: AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: AddRule(CallSite<T>,T)
  nameWithType: CallSiteOps.AddRule(CallSite<T>,T)
  fullName: System.Runtime.CompilerServices.CallSiteOps.AddRule(CallSite<T>,T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static void AddRule<T> (System.Runtime.CompilerServices.CallSite<T> site, T rule) where T : class;'
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
    - id: rule
      type: T
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.AddRule<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  id: Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: Bind(CallSiteBinder,CallSite<T>,Object[])
  nameWithType: CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])
  fullName: System.Runtime.CompilerServices.CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static T Bind<T> (System.Runtime.CompilerServices.CallSiteBinder binder, System.Runtime.CompilerServices.CallSite<T> site, object[] args) where T : class;'
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "To be added."
    - id: site
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
    - id: args
      type: System.Object[]
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.Bind<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)
  id: ClearMatch(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: ClearMatch(CallSite)
  nameWithType: CallSiteOps.ClearMatch(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(CallSite)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: "Clears the match flag on the matchmaker call site."
  syntax:
    content: public static void ClearMatch (System.Runtime.CompilerServices.CallSite site);
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite
      description: "An instance of the dynamic call site."
  overload: System.Runtime.CompilerServices.CallSiteOps.ClearMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  id: CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: CreateMatchmaker(CallSite<T>)
  nameWithType: CallSiteOps.CreateMatchmaker(CallSite<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker(CallSite<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static System.Runtime.CompilerServices.CallSite<T> CreateMatchmaker<T> (System.Runtime.CompilerServices.CallSite<T> site) where T : class;'
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
    return:
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)
  id: GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: GetCachedRules(RuleCache<T>)
  nameWithType: CallSiteOps.GetCachedRules(RuleCache<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules(RuleCache<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static T[] GetCachedRules<T> (System.Runtime.CompilerServices.RuleCache<T> cache) where T : class;'
    parameters:
    - id: cache
      type: System.Runtime.CompilerServices.RuleCache`1
      description: "To be added."
    return:
      type: T[]
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)
  id: GetMatch(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: GetMatch(CallSite)
  nameWithType: CallSiteOps.GetMatch(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetMatch(CallSite)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: "Checks whether the executed rule matched"
  syntax:
    content: public static bool GetMatch (System.Runtime.CompilerServices.CallSite site);
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite
      description: "An instance of the dynamic call site."
    return:
      type: System.Boolean
      description: "true if rule matched, false otherwise."
  overload: System.Runtime.CompilerServices.CallSiteOps.GetMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  id: GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: GetRuleCache(CallSite<T>)
  nameWithType: CallSiteOps.GetRuleCache(CallSite<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache(CallSite<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static System.Runtime.CompilerServices.RuleCache<T> GetRuleCache<T> (System.Runtime.CompilerServices.CallSite<T> site) where T : class;'
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
    return:
      type: System.Runtime.CompilerServices.RuleCache`1
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  id: GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: GetRules(CallSite<T>)
  nameWithType: CallSiteOps.GetRules(CallSite<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRules(CallSite<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static T[] GetRules<T> (System.Runtime.CompilerServices.CallSite<T> site) where T : class;'
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
    return:
      type: T[]
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.GetRules<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)
  id: MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: MoveRule(RuleCache<T>,T,Int32)
  nameWithType: CallSiteOps.MoveRule(RuleCache<T>,T,Int32)
  fullName: System.Runtime.CompilerServices.CallSiteOps.MoveRule(RuleCache<T>,T,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static void MoveRule<T> (System.Runtime.CompilerServices.RuleCache<T> cache, T rule, int i) where T : class;'
    parameters:
    - id: cache
      type: System.Runtime.CompilerServices.RuleCache`1
      description: "To be added."
    - id: rule
      type: T
      description: "To be added."
    - id: i
      type: System.Int32
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.MoveRule<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)
  id: SetNotMatched(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: SetNotMatched(CallSite)
  nameWithType: CallSiteOps.SetNotMatched(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(CallSite)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: "Checks if a dynamic site requires an update."
  syntax:
    content: public static bool SetNotMatched (System.Runtime.CompilerServices.CallSite site);
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite
      description: "An instance of the dynamic call site."
    return:
      type: System.Boolean
      description: "true if rule does not need updating, false otherwise."
  overload: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  id: UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  parent: System.Runtime.CompilerServices.CallSiteOps
  langs:
  - csharp
  name: UpdateRules(CallSite<T>,Int32)
  nameWithType: CallSiteOps.UpdateRules(CallSite<T>,Int32)
  fullName: System.Runtime.CompilerServices.CallSiteOps.UpdateRules(CallSite<T>,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static void UpdateRules<T> (System.Runtime.CompilerServices.CallSite<T> this, int matched) where T : class;'
    parameters:
    - id: this
      type: System.Runtime.CompilerServices.CallSite{T}
      description: "To be added."
    - id: matched
      type: System.Int32
      description: "To be added."
  overload: System.Runtime.CompilerServices.CallSiteOps.UpdateRules<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: AddRule(CallSite<T>,T)
  nameWithType: CallSiteOps.AddRule(CallSite<T>,T)
  fullName: System.Runtime.CompilerServices.CallSiteOps.AddRule(CallSite<T>,T)
- uid: System.Runtime.CompilerServices.CallSite{T}
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: CallSite<T>
  nameWithType: CallSite<T>
  fullName: System.Runtime.CompilerServices.CallSite<T>
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: CallSite<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: Bind(CallSiteBinder,CallSite<T>,Object[])
  nameWithType: CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])
  fullName: System.Runtime.CompilerServices.CallSiteOps.Bind(CallSiteBinder,CallSite<T>,Object[])
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: ClearMatch(CallSite)
  nameWithType: CallSiteOps.ClearMatch(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(CallSite)
- uid: System.Runtime.CompilerServices.CallSite
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: CallSite
  nameWithType: CallSite
  fullName: System.Runtime.CompilerServices.CallSite
- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: CreateMatchmaker(CallSite<T>)
  nameWithType: CallSiteOps.CreateMatchmaker(CallSite<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker(CallSite<T>)
- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache`1)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetCachedRules(RuleCache<T>)
  nameWithType: CallSiteOps.GetCachedRules(RuleCache<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules(RuleCache<T>)
- uid: T[]
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.CompilerServices.RuleCache`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: RuleCache<T>
  nameWithType: RuleCache<T>
  fullName: System.Runtime.CompilerServices.RuleCache<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetMatch(CallSite)
  nameWithType: CallSiteOps.GetMatch(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetMatch(CallSite)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetRuleCache(CallSite<T>)
  nameWithType: CallSiteOps.GetRuleCache(CallSite<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache(CallSite<T>)
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetRules(CallSite<T>)
  nameWithType: CallSiteOps.GetRules(CallSite<T>)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRules(CallSite<T>)
- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache`1,``0,System.Int32)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: MoveRule(RuleCache<T>,T,Int32)
  nameWithType: CallSiteOps.MoveRule(RuleCache<T>,T,Int32)
  fullName: System.Runtime.CompilerServices.CallSiteOps.MoveRule(RuleCache<T>,T,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: SetNotMatched(CallSite)
  nameWithType: CallSiteOps.SetNotMatched(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(CallSite)
- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: UpdateRules(CallSite<T>,Int32)
  nameWithType: CallSiteOps.UpdateRules(CallSite<T>,Int32)
  fullName: System.Runtime.CompilerServices.CallSiteOps.UpdateRules(CallSite<T>,Int32)
- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: AddRule<T>
  nameWithType: CallSiteOps.AddRule<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.Bind<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: Bind<T>
  nameWithType: CallSiteOps.Bind<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: ClearMatch
  nameWithType: CallSiteOps.ClearMatch
- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: CreateMatchmaker<T>
  nameWithType: CallSiteOps.CreateMatchmaker<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetCachedRules<T>
  nameWithType: CallSiteOps.GetCachedRules<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetMatch
  nameWithType: CallSiteOps.GetMatch
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetRuleCache<T>
  nameWithType: CallSiteOps.GetRuleCache<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: GetRules<T>
  nameWithType: CallSiteOps.GetRules<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: MoveRule<T>
  nameWithType: CallSiteOps.MoveRule<T>
- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: SetNotMatched
  nameWithType: CallSiteOps.SetNotMatched
- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules<T>*
  parent: System.Runtime.CompilerServices.CallSiteOps
  isExternal: false
  name: UpdateRules<T>
  nameWithType: CallSiteOps.UpdateRules<T>
