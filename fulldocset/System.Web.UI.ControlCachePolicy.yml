### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlCachePolicy
  id: ControlCachePolicy
  children:
  - System.Web.UI.ControlCachePolicy.Cached
  - System.Web.UI.ControlCachePolicy.Dependency
  - System.Web.UI.ControlCachePolicy.Duration
  - System.Web.UI.ControlCachePolicy.ProviderName
  - System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)
  - System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)
  - System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)
  - System.Web.UI.ControlCachePolicy.SupportsCaching
  - System.Web.UI.ControlCachePolicy.VaryByControl
  - System.Web.UI.ControlCachePolicy.VaryByParams
  langs:
  - csharp
  name: ControlCachePolicy
  nameWithType: ControlCachePolicy
  fullName: System.Web.UI.ControlCachePolicy
  type: Class
  summary: "Provides programmatic access to an ASP.NET user control&quot;s output cache settings."
  remarks: "The ControlCachePolicy class is used by developers in programmatic user control scenarios to specify output caching settings for user controls (.ascx files). ASP.NET embeds user controls within a <xref:System.Web.UI.BasePartialCachingControl> instance. The <xref:System.Web.UI.BasePartialCachingControl> class represents a user control that has output caching enabled. When you access the <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.PartialCachingControl> control, you will always receive a valid ControlCachePolicy object. However, if you access the <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=fullName> property of a <xref:System.Web.UI.UserControl> control, you receive a valid ControlCachePolicy object only if the user control is already wrapped by a <xref:System.Web.UI.BasePartialCachingControl> control. If it is not wrapped, the ControlCachePolicy object returned by the property will throw exceptions when you attempt to manipulate it because it does not have an associated <xref:System.Web.UI.BasePartialCachingControl>. To determine whether a <xref:System.Web.UI.UserControl> instance supports caching without generating exceptions, inspect the <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> property.       Using the ControlCachePolicy class is one of several ways you can enable output caching. The following list describes methods you can use to enable output caching:      -   Use the  directive to enable output caching in declarative scenarios.      -   Use the <xref:System.Web.UI.PartialCachingAttribute> attribute to enable caching for a user control in a code-behind file.      -   Use the ControlCachePolicy class to specify cache settings in programmatic scenarios in which you are working with <xref:System.Web.UI.BasePartialCachingControl> instances that have been cache-enabled using one of the previous methods and dynamically loaded using the <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=fullName> method. A ControlCachePolicy instance can be successfully manipulated only between the `Init` and `PreRender` stages of the control life cycle. If you modify a ControlCachePolicy object after the `PreRender` phase, ASP.NET throws an exception, because any changes made after the control is rendered cannot actually affect cache settings (a control is cached during the `Render` stage). Finally, a user control instance (and therefore its ControlCachePolicy object) is only available for programmatic manipulation when it is actually rendered."
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means the user control is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated ControlCachePolicy object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the <xref:System.Web.UI.ControlCachePolicy.Duration%2A> property is examined during page initialization and changed using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> and <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> methods if some conditions are met.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_1.aspx)]  \n  \n The following code example demonstrates using the `SimpleControl` user control from a Web Forms page. To run this example successfully, make sure the user control file (.ascx), its code-behind file (.cs or .vb), and the Web Forms page that hosts the user control (.aspx) are in the same directory.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#2](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_2.cs)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_2.vb)]  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#3](~/add/codesnippet/csharp/t-system.web.ui.controlc_1_3.ascx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#3](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_1_3.ascx)]"
  syntax:
    content: public sealed class ControlCachePolicy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.Cached
  id: Cached
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: Cached
  nameWithType: ControlCachePolicy.Cached
  fullName: System.Web.UI.ControlCachePolicy.Cached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets a value indicating whether fragment caching is enabled for the user control."
  syntax:
    content: public bool Cached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user control&quot;s output is cached; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.ControlCachePolicy.Cached*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The Cached property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.Dependency
  id: Dependency
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: Dependency
  nameWithType: ControlCachePolicy.Dependency
  fullName: System.Web.UI.ControlCachePolicy.Dependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets an instance of the <xref href=&quot;System.Web.Caching.CacheDependency&quot;></xref> class associated with the cached user control output."
  remarks: "The Dependency property delegates to the <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> property of the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control. When the <xref:System.Web.Caching.CacheDependency> instance is invalidated, the user control is removed from the cache."
  syntax:
    content: public System.Web.Caching.CacheDependency Dependency { get; set; }
    return:
      type: System.Web.Caching.CacheDependency
      description: "The <xref href=&quot;System.Web.Caching.CacheDependency&quot;></xref> associated with the control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.ControlCachePolicy.Dependency*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The Dependency property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.Duration
  id: Duration
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: Duration
  nameWithType: ControlCachePolicy.Duration
  fullName: System.Web.UI.ControlCachePolicy.Duration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the amount of time that cached items are to remain in the output cache."
  remarks: "If an absolute expiration policy is set using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method, the Duration property returns the amount of time remaining until cache entry expiration."
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means it is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the Duration property is examined during page initialization and cache expiration is changed if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_0_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_0_1.aspx)]"
  syntax:
    content: public TimeSpan Duration { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the amount of time a user control is to remain in the output cache. The default is <xref:System.TimeSpan>."
  overload: System.Web.UI.ControlCachePolicy.Duration*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The Duration property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.ProviderName
  id: ProviderName
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: ProviderName
  nameWithType: ControlCachePolicy.ProviderName
  fullName: System.Web.UI.ControlCachePolicy.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the name of the output-cache provider that is associated with a control instance."
  remarks: "The ProviderName property enables you to specify the current output-cache provider that is associated with a control, by using the <xref:System.Web.UI.ControlCachePolicy> instance. This property can be set only before the <xref:System.Web.UI.Control.PreRender> event occurs in the control life cycle."
  syntax:
    content: public string ProviderName { get; set; }
    return:
      type: System.String
      description: "The name of the provider."
  overload: System.Web.UI.ControlCachePolicy.ProviderName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The provider name was not found."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "An attempt was made to set the ProviderName property during or after the <xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref> event."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)
  id: SetExpires(System.DateTime)
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SetExpires(DateTime)
  nameWithType: ControlCachePolicy.SetExpires(DateTime)
  fullName: System.Web.UI.ControlCachePolicy.SetExpires(DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Instructs the <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;></xref> control that wraps the user control to expire the cache entry at the specified date and time."
  remarks: "Use the SetExpires and <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy. Use the SetExpires method and the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> method (passing `false`) to specify an absolute expiration policy."
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. The <xref:System.Web.UI.PartialCachingAttribute> attribute is applied to a user control named `SimpleControl`, which means the user control is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, the <xref:System.Web.UI.ControlCachePolicy.Duration%2A> property is examined during page initialization and changed using the <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> and SetExpires methods if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_2_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_2_1.aspx)]"
  syntax:
    content: public void SetExpires (DateTime expirationTime);
    parameters:
    - id: expirationTime
      type: System.DateTime
      description: "A <xref:System.DateTime> after which the cached entry expires."
  overload: System.Web.UI.ControlCachePolicy.SetExpires*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;></xref> and is not cacheable."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)
  id: SetSlidingExpiration(System.Boolean)
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SetSlidingExpiration(Boolean)
  nameWithType: ControlCachePolicy.SetSlidingExpiration(Boolean)
  fullName: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Instructs the <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;></xref> control that wraps the user control to set the user control&quot;s cache entry to use sliding or absolute expiration."
  remarks: "Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> and SetSlidingExpiration methods (passing `true`) to instruct the <xref:System.Web.UI.BasePartialCachingControl> control that wraps the user control to use a sliding expiration caching policy instead of an absolute expiration policy. Use the <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> method and the SetSlidingExpiration method (passing `false`) to specify an absolute expiration policy."
  example:
  - "The following code example demonstrates how a user control can be loaded dynamically and manipulated programmatically at run time. A user control named `SimpleControl` is decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute, which means it is wrapped by a <xref:System.Web.UI.PartialCachingControl> control at run time. The `SimpleControl` object's caching settings can be programmatically manipulated through its associated <xref:System.Web.UI.ControlCachePolicy> object, which is available through a reference to the <xref:System.Web.UI.PartialCachingControl> control that wraps it. In this example, caching settings are examined during page initialization and changed if some conditions are met. This example is part of a larger example provided for the <xref:System.Web.UI.ControlCachePolicy> class.  \n  \n [!code-cs[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_8_1.aspx)]\n [!code-vb[System.Web.UI.ControlCachePolicy_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_8_1.aspx)]"
  syntax:
    content: public void SetSlidingExpiration (bool useSlidingExpiration);
    parameters:
    - id: useSlidingExpiration
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to use sliding cache expiration instead of absolute expiration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.ControlCachePolicy.SetSlidingExpiration*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;></xref> and is not cacheable."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)
  id: SetVaryByCustom(System.String)
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SetVaryByCustom(String)
  nameWithType: ControlCachePolicy.SetVaryByCustom(String)
  fullName: System.Web.UI.ControlCachePolicy.SetVaryByCustom(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sets a list of custom strings that the output cache will use to vary the user control."
  remarks: "If you pass &quot;browser&quot; as the `varyByCustom` parameter, the user control will be varied by browser type and major version number. If another custom string is entered, you must override the <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> method in your application&quot;s Global.asax file."
  syntax:
    content: public void SetVaryByCustom (string varyByCustom);
    parameters:
    - id: varyByCustom
      type: System.String
      description: "The list of custom strings."
  overload: System.Web.UI.ControlCachePolicy.SetVaryByCustom*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;></xref> and is not cacheable."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.SupportsCaching
  id: SupportsCaching
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: SupportsCaching
  nameWithType: ControlCachePolicy.SupportsCaching
  fullName: System.Web.UI.ControlCachePolicy.SupportsCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a value indicating whether the user control supports caching."
  remarks: "A user control supports caching if it is associated with a <xref:System.Web.UI.BasePartialCachingControl> instance, which signals that either an  directive was parsed by the ASP.NET parser or the user control was decorated with a <xref:System.Web.UI.PartialCachingAttribute> attribute."
  syntax:
    content: public bool SupportsCaching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user control supports caching; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.ControlCachePolicy.SupportsCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.VaryByControl
  id: VaryByControl
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: VaryByControl
  nameWithType: ControlCachePolicy.VaryByControl
  fullName: System.Web.UI.ControlCachePolicy.VaryByControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets a list of control identifiers to vary the cached output by."
  syntax:
    content: public string VaryByControl { get; set; }
    return:
      type: System.String
      description: "A semicolon-separated list of strings used to vary a user control&quot;s output cache. These strings represent the <xref:System.Web.UI.Control.ID*> property values of ASP.NET server controls declared in the user control."
  overload: System.Web.UI.ControlCachePolicy.VaryByControl*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=\"System.Web.UI.BasePartialCachingControl\"></xref> and is not cacheable.  \n  \n \\- or -  \n  \n The VaryByControl property is set outside of the initialization and rendering stages of the control."
  platform:
  - net462
- uid: System.Web.UI.ControlCachePolicy.VaryByParams
  id: VaryByParams
  parent: System.Web.UI.ControlCachePolicy
  langs:
  - csharp
  name: VaryByParams
  nameWithType: ControlCachePolicy.VaryByParams
  fullName: System.Web.UI.ControlCachePolicy.VaryByParams
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets a list of <xref uid=&quot;langword_csharp_GET&quot; name=&quot;GET&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;></xref> parameter names to vary the cached output by."
  remarks: "By default, these strings correspond to a query string value sent with the GET method or to a parameter sent using the POST method. When the VaryByParams property is set to multiple parameters, the output cache contains a different version of the requested document for each specified parameter. Possible values include &quot;none&quot;, &quot;*&quot;, and any valid query string or POST parameter name."
  syntax:
    content: public System.Web.HttpCacheVaryByParams VaryByParams { get; }
    return:
      type: System.Web.HttpCacheVaryByParams
      description: "A semicolon-separated list of strings used to vary the output cache."
  overload: System.Web.UI.ControlCachePolicy.VaryByParams*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The user control is not associated with a <xref href=&quot;System.Web.UI.BasePartialCachingControl&quot;></xref> and is not cacheable."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.UI.ControlCachePolicy.Cached
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Cached
  nameWithType: ControlCachePolicy.Cached
  fullName: System.Web.UI.ControlCachePolicy.Cached
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlCachePolicy.Dependency
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Dependency
  nameWithType: ControlCachePolicy.Dependency
  fullName: System.Web.UI.ControlCachePolicy.Dependency
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.Web.UI.ControlCachePolicy.Duration
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Duration
  nameWithType: ControlCachePolicy.Duration
  fullName: System.Web.UI.ControlCachePolicy.Duration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.ControlCachePolicy.ProviderName
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: ProviderName
  nameWithType: ControlCachePolicy.ProviderName
  fullName: System.Web.UI.ControlCachePolicy.ProviderName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetExpires(DateTime)
  nameWithType: ControlCachePolicy.SetExpires(DateTime)
  fullName: System.Web.UI.ControlCachePolicy.SetExpires(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetSlidingExpiration(Boolean)
  nameWithType: ControlCachePolicy.SetSlidingExpiration(Boolean)
  fullName: System.Web.UI.ControlCachePolicy.SetSlidingExpiration(Boolean)
- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetVaryByCustom(String)
  nameWithType: ControlCachePolicy.SetVaryByCustom(String)
  fullName: System.Web.UI.ControlCachePolicy.SetVaryByCustom(String)
- uid: System.Web.UI.ControlCachePolicy.SupportsCaching
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SupportsCaching
  nameWithType: ControlCachePolicy.SupportsCaching
  fullName: System.Web.UI.ControlCachePolicy.SupportsCaching
- uid: System.Web.UI.ControlCachePolicy.VaryByControl
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByControl
  nameWithType: ControlCachePolicy.VaryByControl
  fullName: System.Web.UI.ControlCachePolicy.VaryByControl
- uid: System.Web.UI.ControlCachePolicy.VaryByParams
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByParams
  nameWithType: ControlCachePolicy.VaryByParams
  fullName: System.Web.UI.ControlCachePolicy.VaryByParams
- uid: System.Web.HttpCacheVaryByParams
  parent: System.Web
  isExternal: false
  name: HttpCacheVaryByParams
  nameWithType: HttpCacheVaryByParams
  fullName: System.Web.HttpCacheVaryByParams
- uid: System.Web.UI.ControlCachePolicy.Cached*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Cached
  nameWithType: ControlCachePolicy.Cached
- uid: System.Web.UI.ControlCachePolicy.Dependency*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Dependency
  nameWithType: ControlCachePolicy.Dependency
- uid: System.Web.UI.ControlCachePolicy.Duration*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: Duration
  nameWithType: ControlCachePolicy.Duration
- uid: System.Web.UI.ControlCachePolicy.ProviderName*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: ProviderName
  nameWithType: ControlCachePolicy.ProviderName
- uid: System.Web.UI.ControlCachePolicy.SetExpires*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetExpires
  nameWithType: ControlCachePolicy.SetExpires
- uid: System.Web.UI.ControlCachePolicy.SetSlidingExpiration*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetSlidingExpiration
  nameWithType: ControlCachePolicy.SetSlidingExpiration
- uid: System.Web.UI.ControlCachePolicy.SetVaryByCustom*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SetVaryByCustom
  nameWithType: ControlCachePolicy.SetVaryByCustom
- uid: System.Web.UI.ControlCachePolicy.SupportsCaching*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: SupportsCaching
  nameWithType: ControlCachePolicy.SupportsCaching
- uid: System.Web.UI.ControlCachePolicy.VaryByControl*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByControl
  nameWithType: ControlCachePolicy.VaryByControl
- uid: System.Web.UI.ControlCachePolicy.VaryByParams*
  parent: System.Web.UI.ControlCachePolicy
  isExternal: false
  name: VaryByParams
  nameWithType: ControlCachePolicy.VaryByParams
