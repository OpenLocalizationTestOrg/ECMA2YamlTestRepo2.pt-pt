### YamlMime:ManagedReference
items:
- uid: System.Messaging.DefaultPropertiesToSend
  id: DefaultPropertiesToSend
  children:
  - System.Messaging.DefaultPropertiesToSend.#ctor
  - System.Messaging.DefaultPropertiesToSend.AcknowledgeType
  - System.Messaging.DefaultPropertiesToSend.AdministrationQueue
  - System.Messaging.DefaultPropertiesToSend.AppSpecific
  - System.Messaging.DefaultPropertiesToSend.AttachSenderId
  - System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm
  - System.Messaging.DefaultPropertiesToSend.Extension
  - System.Messaging.DefaultPropertiesToSend.HashAlgorithm
  - System.Messaging.DefaultPropertiesToSend.Label
  - System.Messaging.DefaultPropertiesToSend.Priority
  - System.Messaging.DefaultPropertiesToSend.Recoverable
  - System.Messaging.DefaultPropertiesToSend.ResponseQueue
  - System.Messaging.DefaultPropertiesToSend.TimeToBeReceived
  - System.Messaging.DefaultPropertiesToSend.TimeToReachQueue
  - System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue
  - System.Messaging.DefaultPropertiesToSend.UseAuthentication
  - System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue
  - System.Messaging.DefaultPropertiesToSend.UseEncryption
  - System.Messaging.DefaultPropertiesToSend.UseJournalQueue
  - System.Messaging.DefaultPropertiesToSend.UseTracing
  langs:
  - csharp
  name: DefaultPropertiesToSend
  nameWithType: DefaultPropertiesToSend
  fullName: System.Messaging.DefaultPropertiesToSend
  type: Class
  summary: "Specifies the default property values that will be used when sending objects other than <xref href=&quot;System.Messaging.Message&quot;></xref> instances to a message queue."
  remarks: "You can set default values on selected properties for messages sent to a <xref:System.Messaging.MessageQueue>. DefaultPropertiesToSend is used to specify default property values of the message being sent when objects other than <xref:System.Messaging.Message> instances are sent to a queue, for example, the string argument passed into the <xref:System.Messaging.MessageQueue.Send%2A> method in the code fragment, `myMessageQueue.Send(&quot;hello&quot;)`. The <xref:System.Messaging.Message> class has corresponding, identically named properties to those in DefaultPropertiesToSend that provide the values when sending a <xref:System.Messaging.Message> instance specifically. Even if you have specified <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> for a queue, sending a <xref:System.Messaging.Message> object to that queue will cause the values for the identically named <xref:System.Messaging.Message> properties to override the queue&quot;s <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> values.       Properties that you do not set explicitly default to the values specified by the constructor, <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>.       For a list of initial property values for an instance of DefaultPropertiesToSend, see the DefaultPropertiesToSend constructor."
  example:
  - "The following code example uses the priority of a message to determine default properties to send for the message.  \n  \n [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/t-system.messaging.defau_1.cpp)]\n [!code-cs[MessageQueue.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/t-system.messaging.defau_1.cs)]\n [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/t-system.messaging.defau_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public class DefaultPropertiesToSend
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.#ctor
  id: '#ctor'
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: DefaultPropertiesToSend()
  nameWithType: DefaultPropertiesToSend.DefaultPropertiesToSend()
  fullName: System.Messaging.DefaultPropertiesToSend.DefaultPropertiesToSend()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Messaging.DefaultPropertiesToSend&quot;></xref> class."
  remarks: "You can create a new instance of <xref:System.Messaging.DefaultPropertiesToSend> to define default property values to associate with objects sent to a queue that are not of type <xref:System.Messaging.Message>. When working with <xref:System.Messaging.MessageQueue> objects, a <xref:System.Messaging.DefaultPropertiesToSend> instance is created for you and associated with the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> member of the <xref:System.Messaging.MessageQueue>.       There are two ways to define a queue&quot;s default properties to send, as shown in the following C# code. You can set values for this instance of <xref:System.Messaging.DefaultPropertiesToSend> and associate it with the queue&quot;s <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property:      ```   DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();     // Set default values for the properties.     myDefaultProperties.Label = &quot;myLabel&quot;;     myDefaultProperties.Recoverable = false;    ...     myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;     myMessageQueue.Send(&quot;hello&quot;);   ```       Or, you can individually assign values to the <xref:System.Messaging.MessageQueue> instance&quot;s <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property directly:      ```   myMessageQueue.DefaultPropertiesToSend.Label = &quot;myLabel&quot;;     myMessageQueue.DefaultPropertiesToSend.Recoverable = false;   ...     myMessageQueue.Send(&quot;hello&quot;);   ```       If you choose the second of these options, you do not need to call the DefaultPropertiesToSend constructor explicitly. You might want to create instances of <xref:System.Messaging.DefaultPropertiesToSend>, for example, if the properties&quot; default values depend on some criterion of the message being sent. You can create multiple <xref:System.Messaging.DefaultPropertiesToSend> instances and assign one to the queue&quot;s <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName> property before sending the message to the queue.       The following table shows initial property values for an instance of <xref:System.Messaging.DefaultPropertiesToSend>.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|   |<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|   |<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|0|   |<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|   |<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|   |<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|A zero-length array of bytes|   |<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|   |<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|An empty string (&quot;&quot;)|   |<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|   |<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|   |<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|   |<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|   |<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|   |<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|   |<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|   |<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|   |<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|   |<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|   |<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|"
  syntax:
    content: public DefaultPropertiesToSend ();
    parameters: []
  overload: System.Messaging.DefaultPropertiesToSend.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.AcknowledgeType
  id: AcknowledgeType
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: AcknowledgeType
  nameWithType: DefaultPropertiesToSend.AcknowledgeType
  fullName: System.Messaging.DefaultPropertiesToSend.AcknowledgeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the type of acknowledgement message to be returned to the sending application."
  remarks: "The AcknowledgeType property specifies the type of acknowledgment messages to return to the sending application. For example, set the AcknowledgeType property to request notification when a message reaches its destination, when it is retrieved, or whether a time-out has prevented the message from reaching or being retrieved from the destination queue."
  syntax:
    content: public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }
    return:
      type: System.Messaging.AcknowledgeTypes
      description: "One of the <xref href=&quot;System.Messaging.AcknowledgeTypes&quot;></xref> enumeration values. This value is used to determine the type of acknowledgment messages the system posts in the administration queue and when acknowledgments are returned to the sending application. The default is <xref uid=&quot;langword_csharp_AcknowledgeTypes.None&quot; name=&quot;AcknowledgeTypes.None&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.AcknowledgeType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.AdministrationQueue
  id: AdministrationQueue
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: AdministrationQueue
  nameWithType: DefaultPropertiesToSend.AdministrationQueue
  fullName: System.Messaging.DefaultPropertiesToSend.AdministrationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the queue that receives acknowledgement messages generated by Message Queuing."
  remarks: "The queue specified in the AdministrationQueue property can be any non-transactional queue. The acknowledgment messages sent to the administration queue can indicate whether or not the original message reached its destination queue, and whether or not it was removed from the queue.       When the <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to be used as the administration queue."
  syntax:
    content: public System.Messaging.MessageQueue AdministrationQueue { get; set; }
    return:
      type: System.Messaging.MessageQueue
      description: "The <xref href=&quot;System.Messaging.MessageQueue&quot;></xref> that specifies the administration queue used for system-generated acknowledgment messages. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.AdministrationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.AppSpecific
  id: AppSpecific
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: AppSpecific
  nameWithType: DefaultPropertiesToSend.AppSpecific
  fullName: System.Messaging.DefaultPropertiesToSend.AppSpecific
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets additional, application-specific information."
  remarks: "The AppSpecific property contains additional, application-specific information that can be used to organize different types of messages, for example, using application-specific indexes. It is the responsibility of the application to interpret AppSpecific information.       Where possible, message data should be included in the body of the message rather than in the AppSpecific property.       When working with foreign queues, use the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property to specify non-Message Queuing message properties. As with AppSpecific, it is the responsibility of the application to understand the content of the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property."
  syntax:
    content: public int AppSpecific { get; set; }
    return:
      type: System.Int32
      description: "Information specific to the application. The default is 0."
  overload: System.Messaging.DefaultPropertiesToSend.AppSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.AttachSenderId
  id: AttachSenderId
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: AttachSenderId
  nameWithType: DefaultPropertiesToSend.AttachSenderId
  fullName: System.Messaging.DefaultPropertiesToSend.AttachSenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether the sender ID should be attached to the message."
  remarks: "The sender ID is an array of bytes that represents the identifier of the sending user. The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue. The sender ID is only trustworthy if the message was authenticated when it reached the destination queue.       When the sender ID is not attached to the message, the sending application is indicating that Message Queuing should not validate the message&quot;s sender when the message is sent to the destination queue. If the destination queue only accepts authenticated messages, and either <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or AttachSenderId is `false`, the message will be rejected when it reaches the queue."
  syntax:
    content: public bool AttachSenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if sender ID should be attached to the message; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.AttachSenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: DefaultPropertiesToSend.EncryptionAlgorithm
  fullName: System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the encryption algorithm used to encrypt the body of a private message."
  remarks: "If a message is private, it is encrypted before it is sent and is decrypted when it is received. The EncryptionAlgorithm property specifies the algorithm used to encrypt the message body of a private message.       A queue can require that incoming messages be encrypted. If a non-encrypted (non-private) message is sent to a queue that only accepts private messages, or if a private message is sent to a queue that only accepts non-private messages, the message is rejected by the queue. The sending application can request a negative acknowledgment message be returned to the sending application if a message was rejected."
  syntax:
    content: public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }
    return:
      type: System.Messaging.EncryptionAlgorithm
      description: "One of the <xref href=&quot;System.Messaging.EncryptionAlgorithm&quot;></xref> enumeration values. The default is <xref uid=&quot;langword_csharp_RC2&quot; name=&quot;RC2&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.Extension
  id: Extension
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: Extension
  nameWithType: DefaultPropertiesToSend.Extension
  fullName: System.Messaging.DefaultPropertiesToSend.Extension
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets additional information associated with the message."
  remarks: "The Extension property provides for additional application-defined information that is associated with the message, such as a large binary object. It is the responsibility of the receiving application to interpret the contents of the Extension.       Where possible, message data should be included in the body of the message rather than in the extension.       When working with foreign queues, use the Extension property to specify non-Message Queuing message properties.       A foreign queue exists in a queuing system other than Microsoft Message Queuing. Microsoft Message Queuing communicates with such queues through a connector application."
  syntax:
    content: public byte[] Extension { get; set; }
    return:
      type: System.Byte[]
      description: "An array of bytes that provides additional, application-defined information associated with the message. The default is a zero-length array."
  overload: System.Messaging.DefaultPropertiesToSend.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.HashAlgorithm
  id: HashAlgorithm
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: DefaultPropertiesToSend.HashAlgorithm
  fullName: System.Messaging.DefaultPropertiesToSend.HashAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the hashing algorithm used when authenticating messages or creating a digital signature for a message."
  remarks: "The HashAlgorithm property identifies the hashing algorithm Message Queuing uses when authenticating messages or when creating a digital signature for a message.       Message Queuing on the source computer uses the hashing algorithm when creating a digital signature for a message. The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received."
  syntax:
    content: public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }
    return:
      type: System.Messaging.HashAlgorithm
      description: "One of the <xref href=&quot;System.Messaging.HashAlgorithm&quot;></xref> enumeration values. The default is <xref uid=&quot;langword_csharp_MD5&quot; name=&quot;MD5&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.HashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.Label
  id: Label
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: Label
  nameWithType: DefaultPropertiesToSend.Label
  fullName: System.Messaging.DefaultPropertiesToSend.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets an application-defined string that describes the message."
  remarks: "A message label can be used for display purposes, for example, or to selectively process messages based on the label value. The maximum length for a message label is 249 Unicode characters. The label does not need to be unique across messages.       Message queue and message labels represent an application-defined value that can help to identify the queue or message in human-readable terms. It is the responsibility of the application to interpret label contents; they have no intrinsic meaning to the Message Queuing application."
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "The label of the message. The default is an empty string (&quot;&quot;)."
  overload: System.Messaging.DefaultPropertiesToSend.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.Priority
  id: Priority
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: Priority
  nameWithType: DefaultPropertiesToSend.Priority
  fullName: System.Messaging.DefaultPropertiesToSend.Priority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the message priority, which is used to determine where the message is placed in the queue."
  remarks: "The Priority property affects how Message Queuing handles the message while it is en route, as well as where the message is placed in the queue when it reaches its destination. Higher priority messages are given preference during routing and inserted toward the front of the queue. Messages with the same priority are placed in the queue according to their arrival time.       Message priority can only be set meaningfully for non-transactional messages. The priority for transactional messages is automatically set to `Lowest`, which causes transactional message priority to be ignored."
  syntax:
    content: public System.Messaging.MessagePriority Priority { get; set; }
    return:
      type: System.Messaging.MessagePriority
      description: "One of the <xref href=&quot;System.Messaging.MessagePriority&quot;></xref> enumeration values that represents the priority level of a non-transactional message. The default is <xref uid=&quot;langword_csharp_Normal&quot; name=&quot;Normal&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.Recoverable
  id: Recoverable
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: Recoverable
  nameWithType: DefaultPropertiesToSend.Recoverable
  fullName: System.Messaging.DefaultPropertiesToSend.Recoverable
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem."
  remarks: "The Recoverable property indicates whether delivery of a message is guaranteed, even if a computer crashes while the message is en route to the destination queue.       If delivery of a message is guaranteed, the message is stored locally at every step along the route until the message is successfully forwarded to the next computer. Setting Recoverable to `true` on <xref:System.Messaging.DefaultPropertiesToSend> could affect the throughput.       If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of whether Recoverable is set to `true`."
  syntax:
    content: public bool Recoverable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the message is guaranteed delivery by saving it to disk while en route; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if delivery is not assured. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.Recoverable*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.ResponseQueue
  id: ResponseQueue
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: ResponseQueue
  nameWithType: DefaultPropertiesToSend.ResponseQueue
  fullName: System.Messaging.DefaultPropertiesToSend.ResponseQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the queue that receives application-generated response messages."
  remarks: "The ResponseQueue property identifies the queue that receives application-generated response messages that are returned to the sending application by the receiving application. Response queues are specified by the sending application when the application sends its messages. Any available queue can be specified as a response queue.       Messages returned to the response queue are application-specific. The application must define what is in the messages as well as what is to be done when a message is received."
  syntax:
    content: public System.Messaging.MessageQueue ResponseQueue { get; set; }
    return:
      type: System.Messaging.MessageQueue
      description: "The <xref href=&quot;System.Messaging.MessageQueue&quot;></xref> to which application-generated response messages are returned. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.ResponseQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.TimeToBeReceived
  id: TimeToBeReceived
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: TimeToBeReceived
  nameWithType: DefaultPropertiesToSend.TimeToBeReceived
  fullName: System.Messaging.DefaultPropertiesToSend.TimeToBeReceived
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the time limit for the message to be retrieved from the destination queue."
  remarks: "The TimeToBeReceived property specifies the total time in seconds for a sent message to be received from the destination queue. This time limit includes the time spent getting to the destination queue, plus the time spent waiting in the queue before the message is retrieved by an application.      > [!CAUTION] >  When using dependent client computers, synchronize the clock on the client computer with the clock on the server running Message Queuing. If the two clocks are not synchronized, you might see unpredictable behavior when sending messages when TimeToBeReceived is not <xref:System.Messaging.Message.InfiniteTimeout>.       If the TimeToBeReceived interval expires before the message is removed from the queue, the Message Queuing application discards the message. The message is either sent to the dead-letter queue, if the message&quot;s <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> property is set to `true`, or ignored, if <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `false`. If TimeToBeReceived is less than <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, TimeToBeReceived takes precedence.       The message&quot;s <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property can be set to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.      > [!CAUTION] >  If you have specified to receive <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> negative acknowledgments, you will not receive them when the value of TimeToBeReceived is less than the value of <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>.       When several messages are sent in a transaction, Message Queuing uses the value of the first message&quot;s TimeToBeReceived property."
  syntax:
    content: public TimeSpan TimeToBeReceived { get; set; }
    return:
      type: System.TimeSpan
      description: "The total time, in seconds, for a sent message to be received from the destination queue. The default is <xref href=&quot;System.Messaging.Message.InfiniteTimeout&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.TimeToBeReceived*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.TimeToReachQueue
  id: TimeToReachQueue
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: TimeToReachQueue
  nameWithType: DefaultPropertiesToSend.TimeToReachQueue
  fullName: System.Messaging.DefaultPropertiesToSend.TimeToReachQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the time limit for the message to reach the queue."
  remarks: "If the TimeToReachQueue interval expires before the message reaches its destination, the Message Queuing application discards the message. The message is either sent to the dead-letter queue, if the message&quot;s <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> property is set to `true`, or ignored, if <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `false`. If TimeToReachQueue is greater than <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> takes precedence.       The message&quot;s <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property can be set to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.       If TimeToReachQueue is 0 seconds, Message Queuing tries once to send the message to its destination if the queue is waiting for the message. If the queue is local, the message always reaches the queue.       When several messages are sent in a transaction, Message Queuing uses the value of the first message&quot;s TimeToReachQueue property."
  syntax:
    content: public TimeSpan TimeToReachQueue { get; set; }
    return:
      type: System.TimeSpan
      description: "The time limit in seconds for a message to reach the destination queue, from the time the message is sent. The default is <xref href=&quot;System.Messaging.Message.InfiniteTimeout&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.TimeToReachQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue
  id: TransactionStatusQueue
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: TransactionStatusQueue
  nameWithType: DefaultPropertiesToSend.TransactionStatusQueue
  fullName: System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets the transaction status queue on the source computer."
  remarks: "The TransactionStatusQueue property identifies the transaction status queue on the source computer. The property is set by Message Queuing, and is used by connector applications when retrieving transactional messages sent to a foreign queue.       A foreign queue exists in a queuing system other than Microsoft Message Queuing. Microsoft Message Queuing communicates with such queues through a connector application.       The connector application can use the transaction status queue to send acknowledgment messages back to the sending application. The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments."
  syntax:
    content: public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }
    return:
      type: System.Messaging.MessageQueue
      description: "The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.UseAuthentication
  id: UseAuthentication
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: UseAuthentication
  nameWithType: DefaultPropertiesToSend.UseAuthentication
  fullName: System.Messaging.DefaultPropertiesToSend.UseAuthentication
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether the message must be authenticated before being sent."
  remarks: "The UseAuthentication property specifies whether the message needs to be authenticated. If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and to authenticate the message when it is received.       If a message is sent to a queue that only accepts authenticated messages, the message will be rejected when it reaches the queue if UseAuthentication is set to `false`.       It is not possible to look at the properties of a message and determine whether a message failed authentication. Messages that fail authentication are discarded and are not delivered to the queue."
  syntax:
    content: public bool UseAuthentication { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the sending application requested authentication for the message; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.UseAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue
  id: UseDeadLetterQueue
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: UseDeadLetterQueue
  nameWithType: DefaultPropertiesToSend.UseDeadLetterQueue
  fullName: System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue."
  remarks: "<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> and UseDeadLetterQueue specify how Message Queuing will track a message. If UseDeadLetterQueue is `true`, then in case of delivery failure (for non-transactional messages), the message is sent to the non-transactional dead-letter queue on the computer that could not deliver the message (for example, if a message timer expires).       In the case of delivery failure for transactional messages, the message is sent to the transactional dead-letter queue on the source computer in all negative and in-doubt cases.       When you store messages in a dead-letter queue, empty the queue periodically to remove messages that are no longer needed. Messages stored in dead-letter queues count against the size quota for the computer where the queue resides. The computer quota is set by the administrator and refers to the total size allocated for storing messages on a computer, not just in a single queue.       You do not create a journal or dead-letter queue. These are both system queues that are generated by Message Queuing."
  syntax:
    content: public bool UseDeadLetterQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if message delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.UseEncryption
  id: UseEncryption
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: UseEncryption
  nameWithType: DefaultPropertiesToSend.UseEncryption
  fullName: System.Messaging.DefaultPropertiesToSend.UseEncryption
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to make the message private."
  remarks: "If a message is private, its body is encrypted before it is sent and is decrypted when it is received. To send a private message, the sending application must specify that encryption be used and, optionally, which encryption algorithm to apply.       When sending private messages, it is not necessary that your application perform the message encryption. Message Queuing can encrypt the message body for you when your application sends messages within a Microsoft Windows 2000 enterprise where there is access to the directory service. When receiving private messages, it is always the receiving Queue Manager that decrypts the message body."
  syntax:
    content: public bool UseEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to require Message Queuing to encrypt the message; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.UseEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: DefaultPropertiesToSend.UseJournalQueue
  fullName: System.Messaging.DefaultPropertiesToSend.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer."
  remarks: "UseJournalQueue and <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specify how Message Queuing will track a message. If UseJournalQueue is `true`, then at each step that a message is transmitted, a copy is kept in the computer journal on the originating computer.       The sent message will only be copied to the journal queue if the destination queue is on a remote computer. If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.       When you store messages in a journal queue, empty the queue periodically to remove messages that are no longer needed. Messages stored in journal queues count against the quota for the computer where the queue resides (the computer quota is set by the administrator).       You do not create a journal or dead-letter queue. These are both system queues that are generated by Message Queuing.       Journaling can be specified by both the message and the queue. When UseJournalQueue is `true`, the message is journaled when it is sent. When <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=fullName> is `true`, the message is journaled when it is received."
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to require that a copy of a message be kept in the originating computer&quot;s machine journal after it has been successfully transmitted from the originating computer to the next step; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.UseJournalQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.DefaultPropertiesToSend.UseTracing
  id: UseTracing
  parent: System.Messaging.DefaultPropertiesToSend
  langs:
  - csharp
  name: UseTracing
  nameWithType: DefaultPropertiesToSend.UseTracing
  fullName: System.Messaging.DefaultPropertiesToSend.UseTracing
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue."
  remarks: "The UseTracing property specifies whether to track the route of a message as it moves toward its destination queue. If `true`, a Message Queuing-generated report message is sent to a report queue each time the message passes through a Message Queuing routing server. The report queue is specified by the source Queue Manager. Report queues are not limited to Message Queuing-generated report messages. Your application-generated messages can be sent to report queues as well.       Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise. These settings are configured by the administrator."
  syntax:
    content: public bool UseTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if each intermediate step made by the original message en route to the destination queue will generate a report to be sent to the system&quot;s report queue; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.DefaultPropertiesToSend.UseTracing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.DefaultPropertiesToSend.#ctor
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: DefaultPropertiesToSend()
  nameWithType: DefaultPropertiesToSend.DefaultPropertiesToSend()
  fullName: System.Messaging.DefaultPropertiesToSend.DefaultPropertiesToSend()
- uid: System.Messaging.DefaultPropertiesToSend.AcknowledgeType
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AcknowledgeType
  nameWithType: DefaultPropertiesToSend.AcknowledgeType
  fullName: System.Messaging.DefaultPropertiesToSend.AcknowledgeType
- uid: System.Messaging.AcknowledgeTypes
  parent: System.Messaging
  isExternal: false
  name: AcknowledgeTypes
  nameWithType: AcknowledgeTypes
  fullName: System.Messaging.AcknowledgeTypes
- uid: System.Messaging.DefaultPropertiesToSend.AdministrationQueue
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AdministrationQueue
  nameWithType: DefaultPropertiesToSend.AdministrationQueue
  fullName: System.Messaging.DefaultPropertiesToSend.AdministrationQueue
- uid: System.Messaging.MessageQueue
  parent: System.Messaging
  isExternal: false
  name: MessageQueue
  nameWithType: MessageQueue
  fullName: System.Messaging.MessageQueue
- uid: System.Messaging.DefaultPropertiesToSend.AppSpecific
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AppSpecific
  nameWithType: DefaultPropertiesToSend.AppSpecific
  fullName: System.Messaging.DefaultPropertiesToSend.AppSpecific
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.DefaultPropertiesToSend.AttachSenderId
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AttachSenderId
  nameWithType: DefaultPropertiesToSend.AttachSenderId
  fullName: System.Messaging.DefaultPropertiesToSend.AttachSenderId
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: DefaultPropertiesToSend.EncryptionAlgorithm
  fullName: System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm
- uid: System.Messaging.EncryptionAlgorithm
  parent: System.Messaging
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: EncryptionAlgorithm
  fullName: System.Messaging.EncryptionAlgorithm
- uid: System.Messaging.DefaultPropertiesToSend.Extension
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Extension
  nameWithType: DefaultPropertiesToSend.Extension
  fullName: System.Messaging.DefaultPropertiesToSend.Extension
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.DefaultPropertiesToSend.HashAlgorithm
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: HashAlgorithm
  nameWithType: DefaultPropertiesToSend.HashAlgorithm
  fullName: System.Messaging.DefaultPropertiesToSend.HashAlgorithm
- uid: System.Messaging.HashAlgorithm
  parent: System.Messaging
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Messaging.HashAlgorithm
- uid: System.Messaging.DefaultPropertiesToSend.Label
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Label
  nameWithType: DefaultPropertiesToSend.Label
  fullName: System.Messaging.DefaultPropertiesToSend.Label
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.DefaultPropertiesToSend.Priority
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Priority
  nameWithType: DefaultPropertiesToSend.Priority
  fullName: System.Messaging.DefaultPropertiesToSend.Priority
- uid: System.Messaging.MessagePriority
  parent: System.Messaging
  isExternal: false
  name: MessagePriority
  nameWithType: MessagePriority
  fullName: System.Messaging.MessagePriority
- uid: System.Messaging.DefaultPropertiesToSend.Recoverable
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Recoverable
  nameWithType: DefaultPropertiesToSend.Recoverable
  fullName: System.Messaging.DefaultPropertiesToSend.Recoverable
- uid: System.Messaging.DefaultPropertiesToSend.ResponseQueue
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: ResponseQueue
  nameWithType: DefaultPropertiesToSend.ResponseQueue
  fullName: System.Messaging.DefaultPropertiesToSend.ResponseQueue
- uid: System.Messaging.DefaultPropertiesToSend.TimeToBeReceived
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: TimeToBeReceived
  nameWithType: DefaultPropertiesToSend.TimeToBeReceived
  fullName: System.Messaging.DefaultPropertiesToSend.TimeToBeReceived
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Messaging.DefaultPropertiesToSend.TimeToReachQueue
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: TimeToReachQueue
  nameWithType: DefaultPropertiesToSend.TimeToReachQueue
  fullName: System.Messaging.DefaultPropertiesToSend.TimeToReachQueue
- uid: System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: DefaultPropertiesToSend.TransactionStatusQueue
  fullName: System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue
- uid: System.Messaging.DefaultPropertiesToSend.UseAuthentication
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseAuthentication
  nameWithType: DefaultPropertiesToSend.UseAuthentication
  fullName: System.Messaging.DefaultPropertiesToSend.UseAuthentication
- uid: System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: DefaultPropertiesToSend.UseDeadLetterQueue
  fullName: System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue
- uid: System.Messaging.DefaultPropertiesToSend.UseEncryption
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseEncryption
  nameWithType: DefaultPropertiesToSend.UseEncryption
  fullName: System.Messaging.DefaultPropertiesToSend.UseEncryption
- uid: System.Messaging.DefaultPropertiesToSend.UseJournalQueue
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseJournalQueue
  nameWithType: DefaultPropertiesToSend.UseJournalQueue
  fullName: System.Messaging.DefaultPropertiesToSend.UseJournalQueue
- uid: System.Messaging.DefaultPropertiesToSend.UseTracing
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseTracing
  nameWithType: DefaultPropertiesToSend.UseTracing
  fullName: System.Messaging.DefaultPropertiesToSend.UseTracing
- uid: System.Messaging.DefaultPropertiesToSend.#ctor*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: DefaultPropertiesToSend
  nameWithType: DefaultPropertiesToSend.DefaultPropertiesToSend
- uid: System.Messaging.DefaultPropertiesToSend.AcknowledgeType*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AcknowledgeType
  nameWithType: DefaultPropertiesToSend.AcknowledgeType
- uid: System.Messaging.DefaultPropertiesToSend.AdministrationQueue*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AdministrationQueue
  nameWithType: DefaultPropertiesToSend.AdministrationQueue
- uid: System.Messaging.DefaultPropertiesToSend.AppSpecific*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AppSpecific
  nameWithType: DefaultPropertiesToSend.AppSpecific
- uid: System.Messaging.DefaultPropertiesToSend.AttachSenderId*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: AttachSenderId
  nameWithType: DefaultPropertiesToSend.AttachSenderId
- uid: System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: DefaultPropertiesToSend.EncryptionAlgorithm
- uid: System.Messaging.DefaultPropertiesToSend.Extension*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Extension
  nameWithType: DefaultPropertiesToSend.Extension
- uid: System.Messaging.DefaultPropertiesToSend.HashAlgorithm*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: HashAlgorithm
  nameWithType: DefaultPropertiesToSend.HashAlgorithm
- uid: System.Messaging.DefaultPropertiesToSend.Label*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Label
  nameWithType: DefaultPropertiesToSend.Label
- uid: System.Messaging.DefaultPropertiesToSend.Priority*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Priority
  nameWithType: DefaultPropertiesToSend.Priority
- uid: System.Messaging.DefaultPropertiesToSend.Recoverable*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: Recoverable
  nameWithType: DefaultPropertiesToSend.Recoverable
- uid: System.Messaging.DefaultPropertiesToSend.ResponseQueue*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: ResponseQueue
  nameWithType: DefaultPropertiesToSend.ResponseQueue
- uid: System.Messaging.DefaultPropertiesToSend.TimeToBeReceived*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: TimeToBeReceived
  nameWithType: DefaultPropertiesToSend.TimeToBeReceived
- uid: System.Messaging.DefaultPropertiesToSend.TimeToReachQueue*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: TimeToReachQueue
  nameWithType: DefaultPropertiesToSend.TimeToReachQueue
- uid: System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: DefaultPropertiesToSend.TransactionStatusQueue
- uid: System.Messaging.DefaultPropertiesToSend.UseAuthentication*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseAuthentication
  nameWithType: DefaultPropertiesToSend.UseAuthentication
- uid: System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: DefaultPropertiesToSend.UseDeadLetterQueue
- uid: System.Messaging.DefaultPropertiesToSend.UseEncryption*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseEncryption
  nameWithType: DefaultPropertiesToSend.UseEncryption
- uid: System.Messaging.DefaultPropertiesToSend.UseJournalQueue*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseJournalQueue
  nameWithType: DefaultPropertiesToSend.UseJournalQueue
- uid: System.Messaging.DefaultPropertiesToSend.UseTracing*
  parent: System.Messaging.DefaultPropertiesToSend
  isExternal: false
  name: UseTracing
  nameWithType: DefaultPropertiesToSend.UseTracing
