### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.HtmlElementEventArgs
  id: HtmlElementEventArgs
  children:
  - System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed
  - System.Windows.Forms.HtmlElementEventArgs.BubbleEvent
  - System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition
  - System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed
  - System.Windows.Forms.HtmlElementEventArgs.EventType
  - System.Windows.Forms.HtmlElementEventArgs.FromElement
  - System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode
  - System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed
  - System.Windows.Forms.HtmlElementEventArgs.MousePosition
  - System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition
  - System.Windows.Forms.HtmlElementEventArgs.ReturnValue
  - System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed
  - System.Windows.Forms.HtmlElementEventArgs.ToElement
  langs:
  - csharp
  name: HtmlElementEventArgs
  nameWithType: HtmlElementEventArgs
  fullName: System.Windows.Forms.HtmlElementEventArgs
  type: Class
  summary: "Provides data for the events defined on <xref href=&quot;System.Windows.Forms.HtmlDocument&quot;></xref> and <xref href=&quot;System.Windows.Forms.HtmlElement&quot;></xref>."
  remarks: "HtmlElementEventArgs encapsulates the same information found on the `window.event` object when programming against the unmanaged HTML DOM or when writing Active Script for HTML pages.       In most cases, you can use <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> to find the HTML element that is receiving the event action, and <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> to find the HTML element that the current event is causing us to leave. However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.       Many events in the HTML DOM are sent to their parent elements unless they are cancelled. This is known as event bubbling. If a `SPAN` inside of a `DIV` receives a click, then a click event is raised for the `SPAN` first, then for the `DIV`, and finally for the HTML page&quot;s `BODY` element. <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> controls whether an event will behave in this manner or not."
  example:
  - "The following code example demonstrates the use of this type. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/t-system.windows.forms.h_13_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/t-system.windows.forms.h_13_1.vb)]"
  syntax:
    content: 'public sealed class HtmlElementEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed
  id: AltKeyPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: AltKeyPressed
  nameWithType: HtmlElementEventArgs.AltKeyPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the ALT key was pressed when this event occurred."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_7_1.vb)]"
  syntax:
    content: public bool AltKeyPressed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> is the ALT key was pressed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent
  id: BubbleEvent
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: BubbleEvent
  nameWithType: HtmlElementEventArgs.BubbleEvent
  fullName: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model."
  remarks: "Not all events in the Document Object Model bubble. All of the events exposed by the <xref:System.Windows.Forms.HtmlDocument> managed wrapper bubble with the exception of <xref:System.Windows.Forms.HtmlDocument.Stop>. For <xref:System.Windows.Forms.HtmlElement>, the `Error` and `Load` events do not bubble. Setting `BubbleEvent` to `true` during any of these events will have no effect."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_26_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_26_1.vb)]"
  syntax:
    content: public bool BubbleEvent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the event bubbles; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if it does not."
  overload: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition
  id: ClientMousePosition
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: ClientMousePosition
  nameWithType: HtmlElementEventArgs.ClientMousePosition
  fullName: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the position of the mouse cursor in the document&quot;s client area."
  remarks: '`ClientMousePosition` gives the mouse position of the cursor relative to the upper-left corner of the document. Use <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> if you need the mouse coordinates relative to the element that raised the event.'
  example:
  - "The following HTML file demonstrates relative positioning of a `TABLE` inside of a `BODY` tag.  \n  \n```  \n<HTML>  \n  \n<BODY>  \n  \n    <TABLE style=\"position:relative;top:100px;left:100px;\">  \n        <TR>  \n            <TD>Text</TD>  \n            <TD>More text</TD>  \n        </TR>  \n    </TABLE>  \n  \n</BODY>  \n  \n</HTML>  \n  \n```  \n  \n The following code example displays the difference between <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, ClientMousePosition, and <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> when the user clicks on an element of the `TABLE`. ClientMousePosition will display coordinates relative to the upper-left corner of the document's client area. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> will display coordinates relative to the upper-left corner of the `TABLE`. If you click on one of the lines of text, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> will display coordinates relative to that `TD` element.  \n  \n This example requires that you have configured `Document_MouseDown` as a handler for the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event on <xref:System.Windows.Forms.HtmlDocument>.  \n  \n [!code-cs[System.Windows.Forms.HtmlElementEventArgs#2](~/add/codesnippet/csharp/HtmlElementEventArgsProject/Form1.cs#2)]\n [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/add/codesnippet/visualbasic/HtmlElementEventArgsProjectVB/Form1.vb#2)]"
  syntax:
    content: public System.Drawing.Point ClientMousePosition { get; }
    return:
      type: System.Drawing.Point
      description: "The current position of the mouse cursor."
  overload: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed
  id: CtrlKeyPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: CtrlKeyPressed
  nameWithType: HtmlElementEventArgs.CtrlKeyPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the CTRL key was pressed when this event occurred."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_42_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_42_1.vb)]"
  syntax:
    content: public bool CtrlKeyPressed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the CTRL key was pressed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.EventType
  id: EventType
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: EventType
  nameWithType: HtmlElementEventArgs.EventType
  fullName: System.Windows.Forms.HtmlElementEventArgs.EventType
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the name of the event that was raised."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_31_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_31_1.vb)]"
  syntax:
    content: public string EventType { get; }
    return:
      type: System.String
      description: "The name of the event."
  overload: System.Windows.Forms.HtmlElementEventArgs.EventType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.FromElement
  id: FromElement
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: FromElement
  nameWithType: HtmlElementEventArgs.FromElement
  fullName: System.Windows.Forms.HtmlElementEventArgs.FromElement
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref href=&quot;System.Windows.Forms.HtmlElement&quot;></xref> the mouse pointer is moving away from."
  remarks: "FromElement will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>."
  syntax:
    content: public System.Windows.Forms.HtmlElement FromElement { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "The <xref href=&quot;System.Windows.Forms.HtmlElement&quot;></xref> the mouse pointer is moving away from."
  overload: System.Windows.Forms.HtmlElementEventArgs.FromElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode
  id: KeyPressedCode
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: KeyPressedCode
  nameWithType: HtmlElementEventArgs.KeyPressedCode
  fullName: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the ASCII value of the keyboard character typed in a <xref href=&quot;System.Windows.Forms.HtmlElement.KeyPress&quot;></xref>, <xref href=&quot;System.Windows.Forms.HtmlElement.KeyDown&quot;></xref>, or <xref href=&quot;System.Windows.Forms.HtmlElement.KeyUp&quot;></xref> event."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_28_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_28_1.vb)]"
  syntax:
    content: public int KeyPressedCode { get; }
    return:
      type: System.Int32
      description: "The ASCII value of the composed keyboard entry."
  overload: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed
  id: MouseButtonsPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: MouseButtonsPressed
  nameWithType: HtmlElementEventArgs.MouseButtonsPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the mouse button that was clicked during a <xref href=&quot;System.Windows.Forms.HtmlElement.MouseDown&quot;></xref> or <xref href=&quot;System.Windows.Forms.HtmlElement.MouseUp&quot;></xref> event."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_4_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_4_1.vb)]"
  syntax:
    content: public System.Windows.Forms.MouseButtons MouseButtonsPressed { get; }
    return:
      type: System.Windows.Forms.MouseButtons
      description: "The mouse button that was clicked."
  overload: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.MousePosition
  id: MousePosition
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: MousePosition
  nameWithType: HtmlElementEventArgs.MousePosition
  fullName: System.Windows.Forms.HtmlElementEventArgs.MousePosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the position of the mouse cursor relative to a relatively positioned parent element."
  remarks: "Relative positioning is used in HTML to place an element on a page in relation to its parent.       If an element is relatively positioned, this property will return the same result as <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>."
  example:
  - "The following HTML file demonstrates relative positioning of a `TABLE` inside of a `BODY` tag.  \n  \n```  \n<HTML>  \n  \n<BODY>  \n  \n    <TABLE style=\"position:relative;top:100px;left:100px;\">  \n        <TR>  \n            <TD>Text/TD>  \n            <TD>More text</TD>  \n        </TR>  \n    </TABLE>  \n  \n</BODY>  \n  \n</HTML>  \n  \n```  \n  \n The following code example displays the difference between MousePosition, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, and <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> when the user clicks on an element of the `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> will display coordinates relative to the upper-left corner of the document's client area. MousePosition will display coordinates relative to the upper-left corner of the `TABLE`. If you click on one of the lines of text, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> will display coordinates relative to that `TD` element.  \n  \n This example requires that you have configured `Document_MouseDown` as a handler for the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event on <xref:System.Windows.Forms.HtmlDocument>.  \n  \n [!code-cs[System.Windows.Forms.HtmlElementEventArgs#2](~/add/codesnippet/csharp/HtmlElementEventArgsProject/Form1.cs#2)]\n [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/add/codesnippet/visualbasic/HtmlElementEventArgsProjectVB/Form1.vb#2)]"
  syntax:
    content: public System.Drawing.Point MousePosition { get; }
    return:
      type: System.Drawing.Point
      description: "The position of the mouse cursor relative to the upper-left corner of the parent of the element that raised the event, if the parent element is relatively positioned."
  overload: System.Windows.Forms.HtmlElementEventArgs.MousePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition
  id: OffsetMousePosition
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: OffsetMousePosition
  nameWithType: HtmlElementEventArgs.OffsetMousePosition
  fullName: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the position of the mouse cursor relative to the element that raises the event."
  remarks: ''
  example:
  - "The following HTML file demonstrates relative positioning of a `TABLE` inside of a `BODY` tag.  \n  \n```  \n<HTML>  \n  \n<BODY>  \n  \n    <TABLE style=\"position:relative;top:100px;left:100px;\">  \n        <TR>  \n            <TD>Text</TD>  \n            <TD>More text</TD>  \n        </TR>  \n    </TABLE>  \n  \n</BODY>  \n  \n</HTML>  \n  \n```  \n  \n The following code example displays the difference between <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> and OffsetMousePosition when the user clicks on an element of the `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> will display coordinates relative to the upper-left corner of the document's client area. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> will display coordinates relative to the upper-left corner of the `TABLE`. If you click on one of the lines of text, OffsetMousePosition will display coordinates relative to that `TD` element.  \n  \n This example requires that you have configured `Document_MouseDown` as a handler for the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event on <xref:System.Windows.Forms.HtmlDocument>.  \n  \n [!code-cs[System.Windows.Forms.HtmlElementEventArgs#2](~/add/codesnippet/csharp/HtmlElementEventArgsProject/Form1.cs#2)]\n [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/add/codesnippet/visualbasic/HtmlElementEventArgsProjectVB/Form1.vb#2)]"
  syntax:
    content: public System.Drawing.Point OffsetMousePosition { get; }
    return:
      type: System.Drawing.Point
      description: "The mouse position relative to the element that raises the event."
  overload: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.ReturnValue
  id: ReturnValue
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: ReturnValue
  nameWithType: HtmlElementEventArgs.ReturnValue
  fullName: System.Windows.Forms.HtmlElementEventArgs.ReturnValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the return value of the handled event."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_27_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_27_1.vb)]"
  syntax:
    content: public bool ReturnValue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the event has been handled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.HtmlElementEventArgs.ReturnValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed
  id: ShiftKeyPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: ShiftKeyPressed
  nameWithType: HtmlElementEventArgs.ShiftKeyPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Indicates whether the SHIFT key was pressed when this event occurred."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_11_1.vb)]"
  syntax:
    content: public bool ShiftKeyPressed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the SHIFT key was pressed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElementEventArgs.ToElement
  id: ToElement
  parent: System.Windows.Forms.HtmlElementEventArgs
  langs:
  - csharp
  name: ToElement
  nameWithType: HtmlElementEventArgs.ToElement
  fullName: System.Windows.Forms.HtmlElementEventArgs.ToElement
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref href=&quot;System.Windows.Forms.HtmlElement&quot;></xref> toward which the user is moving the mouse pointer."
  remarks: "ToElement will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#422](~/add/codesnippet/csharp/p-system.windows.forms.h_34_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#422](~/add/codesnippet/visualbasic/p-system.windows.forms.h_34_1.vb)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement ToElement { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "The element toward which the mouse pointer is moving."
  overload: System.Windows.Forms.HtmlElementEventArgs.ToElement*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: AltKeyPressed
  nameWithType: HtmlElementEventArgs.AltKeyPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: BubbleEvent
  nameWithType: HtmlElementEventArgs.BubbleEvent
  fullName: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent
- uid: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ClientMousePosition
  nameWithType: HtmlElementEventArgs.ClientMousePosition
  fullName: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: CtrlKeyPressed
  nameWithType: HtmlElementEventArgs.CtrlKeyPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed
- uid: System.Windows.Forms.HtmlElementEventArgs.EventType
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: EventType
  nameWithType: HtmlElementEventArgs.EventType
  fullName: System.Windows.Forms.HtmlElementEventArgs.EventType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.HtmlElementEventArgs.FromElement
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: FromElement
  nameWithType: HtmlElementEventArgs.FromElement
  fullName: System.Windows.Forms.HtmlElementEventArgs.FromElement
- uid: System.Windows.Forms.HtmlElement
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
- uid: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: KeyPressedCode
  nameWithType: HtmlElementEventArgs.KeyPressedCode
  fullName: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: MouseButtonsPressed
  nameWithType: HtmlElementEventArgs.MouseButtonsPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed
- uid: System.Windows.Forms.MouseButtons
  parent: System.Windows.Forms
  isExternal: false
  name: MouseButtons
  nameWithType: MouseButtons
  fullName: System.Windows.Forms.MouseButtons
- uid: System.Windows.Forms.HtmlElementEventArgs.MousePosition
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: MousePosition
  nameWithType: HtmlElementEventArgs.MousePosition
  fullName: System.Windows.Forms.HtmlElementEventArgs.MousePosition
- uid: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: OffsetMousePosition
  nameWithType: HtmlElementEventArgs.OffsetMousePosition
  fullName: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition
- uid: System.Windows.Forms.HtmlElementEventArgs.ReturnValue
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ReturnValue
  nameWithType: HtmlElementEventArgs.ReturnValue
  fullName: System.Windows.Forms.HtmlElementEventArgs.ReturnValue
- uid: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ShiftKeyPressed
  nameWithType: HtmlElementEventArgs.ShiftKeyPressed
  fullName: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed
- uid: System.Windows.Forms.HtmlElementEventArgs.ToElement
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ToElement
  nameWithType: HtmlElementEventArgs.ToElement
  fullName: System.Windows.Forms.HtmlElementEventArgs.ToElement
- uid: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: AltKeyPressed
  nameWithType: HtmlElementEventArgs.AltKeyPressed
- uid: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: BubbleEvent
  nameWithType: HtmlElementEventArgs.BubbleEvent
- uid: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ClientMousePosition
  nameWithType: HtmlElementEventArgs.ClientMousePosition
- uid: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: CtrlKeyPressed
  nameWithType: HtmlElementEventArgs.CtrlKeyPressed
- uid: System.Windows.Forms.HtmlElementEventArgs.EventType*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: EventType
  nameWithType: HtmlElementEventArgs.EventType
- uid: System.Windows.Forms.HtmlElementEventArgs.FromElement*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: FromElement
  nameWithType: HtmlElementEventArgs.FromElement
- uid: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: KeyPressedCode
  nameWithType: HtmlElementEventArgs.KeyPressedCode
- uid: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: MouseButtonsPressed
  nameWithType: HtmlElementEventArgs.MouseButtonsPressed
- uid: System.Windows.Forms.HtmlElementEventArgs.MousePosition*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: MousePosition
  nameWithType: HtmlElementEventArgs.MousePosition
- uid: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: OffsetMousePosition
  nameWithType: HtmlElementEventArgs.OffsetMousePosition
- uid: System.Windows.Forms.HtmlElementEventArgs.ReturnValue*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ReturnValue
  nameWithType: HtmlElementEventArgs.ReturnValue
- uid: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ShiftKeyPressed
  nameWithType: HtmlElementEventArgs.ShiftKeyPressed
- uid: System.Windows.Forms.HtmlElementEventArgs.ToElement*
  parent: System.Windows.Forms.HtmlElementEventArgs
  isExternal: false
  name: ToElement
  nameWithType: HtmlElementEventArgs.ToElement
