### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Table`1
  id: Table`1
  children:
  - System.Data.Linq.Table`1.Attach(`0)
  - System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  - System.Data.Linq.Table`1.Attach(`0,`0)
  - System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  - System.Data.Linq.Table`1.Context
  - System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  - System.Data.Linq.Table`1.GetEnumerator
  - System.Data.Linq.Table`1.GetModifiedMembers(`0)
  - System.Data.Linq.Table`1.GetNewBindingList
  - System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  - System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.Linq.Table`1.InsertOnSubmit(`0)
  - System.Data.Linq.Table`1.IsReadOnly
  - System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  - System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  - System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  - System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  - System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  - System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  - System.Data.Linq.Table`1.ToString
  langs:
  - csharp
  name: Table<TEntity>
  nameWithType: Table<TEntity>
  fullName: System.Data.Linq.Table<TEntity>
  type: Class
  syntax:
    content: 'public sealed class Table<TEntity> : System.Collections.Generic.IEnumerable<TEntity>, System.ComponentModel.IListSource, System.Data.Linq.ITable, System.Data.Linq.ITable<TEntity>, System.Linq.IQueryable<TEntity>, System.Linq.IQueryProvider where TEntity : class'
    typeParameters:
    - id: TEntity
      description: "To be added."
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.ComponentModel.IListSource
  - System.Data.Linq.ITable
  - System.Data.Linq.ITable<TEntity>
  - System.Linq.IQueryable<TEntity>
  - System.Linq.IQueryProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.Attach(`0)
  id: Attach(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Attach(TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Attach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
  overload: System.Data.Linq.Table`1.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  id: Attach(`0,System.Boolean)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Attach(TEntity,Boolean)
  nameWithType: Table<TEntity>.Attach(TEntity,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Attach (TEntity entity, bool asModified);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
    - id: asModified
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Linq.Table`1.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.Attach(`0,`0)
  id: Attach(`0,`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Attach(TEntity,TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity,TEntity)
  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Attach (TEntity entity, TEntity original);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
    - id: original
      type: TEntity
      description: "To be added."
  overload: System.Data.Linq.Table`1.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  id: AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: AttachAll(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)
  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public void AttachAll<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: "To be added."
  overload: System.Data.Linq.Table`1.AttachAll<TSubEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  id: AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: AttachAll(IEnumerable<TSubEntity>,Boolean)
  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public void AttachAll<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities, bool asModified) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: "To be added."
    - id: asModified
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Linq.Table`1.AttachAll<TSubEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.Context
  id: Context
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: Context
  nameWithType: Table<TEntity>.Context
  fullName: System.Data.Linq.Table<TEntity>.Context
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Data.Linq.DataContext Context { get; }
    return:
      type: System.Data.Linq.DataContext
      description: "To be added."
  overload: System.Data.Linq.Table`1.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  id: DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: DeleteAllOnSubmit(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)
  fullName: System.Data.Linq.Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public void DeleteAllOnSubmit<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: "To be added."
  overload: System.Data.Linq.Table`1.DeleteAllOnSubmit<TSubEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  id: DeleteOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: DeleteOnSubmit(TEntity)
  nameWithType: Table<TEntity>.DeleteOnSubmit(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.DeleteOnSubmit(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void DeleteOnSubmit (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
  overload: System.Data.Linq.Table`1.DeleteOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Table<TEntity>.GetEnumerator()
  fullName: System.Data.Linq.Table<TEntity>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: "To be added."
  overload: System.Data.Linq.Table`1.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.GetModifiedMembers(`0)
  id: GetModifiedMembers(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetModifiedMembers(TEntity)
  nameWithType: Table<TEntity>.GetModifiedMembers(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.GetModifiedMembers(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Data.Linq.ModifiedMemberInfo[] GetModifiedMembers (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: "To be added."
  overload: System.Data.Linq.Table`1.GetModifiedMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.GetNewBindingList
  id: GetNewBindingList
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetNewBindingList()
  nameWithType: Table<TEntity>.GetNewBindingList()
  fullName: System.Data.Linq.Table<TEntity>.GetNewBindingList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.ComponentModel.IBindingList GetNewBindingList ();
    parameters: []
    return:
      type: System.ComponentModel.IBindingList
      description: "To be added."
  overload: System.Data.Linq.Table`1.GetNewBindingList*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  id: GetOriginalEntityState(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: GetOriginalEntityState(TEntity)
  nameWithType: Table<TEntity>.GetOriginalEntityState(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.GetOriginalEntityState(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public TEntity GetOriginalEntityState (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
    return:
      type: TEntity
      description: "To be added."
  overload: System.Data.Linq.Table`1.GetOriginalEntityState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  id: InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: InsertAllOnSubmit(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)
  fullName: System.Data.Linq.Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: 'public void InsertAllOnSubmit<TSubEntity> (System.Collections.Generic.IEnumerable<TSubEntity> entities) where TSubEntity : TEntity;'
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TSubEntity}
      description: "To be added."
  overload: System.Data.Linq.Table`1.InsertAllOnSubmit<TSubEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.InsertOnSubmit(`0)
  id: InsertOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: InsertOnSubmit(TEntity)
  nameWithType: Table<TEntity>.InsertOnSubmit(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.InsertOnSubmit(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void InsertOnSubmit (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
  overload: System.Data.Linq.Table`1.InsertOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Table<TEntity>.IsReadOnly
  fullName: System.Data.Linq.Table<TEntity>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Linq.Table`1.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable()
  fullName: System.Data.Linq.Table<TEntity>.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.Generic.IEnumerator<TEntity> IEnumerable<TEntity>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable<TEntity>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Linq.Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  id: System#Data#Linq#ITable#Attach(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.Attach(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  id: System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.Attach(Object,Boolean)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.Attach (object entity, bool asModified);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
    - id: asModified
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  id: System#Data#Linq#ITable#Attach(System.Object,System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.Attach(Object,Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.Attach (object entity, object original);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
    - id: original
      type: System.Object
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  id: System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.AttachAll(IEnumerable)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.AttachAll (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  id: System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.AttachAll (System.Collections.IEnumerable entities, bool asModified);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "To be added."
    - id: asModified
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  id: System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.DeleteAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  id: System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.DeleteOnSubmit(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.DeleteOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  id: System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.GetModifiedMembers(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Data.Linq.ModifiedMemberInfo[] ITable.GetModifiedMembers (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
    return:
      type: System.Data.Linq.ModifiedMemberInfo[]
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  id: System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.GetOriginalEntityState(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object ITable.GetOriginalEntityState (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  id: System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.InsertAllOnSubmit (System.Collections.IEnumerable entities);
    parameters:
    - id: entities
      type: System.Collections.IEnumerable
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  id: System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Data.Linq.ITable.InsertOnSubmit(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ITable.InsertOnSubmit (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  id: System#Linq#IQueryable#ElementType
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryable.ElementType
  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.ElementType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: Type System.Linq.IQueryable.ElementType { get; }
    return:
      type: System.Type
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  id: System#Linq#IQueryable#Expression
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryable.Expression
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  id: System#Linq#IQueryable#Provider
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryable.Provider
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Provider
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }
    return:
      type: System.Linq.IQueryProvider
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryProvider.CreateQuery(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Linq.IQueryable IQueryProvider.CreateQuery (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "To be added."
    return:
      type: System.Linq.IQueryable
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryProvider.CreateQuery(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Linq.IQueryable<TResult> IQueryProvider.CreateQuery<TResult> (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "To be added."
    return:
      type: System.Linq.IQueryable{TResult}
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryProvider.Execute(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object IQueryProvider.Execute (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  id: System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: System.Linq.IQueryProvider.Execute(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: TResult IQueryProvider.Execute<TResult> (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "To be added."
    return:
      type: TResult
      description: "To be added."
  overload: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Table`1.ToString
  id: ToString
  parent: System.Data.Linq.Table`1
  langs:
  - csharp
  name: ToString()
  nameWithType: Table<TEntity>.ToString()
  fullName: System.Data.Linq.Table<TEntity>.ToString()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.Linq.Table`1.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Table`1.Attach(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach(TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.Table`1.Attach(`0,System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach(TEntity,Boolean)
  nameWithType: Table<TEntity>.Attach(TEntity,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Table`1.Attach(`0,`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach(TEntity,TEntity)
  nameWithType: Table<TEntity>.Attach(TEntity,TEntity)
  fullName: System.Data.Linq.Table<TEntity>.Attach(TEntity,TEntity)
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: AttachAll(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)
  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>)
- uid: System.Collections.Generic.IEnumerable{TSubEntity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TSubEntity>
  nameWithType: IEnumerable<TSubEntity>
  fullName: System.Collections.Generic.IEnumerable<TSubEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<TSubEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSubEntity
    name: TSubEntity
    nameWithType: TSubEntity
    fullName: TSubEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: AttachAll(IEnumerable<TSubEntity>,Boolean)
  nameWithType: Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.AttachAll(IEnumerable<TSubEntity>,Boolean)
- uid: System.Data.Linq.Table`1.Context
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Context
  nameWithType: Table<TEntity>.Context
  fullName: System.Data.Linq.Table<TEntity>.Context
- uid: System.Data.Linq.DataContext
  parent: System.Data.Linq
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: System.Data.Linq.DataContext
- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteAllOnSubmit(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)
  fullName: System.Data.Linq.Table<TEntity>.DeleteAllOnSubmit(IEnumerable<TSubEntity>)
- uid: System.Data.Linq.Table`1.DeleteOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteOnSubmit(TEntity)
  nameWithType: Table<TEntity>.DeleteOnSubmit(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.DeleteOnSubmit(TEntity)
- uid: System.Data.Linq.Table`1.GetEnumerator
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: Table<TEntity>.GetEnumerator()
  fullName: System.Data.Linq.Table<TEntity>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{TEntity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<TEntity>
  nameWithType: IEnumerator<TEntity>
  fullName: System.Collections.Generic.IEnumerator<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Table`1.GetModifiedMembers(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetModifiedMembers(TEntity)
  nameWithType: Table<TEntity>.GetModifiedMembers(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.GetModifiedMembers(TEntity)
- uid: System.Data.Linq.ModifiedMemberInfo[]
  parent: System.Data.Linq
  isExternal: false
  name: ModifiedMemberInfo
  nameWithType: ModifiedMemberInfo
  fullName: System.Data.Linq.ModifiedMemberInfo[]
  spec.csharp:
  - uid: System.Data.Linq.ModifiedMemberInfo
    name: ModifiedMemberInfo
    nameWithType: ModifiedMemberInfo
    fullName: ModifiedMemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Linq.Table`1.GetNewBindingList
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetNewBindingList()
  nameWithType: Table<TEntity>.GetNewBindingList()
  fullName: System.Data.Linq.Table<TEntity>.GetNewBindingList()
- uid: System.ComponentModel.IBindingList
  parent: System.ComponentModel
  isExternal: false
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
- uid: System.Data.Linq.Table`1.GetOriginalEntityState(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetOriginalEntityState(TEntity)
  nameWithType: Table<TEntity>.GetOriginalEntityState(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.GetOriginalEntityState(TEntity)
- uid: System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertAllOnSubmit(IEnumerable<TSubEntity>)
  nameWithType: Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)
  fullName: System.Data.Linq.Table<TEntity>.InsertAllOnSubmit(IEnumerable<TSubEntity>)
- uid: System.Data.Linq.Table`1.InsertOnSubmit(`0)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertOnSubmit(TEntity)
  nameWithType: Table<TEntity>.InsertOnSubmit(TEntity)
  fullName: System.Data.Linq.Table<TEntity>.InsertOnSubmit(TEntity)
- uid: System.Data.Linq.Table`1.IsReadOnly
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IsReadOnly
  nameWithType: Table<TEntity>.IsReadOnly
  fullName: System.Data.Linq.Table<TEntity>.IsReadOnly
- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable()
  fullName: System.Data.Linq.Table<TEntity>.System.Collections.Generic.IEnumerable()
- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Linq.Table<TEntity>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Linq.Table<TEntity>.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.Attach(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.Attach(Object,Boolean)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Boolean)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.Attach(Object,Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.Attach(Object,Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.AttachAll(IEnumerable)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.AttachAll(IEnumerable,Boolean)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.DeleteOnSubmit(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.GetModifiedMembers(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.GetOriginalEntityState(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState(Object)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable)
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.InsertOnSubmit(Object)
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)
  fullName: System.Data.Linq.Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit(Object)
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.ElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryable.Provider
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.CreateQuery(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.CreateQuery(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.CreateQuery(Expression)
- uid: System.Linq.IQueryable{TResult}
  parent: System.Linq
  isExternal: true
  name: IQueryable<TResult>
  nameWithType: IQueryable<TResult>
  fullName: System.Linq.IQueryable<TResult>
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: IQueryable<TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.Execute(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.Execute(Expression)
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
  fullName: System.Data.Linq.Table<TEntity>.System.Linq.IQueryProvider.Execute(Expression)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Data.Linq.Table`1.ToString
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ToString()
  nameWithType: Table<TEntity>.ToString()
  fullName: System.Data.Linq.Table<TEntity>.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Table`1.Attach*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Attach
  nameWithType: Table<TEntity>.Attach
- uid: System.Data.Linq.Table`1.AttachAll<TSubEntity>*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: AttachAll<TSubEntity>
  nameWithType: Table<TEntity>.AttachAll<TSubEntity>
- uid: System.Data.Linq.Table`1.Context*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: Context
  nameWithType: Table<TEntity>.Context
- uid: System.Data.Linq.Table`1.DeleteAllOnSubmit<TSubEntity>*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteAllOnSubmit<TSubEntity>
  nameWithType: Table<TEntity>.DeleteAllOnSubmit<TSubEntity>
- uid: System.Data.Linq.Table`1.DeleteOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: DeleteOnSubmit
  nameWithType: Table<TEntity>.DeleteOnSubmit
- uid: System.Data.Linq.Table`1.GetEnumerator*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetEnumerator
  nameWithType: Table<TEntity>.GetEnumerator
- uid: System.Data.Linq.Table`1.GetModifiedMembers*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetModifiedMembers
  nameWithType: Table<TEntity>.GetModifiedMembers
- uid: System.Data.Linq.Table`1.GetNewBindingList*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetNewBindingList
  nameWithType: Table<TEntity>.GetNewBindingList
- uid: System.Data.Linq.Table`1.GetOriginalEntityState*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: GetOriginalEntityState
  nameWithType: Table<TEntity>.GetOriginalEntityState
- uid: System.Data.Linq.Table`1.InsertAllOnSubmit<TSubEntity>*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertAllOnSubmit<TSubEntity>
  nameWithType: Table<TEntity>.InsertAllOnSubmit<TSubEntity>
- uid: System.Data.Linq.Table`1.InsertOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: InsertOnSubmit
  nameWithType: Table<TEntity>.InsertOnSubmit
- uid: System.Data.Linq.Table`1.IsReadOnly*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: IsReadOnly
  nameWithType: Table<TEntity>.IsReadOnly
- uid: System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable<TEntity>#GetEnumerator*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
  nameWithType: Table<TEntity>.System.Collections.Generic.IEnumerable<TEntity>.GetEnumerator
- uid: System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Table<TEntity>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: Table<TEntity>.System.ComponentModel.IListSource.GetList
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.Attach
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.Attach
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.AttachAll
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.AttachAll
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.DeleteAllOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteAllOnSubmit
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.DeleteOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.DeleteOnSubmit
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.GetModifiedMembers
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetModifiedMembers
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.GetOriginalEntityState
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.GetOriginalEntityState
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.InsertAllOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertAllOnSubmit
- uid: System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Data.Linq.ITable.InsertOnSubmit
  nameWithType: Table<TEntity>.System.Data.Linq.ITable.InsertOnSubmit
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.ElementType
  nameWithType: Table<TEntity>.System.Linq.IQueryable.ElementType
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Expression*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.Expression
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Expression
- uid: System.Data.Linq.Table`1.System#Linq#IQueryable#Provider*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryable.Provider
  nameWithType: Table<TEntity>.System.Linq.IQueryable.Provider
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.CreateQuery
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery<TResult>*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.CreateQuery<TResult>
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.CreateQuery<TResult>
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.Execute
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute
- uid: System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute<TResult>*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: System.Linq.IQueryProvider.Execute<TResult>
  nameWithType: Table<TEntity>.System.Linq.IQueryProvider.Execute<TResult>
- uid: System.Data.Linq.Table`1.ToString*
  parent: System.Data.Linq.Table`1
  isExternal: false
  name: ToString
  nameWithType: Table<TEntity>.ToString
