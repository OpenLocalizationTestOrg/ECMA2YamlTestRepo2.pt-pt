### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  id: ManagedToNativeComInteropStubAttribute
  children:
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  langs:
  - csharp
  name: ManagedToNativeComInteropStubAttribute
  nameWithType: ManagedToNativeComInteropStubAttribute
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  type: Class
  summary: "Fornece suporte para personalização de utilizador de interoperabilidade stubs em cenários de interoperabilidade gerido para COM."
  remarks: "Este atributo permite aos programadores de interoperabilidade que tenham conhecimentos sobre empacotamento de referências e os trabalhos internos de interoperabilidade chamadas para fazer o seguinte:-tirar partido de stubs interoperabilidade personalizados no momento da compilação em vez de tempo de execução.      -Debug personalizado interop stubs.      -Fornece capacidades de empacotamento de referências dentro de um stub que não fornece o tempo de execução.      -Fornece específicas do utilizador capacidades de emissão de método.       Aplique o atributo num método numa interface para especificar um método stub correspondente para a interoperabilidade COM geridos para nativo.       Se este atributo é encontrado durante o tempo de execução, o language runtime não gerar dinamicamente um stub interop. Em vez disso, invoca o stub personalizada que foi criada no momento da compilação.       O atributo ManagedToNativeComInteropStubAttribute tem as seguintes características:-o atributo pode ser utilizado apenas em métodos de interfaces que estão marcados `[ComImport]`. Se o atributo é aplicado a tipos de interface não, é ignorada pelo runtime.      -O atributo pode ser utilizado apenas uma vez no mesmo método numa interface. Se for utilizada mais do que uma vez, o compilador gera um erro de atributo duplicado.      -O atributo não é herdável a partir de uma interface de base. Interfaces derivadas explicitamente tem de atribuir o atributo.      -A assemblagem que contém o método attributed também tem de conter o stub personalizado.       Métodos de stub sobrecarregado são válidos. Embora especificar apenas o tipo e o nome do método stub, o tempo de execução irá detetar o stub correspondente. Fazê-lo ao examinar todos os argumentos no método de interface e, em seguida, efetuar assinatura completa correspondente utilizando explícita `this` ponteiro.       Também é possível que vários métodos de uma interface para partilhar o mesmo método stub; No entanto, deve ter cuidado quando utilizar os stubs partilhados.      > [!NOTE] > Métodos de stub têm de ser estáticos.       Pode informar o tempo de execução para utilizar um stub interoperabilidade personalizado no momento da compilação em vez de tempo de execução com o seguinte código c#: ```   [ComImport]   interface IMyInterface   {       [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),                 &quot;ForwardTestStub&quot;)]       void GetString (string arg);   }   ``` pode, em seguida, utilizar o seguinte código para declarar o método stub correspondente:```   class TestStubClass   {       internal static void ForwardTestStub(IMyInterface thisObject,                string arg) {…}   }   ```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ManagedToNativeComInteropStubAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  langs:
  - csharp
  name: ManagedToNativeComInteropStubAttribute(Type,String)
  nameWithType: ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute&quot;> </xref> classe com o nome de tipo de método de classe especificada."
  syntax:
    content: public ManagedToNativeComInteropStubAttribute (Type classType, string methodName);
    parameters:
    - id: classType
      type: System.Type
      description: "A classe que contém o método stub necessária."
    - id: methodName
      type: System.String
      description: "O nome do método stub."
  overload: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>methodName</code>Não é possível encontrar.       - ou - o método não estático ou não genérico.       - ou - lista de parâmetros do método não corresponde à lista de parâmetros esperado para o stub."
  - type: System.MethodAccessException
    commentId: T:System.MethodAccessException
    description: "A interface que contém o método de interoperabilidade gerido não tem acesso ao método stub, porque o método stub tem acessibilidade privada ou protegida ou devido a um problema de segurança."
  platform:
  - net462
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  id: ClassType
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  langs:
  - csharp
  name: ClassType
  nameWithType: ManagedToNativeComInteropStubAttribute.ClassType
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém a classe que contém o método stub necessária."
  syntax:
    content: public Type ClassType { get; }
    return:
      type: System.Type
      description: "A classe que contém o stub interoperabilidade personalizado."
  overload: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  id: MethodName
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  langs:
  - csharp
  name: MethodName
  nameWithType: ManagedToNativeComInteropStubAttribute.MethodName
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém o nome do método stub."
  syntax:
    content: public string MethodName { get; }
    return:
      type: System.String
      description: "O nome de um stub interoperabilidade personalizado."
  overload: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MethodAccessException
  isExternal: true
  name: System.MethodAccessException
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ManagedToNativeComInteropStubAttribute(Type,String)
  nameWithType: ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ClassType
  nameWithType: ManagedToNativeComInteropStubAttribute.ClassType
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: MethodName
  nameWithType: ManagedToNativeComInteropStubAttribute.MethodName
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor*
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ManagedToNativeComInteropStubAttribute
  nameWithType: ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType*
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ClassType
  nameWithType: ManagedToNativeComInteropStubAttribute.ClassType
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName*
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: MethodName
  nameWithType: ManagedToNativeComInteropStubAttribute.MethodName
