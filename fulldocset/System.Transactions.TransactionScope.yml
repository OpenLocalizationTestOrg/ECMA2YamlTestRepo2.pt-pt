### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionScope
  id: TransactionScope
  children:
  - System.Transactions.TransactionScope.#ctor
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  - System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  - System.Transactions.TransactionScope.Complete
  - System.Transactions.TransactionScope.Dispose
  langs:
  - csharp
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Transactions.TransactionScope
  type: Class
  summary: "Faz com que um bloco de código transacional. Esta classe não pode ser herdada."
  remarks: "O <xref:System.Transactions>infraestrutura fornece tanto um explícito modelo de programação com base no <xref:System.Transactions.Transaction>classe, bem como um modelo de programação implícito utilizando a classe de TransactionScope, na qual as transações são geridas automaticamente pela infraestrutura.</xref:System.Transactions.Transaction> </xref:System.Transactions>      > [!IMPORTANT] > É recomendado que crie transações implícitas utilizando a classe de TransactionScope, para que o contexto de transação de ambiente é gerido automaticamente por si. Deve utilizar também o TransactionScope e <xref:System.Transactions.DependentTransaction>classe para aplicações que requerem a utilização da mesma transação em várias chamadas de função ou várias chamadas de thread.</xref:System.Transactions.DependentTransaction> Para obter mais informações sobre este modelo, consulte o [implementar uma implícita transação utilizando o âmbito da transação](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) tópico. Para obter mais informações sobre como escrever uma aplicação transacional, consulte [ao escrever A aplicações](http://msdn.microsoft.com/en-us/4a7cc4d1-0891-4605-941f-a933b9ce5bc8).       Após a instanciar um TransactionScope pelo `new` instrução, o Gestor de transações determina qual a transação participar no. Depois de determinado, o âmbito sempre em que participou nesse transação. A decisão baseia-se em dois fatores: Se estiver presente uma transação de ambiente e o valor do `TransactionScopeOption` parâmetro no construtor.  A transação ambient é a transação que executa o código no. Pode obter uma referência para a transação ambient chamando estática <xref:System.Transactions.Transaction.Current%2A>propriedade da <xref:System.Transactions.Transaction>classe.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.Current%2A> Para obter mais informações sobre como este parâmetro é utilizado, consulte a secção &quot;Gestão de fluxo de transações&quot; o [implementar uma implícita transação utilizando o âmbito da transação](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) tópico.       Se nenhum exceção ocorrer dentro do âmbito de transação (ou seja, entre a inicialização do TransactionScope objeto e chamar do respetivo <xref:System.Transactions.TransactionScope.Dispose%2A>método), e a transação em que o âmbito em que participou está autorizada a continuar.</xref:System.Transactions.TransactionScope.Dispose%2A> Se ocorrer uma excepção no âmbito de transação, a transação no qual participa será revertida.       Ao concluir a sua aplicação todo trabalho pretende efetuar numa transação, deve chamar o <xref:System.Transactions.TransactionScope.Complete%2A>método apenas uma vez para informar esse gestor de transações que é aceitável para consolidar a transação.</xref:System.Transactions.TransactionScope.Complete%2A> Falha ao chamar este método interrompe a transação.       Uma chamada para o <xref:System.Transactions.TransactionScope.Dispose%2A>método marca o fim do âmbito de transação.</xref:System.Transactions.TransactionScope.Dispose%2A> As exceções que ocorrer depois de chamar este método não podem afetar a transação.       Se modificar o valor de <xref:System.Transactions.Transaction.Current%2A>dentro de um âmbito, é emitida uma exceção quando <xref:System.Transactions.TransactionScope.Dispose%2A>é chamado.</xref:System.Transactions.TransactionScope.Dispose%2A> </xref:System.Transactions.Transaction.Current%2A> No entanto, no final do âmbito, o valor anterior é restaurado. Além disso, se chamar <xref:System.Transactions.TransactionScope.Dispose%2A>no <xref:System.Transactions.Transaction.Current%2A>dentro de um âmbito de transação que criou a transação, a transação interrompe no final do âmbito.</xref:System.Transactions.Transaction.Current%2A> </xref:System.Transactions.TransactionScope.Dispose%2A>"
  example:
  - "The following example demonstrates how to use the TransactionScope class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/t-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/t-system.transactions.tr_0_1.cs)]"
  syntax:
    content: 'public sealed class TransactionScope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor
  id: '#ctor'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe."
  remarks: "Este construtor cria um novo âmbito de transação com a opção de âmbito de transação igual a <xref:System.Transactions.TransactionScopeOption>.</xref:System.Transactions.TransactionScopeOption> Isto significa que uma transação é o novo âmbito e a transação ambient utilizada se já existir. Caso contrário, cria uma nova transação antes de introduzir o âmbito."
  syntax:
    content: public TransactionScope ();
    parameters: []
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe e define a transação especificada como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "A transação ser definida como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com a opção de fluxo assíncrona especificada."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumeração que descreve se a transação ambient associada ao âmbito de transação irá fluir através as continuações de thread ao utilizar a tarefa ou async/await async .NET padrões de programação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  id: '#ctor(System.Transactions.TransactionScopeOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com os requisitos especificados."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com o valor de limite de tempo especificado e define a transação especificada como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "A transação ser definida como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>após o qual o âmbito da transação exceder o tempo limite e interrompe a transação.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe e define a transação especificada como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "A transação ser definida como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumeração que descreve se a transação ambient associada ao âmbito de transação irá fluir através as continuações de thread ao utilizar a tarefa ou async/await async .NET padrões de programação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com os requisitos e o valor de limite de tempo especificado."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>após o qual o âmbito da transação exceder o tempo limite e interrompe a transação.</xref:System.TimeSpan>"
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com os requisitos especificados."
  remarks: "Quando utiliza o `transactionOptions` parâmetro para especificar um <xref:System.Transactions.IsolationLevel>e o âmbito cria uma transação mais tarde, a nova transação está associada com o nível de isolamento especificado.</xref:System.Transactions.IsolationLevel> Se um nível de isolamento é transmitido juntamente com uma transação, a transação tem de ter um nível de isolamento idênticos ou, é emitida uma exceção."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "A <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> estrutura que descreve as opções de transação a utilizar se for criada uma nova transação. Se for utilizada uma transação existente, o valor de tempo limite neste parâmetro aplica-se para o âmbito da transação. Se esse tempo expirar antes do âmbito é eliminado, a transação foi abortada."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com a opção de fluxo assíncrono e requisitos especificados."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumeração que descreve se a transação ambient associada ao âmbito de transação irá fluir através as continuações de thread ao utilizar a tarefa ou async/await async .NET padrões de programação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com o valor de tempo limite especificado COM+ os requisitos e interoperabilidade e define a transação especificada como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
  remarks: '**Tenha em atenção** este método utiliza <xref:System.Security.Permissions.SecurityAction>impedir que a ser chamado a partir do código não fidedigno; no entanto, apenas o chamador imediato é necessário para possui o `FullTrust` conjunto de permissões.</xref:System.Security.Permissions.SecurityAction>'
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "A transação ser definida como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>após o qual o âmbito da transação exceder o tempo limite e interrompe a transação.</xref:System.TimeSpan>"
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Uma instância do <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> enumeração que descreve a forma como a transação associada interage com transações COM+."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com o valor de limite de tempo especificado e define a transação especificada como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
  syntax:
    content: public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: transactionToUse
      type: System.Transactions.Transaction
      description: "A transação ser definida como a transação de ambiente, para que o trabalho transacional dentro do âmbito utiliza esta transação."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>após o qual o âmbito da transação exceder o tempo limite e interrompe a transação.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumeração que descreve se a transação ambient associada ao âmbito de transação irá fluir através as continuações de thread ao utilizar a tarefa ou async/await async .NET padrões de programação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com o valor de limite de tempo especificado, requisitos e opção de fluxo assíncrona."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
    - id: scopeTimeout
      type: System.TimeSpan
      description: "O <xref:System.TimeSpan>após o qual o âmbito da transação exceder o tempo limite e interrompe a transação.</xref:System.TimeSpan>"
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumeração que descreve se a transação ambient associada ao âmbito de transação irá fluir através as continuações de thread ao utilizar a tarefa ou async/await async .NET padrões de programação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com o âmbito especificado e requisitos de interoperabilidade e opções de transação."
  remarks: "Quando utiliza o `transactionOptions` parâmetro para especificar um <xref:System.Transactions.IsolationLevel>e o âmbito cria uma transação mais tarde, a nova transação está associada com o nível de isolamento especificado.</xref:System.Transactions.IsolationLevel> Se um nível de isolamento é transmitido juntamente com uma transação, a transação tem de ter um nível de isolamento idênticos ou, é emitida uma exceção.       **Tenha em atenção** este método utiliza <xref:System.Security.Permissions.SecurityAction>impedir que a ser chamado a partir do código não fidedigno; no entanto, apenas o chamador imediato é necessário para possui o `FullTrust` conjunto de permissões.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.EnterpriseServicesInteropOption interopOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "A <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> estrutura que descreve as opções de transação a utilizar se for criada uma nova transação. Se for utilizada uma transação existente, o valor de tempo limite neste parâmetro aplica-se para o âmbito da transação. Se esse tempo expirar antes do âmbito é eliminado, a transação foi abortada."
    - id: interopOption
      type: System.Transactions.EnterpriseServicesInteropOption
      description: "Uma instância do <xref href=&quot;System.Transactions.EnterpriseServicesInteropOption&quot;> </xref> enumeração que descreve a forma como a transação associada interage com transações COM+."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  id: '#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)'
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  type: Constructor
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "[Suportadas no .NET Framework 4.5.1 e versões posteriores]       Inicializa uma nova instância do <xref href=&quot;System.Transactions.TransactionScope&quot;> </xref> classe com a opção de fluxo assíncrono e requisitos especificados."
  syntax:
    content: public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);
    parameters:
    - id: scopeOption
      type: System.Transactions.TransactionScopeOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeOption&quot;> </xref> enumeração que descreve os requisitos de transação associados este âmbito de transação."
    - id: transactionOptions
      type: System.Transactions.TransactionOptions
      description: "A <xref href=&quot;System.Transactions.TransactionOptions&quot;> </xref> estrutura que descreve as opções de transação a utilizar se for criada uma nova transação. Se for utilizada uma transação existente, o valor de tempo limite neste parâmetro aplica-se para o âmbito da transação. Se esse tempo expirar antes do âmbito é eliminado, a transação foi abortada."
    - id: asyncFlowOption
      type: System.Transactions.TransactionScopeAsyncFlowOption
      description: "Uma instância do <xref href=&quot;System.Transactions.TransactionScopeAsyncFlowOption&quot;> </xref> enumeração que descreve se a transação ambient associada ao âmbito de transação irá fluir através as continuações de thread ao utilizar a tarefa ou async/await async .NET padrões de programação."
  overload: System.Transactions.TransactionScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Complete
  id: Complete
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Indica que todas as operações no âmbito são concluídas com êxito."
  remarks: "Quando estiver satisfeito que todas as operações no âmbito são concluídas com êxito, deve chamar este método apenas uma vez para informar esse gestor de transações que o estado em todos os recursos é consistente e a transação ser consolidada. É muito boa prática para colocar a chamada de como a última instrução no `using` bloco.       Para obter mais informações sobre como é utilizado este método, consulte o [implementar uma implícita transação utilizando o âmbito da transação](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) tópico.       Falha ao chamar este método interrompe a transação, porque o Gestor de transações interpreta tal como uma falha de sistema ou exceções acionadas no âmbito da transação. No entanto, deve também note que a chamar este método garante uma consolidação da transação. É simplesmente uma forma de informar o Gestor de transações do seu estado. Depois de chamar este método, já não consegue aceder a transação de ambiente através de <xref:System.Transactions.Transaction.Current%2A>propriedade e tentar efetuar Sim resulta numa exceção que está a ser emitida.</xref:System.Transactions.Transaction.Current%2A>       O trabalho real de consolidação entre o Gestor de recursos ocorre à `End Using` instrução se o <xref:System.Transactions.TransactionScope>criar o objeto de transação.</xref:System.Transactions.TransactionScope> Se não criou a transação, a consolidação ocorre sempre que <xref:System.Transactions.CommittableTransaction.Commit%2A>é chamado pelo proprietário do <xref:System.Transactions.CommittableTransaction>objeto.</xref:System.Transactions.CommittableTransaction> </xref:System.Transactions.CommittableTransaction.Commit%2A> Nesse momento o Gestor de transações chama o recurso gestores e informá-los para consolidação ou reversão, com base em se este método foi chamado para o <xref:System.Transactions.TransactionScope>objeto.</xref:System.Transactions.TransactionScope>"
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_1_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_1_1.cs)]"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Transactions.TransactionScope.Complete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este método já foi chamado uma vez."
  platform:
  - net462
- uid: System.Transactions.TransactionScope.Dispose
  id: Dispose
  parent: System.Transactions.TransactionScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Termina o âmbito da transação."
  remarks: "Chamar este método marca o fim do âmbito de transação. Se o <xref:System.Transactions.TransactionScope>criar o objeto de transação e <xref:System.Transactions.TransactionScope.Complete%2A>foi chamado no âmbito, o <xref:System.Transactions.TransactionScope>objeto tenta consolidar a transação, quando este método é chamado.</xref:System.Transactions.TransactionScope> </xref:System.Transactions.TransactionScope.Complete%2A> </xref:System.Transactions.TransactionScope>       A utilização do c# `using` construção garante que este método é denominado mesmo que ocorre uma exceção. As exceções que ocorrer depois de chamar este método não podem afetar a transação. Este método também restaura a transação de ambiente para o mesmo estado original. A <xref:System.Transactions.TransactionAbortedException>é emitida se a transação não está realmente consolidada.</xref:System.Transactions.TransactionAbortedException>       Este método é síncrono e bloqueia enquanto a transação foi consolidada ou abortada. Por este motivo, deve ter muito cuidado quando utilizar este método numa aplicação Windows formulário (WinForm) ou pode ocorrer um impasse. Se chamar este método dentro de um evento de controlo de WinForm (por exemplo, ao clicar num botão) e utilizar o síncrona <xref:System.Windows.Forms.Control.Invoke%2A>método para direcionar o controlo para efetuar algumas tarefas de IU (por exemplo, a alteração cores) no meio de processamento de transação, acontece um impasse.</xref:System.Windows.Forms.Control.Invoke%2A> Isto acontece porque o <xref:System.Windows.Forms.Control.Invoke%2A>método é síncrono e bloqueia o thread de trabalho até a tarefa de terminar o thread de IU.</xref:System.Windows.Forms.Control.Invoke%2A> No entanto, no nosso cenário, o thread de IU está também a aguardar o thread de trabalho consolidar a transação. O resultado é que nenhum consegue prosseguir e o âmbito aguarda indefinidamente consolidação para conseguir concluir. Deve utilizar <xref:System.Windows.Forms.Control.BeginInvoke%2A>vez <xref:System.Windows.Forms.Control.Invoke%2A>sempre que possível, porque é assíncrona e, por conseguinte, menos propenso a criar um impasse.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A>       Para obter mais informações sobre como é utilizado este método, consulte o [implementar uma implícita transação utilizando o âmbito da transação](http://msdn.microsoft.com/en-us/1ddba95e-7587-48b2-8838-708c275e7199) tópico."
  example:
  - "The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.  \n  \n [!code-vb[TransactionScope#1](~/add/codesnippet/visualbasic/m-system.transactions.tr_0_1.vb)]\n [!code-cs[TransactionScope#1](~/add/codesnippet/csharp/m-system.transactions.tr_0_1.cs)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Transactions.TransactionScope.Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Transactions.TransactionScope.#ctor
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: System.Transactions.TransactionScope.TransactionScope()
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction)
  nameWithType: TransactionScope.TransactionScope(Transaction)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScopeAsyncFlowOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeAsyncFlowOption
  nameWithType: TransactionScopeAsyncFlowOption
  fullName: System.Transactions.TransactionScopeAsyncFlowOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption)
- uid: System.Transactions.TransactionScopeOption
  parent: System.Transactions
  isExternal: false
  name: TransactionScopeOption
  nameWithType: TransactionScopeOption
  fullName: System.Transactions.TransactionScopeOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions)
- uid: System.Transactions.TransactionOptions
  parent: System.Transactions
  isExternal: false
  name: TransactionOptions
  nameWithType: TransactionOptions
  fullName: System.Transactions.TransactionOptions
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,EnterpriseServicesInteropOption)
- uid: System.Transactions.EnterpriseServicesInteropOption
  parent: System.Transactions
  isExternal: false
  name: EnterpriseServicesInteropOption
  nameWithType: EnterpriseServicesInteropOption
  fullName: System.Transactions.EnterpriseServicesInteropOption
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(Transaction,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TimeSpan,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,EnterpriseServicesInteropOption)
- uid: System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  nameWithType: TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
  fullName: System.Transactions.TransactionScope.TransactionScope(TransactionScopeOption,TransactionOptions,TransactionScopeAsyncFlowOption)
- uid: System.Transactions.TransactionScope.Complete
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete()
  nameWithType: TransactionScope.Complete()
  fullName: System.Transactions.TransactionScope.Complete()
- uid: System.Transactions.TransactionScope.Dispose
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose()
  nameWithType: TransactionScope.Dispose()
  fullName: System.Transactions.TransactionScope.Dispose()
- uid: System.Transactions.TransactionScope.#ctor*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope.TransactionScope
- uid: System.Transactions.TransactionScope.Complete*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Complete
  nameWithType: TransactionScope.Complete
- uid: System.Transactions.TransactionScope.Dispose*
  parent: System.Transactions.TransactionScope
  isExternal: false
  name: Dispose
  nameWithType: TransactionScope.Dispose
