### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery
  id: EventLogQuery
  children:
  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection
  - System.Diagnostics.Eventing.Reader.EventLogQuery.Session
  - System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors
  langs:
  - csharp
  name: EventLogQuery
  nameWithType: EventLogQuery
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery
  type: Class
  summary: "Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'
  syntax:
    content: public class EventLogQuery
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  langs:
  - csharp
  name: EventLogQuery(String,PathType)
  nameWithType: EventLogQuery.EventLogQuery(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogQuery&quot;></xref> class by specifying the target of the query. The target can be an active event log or a log file."
  syntax:
    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to query, or the path to the event log file to query."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)
  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  langs:
  - csharp
  name: EventLogQuery(String,PathType,String)
  nameWithType: EventLogQuery.EventLogQuery(String,PathType,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogQuery&quot;></xref> class by specifying the target of the query and the event query. The target can be an active event log or a log file."
  syntax:
    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to query, or the path to the event log file to query."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
    - id: query
      type: System.String
      description: "The event query used to retrieve events that match the query conditions."
  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection
  id: ReverseDirection
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  langs:
  - csharp
  name: ReverseDirection
  nameWithType: EventLogQuery.ReverseDirection
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log."
  remarks: "The default value is `false`."
  syntax:
    content: public bool ReverseDirection { get; set; }
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if events are read from the newest event in the log to the oldest event, and returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if events are read from the oldest event in the log to the newest event."
  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session
  id: Session
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  langs:
  - csharp
  name: Session
  nameWithType: EventLogQuery.Session
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.Session
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets or sets the session that access the Event Log service on the local computer or a remote computer. This object can be set to access a remote event log by creating a <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref> object or an <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogWatcher&quot;></xref> object with this <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogQuery&quot;></xref> object."
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }
    return:
      type: System.Diagnostics.Eventing.Reader.EventLogSession
      description: "Returns an <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref> object."
  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors
  id: TolerateQueryErrors
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  langs:
  - csharp
  name: TolerateQueryErrors
  nameWithType: EventLogQuery.TolerateQueryErrors
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error."
  syntax:
    content: public bool TolerateQueryErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> indicates that the query will continue to retrieve events even if the query fails for some logs, and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> indicates that this query will not continue to retrieve events when the query fails."
  overload: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: EventLogQuery(String,PathType)
  nameWithType: EventLogQuery.EventLogQuery(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: EventLogQuery(String,PathType,String)
  nameWithType: EventLogQuery.EventLogQuery(String,PathType,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType,String)
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: ReverseDirection
  nameWithType: EventLogQuery.ReverseDirection
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: Session
  nameWithType: EventLogQuery.Session
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.Session
- uid: System.Diagnostics.Eventing.Reader.EventLogSession
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogSession
  nameWithType: EventLogSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: TolerateQueryErrors
  nameWithType: EventLogQuery.TolerateQueryErrors
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: EventLogQuery
  nameWithType: EventLogQuery.EventLogQuery
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection*
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: ReverseDirection
  nameWithType: EventLogQuery.ReverseDirection
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session*
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: Session
  nameWithType: EventLogQuery.Session
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors*
  parent: System.Diagnostics.Eventing.Reader.EventLogQuery
  isExternal: false
  name: TolerateQueryErrors
  nameWithType: EventLogQuery.TolerateQueryErrors
