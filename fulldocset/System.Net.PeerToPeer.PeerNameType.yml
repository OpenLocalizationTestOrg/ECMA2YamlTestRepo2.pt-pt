### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameType
  id: PeerNameType
  children:
  - System.Net.PeerToPeer.PeerNameType.Secured
  - System.Net.PeerToPeer.PeerNameType.Unsecured
  langs:
  - csharp
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
  type: Enum
  summary: "Defines the type of <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref> to create. A peer name is either secured or unsecured. A secured peer name provides a proof of ownership of the name. An unsecured peer name has no identity associated."
  remarks: "A node must have access to the private key associated with the public key, used in creating the secured <xref:System.Net.PeerToPeer.PeerName>, in order to prove ownership. The node does not have a relationship to a public key.       The format of a peer name is: *Authority.Classifier*. The value of <xref:System.Net.PeerToPeer.PeerName.Authority%2A> depends on whether the name is a secured peer name or an unsecured peer name. The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> part of the name can be set to any string that contains 15 or fewer Unicode characters, including the `null` terminator. Once the <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> and security level of a peer have been established, a peer can also be referred to with a relative name or a host name.       Only the owner, or peer host, can register a secure peer name with the [PNRP Namespace Provider API](http://go.microsoft.com/fwlink?LinkID=92731). Any node can claim ownership to any unsecured <xref:System.Net.PeerToPeer.PeerName>.       **Note** Using a secured <xref:System.Net.PeerToPeer.PeerName> does not ensure the overall security of a networking application. Security of the application is implementation-dependent."
  syntax:
    content: public enum PeerNameType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameType.Secured
  id: Secured
  parent: System.Net.PeerToPeer.PeerNameType
  langs:
  - csharp
  name: Secured
  nameWithType: PeerNameType.Secured
  fullName: System.Net.PeerToPeer.PeerNameType.Secured
  type: Field
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Create a secured <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref> using the identity of current user."
  syntax:
    content: Secured
    return:
      type: System.Net.PeerToPeer.PeerNameType
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameType.Unsecured
  id: Unsecured
  parent: System.Net.PeerToPeer.PeerNameType
  langs:
  - csharp
  name: Unsecured
  nameWithType: PeerNameType.Unsecured
  fullName: System.Net.PeerToPeer.PeerNameType.Unsecured
  type: Field
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Create an unsecured <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;></xref> using the identity of current user."
  syntax:
    content: Unsecured
    return:
      type: System.Net.PeerToPeer.PeerNameType
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.PeerToPeer.PeerNameType.Secured
  parent: System.Net.PeerToPeer.PeerNameType
  isExternal: false
  name: Secured
  nameWithType: PeerNameType.Secured
  fullName: System.Net.PeerToPeer.PeerNameType.Secured
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerNameType.Unsecured
  parent: System.Net.PeerToPeer.PeerNameType
  isExternal: false
  name: Unsecured
  nameWithType: PeerNameType.Unsecured
  fullName: System.Net.PeerToPeer.PeerNameType.Unsecured
