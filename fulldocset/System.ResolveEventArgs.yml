### YamlMime:ManagedReference
items:
- uid: System.ResolveEventArgs
  id: ResolveEventArgs
  children:
  - System.ResolveEventArgs.#ctor(System.String)
  - System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  - System.ResolveEventArgs.Name
  - System.ResolveEventArgs.RequestingAssembly
  langs:
  - csharp
  name: ResolveEventArgs
  nameWithType: ResolveEventArgs
  fullName: System.ResolveEventArgs
  type: Class
  summary: "Provides data for loader resolution events, such as the <xref href=&quot;System.AppDomain.TypeResolve&quot;></xref>, <xref href=&quot;System.AppDomain.ResourceResolve&quot;></xref>, <xref href=&quot;System.AppDomain.ReflectionOnlyAssemblyResolve&quot;></xref>, and <xref href=&quot;System.AppDomain.AssemblyResolve&quot;></xref> events."
  remarks: "When the loader cannot resolve an assembly reference and a handler has been provided for the appropriate loader resolution event, the event is raised and the ResolveEventArgs contains information about the item to be resolved.      -   The <xref:System.ResolveEventArgs.Name%2A> property contains the name of the item to be resolved.      -   Beginning with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property contains the assembly that requested an assembly that can provide the named item. For more information, see the <xref:System.ResolveEventArgs.RequestingAssembly%2A> property."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ResolveEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ResolveEventArgs.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: ResolveEventArgs(String)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initializes a new instance of the <xref href=&quot;System.ResolveEventArgs&quot;></xref> class, specifying the name of the item to resolve."
  remarks: "This constructor is typically called only by the common language runtime."
  syntax:
    content: public ResolveEventArgs (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of an item to resolve."
  overload: System.ResolveEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  id: '#ctor(System.String,System.Reflection.Assembly)'
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: ResolveEventArgs(String,Assembly)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String,Assembly)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String,Assembly)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Initializes a new instance of the <xref href=&quot;System.ResolveEventArgs&quot;></xref> class, specifying the name of the item to resolve and the assembly whose dependency is being resolved."
  syntax:
    content: public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);
    parameters:
    - id: name
      type: System.String
      description: "The name of an item to resolve."
    - id: requestingAssembly
      type: System.Reflection.Assembly
      description: "The assembly whose dependency is being resolved."
  overload: System.ResolveEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.Name
  id: Name
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: Name
  nameWithType: ResolveEventArgs.Name
  fullName: System.ResolveEventArgs.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Gets the name of the item to resolve."
  remarks: "For the <xref:System.AppDomain.AssemblyResolve> event, Name is the assembly name before policy is applied."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the item to resolve."
  overload: System.ResolveEventArgs.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.RequestingAssembly
  id: RequestingAssembly
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
  fullName: System.ResolveEventArgs.RequestingAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Gets the assembly whose dependency is being resolved."
  remarks: "The assembly that is returned by this property is an assembly that was unable to resolve the item specified by the <xref:System.ResolveEventArgs.Name%2A> property, because the item did not exist in that assembly, in any of its loaded dependencies, or in any dependencies the loader could find through probing.       For example, suppose the current assembly uses the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load assembly A from a directory outside the probing path, in order to use class CA. Suppose further that class CA uses class CB, in assembly B, and that assembly A has a compile-time reference to assembly B, also located outside the probing path. When the current assembly attempts to instantiate CA, the loader attempts to resolve the reference to assembly B. However, because assembly A was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, the loader cannot resolve the dependency. If there is a handler for the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event, the event is raised, and the RequestingAssembly property of the resulting <xref:System.ResolveEventArgs> object contains assembly A, because assembly A is the assembly that is missing a dependency.       The semantics of the RequestingAssembly property vary, depending on how the requesting assembly was loaded:      -   Load context: The value of the property might be `null`. The load context is load-order independent, and the identity of the requesting assembly is not necessarily meaningful. A non-null example occurs when the <xref:System.Type.GetType%2A?displayProperty=fullName> method is called and the specified type is not known to the requesting assembly or any of its dependencies.      -   Load-from context: The property can be used as a probing hint, but the event handler should not get more than one request for a given assembly name.      -   No context (that is, the requesting assembly was loaded by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method, or as a byte stream, or in mixed mode): The handler can use the RequestingAssembly property to load different implementations of the same assembly based on the identity of the requesting assembly."
  syntax:
    content: public System.Reflection.Assembly RequestingAssembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "The assembly that requested the item specified by the <xref:System.ResolveEventArgs.Name*> property."
  overload: System.ResolveEventArgs.RequestingAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.ResolveEventArgs.#ctor(System.String)
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs(String)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs(String,Assembly)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String,Assembly)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ResolveEventArgs.Name
  parent: System.ResolveEventArgs
  isExternal: false
  name: Name
  nameWithType: ResolveEventArgs.Name
  fullName: System.ResolveEventArgs.Name
- uid: System.ResolveEventArgs.RequestingAssembly
  parent: System.ResolveEventArgs
  isExternal: false
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
  fullName: System.ResolveEventArgs.RequestingAssembly
- uid: System.ResolveEventArgs.#ctor*
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs
  nameWithType: ResolveEventArgs.ResolveEventArgs
- uid: System.ResolveEventArgs.Name*
  parent: System.ResolveEventArgs
  isExternal: false
  name: Name
  nameWithType: ResolveEventArgs.Name
- uid: System.ResolveEventArgs.RequestingAssembly*
  parent: System.ResolveEventArgs
  isExternal: false
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
