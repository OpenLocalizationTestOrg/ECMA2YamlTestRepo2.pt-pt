### YamlMime:ManagedReference
items:
- uid: System.ResolveEventArgs
  id: ResolveEventArgs
  children:
  - System.ResolveEventArgs.#ctor(System.String)
  - System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  - System.ResolveEventArgs.Name
  - System.ResolveEventArgs.RequestingAssembly
  langs:
  - csharp
  name: ResolveEventArgs
  nameWithType: ResolveEventArgs
  fullName: System.ResolveEventArgs
  type: Class
  summary: "Fornece dados de carregador de eventos de resolução, tais como o <xref href=&quot;System.AppDomain.TypeResolve&quot;> </xref>, <xref href=&quot;System.AppDomain.ResourceResolve&quot;> </xref>, <xref href=&quot;System.AppDomain.ReflectionOnlyAssemblyResolve&quot;> </xref>, e <xref href=&quot;System.AppDomain.AssemblyResolve&quot;> </xref> eventos."
  remarks: "Quando o carregador não é possível resolver uma referência de assemblagem e um processador foi fornecido para o evento de resolução de carregador adequado, o evento é gerado e o ResolveEventArgs contém informações sobre o item a ser resolvido.      -O <xref:System.ResolveEventArgs.Name%2A>propriedade contém o nome do item que seja resolvido.</xref:System.ResolveEventArgs.Name%2A>      -A partir de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], a <xref:System.ResolveEventArgs.RequestingAssembly%2A>propriedade contém a assemblagem que pediu uma assemblagem que pode fornecer o item com nome.</xref:System.ResolveEventArgs.RequestingAssembly%2A> Para obter mais informações, consulte o <xref:System.ResolveEventArgs.RequestingAssembly%2A>propriedade.</xref:System.ResolveEventArgs.RequestingAssembly%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ResolveEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ResolveEventArgs.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: ResolveEventArgs(String)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ResolveEventArgs&quot;> </xref> classe, especificando o nome do item para resolver."
  remarks: "Este construtor é normalmente denominado apenas pelo language runtime."
  syntax:
    content: public ResolveEventArgs (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome de um item para resolver."
  overload: System.ResolveEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  id: '#ctor(System.String,System.Reflection.Assembly)'
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: ResolveEventArgs(String,Assembly)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String,Assembly)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String,Assembly)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ResolveEventArgs&quot;> </xref> classe, especificando o nome do item de resolver e a assemblagem cuja dependência está a ser resolvida."
  syntax:
    content: public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);
    parameters:
    - id: name
      type: System.String
      description: "O nome de um item para resolver."
    - id: requestingAssembly
      type: System.Reflection.Assembly
      description: "A assemblagem cuja dependência está a ser resolvida."
  overload: System.ResolveEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.Name
  id: Name
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: Name
  nameWithType: ResolveEventArgs.Name
  fullName: System.ResolveEventArgs.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém o nome do item para resolver."
  remarks: "Para o <xref:System.AppDomain.AssemblyResolve>evento, nome é o nome de assemblagem antes da política é aplicada.</xref:System.AppDomain.AssemblyResolve>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome do item para resolver."
  overload: System.ResolveEventArgs.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.RequestingAssembly
  id: RequestingAssembly
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
  fullName: System.ResolveEventArgs.RequestingAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém a assemblagem cuja dependência está a ser resolvida."
  remarks: "A assemblagem que é devolvida por esta propriedade é uma assemblagem que não foi possível resolver o item especificado pelo <xref:System.ResolveEventArgs.Name%2A>propriedade, porque o item não existe nessa assemblagem em qualquer uma das respetivas dependências carregadas ou em quaisquer dependências o carregador encontradas através da pesquisa.</xref:System.ResolveEventArgs.Name%2A>       Por exemplo, suponha que as utilizações de assemblagem atual o <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>método para carregar a assemblagem A partir de um diretório fora o caminho de pesquisa, para poder utilizar a classe de AC.</xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> Suponhamos mais dessa classe AC utiliza CB de classe, na assemblagem B e de que a assemblagem A tem uma referência de tempo de compilação à assemblagem B, também localizado fora do caminho de pesquisa. Quando a assemblagem atual tenta instanciar AC, o carregador tenta resolver a referência à assemblagem B. No entanto, porque foi carregada a assemblagem A utilizando o <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>método, o carregador não é possível resolver a dependência.</xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> Se não houver um processador para o <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>evento, o evento é gerado e a propriedade RequestingAssembly resultante <xref:System.ResolveEventArgs>objeto contém assemblagem um, porque a assemblagem A assemblagem em falta uma dependência.</xref:System.ResolveEventArgs> </xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>       A semântica da propriedade RequestingAssembly variam, dependendo de como foi carregada a assemblagem requerente:-contexto de carregamento: O valor da propriedade pode ser `null`. O contexto de carregamento é independente de ordem de carga e a identidade da assemblagem não é necessariamente significativa. Um exemplo de não-nulos ocorre quando o <xref:System.Type.GetType%2A?displayProperty=fullName>método for chamado e o tipo especificado não é conhecido para a assemblagem requerente ou qualquer uma das respetivas dependências.</xref:System.Type.GetType%2A?displayProperty=fullName>      -Carga-do contexto: A propriedade pode ser utilizada como uma sugestão de pesquisa, mas o processador de eventos não deve ter mais do que um pedido para um nome de assemblagem em questão.      -Qualquer contexto (ou seja, a requerente assemblagem foi carregada, utilizando o <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>método, ou como um fluxo de bytes ou no modo misto): O processador pode utilizar a propriedade de RequestingAssembly carregar diferentes implementações da mesma assemblagem com base na identidade da assemblagem requerente.</xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.Assembly RequestingAssembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "A assemblagem que pediu o item especificado pelo <xref:System.ResolveEventArgs.Name*>propriedade.</xref:System.ResolveEventArgs.Name*>"
  overload: System.ResolveEventArgs.RequestingAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.ResolveEventArgs.#ctor(System.String)
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs(String)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs(String,Assembly)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String,Assembly)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ResolveEventArgs.Name
  parent: System.ResolveEventArgs
  isExternal: false
  name: Name
  nameWithType: ResolveEventArgs.Name
  fullName: System.ResolveEventArgs.Name
- uid: System.ResolveEventArgs.RequestingAssembly
  parent: System.ResolveEventArgs
  isExternal: false
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
  fullName: System.ResolveEventArgs.RequestingAssembly
- uid: System.ResolveEventArgs.#ctor*
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs
  nameWithType: ResolveEventArgs.ResolveEventArgs
- uid: System.ResolveEventArgs.Name*
  parent: System.ResolveEventArgs
  isExternal: false
  name: Name
  nameWithType: ResolveEventArgs.Name
- uid: System.ResolveEventArgs.RequestingAssembly*
  parent: System.ResolveEventArgs
  isExternal: false
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
