### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BaseCompareValidator
  id: BaseCompareValidator
  children:
  - System.Web.UI.WebControls.BaseCompareValidator.#ctor
  - System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)
  - System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)
  - System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  - System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  - System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)
  - System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)
  - System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues
  - System.Web.UI.WebControls.BaseCompareValidator.CutoffYear
  - System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel
  - System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder
  - System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)
  - System.Web.UI.WebControls.BaseCompareValidator.Type
  langs:
  - csharp
  name: BaseCompareValidator
  nameWithType: BaseCompareValidator
  fullName: System.Web.UI.WebControls.BaseCompareValidator
  type: Class
  summary: "Serves as the abstract base class for validation controls that perform typed comparisons."
  remarks: "The BaseCompareValidator class is inherited by validation controls that compare values, such as the <xref:System.Web.UI.WebControls.CompareValidator> and <xref:System.Web.UI.WebControls.RangeValidator> controls, to provide basic common functionality.       Use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property to specify the data type that that the values are converted to before being compared.      > [!NOTE] >  If the value of the input control being validated cannot be converted to the specified data type, validation fails. The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`.       The BaseCompareValidator class also contains several static properties and methods that are useful when performing comparison validations. You can determine whether a string can be converted to a specific data type by using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> method. The maximum year that can be represented by a two-digit year is contained in the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property. The <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> method allows you to convert a two-digit year to a four-digit year.      > [!NOTE] >  When you use validator controls that derive from the BaseCompareValidator control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md).       For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.      ## Accessibility    The markup rendered by default for this control might not conform to accessibility standards such as the Web Content Accessibility Guidelines 1.0 (WCAG) priority 1 guidelines. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Label
  - System.Web.UI.WebControls.BaseValidator
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID
  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)
  - System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid
  - System.Web.UI.WebControls.BaseValidator.ControlToValidate
  - System.Web.UI.WebControls.BaseValidator.Display
  - System.Web.UI.WebControls.BaseValidator.EnableClientScript
  - System.Web.UI.WebControls.BaseValidator.Enabled
  - System.Web.UI.WebControls.BaseValidator.ErrorMessage
  - System.Web.UI.WebControls.BaseValidator.EvaluateIsValid
  - System.Web.UI.WebControls.BaseValidator.ForeColor
  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)
  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)
  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)
  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
  - System.Web.UI.WebControls.BaseValidator.IsValid
  - System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.PropertiesValid
  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript
  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration
  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseValidator.RenderUplevel
  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError
  - System.Web.UI.WebControls.BaseValidator.Text
  - System.Web.UI.WebControls.BaseValidator.Validate
  - System.Web.UI.WebControls.BaseValidator.ValidationGroup
  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Label.TagKey
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: BaseCompareValidator()
  nameWithType: BaseCompareValidator.BaseCompareValidator()
  fullName: System.Web.UI.WebControls.BaseCompareValidator.BaseCompareValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.BaseCompareValidator&quot;></xref> class."
  remarks: "Because the <xref:System.Web.UI.WebControls.BaseCompareValidator> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.BaseCompareValidator> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.BaseCompareValidator> class."
  syntax:
    content: protected BaseCompareValidator ();
    parameters: []
  overload: System.Web.UI.WebControls.BaseCompareValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds the HTML attributes and styles that need to be rendered for the control to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object."
  remarks: "The AddAttributesToRender method is used to render the attributes of the control in the HTML tag for the control. This method is typically overridden by control developers in derived classes to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter> output stream for a control."
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that represents the output stream to render HTML content on the client."
  overload: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)
  id: CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: CanConvert(String,ValidationDataType)
  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the specified string can be converted to the specified data type. This version of the overloaded method tests currency, double, and date values using the format used by the current culture."
  remarks: "Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type.       This version of the method tests the value using the format used by the current culture. To test the value using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName> overloaded version of this method."
  example:
  - "The following example demonstrates using the CanConvert method to compare two integer values and determine whether the second integer can be converted.  \n  \n [!code-vb[BaseCompareValidatorCanConvert#1](~/add/codesnippet/visualbasic/8a6eb682-0825-49a6-8ab0-_1.aspx)]\n [!code-cs[BaseCompareValidatorCanConvert#1](~/add/codesnippet/csharp/8a6eb682-0825-49a6-8ab0-_1.aspx)]"
  syntax:
    content: public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);
    parameters:
    - id: text
      type: System.String
      description: "The string to test."
    - id: type
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> values."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified data string can be converted to the specified data type; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.CanConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)
  id: CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: CanConvert(String,ValidationDataType,Boolean)
  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the specified string can be converted to the specified data type. This version of the overloaded method allows you to specify whether values are tested using a culture-neutral format."
  remarks: "Use the CanConvert method to determine whether the specified string can be converted to the specified data type. This method is commonly used to test whether a string can be converted to a compatible data type before performing an operation that depends on that data type. To indicate that values should be tested using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are tested using the format used by the current culture. When testing a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method."
  syntax:
    content: public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);
    parameters:
    - id: text
      type: System.String
      description: "The string to test."
    - id: type
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> enumeration values."
    - id: cultureInvariant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to test values using a culture-neutral format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified data string can be converted to the specified data type; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.CanConvert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  id: Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: Compare(String,String,ValidationCompareOperator,ValidationDataType)
  nameWithType: BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compares two strings using the specified operator and data type. This version of the overloaded method compares currency, double, and date values using the format used by the current culture."
  remarks: "The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter. The `type` parameter specifies the data type of the values being compared.      > [!NOTE] >  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter. The `rightText` parameter is ignored.       This version of the method compares the values using the format used by the current culture. To compare the values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method."
  syntax:
    content: protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);
    parameters:
    - id: leftText
      type: System.String
      description: "The value on the left side of the operator."
    - id: rightText
      type: System.String
      description: "The value on the right side of the operator."
    - id: op
      type: System.Web.UI.WebControls.ValidationCompareOperator
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationCompareOperator&quot;></xref> values."
    - id: type
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> values."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>leftValue</code> parameter relates to the <code>rightValue</code> parameter in the manner specified by the <code>op</code> parameter; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.Compare*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  id: Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)
  nameWithType: BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compares two strings using the specified operator and validation data type. This version of the overload allows you to specify whether values are compared using a culture-neutral format."
  remarks: "The Compare method is used to test whether the value of the `leftText` parameter relates to the value of the `rightText` parameter in the manner specified by the `op` parameter. The `type` parameter specifies the data type of the values being compared.      > [!NOTE] >  If the `op` parameter is set to `ValidationCompareOperator.DataTypeCheck`, this method tests only the value of the `leftText` parameter for the data type specified by the `type` parameter. The `rightText` parameter is ignored.       To indicate that values should be compared using a culture-neutral format, pass in `true` for the `cultureInvariantLeftText` and `cultureInvariantRightText` parameters; otherwise, the values are compared using the format used by the current culture. When comparing values using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> overloaded version of this method."
  syntax:
    content: protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);
    parameters:
    - id: leftText
      type: System.String
      description: "The value on the left side of the operator."
    - id: cultureInvariantLeftText
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to convert the left side value to a culture-neutral format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: rightText
      type: System.String
      description: "The value on the right side of the operator."
    - id: cultureInvariantRightText
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to convert the right side value to a culture-neutral format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: op
      type: System.Web.UI.WebControls.ValidationCompareOperator
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationCompareOperator&quot;></xref> values."
    - id: type
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> values."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>leftValue</code> parameter relates to the <code>rightValue</code> parameter in the manner specified by the <code>op</code> parameter; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.Compare*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)
  id: Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: Convert(String,ValidationDataType,Object)
  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Object)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Converts the specified text into an object of the specified data type. This version of the overloaded method converts currency, double, and date values using the format used by the current culture."
  remarks: "The Convert method is used to convert text into an object of the specified data type. Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value` `out` parameter.      > [!NOTE] >  If the conversion is unsuccessful, the `value` parameter is set to `null`.       This version of the method converts values using the format used by the current culture. To convert values using a culture-neutral format, use the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method."
  syntax:
    content: protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);
    parameters:
    - id: text
      type: System.String
      description: "The text to convert."
    - id: type
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> values."
    - id: value
      type: System.Object
      description: "When this method returns, contains an object with the conversion result. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the conversion is successful; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)
  id: Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: Convert(String,ValidationDataType,Boolean,Object)
  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Converts the specified text into an object of the specified data type. This version of the overloaded method allows you to specify whether values are converted using a culture-neutral format."
  remarks: "The Convert method is used to convert text into an object of the specified data type. Although the method returns `true` or `false` to indicate whether the conversion was successful, the converted value is stored in the `value``out` parameter.      > [!NOTE] >  If the conversion is unsuccessful, the `value` parameter is set to `null`.       To indicate that values should be converted using a culture-neutral format, pass in `true` for the `cultureInvariant` parameter; otherwise, values are converted using the format used by the current culture. When converting a value using the format used by the current culture, consider using the <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=fullName> overloaded version of this method."
  syntax:
    content: protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);
    parameters:
    - id: text
      type: System.String
      description: "The text to convert."
    - id: type
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> values."
    - id: cultureInvariant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to convert values to a culture-neutral format; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: value
      type: System.Object
      description: "When this method returns, contains an object with the conversion result. This parameter is passed uninitialized."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the conversion is successful; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues
  id: CultureInvariantValues
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: CultureInvariantValues
  nameWithType: BaseCompareValidator.CultureInvariantValues
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether values are converted to a culture-neutral format before being compared."
  remarks: "When the CultureInvariantValues property is set to `true`, properties of the control that are not strongly typed are converted to a culture-neutral format before being compared. When this property is set to `false`, values are converted to the format of the current culture. The CultureInvariantValues property does not affect values that are entered by users of the control on a Web page.       This property cannot be set by themes or by style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool CultureInvariantValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to convert values to a culture-neutral format before they are compared; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear
  id: CutoffYear
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: CutoffYear
  nameWithType: BaseCompareValidator.CutoffYear
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the maximum year that can be represented by a two-digit year."
  remarks: "Use the CutoffYear property to determine the maximum year that can be represented by a two-digit year in a 100-year range. For example, if this property contains the value `2029`, you can represent the years 1930 to 2029 using a two-digit year. The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029. You cannot change the value of this property directly; however, you can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."
  syntax:
    content: protected static int CutoffYear { get; }
    return:
      type: System.Int32
      description: "The maximum year that can be represented by a two-digit year."
  overload: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel
  id: DetermineRenderUplevel
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: DetermineRenderUplevel()
  nameWithType: BaseCompareValidator.DetermineRenderUplevel()
  fullName: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the validation control can be rendered for a newer (&quot;uplevel&quot;) browser."
  remarks: "The DetermineRenderUplevel method is a helper function used primarily by the <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> property to determine whether the client&quot;s browser supports &quot;uplevel&quot; rendering (rendering on a newer browser). The <xref:System.Web.UI.WebControls.BaseCompareValidator> class overrides this method to return `false` if the current culture uses a non-Gregorian calendar.      > [!NOTE] >  This method is used primarily by control developers."
  syntax:
    content: protected override bool DetermineRenderUplevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the validation control can be rendered for an &quot;uplevel&quot; browser; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder
  id: GetDateElementOrder
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: GetDateElementOrder()
  nameWithType: BaseCompareValidator.GetDateElementOrder()
  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines the order in which the month, day, and year appear in a date value for the current culture."
  remarks: "The month, day, and year of a date value can appear in different orders depending on the current culture settings. The GetDateElementOrder method is used to determine the order in which these values appear. The following table shows the different values returned by this method.      |Date element order|Return value|   |------------------------|------------------|   |Day, Month, Year|&quot;dmy&quot;|   |Month, Day, Year|&quot;mdy&quot;|   |Year, Month, Day|&quot;ymd&quot;|"
  syntax:
    content: protected static string GetDateElementOrder ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the order in which the month, day, and year appear in a date value for the current culture."
  overload: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)
  id: GetFullYear(System.Int32)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: GetFullYear(Int32)
  nameWithType: BaseCompareValidator.GetFullYear(Int32)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Generates the four-digit year representation of the specified two-digit year."
  remarks: "Use the GetFullYear method to generate the four-digit year representation of the specified two-digit year. The four-digit year representation depends on the value of the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property, which contains the maximum year that can be represented by a two-digit year in a 100-year range. For example, if the <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> property contains the value `2029`, the GetFullYear method returns a year between 1930 and 2029. The two-digit year 30 is interpreted as 1930, while 29 is interpreted as 2029. You can change the maximum year that can be represented by a two-digit year by setting the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property.      > [!NOTE] >  Because this method is `static`, you can use it without creating an instance of the class by qualifying the method name along with the class name--for example, `BaseCompareValidator.GetFullYear`."
  syntax:
    content: protected static int GetFullYear (int shortYear);
    parameters:
    - id: shortYear
      type: System.Int32
      description: "A two-digit year."
    return:
      type: System.Int32
      description: "The four-digit year representation of the specified two-digit year."
  overload: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseCompareValidator.Type
  id: Type
  parent: System.Web.UI.WebControls.BaseCompareValidator
  langs:
  - csharp
  name: Type
  nameWithType: BaseCompareValidator.Type
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Type
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the data type that the values being compared are converted to before the comparison is made."
  remarks: "Use the Type property to specify the data type used for comparison. The Type property is used differently by the various comparison validation controls.      > [!IMPORTANT] >  When the Type property is set to <xref:System.Web.UI.WebControls.ValidationDataType> and the current calendar type is non-Gregorian, the validator performs server-side validation only. The validator client script supports only Gregorian calendars.       For example, in the <xref:System.Web.UI.WebControls.RangeValidator> control, all values being compared (the upper bound, lower bound, and value of the input control) are converted to the specified data type before any comparison is performed. However, if you use a <xref:System.Web.UI.WebControls.CompareValidator> control and set its <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to `ValidationCompareOperator.DataTypeCheck`, only the value of the input control is converted to the specified data type.      > [!NOTE] >  If the value of the input control associated with the validation control cannot be converted to the specified data type, validation fails. The <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> property of the validation control is set to `false`.       The following table lists the values that you can use for the Type property.      |Data type|Description|   |---------------|-----------------|   |`String`|Specifies a string data type.|   |`Integer`|Specifies a 32-bit signed integer data type.|   |`Double`|Specifies a double-precision floating-point number data type.|   |`Date`|Specifies a date data type.|   |`Currency`|Specifies a monetary data type.|       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the Type property to specify the data type that the values being compared are converted to before the comparison is made.  \n  \n [!code-cs[Classic CompareValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_627_1.aspx)]\n [!code-vb[Classic CompareValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_627_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ValidationDataType Type { get; set; }
    return:
      type: System.Web.UI.WebControls.ValidationDataType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> enumeration values. The default value is <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.BaseCompareValidator.Type*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified data type is not one of the <xref href=&quot;System.Web.UI.WebControls.ValidationDataType&quot;></xref> values."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: System.Web.UI.WebControls.BaseValidator
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.BaseCompareValidator.#ctor
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: BaseCompareValidator()
  nameWithType: BaseCompareValidator.BaseCompareValidator()
  fullName: System.Web.UI.WebControls.BaseCompareValidator.BaseCompareValidator()
- uid: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CanConvert(String,ValidationDataType)
  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ValidationDataType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ValidationDataType
  nameWithType: ValidationDataType
  fullName: System.Web.UI.WebControls.ValidationDataType
- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CanConvert(String,ValidationDataType,Boolean)
  nameWithType: BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CanConvert(String,ValidationDataType,Boolean)
- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Compare(String,String,ValidationCompareOperator,ValidationDataType)
  nameWithType: BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,String,ValidationCompareOperator,ValidationDataType)
- uid: System.Web.UI.WebControls.ValidationCompareOperator
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ValidationCompareOperator
  nameWithType: ValidationCompareOperator
  fullName: System.Web.UI.WebControls.ValidationCompareOperator
- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)
  nameWithType: BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Compare(String,Boolean,String,Boolean,ValidationCompareOperator,ValidationDataType)
- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Convert(String,ValidationDataType,Object)
  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Object)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Convert(String,ValidationDataType,Boolean,Object)
  nameWithType: BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Convert(String,ValidationDataType,Boolean,Object)
- uid: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CultureInvariantValues
  nameWithType: BaseCompareValidator.CultureInvariantValues
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues
- uid: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CutoffYear
  nameWithType: BaseCompareValidator.CutoffYear
  fullName: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: DetermineRenderUplevel()
  nameWithType: BaseCompareValidator.DetermineRenderUplevel()
  fullName: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel()
- uid: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: GetDateElementOrder()
  nameWithType: BaseCompareValidator.GetDateElementOrder()
  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder()
- uid: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: GetFullYear(Int32)
  nameWithType: BaseCompareValidator.GetFullYear(Int32)
  fullName: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(Int32)
- uid: System.Web.UI.WebControls.BaseCompareValidator.Type
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Type
  nameWithType: BaseCompareValidator.Type
  fullName: System.Web.UI.WebControls.BaseCompareValidator.Type
- uid: System.Web.UI.WebControls.BaseCompareValidator.#ctor*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: BaseCompareValidator
  nameWithType: BaseCompareValidator.BaseCompareValidator
- uid: System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: AddAttributesToRender
  nameWithType: BaseCompareValidator.AddAttributesToRender
- uid: System.Web.UI.WebControls.BaseCompareValidator.CanConvert*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CanConvert
  nameWithType: BaseCompareValidator.CanConvert
- uid: System.Web.UI.WebControls.BaseCompareValidator.Compare*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Compare
  nameWithType: BaseCompareValidator.Compare
- uid: System.Web.UI.WebControls.BaseCompareValidator.Convert*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Convert
  nameWithType: BaseCompareValidator.Convert
- uid: System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CultureInvariantValues
  nameWithType: BaseCompareValidator.CultureInvariantValues
- uid: System.Web.UI.WebControls.BaseCompareValidator.CutoffYear*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: CutoffYear
  nameWithType: BaseCompareValidator.CutoffYear
- uid: System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: DetermineRenderUplevel
  nameWithType: BaseCompareValidator.DetermineRenderUplevel
- uid: System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: GetDateElementOrder
  nameWithType: BaseCompareValidator.GetDateElementOrder
- uid: System.Web.UI.WebControls.BaseCompareValidator.GetFullYear*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: GetFullYear
  nameWithType: BaseCompareValidator.GetFullYear
- uid: System.Web.UI.WebControls.BaseCompareValidator.Type*
  parent: System.Web.UI.WebControls.BaseCompareValidator
  isExternal: false
  name: Type
  nameWithType: BaseCompareValidator.Type
