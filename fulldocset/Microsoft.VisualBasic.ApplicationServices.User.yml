### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Fornece acesso a informações sobre o utilizador atual."
  remarks: "As propriedades e métodos expostos pelo `My.User` objeto fornecer acesso a informações sobre o utilizador atual. O significado dos &quot;utilizador atual&quot; difere ligeiramente entre o Windows e aplicações Web. Uma aplicação do Windows, o utilizador atual é o utilizador que executa a aplicação. Numa aplicação Web, o utilizador atual é o utilizador que acede a aplicação.       O `My.User` propriedade também fornece acesso ao <xref:System.Security.Principal.IPrincipal>para o utilizador atual.</xref:System.Security.Principal.IPrincipal> Um objeto principal representa o contexto de segurança do utilizador, incluindo a identidade desse utilizador e quaisquer funções a que o utilizador pertence.       Para aplicações do Windows, esta propriedade fornece a mesma funcionalidade que o <xref:System.Threading.Thread.CurrentPrincipal%2A>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A> Para aplicações Web, esta propriedade fornece a mesma funcionalidade que o <xref:System.Web.HttpContext.User%2A>propriedade do objeto devolvido pelo <xref:System.Web.HttpContext.Current%2A>propriedade.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      > [!NOTE] > Aplicações para Windows, apenas os projetos incorporados no **aplicação Windows** modelo inicializar o `My.User` objeto por predefinição. Em todos os outros tipos de projeto de Windows, tem de inicializar o `My.User` objeto ao chamar o <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>método explicitamente ou atribuindo um valor para <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      > [!NOTE] > O `My.User` objeto não é possível comunicar informações sobre o utilizador atual do Windows quando executado no Windows 95 e Windows 98 porque nesses sistemas operativos não suportam o conceito de um utilizador com sessão iniciada. Tem de implementar autenticação personalizado para utilizar o `My.User` objeto nesses sistemas operativos."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> classe."
  remarks: "As propriedades e métodos expostos pelo `My.User` objeto fornecer acesso a informações sobre o utilizador atual."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém ou define o principal atual (para a segurança baseada em funções)."
  remarks: "Pode definir o `My.User.CurrentPrincipal` propriedade para um objeto que implementa o <xref:System.Security.Principal.IPrincipal>interface para ativar a autenticação personalizada.</xref:System.Security.Principal.IPrincipal>       Na maioria dos tipos de projeto, esta propriedade obtém e define principal actual do thread. Numa aplicação ASP.NET, esta propriedade obtém e define as informações de segurança para a identidade de utilizador do pedido de HTTP atual.       Este é um membro avançado; Não mostrar em IntelliSense, exceto se clicar no **todos os** separador.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Web Site | **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "A <xref:System.Security.Principal.IPrincipal>representando o contexto de segurança.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária para definir o principal."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Define o principal atual o thread para o utilizador do Windows que foi iniciada a aplicação."
  remarks: "Pode utilizar o `My.User.InitializeWithWindowsUser` método para definir o principal atual o thread para o utilizador do Windows que foi iniciada a aplicação. O modelo de aplicação do Visual Basic numa aplicação Windows chama este método durante o arranque por predefinição. Outros tipos de projeto, deve definir o principal atual do thread, ao chamar este método explicitamente ou atribuindo um valor para <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       Em projetos de Windows, o `My.User` objeto baseia-se no principal actual do thread; por conseguinte, este método pode alterar as informações de `My.User` devolve. Numa aplicação ASP.NET, o `My.User` objeto baseia-se na identidade de utilizador do pedido de HTTP atual e não é afetado por este método.      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo de aplicação e o sistema operativo no qual a aplicação é executada. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Descrição geral de classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Este é um membro avançado; Não mostrar em IntelliSense, exceto se clicar no **todos os** separador.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Web Site | **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém ou define o objeto principal que representa o utilizador atual."
  remarks: "No <xref:Microsoft.VisualBasic.ApplicationServices.User>objeto, esta propriedade encapsula num wrapper a <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Substitua este método de uma classe derivada para fornecer o comportamento diferente. Por exemplo, o <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>propriedade substitui esta propriedade.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Um <xref:System.Security.Principal.IPrincipal>objeto que representa o utilizador atual.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém um valor que indica se o utilizador foi autenticado."
  remarks: "O `My.User.IsAuthenticated` propriedade permite que o código determinar se o utilizador atual foi autenticado.      > [!NOTE] > O comportamento exato de `My.User` objeto depende do tipo de aplicação e o sistema operativo no qual a aplicação é executada. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Descrição geral de classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Web Site | **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o utilizador foi autenticado; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Determina se o utilizador atual pertence a função especificada."
  remarks: "O `My.User.IsInRole` método permite que o código determinar se o utilizador atual é um membro da função especificada.       A sobrecarga do `My.User.IsInRole` método que utiliza uma cadeia fornece o facilitar o acesso à <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método do principal atual.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       A sobrecarga do `My.User.IsInRole` método que assume um `BuiltInRole` enumeração comporta-se de forma diferente, consoante o principal atual. Se se tratar de um principal de utilizador do Windows (<xref:System.Security.Principal.WindowsPrincipal>), esta função converte `role` para equivalente <xref:System.Security.Principal.WindowsBuiltInRole>enumeração e devolve o resultado da chamada <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Se o principal atual quaisquer outro principal, esta função transmite o nome do valor de enumeração do `role` para o principal <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo de aplicação e o sistema operativo no qual a aplicação é executada. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Descrição geral de classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Web Site | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "A função incorporada do Windows para o qual a verificação de associação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o utilizador atual é um membro da função especificada; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Determina se o utilizador atual pertence a função especificada."
  remarks: "O `My.User.IsInRole` método permite que o código determinar se o utilizador atual é um membro da função especificada.       A sobrecarga do `My.User.IsInRole` método que utiliza uma cadeia fornece o facilitar o acesso à <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método do principal atual.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       A sobrecarga do `My.User.IsInRole` método que assume um `BuiltInRole` enumeração comporta-se de forma diferente, consoante o principal atual. Se se tratar de um principal de utilizador do Windows (<xref:System.Security.Principal.WindowsPrincipal>), esta função converte `role` para equivalente <xref:System.Security.Principal.WindowsBuiltInRole>enumeração e devolve o resultado da chamada <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Se o principal atual quaisquer outro principal, esta função transmite o nome do valor de enumeração do `role` para o principal <xref:System.Security.Principal.IPrincipal.IsInRole%2A>método.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > O comportamento exato do `My.User` objeto depende do tipo de aplicação e o sistema operativo no qual a aplicação é executada. Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.ApplicationServices.User>Descrição geral de classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | **Yes**|   | Serviço do Windows | **Yes**|   | Web Site | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "O nome da função para os quais a verificação de associação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o utilizador atual é um membro da função especificada; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Obtém o nome do utilizador atual."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O nome do utilizador atual."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
