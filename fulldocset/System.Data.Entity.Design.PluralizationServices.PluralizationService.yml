### YamlMime:ManagedReference
items:
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  id: PluralizationService
  children:
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  - System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  langs:
  - csharp
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
  type: Class
  summary: "Fornece métodos para construir formulários plural e único de palavras."
  remarks: "A classe de PluralizationService aplica-se em inglês regras para construir formulários plural e único de palavras. Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public abstract class PluralizationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  id: '#ctor'
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: PluralizationService()
  nameWithType: PluralizationService.PluralizationService()
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.PluralizationService()
  type: Constructor
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> classe."
  syntax:
    content: protected PluralizationService ();
    parameters: []
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  id: CreateService(System.Globalization.CultureInfo)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: CreateService(CultureInfo)
  nameWithType: PluralizationService.CreateService(CultureInfo)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(CultureInfo)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Cria um <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> que aplica-se as regras de idioma que correspondem a <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> especificado"
  remarks: "O <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>classe aplica-se em inglês regras para construir formulários plural e único de palavras.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public static System.Data.Entity.Design.PluralizationServices.PluralizationService CreateService (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "O <xref:System.Globalization.CultureInfo>que corresponde as regras de idioma foram aplicados à único e plural formas de palavras.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Data.Entity.Design.PluralizationServices.PluralizationService
      description: "Criado recentemente <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> objeto."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  id: Culture
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Culture
  nameWithType: PluralizationService.Culture
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  type: Property
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Obtém ou define o <xref href=&quot;System.Data.Entity.Design.PluralizationServices.PluralizationService&quot;> </xref> cultura."
  remarks: "O <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>classe aplica-se em inglês regras para construir formulários plural e único de palavras.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; protected set; }
    return:
      type: System.Globalization.CultureInfo
      description: "Um objeto que especifica o idioma que as regras para se candidatar singulars e plurals."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  id: IsPlural(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: IsPlural(String)
  nameWithType: PluralizationService.IsPlural(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Determina se a palavra especificada plural."
  remarks: "O <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>classe aplica-se em inglês regras para construir formulários plural e único de palavras.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>       Tanto o <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A>e <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A>métodos podem devolver `true` para a mesma palavra.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> </xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> Por exemplo, ambos os métodos irão devolver `true` para a palavra &quot;peixe&quot;."
  syntax:
    content: public abstract bool IsPlural (string word);
    parameters:
    - id: word
      type: System.String
      description: "O valor a ser analisada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a palavra está plural; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  id: IsSingular(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: IsSingular(String)
  nameWithType: PluralizationService.IsSingular(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Determina se a palavra especificada é único."
  remarks: "O <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>classe aplica-se em inglês regras para construir formulários plural e único de palavras.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>       Tanto o <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A>e <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A>métodos podem devolver `true` para a mesma palavra.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural%2A> </xref:System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular%2A> Por exemplo, ambos os métodos irão devolver `true` para a palavra &quot;peixe&quot;."
  syntax:
    content: public abstract bool IsSingular (string word);
    parameters:
    - id: word
      type: System.String
      description: "O valor a ser analisada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a palavra está único; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  id: Pluralize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Pluralize(String)
  nameWithType: PluralizationService.Pluralize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Devolve o formulário plural da word especificado"
  remarks: "O <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>classe aplica-se em inglês regras para construir formulários plural e único de palavras.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public abstract string Pluralize (string word);
    parameters:
    - id: word
      type: System.String
      description: "A palavra tornar plural."
    return:
      type: System.String
      description: "O formulário plural do parâmetro de entrada."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  id: Singularize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  langs:
  - csharp
  name: Singularize(String)
  nameWithType: PluralizationService.Singularize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(String)
  type: Method
  assemblies:
  - System.Data.Entity.Design
  namespace: System.Data.Entity.Design.PluralizationServices
  summary: "Devolve o único formato da palavra especificado."
  remarks: "O <xref:System.Data.Entity.Design.PluralizationServices.PluralizationService>classe aplica-se em inglês regras para construir formulários plural e único de palavras.</xref:System.Data.Entity.Design.PluralizationServices.PluralizationService> Para expandir o serviço para outros idiomas, utilize <xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>na <xref:System.Data.Entity.Design.EntityModelSchemaGenerator>classe.</xref:System.Data.Entity.Design.EntityModelSchemaGenerator> </xref:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService>"
  syntax:
    content: public abstract string Singularize (string word);
    parameters:
    - id: word
      type: System.String
      description: "A palavra tornar único."
    return:
      type: System.String
      description: "O formulário único do parâmetro de entrada."
  overload: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: PluralizationService()
  nameWithType: PluralizationService.PluralizationService()
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.PluralizationService()
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(System.Globalization.CultureInfo)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: CreateService(CultureInfo)
  nameWithType: PluralizationService.CreateService(CultureInfo)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService(CultureInfo)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService
  parent: System.Data.Entity.Design.PluralizationServices
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Culture
  nameWithType: PluralizationService.Culture
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsPlural(String)
  nameWithType: PluralizationService.IsPlural(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsSingular(String)
  nameWithType: PluralizationService.IsSingular(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Pluralize(String)
  nameWithType: PluralizationService.Pluralize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(System.String)
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Singularize(String)
  nameWithType: PluralizationService.Singularize(String)
  fullName: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize(String)
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.#ctor*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: PluralizationService
  nameWithType: PluralizationService.PluralizationService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.CreateService*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: CreateService
  nameWithType: PluralizationService.CreateService
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Culture*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Culture
  nameWithType: PluralizationService.Culture
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsPlural*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsPlural
  nameWithType: PluralizationService.IsPlural
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.IsSingular*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: IsSingular
  nameWithType: PluralizationService.IsSingular
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Pluralize*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Pluralize
  nameWithType: PluralizationService.Pluralize
- uid: System.Data.Entity.Design.PluralizationServices.PluralizationService.Singularize*
  parent: System.Data.Entity.Design.PluralizationServices.PluralizationService
  isExternal: false
  name: Singularize
  nameWithType: PluralizationService.Singularize
