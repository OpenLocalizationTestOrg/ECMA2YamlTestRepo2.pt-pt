### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ResourceExpressionBuilder
  id: ResourceExpressionBuilder
  children:
  - System.Web.Compilation.ResourceExpressionBuilder.#ctor
  - System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder
  fullName: System.Web.Compilation.ResourceExpressionBuilder
  type: Class
  summary: "Provides code to the page parser for assigning property values on a control."
  remarks: "The ResourceExpressionBuilder class creates code to retrieve resource values when the page is executed. A resource file typically contains information localized for a particular language or culture.       A resource expression takes the form `<%$ Resources: ClassKey, ResourceKey %>` within the page. The part of the expression before the colon (:) designates the type of expression builder to use, and the part after the colon signifies the class name and resource key. The preceding expression would retrieve the following value from a file named `ClassKey.resx`:      ```   <data name=&quot;ResourceKey&quot;><value xml:space=&quot;preserve&quot;>Hello!</value></data>   ```       When the page parser encounters an expression with the `Resources` prefix, it creates an instance of the ResourceExpressionBuilder class. The ResourceExpressionBuilder class either evaluates the expression or generates code to return a value for the expression when the page is executed.       If the expression is encountered in a page that will be compiled, the ResourceExpressionBuilder object generates code that retrieves the specified value from the resource file. If the expression is encountered in a page that will not be compiled, the ResourceExpressionBuilder object returns the value from the resource file when the page is parsed."
  example:
  - "The following code example retrieves the default currency from a resource file.  \n  \n [!code-cs[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/csharp/t-system.web.compilation_3_1.aspx)]\n [!code-vb[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/visualbasic/t-system.web.compilation_3_1.aspx)]  \n  \n This code reads the following value from a resource file named `Financial.resx` in the App_GlobalResources directory.  \n  \n```  \n<data name=\"Currency\"><value xml:space=\"preserve\">US dollars</value></data>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ResourceExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Resources")]

      public class ResourceExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Compilation.ResourceExpressionBuilder&quot;></xref> class."
  syntax:
    content: public ResourceExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returns a value from a resource file."
  remarks: 'This method is called when an expression of the form `<%$ Resources: someResourceKey %>` is encountered in a page that uses the no-compile feature. It retrieves the appropriate value from a key/value pair in a resource file.'
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "The object containing the expression."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "The object that represents information about the property bound to by the expression."
    - id: parsedData
      type: System.Object
      description: "The object containing parsed data as returned by the <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*> method."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Contextual information for the evaluation of the expression."
    return:
      type: System.Object
      description: "An <xref:System.Object> associated with the parsed expression. The parsed expression contains the class name and resource key."
  overload: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returns a code expression to evaluate during page execution."
  remarks: "This method is called during the CodeDOM creation for a page or control. The <xref:System.CodeDom.CodeExpression> object returned is of the type <xref:System.CodeDom.CodeMethodInvokeExpression> and represents the method to call when retrieving a resource value during page execution."
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "The property name of the object."
    - id: parsedData
      type: System.Object
      description: "The parsed value of the expression."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Properties for the control or page."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> that invokes a method."
  overload: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  id: ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returns an object that represents the parsed expression."
  remarks: "This method parses the expression and returns a <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> and a <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> property value in the returned <xref:System.Web.Compilation.ResourceExpressionFields> object, if these properties are provided in the expression."
  syntax:
    content: public static System.Web.Compilation.ResourceExpressionFields ParseExpression (string expression);
    parameters:
    - id: expression
      type: System.String
      description: "The expression value to be parsed."
    return:
      type: System.Web.Compilation.ResourceExpressionFields
      description: "The <xref href=&quot;System.Web.Compilation.ResourceExpressionFields&quot;></xref> for the expression."
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returns an object that represents the parsed expression."
  remarks: "The returned <xref:System.Object> is of type <xref:System.Web.Compilation.ResourceExpressionFields>. This method parses the expression and returns a <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> and a <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> property value in the returned <xref:System.Web.Compilation.ResourceExpressionFields> object, if those properties are provided in the expression."
  syntax:
    content: public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "The value of the declarative expression."
    - id: propertyType
      type: System.Type
      description: "The type of the property bound to by the expression."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Contextual information for the evaluation of the expression."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the parsed expression."
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The resource expression cannot be found or is invalid."
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Returns a value indicating whether an expression can be evaluated in a page that uses the no-compile feature."
  remarks: "The SupportsEvaluate property indicates whether the <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class. <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> must be implemented within an expression builder for an expression to be evaluated in a page that uses the no-compile feature. <xref:System.Web.Compilation.ResourceExpressionBuilder> supports evaluation of resource values in non-compiled pages, so this property always returns `true`."
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
- uid: System.Web.Compilation.ResourceExpressionFields
  parent: System.Web.Compilation
  isExternal: false
  name: ResourceExpressionFields
  nameWithType: ResourceExpressionFields
  fullName: System.Web.Compilation.ResourceExpressionFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ResourceExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ResourceExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ResourceExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
