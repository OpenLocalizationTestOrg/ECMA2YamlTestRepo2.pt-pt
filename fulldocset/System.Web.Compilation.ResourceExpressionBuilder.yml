### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ResourceExpressionBuilder
  id: ResourceExpressionBuilder
  children:
  - System.Web.Compilation.ResourceExpressionBuilder.#ctor
  - System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder
  fullName: System.Web.Compilation.ResourceExpressionBuilder
  type: Class
  summary: "Fornece o código para o parser de página para atribuir valores de propriedade num controlo."
  remarks: "A classe de ResourceExpressionBuilder cria código para obter valores de recurso quando a página é executada. Um ficheiro de recursos contém normalmente informações localizadas para um idioma específico ou a cultura.       Uma expressão de recurso assume a forma `<%$ Resources: ClassKey, ResourceKey %>` na página. A parte da expressão antes da vírgula (:) designa o tipo de construtor de expressão a utilizar e a parte após a vírgula significa a chave de recurso e o nome de classe. A expressão anterior seria obter o seguinte valor de um ficheiro com o nome `ClassKey.resx`: ```   <data name=&quot;ResourceKey&quot;><value xml:space=&quot;preserve&quot;>Hello!</value></data>   ``` quando o analisador de página encontra uma expressão com o `Resources` prefixo, cria uma instância da classe ResourceExpressionBuilder. A classe de ResourceExpressionBuilder avalia a expressão ou gera o código para devolver um valor para a expressão quando a página é executada.       Se a expressão é encontrou uma página que será compilado, o objeto de ResourceExpressionBuilder gera o código que obtém o valor especificado a partir do ficheiro de recursos. Se a expressão é encontrou uma página que não será compilado, o objeto de ResourceExpressionBuilder devolve o valor do ficheiro de recursos quando a página é analisada."
  example:
  - "The following code example retrieves the default currency from a resource file.  \n  \n [!code-cs[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/csharp/t-system.web.compilation_3_1.aspx)]\n [!code-vb[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/visualbasic/t-system.web.compilation_3_1.aspx)]  \n  \n This code reads the following value from a resource file named `Financial.resx` in the App_GlobalResources directory.  \n  \n```  \n<data name=\"Currency\"><value xml:space=\"preserve\">US dollars</value></data>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ResourceExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Resources")]

      public class ResourceExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Compilation.ResourceExpressionBuilder&quot;> </xref> classe."
  syntax:
    content: public ResourceExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve um valor de um ficheiro de recursos."
  remarks: 'Este método é chamado quando uma expressão do formulário `<%$ Resources: someResourceKey %>` uma página que utiliza a funcionalidade de compilação não é encontrada. Obtém o valor adequado de um par chave/valor num ficheiro de recurso.'
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "O objeto que contém a expressão."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "O objecto que representa as informações sobre a propriedade vinculada a pela expressão de."
    - id: parsedData
      type: System.Object
      description: "O objeto que contém analisar dados, tal como devolvido pelo <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*>método.</xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Nível contextual das informações para a avaliação da expressão."
    return:
      type: System.Object
      description: "Um <xref:System.Object>associada com a expressão analisada.</xref:System.Object> A expressão analisada contém a chave de recurso e o nome de classe."
  overload: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve uma expressão de código para avaliar durante a execução da página."
  remarks: "Este método é denominado durante a criação de CodeDOM para uma página ou um controlo. O <xref:System.CodeDom.CodeExpression>objeto devolvido é do tipo <xref:System.CodeDom.CodeMethodInvokeExpression>e representa o método a chamar ao obter um valor de recursos durante a execução da página.</xref:System.CodeDom.CodeMethodInvokeExpression> </xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "O nome da propriedade do objeto."
    - id: parsedData
      type: System.Object
      description: "O valor analisado da expressão."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Propriedades para o controlo ou página."
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que invoca um método."
  overload: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  id: ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve um objeto que representa a expressão analisada."
  remarks: "Este método analisa a expressão e devolve um <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>e um <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>no devolvido o valor da propriedade <xref:System.Web.Compilation.ResourceExpressionFields>objeto, se estas propriedades são fornecidas na expressão.</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> </xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>"
  syntax:
    content: public static System.Web.Compilation.ResourceExpressionFields ParseExpression (string expression);
    parameters:
    - id: expression
      type: System.String
      description: "O valor da expressão para ser analisada."
    return:
      type: System.Web.Compilation.ResourceExpressionFields
      description: "O <xref href=&quot;System.Web.Compilation.ResourceExpressionFields&quot;> </xref> para a expressão."
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve um objeto que representa a expressão analisada."
  remarks: "Devolvido <xref:System.Object>é do tipo <xref:System.Web.Compilation.ResourceExpressionFields>.</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Object> Este método analisa a expressão e devolve um <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>e um <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>no devolvido o valor da propriedade <xref:System.Web.Compilation.ResourceExpressionFields>objeto, se essas propriedades são fornecidas na expressão.</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> </xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>"
  syntax:
    content: public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "O valor da expressão declarativa."
    - id: propertyType
      type: System.Type
      description: "O tipo da propriedade vinculado pela expressão."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Nível contextual das informações para a avaliação da expressão."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa a expressão analisada.</xref:System.Object>"
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A expressão de recurso não é possível localizar ou é inválida."
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve um valor que indica se uma expressão pode ser avaliada numa página que utiliza a funcionalidade de compilação não."
  remarks: "A propriedade SupportsEvaluate indica se o <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>método foi implementado na classe.</xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>tem de ser implementado dentro de um construtor de expressão para uma expressão a avaliar numa página que utiliza a funcionalidade de compilação não.</xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder>suporta avaliação dos valores de recurso não compilada páginas, pelo que esta propriedade devolve sempre `true`.</xref:System.Web.Compilation.ResourceExpressionBuilder>"
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
- uid: System.Web.Compilation.ResourceExpressionFields
  parent: System.Web.Compilation
  isExternal: false
  name: ResourceExpressionFields
  nameWithType: ResourceExpressionFields
  fullName: System.Web.Compilation.ResourceExpressionFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ResourceExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ResourceExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ResourceExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
