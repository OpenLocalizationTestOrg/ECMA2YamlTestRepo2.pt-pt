### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectoryEntryConfiguration
  id: DirectoryEntryConfiguration
  children:
  - System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName
  - System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated
  - System.DirectoryServices.DirectoryEntryConfiguration.PageSize
  - System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding
  - System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort
  - System.DirectoryServices.DirectoryEntryConfiguration.Referral
  - System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks
  - System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)
  langs:
  - csharp
  name: DirectoryEntryConfiguration
  nameWithType: DirectoryEntryConfiguration
  fullName: System.DirectoryServices.DirectoryEntryConfiguration
  type: Class
  summary: "The DirectoryEntryConfiguration class provides a direct way to specify and obtain provider-specific options for manipulating a directory object. Typically, the options apply to search operations of the underlying directory store. The supported options are provider-specific."
  syntax:
    content: public class DirectoryEntryConfiguration
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName
  id: GetCurrentServerName
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: GetCurrentServerName()
  nameWithType: DirectoryEntryConfiguration.GetCurrentServerName()
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Gets the host name of the server for the current binding to this directory object."
  syntax:
    content: public string GetCurrentServerName ();
    parameters: []
    return:
      type: System.String
      description: "The name of the server."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: IsMutuallyAuthenticated()
  nameWithType: DirectoryEntryConfiguration.IsMutuallyAuthenticated()
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Determines if mutual authentication is performed by the SSPI layer."
  syntax:
    content: public bool IsMutuallyAuthenticated ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if mutual authentication has been performed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectoryEntryConfiguration.PageSize
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Gets or sets the page size in a paged search."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "The number of entries in a page."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding
  id: PasswordEncoding
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: PasswordEncoding
  nameWithType: DirectoryEntryConfiguration.PasswordEncoding
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Gets or sets the password encoding method."
  syntax:
    content: public System.DirectoryServices.PasswordEncodingMethod PasswordEncoding { get; set; }
    return:
      type: System.DirectoryServices.PasswordEncodingMethod
      description: "One of the <xref href=&quot;System.DirectoryServices.PasswordEncodingMethod&quot;></xref> enumeration members that indicates the type of password encoding."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort
  id: PasswordPort
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: PasswordPort
  nameWithType: DirectoryEntryConfiguration.PasswordPort
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Gets or sets the port number to use to establish an SSL connection when the password is set or changed."
  remarks: "By default, port 636 is used to establish an SSL connection when setting or changing a password."
  syntax:
    content: public int PasswordPort { get; set; }
    return:
      type: System.Int32
      description: "The port number to use to establish an SSL connection when the password is set or changed."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.Referral
  id: Referral
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: Referral
  nameWithType: DirectoryEntryConfiguration.Referral
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.Referral
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Gets or sets a value that determines if and how referral chasing is pursued."
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption Referral { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "A combination of one or more of the <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;></xref> enumeration members that specifies if and how referral chasing is pursued."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.Referral*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectoryEntryConfiguration.SecurityMasks
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Gets or sets a security mask to use with <xref href=&quot;System.DirectoryServices.DirectoryEntryConfiguration&quot;></xref>."
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "A combination of one or more of the <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;></xref> enumeration members that specifies the security mask."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)
  id: SetUserNameQueryQuota(System.String)
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  langs:
  - csharp
  name: SetUserNameQueryQuota(String)
  nameWithType: DirectoryEntryConfiguration.SetUserNameQueryQuota(String)
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Sets the name of a security principal so that when the principal is accessed, its quota information will also be returned."
  syntax:
    content: public void SetUserNameQueryQuota (string accountName);
    parameters:
    - id: accountName
      type: System.String
      description: "The account name that is being set to allow queries on its principal name."
  overload: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: GetCurrentServerName()
  nameWithType: DirectoryEntryConfiguration.GetCurrentServerName()
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: IsMutuallyAuthenticated()
  nameWithType: DirectoryEntryConfiguration.IsMutuallyAuthenticated()
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PageSize
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: PageSize
  nameWithType: DirectoryEntryConfiguration.PageSize
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: PasswordEncoding
  nameWithType: DirectoryEntryConfiguration.PasswordEncoding
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding
- uid: System.DirectoryServices.PasswordEncodingMethod
  parent: System.DirectoryServices
  isExternal: false
  name: PasswordEncodingMethod
  nameWithType: PasswordEncodingMethod
  fullName: System.DirectoryServices.PasswordEncodingMethod
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: PasswordPort
  nameWithType: DirectoryEntryConfiguration.PasswordPort
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort
- uid: System.DirectoryServices.DirectoryEntryConfiguration.Referral
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: Referral
  nameWithType: DirectoryEntryConfiguration.Referral
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.Referral
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectoryEntryConfiguration.SecurityMasks
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: SetUserNameQueryQuota(String)
  nameWithType: DirectoryEntryConfiguration.SetUserNameQueryQuota(String)
  fullName: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(String)
- uid: System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: GetCurrentServerName
  nameWithType: DirectoryEntryConfiguration.GetCurrentServerName
- uid: System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: DirectoryEntryConfiguration.IsMutuallyAuthenticated
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PageSize*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: PageSize
  nameWithType: DirectoryEntryConfiguration.PageSize
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: PasswordEncoding
  nameWithType: DirectoryEntryConfiguration.PasswordEncoding
- uid: System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: PasswordPort
  nameWithType: DirectoryEntryConfiguration.PasswordPort
- uid: System.DirectoryServices.DirectoryEntryConfiguration.Referral*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: Referral
  nameWithType: DirectoryEntryConfiguration.Referral
- uid: System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectoryEntryConfiguration.SecurityMasks
- uid: System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota*
  parent: System.DirectoryServices.DirectoryEntryConfiguration
  isExternal: false
  name: SetUserNameQueryQuota
  nameWithType: DirectoryEntryConfiguration.SetUserNameQueryQuota
