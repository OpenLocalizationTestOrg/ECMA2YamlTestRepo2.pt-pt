### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ITextControl
  id: ITextControl
  children:
  - System.Web.UI.ITextControl.Text
  langs:
  - csharp
  name: ITextControl
  nameWithType: ITextControl
  fullName: System.Web.UI.ITextControl
  type: Interface
  summary: "Defines the interface a control implements to get or set its text content."
  remarks: "The ITextControl interface defines the <xref:System.Web.UI.ITextControl.Text%2A> property a control implements to allow the getting or setting of its text content. The <xref:System.Web.UI.ITextControl.Text%2A> property can be set programmatically or through user input.      > [!CAUTION] >  A control implementing this interface can be used to display user input. Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)."
  example:
  - "The following code example shows a custom control that implements the ITextControl interface. A default value is assigned to the <xref:System.Web.UI.ITextControl.Text%2A> property if `null` is passed to the property.  \n  \n [!code-cs[System.Web.UI.ITextControl#1](~/add/codesnippet/csharp/t-system.web.ui.itextcon_1.cs)]\n [!code-vb[System.Web.UI.ITextControl#1](~/add/codesnippet/visualbasic/t-system.web.ui.itextcon_1.vb)]"
  syntax:
    content: public interface ITextControl
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ITextControl.Text
  id: Text
  parent: System.Web.UI.ITextControl
  langs:
  - csharp
  name: Text
  nameWithType: ITextControl.Text
  fullName: System.Web.UI.ITextControl.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the text content of a control."
  remarks: "The Text property can be set programmatically or through user input.      > [!CAUTION] >  A control implementing this interface can be used to display user input. Before displaying user input, the input must be checked for malicious client script, such as executable script or SQL statements. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)."
  example:
  - "The following code example shows a custom control that implements the <xref:System.Web.UI.ITextControl> interface. A default value is assigned to the Text property if `null` is passed to the property.  \n  \n [!code-cs[System.Web.UI.ITextControl#1](~/add/codesnippet/csharp/p-system.web.ui.itextcon_1.cs)]\n [!code-vb[System.Web.UI.ITextControl#1](~/add/codesnippet/visualbasic/p-system.web.ui.itextcon_1.vb)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "The text content of a control."
  overload: System.Web.UI.ITextControl.Text*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ITextControl.Text
  parent: System.Web.UI.ITextControl
  isExternal: false
  name: Text
  nameWithType: ITextControl.Text
  fullName: System.Web.UI.ITextControl.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITextControl.Text*
  parent: System.Web.UI.ITextControl
  isExternal: false
  name: Text
  nameWithType: ITextControl.Text
