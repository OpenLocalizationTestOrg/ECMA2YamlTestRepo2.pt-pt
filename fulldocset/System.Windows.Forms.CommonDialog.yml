### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.CommonDialog
  id: CommonDialog
  children:
  - System.Windows.Forms.CommonDialog.#ctor
  - System.Windows.Forms.CommonDialog.HelpRequest
  - System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - System.Windows.Forms.CommonDialog.Reset
  - System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)
  - System.Windows.Forms.CommonDialog.ShowDialog
  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  - System.Windows.Forms.CommonDialog.Tag
  langs:
  - csharp
  name: CommonDialog
  nameWithType: CommonDialog
  fullName: System.Windows.Forms.CommonDialog
  type: Class
  summary: "Specifies the base class used for displaying dialog boxes on the screen."
  remarks: "Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box. Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of CommonDialog and illustrates creating and showing a dialog box. This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.  \n  \n [!code-cs[Classic ColorDialog Example#1](~/add/codesnippet/csharp/t-system.windows.forms.c_1_1.cs)]\n [!code-cpp[Classic ColorDialog Example#1](~/add/codesnippet/cpp/t-system.windows.forms.c_1_1.cpp)]\n [!code-vb[Classic ColorDialog Example#1](~/add/codesnippet/visualbasic/ClassicColorDialogExample/Form1.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      public abstract class CommonDialog : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: CommonDialog()
  nameWithType: CommonDialog.CommonDialog()
  fullName: System.Windows.Forms.CommonDialog.CommonDialog()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.CommonDialog&quot;></xref> class."
  syntax:
    content: public CommonDialog ();
    parameters: []
  overload: System.Windows.Forms.CommonDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.HelpRequest
  id: HelpRequest
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: HelpRequest
  nameWithType: CommonDialog.HelpRequest
  fullName: System.Windows.Forms.CommonDialog.HelpRequest
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user clicks the Help button on a common dialog box."
  remarks: "For information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates initializing a <xref:System.Windows.Forms.ColorDialog> object setting the <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> properties. The <xref:System.Windows.Forms.ColorDialog> object does not allow the user to set a custom color, but it allows the full set of basic colors to be displayed. By setting the <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> property to false, it allows the display of colors that are combinations of other colors on systems with 256 or less colors. The example also shows setting the <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> property and handling a HelpRequest event for a dialog box. To run the example, paste the following code in a form and call the `InitializeColorDialog` method in the form's constructor or `Load` method. This example requires that the `Click` event of the button is connected to the event handler defined in the example.  \n  \n [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_65_1.vb)]\n [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/add/codesnippet/cpp/e-system.windows.forms.c_65_1.cpp)]\n [!code-cs[System.Windows.Forms.ColorDialogHelp#1](~/add/codesnippet/csharp/e-system.windows.forms.c_65_1.cs)]"
  syntax:
    content: public event EventHandler HelpRequest;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box."
  remarks: "A hook procedure is a mechanism by which a function can intercept events before they reach an application. When you override the HookProc method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window.       By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.      > [!NOTE] >  This method uses <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation. For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).       This property also uses the <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> security attribute; to override this member, the derived class must have the `CustomPermission` permission."
  example:
  - "The following code example demonstrates how to override the HookProc method. The example consists of a class that inherits the <xref:System.Windows.Forms.CommonDialog> class. In the class's HookProc override, the example evaluates the method's `msg` parameter against constant values for particular Windows messages. If the `msg` parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the HookProc method. This example assumes that the class in which the HookProc method is declared inherits the <xref:System.Windows.Forms.CommonDialog> class.  \n  \n [!code-cs[HookProc Example#1](~/add/codesnippet/csharp/8ab558bc-22fd-4de8-9995-_1.cs)]\n [!code-cpp[HookProc Example#1](~/add/codesnippet/cpp/8ab558bc-22fd-4de8-9995-_1.cpp)]\n [!code-vb[HookProc Example#1](~/add/codesnippet/visualbasic/8ab558bc-22fd-4de8-9995-_1.vb)]"
  syntax:
    content: protected virtual IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "The handle to the dialog box window."
    - id: msg
      type: System.Int32
      description: "The message being received."
    - id: wparam
      type: System.IntPtr
      description: "Additional information about the message."
    - id: lparam
      type: System.IntPtr
      description: "Additional information about the message."
    return:
      type: System.IntPtr
      description: "A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message."
  overload: System.Windows.Forms.CommonDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  id: OnHelpRequest(System.EventArgs)
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: OnHelpRequest(EventArgs)
  nameWithType: CommonDialog.OnHelpRequest(EventArgs)
  fullName: System.Windows.Forms.CommonDialog.OnHelpRequest(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.CommonDialog.HelpRequest&quot;></xref> event."
  remarks: "This method is invoked when the Help button is clicked. Inheriting classes can override this method to handle the event."
  syntax:
    content: protected virtual void OnHelpRequest (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref href=&quot;System.Windows.Forms.HelpEventArgs&quot;></xref> that provides the event data."
  overload: System.Windows.Forms.CommonDialog.OnHelpRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Defines the owner window procedure that is overridden to add specific functionality to a common dialog box."
  remarks: "Control is transferred here when messages are sent to the owner window of the common dialog box. Inheriting classes can override this method to add specific functionality to a common dialog box."
  syntax:
    content: protected virtual IntPtr OwnerWndProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "The window handle of the message to send."
    - id: msg
      type: System.Int32
      description: "The Win32 message to send."
    - id: wparam
      type: System.IntPtr
      description: "The `wparam` to send with the message."
    - id: lparam
      type: System.IntPtr
      description: "The `lparam` to send with the message."
    return:
      type: System.IntPtr
      description: "The result of the message processing, which is dependent on the message sent."
  overload: System.Windows.Forms.CommonDialog.OwnerWndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.Reset
  id: Reset
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: CommonDialog.Reset()
  fullName: System.Windows.Forms.CommonDialog.Reset()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "When overridden in a derived class, resets the properties of a common dialog box to their default values."
  syntax:
    content: public abstract void Reset ();
    parameters: []
  overload: System.Windows.Forms.CommonDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: CommonDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.CommonDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "When overridden in a derived class, specifies a common dialog box."
  remarks: "This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box."
  syntax:
    content: protected abstract bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: "A value that represents the window handle of the owner window for the common dialog box."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the dialog box was successfully run; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.CommonDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.ShowDialog
  id: ShowDialog
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: ShowDialog()
  nameWithType: CommonDialog.ShowDialog()
  fullName: System.Windows.Forms.CommonDialog.ShowDialog()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Runs a common dialog box with a default owner."
  remarks: "This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box. This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.  \n  \n [!code-cs[Classic ColorDialog Example#1](~/add/codesnippet/csharp/m-system.windows.forms.c_66_1.cs)]\n [!code-cpp[Classic ColorDialog Example#1](~/add/codesnippet/cpp/m-system.windows.forms.c_66_1.cpp)]\n [!code-vb[Classic ColorDialog Example#1](~/add/codesnippet/visualbasic/ClassicColorDialogExample/Form1.vb#1)]"
  syntax:
    content: public System.Windows.Forms.DialogResult ShowDialog ();
    parameters: []
    return:
      type: System.Windows.Forms.DialogResult
      description: "<xref href=&quot;System.Windows.Forms.DialogResult&quot;></xref> if the user clicks OK in the dialog box; otherwise, <xref href=&quot;System.Windows.Forms.DialogResult&quot;></xref>."
  overload: System.Windows.Forms.CommonDialog.ShowDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  id: ShowDialog(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: ShowDialog(IWin32Window)
  nameWithType: CommonDialog.ShowDialog(IWin32Window)
  fullName: System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Runs a common dialog box with the specified owner."
  remarks: "This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown. If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application."
  syntax:
    content: public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.IWin32Window
      description: "Any object that implements <xref href=&quot;System.Windows.Forms.IWin32Window&quot;></xref> that represents the top-level window that will own the modal dialog box."
    return:
      type: System.Windows.Forms.DialogResult
      description: "<xref href=&quot;System.Windows.Forms.DialogResult&quot;></xref> if the user clicks **OK** in the dialog box; otherwise, <xref href=&quot;System.Windows.Forms.DialogResult&quot;></xref>."
  overload: System.Windows.Forms.CommonDialog.ShowDialog*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.CommonDialog.Tag
  id: Tag
  parent: System.Windows.Forms.CommonDialog
  langs:
  - csharp
  name: Tag
  nameWithType: CommonDialog.Tag
  fullName: System.Windows.Forms.CommonDialog.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets an object that contains data about the control."
  remarks: "Use this property to store arbitrary information about the control."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "The object that contains data about the <xref href=&quot;System.Windows.Forms.CommonDialog&quot;></xref>."
  overload: System.Windows.Forms.CommonDialog.Tag*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Windows.Forms.CommonDialog.#ctor
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: CommonDialog()
  nameWithType: CommonDialog.CommonDialog()
  fullName: System.Windows.Forms.CommonDialog.CommonDialog()
- uid: System.Windows.Forms.CommonDialog.HelpRequest
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: HelpRequest
  nameWithType: CommonDialog.HelpRequest
  fullName: System.Windows.Forms.CommonDialog.HelpRequest
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.CommonDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: OnHelpRequest(EventArgs)
  nameWithType: CommonDialog.OnHelpRequest(EventArgs)
  fullName: System.Windows.Forms.CommonDialog.OnHelpRequest(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: System.Windows.Forms.CommonDialog.OwnerWndProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.Windows.Forms.CommonDialog.Reset
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: Reset()
  nameWithType: CommonDialog.Reset()
  fullName: System.Windows.Forms.CommonDialog.Reset()
- uid: System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: CommonDialog.RunDialog(IntPtr)
  fullName: System.Windows.Forms.CommonDialog.RunDialog(IntPtr)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.CommonDialog.ShowDialog
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: ShowDialog()
  nameWithType: CommonDialog.ShowDialog()
  fullName: System.Windows.Forms.CommonDialog.ShowDialog()
- uid: System.Windows.Forms.DialogResult
  parent: System.Windows.Forms
  isExternal: false
  name: DialogResult
  nameWithType: DialogResult
  fullName: System.Windows.Forms.DialogResult
- uid: System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: ShowDialog(IWin32Window)
  nameWithType: CommonDialog.ShowDialog(IWin32Window)
  fullName: System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window)
- uid: System.Windows.Forms.IWin32Window
  parent: System.Windows.Forms
  isExternal: false
  name: IWin32Window
  nameWithType: IWin32Window
  fullName: System.Windows.Forms.IWin32Window
- uid: System.Windows.Forms.CommonDialog.Tag
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: Tag
  nameWithType: CommonDialog.Tag
  fullName: System.Windows.Forms.CommonDialog.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.CommonDialog.#ctor*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: CommonDialog
  nameWithType: CommonDialog.CommonDialog
- uid: System.Windows.Forms.CommonDialog.HookProc*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: HookProc
  nameWithType: CommonDialog.HookProc
- uid: System.Windows.Forms.CommonDialog.OnHelpRequest*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: OnHelpRequest
  nameWithType: CommonDialog.OnHelpRequest
- uid: System.Windows.Forms.CommonDialog.OwnerWndProc*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: OwnerWndProc
  nameWithType: CommonDialog.OwnerWndProc
- uid: System.Windows.Forms.CommonDialog.Reset*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: Reset
  nameWithType: CommonDialog.Reset
- uid: System.Windows.Forms.CommonDialog.RunDialog*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: RunDialog
  nameWithType: CommonDialog.RunDialog
- uid: System.Windows.Forms.CommonDialog.ShowDialog*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: ShowDialog
  nameWithType: CommonDialog.ShowDialog
- uid: System.Windows.Forms.CommonDialog.Tag*
  parent: System.Windows.Forms.CommonDialog
  isExternal: false
  name: Tag
  nameWithType: CommonDialog.Tag
