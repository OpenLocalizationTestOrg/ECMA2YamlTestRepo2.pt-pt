### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignSurfaceManager
  id: DesignSurfaceManager
  children:
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  - System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  - System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  langs:
  - csharp
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager
  fullName: System.ComponentModel.Design.DesignSurfaceManager
  type: Class
  summary: "Manages a collection of <xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;></xref> objects."
  remarks: "The DesignSurfaceManager class is designed to be a container of <xref:System.ComponentModel.Design.DesignSurface> objects. It provides common services that handle event routing between designers, property windows, and other global objects. Using DesignSurfaceManager is optional, but it is recommended if you intend to have several designer windows.       The DesignSurfaceManager class provides several design-time services automatically. You can override each of these services by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> property. All services added to the service container that implement the <xref:System.IDisposable> interface are disposed when the design surface manager is disposed. The DesignSurfaceManager class provides the <xref:System.ComponentModel.Design.IDesignerEventService> interface as the default service. <xref:System.ComponentModel.Design.IDesignerEventService> provides a global eventing mechanism for designer events. With this mechanism, an application is informed when a designer becomes active. The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class DesignSurfaceManager : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref> class."
  syntax:
    content: public DesignSurfaceManager ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref> class."
  syntax:
    content: public DesignSurfaceManager (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager."
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  id: ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets or sets the active designer."
  remarks: "The ActiveDesignSurface property should be set by the designer&quot;s user interface whenever a designer becomes the active window. The default implementation of this property works with the default implementation of the <xref:System.ComponentModel.Design.IDesignerEventService> interface to notify interested parties that a new designer is now active. If you provide your own implementation of <xref:System.ComponentModel.Design.IDesignerEventService>, you should override this property to notify your service appropriately. This property can be set to `null`, indicating that no designer is active."
  syntax:
    content: public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "The active designer."
  overload: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  id: ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Occurs when the currently active designer changes."
  syntax:
    content: public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;
    return:
      type: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  id: CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Creates an instance of a design surface."
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "A new design surface instance."
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  id: CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Creates an instance of a design surface."
  remarks: "If you want to conveniently add additional per-designer services, use the `parentProvider` parameter to provide a service provider for this design surface. The CreateDesignSurface method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <xref:System.ComponentModel.Design.DesignSurfaceManager> itself. The CreateDesignSurface method then passes this service provider into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> method.       After <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> returns the design surface, the CreateDesignSurface method tries to obtain the <xref:System.ComponentModel.Design.IDesignerEventService>. If it is present, and if it is the instance of the service that <xref:System.ComponentModel.Design.DesignSurfaceManager> provided by default, the CreateDesignSurface method raises the <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> event."
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*> method."
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "A new design surface instance."
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentProvider</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  id: CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Implementation that creates the design surface."
  remarks: "The CreateDesignSurfaceCore method is called by both <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> methods. It is the implementation that actually creates the design surface. The default implementation just returns a new <xref:System.ComponentModel.Design.DesignSurface>. You may override this method to provide a custom object that derives from the <xref:System.ComponentModel.Design.DesignSurface> class."
  syntax:
    content: protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "A service provider to pass to the design surface. This is either an instance of <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref> or an object that implements <xref:System.IServiceProvider>, and represents a merge between the service provider of the <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref> class and an externally passed provider."
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "A new design surface instance."
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  id: DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Occurs when a designer is created."
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  id: DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Occurs when a designer is disposed."
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  id: DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets a collection of design surfaces."
  remarks: "The DesignSurfaces property is implemented directly on top of <xref:System.ComponentModel.Design.IDesignerEventService>, so if you provide your own implementation of that service, this property uses your implementation."
  syntax:
    content: public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }
    return:
      type: System.ComponentModel.Design.DesignSurfaceCollection
      description: "A collection of design surfaces that are currently hosted by the design surface manager."
  overload: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Releases the resources used by the <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>."
  remarks: "The public Dispose method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.      > [!NOTE] >  Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>. If you need to call <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, you must add a finalizer yourself."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref> and optionally releases the managed resources."
  remarks: "The public <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern. Calling this method destroys the design surface manager. It also disposes the service container, which causes all services that implement <xref:System.IDisposable> to also be disposed. The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.      > [!NOTE] >  Because <xref:System.ComponentModel.Design.DesignSurfaceManager> does not have any native code to clean up, it does not have a finalizer that calls Dispose. If you need to call Dispose, you must add a finalizer yourself.       This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurfaceManager> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets a service in the design surface manager’s service container."
  remarks: "The GetService method forwards to any service provider that was given to the design surface manager at construction time."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "The service type to retrieve."
    return:
      type: System.Object
      description: "An object that implements, or is a derived class of, the given service type; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the service does not exist in the service container."
  overload: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  id: SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Occurs when the global selection changes."
  remarks: "This event is raised when the active designer&quot;s selection of component set changes. This is mapped through the <xref:System.ComponentModel.Design.IDesignerEventService> interface."
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  id: ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets the design surface manager&quot;s ServiceContainer."
  syntax:
    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }
    return:
      type: System.ComponentModel.Design.ServiceContainer
      description: "The design surface manager&quot;s ServiceContainer."
  overload: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurface
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurface
  nameWithType: DesignSurface
  fullName: System.ComponentModel.Design.DesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
- uid: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ActiveDesignSurfaceChangedEventHandler
  nameWithType: ActiveDesignSurfaceChangedEventHandler
  fullName: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
- uid: System.ComponentModel.Design.DesignSurfaceEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceEventHandler
  nameWithType: DesignSurfaceEventHandler
  fullName: System.ComponentModel.Design.DesignSurfaceEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceCollection
  nameWithType: DesignSurfaceCollection
  fullName: System.ComponentModel.Design.DesignSurfaceCollection
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager.DesignSurfaceManager
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface
  nameWithType: DesignSurfaceManager.CreateDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose
  nameWithType: DesignSurfaceManager.Dispose
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService
  nameWithType: DesignSurfaceManager.GetService
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
