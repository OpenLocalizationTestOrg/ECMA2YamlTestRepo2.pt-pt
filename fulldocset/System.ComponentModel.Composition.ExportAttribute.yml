### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ExportAttribute
  id: ExportAttribute
  children:
  - System.ComponentModel.Composition.ExportAttribute.#ctor
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ExportAttribute.ContractName
  - System.ComponentModel.Composition.ExportAttribute.ContractType
  langs:
  - csharp
  name: ExportAttribute
  nameWithType: ExportAttribute
  fullName: System.ComponentModel.Composition.ExportAttribute
  type: Class
  summary: "Specifies that a type, property, field, or method provides a particular export."
  remarks: "In the Attributed Programming Model, the ExportAttribute declares that a part exports, or provides to the composition container, an object that fulfills a particular contract. During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.       The ExportAttribute can decorate either an entire class, or a property, field, or method of a class. If the entire class is decorated, an instance of the class is the exported object. If a member of a class is decorated, the exported object will be the value of the decorated member.       Whether or not a contract matches is determined primarily by the contract name and the contract type. For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>."
  example:
  - "The following example shows three classes decorated with the ExportAttribute, and three imports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)]

      public class ExportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref> class, exporting the type or member marked with this attribute under the default contract name."
  remarks: "The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.       Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ExportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref> class, exporting the type or member marked with this attribute under the specified contract name."
  remarks: "The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.       Methods marked with this attribute must specify a contract name or a type by using either ExportAttribute or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ExportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "The contract name that is used to export the type or member marked with this attribute, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string (&quot;&quot;) to use the default contract name."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref> class, exporting the type or member marked with this attribute under a contract name derived from the specified type."
  remarks: "The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.       The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.       Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or ExportAttribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ExportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to use the default contract name."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;></xref> class, exporting the specified type under the specified contract name."
  syntax:
    content: public ExportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "The contract name that is used to export the type or member marked with this attribute, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string (&quot;&quot;) to use the default contract name."
    - id: contractType
      type: System.Type
      description: "The type to export."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets the contract name that is used to export the type or member marked with this attribute."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "The contract name that is used to export the type or member marked with this attribute. The default value is an empty string (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets the contract type that is exported by the member that this attribute is attached to."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "The type of export that is be provided. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, which means that the type will be obtained by looking at the type on the member that this export is attached to."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute
  nameWithType: ExportAttribute.ExportAttribute
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
