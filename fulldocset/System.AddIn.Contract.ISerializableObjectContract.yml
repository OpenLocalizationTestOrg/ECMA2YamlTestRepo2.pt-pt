### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.ISerializableObjectContract
  id: ISerializableObjectContract
  children:
  - System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName
  - System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData
  langs:
  - csharp
  name: ISerializableObjectContract
  nameWithType: ISerializableObjectContract
  fullName: System.AddIn.Contract.ISerializableObjectContract
  type: Interface
  summary: "Defines a contract that provides information about a serializable object."
  syntax:
    content: 'public interface ISerializableObjectContract : System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract'
  implements:
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.ISerializableObjectContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: ISerializableObjectContract.GetCanonicalName()
  fullName: System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Returns the canonical name of the type of the object that this <see cref=&quot;T:System.AddIn.Contract.ISerializableObjectContract&quot;></see> describes."
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData
  id: GetSerializableObjectData
  parent: System.AddIn.Contract.ISerializableObjectContract
  langs:
  - csharp
  name: GetSerializableObjectData()
  nameWithType: ISerializableObjectContract.GetSerializableObjectData()
  fullName: System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Returns data that can be used to help deserialize the object that this <see cref=&quot;T:System.AddIn.Contract.ISerializableObjectContract&quot;></see> describes."
  syntax:
    content: public System.AddIn.Contract.SerializableObjectData GetSerializableObjectData ();
    parameters: []
    return:
      type: System.AddIn.Contract.SerializableObjectData
      description: "To be added."
  overload: System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName
  parent: System.AddIn.Contract.ISerializableObjectContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: ISerializableObjectContract.GetCanonicalName()
  fullName: System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData
  parent: System.AddIn.Contract.ISerializableObjectContract
  isExternal: false
  name: GetSerializableObjectData()
  nameWithType: ISerializableObjectContract.GetSerializableObjectData()
  fullName: System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData()
- uid: System.AddIn.Contract.SerializableObjectData
  parent: System.AddIn.Contract
  isExternal: false
  name: SerializableObjectData
  nameWithType: SerializableObjectData
  fullName: System.AddIn.Contract.SerializableObjectData
- uid: System.AddIn.Contract.ISerializableObjectContract.GetCanonicalName*
  parent: System.AddIn.Contract.ISerializableObjectContract
  isExternal: false
  name: GetCanonicalName
  nameWithType: ISerializableObjectContract.GetCanonicalName
- uid: System.AddIn.Contract.ISerializableObjectContract.GetSerializableObjectData*
  parent: System.AddIn.Contract.ISerializableObjectContract
  isExternal: false
  name: GetSerializableObjectData
  nameWithType: ISerializableObjectContract.GetSerializableObjectData
