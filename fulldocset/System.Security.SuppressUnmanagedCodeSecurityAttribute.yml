### YamlMime:ManagedReference
items:
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute
  id: SuppressUnmanagedCodeSecurityAttribute
  children:
  - System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  langs:
  - csharp
  name: SuppressUnmanagedCodeSecurityAttribute
  nameWithType: SuppressUnmanagedCodeSecurityAttribute
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute
  type: Class
  summary: "Allows managed code to call into unmanaged code without a stack walk. This class cannot be inherited."
  remarks: "> [!CAUTION] >  Use this attribute with extreme care. Incorrect use can create security weaknesses.       This attribute can be applied to methods that want to call into native code without incurring the performance loss of a run-time security check when doing so. The stack walk performed when calling unmanaged code is omitted at run time, resulting in substantial performance savings. Using this attribute in a class applies it to all contained methods.       Generally, whenever managed code calls into unmanaged code (by PInvoke or COM interop into native code), there is a demand for the `UnmanagedCode` permission to ensure all callers have the necessary permission to allow this. By applying this explicit attribute, developers can suppress the demand at run time. The developer must take responsibility for assuring that the transition into unmanaged code is sufficiently protected by other means. The demand for the `UnmanagedCode` permission will still occur at link time. For example, if function A calls function B and function B is marked with SuppressUnmanagedCodeSecurityAttribute, function A will be checked for unmanaged code permission during just-in-time compilation, but not subsequently during run time.       This attribute is only effective when applied to PInvoke methods (or classes that contain PInvoke methods) or the definition of an interface through which interop calls will be made. It will be ignored in all other contexts.       This attribute is useful for implementing a class that provides access to system resources through unmanaged code. Code that does not have permission to access unmanaged code can call a class with this attribute to access unmanaged code. This is only safe if the writer of the class with this attribute has programmed the class to be secure. If not, this attribute is dangerous and can allow the code that uses it to be misused.       This is not a declarative security attribute, but a regular attribute (it derives from <xref:System.Attribute>, not <xref:System.Security.Permissions.SecurityAttribute>)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  id: '#ctor'
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  langs:
  - csharp
  name: SuppressUnmanagedCodeSecurityAttribute()
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.SuppressUnmanagedCodeSecurityAttribute&quot;></xref> class."
  remarks: "The default constructor initializes any fields to their default values."
  syntax:
    content: public SuppressUnmanagedCodeSecurityAttribute ();
    parameters: []
  overload: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  isExternal: false
  name: SuppressUnmanagedCodeSecurityAttribute()
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
  fullName: System.Security.SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute()
- uid: System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor*
  parent: System.Security.SuppressUnmanagedCodeSecurityAttribute
  isExternal: false
  name: SuppressUnmanagedCodeSecurityAttribute
  nameWithType: SuppressUnmanagedCodeSecurityAttribute.SuppressUnmanagedCodeSecurityAttribute
