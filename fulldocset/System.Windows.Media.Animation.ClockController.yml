### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.ClockController
  id: ClockController
  children:
  - System.Windows.Media.Animation.ClockController.Begin
  - System.Windows.Media.Animation.ClockController.Clock
  - System.Windows.Media.Animation.ClockController.Pause
  - System.Windows.Media.Animation.ClockController.Remove
  - System.Windows.Media.Animation.ClockController.Resume
  - System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  - System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  - System.Windows.Media.Animation.ClockController.SkipToFill
  - System.Windows.Media.Animation.ClockController.SpeedRatio
  - System.Windows.Media.Animation.ClockController.Stop
  langs:
  - csharp
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
  type: Class
  summary: "Interactively controls a <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>."
  remarks: "Use a ClockController to interactively begin, pause, resume, seek, skip, stop, and remove a <xref:System.Windows.Media.Animation.Clock>. You can only interactively control root-level clocks."
  syntax:
    content: 'public sealed class ClockController : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Begin
  id: Begin
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Begin()
  nameWithType: ClockController.Begin()
  fullName: System.Windows.Media.Animation.ClockController.Begin()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Sets the target <xref:System.Windows.Media.Animation.ClockController.Clock*> to begin at the next tick."
  remarks: "This method causes the target <xref:System.Windows.Media.Animation.Clock> to behave as though its <xref:System.Windows.Media.Animation.Timeline> object&quot;s <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> were set to the time of the next tick. The timeline&quot;s actual <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> setting is ignored (but not changed).       This method changes the target clock&quot;s <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState>. The Begin method does not resume a paused clock.       This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events will also not be raised until then. Calling this method triggers the <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> and <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> events."
  syntax:
    content: public void Begin ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Begin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Clock
  id: Clock
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Clock
  nameWithType: ClockController.Clock
  fullName: System.Windows.Media.Animation.ClockController.Clock
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Gets the <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> controlled by this <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref>."
  syntax:
    content: public System.Windows.Media.Animation.Clock Clock { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "The <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> controlled by this <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref>."
  overload: System.Windows.Media.Animation.ClockController.Clock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Pause
  id: Pause
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Pause()
  nameWithType: ClockController.Pause()
  fullName: System.Windows.Media.Animation.ClockController.Pause()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Stops the target <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> from progressing."
  remarks: "You can pause a <xref:System.Windows.Media.Animation.Clock> regardless of its current state, and pausing a clock does not change its current state. A clock can be paused while <xref:System.Windows.Media.Animation.ClockState>, <xref:System.Windows.Media.Animation.ClockState>, or <xref:System.Windows.Media.Animation.ClockState>. The only way to unpause a clock is by using the <xref:System.Windows.Media.Animation.ClockController.Resume%2A> method. Pausing a clock implicitly pauses its children.       Calling this method when the target clock is already paused has no effect.       Pausing a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."
  syntax:
    content: public void Pause ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Pause*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Remove
  id: Remove
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Remove()
  nameWithType: ClockController.Remove()
  fullName: System.Windows.Media.Animation.ClockController.Remove()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Removes the <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> associated with this <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref> from the properties it animates. The clock and its child clocks will no longer affect these properties."
  remarks: "This method triggers the <xref:System.Windows.Media.Animation.Clock.RemoveRequested> event."
  example:
  - "The following example shows how to remove and otherwise interactively control a clock.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void Remove ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Resume
  id: Resume
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Resume()
  nameWithType: ClockController.Resume()
  fullName: System.Windows.Media.Animation.ClockController.Resume()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Enables a <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> that was previously paused to resume progressing."
  remarks: "You can pause or resume a <xref:System.Windows.Media.Animation.Clock> regardless of its current state, and pausing or resuming a clock does not change its current state. A clock can be paused while <xref:System.Windows.Media.Animation.ClockState>, <xref:System.Windows.Media.Animation.ClockState>, or <xref:System.Windows.Media.Animation.ClockState>. The only way to resume a paused clock is by using the Resume method. Resuming a clock implicitly resumes its children. Calling this method on a clock that is not paused has no effect.       Resuming a paused clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event."
  syntax:
    content: public void Resume ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Resume*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  id: Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Seek(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.Seek(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.Seek(TimeSpan,TimeSeekOrigin)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Seeks the target <xref:System.Windows.Media.Animation.ClockController.Clock*> by the specified amount when the next tick occurs. If the target clock is stopped, seeking makes it active again."
  remarks: "Seek operations do not take the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings of this clock&quot;s timeline into account: the clock is treated as though its timeline has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.       This method changes the clock&quot;s <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState>. This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events also will not be raised until then.       Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events.       If the target clock has children, their current time is updated accordingly."
  example:
  - "The following example shows how to seek using a <xref:System.Windows.Media.Animation.ClockController>.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "The seek offset, measured in the target clock&quot;s time. This offset is relative to the clock&quot;s <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref> or <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>, depending on the value of `origin`."
    - id: origin
      type: System.Windows.Media.Animation.TimeSeekOrigin
      description: "A value that indicates whether the specified offset is relative to the target clock&quot;s <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref> or <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>."
  overload: System.Windows.Media.Animation.ClockController.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  id: SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Seeks the target <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> by the specified amount immediately. If the target clock is stopped, seeking makes it active again."
  remarks: "Seek operations do not take the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> or <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> settings of this clock&quot;s timeline into account: the clock is treated as though its timeline has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 and no <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.       SeekAlignedToLastTick aligns the seeked time of the clock with the last clock tick. Values are immediately updated to reflect the changes due to SeekAlignedToLastTick, even though the screen will not reflect these changes until the screen updates.       If the target clock has children, their current time is updated accordingly.       This method changes the clock&quot;s <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.ClockState>.       Seeking a storyboard triggers the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events."
  example:
  - "The following example demonstrates both the <xref:System.Windows.Media.Animation.ClockController.Seek%2A> and SeekAlignedToLastTick methods of a <xref:System.Windows.Media.Animation.ClockController>.  \n  \n [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/visualbasic/clockcontroller_procedural_snip/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]\n [!code-cs[ClockController_procedural_snip#ClockControllerSeekExample](~/add/codesnippet/csharp/ClockController_procedural_snip/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]"
  syntax:
    content: public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "The seek offset, measured in the target clock&quot;s time. This offset is relative to the clock&quot;s <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref> or <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>, depending on the value of `origin`."
    - id: origin
      type: System.Windows.Media.Animation.TimeSeekOrigin
      description: "A value that indicates whether the specified offset is relative to the target clock&quot;s <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref> or <xref href=&quot;System.Windows.Media.Animation.TimeSeekOrigin&quot;></xref>."
  overload: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SkipToFill
  id: SkipToFill
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SkipToFill()
  nameWithType: ClockController.SkipToFill()
  fullName: System.Windows.Media.Animation.ClockController.SkipToFill()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Advances the current time of the target <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> to the end of its active period."
  remarks: "This method advances the target clock&quot;s current time to the end of its active period; the clock&quot;s behavior at this point is specified by the <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting of its <xref:System.Windows.Media.Animation.Timeline>. If the timeline&quot;s <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property is set to <xref:System.Windows.Media.Animation.FillBehavior>, the clock fills; if the property is set to <xref:System.Windows.Media.Animation.FillBehavior>, the clock stops.       This method has an effect only if the target clock&quot;s <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> is <xref:System.Windows.Media.Animation.ClockState>.       This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events also will not be raised until then.       Advancing a storyboard to its fill period triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events."
  syntax:
    content: public void SkipToFill ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.SkipToFill*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
  fullName: System.Windows.Media.Animation.ClockController.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Gets or sets the interactive speed of the target <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>."
  remarks: "Setting this property has no effect until the next tick. If you set this property and then get its value before the next tick occurs, you&quot;ll get the old value. This property will return the new value after the next tick.       Setting this property does not change the value of the underlying timeline&quot;s <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.       Setting this property triggers the target clock&quot;s <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> event."
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "A finite value greater than zero that describes the interactive speed of the target clock. This value is multiplied against the value of the <xref:System.Windows.Media.Animation.Timeline.SpeedRatio*> of the clock&quot;s <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>. For example, if the timeline&quot;s <xref:System.Windows.Media.Animation.Timeline.SpeedRatio*> is 0.5 and the <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;></xref> object&quot;s SpeedRatio is 3.0, the timeline moves at 1.5 times normal speed (0.5 * 3.0). The default value is 1.0."
  overload: System.Windows.Media.Animation.ClockController.SpeedRatio*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.ClockController.Stop
  id: Stop
  parent: System.Windows.Media.Animation.ClockController
  langs:
  - csharp
  name: Stop()
  nameWithType: ClockController.Stop()
  fullName: System.Windows.Media.Animation.ClockController.Stop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Stops the target <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>."
  remarks: "This method changes the target clock&quot;s <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> to <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.       A <xref:System.Windows.Media.Animation.Clock.Stopped%2A> clock can be restarted by using the <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, or <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> method.       This method has no effect on the timing tree until the next time a tick is processed. As a side-effect, the appropriate events also will not be raised until then.       Stopping a clock triggers the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> and <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> events, but not the <xref:System.Windows.Media.Animation.Clock.Completed> event."
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Media.Animation.ClockController.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.ClockController.Begin
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Begin()
  nameWithType: ClockController.Begin()
  fullName: System.Windows.Media.Animation.ClockController.Begin()
- uid: System.Windows.Media.Animation.ClockController.Clock
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Clock
  nameWithType: ClockController.Clock
  fullName: System.Windows.Media.Animation.ClockController.Clock
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.ClockController.Pause
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Pause()
  nameWithType: ClockController.Pause()
  fullName: System.Windows.Media.Animation.ClockController.Pause()
- uid: System.Windows.Media.Animation.ClockController.Remove
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Remove()
  nameWithType: ClockController.Remove()
  fullName: System.Windows.Media.Animation.ClockController.Remove()
- uid: System.Windows.Media.Animation.ClockController.Resume
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Resume()
  nameWithType: ClockController.Resume()
  fullName: System.Windows.Media.Animation.ClockController.Resume()
- uid: System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Seek(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.Seek(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.Seek(TimeSpan,TimeSeekOrigin)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.TimeSeekOrigin
  parent: System.Windows.Media.Animation
  isExternal: false
  name: TimeSeekOrigin
  nameWithType: TimeSeekOrigin
  fullName: System.Windows.Media.Animation.TimeSeekOrigin
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  nameWithType: ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
  fullName: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(TimeSpan,TimeSeekOrigin)
- uid: System.Windows.Media.Animation.ClockController.SkipToFill
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SkipToFill()
  nameWithType: ClockController.SkipToFill()
  fullName: System.Windows.Media.Animation.ClockController.SkipToFill()
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
  fullName: System.Windows.Media.Animation.ClockController.SpeedRatio
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.ClockController.Stop
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Stop()
  nameWithType: ClockController.Stop()
  fullName: System.Windows.Media.Animation.ClockController.Stop()
- uid: System.Windows.Media.Animation.ClockController.Begin*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Begin
  nameWithType: ClockController.Begin
- uid: System.Windows.Media.Animation.ClockController.Clock*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Clock
  nameWithType: ClockController.Clock
- uid: System.Windows.Media.Animation.ClockController.Pause*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Pause
  nameWithType: ClockController.Pause
- uid: System.Windows.Media.Animation.ClockController.Remove*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Remove
  nameWithType: ClockController.Remove
- uid: System.Windows.Media.Animation.ClockController.Resume*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Resume
  nameWithType: ClockController.Resume
- uid: System.Windows.Media.Animation.ClockController.Seek*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Seek
  nameWithType: ClockController.Seek
- uid: System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SeekAlignedToLastTick
  nameWithType: ClockController.SeekAlignedToLastTick
- uid: System.Windows.Media.Animation.ClockController.SkipToFill*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SkipToFill
  nameWithType: ClockController.SkipToFill
- uid: System.Windows.Media.Animation.ClockController.SpeedRatio*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: SpeedRatio
  nameWithType: ClockController.SpeedRatio
- uid: System.Windows.Media.Animation.ClockController.Stop*
  parent: System.Windows.Media.Animation.ClockController
  isExternal: false
  name: Stop
  nameWithType: ClockController.Stop
