### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.ITransformProvider
  id: ITransformProvider
  children:
  - System.Windows.Automation.Provider.ITransformProvider.CanMove
  - System.Windows.Automation.Provider.ITransformProvider.CanResize
  - System.Windows.Automation.Provider.ITransformProvider.CanRotate
  - System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)
  - System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)
  - System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)
  langs:
  - csharp
  name: ITransformProvider
  nameWithType: ITransformProvider
  fullName: System.Windows.Automation.Provider.ITransformProvider
  type: Interface
  summary: "Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space."
  remarks: "Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.       Support for this control pattern is not limited to objects on the desktop. This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface ITransformProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITransformProvider.CanMove
  id: CanMove
  parent: System.Windows.Automation.Provider.ITransformProvider
  langs:
  - csharp
  name: CanMove
  nameWithType: ITransformProvider.CanMove
  fullName: System.Windows.Automation.Provider.ITransformProvider.CanMove
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Gets a value that specifies whether the control can be moved."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that can be moved.  \n  \n [!code-vb[UIAITransformProvider_snip#CanMove](~/add/codesnippet/visualbasic/uiaitransformprovider_snip/transformfragment.vb#canmove)]\n [!code-cs[UIAITransformProvider_snip#CanMove](~/add/codesnippet/csharp/UIAITransformProvider_snip/TransformFragment.cs#canmove)]"
  syntax:
    content: public bool CanMove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the element can be moved; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Automation.Provider.ITransformProvider.CanMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITransformProvider.CanResize
  id: CanResize
  parent: System.Windows.Automation.Provider.ITransformProvider
  langs:
  - csharp
  name: CanResize
  nameWithType: ITransformProvider.CanResize
  fullName: System.Windows.Automation.Provider.ITransformProvider.CanResize
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] element can be resized."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that can be resized.  \n  \n [!code-vb[UIAITransformProvider_snip#CanResize](~/add/codesnippet/visualbasic/uiaitransformprovider_snip/transformfragment.vb#canresize)]\n [!code-cs[UIAITransformProvider_snip#CanResize](~/add/codesnippet/csharp/UIAITransformProvider_snip/TransformFragment.cs#canresize)]"
  syntax:
    content: public bool CanResize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the element can be resized; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Automation.Provider.ITransformProvider.CanResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITransformProvider.CanRotate
  id: CanRotate
  parent: System.Windows.Automation.Provider.ITransformProvider
  langs:
  - csharp
  name: CanRotate
  nameWithType: ITransformProvider.CanRotate
  fullName: System.Windows.Automation.Provider.ITransformProvider.CanRotate
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Gets a value that specifies whether the control can be rotated."
  remarks: ''
  example:
  - "The following example shows an implementation of this method for a control that cannot be rotated.  \n  \n [!code-vb[UIAITransformProvider_snip#CanRotate](~/add/codesnippet/visualbasic/uiaitransformprovider_snip/transformfragment.vb#canrotate)]\n [!code-cs[UIAITransformProvider_snip#CanRotate](~/add/codesnippet/csharp/UIAITransformProvider_snip/TransformFragment.cs#canrotate)]"
  syntax:
    content: public bool CanRotate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the element can be rotated; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Automation.Provider.ITransformProvider.CanRotate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)
  id: Move(System.Double,System.Double)
  parent: System.Windows.Automation.Provider.ITransformProvider
  langs:
  - csharp
  name: Move(Double,Double)
  nameWithType: ITransformProvider.Move(Double,Double)
  fullName: System.Windows.Automation.Provider.ITransformProvider.Move(Double,Double)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Moves the control."
  remarks: "An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&quot;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries."
  example:
  - "The following example shows one possible implementation of this method for a custom control that can be moved.  \n  \n [!code-vb[UIAITransformProvider_snip#Move](~/add/codesnippet/visualbasic/uiaitransformprovider_snip/transformfragment.vb#move)]\n [!code-cs[UIAITransformProvider_snip#Move](~/add/codesnippet/csharp/UIAITransformProvider_snip/TransformFragment.cs#move)]"
  syntax:
    content: public void Move (double x, double y);
    parameters:
    - id: x
      type: System.Double
      description: "Absolute screen coordinates of the left side of the control."
    - id: y
      type: System.Double
      description: "Absolute screen coordinates of the top of the control."
  overload: System.Windows.Automation.Provider.ITransformProvider.Move*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "If the <xref:System.Windows.Automation.Provider.ITransformProvider.CanMove*> property is false."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)
  id: Resize(System.Double,System.Double)
  parent: System.Windows.Automation.Provider.ITransformProvider
  langs:
  - csharp
  name: Resize(Double,Double)
  nameWithType: ITransformProvider.Resize(Double,Double)
  fullName: System.Windows.Automation.Provider.ITransformProvider.Resize(Double,Double)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Resizes the control."
  remarks: "When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.       An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&quot;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries."
  example:
  - "The following example shows one possible implementation of this method for a custom control that can be resized.  \n  \n [!code-vb[UIAITransformProvider_snip#Resize](~/add/codesnippet/visualbasic/uiaitransformprovider_snip/transformfragment.vb#resize)]\n [!code-cs[UIAITransformProvider_snip#Resize](~/add/codesnippet/csharp/UIAITransformProvider_snip/TransformFragment.cs#resize)]"
  syntax:
    content: public void Resize (double width, double height);
    parameters:
    - id: width
      type: System.Double
      description: "The new width of the window, in pixels."
    - id: height
      type: System.Double
      description: "The new height of the window, in pixels."
  overload: System.Windows.Automation.Provider.ITransformProvider.Resize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "If the <xref:System.Windows.Automation.Provider.ITransformProvider.CanResize*> property is false."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)
  id: Rotate(System.Double)
  parent: System.Windows.Automation.Provider.ITransformProvider
  langs:
  - csharp
  name: Rotate(Double)
  nameWithType: ITransformProvider.Rotate(Double)
  fullName: System.Windows.Automation.Provider.ITransformProvider.Rotate(Double)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Rotates the control."
  remarks: "An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&quot;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries."
  example:
  - "The following example shows one possible implementation of this method for a custom control that cannot be rotated.  \n  \n [!code-vb[UIAITransformProvider_snip#Rotate](~/add/codesnippet/visualbasic/uiaitransformprovider_snip/transformfragment.vb#rotate)]\n [!code-cs[UIAITransformProvider_snip#Rotate](~/add/codesnippet/csharp/UIAITransformProvider_snip/TransformFragment.cs#rotate)]"
  syntax:
    content: public void Rotate (double degrees);
    parameters:
    - id: degrees
      type: System.Double
      description: "The number of degrees to rotate the control. A positive number rotates clockwise; a negative number rotates counterclockwise."
  overload: System.Windows.Automation.Provider.ITransformProvider.Rotate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "If the <xref:System.Windows.Automation.Provider.ITransformProvider.CanRotate*> property is false."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.Provider.ITransformProvider.CanMove
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: CanMove
  nameWithType: ITransformProvider.CanMove
  fullName: System.Windows.Automation.Provider.ITransformProvider.CanMove
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.ITransformProvider.CanResize
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: CanResize
  nameWithType: ITransformProvider.CanResize
  fullName: System.Windows.Automation.Provider.ITransformProvider.CanResize
- uid: System.Windows.Automation.Provider.ITransformProvider.CanRotate
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: CanRotate
  nameWithType: ITransformProvider.CanRotate
  fullName: System.Windows.Automation.Provider.ITransformProvider.CanRotate
- uid: System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: Move(Double,Double)
  nameWithType: ITransformProvider.Move(Double,Double)
  fullName: System.Windows.Automation.Provider.ITransformProvider.Move(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: Resize(Double,Double)
  nameWithType: ITransformProvider.Resize(Double,Double)
  fullName: System.Windows.Automation.Provider.ITransformProvider.Resize(Double,Double)
- uid: System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: Rotate(Double)
  nameWithType: ITransformProvider.Rotate(Double)
  fullName: System.Windows.Automation.Provider.ITransformProvider.Rotate(Double)
- uid: System.Windows.Automation.Provider.ITransformProvider.CanMove*
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: CanMove
  nameWithType: ITransformProvider.CanMove
- uid: System.Windows.Automation.Provider.ITransformProvider.CanResize*
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: CanResize
  nameWithType: ITransformProvider.CanResize
- uid: System.Windows.Automation.Provider.ITransformProvider.CanRotate*
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: CanRotate
  nameWithType: ITransformProvider.CanRotate
- uid: System.Windows.Automation.Provider.ITransformProvider.Move*
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: Move
  nameWithType: ITransformProvider.Move
- uid: System.Windows.Automation.Provider.ITransformProvider.Resize*
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: Resize
  nameWithType: ITransformProvider.Resize
- uid: System.Windows.Automation.Provider.ITransformProvider.Rotate*
  parent: System.Windows.Automation.Provider.ITransformProvider
  isExternal: false
  name: Rotate
  nameWithType: ITransformProvider.Rotate
