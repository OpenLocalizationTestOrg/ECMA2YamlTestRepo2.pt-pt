### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.IRelatedEnd
  id: IRelatedEnd
  children:
  - System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  - System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  - System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.IRelatedEnd.Load
  - System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  - System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  langs:
  - csharp
  name: IRelatedEnd
  nameWithType: IRelatedEnd
  fullName: System.Data.Objects.DataClasses.IRelatedEnd
  type: Interface
  summary: "Defines the end of a relationship."
  remarks: "IRelatedEnd defines the requirements for an object that represents an end in an association. This interface is implemented by the <xref:System.Data.Objects.DataClasses.RelatedEnd> class. <xref:System.Data.Objects.DataClasses.RelatedEnd> is the base class for the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes."
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public interface IRelatedEnd
  implements: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Add(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Adds an object to the related end."
  remarks: "The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method adds an object to the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.       When the source object implements <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> and is being tracked in the <xref:System.Data.Objects.ObjectStateManager>, the object being added is also tracked.       The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.       If the related end is an <xref:System.Data.Objects.DataClasses.EntityReference%601> and the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property of the reference is not `null`, this method throws an exception."
  syntax:
    content: public void Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "An object to add to the collection. `entity` must implement <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  id: Add(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Add(Object)
  nameWithType: IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Adds an object to the related end."
  remarks: "Use this method overload for entity classes that do not implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>. Use the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> method for entity classes that do implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.       The Add method adds an object to the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.       The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the Add method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>.       If the related end is an <xref:System.Data.Objects.DataClasses.EntityReference%601> and the <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> property of the reference is not `null`, this method throws an exception."
  syntax:
    content: public void Add (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "An object to add to the collection."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Attach(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Defines a relationship between two attached objects."
  remarks: "The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method is used to define a relationship between two objects that are both attached to the same <xref:System.Data.Objects.ObjectContext> instance.       The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation to define relationships between the attached source object and the object attached to the collection. For more information, see [Attaching and Detaching Objects](http://msdn.microsoft.com/en-us/41d5c1ef-1b78-4502-aa10-7e1438d62d23)."
  syntax:
    content: public void Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "The object being attached. `entity` must implement <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  id: Attach(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Attach(Object)
  nameWithType: IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Defines a relationship between two attached objects."
  remarks: "Use this method overload for entity classes that do not implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>. Use the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> method for entity classes that do implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.       The Attach method is used to define a relationship between two objects that are both attached to the same <xref:System.Data.Objects.ObjectContext> instance.       The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the Attach method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation to define relationships between the attached source object and the object attached to the collection. For more information, see [Attaching and Detaching Objects](http://msdn.microsoft.com/en-us/41d5c1ef-1b78-4502-aa10-7e1438d62d23)."
  syntax:
    content: public void Attach (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "The object being attached."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  id: CreateSourceQuery
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: CreateSourceQuery()
  nameWithType: IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Returns an <xref:System.Collections.IEnumerable> that represents the objects that belong to the related end."
  remarks: "The CreateSourceQuery method is explicitly implemented by the <xref:System.Data.Objects.DataClasses.RelatedEnd> class.  The <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes both override the <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> method to return an <xref:System.Data.Objects.ObjectQuery%601> that, when it is executed, returns the same set of objects that belong to the related end."
  syntax:
    content: public System.Collections.IEnumerable CreateSourceQuery ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "An <xref:System.Collections.IEnumerable> that represents the objects that belong to the related end."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IRelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Returns an <xref:System.Collections.IEnumerator> that iterates through the collection of related objects."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that iterates through the collection of related objects."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  id: IsLoaded
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Gets a value that indicates whether all related objects have been loaded."
  remarks: "The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the IsLoaded method of <xref:System.Data.Objects.DataClasses.IRelatedEnd>. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>.       The <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes inherit from <xref:System.Data.Objects.DataClasses.RelatedEnd>."
  example:
  - '[Defining and Managing Relationships](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)'
  syntax:
    content: public bool IsLoaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the related end contains all the related entities from the database; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load
  id: Load
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Load()
  nameWithType: IRelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Loads the related object or objects into this related end with the default merge option."
  remarks: "The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the Load method of <xref:System.Data.Objects.DataClasses.IRelatedEnd>. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>.       [Load](~/add/includes/ajax-current-ext-md.md) is called to explicitly load related objects from a related end exposed by a navigation property. For more information, see [Loading Related Objects](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).       The <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`."
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: IRelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Loads the related object or objects into the related end with the specified merge option."
  remarks: "The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the Load method. Both the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes override this implementation.       `Load` is called to explicitly load related objects from a related end that is exposed by a navigation property. For more information, see [Loading Related Objects](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).       The Load method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`."
  syntax:
    content: public void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "The <xref href=&quot;System.Data.Objects.MergeOption&quot;></xref> to use when merging objects into an existing &lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  id: RelationshipName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Gets the name of the relationship in which this related end participates."
  remarks: ''
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/en-us/423ec9a7-5464-43b7-a7ef-9f5f000848b5).  \n  \n The following example adds new `SalesOrderHeader` entities to the `Contact` entity. Then it gets all related ends from the `Contact` entity and displays the relationship name, source role name, and target role name for each related end.  \n  \n [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#irelatedend)]\n [!code-cs[DP ObjectServices Concepts#IRelatedEnd](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#irelatedend)]"
  syntax:
    content: public string RelationshipName { get; }
    return:
      type: System.String
      description: "The name of the relationship in which this <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref> is participating. The relationship name is not namespace qualified."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  id: RelationshipSet
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Returns a reference to the metadata for the related end."
  syntax:
    content: public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }
    return:
      type: System.Data.Metadata.Edm.RelationshipSet
      description: "A <xref href=&quot;System.Data.Metadata.Edm.RelationshipSet&quot;></xref> object that contains metadata for the end of a relationship."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  id: Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Remove(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Removes an object from the collection of objects at the related end."
  remarks: "The <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method removes an object from the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.       The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>."
  syntax:
    content: public bool Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);
    parameters:
    - id: entity
      type: System.Data.Objects.DataClasses.IEntityWithRelationships
      description: "The object to remove from the collection. `entity` must implement <xref href=&quot;System.Data.Objects.DataClasses.IEntityWithRelationships&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>entity</code> was successfully removed, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>entity</code> was not part of the <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Removes an object from the collection of objects at the related end."
  remarks: "Use this method overload for entity classes that do not implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>. Use the <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> method for entity classes that do implement <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>.       The Remove method removes an object from the related end. The related end must be an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.       The <xref:System.Data.Objects.DataClasses.RelatedEnd> class explicitly implements the Remove method. The <xref:System.Data.Objects.DataClasses.EntityCollection%601> class uses this implementation. For more information, see <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>."
  syntax:
    content: public bool Remove (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "An object to remove from the collection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>entity</code> was successfully removed; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>entity</code> was not part of the <xref href=&quot;System.Data.Objects.DataClasses.IRelatedEnd&quot;></xref>."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  id: SourceRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Gets the role name at the source end of the relationship."
  remarks: "The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the  SourceRoleName property. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>.       The role name is specified by the `Role` attribute of the `End` element in the association that defines this relationship in the conceptual model. For more information, see [Association Element (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)."
  syntax:
    content: public string SourceRoleName { get; }
    return:
      type: System.String
      description: "The role name at the source end of the relationship."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  id: TargetRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  langs:
  - csharp
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  summary: "Gets the role name at the target end of the relationship."
  remarks: "The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements the TargetRoleName property. For more information, see <xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>.       The role name is specified by the `Role` attribute of the `End` element in the association that defines this relationship in the conceptual model. For more information, see [Association Element (CSDL)](http://msdn.microsoft.com/en-us/c305169a-8af7-432f-9ba7-800a163aed41)."
  syntax:
    content: public string TargetRoleName { get; }
    return:
      type: System.String
      description: "The role name at the target end of the relationship."
  overload: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Add(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IEntityWithRelationships
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: IEntityWithRelationships
  nameWithType: IEntityWithRelationships
  fullName: System.Data.Objects.DataClasses.IEntityWithRelationships
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add(Object)
  nameWithType: IRelatedEnd.Add(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Attach(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach(Object)
  nameWithType: IRelatedEnd.Attach(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Attach(Object)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: CreateSourceQuery()
  nameWithType: IRelatedEnd.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: GetEnumerator()
  nameWithType: IRelatedEnd.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load()
  nameWithType: IRelatedEnd.Load()
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load()
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load(MergeOption)
  nameWithType: IRelatedEnd.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet
- uid: System.Data.Metadata.Edm.RelationshipSet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipSet
  nameWithType: RelationshipSet
  fullName: System.Data.Metadata.Edm.RelationshipSet
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove(IEntityWithRelationships)
  nameWithType: IRelatedEnd.Remove(IEntityWithRelationships)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(IEntityWithRelationships)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove(Object)
  nameWithType: IRelatedEnd.Remove(Object)
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.Remove(Object)
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
  fullName: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Add*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Add
  nameWithType: IRelatedEnd.Add
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Attach*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Attach
  nameWithType: IRelatedEnd.Attach
- uid: System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: CreateSourceQuery
  nameWithType: IRelatedEnd.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: GetEnumerator
  nameWithType: IRelatedEnd.GetEnumerator
- uid: System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: IsLoaded
  nameWithType: IRelatedEnd.IsLoaded
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Load*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Load
  nameWithType: IRelatedEnd.Load
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipName
  nameWithType: IRelatedEnd.RelationshipName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: RelationshipSet
  nameWithType: IRelatedEnd.RelationshipSet
- uid: System.Data.Objects.DataClasses.IRelatedEnd.Remove*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: Remove
  nameWithType: IRelatedEnd.Remove
- uid: System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: SourceRoleName
  nameWithType: IRelatedEnd.SourceRoleName
- uid: System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName*
  parent: System.Data.Objects.DataClasses.IRelatedEnd
  isExternal: false
  name: TargetRoleName
  nameWithType: IRelatedEnd.TargetRoleName
