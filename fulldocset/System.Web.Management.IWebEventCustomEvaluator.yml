### YamlMime:ManagedReference
items:
- uid: System.Web.Management.IWebEventCustomEvaluator
  id: IWebEventCustomEvaluator
  children:
  - System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  langs:
  - csharp
  name: IWebEventCustomEvaluator
  nameWithType: IWebEventCustomEvaluator
  fullName: System.Web.Management.IWebEventCustomEvaluator
  type: Interface
  summary: "Evaluates whether an event should be sent to the related provider for processing."
  remarks: "ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.       This interface allows enabling or disabling the firing of a specific event. This is especially useful when you implement your own custom event and want to control the rate at which it is sent to the related provider for processing.      > [!NOTE] >  This interface does not control how often the event is raised. It only controls how often the event information is sent to the provider for processing."
  example:
  - "The following code example shows how to derive from the IWebEventCustomEvaluator interface when creating a custom event.  \n  \n [!code-cs[System.Web.Management.WebBaseEvent#1](~/add/codesnippet/csharp/t-system.web.management._19_1.cs)]\n [!code-vb[System.Web.Management.WebBaseEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._19_1.vb)]  \n  \n The following is an excerpt of the configuration file that enables ASP.NET to use the <xref:System.Web.Management.IWebEventCustomEvaluator.CanFire%2A> method to decide whether the raised event must be sent to the provider for processing.  \n  \n```  \n<healthMonitoring   \n  heartBeatInterval=\"0\" enabled=\"true\">  \n  \n    <providers>  \n      <add name=\"SampleWebEventProvider\"   \n        type=\"SamplesAspNet.SampleEventProvider, webeventprovider, Version=1.0.1741.20369, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL\" />  \n    </providers>  \n  \n    <profiles>  \n      <add   \n        name=\"Custom\"   \n        minInstances=\"1\"   \n        maxLimit=\"Infinite\"   \n        minInterval=\"00:00:00\"   \n        custom =\"SamplesAspNet.SampleWebRequestEvent,webrequestevent\"   \n        />  \n    </profiles>  \n  \n    <eventMappings>  \n  \n      <add name=\"SampleWebRequestEvent\" type=\"SamplesAspNet.SampleWebRequestEvent,webrequestevent, Version=1.0.1759.20533, Culture=neutral, PublicKeyToken=0d72899b07049076, processorArchitecture=MSIL\" />  \n  \n    </eventMappings>  \n  \n    <rules>  \n      <clear />  \n  \n        <add name=\"Custom Web Request Event\"   \n          eventName=\"SampleWebRequestEvent\"  \n          provider=\"SampleWebEventProvider\" profile=\"Custom\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: public interface IWebEventCustomEvaluator
  implements: []
  platform:
  - net462
- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  id: CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  parent: System.Web.Management.IWebEventCustomEvaluator
  langs:
  - csharp
  name: CanFire(WebBaseEvent,RuleFiringRecord)
  nameWithType: IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
  fullName: System.Web.Management.IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Evaluates whether an event should be raised."
  remarks: "If the custom event evaluator returns `true`, the event is raised and then processed by the associated provider."
  example:
  - "The following code example shows a custom implementation of the CanFire method.  \n  \n [!code-cs[System.Web.Management.WebBaseEvent#22](~/add/codesnippet/csharp/47187ebb-ac4e-45bf-9b77-_1.cs)]\n [!code-vb[System.Web.Management.WebBaseEvent#22](~/add/codesnippet/visualbasic/47187ebb-ac4e-45bf-9b77-_1.vb)]"
  syntax:
    content: public bool CanFire (System.Web.Management.WebBaseEvent raisedEvent, System.Web.Management.RuleFiringRecord record);
    parameters:
    - id: raisedEvent
      type: System.Web.Management.WebBaseEvent
      description: "The event to raise."
    - id: record
      type: System.Web.Management.RuleFiringRecord
      description: "The <xref href=&quot;System.Web.Management.RuleFiringRecord&quot;></xref> containing information about the event."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the event should be raised; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Management.IWebEventCustomEvaluator.CanFire*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)
  parent: System.Web.Management.IWebEventCustomEvaluator
  isExternal: false
  name: CanFire(WebBaseEvent,RuleFiringRecord)
  nameWithType: IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
  fullName: System.Web.Management.IWebEventCustomEvaluator.CanFire(WebBaseEvent,RuleFiringRecord)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.RuleFiringRecord
  parent: System.Web.Management
  isExternal: false
  name: RuleFiringRecord
  nameWithType: RuleFiringRecord
  fullName: System.Web.Management.RuleFiringRecord
- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire*
  parent: System.Web.Management.IWebEventCustomEvaluator
  isExternal: false
  name: CanFire
  nameWithType: IWebEventCustomEvaluator.CanFire
