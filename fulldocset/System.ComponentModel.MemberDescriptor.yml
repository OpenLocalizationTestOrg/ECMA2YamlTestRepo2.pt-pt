### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MemberDescriptor
  id: MemberDescriptor
  children:
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.MemberDescriptor.#ctor(System.String)
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  langs:
  - csharp
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
  type: Class
  summary: "Representa um membro de classe, como uma propriedade ou um evento. Esta é uma classe base abstracta."
  remarks: "MemberDescriptor é a classe base para o <xref:System.ComponentModel.EventDescriptor>e <xref:System.ComponentModel.PropertyDescriptor>classes.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor> O <xref:System.ComponentModel.EventDescriptor>classe fornece uma descrição de um evento e o <xref:System.ComponentModel.PropertyDescriptor>classe fornece uma descrição de uma propriedade.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>       Esta classe define as propriedades e métodos para aceder aos respetivos atributos armazenados. O <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>propriedade obtém a coleção de atributos.</xref:System.ComponentModel.MemberDescriptor.Attributes%2A> O <xref:System.ComponentModel.MemberDescriptor.Category%2A>, <xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A>, <xref:System.ComponentModel.MemberDescriptor.Description%2A>, e <xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A>Propriedades obtêm os valores desses atributos específicos.</xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A> </xref:System.ComponentModel.MemberDescriptor.Description%2A> </xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A> </xref:System.ComponentModel.MemberDescriptor.Category%2A> O <xref:System.ComponentModel.MemberDescriptor.Name%2A>e <xref:System.ComponentModel.MemberDescriptor.DisplayName%2A>propriedades fornecem o nome do membro.</xref:System.ComponentModel.MemberDescriptor.DisplayName%2A> </xref:System.ComponentModel.MemberDescriptor.Name%2A>       O MemberDescriptor também define um <xref:System.ComponentModel.MemberDescriptor.Equals%2A>método para comparar este MemberDescriptor para outro.</xref:System.ComponentModel.MemberDescriptor.Equals%2A>      > [!NOTE] > Normalmente, tem de herdar o <xref:System.ComponentModel.EventDescriptor>e <xref:System.ComponentModel.PropertyDescriptor>classes e não a partir desta classe.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>"
  example:
  - Since most of the usage of this class will fall on the inherited classes <xref:System.ComponentModel.EventDescriptor> and <xref:System.ComponentModel.PropertyDescriptor>, refer to the examples in these classes.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MemberDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe com especificado <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>."
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> que contém o nome do membro e os respetivos atributos."
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe com o nome especificado do membro."
  syntax:
    content: protected MemberDescriptor (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do membro."
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome é uma cadeia vazia (&quot;&quot;) ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe com o nome especificado no <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> e os atributos em ambos os o antigo <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> e <xref:System.Attribute>matriz.</xref:System.Attribute>"
  remarks: "Este construtor acrescenta os atributos na <xref:System.Attribute>matriz de atributos no antigo <xref:System.ComponentModel.MemberDescriptor>.</xref:System.ComponentModel.MemberDescriptor> </xref:System.Attribute>"
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor oldMemberDescriptor, Attribute[] newAttributes);
    parameters:
    - id: oldMemberDescriptor
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> que tem o nome do membro e os respetivos atributos."
    - id: newAttributes
      type: System.Attribute[]
      description: "Uma matriz de <xref:System.Attribute>objetos com os atributos que pretende adicionar o membro.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe com o nome especificado do membro e uma matriz de atributos."
  syntax:
    content: protected MemberDescriptor (string name, Attribute[] attributes);
    parameters:
    - id: name
      type: System.String
      description: "O nome do membro."
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz do tipo <xref:System.Attribute>que contém os atributos de membro.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome é uma cadeia vazia (&quot;&quot;) ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  id: AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém ou define uma matriz de atributos."
  remarks: "Aceder a este membro permite classes derivadas modificar o conjunto predefinido de atributos que são utilizados o <xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>método.</xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>"
  syntax:
    content: protected virtual Attribute[] AttributeArray { get; set; }
    return:
      type: System.Attribute[]
      description: "Uma matriz do tipo <xref:System.Attribute>que contém os atributos deste membro.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.AttributeArray*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém a coleção de atributos para este membro."
  remarks: "Se não houver nenhuma <xref:System.ComponentModel.AttributeCollection>para este membro, esta propriedade chama o <xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>método para criar uma nova <xref:System.ComponentModel.AttributeCollection>utilizando a matriz de <xref:System.Attribute>objetos transmitido a este construtor.</xref:System.Attribute> </xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A> </xref:System.ComponentModel.AttributeCollection>"
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Um <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> que fornece os atributos para este membro ou uma coleção vazia se não existirem não atributos no <xref:System.ComponentModel.MemberDescriptor.AttributeArray*>.</xref:System.ComponentModel.MemberDescriptor.AttributeArray*>"
  overload: System.ComponentModel.MemberDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Category
  id: Category
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o nome da categoria ao qual pertence o membro, conforme especificado no <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>."
  remarks: "Um designer visual pode utilizar este valor da propriedade para apresentar membros em categorias."
  syntax:
    content: public virtual string Category { get; }
    return:
      type: System.String
      description: "O nome da categoria ao qual pertence o membro. Se não houver nenhuma <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>, o nome da categoria está definido para a categoria de predefinição <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  id: CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Cria uma coleção de atributos com a matriz de atributos transmitido a este construtor."
  remarks: "Este método é chamado a partir de <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>propriedade quando não existe nenhum <xref:System.ComponentModel.AttributeCollection>para este membro.</xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.Attributes%2A> Se existirem não atributos na <xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>Esta ação irá devolver <xref:System.ComponentModel.AttributeCollection>.</xref:System.ComponentModel.AttributeCollection> vazio</xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>"
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection CreateAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Um novo <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> que contém o <xref:System.ComponentModel.MemberDescriptor.AttributeArray*>atributos.</xref:System.ComponentModel.MemberDescriptor.AttributeArray*>"
  overload: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Description
  id: Description
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém a descrição do membro, conforme especificado no <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>."
  remarks: "Um designer visual pode utilizar esta descrição para apresentar informações sobre este membro."
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "A descrição do membro. Se não houver nenhuma <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>, o valor da propriedade está definido como predefinição, o que é uma cadeia vazia (&quot;&quot;)."
  overload: System.ComponentModel.MemberDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se este membro deve ser definido apenas no momento da conceção, conforme especificado no <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>."
  remarks: "Se não houver nenhuma <xref:System.ComponentModel.DesignOnlyAttribute>, o valor de retorno é o predefinido, que é `false`.</xref:System.ComponentModel.DesignOnlyAttribute>"
  syntax:
    content: public virtual bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este membro deve ser definido apenas no momento da concepção; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o membro pode ser definido durante o tempo de execução."
  overload: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o nome que pode ser apresentado numa janela, tais como uma janela de propriedades."
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "O nome a apresentar para o membro."
  overload: System.ComponentModel.MemberDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Compara esta instância para o objeto fornecido para ver se são equivalentes."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto de comparação para a instância atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se equivalente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ao substituí-lo de uma classe derivada, adiciona os atributos da classe inheriting a lista especificada de atributos na classe principal."
  remarks: "Atributos duplicados, é mantido o um último adicionado à lista.       O <xref:System.Collections.IList>com os atributos é criada uma vez.</xref:System.Collections.IList> Se existirem atributos duplicados na lista, a primeira instância é guardada; todos os atributos duplicados subsequentes são removidos da lista."
  syntax:
    content: protected virtual void FillAttributes (System.Collections.IList attributeList);
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "Um <xref:System.Collections.IList>que apresenta uma lista de atributos na classe principal.</xref:System.Collections.IList> Inicialmente, está vazio."
  overload: System.ComponentModel.MemberDescriptor.FillAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Localiza o método especificado através de reflexão, procurar apenas os métodos públicos."
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType);
    parameters:
    - id: componentClass
      type: System.Type
      description: "O componente que contém o método."
    - id: name
      type: System.String
      description: "O nome do método a localizar."
    - id: args
      type: System.Type[]
      description: "Uma matriz de parâmetros para o método utilizado para escolher entre os métodos sobrecarregados."
    - id: returnType
      type: System.Type
      description: "O tipo de retorno para o método."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>que representa o método, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o método não foi encontrado.</xref:System.Reflection.MethodInfo>"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Localiza o método especificado através de reflexão, com a opção de procurar apenas os métodos públicos."
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType, bool publicOnly);
    parameters:
    - id: componentClass
      type: System.Type
      description: "O componente que contém o método."
    - id: name
      type: System.String
      description: "O nome do método a localizar."
    - id: args
      type: System.Type[]
      description: "Uma matriz de parâmetros para o método utilizado para escolher entre os métodos sobrecarregados."
    - id: returnType
      type: System.Type
      description: "O tipo de retorno para o método."
    - id: publicOnly
      type: System.Boolean
      description: "Se pretende restringir a pesquisa para métodos públicos."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>que representa o método, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o método não foi encontrado.</xref:System.Reflection.MethodInfo>"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o atual <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o objeto que deve ser utilizado durante a invocação de membros."
  remarks: "Normalmente, o valor de retorno será o mesmo que o `instance` parâmetro. Se o outro objeto foi associado esta instância, ou se a instância for um descritor de tipo personalizado, o método GetInvocationTarget pode devolver um valor diferente."
  syntax:
    content: protected virtual object GetInvocationTarget (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do destino de invocação.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "O destino de invocação potenciais."
    return:
      type: System.Object
      description: "O objeto a ser utilizada durante as invocações de membro."
  overload: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>instance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  id: GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o componente em que pretende invocar um método."
  syntax:
    content: protected static object GetInvokee (Type componentClass, object component);
    parameters:
    - id: componentClass
      type: System.Type
      description: "A <xref:System.Type>que representa o tipo de componente isto <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> está vinculado ao.</xref:System.Type> Por exemplo, se este <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> descreve uma propriedade, este parâmetro deve ser a classe que a propriedade está declarada."
    - id: component
      type: System.Object
      description: "Uma instância do objeto para chamar."
    return:
      type: System.Object
      description: "Uma instância do componente para invocar. Este método devolve um designer visual quando a propriedade está ligada a um designer visual."
  overload: System.ComponentModel.MemberDescriptor.GetInvokee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentClass</code>or <code>component</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  id: GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um site do componente para o componente especificado."
  syntax:
    content: protected static System.ComponentModel.ISite GetSite (object component);
    parameters:
    - id: component
      type: System.Object
      description: "O componente para o qual pretende localizar um site."
    return:
      type: System.ComponentModel.ISite
      description: "O site do componente, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não existir um site."
  overload: System.ComponentModel.MemberDescriptor.GetSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se o membro é pesquisável, conforme especificado no <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>."
  remarks: "Um designer visual apresenta, normalmente, os membros que são pesquisável na janela Propriedades."
  syntax:
    content: public virtual bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o membro for pesquisável; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se não houver nenhuma <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>, o valor da propriedade está definido como o predefinido, que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Name
  id: Name
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o nome do membro."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "O nome do membro."
  overload: System.ComponentModel.MemberDescriptor.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  id: NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o código hash para o nome de membro, conforme especificado no <xref:System.String.GetHashCode*>.</xref:System.String.GetHashCode*>"
  syntax:
    content: protected virtual int NameHashCode { get; }
    return:
      type: System.Int32
      description: "O código hash para o nome do membro."
  overload: System.ComponentModel.MemberDescriptor.NameHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.#ctor*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection
  nameWithType: MemberDescriptor.CreateAttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Description*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals
  nameWithType: MemberDescriptor.Equals
- uid: System.ComponentModel.MemberDescriptor.FillAttributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes
  nameWithType: MemberDescriptor.FillAttributes
- uid: System.ComponentModel.MemberDescriptor.FindMethod*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod
  nameWithType: MemberDescriptor.FindMethod
- uid: System.ComponentModel.MemberDescriptor.GetHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: MemberDescriptor.GetHashCode
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget
  nameWithType: MemberDescriptor.GetInvocationTarget
- uid: System.ComponentModel.MemberDescriptor.GetInvokee*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee
  nameWithType: MemberDescriptor.GetInvokee
- uid: System.ComponentModel.MemberDescriptor.GetSite*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite
  nameWithType: MemberDescriptor.GetSite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
