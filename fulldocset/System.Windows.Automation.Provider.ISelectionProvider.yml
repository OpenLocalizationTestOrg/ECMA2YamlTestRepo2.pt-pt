### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.ISelectionProvider
  id: ISelectionProvider
  children:
  - System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  - System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  - System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  langs:
  - csharp
  name: ISelectionProvider
  nameWithType: ISelectionProvider
  fullName: System.Windows.Automation.Provider.ISelectionProvider
  type: Interface
  summary: "Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <xref href=&quot;System.Windows.Automation.Provider.ISelectionItemProvider&quot;></xref>."
  remarks: "Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("fb8b03af-3bdf-48d4-bd36-1a65793be168")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface ISelectionProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  id: CanSelectMultiple
  parent: System.Windows.Automation.Provider.ISelectionProvider
  langs:
  - csharp
  name: CanSelectMultiple
  nameWithType: ISelectionProvider.CanSelectMultiple
  fullName: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently."
  remarks: "This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made."
  example:
  - "The following example shows an implementation of this method for a list that does not allow selection of more than one item at a time.  \n  \n [!code-cs[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/add/codesnippet/csharp/UIAISelectionProvider_ISelectionItemProvider_snip.ElementProvider/ListFragment.cs#canselectmultiple)]\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/add/codesnippet/visualbasic/elementprovider/listfragment.vb#canselectmultiple)]"
  syntax:
    content: public bool CanSelectMultiple { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if multiple selection is allowed; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  id: GetSelection
  parent: System.Windows.Automation.Provider.ISelectionProvider
  langs:
  - csharp
  name: GetSelection()
  nameWithType: ISelectionProvider.GetSelection()
  fullName: System.Windows.Automation.Provider.ISelectionProvider.GetSelection()
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Retrieves a UI Automation provider for each child element that is selected."
  remarks: "A default empty array is returned by UIAutoCore.dll when the provider doesn&quot;t supply a value."
  example:
  - "The following example shows one possible implementation of this method for a list box that supports only single selection.  \n  \n [!code-cs[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/add/codesnippet/csharp/UIAISelectionProvider_ISelectionItemProvider_snip.ElementProvider/ListFragment.cs#getselection)]\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/add/codesnippet/visualbasic/elementprovider/listfragment.vb#getselection)]"
  syntax:
    content: public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();
    parameters: []
    return:
      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]
      description: "A collection of UI Automation providers."
  overload: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  id: IsSelectionRequired
  parent: System.Windows.Automation.Provider.ISelectionProvider
  langs:
  - csharp
  name: IsSelectionRequired
  nameWithType: ISelectionProvider.IsSelectionRequired
  fullName: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected."
  remarks: "This property can be dynamic. For example, the initial state of a control might not have any items selected by default, meaning that IsSelectionRequired is `false`. However, after an item is selected, the control must always have at least one item selected."
  example:
  - "The following example shows an implementation of this method for a list that requires an item to be selected at all times.  \n  \n [!code-cs[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/add/codesnippet/csharp/UIAISelectionProvider_ISelectionItemProvider_snip.ElementProvider/ListFragment.cs#isselectionrequired)]\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/add/codesnippet/visualbasic/elementprovider/listfragment.vb#isselectionrequired)]"
  syntax:
    content: public bool IsSelectionRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if selection is required; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
  parent: System.Windows.Automation.Provider.ISelectionProvider
  isExternal: false
  name: CanSelectMultiple
  nameWithType: ISelectionProvider.CanSelectMultiple
  fullName: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection
  parent: System.Windows.Automation.Provider.ISelectionProvider
  isExternal: false
  name: GetSelection()
  nameWithType: ISelectionProvider.GetSelection()
  fullName: System.Windows.Automation.Provider.ISelectionProvider.GetSelection()
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]
  spec.csharp:
  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple
    name: IRawElementProviderSimple
    nameWithType: IRawElementProviderSimple
    fullName: IRawElementProviderSimple[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
  parent: System.Windows.Automation.Provider.ISelectionProvider
  isExternal: false
  name: IsSelectionRequired
  nameWithType: ISelectionProvider.IsSelectionRequired
  fullName: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired
- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*
  parent: System.Windows.Automation.Provider.ISelectionProvider
  isExternal: false
  name: CanSelectMultiple
  nameWithType: ISelectionProvider.CanSelectMultiple
- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*
  parent: System.Windows.Automation.Provider.ISelectionProvider
  isExternal: false
  name: GetSelection
  nameWithType: ISelectionProvider.GetSelection
- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*
  parent: System.Windows.Automation.Provider.ISelectionProvider
  isExternal: false
  name: IsSelectionRequired
  nameWithType: ISelectionProvider.IsSelectionRequired
