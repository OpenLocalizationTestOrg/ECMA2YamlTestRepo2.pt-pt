### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Int64AnimationBase
  id: Int64AnimationBase
  children:
  - System.Windows.Media.Animation.Int64AnimationBase.#ctor
  - System.Windows.Media.Animation.Int64AnimationBase.Clone
  - System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  langs:
  - csharp
  name: Int64AnimationBase
  nameWithType: Int64AnimationBase
  fullName: System.Windows.Media.Animation.Int64AnimationBase
  type: Class
  summary: "Abstract class that, when implemented, animates a <xref:System.Int64> value."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> class in [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], but generically shows how to use other derived classes such as <xref:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames>.  \n  \n [!code-xml[keyframes_ovw_snip#AltDoubleAnimationUsingKeyFramesWholePage](~/add/codesnippet/xaml/t-system.windows.media.a_1_1.xaml)]\n [!code-xml[keyframes_ovw_snip#AltDoubleAnimationUsingKeyFramesWholePage](~/add/codesnippet/xaml/t-system.windows.media.a_1_1.xaml)]"
  syntax:
    content: 'public abstract class Int64AnimationBase : System.Windows.Media.Animation.AnimationTimeline'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: Int64AnimationBase()
  nameWithType: Int64AnimationBase.Int64AnimationBase()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Int64AnimationBase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.Animation.Int64AnimationBase&quot;></xref> class."
  syntax:
    content: protected Int64AnimationBase ();
    parameters: []
  overload: System.Windows.Media.Animation.Int64AnimationBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.Clone
  id: Clone
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: Clone()
  nameWithType: Int64AnimationBase.Clone()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.Animation.Int64AnimationBase&quot;></xref>, making deep copies of this object&quot;s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Animation.Int64AnimationBase Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Int64AnimationBase
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.Int64AnimationBase.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: GetCurrentValue(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Gets the current value of the animation."
  remarks: "The value of the `defaultOriginValue` parameter depends on the animation’s position in the composition chain:      -   If the animation is in the first position in a composition chain and it replaces another animation, `defaultOriginValue` is the output of that animation at the time it was replaced.      -   If the animation is in the first position in a composition chain and no animation exists to replace, `defaultOriginValue` is the base value of the animated property.      -   If this animation is not in the first position of a composition chain, then `defaultOriginValue` is the value that is returned by the previous animation in the composition chain that has an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.       The value of the `defaultDestinationValue` parameter depends on whether there is a previous property <xref:System.Windows.Trigger> composition layer.      -   If there is a previous property <xref:System.Windows.Trigger> composition layer, `defaultDestinationValue` is the output from that layer.      -   If there is no previous composition layer, `defaultDestinationValue` is the base value of the property that you are animating.       For more information about animation composition, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md). For more information about creating custom animation types, see the [Custom Animations Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public long GetCurrentValue (long defaultOriginValue, long defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Int64
      description: "The origin value provided to the animation if the animation does not have its own start value."
    - id: defaultDestinationValue
      type: System.Int64
      description: "The destination value provided to the animation if the animation does not have its own destination value."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "The <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;></xref> which can generate the <xref:System.Windows.Media.Animation.Clock.CurrentTime*> or <xref:System.Windows.Media.Animation.Clock.CurrentProgress*> value to be used by the animation to generate its output value."
    return:
      type: System.Int64
      description: "The value this animation believes should be the current value for the property."
  overload: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: GetCurrentValue(Object,Object,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Gets the current value of the animation."
  remarks: "The value of the `defaultOriginValue` parameter depends on the animation’s position in the composition chain:      -   If the animation is in the first position in a composition chain and it replaces another animation, `defaultOriginValue` is the output of that animation at the time it was replaced.      -   If the animation is in the first position in a composition chain and no animation exists to replace, `defaultOriginValue` is the base value of the animated property.      -   If this animation is not in the first position of a composition chain, then `defaultOriginValue` is the value that is returned by the previous animation in the composition chain that has an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.       The value of the `defaultDestinationValue` parameter depends on whether there is a previous property <xref:System.Windows.Trigger> composition layer.      -   If there is a previous property <xref:System.Windows.Trigger> composition layer, `defaultDestinationValue` is the output from that layer.      -   If there is no previous composition layer, `defaultDestinationValue` is the base value of the property that you are animating.       For more information about animation composition, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md). For more information about creating custom animation types, see the [Custom Animations Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override sealed object GetCurrentValue (object defaultOriginValue, object defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Object
      description: "The origin value provided to the animation if the animation does not have its own start value."
    - id: defaultDestinationValue
      type: System.Object
      description: "The destination value provided to the animation if the animation does not have its own destination value."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "The <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;></xref> which can generate the <xref:System.Windows.Media.Animation.Clock.CurrentTime*> or <xref:System.Windows.Media.Animation.Clock.CurrentProgress*> value to be used by the animation to generate its output value."
    return:
      type: System.Object
      description: "The value this animation believes should be the current value for the property."
  overload: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: GetCurrentValueCore(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Calculates a value that represents the current value of the property being animated, as determined by the host animation."
  remarks: "The value of the `defaultOriginValue` parameter depends on the animation’s position in the composition chain:      -   If the animation is in the first position in a composition chain and it replaces another animation, `defaultOriginValue` is the output of that animation at the time it was replaced.      -   If the animation is in the first position in a composition chain and no animation exists to replace, `defaultOriginValue` is the base value of the animated property.      -   If this animation is not in the first position of a composition chain, then `defaultOriginValue` is the value that is returned by the previous animation in the composition chain that has an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.       The value of the `defaultDestinationValue` parameter depends on whether there is a previous property <xref:System.Windows.Trigger> composition layer.      -   If there is a previous property <xref:System.Windows.Trigger> composition layer, `defaultDestinationValue` is the output from that layer.      -   If there is no previous composition layer, `defaultDestinationValue` is the base value of the property that you are animating.       For more information about animation composition, see the [Animation and Timing System Overview](~/add/includes/ajax-current-ext-md.md). For more information about creating custom animation types, see the [Custom Animations Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected abstract long GetCurrentValueCore (long defaultOriginValue, long defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Int64
      description: "The suggested origin value, used if the animation does not have its own explicitly set start value."
    - id: defaultDestinationValue
      type: System.Int64
      description: "The suggested destination value, used if the animation does not have its own explicitly set end value."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "An <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;></xref> that generates the <xref:System.Windows.Media.Animation.Clock.CurrentTime*> or <xref:System.Windows.Media.Animation.Clock.CurrentProgress*> used by the host animation."
    return:
      type: System.Int64
      description: "The calculated value of the property, as determined by the current animation."
  overload: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  id: TargetPropertyType
  parent: System.Windows.Media.Animation.Int64AnimationBase
  langs:
  - csharp
  name: TargetPropertyType
  nameWithType: Int64AnimationBase.TargetPropertyType
  fullName: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Gets the type of value this animation generates."
  syntax:
    content: public override sealed Type TargetPropertyType { get; }
    return:
      type: System.Type
      description: "The type of value produced by this animation."
  overload: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.AnimationTimeline
  isExternal: false
  name: System.Windows.Media.Animation.AnimationTimeline
- uid: System.Windows.Media.Animation.Int64AnimationBase.#ctor
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Int64AnimationBase()
  nameWithType: Int64AnimationBase.Int64AnimationBase()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Int64AnimationBase()
- uid: System.Windows.Media.Animation.Int64AnimationBase.Clone
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Clone()
  nameWithType: Int64AnimationBase.Clone()
  fullName: System.Windows.Media.Animation.Int64AnimationBase.Clone()
- uid: System.Windows.Media.Animation.Int64AnimationBase
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Int64AnimationBase
  nameWithType: Int64AnimationBase
  fullName: System.Windows.Media.Animation.Int64AnimationBase
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValue(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Int64,Int64,AnimationClock)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValue(Object,Object,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(Object,Object,AnimationClock)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValueCore(Int64,Int64,AnimationClock)
  nameWithType: Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
  fullName: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(Int64,Int64,AnimationClock)
- uid: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: TargetPropertyType
  nameWithType: Int64AnimationBase.TargetPropertyType
  fullName: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Media.Animation.Int64AnimationBase.#ctor*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Int64AnimationBase
  nameWithType: Int64AnimationBase.Int64AnimationBase
- uid: System.Windows.Media.Animation.Int64AnimationBase.Clone*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: Clone
  nameWithType: Int64AnimationBase.Clone
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValue
  nameWithType: Int64AnimationBase.GetCurrentValue
- uid: System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: Int64AnimationBase.GetCurrentValueCore
- uid: System.Windows.Media.Animation.Int64AnimationBase.TargetPropertyType*
  parent: System.Windows.Media.Animation.Int64AnimationBase
  isExternal: false
  name: TargetPropertyType
  nameWithType: Int64AnimationBase.TargetPropertyType
