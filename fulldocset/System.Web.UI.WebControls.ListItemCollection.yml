### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ListItemCollection
  id: ListItemCollection
  children:
  - System.Web.UI.WebControls.ListItemCollection.#ctor
  - System.Web.UI.WebControls.ListItemCollection.Add(System.String)
  - System.Web.UI.WebControls.ListItemCollection.Add(System.Web.UI.WebControls.ListItem)
  - System.Web.UI.WebControls.ListItemCollection.AddRange(System.Web.UI.WebControls.ListItem[])
  - System.Web.UI.WebControls.ListItemCollection.Capacity
  - System.Web.UI.WebControls.ListItemCollection.Clear
  - System.Web.UI.WebControls.ListItemCollection.Contains(System.Web.UI.WebControls.ListItem)
  - System.Web.UI.WebControls.ListItemCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.ListItemCollection.Count
  - System.Web.UI.WebControls.ListItemCollection.FindByText(System.String)
  - System.Web.UI.WebControls.ListItemCollection.FindByValue(System.String)
  - System.Web.UI.WebControls.ListItemCollection.GetEnumerator
  - System.Web.UI.WebControls.ListItemCollection.IndexOf(System.Web.UI.WebControls.ListItem)
  - System.Web.UI.WebControls.ListItemCollection.Insert(System.Int32,System.String)
  - System.Web.UI.WebControls.ListItemCollection.Insert(System.Int32,System.Web.UI.WebControls.ListItem)
  - System.Web.UI.WebControls.ListItemCollection.IsReadOnly
  - System.Web.UI.WebControls.ListItemCollection.IsSynchronized
  - System.Web.UI.WebControls.ListItemCollection.Item(System.Int32)
  - System.Web.UI.WebControls.ListItemCollection.Remove(System.String)
  - System.Web.UI.WebControls.ListItemCollection.Remove(System.Web.UI.WebControls.ListItem)
  - System.Web.UI.WebControls.ListItemCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.ListItemCollection.SyncRoot
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: ListItemCollection
  nameWithType: ListItemCollection
  fullName: System.Web.UI.WebControls.ListItemCollection
  type: Class
  summary: "A collection of <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects in a list control. This class cannot be inherited."
  remarks: "The ListItemCollection class represents a collection of <xref:System.Web.UI.WebControls.ListItem> objects. The <xref:System.Web.UI.WebControls.ListItem> objects, in turn, represent the items displayed in list controls, such as the <xref:System.Web.UI.WebControls.ListBox>. To programmatically retrieve <xref:System.Web.UI.WebControls.ListItem> objects from a list control, use one of following methods:      -   Use the indexer to get a single <xref:System.Web.UI.WebControls.ListItem> from the collection, using array notation.      -   Use the <xref:System.Web.UI.WebControls.ListItemCollection.CopyTo%2A> method to copy the contents of the collection to a <xref:System.Array?displayProperty=fullName> object, which can then be used to get items from the collection.      -   Use the <xref:System.Web.UI.WebControls.ListItemCollection.GetEnumerator%2A> method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName> implemented object, which can then be used to get items from the collection.      -   Use `foreach` (C#) or `For Each` (Visual Basic) to iterate through the collection.       The <xref:System.Web.UI.WebControls.ListItemCollection.Count%2A> property specifies the total number of items in the collection, and is commonly used to determine the upper bound of the collection. You can add and remove items from the collection by using the <xref:System.Web.UI.WebControls.ListItemCollection.Add%2A> and <xref:System.Web.UI.WebControls.ListItemCollection.Remove%2A> methods."
  example:
  - "The following code example demonstrates creating ListItemCollection objects, adding items to the collections, and removing items from the collections. In the example, the ListItemCollection named `listBoxData` is used as the data source for a <xref:System.Web.UI.WebControls.ListBox> control called `ListBox1`, and the ListItemCollection called `ddBoxData` is used as the data source for a <xref:System.Web.UI.WebControls.DropDownList> control called `DropDownList1`.  \n  \n [!code-vb[ListItemCollectionSample#4](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_233_1.aspx)]\n [!code-cs[ListItemCollectionSample#4](~/add/codesnippet/csharp/t-system.web.ui.webcontr_233_1.aspx)]  \n  \n [!code-cs[ListBoxMultiSelectExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_233_2.aspx)]\n [!code-vb[ListBoxMultiSelectExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_233_2.aspx)]  \n  \n [!code-cs[ListBoxMultiSelectExample#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_233_3.aspx)]\n [!code-vb[ListBoxMultiSelectExample#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_233_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ListItemsCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class ListItemCollection : System.Collections.IList, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: ListItemCollection()
  nameWithType: ListItemCollection.ListItemCollection()
  fullName: System.Web.UI.WebControls.ListItemCollection.ListItemCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ListItemCollection> class using default values."
  example:
  - "The following code example demonstrates creating <xref:System.Web.UI.WebControls.ListItemCollection> objects, adding items to the collections, and removing items from the collections. To view this code in a fully working example, see the <xref:System.Web.UI.WebControls.WebControl> class topic.  \n  \n [!code-vb[ListItemCollectionSample#5](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_103_1.aspx)]\n [!code-cs[ListItemCollectionSample#5](~/add/codesnippet/csharp/m-system.web.ui.webcontr_103_1.aspx)]"
  syntax:
    content: public ListItemCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.ListItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: ListItemCollection.Add(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.Add(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Appends a <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to the end of the collection that represents the specified string."
  remarks: "Use the Add method to append a <xref:System.Web.UI.WebControls.ListItem> to the end of the collection. This implementation of the method creates a <xref:System.Web.UI.WebControls.ListItem> to represent the text specified by the `item` parameter. This <xref:System.Web.UI.WebControls.ListItem> is then appended to the collection."
  example:
  - "The following code example demonstrates creating <xref:System.Web.UI.WebControls.ListItemCollection> objects, adding items to the collections, and removing items from the collections. To view this code in a fully working example, see the <xref:System.Web.UI.WebControls.WebControl> class topic.  \n  \n [!code-vb[ListItemCollectionSample#5](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_205_1.aspx)]\n [!code-cs[ListItemCollectionSample#5](~/add/codesnippet/csharp/m-system.web.ui.webcontr_205_1.aspx)]"
  syntax:
    content: public void Add (string item);
    parameters:
    - id: item
      type: System.String
      description: "A &lt;xref:System.String?displayProperty=fullName&gt; that represents the item to add to the end of the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Add(System.Web.UI.WebControls.ListItem)
  id: Add(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Add(ListItem)
  nameWithType: ListItemCollection.Add(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Add(ListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Appends the specified <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to the end of the collection."
  remarks: "Use the <xref:System.Web.UI.WebControls.ListItemCollection.Add%2A> method to append a <xref:System.Web.UI.WebControls.ListItem> to the end of the collection. This implementation of the method takes the <xref:System.Web.UI.WebControls.ListItem> specified by the `item` parameter and appends it to the collection."
  syntax:
    content: public void Add (System.Web.UI.WebControls.ListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.ListItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to append to the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.AddRange(System.Web.UI.WebControls.ListItem[])
  id: AddRange(System.Web.UI.WebControls.ListItem[])
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: AddRange(ListItem[])
  nameWithType: ListItemCollection.AddRange(ListItem[])
  fullName: System.Web.UI.WebControls.ListItemCollection.AddRange(ListItem[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds the items in an array of <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects to the collection."
  remarks: "Use the AddRange method to add the items in the array of <xref:System.Web.UI.WebControls.ListItem> objects specified by the `items` parameter. This allows you to add multiple <xref:System.Web.UI.WebControls.ListItem> objects to the collection in a single step."
  syntax:
    content: public void AddRange (System.Web.UI.WebControls.ListItem[] items);
    parameters:
    - id: items
      type: System.Web.UI.WebControls.ListItem[]
      description: "An array of <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects that contain the items to add to the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>items</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Capacity
  id: Capacity
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: ListItemCollection.Capacity
  fullName: System.Web.UI.WebControls.ListItemCollection.Capacity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the maximum number of items that the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref> can store."
  remarks: "Use the Capacity property to specify or determine the maximum number of items that the <xref:System.Web.UI.WebControls.ListItemCollection> can store."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of items that the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref> can store."
  overload: System.Web.UI.WebControls.ListItemCollection.Capacity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ListItemCollection.Clear()
  fullName: System.Web.UI.WebControls.ListItemCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes all <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects from the collection."
  remarks: "Use the Clear method to remove all <xref:System.Web.UI.WebControls.ListItem> objects. The <xref:System.Web.UI.WebControls.ListItemCollection.Count%2A> property is also set to `0`.      > [!CAUTION] >  When you use this method, all <xref:System.Web.UI.WebControls.ListItem> objects are removed from the collection. You cannot undo this."
  example:
  - >-
    [!code-cs[ListItemCollection_Remove#4](~/add/codesnippet/csharp/m-system.web.ui.webcontr_197_1.aspx)]
     [!code-vb[ListItemCollection_Remove#4](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_197_1.aspx)]
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.ListItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Contains(System.Web.UI.WebControls.ListItem)
  id: Contains(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Contains(ListItem)
  nameWithType: ListItemCollection.Contains(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Contains(ListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the collection contains the specified item."
  remarks: "Use the Contains method to determine whether the <xref:System.Web.UI.WebControls.ListItem> specified by the `item` parameter is in the collection."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.ListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.ListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to search for in the collection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the collection contains the specified item; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ListItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies the items from the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref> to the specified &lt;xref:System.Array?displayProperty=fullName&gt;, starting with the specified index."
  remarks: "Use this method to copy the contents of the <xref:System.Web.UI.WebControls.ListItemCollection> into the specified <xref:System.Array?displayProperty=fullName>, starting at the specified index.      > [!NOTE] >  The `array` parameter must be a zero-based <xref:System.Array?displayProperty=fullName>."
  example:
  - >-
    [!code-cs[ListItemCollection_Remove#5](~/add/codesnippet/csharp/m-system.web.ui.webcontr_222_1.aspx)]
     [!code-vb[ListItemCollection_Remove#5](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_222_1.aspx)]
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A zero-based &lt;xref:System.Array?displayProperty=fullName&gt; that receives the copied items from the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The first index in the specified &lt;xref:System.Array?displayProperty=fullName&gt; to receive the items."
  overload: System.Web.UI.WebControls.ListItemCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: ListItemCollection.Count
  fullName: System.Web.UI.WebControls.ListItemCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects in the collection."
  remarks: "Use the Count property to determine the number of <xref:System.Web.UI.WebControls.ListItem> objects in the <xref:System.Web.UI.WebControls.ListItemCollection>. The Count property is commonly used when iterating through the collection to determine the upper bound of the collection."
  example:
  - "To view the following code in a fully working example, see the <xref:System.Web.UI.WebControls.ListItemCollection> class topic.  \n  \n [!code-cs[ListBoxMultiSelectExample#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1340_1.aspx)]\n [!code-vb[ListBoxMultiSelectExample#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1340_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects in the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.FindByText(System.String)
  id: FindByText(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: FindByText(String)
  nameWithType: ListItemCollection.FindByText(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.FindByText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Searches the collection for a <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> with a <xref:System.Web.UI.WebControls.ListItem.Text*> property that equals the specified text."
  remarks: "Use the FindByText method to search the collection for a <xref:System.Web.UI.WebControls.ListItem> with a <xref:System.Web.UI.WebControls.ListItem.Text%2A> property that equals text specified by the `text` parameter. This method performs a case-sensitive and culture-insensitive comparison. This method does not do partial searches or wildcard searches. If an item is not found in the collection using this criteria, `null` is returned."
  example:
  - >-
    [!code-vb[ListItemCollection_Search#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_143_1.aspx)]
     [!code-cs[ListItemCollection_Search#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_143_1.aspx)]
  syntax:
    content: public System.Web.UI.WebControls.ListItem FindByText (string text);
    parameters:
    - id: text
      type: System.String
      description: "The text to search for."
    return:
      type: System.Web.UI.WebControls.ListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> that contains the text specified by the <code>text</code> parameter."
  overload: System.Web.UI.WebControls.ListItemCollection.FindByText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.FindByValue(System.String)
  id: FindByValue(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: FindByValue(String)
  nameWithType: ListItemCollection.FindByValue(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.FindByValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Searches the collection for a <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> with a <xref:System.Web.UI.WebControls.ListItem.Value*> property that contains the specified value."
  remarks: "Use the FindByValue method to search the collection for a <xref:System.Web.UI.WebControls.ListItem> with a <xref:System.Web.UI.WebControls.ListItem.Value%2A> property that contains value specified by the `value` parameter. This method performs a case-sensitive and culture-insensitive comparison. This method does not do partial searches or wildcard searches. If an item is not found in the collection using this criteria, `null` is returned."
  example:
  - >-
    [!code-vb[ListItemCollection_Search#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_141_1.aspx)]
     [!code-cs[ListItemCollection_Search#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_141_1.aspx)]
  syntax:
    content: public System.Web.UI.WebControls.ListItem FindByValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "The value to search for."
    return:
      type: System.Web.UI.WebControls.ListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> that contains the value specified by the <code>value</code> parameter."
  overload: System.Web.UI.WebControls.ListItemCollection.FindByValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ListItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.ListItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; implemented object that contains all <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects in the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref>."
  remarks: "Use this method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName> that can be iterated through to get each <xref:System.Web.UI.WebControls.ListItem> object in the <xref:System.Web.UI.WebControls.ListItemCollection>.       Use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property to get the item currently pointed to in the collection.       Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method to move to the next item in the collection.       Use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method to move the enumerator back to the initial position.      > [!NOTE] >  After you create a <xref:System.Collections.IEnumerator?displayProperty=fullName> object or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method to move the enumerator to the first item in the collection, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property is undefined."
  example:
  - >-
    [!code-vb[DataListItemCollection#5](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_207_1.aspx)]
     [!code-cs[DataListItemCollection#5](~/add/codesnippet/csharp/m-system.web.ui.webcontr_207_1.aspx)]
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; implemented object that contains all <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> objects in the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.IndexOf(System.Web.UI.WebControls.ListItem)
  id: IndexOf(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: IndexOf(ListItem)
  nameWithType: ListItemCollection.IndexOf(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.IndexOf(ListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines the index value that represents the position of the specified <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> in the collection."
  remarks: "Use the IndexOf method to determine the index value of the <xref:System.Web.UI.WebControls.ListItem> specified by the `item` parameter in the collection. If an item with this criteria is not found in the collection, `-1` is returned."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.ListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.ListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to search for in the collection."
    return:
      type: System.Int32
      description: "The index position of the specified <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> in the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: ListItemCollection.Insert(Int32,String)
  fullName: System.Web.UI.WebControls.ListItemCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inserts a <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> which represents the specified string in the collection at the specified index location."
  remarks: "Use the Insert method to add a <xref:System.Web.UI.WebControls.ListItem> to the collection at the index specified by the `index` parameter. This implementation of the method creates a <xref:System.Web.UI.WebControls.ListItem> to represent the text specified by the `item` parameter. The <xref:System.Web.UI.WebControls.ListItem.Text%2A> property of the new <xref:System.Web.UI.WebControls.ListItem> has the value `item`, and the <xref:System.Web.UI.WebControls.ListItem.Value%2A> property has the value `null`. This <xref:System.Web.UI.WebControls.ListItem> is then inserted in the collection at the specified index."
  syntax:
    content: public void Insert (int index, string item);
    parameters:
    - id: index
      type: System.Int32
      description: "The location in the collection to insert the <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref>."
    - id: item
      type: System.String
      description: "A &lt;xref:System.String?displayProperty=fullName&gt; that represents the item to insert in the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Insert(System.Int32,System.Web.UI.WebControls.ListItem)
  id: Insert(System.Int32,System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Insert(Int32,ListItem)
  nameWithType: ListItemCollection.Insert(Int32,ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Insert(Int32,ListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inserts the specified <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> in the collection at the specified index location."
  remarks: "Use the <xref:System.Web.UI.WebControls.ListItemCollection.Insert%2A> method to add a <xref:System.Web.UI.WebControls.ListItem> to the collection at the index specified by the `index` parameter. This implementation of the method takes the <xref:System.Web.UI.WebControls.ListItem> specified by the `item` parameter and inserts it in the collection at the specified index."
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.ListItem item);
    parameters:
    - id: index
      type: System.Int32
      description: "The location in the collection to insert the <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref>."
    - id: item
      type: System.Web.UI.WebControls.ListItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to add to the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ListItemCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.ListItemCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref> is read-only."
  remarks: "This property always returns `false` to indicate that the <xref:System.Web.UI.WebControls.ListItemCollection> can be written to in all cases."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for all cases."
  overload: System.Web.UI.WebControls.ListItemCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ListItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.ListItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether access to the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref> is synchronized (thread-safe)."
  remarks: "This property is derived from <xref:System.Collections.ICollection?displayProperty=fullName> and is overridden to always return `false`.       For more information on the <xref:System.Web.UI.WebControls.SelectedDatesCollection.IsSynchronized%2A> property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for all cases."
  overload: System.Web.UI.WebControls.ListItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ListItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> at the specified index in the collection."
  remarks: "Use this indexer to get a <xref:System.Web.UI.WebControls.ListItem> from the <xref:System.Web.UI.WebControls.ListItemCollection> at the specified index, using array notation."
  example:
  - "The following code example demonstrates how to select multiple items from a <xref:System.Web.UI.WebControls.ListBox> control and add the selected items to a <xref:System.Web.UI.WebControls.DataGrid> control. The example uses a `foreach` loop to iterate through the <xref:System.Web.UI.WebControls.ListItem> objects in the <xref:System.Web.UI.WebControls.ListItemCollection> collection of the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[ListBoxMultiSelectExample#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_777_1.aspx)]\n [!code-vb[ListBoxMultiSelectExample#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_777_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ListItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to retrieve from the collection."
    return:
      type: System.Web.UI.WebControls.ListItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> object at the specified index in the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ListItemCollection.Remove(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes a <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> from the collection that represents the specified string."
  remarks: "Use the Remove method to remove a <xref:System.Web.UI.WebControls.ListItem> object from the collection. This implementation of the method creates a <xref:System.Web.UI.WebControls.ListItem> object using the text in the `item` parameter and then removes this <xref:System.Web.UI.WebControls.ListItem> from the collection. The specified `item` parameter must match the <xref:System.Web.UI.WebControls.ListItem.Value%2A> property of an existing <xref:System.Web.UI.WebControls.ListItem> object, or no item is removed from the collection."
  example:
  - "The following example demonstrates the Remove method of the <xref:System.Web.UI.WebControls.ListItemCollection> class. The Web page contains a <xref:System.Web.UI.WebControls.ListBox> control with some list items in it and a <xref:System.Web.UI.WebControls.TextBox> control named `Delete`. The user enters the text of the item to delete into the <xref:System.Web.UI.WebControls.TextBox> control. The <xref:System.Web.UI.WebControls.Button.Click> event handler of the `Button1` control deletes the selected item from the <xref:System.Web.UI.WebControls.ListItemCollection> object and therefore from the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[ListItemCollection#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_19_1.aspx)]\n [!code-vb[ListItemCollection#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_19_1.aspx)]"
  syntax:
    content: public void Remove (string item);
    parameters:
    - id: item
      type: System.String
      description: "A &lt;xref:System.String?displayProperty=fullName&gt; that represents the item to remove from the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.Remove(System.Web.UI.WebControls.ListItem)
  id: Remove(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: Remove(ListItem)
  nameWithType: ListItemCollection.Remove(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Remove(ListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes the specified <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> from the collection."
  remarks: "Use the <xref:System.Web.UI.WebControls.ListItemCollection.Remove%2A> method to remove a <xref:System.Web.UI.WebControls.ListItem> from the collection. This implementation of the method takes the <xref:System.Web.UI.WebControls.ListItem> specified by the `item` parameter and removes it from the collection."
  example:
  - "The following code example demonstrates creating <xref:System.Web.UI.WebControls.ListItemCollection> objects, adding items to the collections, and removing items from the collections. In the example, the <xref:System.Web.UI.WebControls.ListItemCollection> named `listBoxData` is used as the data source for a <xref:System.Web.UI.WebControls.ListBox> control called `ListBox1`, and the <xref:System.Web.UI.WebControls.ListItemCollection> called `ddBoxData` is used as the data source for a <xref:System.Web.UI.WebControls.DropDownList> control called `DropDownList1`. To view this code in a fully working example, see the <xref:System.Web.UI.WebControls.WebControl> class topic.  \n  \n [!code-vb[ListItemCollectionSample#6](~/add/codesnippet/visualbasic/1e8f2a28-def3-4a80-8d8c-_1.aspx)]\n [!code-cs[ListItemCollectionSample#6](~/add/codesnippet/csharp/1e8f2a28-def3-4a80-8d8c-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.ListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.ListItem
      description: "The <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to remove from the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ListItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Removes the <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> at the specified index from the collection."
  remarks: "Use the RemoveAt method to remove the <xref:System.Web.UI.WebControls.ListItem> at the specified index from the collection."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the <xref href=&quot;System.Web.UI.WebControls.ListItem&quot;></xref> to remove."
  overload: System.Web.UI.WebControls.ListItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ListItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.ListItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the object that can be used to synchronize access to the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref>."
  remarks: "The object returned in this implementation is the <xref:System.Web.UI.WebControls.ListItemCollection> object itself.       For more information on the <xref:System.Web.UI.WebControls.SelectedDatesCollection.SyncRoot%2A> property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.Web.UI.WebControls.ListItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ListItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.Add*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: int IList.Add (object item);
    parameters:
    - id: item
      type: System.Object
      description: "The <xref:System.Object> to add to the <xref:System.Collections.IList>."
    return:
      type: System.Int32
      description: "The index at which the item has been added."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ListItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.Contains*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool IList.Contains (object item);
    parameters:
    - id: item
      type: System.Object
      description: "The <xref:System.Object> to locate in the <xref:System.Collections.IList>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Object> is found in the <xref:System.Collections.IList>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ListItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.IndexOf*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: int IList.IndexOf (object item);
    parameters:
    - id: item
      type: System.Object
      description: "The <xref:System.Object> to locate in the <xref:System.Collections.IList>."
    return:
      type: System.Int32
      description: "The index of <code>value</code> if found in the list; otherwise, -1."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ListItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.Insert*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Insert (int index, object item);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which `value` should be inserted."
    - id: item
      type: System.Object
      description: "The <xref:System.Object> to insert into the <xref:System.Collections.IList>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ListItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.IsFixedSize*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ListItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.Item*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to get."
    return:
      type: System.Object
      description: "The element as the specified index."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ListItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Collections.IList.Remove*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Remove (object item);
    parameters:
    - id: item
      type: System.Object
      description: "The <xref:System.Object> to remove from the <xref:System.Collections.IList>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Web.UI.IStateManager.IsTrackingViewState*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the server control is tracking its view state change; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Loads the previously saved state."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that represents the state of the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns object containing state changes."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the state of the <xref href=&quot;System.Web.UI.WebControls.ListItemCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ListItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Starts tracking state of changes."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ListItemCollection> instance is cast to an <xref:System.Web.UI.IStateManager> interface."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.ListItemCollection.#ctor
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: ListItemCollection()
  nameWithType: ListItemCollection.ListItemCollection()
  fullName: System.Web.UI.WebControls.ListItemCollection.ListItemCollection()
- uid: System.Web.UI.WebControls.ListItemCollection.Add(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Add(String)
  nameWithType: ListItemCollection.Add(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ListItemCollection.Add(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Add(ListItem)
  nameWithType: ListItemCollection.Add(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Add(ListItem)
- uid: System.Web.UI.WebControls.ListItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItem
  nameWithType: ListItem
  fullName: System.Web.UI.WebControls.ListItem
- uid: System.Web.UI.WebControls.ListItemCollection.AddRange(System.Web.UI.WebControls.ListItem[])
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: AddRange(ListItem[])
  nameWithType: ListItemCollection.AddRange(ListItem[])
  fullName: System.Web.UI.WebControls.ListItemCollection.AddRange(ListItem[])
- uid: System.Web.UI.WebControls.ListItem[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItem
  nameWithType: ListItem
  fullName: System.Web.UI.WebControls.ListItem[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.ListItem
    name: ListItem
    nameWithType: ListItem
    fullName: ListItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.ListItemCollection.Capacity
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Capacity
  nameWithType: ListItemCollection.Capacity
  fullName: System.Web.UI.WebControls.ListItemCollection.Capacity
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemCollection.Clear
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Clear()
  nameWithType: ListItemCollection.Clear()
  fullName: System.Web.UI.WebControls.ListItemCollection.Clear()
- uid: System.Web.UI.WebControls.ListItemCollection.Contains(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Contains(ListItem)
  nameWithType: ListItemCollection.Contains(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Contains(ListItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ListItemCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ListItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.ListItemCollection.Count
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Count
  nameWithType: ListItemCollection.Count
  fullName: System.Web.UI.WebControls.ListItemCollection.Count
- uid: System.Web.UI.WebControls.ListItemCollection.FindByText(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: FindByText(String)
  nameWithType: ListItemCollection.FindByText(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.FindByText(String)
- uid: System.Web.UI.WebControls.ListItemCollection.FindByValue(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: FindByValue(String)
  nameWithType: ListItemCollection.FindByValue(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.FindByValue(String)
- uid: System.Web.UI.WebControls.ListItemCollection.GetEnumerator
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ListItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.ListItemCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.ListItemCollection.IndexOf(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: IndexOf(ListItem)
  nameWithType: ListItemCollection.IndexOf(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.IndexOf(ListItem)
- uid: System.Web.UI.WebControls.ListItemCollection.Insert(System.Int32,System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: ListItemCollection.Insert(Int32,String)
  fullName: System.Web.UI.WebControls.ListItemCollection.Insert(Int32,String)
- uid: System.Web.UI.WebControls.ListItemCollection.Insert(System.Int32,System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Insert(Int32,ListItem)
  nameWithType: ListItemCollection.Insert(Int32,ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Insert(Int32,ListItem)
- uid: System.Web.UI.WebControls.ListItemCollection.IsReadOnly
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ListItemCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.ListItemCollection.IsReadOnly
- uid: System.Web.UI.WebControls.ListItemCollection.IsSynchronized
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ListItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.ListItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.ListItemCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ListItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.Item(Int32)
- uid: System.Web.UI.WebControls.ListItemCollection.Remove(System.String)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ListItemCollection.Remove(String)
  fullName: System.Web.UI.WebControls.ListItemCollection.Remove(String)
- uid: System.Web.UI.WebControls.ListItemCollection.Remove(System.Web.UI.WebControls.ListItem)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Remove(ListItem)
  nameWithType: ListItemCollection.Remove(ListItem)
  fullName: System.Web.UI.WebControls.ListItemCollection.Remove(ListItem)
- uid: System.Web.UI.WebControls.ListItemCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ListItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.ListItemCollection.SyncRoot
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ListItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.ListItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ListItemCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ListItemCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ListItemCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ListItemCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ListItemCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ListItemCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ListItemCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ListItemCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ListItemCollection.#ctor*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: ListItemCollection
  nameWithType: ListItemCollection.ListItemCollection
- uid: System.Web.UI.WebControls.ListItemCollection.Add*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Add
  nameWithType: ListItemCollection.Add
- uid: System.Web.UI.WebControls.ListItemCollection.AddRange*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: AddRange
  nameWithType: ListItemCollection.AddRange
- uid: System.Web.UI.WebControls.ListItemCollection.Capacity*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Capacity
  nameWithType: ListItemCollection.Capacity
- uid: System.Web.UI.WebControls.ListItemCollection.Clear*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Clear
  nameWithType: ListItemCollection.Clear
- uid: System.Web.UI.WebControls.ListItemCollection.Contains*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Contains
  nameWithType: ListItemCollection.Contains
- uid: System.Web.UI.WebControls.ListItemCollection.CopyTo*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: ListItemCollection.CopyTo
- uid: System.Web.UI.WebControls.ListItemCollection.Count*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Count
  nameWithType: ListItemCollection.Count
- uid: System.Web.UI.WebControls.ListItemCollection.FindByText*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: FindByText
  nameWithType: ListItemCollection.FindByText
- uid: System.Web.UI.WebControls.ListItemCollection.FindByValue*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: FindByValue
  nameWithType: ListItemCollection.FindByValue
- uid: System.Web.UI.WebControls.ListItemCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ListItemCollection.GetEnumerator
- uid: System.Web.UI.WebControls.ListItemCollection.IndexOf*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: ListItemCollection.IndexOf
- uid: System.Web.UI.WebControls.ListItemCollection.Insert*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Insert
  nameWithType: ListItemCollection.Insert
- uid: System.Web.UI.WebControls.ListItemCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ListItemCollection.IsReadOnly
- uid: System.Web.UI.WebControls.ListItemCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ListItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.ListItemCollection.Item*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Item
  nameWithType: ListItemCollection.Item
- uid: System.Web.UI.WebControls.ListItemCollection.Remove*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: Remove
  nameWithType: ListItemCollection.Remove
- uid: System.Web.UI.WebControls.ListItemCollection.RemoveAt*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ListItemCollection.RemoveAt
- uid: System.Web.UI.WebControls.ListItemCollection.SyncRoot*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ListItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ListItemCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ListItemCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ListItemCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ListItemCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ListItemCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ListItemCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.ListItemCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ListItemCollection.System.Collections.IList.Remove
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ListItemCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ListItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ListItemCollection.System.Web.UI.IStateManager.TrackViewState
