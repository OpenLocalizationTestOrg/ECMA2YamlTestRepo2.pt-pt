### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DSACng
  id: DSACng
  children:
  - System.Security.Cryptography.DSACng.#ctor
  - System.Security.Cryptography.DSACng.#ctor(System.Int32)
  - System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])
  - System.Security.Cryptography.DSACng.Dispose(System.Boolean)
  - System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)
  - System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)
  - System.Security.Cryptography.DSACng.Key
  - System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  - System.Security.Cryptography.DSACng.LegalKeySizes
  - System.Security.Cryptography.DSACng.SignatureAlgorithm
  - System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: DSACng
  nameWithType: DSACng
  fullName: System.Security.Cryptography.DSACng
  type: Class
  summary: "Provides a Cryptography Next Generation (CNG) implementation of the Digital Signature Algorithm (DSA)."
  syntax:
    content: 'public sealed class DSACng : System.Security.Cryptography.DSA'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.DSA
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.DSA.Create
  - System.Security.Cryptography.DSA.Create(System.String)
  - System.Security.Cryptography.DSA.FromXmlString(System.String)
  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: DSACng()
  nameWithType: DSACng.DSACng()
  fullName: System.Security.Cryptography.DSACng.DSACng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.DSACng&quot;></xref> class with a random 2,048-bit key pair."
  syntax:
    content: public DSACng ();
    parameters: []
  overload: System.Security.Cryptography.DSACng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: DSACng(Int32)
  nameWithType: DSACng.DSACng(Int32)
  fullName: System.Security.Cryptography.DSACng.DSACng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.DSACng&quot;></xref> class with a randomly generated key of the specified size."
  remarks: "Valid key sizes range from 512 to 3,072 bits, in increments of 64. We recommend that a minimum size of 2,048 bits be used for all keys."
  syntax:
    content: public DSACng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "The size of the key to generate in bits."
  overload: System.Security.Cryptography.DSACng.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>keySize</code> is not valid."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: DSACng(CngKey)
  nameWithType: DSACng.DSACng(CngKey)
  fullName: System.Security.Cryptography.DSACng.DSACng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.DSACng&quot;></xref> class with the specified key."
  remarks: "The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of `key` must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Dsa%2A?displayProperty=fullName>.       This constructor creates a copy of the key. Even if `key` is disposed, the copy of this key object in DSA remains alive."
  syntax:
    content: public DSACng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "The key to use for DSA operations."
  overload: System.Security.Cryptography.DSACng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code> is not a valid DSA key."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: CreateSignature(Byte[])
  nameWithType: DSACng.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.DSACng.CreateSignature(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Creates the digital signature for the specified data."
  syntax:
    content: public override byte[] CreateSignature (byte[] rgbHash);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "The data to be signed."
    return:
      type: System.Byte[]
      description: "The digital signature for the specified data."
  overload: System.Security.Cryptography.DSACng.CreateSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbHash</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<code>rgbHash</code> is shorter in length than the Q value of the DSA key ."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.DSACng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "To be added."
  overload: System.Security.Cryptography.DSACng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: DSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.DSACng.ExportParameters(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Exports the DSA algorithm parameters."
  syntax:
    content: public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include private parameters; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Security.Cryptography.DSAParameters
      description: "The DSA algorithm parameters."
  overload: System.Security.Cryptography.DSACng.ExportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "DSA key is not a valid public or private key."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: DSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "To be added."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "To be added."
    return:
      type: System.Byte[]
      description: "To be added."
  overload: System.Security.Cryptography.DSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "To be added."
    - id: offset
      type: System.Int32
      description: "To be added."
    - id: count
      type: System.Int32
      description: "To be added."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "To be added."
    return:
      type: System.Byte[]
      description: "To be added."
  overload: System.Security.Cryptography.DSACng.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)
  id: ImportParameters(System.Security.Cryptography.DSAParameters)
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: ImportParameters(DSAParameters)
  nameWithType: DSACng.ImportParameters(DSAParameters)
  fullName: System.Security.Cryptography.DSACng.ImportParameters(DSAParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Replaces the existing key that the current instance is working with by creating a new <xref href=&quot;System.Security.Cryptography.CngKey&quot;></xref> for the parameters structure."
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.DSAParameters
      description: "The DSA parameters."
  overload: System.Security.Cryptography.DSACng.ImportParameters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified DSA parameters are not valid."
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.Key
  id: Key
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: Key
  nameWithType: DSACng.Key
  fullName: System.Security.Cryptography.DSACng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets the key that will be used by the <xref href=&quot;System.Security.Cryptography.DSACng&quot;></xref> object for any cryptographic operation that it performs."
  remarks: "The  <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.DSACng.ImportParameters%2A?displayProperty=fullName> method to create a new key, or by disposing the parent <xref:System.Security.Cryptography.DSACng> object. Therefore, you should ensure that the key object is no longer used in these cases.       This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.DSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "The key used by the <xref href=&quot;System.Security.Cryptography.DSACng&quot;></xref> object to perform cryptographic operations."
  overload: System.Security.Cryptography.DSACng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: DSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets the name of the key exchange algorithm."
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.LegalKeySizes
  id: LegalKeySizes
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: LegalKeySizes
  nameWithType: DSACng.LegalKeySizes
  fullName: System.Security.Cryptography.DSACng.LegalKeySizes
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets the key sizes, in bits, that are supported by the DSA algorithm."
  syntax:
    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }
    return:
      type: System.Security.Cryptography.KeySizes[]
      description: "An array that contains the key sizes supported by the algorithm."
  overload: System.Security.Cryptography.DSACng.LegalKeySizes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: DSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.DSACng.SignatureAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gets the name of the signature algorithm."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "The string &quot;DSA&quot;."
  overload: System.Security.Cryptography.DSACng.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSACng
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSACng.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSACng.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Verifies if the specified digital signature matches the specified data."
  syntax:
    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "The signed data."
    - id: rgbSignature
      type: System.Byte[]
      description: "The digital signature to be verified."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>rgbSignature</code> matches the signature computed using the specified data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.DSACng.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbSignature</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<code>rgbHash</code> is shorter in length than the Q value of the DSA key ."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.DSA
  isExternal: false
  name: System.Security.Cryptography.DSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.DSACng.#ctor
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng()
  nameWithType: DSACng.DSACng()
  fullName: System.Security.Cryptography.DSACng.DSACng()
- uid: System.Security.Cryptography.DSACng.#ctor(System.Int32)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng(Int32)
  nameWithType: DSACng.DSACng(Int32)
  fullName: System.Security.Cryptography.DSACng.DSACng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng(CngKey)
  nameWithType: DSACng.DSACng(CngKey)
  fullName: System.Security.Cryptography.DSACng.DSACng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: CreateSignature(Byte[])
  nameWithType: DSACng.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.DSACng.CreateSignature(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSACng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.DSACng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: DSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.DSACng.ExportParameters(Boolean)
- uid: System.Security.Cryptography.DSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: DSAParameters
  nameWithType: DSAParameters
  fullName: System.Security.Cryptography.DSAParameters
- uid: System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: DSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ImportParameters(DSAParameters)
  nameWithType: DSACng.ImportParameters(DSAParameters)
  fullName: System.Security.Cryptography.DSACng.ImportParameters(DSAParameters)
- uid: System.Security.Cryptography.DSACng.Key
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Key
  nameWithType: DSACng.Key
  fullName: System.Security.Cryptography.DSACng.Key
- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: DSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DSACng.LegalKeySizes
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: LegalKeySizes
  nameWithType: DSACng.LegalKeySizes
  fullName: System.Security.Cryptography.DSACng.LegalKeySizes
- uid: System.Security.Cryptography.KeySizes[]
  parent: System.Security.Cryptography
  isExternal: false
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes[]
  spec.csharp:
  - uid: System.Security.Cryptography.KeySizes
    name: KeySizes
    nameWithType: KeySizes
    fullName: KeySizes[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: DSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.DSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSACng.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSACng.VerifySignature(Byte[],Byte[])
- uid: System.Security.Cryptography.DSACng.#ctor*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: DSACng
  nameWithType: DSACng.DSACng
- uid: System.Security.Cryptography.DSACng.CreateSignature*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: CreateSignature
  nameWithType: DSACng.CreateSignature
- uid: System.Security.Cryptography.DSACng.Dispose*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Dispose
  nameWithType: DSACng.Dispose
- uid: System.Security.Cryptography.DSACng.ExportParameters*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ExportParameters
  nameWithType: DSACng.ExportParameters
- uid: System.Security.Cryptography.DSACng.HashData*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: HashData
  nameWithType: DSACng.HashData
- uid: System.Security.Cryptography.DSACng.ImportParameters*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: ImportParameters
  nameWithType: DSACng.ImportParameters
- uid: System.Security.Cryptography.DSACng.Key*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: Key
  nameWithType: DSACng.Key
- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: DSACng.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.DSACng.LegalKeySizes*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: LegalKeySizes
  nameWithType: DSACng.LegalKeySizes
- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: DSACng.SignatureAlgorithm
- uid: System.Security.Cryptography.DSACng.VerifySignature*
  parent: System.Security.Cryptography.DSACng
  isExternal: false
  name: VerifySignature
  nameWithType: DSACng.VerifySignature
