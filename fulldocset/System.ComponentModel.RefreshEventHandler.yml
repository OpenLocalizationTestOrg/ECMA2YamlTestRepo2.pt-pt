### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.RefreshEventHandler
  id: RefreshEventHandler
  langs:
  - csharp
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
  type: Delegate
  summary: "Represents the method that handles the <xref href=&quot;System.ComponentModel.TypeDescriptor.Refreshed&quot;></xref> event raised when a <xref:System.Type> or component is changed during design time."
  remarks: 'When you create a RefreshEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "The following sample demonstrates how to use a RefreshEventHandler delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes. In the code, the `OnRefreshed` event handles the event and displays the component being changed.  \n  \n The code assumes that a `TextBox` control is already sited on the form.  \n  \n [!code-cpp[RefreshEventHandler#1](~/add/codesnippet/cpp/t-system.componentmodel._31_1.cpp)]\n [!code-vb[RefreshEventHandler#1](~/add/codesnippet/visualbasic/t-system.componentmodel._31_1.vb)]\n [!code-cs[RefreshEventHandler#1](~/add/codesnippet/csharp/t-system.componentmodel._31_1.cs)]"
  syntax:
    content: public delegate void RefreshEventHandler(RefreshEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
