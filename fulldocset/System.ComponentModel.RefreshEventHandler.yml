### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.RefreshEventHandler
  id: RefreshEventHandler
  langs:
  - csharp
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
  type: Delegate
  summary: "Representa o método que processa o <xref href=&quot;System.ComponentModel.TypeDescriptor.Refreshed&quot;> </xref> evento é desencadeado quando um <xref:System.Type>ou componente é alterado durante a concepção.</xref:System.Type>"
  remarks: 'Quando cria um delegado RefreshEventHandler, identifique o método que irá processar o evento. Para associar o evento com o processador de eventos, adicione uma instância do delegado para o evento. O processador de eventos é chamado sempre que o evento ocorre, a menos que remova o delegado. Para obter mais informações sobre os delegados do processador de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).'
  example:
  - "The following sample demonstrates how to use a RefreshEventHandler delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes. In the code, the `OnRefreshed` event handles the event and displays the component being changed.  \n  \n The code assumes that a `TextBox` control is already sited on the form.  \n  \n [!code-cpp[RefreshEventHandler#1](~/add/codesnippet/cpp/t-system.componentmodel._31_1.cpp)]\n [!code-vb[RefreshEventHandler#1](~/add/codesnippet/visualbasic/t-system.componentmodel._31_1.vb)]\n [!code-cs[RefreshEventHandler#1](~/add/codesnippet/csharp/t-system.componentmodel._31_1.cs)]"
  syntax:
    content: public delegate void RefreshEventHandler(RefreshEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
