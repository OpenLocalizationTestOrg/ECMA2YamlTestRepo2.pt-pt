### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  id: InertiaExpansionBehavior2D
  children:
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX
  - System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY
  langs:
  - csharp
  name: InertiaExpansionBehavior2D
  nameWithType: InertiaExpansionBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  type: Class
  summary: "Describes desired expansion behavior of an inertia processor."
  syntax:
    content: 'public sealed class InertiaExpansionBehavior2D : System.Windows.Input.Manipulations.InertiaParameters2D'
  inheritance:
  - System.Object
  - System.Windows.Input.Manipulations.InertiaParameters2D
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor
  id: '#ctor'
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: InertiaExpansionBehavior2D()
  nameWithType: InertiaExpansionBehavior2D.InertiaExpansionBehavior2D()
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InertiaExpansionBehavior2D()
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Input.Manipulations.InertiaExpansionBehavior2D&quot;></xref> class."
  syntax:
    content: public InertiaExpansionBehavior2D ();
    parameters: []
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration
  id: DesiredDeceleration
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: DesiredDeceleration
  nameWithType: InertiaExpansionBehavior2D.DesiredDeceleration
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Gets or sets the desired expansion deceleration, in coordinate units per millisecond squared."
  remarks: "This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX%2A> and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY%2A> properties; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX%2A> and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY%2A> to `NaN`.       The default value for this property is `NaN`.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown."
  syntax:
    content: public float DesiredDeceleration { get; set; }
    return:
      type: System.Single
      description: "The desired expansion deceleration, in coordinate units per millisecond squared."
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX
  id: DesiredExpansionX
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: DesiredExpansionX
  nameWithType: InertiaExpansionBehavior2D.DesiredExpansionX
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Gets or sets the desired expansion along the x-axis, in coordinate units."
  remarks: "Expansion must be proportional. The value of this property must equal the value of the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY%2A> property when the inertia processor starts; otherwise an exception is thrown.       This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration%2A> to `NaN`.       The default value for this property is `NaN`.       DesiredExpansionX must be a finite, non-negative number. The rate of expansion is determined by the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX%2A> property.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown."
  syntax:
    content: public float DesiredExpansionX { get; set; }
    return:
      type: System.Single
      description: "The desired expansion along the x-axis, in coordinate units."
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY
  id: DesiredExpansionY
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: DesiredExpansionY
  nameWithType: InertiaExpansionBehavior2D.DesiredExpansionY
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Gets or sets the desired expansion along the y-axis, in coordinate units."
  remarks: "Expansion must be proportional. The value of this property must equal the value of the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX%2A> property when the inertia processor starts; otherwise an exception is thrown.       This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration%2A> to `NaN`.       The default value for this property is `NaN`.       DesiredExpansionY must be a finite, non-negative number. The rate of expansion is determined by the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY%2A> property.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown."
  syntax:
    content: public float DesiredExpansionY { get; set; }
    return:
      type: System.Single
      description: "The desired expansion along the y-axis, in coordinate units."
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius
  id: InitialRadius
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: InitialRadius
  nameWithType: InertiaExpansionBehavior2D.InitialRadius
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Gets or sets the initial average radius, in coordinate units."
  remarks: "This property is used by the inertia processor to calculate the scale factor for an element that is expanding.       For instance, if the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX%2A> and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY%2A> properties are set to 3.75, this informs the inertia processor that the starting expansion velocity is 3.75 coordinate units per millisecond along both axes (expansion must be proportional).       The scale factor associated with this rate of expansion depends upon the size of the element that is expanding. For a small element, this expansion velocity represents a larger scale factor than for a large element. You inform the inertia processor of the element size by setting the InitialRadius property.       The default value for the InitialRadius property is 1.0.       Valid values are any finite number greater than or equal to 1.0."
  syntax:
    content: public float InitialRadius { get; set; }
    return:
      type: System.Single
      description: "The initial average radius, in coordinate units."
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX
  id: InitialVelocityX
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: InitialVelocityX
  nameWithType: InertiaExpansionBehavior2D.InitialVelocityX
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Gets or sets the initial expansion velocity along the x-axis, in coordinate units per millisecond."
  remarks: "Expansion must be proportional. The value of this property must equal the value of the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY%2A> property when the inertia processor starts; otherwise an exception is thrown.       The default value for this property is `NaN`. Leaving this property and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY%2A> unchanged from the default or setting this property and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY%2A> to zero (0) will disable expansion inertia.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown."
  syntax:
    content: public float InitialVelocityX { get; set; }
    return:
      type: System.Single
      description: "The initial expansion velocity along the x-axis, in coordinate units per millisecond."
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY
  id: InitialVelocityY
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  langs:
  - csharp
  name: InitialVelocityY
  nameWithType: InertiaExpansionBehavior2D.InitialVelocityY
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Gets or sets the initial expansion velocity along the y-axis, in coordinate units per millisecond."
  remarks: "Expansion must be proportional. The value of this property must equal the value of the <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX%2A> property when the inertia processor starts; otherwise an exception is thrown.       The default value for this property is `NaN`. Leaving this property and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX%2A> unchanged from the default or setting this property and <xref:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX%2A> to zero (0) will disable expansion inertia.       This property cannot be set while the inertia processor is running; otherwise, an exception is thrown."
  syntax:
    content: public float InitialVelocityY { get; set; }
    return:
      type: System.Single
      description: "The initial expansion velocity along the y-axis, in coordinate units per millisecond."
  overload: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.Manipulations.InertiaParameters2D
  isExternal: false
  name: System.Windows.Input.Manipulations.InertiaParameters2D
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InertiaExpansionBehavior2D()
  nameWithType: InertiaExpansionBehavior2D.InertiaExpansionBehavior2D()
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InertiaExpansionBehavior2D()
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: DesiredDeceleration
  nameWithType: InertiaExpansionBehavior2D.DesiredDeceleration
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: DesiredExpansionX
  nameWithType: InertiaExpansionBehavior2D.DesiredExpansionX
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: DesiredExpansionY
  nameWithType: InertiaExpansionBehavior2D.DesiredExpansionY
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InitialRadius
  nameWithType: InertiaExpansionBehavior2D.InitialRadius
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InitialVelocityX
  nameWithType: InertiaExpansionBehavior2D.InitialVelocityX
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InitialVelocityY
  nameWithType: InertiaExpansionBehavior2D.InitialVelocityY
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InertiaExpansionBehavior2D
  nameWithType: InertiaExpansionBehavior2D.InertiaExpansionBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: DesiredDeceleration
  nameWithType: InertiaExpansionBehavior2D.DesiredDeceleration
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: DesiredExpansionX
  nameWithType: InertiaExpansionBehavior2D.DesiredExpansionX
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: DesiredExpansionY
  nameWithType: InertiaExpansionBehavior2D.DesiredExpansionY
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InitialRadius
  nameWithType: InertiaExpansionBehavior2D.InitialRadius
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InitialVelocityX
  nameWithType: InertiaExpansionBehavior2D.InitialVelocityX
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY*
  parent: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  isExternal: false
  name: InitialVelocityY
  nameWithType: InertiaExpansionBehavior2D.InitialVelocityY
