### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute
  id: GenerateScriptTypeAttribute
  children:
  - System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)
  - System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  - System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  langs:
  - csharp
  name: GenerateScriptTypeAttribute
  nameWithType: GenerateScriptTypeAttribute
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute
  type: Class
  summary: "Specifies that the server type must be generated in the proxy object. This class cannot be inherited."
  remarks: "In AJAX-enabled ASP.NET Web sites, ASP.NET can automatically generate proxy objects for methods of a Web service class. It does this for most top-level types for the input parameters and return values of any Web methods that are marked with <xref:System.Web.Script.Services.ScriptServiceAttribute>.       In other cases, if you proxy objects generated for server types, you must apply GenerateScriptTypeAttribute manually. You can apply GenerateScriptTypeAttribute to the Web service itself or to any Web service method or `static` page method marked with <xref:System.Web.Services.WebMethodAttribute>.       In some cases, even if the type corresponds to an input parameter or return value of a Web service method, the proxy will not be generated automatically. In that case, you must use the GenerateScriptTypeAttribute attribute to generate the proxy object for the type. This occurs for generic types and arrays that have more than one argument, such as `Dictionary<string,<T>>`.       One or more instances of GenerateScriptTypeAttribute can be applied to a Web service class or method. ASP.NET will then generate an ECMAScript (JavaScript) proxy class for each top-level type that is referenced by each declaration of GenerateScriptTypeAttribute.      > [!NOTE] >  If you want to generate proxy objects for nested types, you must manually apply GenerateScriptTypeAttribute to each nested type. ASP.NET generates proxies only for top-level types and does not automatically recursively apply the attribute to nested types.       For more information about how to use attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to apply GenerateScriptTypeAttribute to a Web service class and to a Web method. As a result, the `ColorObject` type and its nested type `FavoriteColors` are included in the proxy object.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)]

      public sealed class GenerateScriptTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  langs:
  - csharp
  name: GenerateScriptTypeAttribute(Type)
  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Script.Services.GenerateScriptTypeAttribute&quot;></xref> class for the specified type."
  remarks: "The <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> property is an optional named parameter for this constructor."
  example:
  - "The following example shows how to use <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to generate a proxy object for the specified type that uses a specific type identifier for the metadata marker.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public GenerateScriptTypeAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type to include in the proxy class."
  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  id: ScriptTypeId
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  langs:
  - csharp
  name: ScriptTypeId
  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Gets or sets the type identifier for the type metadata marker."
  remarks: "This is an optional property. If specified, the value of ScriptTypeId is used for the type metadata marker (&quot;__type&quot;) on the serialized JSON string instead of the assembly-qualified name of the type. During deserialization, the type resolver that is associated with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object will use the type metadata marker value to map back to the appropriate managed type."
  syntax:
    content: public string ScriptTypeId { get; set; }
    return:
      type: System.String
      description: "The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string. The default value is the assembly-qualified name of the type."
  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  id: Type
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  langs:
  - csharp
  name: Type
  nameWithType: GenerateScriptTypeAttribute.Type
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Gets the type that is included in the proxy object."
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: "The type object that is included in the generated proxy object."
  overload: System.Web.Script.Services.GenerateScriptTypeAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: GenerateScriptTypeAttribute(Type)
  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.GenerateScriptTypeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: ScriptTypeId
  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: Type
  nameWithType: GenerateScriptTypeAttribute.Type
  fullName: System.Web.Script.Services.GenerateScriptTypeAttribute.Type
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor*
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: GenerateScriptTypeAttribute
  nameWithType: GenerateScriptTypeAttribute.GenerateScriptTypeAttribute
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId*
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: ScriptTypeId
  nameWithType: GenerateScriptTypeAttribute.ScriptTypeId
- uid: System.Web.Script.Services.GenerateScriptTypeAttribute.Type*
  parent: System.Web.Script.Services.GenerateScriptTypeAttribute
  isExternal: false
  name: Type
  nameWithType: GenerateScriptTypeAttribute.Type
