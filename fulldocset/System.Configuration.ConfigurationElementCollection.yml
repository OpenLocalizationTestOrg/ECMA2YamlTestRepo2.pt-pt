### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationElementCollection
  id: ConfigurationElementCollection
  children:
  - System.Configuration.ConfigurationElementCollection.#ctor
  - System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  langs:
  - csharp
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection
  fullName: System.Configuration.ConfigurationElementCollection
  type: Class
  summary: "Representa um elemento de configuração que contém uma coleção de elementos subordinados."
  remarks: "ConfigurationElementCollection representa uma coleção de elementos dentro de um ficheiro de configuração.      > [!NOTE] > Um elemento dentro de um ficheiro de configuração referencia um elemento XML básico ou uma secção. Um elemento simple é uma tag XML com atributos relacionados, se aplicável. Um elemento simple constitui uma secção. Secções complexas podem conter um ou mais elementos simples, uma coleção de elementos e outras secções.       Utilizar o ConfigurationElementCollection para trabalhar com uma coleção de <xref:System.Configuration.ConfigurationElement>objetos.</xref:System.Configuration.ConfigurationElement> Implementar esta classe para adicionar as coleções personalizadas <xref:System.Configuration.ConfigurationElement>elementos <xref:System.Configuration.ConfigurationSection>.</xref:System.Configuration.ConfigurationSection> </xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following example shows how to use the ConfigurationElementCollection.  \n  \n The first example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class).  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/visualbasic/t-system.configuration.c_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#1](~/add/codesnippet/csharp/t-system.configuration.c_14_1.cs)]  \n  \n This second code example uses the classes specified before. You combine these two examples in a console application project.  \n  \n [!code-cs[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/csharp/t-system.configuration.c_14_2.cs)]\n [!code-vb[System.Configuration.ConfigurationElementCollection#31](~/add/codesnippet/visualbasic/t-system.configuration.c_14_2.vb)]  \n  \n When you run the console application, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \n  \n```  \n<configuration>  \n    <configSections>  \n        <section name=\"MyUrls\" type=\"UrlsSection,   \n          ConfigurationElementCollection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <MyUrls>  \n        <urls>  \n           <add name=\"Contoso\" url=\"http://www.contoso.com\" port=\"4040 />  \n        </urls>  \n    </MyUrls>  \n</configuration  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      public abstract class ConfigurationElementCollection : System.Configuration.ConfigurationElement, System.Collections.ICollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> classe."
  remarks: "Criar uma nova instância de <xref:System.Configuration.ConfigurationElementCollection>quando a aplicação tem de criar um personalizado <xref:System.Configuration.ConfigurationElementCollection>.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected ConfigurationElementCollection ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  id: '#ctor(System.Collections.IComparer)'
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Cria uma nova instância do <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> classe."
  remarks: "O <xref:System.Collections.IComparer>é utilizado para definir um comparador para utilizar.</xref:System.Collections.IComparer> Por exemplo, pode utilizar um comparador sensível tornar a chave sensível a maiúsculas e minúsculas."
  syntax:
    content: protected ConfigurationElementCollection (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "O <xref:System.Collections.IComparer>comparação a utilizar.</xref:System.Collections.IComparer>"
  overload: System.Configuration.ConfigurationElementCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comparer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  id: AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define o nome do <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para associar com a operação adicionar o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> quando substituí-lo de uma classe derivada."
  syntax:
    content: protected string AddElementName { get; set; }
    return:
      type: System.String
      description: "O nome do elemento."
  overload: System.Configuration.ConfigurationElementCollection.AddElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor selecionado começa pelo prefixo reservado &quot;config&quot; ou &quot;bloquear&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Adiciona um elemento de configuração para o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Utilize o método BaseAdd para adicionar um novo <xref:System.Configuration.ConfigurationElement>à coleção.</xref:System.Configuration.ConfigurationElement> Substitui-lo de uma classe derivada se comportamento personalizado é necessário quando é adicionado o elemento.       Ao adicionar, um elemento é considerado um duplicado apenas se as chaves são idênticas, mas os valores são diferentes. Elementos com chaves idênticas e os valores são aceites silenciosamente porque os elementos não compitam. No entanto, um elemento com uma chave idêntica, um valor diferente, mas não é possível adicionar porque não há nenhum lógica para determinar os valores concorrentes devem ser cumpridos."
  example:
  - "The following code example shows how to override the BaseAdd method and how to call it from an `Add` method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/visualbasic/158cf871-201b-4f7d-bc42-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#2](~/add/codesnippet/csharp/158cf871-201b-4f7d-bc42-_1.cs)]"
  syntax:
    content: protected virtual void BaseAdd (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  id: BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Adiciona um elemento de configuração para a coleção de elemento de configuração."
  remarks: "Utilize o parâmetro opcional `throwIfExists` para acionar um <xref:System.Exception>exceção se especificado <xref:System.Configuration.ConfigurationElement>objeto já existe no <xref:System.Configuration.ConfigurationElementCollection>coleção.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement> </xref:System.Exception>       Um elemento é considerado um duplicado, apenas se as chaves são idênticas, mas os valores são diferentes. Elementos com chaves idênticas e os valores são aceites silenciosamente porque os elementos não compitam. No entanto, um elemento com uma chave idêntica, um valor diferente, mas não é possível adicionar porque não há nenhum lógica para determinar os valores concorrentes devem ser cumpridos."
  syntax:
    content: protected void BaseAdd (System.Configuration.ConfigurationElement element, bool throwIfExists);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
    - id: throwIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para gerar uma exceção se a <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> especificado já está contido no <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "O <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> adicionar já existe no <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> e <code> throwIfExists </code> parâmetro é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  id: BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Adiciona um elemento de configuração para a coleção de elemento de configuração."
  remarks: "Utilize o `index` parâmetro para adicionar o <xref:System.Configuration.ConfigurationElement>de objeto para o <xref:System.Configuration.ConfigurationElementCollection>numa localização de índice específico.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement>"
  syntax:
    content: protected virtual void BaseAdd (int index, System.Configuration.ConfigurationElement element);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice no qual pretende adicionar especificado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> to add."
  overload: System.Configuration.ConfigurationElementCollection.BaseAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  id: BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Remove todos os objetos de configuração de elemento da coleção."
  remarks: "Quando se chama o método BaseClear, remove todos os <xref:System.Configuration.ConfigurationElement>objetos da coleção.</xref:System.Configuration.ConfigurationElement> Também de ser insere um `clear` diretiva no ficheiro de configuração."
  example:
  - "The following code example shows how to call the BaseClear method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_3_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_3_1.cs)]"
  syntax:
    content: protected void BaseClear ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.BaseClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n A collection item has been locked in a higher-level configuration."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o elemento de configuração na localização de índice especificado."
  remarks: ''
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/visualbasic/m-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#8](~/add/codesnippet/csharp/m-system.configuration.c_6_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice do <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para devolver."
    return:
      type: System.Configuration.ConfigurationElement
      description: "O <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> no índice especificado."
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  id: BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Devolve o elemento de configuração com a chave especificada."
  remarks: "O método BaseGet devolve `null` se não houver nenhuma <xref:System.Configuration.ConfigurationElement>objeto com a chave especificada na coleção.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following code example shows how to call the BaseGet method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/visualbasic/m-system.configuration.c_31_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#9](~/add/codesnippet/csharp/m-system.configuration.c_31_1.cs)]"
  syntax:
    content: protected System.Configuration.ConfigurationElement BaseGet (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A chave do elemento para devolver."
    return:
      type: System.Configuration.ConfigurationElement
      description: "O <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> especificado com chave; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseGet*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Devolve uma matriz de chaves para todos os elementos de configuração contidos o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  syntax:
    content: protected object[] BaseGetAllKeys ();
    parameters: []
    return:
      type: System.Object[]
      description: "Uma matriz que contenha as chaves para todas as <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objetos contidos no <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém a chave para o <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> na localização de índice especificado."
  syntax:
    content: protected object BaseGetKey (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice para a <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
    return:
      type: System.Object
      description: "A chave especificada <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "<code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n There is no <xref href=\"System.Configuration.ConfigurationElement\"></xref> at the specified <code>index</code>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  id: BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica o índice especificado da <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to call the BaseIndexOf method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#10](~/add/codesnippet/visualbasic/15cdbd2f-44ec-4b04-ad90-_1.vb)]"
  syntax:
    content: protected int BaseIndexOf (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "O <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para a localização do índice especificado."
    return:
      type: System.Int32
      description: "O índice especificado da <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>; caso contrário, -1."
  overload: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  id: BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica se o <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> com a chave especificada foi removido a <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  syntax:
    content: protected bool BaseIsRemoved (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A chave do elemento para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> com a chave especificada foi removido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  id: BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Remove um <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> da coleção."
  remarks: "O método BaseRemove insere um `<remove>` diretiva no ficheiro de configuração para o <xref:System.Configuration.ConfigurationElement>com a chave especificada.</xref:System.Configuration.ConfigurationElement>"
  example:
  - "The following code example shows how to call the BaseRemove method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/visualbasic/m-system.configuration.c_35_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#3](~/add/codesnippet/csharp/m-system.configuration.c_35_1.cs)]"
  syntax:
    content: protected void BaseRemove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A chave do <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para remover."
  overload: System.Configuration.ConfigurationElementCollection.BaseRemove*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Não <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> especificado com a chave existe na coleção, o elemento já foi removido ou o elemento não pode ser removido porque o valor do respetivo <xref:System.Configuration.ConfigurationProperty.Type*>não é <xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref>.</xref:System.Configuration.ConfigurationProperty.Type*>"
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Remove o <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> na localização de índice especificado."
  remarks: "O método BaseRemoveAt insere um `<remove>` diretiva no ficheiro de configuração para o elemento na localização de índice especificado."
  syntax:
    content: protected void BaseRemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice do <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para remover."
  overload: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The configuration is read-only.  \n  \n \\- or -  \n  \n <code>index</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the number of <xref href=\"System.Configuration.ConfigurationElement\"></xref> objects in the collection.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has already been removed.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object has been locked at a higher level.  \n  \n \\- or -  \n  \n The <xref href=\"System.Configuration.ConfigurationElement\"></xref> object was inherited.  \n  \n \\- or -  \n  \n The value of the <xref href=\"System.Configuration.ConfigurationElement\"></xref> object's <xref:System.Configuration.ConfigurationProperty.Type*> is not <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref> or <xref href=\"System.Configuration.ConfigurationElementCollectionType\"></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  id: ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define o nome para o <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para associar com a operação limpar o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> quando substituí-lo de uma classe derivada."
  syntax:
    content: protected string ClearElementName { get; set; }
    return:
      type: System.String
      description: "O nome do elemento."
  overload: System.Configuration.ConfigurationElementCollection.ClearElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor selecionado começa pelo prefixo reservado &quot;config&quot; ou &quot;bloquear&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  id: CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o tipo do <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "O tipo poderá ser um <xref:System.Configuration.ConfigurationElementCollectionType>ou um <xref:System.Configuration.ConfigurationElementCollectionType>campo.</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> Para obter mais informações, consulte <xref:System.Configuration.ConfigurationElementCollectionType>.</xref:System.Configuration.ConfigurationElementCollectionType>"
  example:
  - "The following code example shows how to get the CollectionType property.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/visualbasic/p-system.configuration.c_6_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#5](~/add/codesnippet/csharp/p-system.configuration.c_6_1.cs)]"
  syntax:
    content: public virtual System.Configuration.ConfigurationElementCollectionType CollectionType { get; }
    return:
      type: System.Configuration.ConfigurationElementCollectionType
      description: "O <xref href=&quot;System.Configuration.ConfigurationElementCollectionType&quot;> </xref> desta coleção."
  overload: System.Configuration.ConfigurationElementCollection.CollectionType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  id: CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Copia os conteúdos do <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> numa matriz."
  syntax:
    content: public void CopyTo (System.Configuration.ConfigurationElement[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.ConfigurationElement[]
      description: "Matriz para o qual pretende copiar o conteúdo a <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Localização do índice no qual pretende começar a copiar."
  overload: System.Configuration.ConfigurationElementCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Count
  id: Count
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o número de elementos na colecção."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de elementos na colecção."
  overload: System.Configuration.ConfigurationElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  id: CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Quando substituí-lo de uma classe derivada, cria um novo <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  remarks: "Substitua o método de CreateNewElement para criar personalizado <xref:System.Configuration.ConfigurationElement>objetos de um tipo específico.</xref:System.Configuration.ConfigurationElement> Quando uma coleção é carregada a partir do ficheiro de configuração, CreateNewElement denomina-se para criar elementos individuais. CreateNewElement tem de ser substituído nas classes que derivam da <xref:System.Configuration.ConfigurationElementCollection>classe.</xref:System.Configuration.ConfigurationElementCollection>"
  example:
  - "The following code example shows how to override the CreateNewElement method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/visualbasic/m-system.configuration.c_38_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#6](~/add/codesnippet/csharp/m-system.configuration.c_38_1.cs)]"
  syntax:
    content: protected abstract System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "A recém-criado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  id: CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Cria uma nova <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> quando substituí-lo de uma classe derivada."
  remarks: "Substitua o método de CreateNewElement para criar personalizado <xref:System.Configuration.ConfigurationElement>objetos de um tipo específico.</xref:System.Configuration.ConfigurationElement> Quando uma coleção é carregada a partir do ficheiro de configuração, CreateNewElement denomina-se para criar elementos individuais. CreateNewElement tem de ser substituído nas classes que derivam da <xref:System.Configuration.ConfigurationElementCollection>classe.</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected virtual System.Configuration.ConfigurationElement CreateNewElement (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "O nome do <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> criar."
    return:
      type: System.Configuration.ConfigurationElement
      description: "Um novo <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> com um nome especificado."
  overload: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  id: ElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém o nome utilizado para identificar esta coleção de elementos no ficheiro de configuração quando substituí-lo de uma classe derivada."
  remarks: "Substituir a propriedade ElementName personalizadas <xref:System.Configuration.ConfigurationElementCollection>.</xref:System.Configuration.ConfigurationElementCollection> o nome"
  syntax:
    content: protected virtual string ElementName { get; }
    return:
      type: System.String
      description: "O nome da coleção; caso contrário, uma cadeia vazia. A predefinição é uma cadeia vazia."
  overload: System.Configuration.ConfigurationElementCollection.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  id: EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define um valor que especifica se a coleção foi limpo."
  remarks: "Definir a propriedade EmitClear como `true` faz com que um `<clear>` diretiva para serem escritos para o ficheiro de configuração quando a coleção está a ser serializada."
  syntax:
    content: public bool EmitClear { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção foi limpo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.EmitClear*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "A configuração é só de leitura."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Compara o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> para o objeto especificado."
  syntax:
    content: public override bool Equals (object compareTo);
    parameters:
    - id: compareTo
      type: System.Object
      description: "O objeto comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto para a comparação com é igual a atual <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém a chave de elemento de um elemento de configuração especificado quando substituí-lo de uma classe derivada."
  remarks: ''
  example:
  - "The following code example shows how to override GetElementKey method.  \n  \n [!code-vb[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/visualbasic/85b3e1dd-d2ae-4572-b7ba-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationElementCollection#7](~/add/codesnippet/csharp/85b3e1dd-d2ae-4572-b7ba-_1.cs)]"
  syntax:
    content: protected abstract object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "O <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para devolver a chave."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que atua como a chave especificada <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ConfigurationElementCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um <xref:System.Collections.IEnumerator>que é utilizada para iterar através de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que é utilizada para iterar através de <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  id: GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor exclusivo que representa o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor exclusivo que representa o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> instância atual."
  overload: System.Configuration.ConfigurationElementCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  id: IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica se especificado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> existe o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Substitua o método de IsElementName para fornecer o comportamento personalizado."
  syntax:
    content: protected virtual bool IsElementName (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "O nome do elemento para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o elemento existe na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  id: IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica se especificado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> podem ser removidos do <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  remarks: "Consulta IsElementRemovable antes de remover um elemento de coleção."
  syntax:
    content: protected virtual bool IsElementRemovable (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "O elemento para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> pode ser removido deste <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica se esta <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> foi modificado desde que foi guardado ou carregada quando substituí-lo de uma classe derivada pela última vez."
  remarks: "Se o <xref:System.Configuration.ConfigurationElement.IsModified%2A>método de qualquer <xref:System.Configuration.ConfigurationElement>contidos um <xref:System.Configuration.ConfigurationElementCollection>devolve `true`, o método IsModified da coleção completa devolve `true` bem.</xref:System.Configuration.ConfigurationElementCollection> </xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationElement.IsModified%2A>"
  syntax:
    content: protected override bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se qualquer elemento contido foi modificado; caso contrário,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Configuration.ConfigurationElementCollection.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica se o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> objeto é só de leitura."
  remarks: "O sistema define os elementos de configuração não podem ser modificados. Chame este método para determinar se os elementos podem ser modificados."
  syntax:
    content: public override bool IsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> objeto é lido apenas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se o acesso à coleção está sincronizado."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> é sincronizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  id: OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Faz com que o sistema de configuração acionar uma excepção."
  remarks: "O OnDeserializeUnrecognizedElement é chamado quando um elemento de configuração não reconhecido é ler a partir de um ficheiro de configuração.       Substitua este método para fornecer processamento personalizado de elementos de configuração não reconhecido de um ficheiro de configuração. A predefinição devolve o valor, `false`, faz com que o sistema de configuração acionar uma excepção."
  syntax:
    content: protected override bool OnDeserializeUnrecognizedElement (string elementName, System.Xml.XmlReader reader);
    parameters:
    - id: elementName
      type: System.String
      description: "O nome do elemento não reconhecido."
    - id: reader
      type: System.Xml.XmlReader
      description: "Um fluxo de entrada que lê o XML no ficheiro de configuração."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o elemento não reconhecido foi anulado com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O elemento especificado na <code> elementName </code> é o <xref uid=&quot;langword_csharp_&lt;clear&gt;&quot; name=&quot;&lt;clear&gt;&quot; href=&quot;&quot;> </xref> elemento."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elementName</code>começa pelo prefixo reservado &quot;config&quot; ou &quot;bloquear&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  id: RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém ou define o nome do <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para associar a operação de remoção no <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> quando substituí-lo de uma classe derivada."
  syntax:
    content: protected string RemoveElementName { get; set; }
    return:
      type: System.String
      description: "O nome do elemento."
  overload: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor selecionado começa pelo prefixo reservado &quot;config&quot; ou &quot;bloquear&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Repõe o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> estado inalterado quando substituí-lo de uma classe derivada."
  remarks: "É o comportamento predefinido para o método de reposição para limpar quaisquer elementos modificados uma <xref:System.Configuration.ConfigurationElementCollection>objeto contém e definir os elementos de modificação para os valores especificados pelo respetivo ficheiro de configuração principal.</xref:System.Configuration.ConfigurationElementCollection> Se qualquer elemento no <xref:System.Configuration.ConfigurationElementCollection>tem elementos subordinados, também é denominada de reposição nesses elementos subordinados.</xref:System.Configuration.ConfigurationElementCollection>"
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "O <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> que representa o elemento principal de coleção, se qualquer um; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Repõe o valor da <xref:System.Configuration.ConfigurationElementCollection.IsModified*>propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> quando substituídas numa classe derivada.</xref:System.Configuration.ConfigurationElementCollection.IsModified*>"
  remarks: "O método ResetModified determina se os elementos desta coleção serão escritos no ficheiro de configuração, quando a configuração está atualizada."
  syntax:
    content: protected override void ResetModified ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Escreve os dados de configuração para um elemento XML no ficheiro de configuração quando substituí-lo de uma classe derivada."
  remarks: "O método SerializeElement escreve o conteúdo de elementos de configuração contidos na coleção e quaisquer elementos aninhados contêm o ficheiro de configuração. Substitua SerializeElement para fornecer um procedimento de escrita personalizados fora do conteúdo de coleção e elementos aninhados."
  syntax:
    content: protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Fluxo de saída que escreve XML no ficheiro de configuração."
    - id: serializeCollectionKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a chave de coleção; a serialização caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> foi escrito para o ficheiro de configuração com êxito."
  overload: System.Configuration.ConfigurationElementCollection.SerializeElement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um dos elementos da coleção foi adicionado ou substituído e começa pelo prefixo reservado &quot;config&quot; ou &quot;bloquear&quot;."
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Define o <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>propriedade para o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> objeto e para todos os elementos secundárias.</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly*>"
  remarks: "Este método é utilizado internamente para reserve desses elementos de configuração do sistema que não podem ser modificados. Para determinar os elementos são modificáveis, chame o <xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>método.</xref:System.Configuration.ConfigurationElementCollection.IsReadOnly%2A>"
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um objeto utilizado para sincronizar acesso para o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto utilizado para sincronizar acesso para o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Copia o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> numa matriz."
  syntax:
    content: void ICollection.CopyTo (Array arr, int index);
    parameters:
    - id: arr
      type: System.Array
      description: "Matriz para o qual pretende copiar esta <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Localização do índice no qual pretende começar a copiar."
  overload: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  id: ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém um valor que indica se uma tentativa de adicionar um duplicado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> para o <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> fará com que uma exceção ao ser emitida."
  remarks: "Quando adicionar um elemento duplicado, é emitida uma exceção se o <xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>valor do elemento é um <xref:System.Configuration.ConfigurationElementCollectionType>ou <xref:System.Configuration.ConfigurationElementCollectionType>.</xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollectionType> </xref:System.Configuration.ConfigurationElementCollection.CollectionType%2A>       Tenha em atenção que os elementos com chaves idênticas e os valores não são considerados duplicados e são aceites silenciosamente. Apenas elementos com chaves idênticas, mas valores diferentes são considerados os duplicados. Para obter mais informações, consulte a secção observações para o <xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>método.</xref:System.Configuration.ConfigurationElementCollection.BaseAdd%2A>"
  syntax:
    content: protected virtual bool ThrowOnDuplicate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma tentativa de adicionar um duplicado <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> este <xref href=&quot;System.Configuration.ConfigurationElementCollection&quot;> </xref> fará com que uma exceção ao ser iniciadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inverte o efeito da intercalação de informações de configuração a partir de diferentes níveis da hierarquia de configuração"
  remarks: "O método Unmerge Inverte o efeito da intercalação de informações de configuração a partir de diferentes níveis da hierarquia de configuração. Isto permite que o conjunto de configurações ao nível da hierarquia atual para ser diferenciadas desse conjunto níveis principal, antes de serialização.       Unmerge é chamado pelo sistema num novo elemento de temporário para comparar o objeto principal e o objeto de origem. Com base no <xref:System.Configuration.ConfigurationSaveMode>valor, em seguida, define o objeto temporário para conter os dados que tem de ser serializado.</xref:System.Configuration.ConfigurationSaveMode> Para obter detalhes sobre como guardar modos, consulte <xref:System.Configuration.ConfigurationSaveMode>.</xref:System.Configuration.ConfigurationSaveMode>"
  syntax:
    content: protected override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "A <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objeto no nível atual que contém uma vista intercalada das propriedades."
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "O elemento principal <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objeto do elemento atual, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se se tratar de nível superior."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A <xref href=&quot;System.Configuration.ConfigurationSaveMode&quot;> </xref> enumerar o valor que determina cuja propriedade valores a incluir."
  overload: System.Configuration.ConfigurationElementCollection.Unmerge*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ConfigurationElementCollection.#ctor
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection()
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection()
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection()
- uid: System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection(IComparer)
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
  fullName: System.Configuration.ConfigurationElementCollection.ConfigurationElementCollection(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Configuration.ConfigurationElementCollection.AddElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
  fullName: System.Configuration.ConfigurationElementCollection.AddElementName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(ConfigurationElement,Boolean)
  nameWithType: ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(ConfigurationElement,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd(Int32,ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseAdd(Int32,ConfigurationElement)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.ConfigurationElementCollection.BaseClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear()
  nameWithType: ConfigurationElementCollection.BaseClear()
  fullName: System.Configuration.ConfigurationElementCollection.BaseClear()
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Int32)
  nameWithType: ConfigurationElementCollection.BaseGet(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet(Object)
  nameWithType: ConfigurationElementCollection.BaseGet(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGet(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys()
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys()
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys()
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey(Int32)
  nameWithType: ConfigurationElementCollection.BaseGetKey(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseGetKey(Int32)
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIndexOf(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved(Object)
  nameWithType: ConfigurationElementCollection.BaseIsRemoved(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseIsRemoved(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove(Object)
  nameWithType: ConfigurationElementCollection.BaseRemove(Object)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemove(Object)
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt(Int32)
  nameWithType: ConfigurationElementCollection.BaseRemoveAt(Int32)
  fullName: System.Configuration.ConfigurationElementCollection.BaseRemoveAt(Int32)
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
  fullName: System.Configuration.ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
  fullName: System.Configuration.ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollectionType
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementCollectionType
  nameWithType: ConfigurationElementCollectionType
  fullName: System.Configuration.ConfigurationElementCollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo(ConfigurationElement[],Int32)
  nameWithType: ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
  fullName: System.Configuration.ConfigurationElementCollection.CopyTo(ConfigurationElement[],Int32)
- uid: System.Configuration.ConfigurationElement[]
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement[]
  spec.csharp:
  - uid: System.Configuration.ConfigurationElement
    name: ConfigurationElement
    nameWithType: ConfigurationElement
    fullName: ConfigurationElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.ConfigurationElementCollection.Count
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
  fullName: System.Configuration.ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: ConfigurationElementCollection.CreateNewElement()
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement(String)
  nameWithType: ConfigurationElementCollection.CreateNewElement(String)
  fullName: System.Configuration.ConfigurationElementCollection.CreateNewElement(String)
- uid: System.Configuration.ConfigurationElementCollection.ElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
  fullName: System.Configuration.ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
  fullName: System.Configuration.ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: ConfigurationElementCollection.Equals(Object)
  fullName: System.Configuration.ConfigurationElementCollection.Equals(Object)
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.GetElementKey(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ConfigurationElementCollection.GetEnumerator()
  fullName: System.Configuration.ConfigurationElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: ConfigurationElementCollection.GetHashCode()
  fullName: System.Configuration.ConfigurationElementCollection.GetHashCode()
- uid: System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName(String)
  nameWithType: ConfigurationElementCollection.IsElementName(String)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementName(String)
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.IsElementRemovable(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.IsModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationElementCollection.IsModified()
  fullName: System.Configuration.ConfigurationElementCollection.IsModified()
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly()
  nameWithType: ConfigurationElementCollection.IsReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.IsReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
  fullName: System.Configuration.ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement(String,XmlReader)
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
  fullName: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(String,XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
  fullName: System.Configuration.ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: ConfigurationElementCollection.Reset(ConfigurationElement)
  fullName: System.Configuration.ConfigurationElementCollection.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElementCollection.ResetModified
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationElementCollection.ResetModified()
  fullName: System.Configuration.ConfigurationElementCollection.ResetModified()
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
  fullName: System.Configuration.ConfigurationElementCollection.SerializeElement(XmlWriter,Boolean)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ConfigurationElementCollection.SetReadOnly()
  fullName: System.Configuration.ConfigurationElementCollection.SetReadOnly()
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
  fullName: System.Configuration.ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.ConfigurationElementCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
  fullName: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationElementCollection.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationElementCollection.#ctor*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ConfigurationElementCollection
  nameWithType: ConfigurationElementCollection.ConfigurationElementCollection
- uid: System.Configuration.ConfigurationElementCollection.AddElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: AddElementName
  nameWithType: ConfigurationElementCollection.AddElementName
- uid: System.Configuration.ConfigurationElementCollection.BaseAdd*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseAdd
  nameWithType: ConfigurationElementCollection.BaseAdd
- uid: System.Configuration.ConfigurationElementCollection.BaseClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseClear
  nameWithType: ConfigurationElementCollection.BaseClear
- uid: System.Configuration.ConfigurationElementCollection.BaseGet*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGet
  nameWithType: ConfigurationElementCollection.BaseGet
- uid: System.Configuration.ConfigurationElementCollection.BaseGetAllKeys*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetAllKeys
  nameWithType: ConfigurationElementCollection.BaseGetAllKeys
- uid: System.Configuration.ConfigurationElementCollection.BaseGetKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseGetKey
  nameWithType: ConfigurationElementCollection.BaseGetKey
- uid: System.Configuration.ConfigurationElementCollection.BaseIndexOf*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIndexOf
  nameWithType: ConfigurationElementCollection.BaseIndexOf
- uid: System.Configuration.ConfigurationElementCollection.BaseIsRemoved*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseIsRemoved
  nameWithType: ConfigurationElementCollection.BaseIsRemoved
- uid: System.Configuration.ConfigurationElementCollection.BaseRemove*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemove
  nameWithType: ConfigurationElementCollection.BaseRemove
- uid: System.Configuration.ConfigurationElementCollection.BaseRemoveAt*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: BaseRemoveAt
  nameWithType: ConfigurationElementCollection.BaseRemoveAt
- uid: System.Configuration.ConfigurationElementCollection.ClearElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ClearElementName
  nameWithType: ConfigurationElementCollection.ClearElementName
- uid: System.Configuration.ConfigurationElementCollection.CollectionType*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CollectionType
  nameWithType: ConfigurationElementCollection.CollectionType
- uid: System.Configuration.ConfigurationElementCollection.CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConfigurationElementCollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.Count*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Count
  nameWithType: ConfigurationElementCollection.Count
- uid: System.Configuration.ConfigurationElementCollection.CreateNewElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: ConfigurationElementCollection.CreateNewElement
- uid: System.Configuration.ConfigurationElementCollection.ElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ElementName
  nameWithType: ConfigurationElementCollection.ElementName
- uid: System.Configuration.ConfigurationElementCollection.EmitClear*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: EmitClear
  nameWithType: ConfigurationElementCollection.EmitClear
- uid: System.Configuration.ConfigurationElementCollection.Equals*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Equals
  nameWithType: ConfigurationElementCollection.Equals
- uid: System.Configuration.ConfigurationElementCollection.GetElementKey*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetElementKey
  nameWithType: ConfigurationElementCollection.GetElementKey
- uid: System.Configuration.ConfigurationElementCollection.GetEnumerator*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ConfigurationElementCollection.GetEnumerator
- uid: System.Configuration.ConfigurationElementCollection.GetHashCode*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: GetHashCode
  nameWithType: ConfigurationElementCollection.GetHashCode
- uid: System.Configuration.ConfigurationElementCollection.IsElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementName
  nameWithType: ConfigurationElementCollection.IsElementName
- uid: System.Configuration.ConfigurationElementCollection.IsElementRemovable*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsElementRemovable
  nameWithType: ConfigurationElementCollection.IsElementRemovable
- uid: System.Configuration.ConfigurationElementCollection.IsModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsModified
  nameWithType: ConfigurationElementCollection.IsModified
- uid: System.Configuration.ConfigurationElementCollection.IsReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ConfigurationElementCollection.IsReadOnly
- uid: System.Configuration.ConfigurationElementCollection.IsSynchronized*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ConfigurationElementCollection.IsSynchronized
- uid: System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: OnDeserializeUnrecognizedElement
  nameWithType: ConfigurationElementCollection.OnDeserializeUnrecognizedElement
- uid: System.Configuration.ConfigurationElementCollection.RemoveElementName*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: RemoveElementName
  nameWithType: ConfigurationElementCollection.RemoveElementName
- uid: System.Configuration.ConfigurationElementCollection.Reset*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Reset
  nameWithType: ConfigurationElementCollection.Reset
- uid: System.Configuration.ConfigurationElementCollection.ResetModified*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ResetModified
  nameWithType: ConfigurationElementCollection.ResetModified
- uid: System.Configuration.ConfigurationElementCollection.SerializeElement*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SerializeElement
  nameWithType: ConfigurationElementCollection.SerializeElement
- uid: System.Configuration.ConfigurationElementCollection.SetReadOnly*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ConfigurationElementCollection.SetReadOnly
- uid: System.Configuration.ConfigurationElementCollection.SyncRoot*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ConfigurationElementCollection.SyncRoot
- uid: System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ConfigurationElementCollection.System.Collections.ICollection.CopyTo
- uid: System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: ThrowOnDuplicate
  nameWithType: ConfigurationElementCollection.ThrowOnDuplicate
- uid: System.Configuration.ConfigurationElementCollection.Unmerge*
  parent: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: Unmerge
  nameWithType: ConfigurationElementCollection.Unmerge
