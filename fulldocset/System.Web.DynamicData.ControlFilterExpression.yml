### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.ControlFilterExpression
  id: ControlFilterExpression
  children:
  - System.Web.DynamicData.ControlFilterExpression.#ctor
  - System.Web.DynamicData.ControlFilterExpression.Column
  - System.Web.DynamicData.ControlFilterExpression.ControlID
  - System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  - System.Web.DynamicData.ControlFilterExpression.SaveViewState
  - System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.DynamicData.ControlFilterExpression.TrackViewState
  langs:
  - csharp
  name: ControlFilterExpression
  nameWithType: ControlFilterExpression
  fullName: System.Web.DynamicData.ControlFilterExpression
  type: Class
  summary: "Modifies a database query by using the data key of the item that is selected in a data-bound control."
  remarks: "The ControlFilterExpression class that is designed to be used when a page contains two data-bound controls such as a <xref:System.Web.UI.WebControls.GridView> control and a <xref:System.Web.UI.WebControls.ListView> control. One control is the source, where a data key (row) is selected. The other control is the target where the data is displayed based on the selected data key. The target data is obtained by a data source control that executes the query that is defined in the <xref:System.Web.UI.WebControls.QueryExtender> class and that is built by using the selected data key.       To use the ControlFilterExpression class in a page, you follow these steps:      -   Add the <xref:System.Web.UI.WebControls.QueryExtender> control to the page.      -   Set the `TargetControlID` property of the <xref:System.Web.UI.WebControls.QueryExtender> control to the ID of the target data source control.      -   Add a ControlFilterExpression instance to the <xref:System.Web.UI.WebControls.QueryExtender> control.      -   Set the `ControlID` property of the ControlFilterExpression element to the source data-bound control."
  example:
  - "The following example shows how to use the ControlFilterExpression class to reference a source data-bound control, where the data key is selected. The <xref:System.Web.UI.WebControls.QueryExtender> control points to a target data source control that obtains data that is filtered by using the selected data key. In the example, the source data-bound control references a parent table and the target data-bound control references a child table.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"SourceGridViewID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: 'public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: ControlFilterExpression()
  nameWithType: ControlFilterExpression.ControlFilterExpression()
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;></xref> class."
  syntax:
    content: public ControlFilterExpression ();
    parameters: []
  overload: System.Web.DynamicData.ControlFilterExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.Column
  id: Column
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: Column
  nameWithType: ControlFilterExpression.Column
  fullName: System.Web.DynamicData.ControlFilterExpression.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets or sets the name of the column that the query is based on."
  remarks: "If this property is empty, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the selected data key as the primary key of the current table. This is useful in a list-details scenario where source and target data-bound controls operate on data from the same table.       If you assign a value to the property, the <xref:System.Web.DynamicData.ControlFilterExpression> control treats the data key as a foreign key. The value assigned to this property becomes the name of the column that is displayed in the target data-bound control. This is useful in a parent-child scenario where the target data-bound control operates on data from the child table and the source data-bound control operates on data from the parent table."
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the column that the filter applies to.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"GridViewID\" Column=\"Category\"/>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string Column { get; set; }
    return:
      type: System.String
      description: "The name of the column that the query is based on."
  overload: System.Web.DynamicData.ControlFilterExpression.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID
  id: ControlID
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets or sets the ID of the source data-bound control."
  remarks: "The ControlID property identifies the source data-bound control from which the data key is selected. The selected data key is then used by the <xref:System.Web.DynamicData.ControlFilterExpression> control to build the query."
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the ID of the source data-bound control.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"GridViewID\" Column=\"Category\"/>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "The ID of the source data-bound control."
  overload: System.Web.DynamicData.ControlFilterExpression.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gets the data source query to modify."
  remarks: "The GetQueryable method modifies the query based on the selected data key of the source data-bound control."
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "The data source query to modify."
    return:
      type: System.Linq.IQueryable
      description: "The object that represents the data source query that is modified by this <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;></xref> instance."
  overload: System.Web.DynamicData.ControlFilterExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ControlFilterExpression.LoadViewState(Object)
  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Restores the previously saved view state."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "The state to restore."
  overload: System.Web.DynamicData.ControlFilterExpression.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState
  id: SaveViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ControlFilterExpression.SaveViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Saves the changes to view state since the time the page was posted to the server."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "The object that contains the changes to view state. If there is no view state associated with the object, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.DynamicData.ControlFilterExpression.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Initializes the filter expression with data source information."
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "The control in which the <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;></xref> instance is contained, such as the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control."
    - id: context
      type: System.Web.HttpContext
      description: "The application&quot;s current <xref href=&quot;System.Web.HttpContext&quot;></xref> object."
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "The target data source for the <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;></xref> instance. If the <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;></xref> instance is contained in the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control, this parameter is the data source that the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control refers to"
  overload: System.Web.DynamicData.ControlFilterExpression.SetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState
  id: TrackViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ControlFilterExpression.TrackViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Causes the <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;></xref> object to track changes to its view state so they can be stored in the control&quot;s view state object and to be persisted across requests for the same page."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.DynamicData.ControlFilterExpression.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlFilterExpression()
  nameWithType: ControlFilterExpression.ControlFilterExpression()
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()
- uid: System.Web.DynamicData.ControlFilterExpression.Column
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: Column
  nameWithType: ControlFilterExpression.Column
  fullName: System.Web.DynamicData.ControlFilterExpression.Column
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ControlFilterExpression.LoadViewState(Object)
  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SaveViewState()
  nameWithType: ControlFilterExpression.SaveViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: TrackViewState()
  nameWithType: ControlFilterExpression.TrackViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlFilterExpression
  nameWithType: ControlFilterExpression.ControlFilterExpression
- uid: System.Web.DynamicData.ControlFilterExpression.Column*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: Column
  nameWithType: ControlFilterExpression.Column
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: GetQueryable
  nameWithType: ControlFilterExpression.GetQueryable
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: LoadViewState
  nameWithType: ControlFilterExpression.LoadViewState
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SaveViewState
  nameWithType: ControlFilterExpression.SaveViewState
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SetContext
  nameWithType: ControlFilterExpression.SetContext
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: TrackViewState
  nameWithType: ControlFilterExpression.TrackViewState
