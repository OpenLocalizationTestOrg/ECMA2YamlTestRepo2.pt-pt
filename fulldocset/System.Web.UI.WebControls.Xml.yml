### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Xml
  id: Xml
  children:
  - System.Web.UI.WebControls.Xml.#ctor
  - System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Xml.ClientID
  - System.Web.UI.WebControls.Xml.Controls
  - System.Web.UI.WebControls.Xml.CreateControlCollection
  - System.Web.UI.WebControls.Xml.Document
  - System.Web.UI.WebControls.Xml.DocumentContent
  - System.Web.UI.WebControls.Xml.DocumentSource
  - System.Web.UI.WebControls.Xml.EnableTheming
  - System.Web.UI.WebControls.Xml.FindControl(System.String)
  - System.Web.UI.WebControls.Xml.Focus
  - System.Web.UI.WebControls.Xml.GetDesignModeState
  - System.Web.UI.WebControls.Xml.HasControls
  - System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Xml.SkinID
  - System.Web.UI.WebControls.Xml.Transform
  - System.Web.UI.WebControls.Xml.TransformArgumentList
  - System.Web.UI.WebControls.Xml.TransformSource
  - System.Web.UI.WebControls.Xml.XPathNavigator
  langs:
  - csharp
  name: Xml
  nameWithType: Xml
  fullName: System.Web.UI.WebControls.Xml
  type: Class
  summary: "Displays an XML document without formatting or using Extensible Stylesheet Language Transformations (XSLT)."
  remarks: "In this topic:      -   [Introduction](#introduction)      -   [Specifying XML Data](#specifying_xml_data)      -   [Specifying an XSL Transformation](#specifying_an_xsl_transformation)      -   [Declarative Syntax](#declarative_syntax)      <a name=&quot;introduction&quot;></a>    ## Introduction    Use the Xml control to display the contents of an XML document without formatting or using XSL Transformations.      <a name=&quot;specifying_xml_data&quot;></a>    ## Specifying XML Data    The XML document to display is specified by setting one of three properties. These three properties represent the different types of XML documents that can be displayed. You can display a <xref:System.Xml.XmlDocument?displayProperty=fullName>, an XML string, or an XML file by setting the appropriate property. The following table lists the properties for specifying the XML document.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.Xml.Document%2A>|Sets the XML document using a <xref:System.Xml.XmlDocument?displayProperty=fullName> object. **Warning:**  This property is obsolete. Use one of the other properties listed in this section to set the XML content for the Xml control.|   |<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|Sets the XML document using a string. **Note:**  This property is commonly set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the Xml control.|   |<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|Sets the XML document using a file.|      > [!NOTE] >  At least one of the XML document properties must be set to display an XML document. If more than one XML document property is set, the XML document referenced in the last property set is displayed. The documents in the other properties are ignored.      <a name=&quot;specifying_an_xsl_transformation&quot;></a>    ## Specifying an XSL Transformation    You can optionally specify an XSL Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream by setting one of two properties. The two properties represent the different types of XSL Transformation style sheets that can be used to format the XML document. You can format the XML document with a <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file by setting the appropriate property. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The following table lists the properties for specifying an XSL Transformation style sheet.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.Xml.Transform%2A>|Formats the XML document using the specified <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object. **Note:**  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions.|   |<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|Formats the XML document using the specified XSL Transformation style sheet file.|      > [!NOTE] >  The XSL Transformation style sheet is optional. You do not need to set the <xref:System.Web.UI.WebControls.Xml.Transform%2A> or the <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> property. If both XSL Transformation style sheet properties are set, the last property set determines which XSL Transformation style sheet is used to format the XML document. The other property is ignored.       The Xml class also provides the <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> property, which enables you to provide the XSL Transformation style sheet with optional arguments. The arguments can be either XSL Transformations (XSLT) parameters or extension objects.      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:Xml       DocumentSource=&quot;uri&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformSource=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_196_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DocumentSource")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))]

      [System.Web.UI.PersistChildren(false, true)]

      public class Xml : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> class."
  syntax:
    content: public Xml ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Notifies the server control that an element, either XML or HTML, was parsed, and adds the element to the server control&quot;s <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> object."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.WebControls.Xml> server control.  \n  \n [!code-cs[CustomXmlAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_1.aspx)]\n [!code-vb[CustomXmlAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_1.aspx)]  \n  \n [!code-vb[CustomXmlAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_2.vb)]\n [!code-cs[CustomXmlAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_2.cs)]"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "An <xref:System.Object> that represents the parsed element."
  overload: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>obj</code> is not of type <xref href=&quot;System.Web.UI.LiteralControl&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.ClientID
  id: ClientID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt; property and returns the base server control identifier."
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "The base server control identifier."
  overload: System.Web.UI.WebControls.Xml.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Controls
  id: Controls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; property and returns the base <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> collection."
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "The base <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> collection."
  overload: System.Web.UI.WebControls.Xml.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates a new <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref> object."
  remarks: "The CreateControlCollection method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.WebControls.Xml> control."
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Always returns an <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>."
  overload: System.Web.UI.WebControls.Xml.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Document
  id: Document
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the <xref href=&quot;System.Xml.XmlDocument&quot;></xref> to display in the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  remarks: "The Document property is obsolete. To specify the XML that will be displayed in the <xref:System.Web.UI.WebControls.Xml> control, use the <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> property or the <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> property. For more information about these alternatives, see the class overview for the <xref:System.Web.UI.WebControls.Xml> control.       The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The Document property is used to specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> (representing an XML document) to display in the control."
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_173_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_173_1.aspx)]"
  syntax:
    content: public System.Xml.XmlDocument Document { get; set; }
    return:
      type: System.Xml.XmlDocument
      description: "The <xref href=&quot;System.Xml.XmlDocument&quot;></xref> to display in the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  overload: System.Web.UI.WebControls.Xml.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  id: DocumentContent
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sets a string that contains the XML document to display in the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  remarks: "The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentContent property is used to specify an XML string (representing an XML document) to display in the control. The DocumentContent property is not typically programmatically set, or set as an attribute of the control. Instead, the XML string is usually set declaratively by placing text between the opening and closing `<asp:Xml>` tags of the control.      > [!NOTE] >  Although the DocumentContent property contains both `get` and `set` accessors, only the `set` accessor is useful. If you use the `get` accessor, <xref:System.String.Empty?displayProperty=fullName> is returned."
  syntax:
    content: public string DocumentContent { get; set; }
    return:
      type: System.String
      description: "A string that contains the XML document to display in the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  overload: System.Web.UI.WebControls.Xml.DocumentContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  id: DocumentSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the path to an XML document to display in the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  remarks: "The XML document to display in the <xref:System.Web.UI.WebControls.Xml> control is specified in one of three ways. You can specify a <xref:System.Xml.XmlDocument?displayProperty=fullName> object, an XML string, or an XML file by setting the appropriate property. The DocumentSource property is used to specify the path to an XML file (representing an XML document) to display in the control. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code."
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_902_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_902_1.aspx)]"
  syntax:
    content: public string DocumentSource { get; set; }
    return:
      type: System.String
      description: "The path to an XML document to display in the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  overload: System.Web.UI.WebControls.Xml.DocumentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> class."
  remarks: "The EnableTheming property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. This property is not supported."
  overload: System.Web.UI.WebControls.Xml.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Searches the page naming container for the specified server control."
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "The identifier for the control to be found."
    return:
      type: System.Web.UI.Control
      description: "The specified control; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the specified control does not exist."
  overload: System.Web.UI.WebControls.Xml.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Focus
  id: Focus
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt; method. This method is not supported by the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> class."
  remarks: "The Focus method is inherited from the <xref:System.Web.UI.Control> class, but it is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to invoke the method throws a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to invoke this method."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets design-time data for a control."
  remarks: "The GetDesignModeState method is a helper method used to get the current design-time state of the <xref:System.Web.UI.WebControls.Xml> control."
  syntax:
    content: protected override System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> containing the design-time data for the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  overload: System.Web.UI.WebControls.Xml.GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.HasControls
  id: HasControls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the server control contains any child controls."
  syntax:
    content: public override bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control contains other controls; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Xml.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renders the results to the output stream."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Render method in a custom server control so that the <xref:System.Web.UI.WebControls.Xml> control is always displayed with an image.  \n  \n [!code-vb[CustomXmlRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[CustomXmlRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_1.aspx)]  \n  \n [!code-cs[CustomXmlRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_2.cs)]\n [!code-vb[CustomXmlRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_2.vb)]"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter output);
    parameters:
    - id: output
      type: System.Web.UI.HtmlTextWriter
      description: "The result of the output stream."
  overload: System.Web.UI.WebControls.Xml.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Overrides the &lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt; property. This property is not supported by the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> class."
  remarks: "The SkinID property is inherited from the <xref:System.Web.UI.Control> class, but is not applicable to the <xref:System.Web.UI.WebControls.Xml> class. Any attempt to set the value of this property throws a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Always returns an empty string (&quot;&quot;). This property is not supported."
  overload: System.Web.UI.WebControls.Xml.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt is made to set the value of this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Transform
  id: Transform
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the <xref href=&quot;System.Xml.Xsl.XslTransform&quot;></xref> object that formats the XML document before it is written to the output stream."
  remarks: "When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document, before it is written to the output stream in one of two ways. You can format the XML document with either a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or an XSL Transformation style sheet file. If no XSL Transform document is specified, the XML document is displayed using the default format. The Transform property is used to specify a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object (representing an XSL Transform document) used to format the XML document before it is written to the output stream.      > [!NOTE] >  Using a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object requires `Full Trust` permissions."
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_569_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_569_1.aspx)]"
  syntax:
    content: public System.Xml.Xsl.XslTransform Transform { get; set; }
    return:
      type: System.Xml.Xsl.XslTransform
      description: "The <xref href=&quot;System.Xml.Xsl.XslTransform&quot;></xref> that formats the XML document before it is written to the output stream."
  overload: System.Web.UI.WebControls.Xml.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> that contains a list of optional arguments passed to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT)."
  remarks: "Use the TransformArgumentList property to provide the XSL Transformation style sheet with optional arguments. The arguments can be either XSLT parameters or extension objects.       For more information about using the <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName> class, see [XsltArgumentList for Style Sheet Parameters and Extension Objects](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "A <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;></xref> that contains a list of optional arguments passed to the style sheet and used during the XSL Transformation."
  overload: System.Web.UI.WebControls.Xml.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformSource
  id: TransformSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML document before it is written to the output stream."
  remarks: "When using the <xref:System.Web.UI.WebControls.Xml> control to display an XML document, you can optionally specify an XSL Transformation style sheet that formats the XML document before it is written to the output stream in one of two ways. You can either format the XML document with a <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> object or with an XSL Transformation style sheet file. If no XSL Transformation style sheet is specified, the XML document is displayed using the default format. The TransformSource property is used to specify the path to an XSL Transformation style sheet file (representing an XSL Transformation style sheet) used to format the XML document before it is written to the output stream. You can use a relative or an absolute path. A relative path relates the location of the file to the location of the Web Forms page or user control, without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the file in code. An absolute path provides the complete path, so moving the site to another directory requires updating the code."
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_330_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_330_1.aspx)]"
  syntax:
    content: public string TransformSource { get; set; }
    return:
      type: System.String
      description: "The path to an XSL Transformation style sheet that formats the XML document before it is written to the output stream."
  overload: System.Web.UI.WebControls.Xml.TransformSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  id: XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a cursor model for navigating and editing the XML data associated with the <xref href=&quot;System.Web.UI.WebControls.Xml&quot;></xref> control."
  remarks: "This property can be used to associate an <xref:System.Xml.XPath.XPathNavigator> object with the <xref:System.Web.UI.WebControls.Xml> control.       An <xref:System.Xml.XPath.XPathNavigator> object is created from a class that implements the <xref:System.Xml.XPath.IXPathNavigable> interface, such as the <xref:System.Xml.XPath.XPathDocument> and <xref:System.Xml.XmlDocument> classes. <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XPath.XPathDocument> objects are read-only, and <xref:System.Xml.XPath.XPathNavigator> objects created by <xref:System.Xml.XmlDocument> objects can be edited. An <xref:System.Xml.XPath.XPathNavigator> object&quot;s read-only or editable status is determined using the <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property of the <xref:System.Xml.XPath.XPathNavigator> class."
  syntax:
    content: public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "An <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref> object."
  overload: System.Web.UI.WebControls.Xml.XPathNavigator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.Xml.#ctor
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.Xml.ClientID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Xml.Controls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
- uid: System.Web.UI.WebControls.Xml.Document
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
- uid: System.Web.UI.WebControls.Xml.Focus
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.Xml.HasControls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Xml.SkinID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
- uid: System.Xml.Xsl.XslTransform
  parent: System.Xml.Xsl
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Web.UI.WebControls.Xml.#ctor*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml
  nameWithType: Xml.Xml
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Xml.AddParsedSubObject
- uid: System.Web.UI.WebControls.Xml.ClientID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
- uid: System.Web.UI.WebControls.Xml.Controls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection
  nameWithType: Xml.CreateControlCollection
- uid: System.Web.UI.WebControls.Xml.Document*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
- uid: System.Web.UI.WebControls.Xml.DocumentContent*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
- uid: System.Web.UI.WebControls.Xml.FindControl*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl
  nameWithType: Xml.FindControl
- uid: System.Web.UI.WebControls.Xml.Focus*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus
  nameWithType: Xml.Focus
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState
  nameWithType: Xml.GetDesignModeState
- uid: System.Web.UI.WebControls.Xml.HasControls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls
  nameWithType: Xml.HasControls
- uid: System.Web.UI.WebControls.Xml.Render*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render
  nameWithType: Xml.Render
- uid: System.Web.UI.WebControls.Xml.SkinID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
