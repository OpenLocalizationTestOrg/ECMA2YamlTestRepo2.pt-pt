### YamlMime:ManagedReference
items:
- uid: System.Drawing.Design.UITypeEditor
  id: UITypeEditor
  children:
  - System.Drawing.Design.UITypeEditor.#ctor
  - System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  - System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  - System.Drawing.Design.UITypeEditor.GetEditStyle
  - System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  - System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.Design.UITypeEditor.IsDropDownResizable
  - System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  - System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  langs:
  - csharp
  name: UITypeEditor
  nameWithType: UITypeEditor
  fullName: System.Drawing.Design.UITypeEditor
  type: Class
  summary: "Provides a base class that can be used to design value editors that can provide a user interface (UI) for representing and editing the values of objects of the supported data types."
  remarks: "The UITypeEditor class provides a base class that you can derive from and extend to implement a custom type editor for the design-time environment. Typically, your custom type editor interacts with the <xref:System.Windows.Forms.PropertyGrid> control.       Custom type editors are useful in situations where a text-box value editor is insufficient to effectively select the values of certain types.       To implement a custom design-time UI type editor, you must perform the following steps:      -   Define a class that derives from UITypeEditor.      -   Override the <xref:System.Drawing.Design.UITypeEditor.EditValue%2A> method to handle the user interface, user input processing, and value assignment.      -   Override the <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> method to inform the Properties window of the type of editor style that the editor will use.       You can add additional support for painting a value&quot;s representation in the Properties window by performing the following steps:      -   Override the <xref:System.Drawing.Design.UITypeEditor.GetPaintValueSupported%2A> method to indicate that the editor supports displaying the value&quot;s representation.      -   Override the <xref:System.Drawing.Design.UITypeEditor.PaintValue%2A> method to implement the display of the value&quot;s representation.      -   Override the UITypeEditor constructor method if the editor should have initialization behavior.      > [!NOTE] >  The UITypeEditor class does not support right-to-left (RTL) layouts.       For more information about enhancing design-time support, see [Extending Design-Time Support](~/add/includes/ajax-current-ext-md.md). For more information on implementing a UITypeEditor, see [User Interface Type Editors Overview](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates that a UITypeEditor can be associated with an integer, double, or float property using an <xref:System.ComponentModel.EditorAttribute> to provide an angle selection interface from the Properties window in design mode. This example uses the <xref:System.Windows.Forms.Design.IWindowsFormsEditorService> interface to display a drop-down control in the Properties window in design mode. Compile the code and add the assembly to the Toolbox using the **Customize Toolbox** command on the **Tools** menu of Visual Studio. Create an instance of the `AngleTestControl` and click the drop-down button next to the Angle property in the Properties window to configure the property using the editor.  \n  \n [!code-cs[AngleEditor#1](~/add/codesnippet/csharp/t-system.drawing.design._13_1.cs)]\n [!code-cpp[AngleEditor#1](~/add/codesnippet/cpp/t-system.drawing.design._13_1.cpp)]\n [!code-vb[AngleEditor#1](~/add/codesnippet/visualbasic/t-system.drawing.design._13_1.vb)]"
  syntax:
    content: public class UITypeEditor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.#ctor
  id: '#ctor'
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: UITypeEditor()
  nameWithType: UITypeEditor.UITypeEditor()
  fullName: System.Drawing.Design.UITypeEditor.UITypeEditor()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;></xref> class."
  syntax:
    content: public UITypeEditor ();
    parameters: []
  overload: System.Drawing.Design.UITypeEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  id: EditValue(System.IServiceProvider,System.Object)
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: EditValue(IServiceProvider,Object)
  nameWithType: UITypeEditor.EditValue(IServiceProvider,Object)
  fullName: System.Drawing.Design.UITypeEditor.EditValue(IServiceProvider,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Edits the value of the specified object using the editor style indicated by the <xref:System.Drawing.Design.UITypeEditor.GetEditStyle*> method."
  remarks: "This method launches the user interface for value editing, and is called by the Properties window when a user attempts to edit the value of a type that this editor is configured to edit the value of. A service provider is provided so that the editor can obtain any required services."
  syntax:
    content: public object EditValue (IServiceProvider provider, object value);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "An <xref:System.IServiceProvider> that this editor can use to obtain services."
    - id: value
      type: System.Object
      description: "The object to edit."
    return:
      type: System.Object
      description: "The new value of the object."
  overload: System.Drawing.Design.UITypeEditor.EditValue*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  id: EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: EditValue(ITypeDescriptorContext,IServiceProvider,Object)
  nameWithType: UITypeEditor.EditValue(ITypeDescriptorContext,IServiceProvider,Object)
  fullName: System.Drawing.Design.UITypeEditor.EditValue(ITypeDescriptorContext,IServiceProvider,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Edits the specified object&quot;s value using the editor style indicated by the <xref:System.Drawing.Design.UITypeEditor.GetEditStyle*> method."
  remarks: "A service provider is provided so that the editor can obtain any required services."
  syntax:
    content: public virtual object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that can be used to gain additional context information."
    - id: provider
      type: System.IServiceProvider
      description: "An <xref:System.IServiceProvider> that this editor can use to obtain services."
    - id: value
      type: System.Object
      description: "The object to edit."
    return:
      type: System.Object
      description: "The new value of the object. If the value of the object has not changed, this should return the same object it was passed."
  overload: System.Drawing.Design.UITypeEditor.EditValue*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.GetEditStyle
  id: GetEditStyle
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: GetEditStyle()
  nameWithType: UITypeEditor.GetEditStyle()
  fullName: System.Drawing.Design.UITypeEditor.GetEditStyle()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Gets the editor style used by the <xref:System.Drawing.Design.UITypeEditor.EditValue*> method."
  remarks: "If a <xref:System.Drawing.Design.UITypeEditor> does not override and implement this method, GetEditStyle will return <xref:System.Drawing.Design.UITypeEditorEditStyle> by default."
  syntax:
    content: public System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ();
    parameters: []
    return:
      type: System.Drawing.Design.UITypeEditorEditStyle
      description: "A <xref href=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;></xref> enumeration value that indicates the style of editor used by the current <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;></xref>. By default, this method will return <xref href=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;></xref>."
  overload: System.Drawing.Design.UITypeEditor.GetEditStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  id: GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: GetEditStyle(ITypeDescriptorContext)
  nameWithType: UITypeEditor.GetEditStyle(ITypeDescriptorContext)
  fullName: System.Drawing.Design.UITypeEditor.GetEditStyle(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Gets the editor style used by the <xref:System.Drawing.Design.UITypeEditor.EditValue*> method."
  syntax:
    content: public virtual System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that can be used to gain additional context information."
    return:
      type: System.Drawing.Design.UITypeEditorEditStyle
      description: "A <xref href=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;></xref> value that indicates the style of editor used by the <xref:System.Drawing.Design.UITypeEditor.EditValue*> method. If the <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;></xref> does not support this method, then <xref:System.Drawing.Design.UITypeEditor.GetEditStyle*> will return <xref href=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;></xref>."
  overload: System.Drawing.Design.UITypeEditor.GetEditStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  id: GetPaintValueSupported
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: GetPaintValueSupported()
  nameWithType: UITypeEditor.GetPaintValueSupported()
  fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Indicates whether this editor supports painting a representation of an object&quot;s value."
  syntax:
    content: public bool GetPaintValueSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.Drawing.Design.UITypeEditor.PaintValue*> is implemented; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Design.UITypeEditor.GetPaintValueSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: GetPaintValueSupported(ITypeDescriptorContext)
  nameWithType: UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext)
  fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Indicates whether the specified context supports painting a representation of an object&quot;s value within the specified context."
  syntax:
    content: public virtual bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that can be used to gain additional context information."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.Drawing.Design.UITypeEditor.PaintValue*> is implemented; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Design.UITypeEditor.GetPaintValueSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.IsDropDownResizable
  id: IsDropDownResizable
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: IsDropDownResizable
  nameWithType: UITypeEditor.IsDropDownResizable
  fullName: System.Drawing.Design.UITypeEditor.IsDropDownResizable
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Gets a value indicating whether drop-down editors should be resizable by the user."
  syntax:
    content: public virtual bool IsDropDownResizable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if drop-down editors are resizable; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Design.UITypeEditor.IsDropDownResizable*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  id: PaintValue(System.Drawing.Design.PaintValueEventArgs)
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: PaintValue(PaintValueEventArgs)
  nameWithType: UITypeEditor.PaintValue(PaintValueEventArgs)
  fullName: System.Drawing.Design.UITypeEditor.PaintValue(PaintValueEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Paints a representation of the value of an object using the specified <xref href=&quot;System.Drawing.Design.PaintValueEventArgs&quot;></xref>."
  remarks: "Editors should paint within the boundaries of the specified rectangle. This rectangle indicates the area of the Properties window to draw a representation of the value within.       Starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], the rectangle specified by <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> will be resized based on the system DPI setting when the app.config file contains the following entry:      ```   <appSettings>     <add key=&quot;EnableWindowsFormsHighDpiAutoResizing&quot; value=&quot;true&quot; />   </appSettings>      ```"
  syntax:
    content: public virtual void PaintValue (System.Drawing.Design.PaintValueEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Design.PaintValueEventArgs
      description: "A <xref href=&quot;System.Drawing.Design.PaintValueEventArgs&quot;></xref> that indicates what to paint and where to paint it."
  overload: System.Drawing.Design.UITypeEditor.PaintValue*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  id: PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.Design.UITypeEditor
  langs:
  - csharp
  name: PaintValue(Object,Graphics,Rectangle)
  nameWithType: UITypeEditor.PaintValue(Object,Graphics,Rectangle)
  fullName: System.Drawing.Design.UITypeEditor.PaintValue(Object,Graphics,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Paints a representation of the value of the specified object to the specified canvas."
  remarks: "Editors should paint within the boundaries of the specified rectangle. This rectangle indicates the area of the Properties window to draw a representation of the value within.       Starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], the rectangle specified by <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> will be resized based on the system DPI setting when the app.config file contains the following entry:      ```   <appSettings>     <add key=&quot;EnableWindowsFormsHighDpiAutoResizing&quot; value=&quot;true&quot; />   </appSettings>      ```"
  syntax:
    content: public void PaintValue (object value, System.Drawing.Graphics canvas, System.Drawing.Rectangle rectangle);
    parameters:
    - id: value
      type: System.Object
      description: "The object whose value this type editor will display."
    - id: canvas
      type: System.Drawing.Graphics
      description: "A drawing canvas on which to paint the representation of the object&quot;s value."
    - id: rectangle
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> within whose boundaries to paint the value."
  overload: System.Drawing.Design.UITypeEditor.PaintValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Design.UITypeEditor.#ctor
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: UITypeEditor()
  nameWithType: UITypeEditor.UITypeEditor()
  fullName: System.Drawing.Design.UITypeEditor.UITypeEditor()
- uid: System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: EditValue(IServiceProvider,Object)
  nameWithType: UITypeEditor.EditValue(IServiceProvider,Object)
  fullName: System.Drawing.Design.UITypeEditor.EditValue(IServiceProvider,Object)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: EditValue(ITypeDescriptorContext,IServiceProvider,Object)
  nameWithType: UITypeEditor.EditValue(ITypeDescriptorContext,IServiceProvider,Object)
  fullName: System.Drawing.Design.UITypeEditor.EditValue(ITypeDescriptorContext,IServiceProvider,Object)
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Drawing.Design.UITypeEditor.GetEditStyle
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: GetEditStyle()
  nameWithType: UITypeEditor.GetEditStyle()
  fullName: System.Drawing.Design.UITypeEditor.GetEditStyle()
- uid: System.Drawing.Design.UITypeEditorEditStyle
  parent: System.Drawing.Design
  isExternal: false
  name: UITypeEditorEditStyle
  nameWithType: UITypeEditorEditStyle
  fullName: System.Drawing.Design.UITypeEditorEditStyle
- uid: System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: GetEditStyle(ITypeDescriptorContext)
  nameWithType: UITypeEditor.GetEditStyle(ITypeDescriptorContext)
  fullName: System.Drawing.Design.UITypeEditor.GetEditStyle(ITypeDescriptorContext)
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: GetPaintValueSupported()
  nameWithType: UITypeEditor.GetPaintValueSupported()
  fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: GetPaintValueSupported(ITypeDescriptorContext)
  nameWithType: UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext)
  fullName: System.Drawing.Design.UITypeEditor.GetPaintValueSupported(ITypeDescriptorContext)
- uid: System.Drawing.Design.UITypeEditor.IsDropDownResizable
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: IsDropDownResizable
  nameWithType: UITypeEditor.IsDropDownResizable
  fullName: System.Drawing.Design.UITypeEditor.IsDropDownResizable
- uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: PaintValue(PaintValueEventArgs)
  nameWithType: UITypeEditor.PaintValue(PaintValueEventArgs)
  fullName: System.Drawing.Design.UITypeEditor.PaintValue(PaintValueEventArgs)
- uid: System.Drawing.Design.PaintValueEventArgs
  parent: System.Drawing.Design
  isExternal: false
  name: PaintValueEventArgs
  nameWithType: PaintValueEventArgs
  fullName: System.Drawing.Design.PaintValueEventArgs
- uid: System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: PaintValue(Object,Graphics,Rectangle)
  nameWithType: UITypeEditor.PaintValue(Object,Graphics,Rectangle)
  fullName: System.Drawing.Design.UITypeEditor.PaintValue(Object,Graphics,Rectangle)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Design.UITypeEditor.#ctor*
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: UITypeEditor
  nameWithType: UITypeEditor.UITypeEditor
- uid: System.Drawing.Design.UITypeEditor.EditValue*
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: EditValue
  nameWithType: UITypeEditor.EditValue
- uid: System.Drawing.Design.UITypeEditor.GetEditStyle*
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: GetEditStyle
  nameWithType: UITypeEditor.GetEditStyle
- uid: System.Drawing.Design.UITypeEditor.GetPaintValueSupported*
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: GetPaintValueSupported
  nameWithType: UITypeEditor.GetPaintValueSupported
- uid: System.Drawing.Design.UITypeEditor.IsDropDownResizable*
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: IsDropDownResizable
  nameWithType: UITypeEditor.IsDropDownResizable
- uid: System.Drawing.Design.UITypeEditor.PaintValue*
  parent: System.Drawing.Design.UITypeEditor
  isExternal: false
  name: PaintValue
  nameWithType: UITypeEditor.PaintValue
