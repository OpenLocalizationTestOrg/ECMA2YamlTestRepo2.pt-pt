### YamlMime:ManagedReference
items:
- uid: Microsoft.CSharp.RuntimeBinder.Binder
  id: Binder
  children:
  - Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)
  - Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)
  - Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  - Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  langs:
  - csharp
  name: Binder
  nameWithType: Binder
  fullName: Microsoft.CSharp.RuntimeBinder.Binder
  type: Class
  summary: "Contains factory methods to create dynamic call site binders for CSharp."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public static class Binder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp binary operation binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder BinaryOperation (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, System.Linq.Expressions.ExpressionType operation, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: operation
      type: System.Linq.Expressions.ExpressionType
      description: "The binary operation kind."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp binary operation binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)
  id: Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: Convert(CSharpBinderFlags,Type,Type)
  nameWithType: Binder.Convert(CSharpBinderFlags,Type,Type)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Convert(CSharpBinderFlags,Type,Type)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp convert binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder Convert (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type type, Type context);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: type
      type: System.Type
      description: "The type to convert to."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp convert binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.Convert*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp get index binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder GetIndex (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp get index binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp get member binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder GetMember (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: name
      type: System.String
      description: "The name of the member to get."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp get member binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.GetMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp invoke binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder Invoke (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp invoke binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.Invoke*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp invoke constructor binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder InvokeConstructor (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp invoke constructor binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp invoke member binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder InvokeMember (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, System.Collections.Generic.IEnumerable<Type> typeArguments, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: name
      type: System.String
      description: "The name of the member to invoke."
    - id: typeArguments
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "The list of type arguments specified for this invoke."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp invoke member binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)
  id: IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: IsEvent(CSharpBinderFlags,String,Type)
  nameWithType: Binder.IsEvent(CSharpBinderFlags,String,Type)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(CSharpBinderFlags,String,Type)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp is event binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder IsEvent (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, Type context);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: name
      type: System.String
      description: "The name of the event to look for."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp is event binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp set index binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder SetIndex (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp set index binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp set member binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder SetMember (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, string name, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: name
      type: System.String
      description: "The name of the member to set."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp set member binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.SetMember*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  id: UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  langs:
  - csharp
  name: UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  type: Method
  assemblies:
  - Microsoft.CSharp
  namespace: Microsoft.CSharp.RuntimeBinder
  summary: "Initializes a new CSharp unary operation binder."
  syntax:
    content: public static System.Runtime.CompilerServices.CallSiteBinder UnaryOperation (Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags flags, System.Linq.Expressions.ExpressionType operation, Type context, System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo> argumentInfo);
    parameters:
    - id: flags
      type: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
      description: "The flags with which to initialize the binder."
    - id: operation
      type: System.Linq.Expressions.ExpressionType
      description: "The unary operation kind."
    - id: context
      type: System.Type
      description: "The <xref:System.Type> that indicates where this operation is used."
    - id: argumentInfo
      type: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
      description: "The sequence of <xref href=&quot;Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo&quot;></xref> instances for the arguments to this operation."
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "Returns a new CSharp unary operation binder."
  overload: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: true
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
  parent: Microsoft.CSharp.RuntimeBinder
  isExternal: false
  name: CSharpBinderFlags
  nameWithType: CSharpBinderFlags
  fullName: Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: true
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<CSharpArgumentInfo>
  nameWithType: IEnumerable<CSharpArgumentInfo>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo
    name: CSharpArgumentInfo
    nameWithType: CSharpArgumentInfo
    fullName: CSharpArgumentInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: Convert(CSharpBinderFlags,Type,Type)
  nameWithType: Binder.Convert(CSharpBinderFlags,Type,Type)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Convert(CSharpBinderFlags,Type,Type)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.GetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.Invoke(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(CSharpBinderFlags,String,IEnumerable<Type>,Type,IEnumerable<CSharpArgumentInfo>)
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: IsEvent(CSharpBinderFlags,String,Type)
  nameWithType: Binder.IsEvent(CSharpBinderFlags,String,Type)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(CSharpBinderFlags,String,Type)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(CSharpBinderFlags,Type,IEnumerable<CSharpArgumentInfo>)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.SetMember(CSharpBinderFlags,String,Type,IEnumerable<CSharpArgumentInfo>)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  nameWithType: Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
  fullName: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable<CSharpArgumentInfo>)
- uid: Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: BinaryOperation
  nameWithType: Binder.BinaryOperation
- uid: Microsoft.CSharp.RuntimeBinder.Binder.Convert*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: Convert
  nameWithType: Binder.Convert
- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetIndex*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: GetIndex
  nameWithType: Binder.GetIndex
- uid: Microsoft.CSharp.RuntimeBinder.Binder.GetMember*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: GetMember
  nameWithType: Binder.GetMember
- uid: Microsoft.CSharp.RuntimeBinder.Binder.Invoke*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: Invoke
  nameWithType: Binder.Invoke
- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: InvokeConstructor
  nameWithType: Binder.InvokeConstructor
- uid: Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: InvokeMember
  nameWithType: Binder.InvokeMember
- uid: Microsoft.CSharp.RuntimeBinder.Binder.IsEvent*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: IsEvent
  nameWithType: Binder.IsEvent
- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetIndex*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: SetIndex
  nameWithType: Binder.SetIndex
- uid: Microsoft.CSharp.RuntimeBinder.Binder.SetMember*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: SetMember
  nameWithType: Binder.SetMember
- uid: Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation*
  parent: Microsoft.CSharp.RuntimeBinder.Binder
  isExternal: false
  name: UnaryOperation
  nameWithType: Binder.UnaryOperation
