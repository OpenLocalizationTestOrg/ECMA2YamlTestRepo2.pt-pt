### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DragAction
  id: DragAction
  children:
  - System.Windows.Forms.DragAction.Cancel
  - System.Windows.Forms.DragAction.Continue
  - System.Windows.Forms.DragAction.Drop
  langs:
  - csharp
  name: DragAction
  nameWithType: DragAction
  fullName: System.Windows.Forms.DragAction
  type: Enum
  summary: "Specifies how and if a drag-and-drop operation should continue."
  remarks: "This enumeration is used by <xref:System.Windows.Forms.QueryContinueDragEventArgs>."
  example:
  - "The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to <xref:System.Windows.Forms.DragDropEffects?displayProperty=fullName>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragAction enumeration. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/t-system.windows.forms.d_106_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/t-system.windows.forms.d_106_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/t-system.windows.forms.d_106_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum DragAction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Windows.Forms.DragAction.Cancel
  id: Cancel
  parent: System.Windows.Forms.DragAction
  langs:
  - csharp
  name: Cancel
  nameWithType: DragAction.Cancel
  fullName: System.Windows.Forms.DragAction.Cancel
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The operation is canceled with no drop message."
  syntax:
    content: Cancel
    return:
      type: System.Windows.Forms.DragAction
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DragAction.Continue
  id: Continue
  parent: System.Windows.Forms.DragAction
  langs:
  - csharp
  name: Continue
  nameWithType: DragAction.Continue
  fullName: System.Windows.Forms.DragAction.Continue
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The operation will continue."
  syntax:
    content: Continue
    return:
      type: System.Windows.Forms.DragAction
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DragAction.Drop
  id: Drop
  parent: System.Windows.Forms.DragAction
  langs:
  - csharp
  name: Drop
  nameWithType: DragAction.Drop
  fullName: System.Windows.Forms.DragAction.Drop
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The operation will stop with a drop."
  syntax:
    content: Drop
    return:
      type: System.Windows.Forms.DragAction
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Windows.Forms.DragAction.Cancel
  parent: System.Windows.Forms.DragAction
  isExternal: false
  name: Cancel
  nameWithType: DragAction.Cancel
  fullName: System.Windows.Forms.DragAction.Cancel
- uid: System.Windows.Forms.DragAction
  parent: System.Windows.Forms
  isExternal: false
  name: DragAction
  nameWithType: DragAction
  fullName: System.Windows.Forms.DragAction
- uid: System.Windows.Forms.DragAction.Continue
  parent: System.Windows.Forms.DragAction
  isExternal: false
  name: Continue
  nameWithType: DragAction.Continue
  fullName: System.Windows.Forms.DragAction.Continue
- uid: System.Windows.Forms.DragAction.Drop
  parent: System.Windows.Forms.DragAction
  isExternal: false
  name: Drop
  nameWithType: DragAction.Drop
  fullName: System.Windows.Forms.DragAction.Drop
