### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadExceptionEventArgs
  id: ThreadExceptionEventArgs
  children:
  - System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)
  - System.Threading.ThreadExceptionEventArgs.Exception
  langs:
  - csharp
  name: ThreadExceptionEventArgs
  nameWithType: ThreadExceptionEventArgs
  fullName: System.Threading.ThreadExceptionEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Windows.Forms.Application.ThreadException&quot;></xref> event."
  remarks: "A ThreadExceptionEventArgs is created by a thread when an unhandled exception occurs. ThreadExceptionEventArgs contains the <xref:System.Exception> that occurred."
  example:
  - "The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form. The example creates two classes. The `ErrorHandler` class creates the form and the button that raises the event. The `CustomExceptionHandler` class provides the methods to handle the exception.  \n  \n In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`. Then the instance is added to the event, and the application is run.  \n  \n In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception. The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.  \n  \n [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/add/codesnippet/visualbasic/t-system.threading.threa_0_1.vb)]\n [!code-cs[Classic ThreadExceptionEventArgs Example#1](~/add/codesnippet/csharp/t-system.threading.threa_0_1.cs)]"
  syntax:
    content: 'public class ThreadExceptionEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Threading.ThreadExceptionEventArgs
  langs:
  - csharp
  name: ThreadExceptionEventArgs(Exception)
  nameWithType: ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)
  fullName: System.Threading.ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)
  type: Constructor
  assemblies:
  - System
  namespace: System.Threading
  summary: "Initializes a new instance of the <xref href=&quot;System.Threading.ThreadExceptionEventArgs&quot;></xref> class."
  remarks: ''
  example:
  - "The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form. The example creates two classes. The `ErrorHandler` class creates the form and the button that raises the event. The `CustomExceptionHandler` class provides the methods to handle the exception.  \n  \n In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`. Then the instance is added to the event, and the application is run.  \n  \n In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception. The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.  \n  \n [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/add/codesnippet/visualbasic/m-system.threading.threa_30_1.vb)]\n [!code-cs[Classic ThreadExceptionEventArgs Example#1](~/add/codesnippet/csharp/m-system.threading.threa_30_1.cs)]"
  syntax:
    content: public ThreadExceptionEventArgs (Exception t);
    parameters:
    - id: t
      type: System.Exception
      description: "The <xref:System.Exception> that occurred."
  overload: System.Threading.ThreadExceptionEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadExceptionEventArgs.Exception
  id: Exception
  parent: System.Threading.ThreadExceptionEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: ThreadExceptionEventArgs.Exception
  fullName: System.Threading.ThreadExceptionEventArgs.Exception
  type: Property
  assemblies:
  - System
  namespace: System.Threading
  summary: "Gets the <xref:System.Exception> that occurred."
  remarks: ''
  example:
  - "The following example allows you to raise a <xref:System.Windows.Forms.Application.ThreadException> event by clicking `button1` on a form. The example creates two classes. The `ErrorHandler` class creates the form and the button that raises the event. The `CustomExceptionHandler` class provides the methods to handle the exception.  \n  \n In `Main` in the `ErrorHandler` class, the code creates a new instance of the exception handling class, that is, an instance of the `CustomExceptionHandler`. Then the instance is added to the event, and the application is run.  \n  \n In the `OnThreadException` method in the `CustomExceptionHandler` class, the example uses a `try...catch...finally` statement to process the exception. The `ShowThreadExceptionDialog` method creates the message to display, and displays it in a message box.  \n  \n [!code-vb[Classic ThreadExceptionEventArgs Example#1](~/add/codesnippet/visualbasic/p-system.threading.threa_9_1.vb)]\n [!code-cs[Classic ThreadExceptionEventArgs Example#1](~/add/codesnippet/csharp/p-system.threading.threa_9_1.cs)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "The <xref:System.Exception> that occurred."
  overload: System.Threading.ThreadExceptionEventArgs.Exception*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)
  parent: System.Threading.ThreadExceptionEventArgs
  isExternal: false
  name: ThreadExceptionEventArgs(Exception)
  nameWithType: ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)
  fullName: System.Threading.ThreadExceptionEventArgs.ThreadExceptionEventArgs(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.ThreadExceptionEventArgs.Exception
  parent: System.Threading.ThreadExceptionEventArgs
  isExternal: false
  name: Exception
  nameWithType: ThreadExceptionEventArgs.Exception
  fullName: System.Threading.ThreadExceptionEventArgs.Exception
- uid: System.Threading.ThreadExceptionEventArgs.#ctor*
  parent: System.Threading.ThreadExceptionEventArgs
  isExternal: false
  name: ThreadExceptionEventArgs
  nameWithType: ThreadExceptionEventArgs.ThreadExceptionEventArgs
- uid: System.Threading.ThreadExceptionEventArgs.Exception*
  parent: System.Threading.ThreadExceptionEventArgs
  isExternal: false
  name: Exception
  nameWithType: ThreadExceptionEventArgs.Exception
