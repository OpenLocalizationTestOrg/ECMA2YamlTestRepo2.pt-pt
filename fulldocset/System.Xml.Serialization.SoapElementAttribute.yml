### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapElementAttribute
  id: SoapElementAttribute
  children:
  - System.Xml.Serialization.SoapElementAttribute.#ctor
  - System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapElementAttribute.DataType
  - System.Xml.Serialization.SoapElementAttribute.ElementName
  - System.Xml.Serialization.SoapElementAttribute.IsNullable
  langs:
  - csharp
  name: SoapElementAttribute
  nameWithType: SoapElementAttribute
  fullName: System.Xml.Serialization.SoapElementAttribute
  type: Class
  summary: "Specifies that the public member value be serialized by the <xref:System.Xml.Serialization.XmlSerializer> as an encoded SOAP XML element."
  remarks: "The SoapElementAttribute class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, &quot;Simple Object Access Protocol (SOAP) 1.1&quot;. For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/add/includes/ajax-current-ext-md.md).       To serialize an object as an encoded SOAP message, you must construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.       Apply the SoapElementAttribute to a public field to direct the <xref:System.Xml.Serialization.XmlSerializer> to serialize the field as an encoded SOAP XML element.       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A SoapElementAttribute is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a SoapElementAttribute and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the SoapElementAttribute. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the SoapElementAttribute is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_10_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_10_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_10_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]

      public class SoapElementAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: SoapElementAttribute()
  nameWithType: SoapElementAttribute.SoapElementAttribute()
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Serialization.SoapElementAttribute&quot;></xref> class."
  remarks: ''
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_0_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_0_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_0_1.vb)]"
  syntax:
    content: public SoapElementAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapElementAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: SoapElementAttribute(String)
  nameWithType: SoapElementAttribute.SoapElementAttribute(String)
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Serialization.SoapElementAttribute&quot;></xref> class and specifies the name of the XML element."
  remarks: ''
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_3_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_3_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_3_1.vb)]"
  syntax:
    content: public SoapElementAttribute (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "The XML element name of the serialized member."
  overload: System.Xml.Serialization.SoapElementAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: SoapElementAttribute.DataType
  fullName: System.Xml.Serialization.SoapElementAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets or sets the XML Schema definition language (XSD) data type of the generated XML element."
  remarks: "The following table lists the XML Schema simple data types with their .NET equivalents.       For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.SoapElementAttribute> with the <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> set to &quot;base64Binary&quot; or &quot;hexBinary&quot;, as appropriate. For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.SoapElementAttribute> with the DataType set to &quot;date&quot; or &quot;time&quot;.       For every XML Schema data type that is mapped to a string, apply the <xref:System.Xml.Serialization.SoapElementAttribute> with its DataType property set to the XML Schema type. Note that this does not change the serialization format, only the schema for the member.      > [!NOTE] >  The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.      > [!NOTE] >  Passing binary data as an XML element is more efficient than passing it as an XML attribute.       For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document, &quot;XML Schema Part 2: Datatypes&quot;.      |XSD data type|.NET data type|   |-------------------|--------------------|   |anyURI|<xref:System.String>|   |base64Binary|Array of <xref:System.Byte> objects|   |boolean|<xref:System.Boolean>|   |byte|<xref:System.SByte>|   |date|<xref:System.DateTime>|   |dateTime|<xref:System.DateTime>|   |decimal|<xref:System.Decimal>|   |double|<xref:System.Double>|   |ENTITY|<xref:System.String>|   |ENTITIES|<xref:System.String>|   |float|<xref:System.Single>|   |gDay|<xref:System.String>|   |gMonth|<xref:System.String>|   |gMonthDay|<xref:System.String>|   |gYear|<xref:System.String>|   |gYearMonth|<xref:System.String>|   |hexBinary|Array of <xref:System.Byte> objects|   |ID|<xref:System.String>|   |IDREF|<xref:System.String>|   |IDREFS|<xref:System.String>|   |int|<xref:System.Int32>|   |integer|<xref:System.String>|   |language|<xref:System.String>|   |long|<xref:System.Int64>|   |Name|<xref:System.String>|   |NCName|<xref:System.String>|   |negativeInteger|<xref:System.String>|   |NMTOKEN|<xref:System.String>|   |NMTOKENS|<xref:System.String>|   |normalizedString|<xref:System.String>|   |nonNegativeInteger|<xref:System.String>|   |nonPositiveInteger|<xref:System.String>|   |NOTATION|<xref:System.String>|   |positiveInteger|<xref:System.String>|   |QName|<xref:System.Xml.XmlQualifiedName>|   |duration|<xref:System.String>|   |string|<xref:System.String>|   |short|<xref:System.Int16>|   |time|<xref:System.DateTime>|   |token|<xref:System.String>|   |unsignedByte|<xref:System.Byte>|   |unsignedInt|<xref:System.UInt32>|   |unsignedLong|<xref:System.UInt64>|   |unsignedShort|<xref:System.UInt16>|"
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_3_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_3_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_3_1.vb)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: "One of the XML Schema data types."
  overload: System.Xml.Serialization.SoapElementAttribute.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.ElementName
  id: ElementName
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: ElementName
  nameWithType: SoapElementAttribute.ElementName
  fullName: System.Xml.Serialization.SoapElementAttribute.ElementName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets or sets the name of the generated XML element."
  remarks: ''
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_17_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_17_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_17_1.vb)]"
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: "The name of the generated XML element. The default is the member identifier."
  overload: System.Xml.Serialization.SoapElementAttribute.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.IsNullable
  id: IsNullable
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: IsNullable
  nameWithType: SoapElementAttribute.IsNullable
  fullName: System.Xml.Serialization.SoapElementAttribute.IsNullable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Gets or sets a value that indicates whether the <xref:System.Xml.Serialization.XmlSerializer> must serialize a member that has the <xref uid=&quot;langword_csharp_xsi:null&quot; name=&quot;xsi:null&quot; href=&quot;&quot;></xref> attribute set to &quot;1&quot;."
  remarks: "The XML schema specification for structures allows an XML document to explicitly signal that an element&quot;s content is missing. Such an element contains the attribute `xsi:null` set to &quot;1&quot;. For more information, see the World Wide Web Consortium (www.w3.org) specification named &quot;XML Schema Part 1: Structures&quot;.       If the IsNullable property is set to `true`, the `xsi:null` attribute is generated for class members that have been set to `null`. For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.      ```   <MyStringArray xsi:null = &quot;1&quot; />   ```       If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated.      > [!NOTE] >  You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`."
  syntax:
    content: public bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Xml.Serialization.XmlSerializer> generates the <xref uid=&quot;langword_csharp_xsi:null&quot; name=&quot;xsi:null&quot; href=&quot;&quot;></xref> attribute; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Serialization.SoapElementAttribute.IsNullable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: SoapElementAttribute()
  nameWithType: SoapElementAttribute.SoapElementAttribute()
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute()
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: SoapElementAttribute(String)
  nameWithType: SoapElementAttribute.SoapElementAttribute(String)
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapElementAttribute.DataType
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapElementAttribute.DataType
  fullName: System.Xml.Serialization.SoapElementAttribute.DataType
- uid: System.Xml.Serialization.SoapElementAttribute.ElementName
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: ElementName
  nameWithType: SoapElementAttribute.ElementName
  fullName: System.Xml.Serialization.SoapElementAttribute.ElementName
- uid: System.Xml.Serialization.SoapElementAttribute.IsNullable
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: IsNullable
  nameWithType: SoapElementAttribute.IsNullable
  fullName: System.Xml.Serialization.SoapElementAttribute.IsNullable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: SoapElementAttribute
  nameWithType: SoapElementAttribute.SoapElementAttribute
- uid: System.Xml.Serialization.SoapElementAttribute.DataType*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapElementAttribute.DataType
- uid: System.Xml.Serialization.SoapElementAttribute.ElementName*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: ElementName
  nameWithType: SoapElementAttribute.ElementName
- uid: System.Xml.Serialization.SoapElementAttribute.IsNullable*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: IsNullable
  nameWithType: SoapElementAttribute.IsNullable
