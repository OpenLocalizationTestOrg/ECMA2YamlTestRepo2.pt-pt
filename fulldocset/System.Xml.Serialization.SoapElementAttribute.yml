### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.SoapElementAttribute
  id: SoapElementAttribute
  children:
  - System.Xml.Serialization.SoapElementAttribute.#ctor
  - System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)
  - System.Xml.Serialization.SoapElementAttribute.DataType
  - System.Xml.Serialization.SoapElementAttribute.ElementName
  - System.Xml.Serialization.SoapElementAttribute.IsNullable
  langs:
  - csharp
  name: SoapElementAttribute
  nameWithType: SoapElementAttribute
  fullName: System.Xml.Serialization.SoapElementAttribute
  type: Class
  summary: "Especifica que o valor do membro público ser serializado pelo <xref:System.Xml.Serialization.XmlSerializer>como um elemento XML de SOAP codificado.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "A classe de SoapElementAttribute pertence a uma família de atributos que controla a forma como o <xref:System.Xml.Serialization.XmlSerializer>serializa ou deserializes um objeto como XML de SOAP codificado.</xref:System.Xml.Serialization.XmlSerializer> O XML resultante está em conformidade com a secção 5 do documento Consortium World Wide Web (www.w3.org), &quot;Simple objeto acesso Protocol (SOAP) 1.1&quot;. Para obter uma lista completa dos atributos semelhantes, consulte [atributos que controlo codificadas SOAP serialização](~/add/includes/ajax-current-ext-md.md).       Para serializar um objeto como uma mensagem SOAP codificado, deve construir a <xref:System.Xml.Serialization.XmlSerializer>utilizar um <xref:System.Xml.Serialization.XmlTypeMapping>criado com o <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>método de <xref:System.Xml.Serialization.SoapReflectionImporter>classe.</xref:System.Xml.Serialization.SoapReflectionImporter> </xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> </xref:System.Xml.Serialization.XmlTypeMapping> </xref:System.Xml.Serialization.XmlSerializer>       Aplicar o SoapElementAttribute a um campo público para direcionar o <xref:System.Xml.Serialization.XmlSerializer>para serializar o campo como um elemento XML de SOAP codificado.</xref:System.Xml.Serialization.XmlSerializer>       Para obter mais informações sobre a utilização de atributos, consulte [atributos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A SoapElementAttribute is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a SoapElementAttribute and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the SoapElementAttribute. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the SoapElementAttribute is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/t-system.xml.serializati_10_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/t-system.xml.serializati_10_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_10_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)]

      public class SoapElementAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: SoapElementAttribute()
  nameWithType: SoapElementAttribute.SoapElementAttribute()
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Serialization.SoapElementAttribute&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_0_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_0_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_0_1.vb)]"
  syntax:
    content: public SoapElementAttribute ();
    parameters: []
  overload: System.Xml.Serialization.SoapElementAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: SoapElementAttribute(String)
  nameWithType: SoapElementAttribute.SoapElementAttribute(String)
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Serialization.SoapElementAttribute&quot;> </xref> classe e especifica o nome do elemento XML."
  remarks: ''
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/m-system.xml.serializati_3_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/m-system.xml.serializati_3_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_3_1.vb)]"
  syntax:
    content: public SoapElementAttribute (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: "O nome de elemento XML do membro serializado."
  overload: System.Xml.Serialization.SoapElementAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: SoapElementAttribute.DataType
  fullName: System.Xml.Serialization.SoapElementAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Obtém ou define o tipo de dados do esquema XML definição idioma (XSD) do elemento XML gerado."
  remarks: "A tabela seguinte lista os tipos de dados simples de esquema XML com os respetivos equivalentes de .NET.       Para o esquema XML `base64Binary` e `hexBinary` tipos de dados, utilize uma matriz de <xref:System.Byte>estruturas e aplicar um <xref:System.Xml.Serialization.SoapElementAttribute>com o <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>definido como &quot;base64Binary&quot; ou &quot;hexBinary&quot;, conforme apropriado.</xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> </xref:System.Xml.Serialization.SoapElementAttribute> </xref:System.Byte> Para o esquema XML `time` e `date` tipos de dados, utilize o <xref:System.DateTime>Escreva e aplicar a <xref:System.Xml.Serialization.SoapElementAttribute>com o tipo de dados definido como &quot;data&quot; ou &quot;tempo&quot;.</xref:System.Xml.Serialization.SoapElementAttribute> </xref:System.DateTime>       Para cada tipo de dados de esquema XML que está mapeado para uma cadeia, aplique o <xref:System.Xml.Serialization.SoapElementAttribute>com a propriedade de tipo de dados definida para o tipo de esquema XML.</xref:System.Xml.Serialization.SoapElementAttribute> Tenha em atenção que isto não se altera o formato de serialização, apenas o esquema para o membro.      > [!NOTE] > A propriedade é maiúsculas e minúsculas, pelo que deve defini-lo exatamente a um dos tipos de dados de esquema XML.      > [!NOTE] > Transmitir dados binários como um elemento XML é mais eficiente do que passou-a como um atributo XML.       Para mais informações sobre os tipos de dados XML, consulte o documento de Consortium World Wide Web (www.w3.org), &quot;XML esquema parte 2: tipos de dados&quot;.      | Tipo de dados XSD |. Tipo de dados NET |   |-------------------|--------------------|   | anyURI | <xref:System.String>|   | base64Binary | Matriz de objetos de <xref:System.Byte>|   | Booleano | <xref:System.Boolean>|   | byte | <xref:System.SByte>|   | data | <xref:System.DateTime>|   | dateTime | <xref:System.DateTime>|   | decimal | <xref:System.Decimal>|   | duplo | <xref:System.Double>|   | ENTIDADE | <xref:System.String>|   | ENTIDADES | <xref:System.String>|   | float | <xref:System.Single>|   | gDay | <xref:System.String>|   | gMonth | <xref:System.String>|   | gMonthDay | <xref:System.String>|   | gYear | <xref:System.String>|   | gYearMonth | <xref:System.String>|   | hexBinary | Matriz de objetos de <xref:System.Byte>|   | ID | <xref:System.String>|   | IDREF | <xref:System.String>|   | IDREFS | <xref:System.String>|   | int | <xref:System.Int32>|   | número inteiro | <xref:System.String>|   | idioma | <xref:System.String>|   | longo | <xref:System.Int64>|   | Nome | <xref:System.String>|   | NCName | <xref:System.String>|   | negativeInteger | <xref:System.String>|   | NMTOKEN | <xref:System.String>|   | NMTOKENS | <xref:System.String>|   | normalizedString | <xref:System.String>|   | nonNegativeInteger | <xref:System.String>|   | nonPositiveInteger | <xref:System.String>|   | NOTATION | <xref:System.String>|   | positiveInteger | <xref:System.String>|   | QName | <xref:System.Xml.XmlQualifiedName>|   | duração | <xref:System.String>|   | cadeia | <xref:System.String>|   | curto | <xref:System.Int16>|   | tempo | <xref:System.DateTime>|   | token | <xref:System.String>|   | unsignedByte | <xref:System.Byte>|   | unsignedInt | <xref:System.UInt32>|   | unsignedLong | <xref:System.UInt64>|   | unsignedShort | <xref:System.UInt16>|</xref:System.UInt16></xref:System.UInt64></xref:System.UInt32></xref:System.Byte></xref:System.String></xref:System.DateTime></xref:System.Int16></xref:System.String></xref:System.String></xref:System.Xml.XmlQualifiedName></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Int64></xref:System.String></xref:System.String></xref:System.Int32></xref:System.String></xref:System.String></xref:System.String></xref:System.Byte></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.String></xref:System.Single></xref:System.String></xref:System.String></xref:System.Double></xref:System.Decimal></xref:System.DateTime></xref:System.DateTime></xref:System.SByte></xref:System.Boolean></xref:System.Byte></xref:System.String>"
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_3_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_3_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_3_1.vb)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: "Um dos tipos de dados de esquema XML."
  overload: System.Xml.Serialization.SoapElementAttribute.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.ElementName
  id: ElementName
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: ElementName
  nameWithType: SoapElementAttribute.ElementName
  fullName: System.Xml.Serialization.SoapElementAttribute.ElementName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Obtém ou define o nome do elemento XML gerado."
  remarks: ''
  example:
  - "The following example serializes an instance of a class named `Transportation` that contains a field named `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> is applied to the field. When the field is serialized, the XML element name is \"Wheels\" instead of \"Vehicle\". The `SerializeOverride` method creates a <xref:System.Xml.Serialization.SoapElementAttribute> and sets the <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> to the <xref:System.Xml.Serialization.SoapElementAttribute>. The <xref:System.Xml.Serialization.SoapAttributes> is added to a <xref:System.Xml.Serialization.SoapAttributeOverrides> that is used to create an <xref:System.Xml.Serialization.XmlTypeMapping>. An <xref:System.Xml.Serialization.XmlSerializer> is constructed with the <xref:System.Xml.Serialization.XmlTypeMapping>, and an instance of the `Transportation` class is again serialized. Because the <xref:System.Xml.Serialization.SoapElementAttribute> is used to override the serialization, the generated XML element name is now \"Truck\" instead of \"Wheels\".  \n  \n [!code-cpp[SoapElementOverrides#1](~/add/codesnippet/cpp/p-system.xml.serializati_17_1.cpp)]\n [!code-cs[SoapElementOverrides#1](~/add/codesnippet/csharp/p-system.xml.serializati_17_1.cs)]\n [!code-vb[SoapElementOverrides#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_17_1.vb)]"
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: "O nome do elemento XML gerado. A predefinição é o identificador de membro."
  overload: System.Xml.Serialization.SoapElementAttribute.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.SoapElementAttribute.IsNullable
  id: IsNullable
  parent: System.Xml.Serialization.SoapElementAttribute
  langs:
  - csharp
  name: IsNullable
  nameWithType: SoapElementAttribute.IsNullable
  fullName: System.Xml.Serialization.SoapElementAttribute.IsNullable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Obtém ou define um valor que indica se o <xref:System.Xml.Serialization.XmlSerializer>tem de serializar um membro que tem o <xref uid=&quot;langword_csharp_xsi:null&quot; name=&quot;xsi:null&quot; href=&quot;&quot;> </xref> atributo definido como &quot;1&quot;.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "A especificação de esquema XML para estruturas de permite que um documento XML explicitamente assinalar que o conteúdo de um elemento está em falta. Essa um elemento contém o atributo `xsi:null` definido como &quot;1&quot;. Para obter mais informações, consulte a especificação de Consortium World Wide Web (www.w3.org) com o nome &quot;XML esquema parte 1: estruturas&quot;.       Se a propriedade IsNullable estiver definida como `true`, a `xsi:null` atributo é gerado para membros de classe que foram definidos para `null`. Por exemplo, se definir um campo com o nome `MyStringArray` para `null`, a <xref:System.Xml.Serialization.XmlSerializer>gera o seguinte código XML.</xref:System.Xml.Serialization.XmlSerializer>      ```   <MyStringArray xsi:null = &quot;1&quot; />   ```Se o <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>propriedade é `false`, não é gerado nenhum elemento XML.</xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>      > [!NOTE] > Não é possível aplicar o <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>escreveu propriedade para um membro como um tipo de valor, porque não pode conter um tipo de valor `null`.</xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>"
  syntax:
    content: public bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Xml.Serialization.XmlSerializer>gera o <xref uid=&quot;langword_csharp_xsi:null&quot; name=&quot;xsi:null&quot; href=&quot;&quot;> </xref> atributo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.SoapElementAttribute.IsNullable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: SoapElementAttribute()
  nameWithType: SoapElementAttribute.SoapElementAttribute()
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute()
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: SoapElementAttribute(String)
  nameWithType: SoapElementAttribute.SoapElementAttribute(String)
  fullName: System.Xml.Serialization.SoapElementAttribute.SoapElementAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.SoapElementAttribute.DataType
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapElementAttribute.DataType
  fullName: System.Xml.Serialization.SoapElementAttribute.DataType
- uid: System.Xml.Serialization.SoapElementAttribute.ElementName
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: ElementName
  nameWithType: SoapElementAttribute.ElementName
  fullName: System.Xml.Serialization.SoapElementAttribute.ElementName
- uid: System.Xml.Serialization.SoapElementAttribute.IsNullable
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: IsNullable
  nameWithType: SoapElementAttribute.IsNullable
  fullName: System.Xml.Serialization.SoapElementAttribute.IsNullable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.SoapElementAttribute.#ctor*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: SoapElementAttribute
  nameWithType: SoapElementAttribute.SoapElementAttribute
- uid: System.Xml.Serialization.SoapElementAttribute.DataType*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: DataType
  nameWithType: SoapElementAttribute.DataType
- uid: System.Xml.Serialization.SoapElementAttribute.ElementName*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: ElementName
  nameWithType: SoapElementAttribute.ElementName
- uid: System.Xml.Serialization.SoapElementAttribute.IsNullable*
  parent: System.Xml.Serialization.SoapElementAttribute
  isExternal: false
  name: IsNullable
  nameWithType: SoapElementAttribute.IsNullable
