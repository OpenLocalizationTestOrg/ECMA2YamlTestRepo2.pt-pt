### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  id: KerberosSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor(System.Boolean)
  - System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: KerberosSecurityTokenAuthenticator
  nameWithType: KerberosSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  type: Class
  summary: "Authenticates a <see cref=&quot;T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken&quot;></see> security token."
  remarks: "Use the KerberosSecurityTokenAuthenticator class to authenticate <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> security tokens."
  syntax:
    content: 'public class KerberosSecurityTokenAuthenticator : System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  langs:
  - csharp
  name: KerberosSecurityTokenAuthenticator()
  nameWithType: KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initializes a new instance of the <see cref=&quot;T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator&quot;></see> class."
  remarks: "When the user is authenticated the claims are added to identify the groups that the Windows user belongs to."
  syntax:
    content: public KerberosSecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  langs:
  - csharp
  name: KerberosSecurityTokenAuthenticator(Boolean)
  nameWithType: KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator(Boolean)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator(Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initializes a new instance of the <see cref=&quot;T:System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator&quot;></see> class by specifying whether the groups that the Windows user belongs to are obtained when the user is authenticated."
  syntax:
    content: public KerberosSecurityTokenAuthenticator (bool includeWindowsGroups);
    parameters:
    - id: includeWindowsGroups
      type: System.Boolean
      description: "\n     to get the groups the Windows user belongs to; otherwise, ."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: KerberosSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a value that indicates whether the specified security token can be validated by this security token authenticator."
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The  to authenticate."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.WindowsSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  isExternal: false
  name: KerberosSecurityTokenAuthenticator()
  nameWithType: KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor(System.Boolean)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  isExternal: false
  name: KerberosSecurityTokenAuthenticator(Boolean)
  nameWithType: KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator(Boolean)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: KerberosSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  isExternal: false
  name: KerberosSecurityTokenAuthenticator
  nameWithType: KerberosSecurityTokenAuthenticator.KerberosSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.KerberosSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: KerberosSecurityTokenAuthenticator.CanValidateTokenCore
