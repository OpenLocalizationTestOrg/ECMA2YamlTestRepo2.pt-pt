### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataGridCellInfo
  id: DataGridCellInfo
  children:
  - System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)
  - System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)
  - System.Windows.Controls.DataGridCellInfo.Column
  - System.Windows.Controls.DataGridCellInfo.Equals(System.Object)
  - System.Windows.Controls.DataGridCellInfo.GetHashCode
  - System.Windows.Controls.DataGridCellInfo.IsValid
  - System.Windows.Controls.DataGridCellInfo.Item
  - System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  - System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  langs:
  - csharp
  name: DataGridCellInfo
  nameWithType: DataGridCellInfo
  fullName: System.Windows.Controls.DataGridCellInfo
  type: Struct
  summary: "Represents information about a specific cell in a <xref href=&quot;System.Windows.Controls.DataGrid&quot;></xref>."
  remarks: "This structure provides information about the cell and the data item associated with the cell. It is used instead of a reference to the actual <xref:System.Windows.Controls.DataGridCell> container when the <xref:System.Windows.Controls.DataGrid> gets a cell; for example, in the <xref:System.Windows.Controls.DataGrid.CurrentCell%2A> or <xref:System.Windows.Controls.DataGrid.SelectedCells%2A> properties."
  syntax:
    content: public struct DataGridCellInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)
  id: '#ctor(System.Windows.Controls.DataGridCell)'
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: DataGridCellInfo(DataGridCell)
  nameWithType: DataGridCellInfo.DataGridCellInfo(DataGridCell)
  fullName: System.Windows.Controls.DataGridCellInfo.DataGridCellInfo(DataGridCell)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.DataGridCellInfo&quot;></xref> structure for the specified cell."
  remarks: "This constructor associates the <xref:System.Windows.Controls.DataGridCellInfo> with the specific <xref:System.Windows.Controls.DataGrid> instance that owns the cell container."
  syntax:
    content: public DataGridCellInfo (System.Windows.Controls.DataGridCell cell);
    parameters:
    - id: cell
      type: System.Windows.Controls.DataGridCell
      description: "The cell for which information is to be generated."
  overload: System.Windows.Controls.DataGridCellInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)
  id: '#ctor(System.Object,System.Windows.Controls.DataGridColumn)'
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: DataGridCellInfo(Object,DataGridColumn)
  nameWithType: DataGridCellInfo.DataGridCellInfo(Object,DataGridColumn)
  fullName: System.Windows.Controls.DataGridCellInfo.DataGridCellInfo(Object,DataGridColumn)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.DataGridCellInfo&quot;></xref> structure using the specified data item and column."
  remarks: "This constructor does not associate the <xref:System.Windows.Controls.DataGridCellInfo> with a specific <xref:System.Windows.Controls.DataGrid> instance."
  syntax:
    content: public DataGridCellInfo (object item, System.Windows.Controls.DataGridColumn column);
    parameters:
    - id: item
      type: System.Object
      description: "The data item for the row that contains the cell."
    - id: column
      type: System.Windows.Controls.DataGridColumn
      description: "The column that contains the cell."
  overload: System.Windows.Controls.DataGridCellInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.Column
  id: Column
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: Column
  nameWithType: DataGridCellInfo.Column
  fullName: System.Windows.Controls.DataGridCellInfo.Column
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the column that contains the cell."
  syntax:
    content: public System.Windows.Controls.DataGridColumn Column { get; }
    return:
      type: System.Windows.Controls.DataGridColumn
      description: "The column that contains the cell."
  overload: System.Windows.Controls.DataGridCellInfo.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DataGridCellInfo.Equals(Object)
  fullName: System.Windows.Controls.DataGridCellInfo.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Indicates whether the specified object is equal to the current instance."
  remarks: "This method compares the <xref:System.Windows.Controls.DataGridCellInfo.Column%2A> property, the <xref:System.Windows.Controls.DataGridCellInfo.Item%2A> property, and the <xref:System.Windows.Controls.DataGrid> that owns the cell container."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare to the current instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the comparison object represents the same cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.DataGridCellInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DataGridCellInfo.GetHashCode()
  fullName: System.Windows.Controls.DataGridCellInfo.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Returns a hash code for the current <xref href=&quot;System.Windows.Controls.DataGridCellInfo&quot;></xref> structure."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash code for the structure."
  overload: System.Windows.Controls.DataGridCellInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.IsValid
  id: IsValid
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: IsValid
  nameWithType: DataGridCellInfo.IsValid
  fullName: System.Windows.Controls.DataGridCellInfo.IsValid
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a value that indicates whether the structure holds valid information."
  remarks: "This property verifies that the <xref:System.Windows.Controls.DataGridCellInfo.Item%2A> property is not <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName> and the <xref:System.Windows.Controls.DataGridCellInfo.Column%2A> property is not `null`."
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the structure has valid information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.DataGridCellInfo.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.Item
  id: Item
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: Item
  nameWithType: DataGridCellInfo.Item
  fullName: System.Windows.Controls.DataGridCellInfo.Item
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the data item for the row that contains the cell."
  syntax:
    content: public object Item { get; }
    return:
      type: System.Object
      description: "The data item for the row that contains the cell."
  overload: System.Windows.Controls.DataGridCellInfo.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  id: op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: op_Equality(DataGridCellInfo,DataGridCellInfo)
  nameWithType: DataGridCellInfo.op_Equality(DataGridCellInfo,DataGridCellInfo)
  fullName: System.Windows.Controls.DataGridCellInfo.op_Equality(DataGridCellInfo,DataGridCellInfo)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Indicates whether two <xref href=&quot;System.Windows.Controls.DataGridCellInfo&quot;></xref> instances are equal."
  remarks: "This operator compares the <xref:System.Windows.Controls.DataGridCellInfo.Column%2A> property, the <xref:System.Windows.Controls.DataGridCellInfo.Item%2A> property, and the <xref:System.Windows.Controls.DataGrid> that owns the cell container."
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.DataGridCellInfo cell1, System.Windows.Controls.DataGridCellInfo cell2);
    parameters:
    - id: cell1
      type: System.Windows.Controls.DataGridCellInfo
      description: "The first structure to compare."
    - id: cell2
      type: System.Windows.Controls.DataGridCellInfo
      description: "The second structure to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two structures represent the same cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.DataGridCellInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  id: op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  parent: System.Windows.Controls.DataGridCellInfo
  langs:
  - csharp
  name: op_Inequality(DataGridCellInfo,DataGridCellInfo)
  nameWithType: DataGridCellInfo.op_Inequality(DataGridCellInfo,DataGridCellInfo)
  fullName: System.Windows.Controls.DataGridCellInfo.op_Inequality(DataGridCellInfo,DataGridCellInfo)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Indicates whether two <xref href=&quot;System.Windows.Controls.DataGridCellInfo&quot;></xref> instances are not equal."
  remarks: "This operator compares the <xref:System.Windows.Controls.DataGridCellInfo.Column%2A> property, the <xref:System.Windows.Controls.DataGridCellInfo.Item%2A> property, and the <xref:System.Windows.Controls.DataGrid> that owns the cell container."
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.DataGridCellInfo cell1, System.Windows.Controls.DataGridCellInfo cell2);
    parameters:
    - id: cell1
      type: System.Windows.Controls.DataGridCellInfo
      description: "The first structure to compare."
    - id: cell2
      type: System.Windows.Controls.DataGridCellInfo
      description: "The second structure to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two structures do not represent the same cell; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.DataGridCellInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Controls.DataGridCellInfo.#ctor(System.Windows.Controls.DataGridCell)
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: DataGridCellInfo(DataGridCell)
  nameWithType: DataGridCellInfo.DataGridCellInfo(DataGridCell)
  fullName: System.Windows.Controls.DataGridCellInfo.DataGridCellInfo(DataGridCell)
- uid: System.Windows.Controls.DataGridCell
  parent: System.Windows.Controls
  isExternal: false
  name: DataGridCell
  nameWithType: DataGridCell
  fullName: System.Windows.Controls.DataGridCell
- uid: System.Windows.Controls.DataGridCellInfo.#ctor(System.Object,System.Windows.Controls.DataGridColumn)
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: DataGridCellInfo(Object,DataGridColumn)
  nameWithType: DataGridCellInfo.DataGridCellInfo(Object,DataGridColumn)
  fullName: System.Windows.Controls.DataGridCellInfo.DataGridCellInfo(Object,DataGridColumn)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.DataGridColumn
  parent: System.Windows.Controls
  isExternal: false
  name: DataGridColumn
  nameWithType: DataGridColumn
  fullName: System.Windows.Controls.DataGridColumn
- uid: System.Windows.Controls.DataGridCellInfo.Column
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: Column
  nameWithType: DataGridCellInfo.Column
  fullName: System.Windows.Controls.DataGridCellInfo.Column
- uid: System.Windows.Controls.DataGridCellInfo.Equals(System.Object)
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: DataGridCellInfo.Equals(Object)
  fullName: System.Windows.Controls.DataGridCellInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.DataGridCellInfo.GetHashCode
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: DataGridCellInfo.GetHashCode()
  fullName: System.Windows.Controls.DataGridCellInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.DataGridCellInfo.IsValid
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: IsValid
  nameWithType: DataGridCellInfo.IsValid
  fullName: System.Windows.Controls.DataGridCellInfo.IsValid
- uid: System.Windows.Controls.DataGridCellInfo.Item
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: Item
  nameWithType: DataGridCellInfo.Item
  fullName: System.Windows.Controls.DataGridCellInfo.Item
- uid: System.Windows.Controls.DataGridCellInfo.op_Equality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: op_Equality(DataGridCellInfo,DataGridCellInfo)
  nameWithType: DataGridCellInfo.op_Equality(DataGridCellInfo,DataGridCellInfo)
  fullName: System.Windows.Controls.DataGridCellInfo.op_Equality(DataGridCellInfo,DataGridCellInfo)
- uid: System.Windows.Controls.DataGridCellInfo
  parent: System.Windows.Controls
  isExternal: false
  name: DataGridCellInfo
  nameWithType: DataGridCellInfo
  fullName: System.Windows.Controls.DataGridCellInfo
- uid: System.Windows.Controls.DataGridCellInfo.op_Inequality(System.Windows.Controls.DataGridCellInfo,System.Windows.Controls.DataGridCellInfo)
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: op_Inequality(DataGridCellInfo,DataGridCellInfo)
  nameWithType: DataGridCellInfo.op_Inequality(DataGridCellInfo,DataGridCellInfo)
  fullName: System.Windows.Controls.DataGridCellInfo.op_Inequality(DataGridCellInfo,DataGridCellInfo)
- uid: System.Windows.Controls.DataGridCellInfo.#ctor*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: DataGridCellInfo
  nameWithType: DataGridCellInfo.DataGridCellInfo
- uid: System.Windows.Controls.DataGridCellInfo.Column*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: Column
  nameWithType: DataGridCellInfo.Column
- uid: System.Windows.Controls.DataGridCellInfo.Equals*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: Equals
  nameWithType: DataGridCellInfo.Equals
- uid: System.Windows.Controls.DataGridCellInfo.GetHashCode*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: GetHashCode
  nameWithType: DataGridCellInfo.GetHashCode
- uid: System.Windows.Controls.DataGridCellInfo.IsValid*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: IsValid
  nameWithType: DataGridCellInfo.IsValid
- uid: System.Windows.Controls.DataGridCellInfo.Item*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: Item
  nameWithType: DataGridCellInfo.Item
- uid: System.Windows.Controls.DataGridCellInfo.op_Equality*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: op_Equality
  nameWithType: DataGridCellInfo.op_Equality
- uid: System.Windows.Controls.DataGridCellInfo.op_Inequality*
  parent: System.Windows.Controls.DataGridCellInfo
  isExternal: false
  name: op_Inequality
  nameWithType: DataGridCellInfo.op_Inequality
