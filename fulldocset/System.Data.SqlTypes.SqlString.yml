### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlString
  id: SqlString
  children:
  - System.Data.SqlTypes.SqlString.#ctor(System.String)
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.BinarySort
  - System.Data.SqlTypes.SqlString.BinarySort2
  - System.Data.SqlTypes.SqlString.Clone
  - System.Data.SqlTypes.SqlString.CompareInfo
  - System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CultureInfo
  - System.Data.SqlTypes.SqlString.Equals(System.Object)
  - System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GetHashCode
  - System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.IgnoreCase
  - System.Data.SqlTypes.SqlString.IgnoreKanaType
  - System.Data.SqlTypes.SqlString.IgnoreNonSpace
  - System.Data.SqlTypes.SqlString.IgnoreWidth
  - System.Data.SqlTypes.SqlString.IsNull
  - System.Data.SqlTypes.SqlString.LCID
  - System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.Null
  - System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  - System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  - System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.SqlCompareOptions
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlString.ToSqlBoolean
  - System.Data.SqlTypes.SqlString.ToSqlByte
  - System.Data.SqlTypes.SqlString.ToSqlDateTime
  - System.Data.SqlTypes.SqlString.ToSqlDecimal
  - System.Data.SqlTypes.SqlString.ToSqlDouble
  - System.Data.SqlTypes.SqlString.ToSqlGuid
  - System.Data.SqlTypes.SqlString.ToSqlInt16
  - System.Data.SqlTypes.SqlString.ToSqlInt32
  - System.Data.SqlTypes.SqlString.ToSqlInt64
  - System.Data.SqlTypes.SqlString.ToSqlMoney
  - System.Data.SqlTypes.SqlString.ToSqlSingle
  - System.Data.SqlTypes.SqlString.ToString
  - System.Data.SqlTypes.SqlString.Value
  langs:
  - csharp
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
  type: Struct
  summary: "Representa uma sequência de comprimento variável de carateres a ser armazenada numa ou a obtenção da base de dados. SqlString tem uma estrutura de dados subjacente diferente do respetivo correspondente do .NET Framework <xref:System.String>tipo de dados.</xref:System.String>"
  remarks: "<xref:System.String>utiliza sempre a predefinição <xref:System.Globalization.CultureInfo>do thread atual, mas SqlString contém sinalizadores de Id e comparar os seus próprios região.</xref:System.Globalization.CultureInfo></xref:System.String> O resultado de comparação de dois SqlString estruturas é independente do sistema operativo e a região de thread atual.       Quando utilizar os operadores de comparação de SqlString, tenha em atenção que se a LCIDs dos argumentos são diferentes, as funções de comparação acionar uma excepção porque que não não possível comparar. Por exemplo, a instrução ```   SqlString mySqlString = new SqlString(&quot;abc&quot;);   ``` é equivalente ao```   SqlString mySqlString = new SqlString(&quot;abc&quot;, CultureInfo.CurrentCulture.LCID);   ```"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlString : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String)
  nameWithType: SqlString.SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura utilizando a cadeia especificada."
  syntax:
    content: public SqlString (string data);
    parameters:
    - id: data
      type: System.String
      description: "A cadeia a armazenar."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String,Int32)
  nameWithType: SqlString.SqlString(String,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura utilizando os valores de id e a cadeia especificados."
  syntax:
    content: public SqlString (string data, int lcid);
    parameters:
    - id: data
      type: System.String
      description: "A cadeia a armazenar."
    - id: lcid
      type: System.Int32
      description: "Especifica o idioma e região geográfica para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[])
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura com o id de região especificado, comparar as opções e os dados."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data);
    parameters:
    - id: lcid
      type: System.Int32
      description: "Especifica o idioma e região geográfica para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Especifica as opções de comparação para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: data
      type: System.Byte[]
      description: "A matriz de dados para armazenar."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  id: '#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(String,Int32,SqlCompareOptions)
  nameWithType: SqlString.SqlString(String,Int32,SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32,SqlCompareOptions)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura utilizando a cadeia especificada, o id de região e comparar valores de opção."
  syntax:
    content: public SqlString (string data, int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions);
    parameters:
    - id: data
      type: System.String
      description: "A cadeia a armazenar."
    - id: lcid
      type: System.Int32
      description: "Especifica o idioma e região geográfica para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Especifica as opções de comparação para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> classe."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, bool fUnicode);
    parameters:
    - id: lcid
      type: System.Int32
      description: "Especifica o idioma e região geográfica para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Especifica as opções de comparação para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: data
      type: System.Byte[]
      description: "A matriz de dados para armazenar."
    - id: fUnicode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Unicode codificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> classe."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count);
    parameters:
    - id: lcid
      type: System.Int32
      description: "Especifica o idioma e região geográfica para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Especifica as opções de comparação para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: data
      type: System.Byte[]
      description: "A matriz de dados para armazenar."
    - id: index
      type: System.Int32
      description: "O índice de início na matriz."
    - id: count
      type: System.Int32
      description: "O número de carateres do índice para copiar."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> classe."
  syntax:
    content: public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count, bool fUnicode);
    parameters:
    - id: lcid
      type: System.Int32
      description: "Especifica o idioma e região geográfica para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Especifica as opções de comparação para a nova <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    - id: data
      type: System.Byte[]
      description: "A matriz de dados para armazenar."
    - id: index
      type: System.Int32
      description: "O índice de início na matriz."
    - id: count
      type: System.Int32
      description: "O número de carateres do índice para copiar."
    - id: fUnicode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Unicode codificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Add(SqlString,SqlString)
  nameWithType: SqlString.Add(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Concatena dois especificado <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> valores para criar um novo <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  remarks: '`x`irá aparecer primeiro no resultante <xref:System.Data.SqlTypes.SqlString>, seguido `y`.</xref:System.Data.SqlTypes.SqlString>'
  syntax:
    content: public static System.Data.SqlTypes.SqlString Add (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref> that is the concatenated value of <code>x</code> and <code>y</code>."
  overload: System.Data.SqlTypes.SqlString.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.BinarySort
  id: BinarySort
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: BinarySort
  nameWithType: SqlString.BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica que ordena deve basear-se um valor numérico de carateres em vez do respetivo valor alfabético."
  remarks: "BinarySort funciona como uma constante para a <xref:System.Data.SqlTypes.SqlString>classe.</xref:System.Data.SqlTypes.SqlString>"
  syntax:
    content: public static readonly int BinarySort;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  id: BinarySort2
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: BinarySort2
  nameWithType: SqlString.BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica que os tipos devem ser baseados no valor numérico de um caráter em vez do respetivo valor alfabético."
  syntax:
    content: public static readonly int BinarySort2;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Clone
  id: Clone
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlString.Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Cria uma cópia deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> objeto."
  syntax:
    content: public System.Data.SqlTypes.SqlString Clone ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> objecto cuja propriedade todos os valores são os mesmos que o original."
  overload: System.Data.SqlTypes.SqlString.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o <xref:System.Globalization.CompareInfo>objeto que define a forma comparações de cadeias devem ser efetuadas para este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura.</xref:System.Globalization.CompareInfo>"
  syntax:
    content: public System.Globalization.CompareInfo CompareInfo { get; }
    return:
      type: System.Globalization.CompareInfo
      description: "A <xref uid=&quot;langword_csharp_CompareInfo&quot; name=&quot;CompareInfo&quot; href=&quot;&quot;> </xref> objeto que define a comparação de cadeias para este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  overload: System.Data.SqlTypes.SqlString.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  id: CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o <xref:System.Globalization.CompareOptions>equilvalent de enumeração de especificado <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref> valor.</xref:System.Globalization.CompareOptions>"
  syntax:
    content: public static System.Globalization.CompareOptions CompareOptionsFromSqlCompareOptions (System.Data.SqlTypes.SqlCompareOptions compareOptions);
    parameters:
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref> valor que descreve as opções de comparação para este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
    return:
      type: System.Globalization.CompareOptions
      description: "A <xref uid=&quot;langword_csharp_CompareOptions&quot; name=&quot;CompareOptions&quot; href=&quot;&quot;> </xref> valor que corresponde do <xref uid=&quot;langword_csharp_SqlCompareOptions&quot; name=&quot;SqlCompareOptions&quot; href=&quot;&quot;> </xref> para este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  overload: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  id: CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareTo(SqlString)
  nameWithType: SqlString.CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> instância para o fornecido <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> e devolve uma indicação de que os respetivos valores relativos."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlString value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
      description: "O <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> a ser comparada."
    return:
      type: System.Int32
      description: "Um número assinado que indica valores relativos da instância e o objeto.       <table><thead><tr><th> Valor devolvido       </th><th> Condição       </th></tr></thead><tbody><tr><td> Menor que zero       </td><td> Esta instância é menor que o objeto.       </td></tr><tr><td> Zero       </td><td> Esta instância é o mesmo que o objeto.       </td></tr><tr><td> Maior que zero       </td><td> Esta instância é maior do que o objeto - ou - o objeto é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlString.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlString.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> objeto para o fornecido <xref:System.Object>e devolve uma indicação de que os respetivos valores relativos.</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>a ser comparada.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Um número assinado que indica valores relativos da instância e o objeto.       <table><thead><tr><th> Valor devolvido       </th><th> Condição       </th></tr></thead><tbody><tr><td> Menor que zero       </td><td> Esta instância é menor que o objeto.       </td></tr><tr><td> Zero       </td><td> Esta instância é o mesmo que o objeto.       </td></tr><tr><td> Maior que zero       </td><td> Esta instância é maior do que o objeto - ou - o objeto é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlString.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Concat(SqlString,SqlString)
  nameWithType: SqlString.Concat(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Concatena as duas especificadas <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlString Concat (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> que contém o valor recentemente concatenado que representa o conteúdo dos dois <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> parâmetros."
  overload: System.Data.SqlTypes.SqlString.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  id: CultureInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o <xref:System.Globalization.CultureInfo>estrutura que representa as informações sobre a cultura deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> objeto.</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public System.Globalization.CultureInfo CultureInfo { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>estrutura que descreve informações sobre o idioma desta estrutura de SqlString, incluindo os nomes da cultura, o sistema de escrita e de calendário utilizado bem como o acesso a objetos específicos de cultura que fornecem métodos para operações comuns, tais como as datas de formatação e ordenação cadeias.</xref:System.Globalization.CultureInfo>"
  overload: System.Data.SqlTypes.SqlString.CultureInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlString.Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara o parâmetro de objeto fornecido para o <xref:System.Data.SqlTypes.SqlString.Value*>propriedade o <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> objeto.</xref:System.Data.SqlTypes.SqlString.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a ser comparada."
    return:
      type: System.Boolean
      description: "Igual a irá devolver <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o objeto é uma instância de <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> e dois estão igual; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Equals(SqlString,SqlString)
  nameWithType: SqlString.Equals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se estes são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois valores são iguais. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se qualquer instância for nula, o <xref uid=&quot;langword_csharp_SqlString&quot; name=&quot;SqlString&quot; href=&quot;&quot;> </xref> será nulo."
  overload: System.Data.SqlTypes.SqlString.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlString.GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro com sinal de 32 bits."
  overload: System.Data.SqlTypes.SqlString.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  id: GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetNonUnicodeBytes()
  nameWithType: SqlString.GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém uma matriz de bytes, que contém o conteúdo a <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> no formato ANSI."
  syntax:
    content: public byte[] GetNonUnicodeBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o conteúdo a <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> no formato ANSI."
  overload: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  id: GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetUnicodeBytes()
  nameWithType: SqlString.GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém uma matriz de bytes, que contém o conteúdo a <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> em formato Unicode."
  syntax:
    content: public byte[] GetUnicodeBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o conteúdo a <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> em formato Unicode."
  overload: System.Data.SqlTypes.SqlString.GetUnicodeBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlString.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlString.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Devolve o idioma de definição de esquema XML (XSD) de especificado <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> valor que indica o XSD especificado de <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é maior do que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for maior do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é igual ou superior para o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é maior que ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  id: IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreCase
  nameWithType: SqlString.IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica que <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> comparações devem ignorar maiúsculas / minúsculas."
  remarks: "IgnoreCase funciona como uma constante para a <xref:System.Data.SqlTypes.SqlString>classe.</xref:System.Data.SqlTypes.SqlString>"
  syntax:
    content: public static readonly int IgnoreCase;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  id: IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreKanaType
  nameWithType: SqlString.IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica que a comparação de cadeias deve ignorar o tipo de Kana."
  remarks: "Tipo de kana refere-se ao japonês hiragana e katakana carateres que representam sons fonético nos idiomas de japonês. Hiragana é utilizado para as expressões de japonês nativas e palavras, enquanto katakana é utilizado para palavras borrowed de outros idiomas, tais como &quot;computador&quot; ou &quot;Internet&quot;. Um som fonético pode ser expressos numa hiragana e katakana. Se este valor for selecionado, o caráter de hiragana para um som é considerado igual ao caráter katakana para o mesmo som.       IgnoreKanaType funciona como uma constante para a <xref:System.Data.SqlTypes.SqlString>classe.</xref:System.Data.SqlTypes.SqlString>"
  syntax:
    content: public static readonly int IgnoreKanaType;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  id: IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreNonSpace
  nameWithType: SqlString.IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica que a comparação de cadeias deve ignorar carateres de espaço não combinar, como diacritics."
  remarks: "A norma de Unicode define combinar carateres como carateres são combinados com carateres de base para produzir um caráter de novo. Os carateres de espaço não combinar não utilizam espaço de caráter por si mesmos quando composta. Para mais informações sobre o espaço não combinar carateres, consulte a norma de Unicode em http://www.unicode.org.       IgnoreNonSpace funciona como uma constante para a <xref:System.Data.SqlTypes.SqlString>classe.</xref:System.Data.SqlTypes.SqlString>"
  syntax:
    content: public static readonly int IgnoreNonSpace;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  id: IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IgnoreWidth
  nameWithType: SqlString.IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica que a comparação de cadeia têm de ignorar a largura do caráter."
  remarks: "Por exemplo, carateres de Japonês katakana podem ser escritos como largura de completo ou half-a largura e, se este valor for selecionado, os carateres de katakana escritos como largura completo são considerados igual para os mesmos carateres escritos no meio largura.       IgnoreWidth funciona como uma constante para a <xref:System.Data.SqlTypes.SqlString>classe.</xref:System.Data.SqlTypes.SqlString>"
  syntax:
    content: public static readonly int IgnoreWidth;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlString.IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Indica se esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura é nula."
  remarks: "Para obter mais informações, consulte [processamento de valores nulos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref:System.Data.SqlTypes.SqlString.Value*> is <xref href=&quot;System.Data.SqlTypes.SqlString.Null&quot;></xref>.</xref:System.Data.SqlTypes.SqlString.Value*> Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LCID
  id: LCID
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LCID
  nameWithType: SqlString.LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Especifica a região geográfica e de idioma para o <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  syntax:
    content: public int LCID { get; }
    return:
      type: System.Int32
      description: "O id de região para a cadeia armazenado no <xref:System.Data.SqlTypes.SqlString.Value*>propriedade.</xref:System.Data.SqlTypes.SqlString.Value*>"
  overload: System.Data.SqlTypes.SqlString.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LessThan(SqlString,SqlString)
  nameWithType: SqlString.LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é menor que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for menor do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é menor ou igual a segunda."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é menor ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: NotEquals(SqlString,SqlString)
  nameWithType: SqlString.NotEquals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(SqlString,SqlString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se estes não são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias não são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlString.Null
  fullName: System.Data.SqlTypes.SqlString.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa um <xref href=&quot;System.DBNull&quot;> </xref> que podem ser atribuídas a esta instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura."
  remarks: '`Null`funciona como uma constante para o <xref:System.Data.SqlTypes.SqlString>estrutura.</xref:System.Data.SqlTypes.SqlString>  Para obter mais informações, consulte [processamento de valores nulos](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlString Null;
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Addition(SqlString,SqlString)
  nameWithType: SqlString.op_Addition(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Addition(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Concatena as duas especificadas <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Addition (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> que contém o valor recentemente concatenado que representa o conteúdo dos dois <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> parâmetros."
  overload: System.Data.SqlTypes.SqlString.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Equality(SqlString,SqlString)
  nameWithType: SqlString.op_Equality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Equality(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se estes são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias não são iguais. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlString.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlByte)
  nameWithType: SqlString.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDateTime)
  nameWithType: SqlString.op_Explicit(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDateTime)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDateTime x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlString.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlString.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlGuid)
  nameWithType: SqlString.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlGuid)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlGuid x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlGuid
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt16)
  nameWithType: SqlString.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt32)
  nameWithType: SqlString.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlString.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlString.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlString.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlString.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static string op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
    return:
      type: System.String
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThan(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é maior do que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for maior do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é igual ou superior para o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é maior que ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  id: op_Implicit(System.String)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Implicit(String)
  nameWithType: SqlString.op_Implicit(String)
  fullName: System.Data.SqlTypes.SqlString.op_Implicit(String)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlString op_Implicit (string x);
    parameters:
    - id: x
      type: System.String
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlString.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_Inequality(SqlString,SqlString)
  nameWithType: SqlString.op_Inequality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Inequality(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se estes não são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias não são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_LessThan(SqlString,SqlString)
  nameWithType: SqlString.op_LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThan(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é menor que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for menor do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(SqlString,SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> operandos para determinar se a primeira é menor ou igual a segunda."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é menor ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlString.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  id: SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Uma combinação de um ou mais do <xref href=&quot;System.Data.SqlTypes.SqlCompareOptions&quot;> </xref> valores de enumeração que representam a forma no qual este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> deve ser em comparação com outras <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estruturas."
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions SqlCompareOptions { get; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Especificar um valor como esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> deve ser em comparação com outras <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estruturas."
  overload: System.Data.SqlTypes.SqlString.SqlCompareOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader" name="XmlReader" href=""></xref>
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlString.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Data.SqlTypes.SqlString.Value*>é diferente de zero; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se zero; caso contrário nulo.</xref:System.Data.SqlTypes.SqlString.Value*>"
  overload: System.Data.SqlTypes.SqlString.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlString.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "Um novo <xref uid=&quot;langword_csharp_SqlByte&quot; name=&quot;SqlByte&quot; href=&quot;&quot;> </xref> estrutura cujos <xref:System.Data.SqlTypes.SqlByte.Value*>iguala o número representado por este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlByte.Value*>"
  overload: System.Data.SqlTypes.SqlString.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  id: ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDateTime()
  nameWithType: SqlString.ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDateTime&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDateTime ToSqlDateTime ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "Um novo <xref uid=&quot;langword_csharp_SqlDateTime&quot; name=&quot;SqlDateTime&quot; href=&quot;&quot;> </xref> estrutura que contém o valor de data representado por este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlString.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> que contém o valor deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlString.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> que é igual ao valor numérico deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  id: ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlGuid()
  nameWithType: SqlString.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlGuid ToSqlGuid ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref> estrutura cujos <xref:System.Data.SqlTypes.SqlGuid.Value*>é o <xref uid=&quot;langword_csharp_Guid&quot; name=&quot;Guid&quot; href=&quot;&quot;> </xref> representado por este <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlGuid.Value*>"
  overload: System.Data.SqlTypes.SqlString.ToSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlString.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> que é igual ao valor numérico deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlString.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> que é igual ao valor numérico deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlString.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> que é igual ao valor numérico deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlString.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> que é igual ao valor numérico deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlString.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlString.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> que é igual ao valor numérico deste <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>..."
  overload: System.Data.SqlTypes.SqlString.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlString.ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte um <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> objeto <xref:System.String>.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>com o mesmo valor que isto <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura.</xref:System.String>"
  overload: System.Data.SqlTypes.SqlString.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlString.Value
  id: Value
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  name: Value
  nameWithType: SqlString.Value
  fullName: System.Data.SqlTypes.SqlString.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém a cadeia que é armazenada nesta <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> estrutura. Esta propriedade é só de leitura."
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "A cadeia que está armazenada."
  overload: System.Data.SqlTypes.SqlString.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "O valor da cadeia é <xref href=&quot;System.Data.SqlTypes.SqlString.Null&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String)
  nameWithType: SqlString.SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String,Int32)
  nameWithType: SqlString.SqlString(String,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[])
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[])
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(String,Int32,SqlCompareOptions)
  nameWithType: SqlString.SqlString(String,Int32,SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(String,Int32,SqlCompareOptions)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  nameWithType: SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Add(SqlString,SqlString)
  nameWithType: SqlString.Add(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlString.BinarySort
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: BinarySort
  nameWithType: SqlString.BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: BinarySort2
  nameWithType: SqlString.BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
- uid: System.Data.SqlTypes.SqlString.Clone
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Clone()
  nameWithType: SqlString.Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
- uid: System.Globalization.CompareInfo
  parent: System.Globalization
  isExternal: true
  name: CompareInfo
  nameWithType: CompareInfo
  fullName: System.Globalization.CompareInfo
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
- uid: System.Globalization.CompareOptions
  parent: System.Globalization
  isExternal: true
  name: CompareOptions
  nameWithType: CompareOptions
  fullName: System.Globalization.CompareOptions
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo(SqlString)
  nameWithType: SqlString.CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(SqlString)
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlString.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Concat(SqlString,SqlString)
  nameWithType: SqlString.Concat(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlString.Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(Object)
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals(SqlString,SqlString)
  nameWithType: SqlString.Equals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlString.GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetNonUnicodeBytes()
  nameWithType: SqlString.GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetUnicodeBytes()
  nameWithType: SqlString.GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
- uid: System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlString.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlString.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreCase
  nameWithType: SqlString.IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreKanaType
  nameWithType: SqlString.IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreNonSpace
  nameWithType: SqlString.IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IgnoreWidth
  nameWithType: SqlString.IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
- uid: System.Data.SqlTypes.SqlString.IsNull
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IsNull
  nameWithType: SqlString.IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
- uid: System.Data.SqlTypes.SqlString.LCID
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LCID
  nameWithType: SqlString.LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThan(SqlString,SqlString)
  nameWithType: SqlString.LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: NotEquals(SqlString,SqlString)
  nameWithType: SqlString.NotEquals(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.Null
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: "Null"
  nameWithType: SqlString.Null
  fullName: System.Data.SqlTypes.SqlString.Null
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Addition(SqlString,SqlString)
  nameWithType: SqlString.op_Addition(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Addition(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Equality(SqlString,SqlString)
  nameWithType: SqlString.op_Equality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Equality(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlString.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlByte)
  nameWithType: SqlString.op_Explicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDateTime)
  nameWithType: SqlString.op_Explicit(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDateTime)
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlString.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlString.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlGuid)
  nameWithType: SqlString.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlGuid)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt16)
  nameWithType: SqlString.op_Explicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt32)
  nameWithType: SqlString.op_Explicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlString.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlString.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlString.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString to System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlString.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThan(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Implicit(String)
  nameWithType: SqlString.op_Implicit(String)
  fullName: System.Data.SqlTypes.SqlString.op_Implicit(String)
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Inequality(SqlString,SqlString)
  nameWithType: SqlString.op_Inequality(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_Inequality(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThan(SqlString,SqlString)
  nameWithType: SqlString.op_LessThan(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThan(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThanOrEqual(SqlString,SqlString)
  nameWithType: SqlString.op_LessThanOrEqual(SqlString,SqlString)
  fullName: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(SqlString,SqlString)
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlString.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlString.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDateTime()
  nameWithType: SqlString.ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlString.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlString.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlGuid()
  nameWithType: SqlString.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlString.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlString.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlString.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlString.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlString.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlString.ToString
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToString()
  nameWithType: SqlString.ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
- uid: System.Data.SqlTypes.SqlString.Value
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Value
  nameWithType: SqlString.Value
  fullName: System.Data.SqlTypes.SqlString.Value
- uid: System.Data.SqlTypes.SqlString.#ctor*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlString
  nameWithType: SqlString.SqlString
- uid: System.Data.SqlTypes.SqlString.Add*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Add
  nameWithType: SqlString.Add
- uid: System.Data.SqlTypes.SqlString.Clone*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Clone
  nameWithType: SqlString.Clone
- uid: System.Data.SqlTypes.SqlString.CompareInfo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareInfo
  nameWithType: SqlString.CompareInfo
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareOptionsFromSqlCompareOptions
  nameWithType: SqlString.CompareOptionsFromSqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.CompareTo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CompareTo
  nameWithType: SqlString.CompareTo
- uid: System.Data.SqlTypes.SqlString.Concat*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Concat
  nameWithType: SqlString.Concat
- uid: System.Data.SqlTypes.SqlString.CultureInfo*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: CultureInfo
  nameWithType: SqlString.CultureInfo
- uid: System.Data.SqlTypes.SqlString.Equals*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Equals
  nameWithType: SqlString.Equals
- uid: System.Data.SqlTypes.SqlString.GetHashCode*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetHashCode
  nameWithType: SqlString.GetHashCode
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetNonUnicodeBytes
  nameWithType: SqlString.GetNonUnicodeBytes
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetUnicodeBytes
  nameWithType: SqlString.GetUnicodeBytes
- uid: System.Data.SqlTypes.SqlString.GetXsdType*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GetXsdType
  nameWithType: SqlString.GetXsdType
- uid: System.Data.SqlTypes.SqlString.GreaterThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThan
  nameWithType: SqlString.GreaterThan
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlString.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlString.IsNull*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: IsNull
  nameWithType: SqlString.IsNull
- uid: System.Data.SqlTypes.SqlString.LCID*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LCID
  nameWithType: SqlString.LCID
- uid: System.Data.SqlTypes.SqlString.LessThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThan
  nameWithType: SqlString.LessThan
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlString.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlString.NotEquals*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: NotEquals
  nameWithType: SqlString.NotEquals
- uid: System.Data.SqlTypes.SqlString.op_Addition*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Addition
  nameWithType: SqlString.op_Addition
- uid: System.Data.SqlTypes.SqlString.op_Equality*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Equality
  nameWithType: SqlString.op_Equality
- uid: System.Data.SqlTypes.SqlString.op_Explicit*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Explicit
  nameWithType: SqlString.op_Explicit
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlString.op_GreaterThan
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlString.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlString.op_Implicit*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Implicit
  nameWithType: SqlString.op_Implicit
- uid: System.Data.SqlTypes.SqlString.op_Inequality*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_Inequality
  nameWithType: SqlString.op_Inequality
- uid: System.Data.SqlTypes.SqlString.op_LessThan*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThan
  nameWithType: SqlString.op_LessThan
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlString.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlString.SqlCompareOptions
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlString.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlString.ToSqlByte*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlString.ToSqlByte
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDateTime
  nameWithType: SqlString.ToSqlDateTime
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlString.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlString.ToSqlDouble
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlGuid
  nameWithType: SqlString.ToSqlGuid
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlString.ToSqlInt16
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlString.ToSqlInt32
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlString.ToSqlInt64
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlString.ToSqlMoney
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlString.ToSqlSingle
- uid: System.Data.SqlTypes.SqlString.ToString*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: ToString
  nameWithType: SqlString.ToString
- uid: System.Data.SqlTypes.SqlString.Value*
  parent: System.Data.SqlTypes.SqlString
  isExternal: false
  name: Value
  nameWithType: SqlString.Value
