### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  id: CriticalFinalizerObject
  children:
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  langs:
  - csharp
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  type: Class
  summary: "Garante que todo o código de finalização em classes derivadas está marcado como crítico."
  remarks: "Classes derivadas da classe de CriticalFinalizerObject implicitamente são tratadas como uma região de execução restrita (. CER).  Isto requer um código no Finalizador para só é possível chamar código com um contrato de fiabilidade forte. Para mais informações sobre CERs, consulte o <xref:System.Runtime.ConstrainedExecution>espaço de nomes.</xref:System.Runtime.ConstrainedExecution>       Em classes derivadas da classe de CriticalFinalizerObject, as garantias de runtime (CLR) de idioma comum que todo o código de finalização críticos terá a oportunidade para executar, forneceu a Finalizador segue as regras para um CER, mesmo em situações em que o CLR a forçar a efetua a descarga de um domínio de aplicação ou interrompe um thread. Se um finalizador viola as regras para um CER, este poderá não com êxito executar. Além disso, o CLR estabelece uma ordenação fraca entre os finalizadores normais e críticos: para objetos recuperados através da recolha de lixo ao mesmo tempo, os reinicio finalizadores são denominados antes de qualquer um dos finalizadores críticos. Por exemplo, uma classe, como <xref:System.IO.FileStream>, que contém dados o <xref:System.Runtime.InteropServices.SafeHandle>classe que deriva de CriticalFinalizerObject, pode executar um Finalizador padrão para esvaziar saída dados colocados em memória intermédia existentes.</xref:System.Runtime.InteropServices.SafeHandle> </xref:System.IO.FileStream>       Na maioria dos casos, não terá de escrever as classes que derivam da classe de CriticalFinalizerObject. A biblioteca de classe do .NET Framework fornece duas classes, <xref:System.Runtime.InteropServices.SafeHandle>e <xref:System.Runtime.InteropServices.CriticalHandle>, que fornecer a funcionalidade de finalização crítico de identificador de recursos.</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle> Além disso, o .NET Framework fornece um conjunto de prewritten classes derivadas do <xref:System.Runtime.InteropServices.SafeHandle>classe e esta conjunto está localizado no <xref:Microsoft.Win32.SafeHandles>espaço de nomes.</xref:Microsoft.Win32.SafeHandles> </xref:System.Runtime.InteropServices.SafeHandle> Estas classes são concebidas para fornecer a funcionalidade comum de suporte de identificadores de ficheiros e o sistema operativo."
  example:
  - "The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams. The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.  \n  \n [!code-cs[SafeHandle.SafeFileHandle#1](~/add/codesnippet/csharp/t-system.runtime.constra_0_1.cs)]\n [!code-vb[SafeHandle.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CriticalFinalizerObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  id: '#ctor'
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> classe."
  syntax:
    content: protected CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  id: Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> classe."
  remarks: "O Finalizador para quaisquer tipos derivados de <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>é dada a oportunidade de execução e será não ser abortada, partindo do princípio de Finalizador corretamente segue as regras para uma região de execução restrita (. CER).</xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>"
  syntax:
    content: ~CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize
  nameWithType: CriticalFinalizerObject.Finalize
