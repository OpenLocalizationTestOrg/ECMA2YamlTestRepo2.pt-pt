### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.SoapProcessingBehavior
  id: SoapProcessingBehavior
  children:
  - System.ServiceModel.Routing.SoapProcessingBehavior.#ctor
  - System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)
  - System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)
  - System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages
  - System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)
  langs:
  - csharp
  name: SoapProcessingBehavior
  nameWithType: SoapProcessingBehavior
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior
  type: Class
  summary: "Defines the client endpoint behavior used to marshal messages between different binding types and message versions."
  remarks: "SOAP processing is the process where messages are converted between message versions.       Processing messages from one <xref:System.ServiceModel.Channels.MessageVersion> to another is accomplished by constructing a new WCF message that contains the body part and relevant headers from the incoming WCF message. Headers that are specific to addressing, or that are understood at the router level, are not used during construction of the new WCF message because these headers are either of a different version (in the case of addressing headers) or have been processed as part of the communication between the client and the router.       Whether a header is placed in the outbound message is determined by whether or not it was marked as understood as it passed through the incoming channel layer. Headers that are not understood (such as custom headers) are not removed and so pass through the routing service."
  syntax:
    content: 'public class SoapProcessingBehavior : System.ServiceModel.Description.IEndpointBehavior'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Description.IEndpointBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  langs:
  - csharp
  name: SoapProcessingBehavior()
  nameWithType: SoapProcessingBehavior.SoapProcessingBehavior()
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.SoapProcessingBehavior()
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Creates a new instance of the <xref href=&quot;System.ServiceModel.Routing.SoapProcessingBehavior&quot;></xref> class."
  syntax:
    content: public SoapProcessingBehavior ();
    parameters: []
  overload: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)
  id: AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  langs:
  - csharp
  name: AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
  nameWithType: SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Adds new binding elements to an endpoint."
  syntax:
    content: public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The service endpoint to apply the binding elements to."
    - id: bindingParameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "The binding parameter collection to apply to the endpoint."
  overload: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)
  id: ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  langs:
  - csharp
  name: ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
  nameWithType: SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Applies the specified endpoint behavior to the client."
  syntax:
    content: public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The service endpoint to apply to the client."
    - id: clientRuntime
      type: System.ServiceModel.Dispatcher.ClientRuntime
      description: "The runtime on the client."
  overload: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)
  id: ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  langs:
  - csharp
  name: ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
  nameWithType: SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Applies the specified endpoint behavior to the endpoint dispatcher."
  syntax:
    content: public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The service endpoint to apply to the client."
    - id: endpointDispatcher
      type: System.ServiceModel.Dispatcher.EndpointDispatcher
      description: "The endpoint dispatcher."
  overload: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages
  id: ProcessMessages
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  langs:
  - csharp
  name: ProcessMessages
  nameWithType: SoapProcessingBehavior.ProcessMessages
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Gets or sets a value that indicates whether messages should be processed."
  remarks: "By default, the <xref:System.ServiceModel.Routing.RoutingBehavior> creates and attaches a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with ProcessMessages set to `true` for each client endpoint. If you do not want to use the <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on a specific endpoint, create a new <xref:System.ServiceModel.Routing.SoapProcessingBehavior> with this value set to `false`, and then attach it to the endpoint on which you do not want processing to occur. If the <xref:System.ServiceModel.Routing.RoutingBehavior> observes that a client already has a <xref:System.ServiceModel.Routing.SoapProcessingBehavior>, it does not attempt to attach another.       To disable the application of <xref:System.ServiceModel.Routing.SoapProcessingBehavior> on any endpoint, disable SOAP processing on the <xref:System.ServiceModel.Routing.RoutingBehavior> and the <xref:System.ServiceModel.Routing.RoutingConfiguration>."
  syntax:
    content: public bool ProcessMessages { get; set; }
    return:
      type: System.Boolean
      description: '**true** if messages should be marshaled; otherwise, **false**. The default value is **true**.'
  overload: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)
  id: Validate(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  langs:
  - csharp
  name: Validate(ServiceEndpoint)
  nameWithType: SoapProcessingBehavior.Validate(ServiceEndpoint)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Validates the service endpoint."
  syntax:
    content: public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The service endpoint to validate."
  overload: System.ServiceModel.Routing.SoapProcessingBehavior.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: SoapProcessingBehavior()
  nameWithType: SoapProcessingBehavior.SoapProcessingBehavior()
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.SoapProcessingBehavior()
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
  nameWithType: SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
  nameWithType: SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
- uid: System.ServiceModel.Dispatcher.ClientRuntime
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: ClientRuntime
  nameWithType: ClientRuntime
  fullName: System.ServiceModel.Dispatcher.ClientRuntime
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
  nameWithType: SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
- uid: System.ServiceModel.Dispatcher.EndpointDispatcher
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: EndpointDispatcher
  nameWithType: EndpointDispatcher
  fullName: System.ServiceModel.Dispatcher.EndpointDispatcher
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: ProcessMessages
  nameWithType: SoapProcessingBehavior.ProcessMessages
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: Validate(ServiceEndpoint)
  nameWithType: SoapProcessingBehavior.Validate(ServiceEndpoint)
  fullName: System.ServiceModel.Routing.SoapProcessingBehavior.Validate(ServiceEndpoint)
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.#ctor*
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: SoapProcessingBehavior
  nameWithType: SoapProcessingBehavior.SoapProcessingBehavior
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters*
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: AddBindingParameters
  nameWithType: SoapProcessingBehavior.AddBindingParameters
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior*
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: ApplyClientBehavior
  nameWithType: SoapProcessingBehavior.ApplyClientBehavior
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior*
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: ApplyDispatchBehavior
  nameWithType: SoapProcessingBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages*
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: ProcessMessages
  nameWithType: SoapProcessingBehavior.ProcessMessages
- uid: System.ServiceModel.Routing.SoapProcessingBehavior.Validate*
  parent: System.ServiceModel.Routing.SoapProcessingBehavior
  isExternal: false
  name: Validate
  nameWithType: SoapProcessingBehavior.Validate
