### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.Operators
  id: Operators
  children:
  - Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  - Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  langs:
  - csharp
  name: Operators
  nameWithType: Operators
  fullName: Microsoft.VisualBasic.CompilerServices.Operators
  type: Class
  summary: "Fornece operadores de contas de vinculação tardia, tais como <> </> *> e <> </> *>, que o compilador do Visual Basic utiliza internamente."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public sealed class Operators
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  id: AddObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: AddObject(Object,Object)
  nameWithType: Operators.AddObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador de adição (+) Visual Basic."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object AddObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "The sum of <code>Left</code> and <code>Right</code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.AddObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  id: AndObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: AndObject(Object,Object)
  nameWithType: Operators.AndObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_And&quot; name=&quot;And&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object AndObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    return:
      type: System.Object
      description: "For <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> operations, <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if both <code>Left</code> and <code>Right</code> evaluate to <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>. Para operações de bit a bit, 1 se ambos os <code> Left </code> e <code> Right </code> avaliar como 1; caso contrário, 0."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.AndObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  id: CompareObject(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObject(Object,Object,Boolean)
  nameWithType: Operators.CompareObject(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa os operadores de comparação do Visual Basic."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static int CompareObject (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "<table><thead><tr><th> Valor       </th><th> Condição       </th></tr></thead><tbody><tr><td> -1       </td><td>           <code>Left</code>é menor que <code>Right</code>.       </td></tr><tr><td> 0       </td><td>           <code>Left</code>e <code>Right</code> são iguais.       </td></tr><tr><td> 1       </td><td>           <code>Left</code>é maior do que <code>Right</code>.       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador de igual (=) Visual Basic."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object CompareObjectEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if <code>Left</code> and <code>Right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  id: CompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectGreater(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectGreater(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic maior-que (&gt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object CompareObjectGreater (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if <code>Left</code> is greater than <code>Right</code>; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectGreaterEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectGreaterEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic maior-que ou igual a (&gt;=) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if <code>Left</code> is greater than or equal to <code>Right</code>; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  id: CompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectLess(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectLess(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic menos-que (&lt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object CompareObjectLess (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if <code>Left</code> is less than <code>Right</code>; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectLessEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectLessEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic menos-que ou igual a (&lt;=) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if <code>Left</code> is less than or equal to <code>Right</code>; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  id: CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareObjectNotEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectNotEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic não-igual (&lt;&gt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if <code>Left</code> is not equal to <code>Right</code>; otherwise, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  id: CompareString(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: CompareString(String,String,Boolean)
  nameWithType: Operators.CompareString(String,String,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Efetua a comparação de cadeias binário ou de texto quando indicado duas cadeias."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código.       Quando o operador de igualdade de Visual Basic é utilizado para comparar duas cadeias, transmite as cadeias para o método CompareString juntamente com um valor de `False` para o `TextCompare` argumento. Isto efetua uma comparação de maiúsculas e minúsculas ordinal ou com base na cultura atual, dependendo do valor da instrução."
  syntax:
    content: public static int CompareString (string Left, string Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.String
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão."
    - id: Right
      type: System.String
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "<table><thead><tr><th> Valor       </th><th> Condição       </th></tr></thead><tbody><tr><td> -1       </td><td>           <code>Left</code>é menor que <code>Right</code>.       </td></tr><tr><td> 0       </td><td>           <code>Left</code>é igual ao <code>Right</code>.       </td></tr><tr><td> 1       </td><td>           <code>Left</code>é maior do que <code>Right</code>.       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.CompilerServices.Operators.CompareString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  id: ConcatenateObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConcatenateObject(Object,Object)
  nameWithType: Operators.ConcatenateObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa a concatenação do Visual Basic (&amp;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object ConcatenateObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    return:
      type: System.Object
      description: "Uma cadeia representando a concatenação <code> Left </code> e <code> Right </code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador de é igual a (=) Visual Basic sobrecarregado."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "O resultado do operador igual a sobrecarregado. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>Se a sobrecarga do operador não é suportado."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectGreater(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreater(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o sobrecarregado Visual Basic maior-que (&gt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "O resultado a sobrecarregado maior-ao operador. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>Se a sobrecarga do operador não é suportado."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectGreaterEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o sobrecarregado Visual Basic maior-que ou igual a (&gt;=) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "O resultado a sobrecarregado maior-a ou o operador igual a. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>Se a sobrecarga do operador não é suportado."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectLess(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectLess(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic sobrecarregado menos-que (&lt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "O resultado do sobrecarregado menos-ao operador. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>Se a sobrecarga do operador não é suportado."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectLessEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectLessEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic sobrecarregado menos-que ou igual a (&lt;=) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "O resultado do sobrecarregado menos-a ou o operador igual a. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>Se a sobrecarga do operador não é suportado."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  id: ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ConditionalCompareObjectNotEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectNotEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o sobrecarregado Visual Basic não-igual (&lt;&gt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: TextCompare
      type: System.Boolean
      description: "Necessário. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para executar uma comparação de cadeia sensível; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "O resultado do operador igual não sobrecarregado. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>Se a sobrecarga do operador não é suportado."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  id: DivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: DivideObject(Object,Object)
  nameWithType: Operators.DivideObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador de divisão (/) Visual Basic."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object DivideObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "O quociente completo de <code> Left </code> dividido pelo <code> Right </code>, incluindo quaisquer restante."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  id: ExponentObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ExponentObject(Object,Object)
  nameWithType: Operators.ExponentObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador do Visual Basic expoente (^)."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object ExponentObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "O resultado da <code> Left </code> elevado à potência de <code> Right </code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  id: FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: FallbackInvokeUserDefinedOperator(Object,Object[])
  nameWithType: Operators.FallbackInvokeUserDefinedOperator(Object,Object[])
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(Object,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Executa uma avaliação de vinculação tardia de um operador definido pelo utilizador. Este método de programa auxiliar não se destinar a ser chamado diretamente a partir do seu código."
  syntax:
    content: public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);
    parameters:
    - id: vbOp
      type: System.Object
      description: "O operador definido pelo utilizador."
    - id: Arguments
      type: System.Object[]
      description: "Valores de argumento para passar para o operador definido pelo utilizador."
    return:
      type: System.Object
      description: "O resultado devolvido de operador definido pelo utilizador."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  id: IntDivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: IntDivideObject(Object,Object)
  nameWithType: Operators.IntDivideObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa a divisão de número inteiro do Visual Basic (\\\\) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object IntDivideObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "O quociente de número inteiro de <code> Left </code> dividido pelo <code> Right </code>, que elimina quaisquer restante e mantém apenas a parte inteira."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  id: LeftShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: LeftShiftObject(Object,Object)
  nameWithType: Operators.LeftShiftObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa a Visual Basic deslocação esquerda aritmética (&lt;&lt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object LeftShiftObject (object Operand, object Amount);
    parameters:
    - id: Operand
      type: System.Object
      description: "Necessário. Expressão numérica integral. O padrão de bit a ser desviado. The data type must be an integral type (<xref uid=&quot;langword_csharp_SByte&quot; name=&quot;SByte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UShort&quot; name=&quot;UShort&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UInteger&quot; name=&quot;UInteger&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;></xref>)."
    - id: Amount
      type: System.Object
      description: "Necessário. Expressão numérica. O número de bits para deslocar o padrão de bit. O tipo de dados tem de ser <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> ou alargar a <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Um valor numérico integral. O resultado da mudarem o padrão de bit. O tipo de dados é igual do <code> Operand </code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  id: LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: LikeObject(Object,Object,CompareMethod)
  nameWithType: Operators.LikeObject(Object,Object,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(Object,Object,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_Like&quot; name=&quot;Like&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: Source
      type: System.Object
      description: "Necessário. Uma expressão."
    - id: Pattern
      type: System.Object
      description: "Necessário. Uma expressão de cadeia cumprindo as convenções de correspondência de padrões de mensagens em fila descritas no como operador."
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: "Necessário. A <xref href=&quot;Microsoft.VisualBasic.CompareMethod&quot;> </xref> valor que especifica que a operação utilizam a comparação de texto ou binário."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se a representação de cadeia do valor do <code> Source </code> satisfaça o padrão que esteja contido <code> Pattern </code>; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if both <code>Source</code> and <code>Pattern</code> are <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: LikeString(String,String,CompareMethod)
  nameWithType: Operators.LikeString(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LikeString(String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_Like&quot; name=&quot;Like&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: Source
      type: System.String
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão."
    - id: Pattern
      type: System.String
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> expressão cumprindo as convenções de correspondência de padrões de mensagens em fila descritas no como operador."
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: "Necessário. A <xref href=&quot;Microsoft.VisualBasic.CompareMethod&quot;> </xref> valor que especifica que a operação utilizam a comparação de texto ou binário."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o valor no <code> Source </code> satisfaça o padrão que esteja contido <code> Pattern </code>; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>if both <code>Source</code> and <code>Pattern</code> are empty."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.LikeString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  id: ModObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: ModObject(Object,Object)
  nameWithType: Operators.ModObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_Mod&quot; name=&quot;Mod&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object ModObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "O resto após <code> Left </code> ser dividido por <code> Right </code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.ModObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  id: MultiplyObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: MultiplyObject(Object,Object)
  nameWithType: Operators.MultiplyObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic multiplicar operador (*)."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object MultiplyObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "The product of <code>Left</code> and <code>Right</code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  id: NegateObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: NegateObject(Object)
  nameWithType: Operators.NegateObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o unário Visual Basic menos operador (-)."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object NegateObject (object Operand);
    parameters:
    - id: Operand
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "O valor negativo de <code> Operand </code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  id: NotObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: NotObject(Object)
  nameWithType: Operators.NotObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_Not&quot; name=&quot;Not&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object NotObject (object Operand);
    parameters:
    - id: Operand
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    return:
      type: System.Object
      description: "For <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> operations, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref> if <code>Operand</code> is <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. Para operações de bit a bit, 1 se <code> Operand </code> é 0; caso contrário, 0."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.NotObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  id: OrObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: OrObject(Object,Object)
  nameWithType: Operators.OrObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_Or&quot; name=&quot;Or&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object OrObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    return:
      type: System.Object
      description: "For <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> operations, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref> if both <code>Left</code> and <code>Right</code> evaluate to <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>. Para operações de bit a bit, 0 se ambos os <code> Left </code> e <code> Right </code> avaliar como 0; caso contrário, 1."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.OrObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  id: PlusObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: PlusObject(Object)
  nameWithType: Operators.PlusObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador unário mais (+) de Visual Basic."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object PlusObject (object Operand);
    parameters:
    - id: Operand
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "The value of <code>Operand</code>. (O sinal do <code> Operand </code> é inalterada.)"
  overload: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  id: RightShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: RightShiftObject(Object,Object)
  nameWithType: Operators.RightShiftObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa a Visual Basic deslocação direita aritmética (&gt;&gt;) operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object RightShiftObject (object Operand, object Amount);
    parameters:
    - id: Operand
      type: System.Object
      description: "Necessário. Expressão numérica integral. O padrão de bit a ser desviado. The data type must be an integral type (<xref uid=&quot;langword_csharp_SByte&quot; name=&quot;SByte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Short&quot; name=&quot;Short&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UShort&quot; name=&quot;UShort&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_UInteger&quot; name=&quot;UInteger&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;></xref>)."
    - id: Amount
      type: System.Object
      description: "Necessário. Expressão numérica. O número de bits para deslocar o padrão de bit. O tipo de dados tem de ser <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> ou alargar a <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Um valor numérico integral. O resultado da mudarem o padrão de bit. O tipo de dados é igual do <code> Operand </code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  id: SubtractObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: SubtractObject(Object,Object)
  nameWithType: Operators.SubtractObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o operador de subtração (-) Visual Basic."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object SubtractObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Uma expressão numérica."
    return:
      type: System.Object
      description: "The difference between <code>Left</code> and <code>Right</code>."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  id: XorObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  langs:
  - csharp
  name: XorObject(Object,Object)
  nameWithType: Operators.XorObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "Representa o Visual Basic <xref uid=&quot;langword_csharp_Xor&quot; name=&quot;Xor&quot; href=&quot;&quot;> </xref> operador."
  remarks: "Esta classe suporta o compilador do Visual Basic e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: public static object XorObject (object Left, object Right);
    parameters:
    - id: Left
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    - id: Right
      type: System.Object
      description: "Necessário. Qualquer <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou expressão numérica."
    return:
      type: System.Object
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> ou valor numérico. Para um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> comparação, o valor de retorno é a exclusão lógica (disjunção lógica exclusiva) de dois <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> valores. Para operações de (numéricas) bit a bit, o valor de retorno é um valor numérico que representa a exclusão bit a bit (disjunção bit a bit exclusiva) dos dois padrões de bits de um valor numérico. Para obter mais informações, consulte [Xor operador](~/add/includes/ajax-current-ext-md.md)."
  overload: Microsoft.VisualBasic.CompilerServices.Operators.XorObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AddObject(Object,Object)
  nameWithType: Operators.AddObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.AddObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AndObject(Object,Object)
  nameWithType: Operators.AndObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.AndObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObject(Object,Object,Boolean)
  nameWithType: Operators.CompareObject(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(Object,Object,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreater(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectGreater(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreaterEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectGreaterEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLess(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectLess(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLessEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectLessEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectNotEqual(Object,Object,Boolean)
  nameWithType: Operators.CompareObjectNotEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareString(String,String,Boolean)
  nameWithType: Operators.CompareString(String,String,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.CompareString(String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConcatenateObject(Object,Object)
  nameWithType: Operators.ConcatenateObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreater(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreater(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreaterEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLess(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectLess(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLessEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectLessEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectNotEqual(Object,Object,Boolean)
  nameWithType: Operators.ConditionalCompareObjectNotEqual(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(Object,Object,Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: DivideObject(Object,Object)
  nameWithType: Operators.DivideObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ExponentObject(Object,Object)
  nameWithType: Operators.ExponentObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: FallbackInvokeUserDefinedOperator(Object,Object[])
  nameWithType: Operators.FallbackInvokeUserDefinedOperator(Object,Object[])
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(Object,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: IntDivideObject(Object,Object)
  nameWithType: Operators.IntDivideObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LeftShiftObject(Object,Object)
  nameWithType: Operators.LeftShiftObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeObject(Object,Object,CompareMethod)
  nameWithType: Operators.LikeObject(Object,Object,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(Object,Object,CompareMethod)
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeString(String,String,CompareMethod)
  nameWithType: Operators.LikeString(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.LikeString(String,String,CompareMethod)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ModObject(Object,Object)
  nameWithType: Operators.ModObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.ModObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: MultiplyObject(Object,Object)
  nameWithType: Operators.MultiplyObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NegateObject(Object)
  nameWithType: Operators.NegateObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NotObject(Object)
  nameWithType: Operators.NotObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.NotObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: OrObject(Object,Object)
  nameWithType: Operators.OrObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.OrObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: PlusObject(Object)
  nameWithType: Operators.PlusObject(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: RightShiftObject(Object,Object)
  nameWithType: Operators.RightShiftObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: SubtractObject(Object,Object)
  nameWithType: Operators.SubtractObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: XorObject(Object,Object)
  nameWithType: Operators.XorObject(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.Operators.XorObject(Object,Object)
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AddObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AddObject
  nameWithType: Operators.AddObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.AndObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: AndObject
  nameWithType: Operators.AndObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObject
  nameWithType: Operators.CompareObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectEqual
  nameWithType: Operators.CompareObjectEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreater
  nameWithType: Operators.CompareObjectGreater
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectGreaterEqual
  nameWithType: Operators.CompareObjectGreaterEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLess
  nameWithType: Operators.CompareObjectLess
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectLessEqual
  nameWithType: Operators.CompareObjectLessEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareObjectNotEqual
  nameWithType: Operators.CompareObjectNotEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.CompareString*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: CompareString
  nameWithType: Operators.CompareString
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConcatenateObject
  nameWithType: Operators.ConcatenateObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectEqual
  nameWithType: Operators.ConditionalCompareObjectEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreater
  nameWithType: Operators.ConditionalCompareObjectGreater
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectGreaterEqual
  nameWithType: Operators.ConditionalCompareObjectGreaterEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLess
  nameWithType: Operators.ConditionalCompareObjectLess
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectLessEqual
  nameWithType: Operators.ConditionalCompareObjectLessEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ConditionalCompareObjectNotEqual
  nameWithType: Operators.ConditionalCompareObjectNotEqual
- uid: Microsoft.VisualBasic.CompilerServices.Operators.DivideObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: DivideObject
  nameWithType: Operators.DivideObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ExponentObject
  nameWithType: Operators.ExponentObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: FallbackInvokeUserDefinedOperator
  nameWithType: Operators.FallbackInvokeUserDefinedOperator
- uid: Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: IntDivideObject
  nameWithType: Operators.IntDivideObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LeftShiftObject
  nameWithType: Operators.LeftShiftObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeObject
  nameWithType: Operators.LikeObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.LikeString*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: LikeString
  nameWithType: Operators.LikeString
- uid: Microsoft.VisualBasic.CompilerServices.Operators.ModObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: ModObject
  nameWithType: Operators.ModObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: MultiplyObject
  nameWithType: Operators.MultiplyObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NegateObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NegateObject
  nameWithType: Operators.NegateObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.NotObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: NotObject
  nameWithType: Operators.NotObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.OrObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: OrObject
  nameWithType: Operators.OrObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.PlusObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: PlusObject
  nameWithType: Operators.PlusObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: RightShiftObject
  nameWithType: Operators.RightShiftObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: SubtractObject
  nameWithType: Operators.SubtractObject
- uid: Microsoft.VisualBasic.CompilerServices.Operators.XorObject*
  parent: Microsoft.VisualBasic.CompilerServices.Operators
  isExternal: false
  name: XorObject
  nameWithType: Operators.XorObject
