### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableCollection
  id: DataTableCollection
  children:
  - System.Data.DataTableCollection.Add
  - System.Data.DataTableCollection.Add(System.Data.DataTable)
  - System.Data.DataTableCollection.Add(System.String)
  - System.Data.DataTableCollection.Add(System.String,System.String)
  - System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  - System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  - System.Data.DataTableCollection.Clear
  - System.Data.DataTableCollection.CollectionChanged
  - System.Data.DataTableCollection.CollectionChanging
  - System.Data.DataTableCollection.Contains(System.String)
  - System.Data.DataTableCollection.Contains(System.String,System.String)
  - System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  - System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  - System.Data.DataTableCollection.IndexOf(System.String)
  - System.Data.DataTableCollection.IndexOf(System.String,System.String)
  - System.Data.DataTableCollection.Item(System.Int32)
  - System.Data.DataTableCollection.Item(System.String)
  - System.Data.DataTableCollection.Item(System.String,System.String)
  - System.Data.DataTableCollection.List
  - System.Data.DataTableCollection.Remove(System.Data.DataTable)
  - System.Data.DataTableCollection.Remove(System.String)
  - System.Data.DataTableCollection.Remove(System.String,System.String)
  - System.Data.DataTableCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataTableCollection
  nameWithType: DataTableCollection
  fullName: System.Data.DataTableCollection
  type: Class
  summary: "Represents the collection of tables for the <xref href=&quot;System.Data.DataSet&quot;></xref>."
  remarks: "The DataTableCollection contains all the <xref:System.Data.DataTable> objects for a particular <xref:System.Data.DataSet>. To access the DataTableCollection of a <xref:System.Data.DataSet>, use the <xref:System.Data.DataSet.Tables%2A> property.       The DataTableCollection uses methods such as <xref:System.Data.DataTableCollection.Add%2A>, <xref:System.Data.DataTableCollection.Clear%2A>, and <xref:System.Data.DataTableCollection.Remove%2A> to manage the items in the collection.       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a particular table (specified by either index or name) is in the collection.       To navigate from one table to another, use the <xref:System.Data.DataTable.ChildRelations%2A> or <xref:System.Data.DataTable.ParentRelations%2A> property of the <xref:System.Data.DataTable> to access its collection of <xref:System.Data.DataRelation> objects. You can also use the <xref:System.Data.DataSet.Relations%2A> property to navigate through the parent/child relationships of the `DataTables` in a particular <xref:System.Data.DataSet> collection."
  example:
  - "The first procedure in this example retrieves the DataTableCollection of a <xref:System.Data.DataSet> and prints the value of each column, in each row, of each table. The second procedure creates a new <xref:System.Data.DataTable> with two columns, and adds it to the DataTableCollection.  \n  \n [!code-cs[Classic WebData DataTableCollection Example#1](~/add/codesnippet/csharp/t-system.data.datatablec_1.cs)]\n [!code-vb[Classic WebData DataTableCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datatablec_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ListBindable(false)]

      public sealed class DataTableCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add
  id: Add
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Creates a new <xref href=&quot;System.Data.DataTable&quot;></xref> object by using a default name and adds it to the collection."
  remarks: "Because no name is specified, the `DataTable` is created by using a default name, relative to its order of addition. The default name is &quot;Table1.&quot;       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection."
  example:
  - "The following example adds three new <xref:System.Data.DataTable> objects to the <xref:System.Data.DataTableCollection> using the <xref:System.Data.DataTableCollection.Add%2A> method without arguments.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_8_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_8_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "The newly created <xref href=&quot;System.Data.DataTable&quot;></xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  id: Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds the specified <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> to the collection."
  remarks: "The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully added to the collection."
  example:
  - "The following example creates a <xref:System.Data.DataTable> and adds it to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_4_1.cs)]"
  syntax:
    content: public void Add (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "The <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> object to add."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value specified for the table is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The table already belongs to this collection, or belongs to another collection."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A table in the collection has the same name. The comparison is not case sensitive."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Creates a <xref href=&quot;System.Data.DataTable&quot;></xref> object by using the specified name and adds it to the collection."
  remarks: "If either `null` or an empty string (&quot;&quot;) is passed in, a default name is given to the newly created `DataTable`. This name is based on the order in which the table was added (&quot;Table1&quot;, &quot;Table2&quot;, and so on).       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection."
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_9_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_9_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name to give the created <xref href=&quot;System.Data.DataTable&quot;></xref>."
    return:
      type: System.Data.DataTable
      description: "The newly created <xref href=&quot;System.Data.DataTable&quot;></xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A table in the collection has the same name. (The comparison is not case sensitive.)"
  platform:
  - net462
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Creates a <xref href=&quot;System.Data.DataTable&quot;></xref> object by using the specified name and adds it to the collection."
  remarks: "If either `null` or an empty string (&quot;&quot;) is passed in, a default name is given to the newly created `DataTable`. This name is based on the order in which the table was added (&quot;Table1&quot;, &quot;Table2&quot;, and so on).       The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs if the table is successfully added to the collection."
  example:
  - "The following example adds a <xref:System.Data.DataTable> with the given name to the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable Add (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "The name to give the created <xref href=&quot;System.Data.DataTable&quot;></xref>."
    - id: tableNamespace
      type: System.String
      description: "The namespace to give the created <xref href=&quot;System.Data.DataTable&quot;></xref>."
    return:
      type: System.Data.DataTable
      description: "The newly created <xref href=&quot;System.Data.DataTable&quot;></xref>."
  overload: System.Data.DataTableCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A table in the collection has the same name. (The comparison is not case sensitive.)"
  platform:
  - net462
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  id: AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copies the elements of the specified <xref href=&quot;System.Data.DataTable&quot;></xref> array to the end of the collection."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Data.DataTable> objects and adds them to the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_2_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_2_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.DataTable[] tables);
    parameters:
    - id: tables
      type: System.Data.DataTable[]
      description: "The array of <xref href=&quot;System.Data.DataTable&quot;></xref> objects to add to the collection."
  overload: System.Data.DataTableCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  id: CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verifies whether the specified <xref href=&quot;System.Data.DataTable&quot;></xref> object can be removed from the collection."
  remarks: ''
  example:
  - "The following example uses the CanRemove to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_5_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_5_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "The <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> in the collection to perform the check against."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the table can be removed; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataTableCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Clear
  id: Clear
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Clears the collection of all <xref href=&quot;System.Data.DataTable&quot;></xref> objects."
  remarks: "To remove a particular `DataTable` from the collection, use the <xref:System.Data.DataTableCollection.Remove%2A> method."
  example:
  - "The following example gets the <xref:System.Data.DataTableCollection> of a <xref:System.Data.DataSet>, and then clears the collection of all tables.  \n  \n [!code-cs[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_10_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_10_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataTableCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Occurs after the <xref href=&quot;System.Data.DataTableCollection&quot;></xref> is changed because of <xref href=&quot;System.Data.DataTable&quot;></xref> objects being added or removed."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_0_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_0_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CollectionChanging
  id: CollectionChanging
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Occurs while the <xref href=&quot;System.Data.DataTableCollection&quot;></xref> is changing because of <xref href=&quot;System.Data.DataTable&quot;></xref> objects being added or removed."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanging event.  \n  \n [!code-cs[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/csharp/e-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.CollectionChanging Example#1](~/add/codesnippet/visualbasic/e-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanging;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets a value that indicates whether a <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name exists in the collection."
  remarks: "You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property. If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (&quot;Table1&quot;, &quot;Table2&quot;, and so on).       To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method.      > [!NOTE] >  Returns `false` when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table."
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_14_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_14_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> to find."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified table exists; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets a value that indicates whether a <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name and table namespace exists in the collection."
  remarks: "You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property. If you add a <xref:System.Data.DataTable> to the collection with the <xref:System.Data.DataTableCollection.Add%2A> method, passing no arguments, the table is given a default name, based on the order in which the table was added (&quot;Table1&quot;, &quot;Table2&quot;, and so on).      > [!NOTE] >  Returns `false` when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.       To get the index of a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method."
  example:
  - "The following example tests whether a table with the name \"Suppliers\" exists in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_6_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_6_1.vb)]"
  syntax:
    content: public bool Contains (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> to find."
    - id: tableNamespace
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> namespace to look in."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified table exists; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataTableCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  id: CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copies all the elements of the current <xref href=&quot;System.Data.DataTableCollection&quot;></xref> to a one-dimensional <xref:System.Array>, starting at the specified destination array index."
  remarks: "This method can be overridden by a derived class."
  syntax:
    content: public void CopyTo (System.Data.DataTable[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataTable[]
      description: "The one-dimensional <xref:System.Array> to copy the current <xref href=&quot;System.Data.DataTableCollection&quot;></xref> object&quot;s elements into."
    - id: index
      type: System.Int32
      description: "The destination <xref:System.Array> index to start copying into."
  overload: System.Data.DataTableCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  id: IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the index of the specified <xref href=&quot;System.Data.DataTable&quot;></xref> object."
  remarks: "Use the IndexOf method to determine the exact index of a given table.       Before calling IndexOf, you can test for the existence of a table (specified by either index or name) by using the <xref:System.Data.DataTableCollection.Contains%2A> method."
  example:
  - "The following example returns the index of each table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_3_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_3_1.vb)]"
  syntax:
    content: public int IndexOf (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "The <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> to search for."
    return:
      type: System.Int32
      description: "The zero-based index of the table, or -1 if the table is not found in the collection."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the index in the collection of the <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name."
  remarks: "You specify the name of the `DataTable` object by using the <xref:System.Data.DataTable.TableName%2A> property."
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_12_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_12_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "The name of the <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> object to look for."
    return:
      type: System.Int32
      description: "The zero-based index of the <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> with the specified name, or -1 if the table does not exist in the collection.       <div class=&quot;alert NOTE&quot;>    Returns -1 when two or more tables have the same name but different namespaces. The call does not succeed if there is any ambiguity when matching a table name to exactly one table.      </div>"
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the index in the collection of the specified <xref href=&quot;System.Data.DataTable&quot;></xref> object."
  remarks: "You specify the name of the <xref:System.Data.DataTable> object by using the <xref:System.Data.DataTable.TableName%2A> property."
  example:
  - "The following example returns the index of a named table in the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_11_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_11_1.vb)]"
  syntax:
    content: public int IndexOf (string tableName, string tableNamespace);
    parameters:
    - id: tableName
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> object to look for."
    - id: tableNamespace
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> namespace to look in."
    return:
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Data.DataTable&quot;></xref> with the specified name, or -1 if the table does not exist in the collection."
  overload: System.Data.DataTableCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the <xref href=&quot;System.Data.DataTable&quot;></xref> object at the specified index."
  remarks: "Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific index exists.       If you have the name of a table, but not its index, use the <xref:System.Data.DataTableCollection.IndexOf%2A> method to return the index."
  example:
  - "The following example retrieves a <xref:System.Data.DataTable> by its index.  \n  \n [!code-cs[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_1_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_1_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Data.DataTable&quot;></xref> to find."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref>with the specified index; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.DataTable&quot;></xref> does not exist."
  overload: System.Data.DataTableCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "The index value is greater than the number of items in the collection."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name."
  remarks: "If a <xref:System.Data.DataTable> name exists that matches the case of the search string, it is returned. Otherwise a case-insensitive search is performed, and if a <xref:System.Data.DataTable> name is found that matches this search, it is returned.       Use the <xref:System.Data.DataTableCollection.Contains%2A> method to determine whether a table with a specific name or index exists."
  example:
  - "The following example retrieves a single table by name from the <xref:System.Data.DataTableCollection>.  \n  \n [!code-cs[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public System.Data.DataTable this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> to find."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> with the specified name; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.DataTable&quot;></xref> does not exist."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Gets the <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name in the specified namespace."
  syntax:
    content: public System.Data.DataTable this[string name, string tableNamespace] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> to find."
    - id: tableNamespace
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> namespace to look in."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> with the specified name; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.DataTable&quot;></xref> does not exist."
  overload: System.Data.DataTableCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.List
  id: List
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "To be added."
  overload: System.Data.DataTableCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  id: Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Removes the specified <xref href=&quot;System.Data.DataTable&quot;></xref> object from the collection."
  remarks: "The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking Remove, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods."
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.CanRemove%2A> method to test whether each table can be removed from a <xref:System.Data.DataSet>. If so, the Remove method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_0_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_0_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "The <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> to remove."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value specified for the table is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The table does not belong to this collection.       -or-       The table is part of a relationship."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Removes the <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name from the collection."
  remarks: "The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods."
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_7_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_7_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> object to remove."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The collection does not have a table with the specified name."
  platform:
  - net462
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Removes the <xref href=&quot;System.Data.DataTable&quot;></xref> object with the specified name from the collection."
  remarks: "The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed.       To determine whether a given table exists and can be removed before invoking <xref:System.Data.DataTableCollection.Remove%2A>, use the <xref:System.Data.DataTableCollection.Contains%2A> and the <xref:System.Data.DataTableCollection.CanRemove%2A> methods."
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a named table exists and can be removed. If so, the <xref:System.Data.DataTableCollection.Remove%2A> method is called to remove the table.  \n  \n [!code-cs[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datatablec_13_1.cs)]\n [!code-vb[Classic WebData DataTableCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_13_1.vb)]"
  syntax:
    content: public void Remove (string name, string tableNamespace);
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> object to remove."
    - id: tableNamespace
      type: System.String
      description: "The name of the <xref href=&quot;System.Data.DataTable&quot;></xref> namespace to look in."
  overload: System.Data.DataTableCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The collection does not have a table with the specified name."
  platform:
  - net462
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Removes the <xref href=&quot;System.Data.DataTable&quot;></xref> object at the specified index from the collection."
  remarks: "The <xref:System.Data.DataTableCollection.CollectionChanged> event occurs when a table is successfully removed."
  example:
  - "The following example uses the <xref:System.Data.DataTableCollection.Contains%2A> and <xref:System.Data.DataTableCollection.CanRemove%2A> methods to test whether a table exists with the index 10. If so, the RemoveAt method is called to remove the table.  \n  \n [!code-vb[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/visualbasic/m-system.data.datatablec_15_1.vb)]\n [!code-cs[Classic WebData DataTableCollection.RemoveAt#1](~/add/codesnippet/csharp/m-system.data.datatablec_15_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;></xref> to remove."
  overload: System.Data.DataTableCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The collection does not have a table at the specified index."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableCollection.Add
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add()
  nameWithType: DataTableCollection.Add()
  fullName: System.Data.DataTableCollection.Add()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableCollection.Add(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(DataTable)
  nameWithType: DataTableCollection.Add(DataTable)
  fullName: System.Data.DataTableCollection.Add(DataTable)
- uid: System.Data.DataTableCollection.Add(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataTableCollection.Add(String)
  fullName: System.Data.DataTableCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableCollection.Add(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: DataTableCollection.Add(String,String)
  fullName: System.Data.DataTableCollection.Add(String,String)
- uid: System.Data.DataTableCollection.AddRange(System.Data.DataTable[])
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange(DataTable[])
  nameWithType: DataTableCollection.AddRange(DataTable[])
  fullName: System.Data.DataTableCollection.AddRange(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableCollection.CanRemove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove(DataTable)
  nameWithType: DataTableCollection.CanRemove(DataTable)
  fullName: System.Data.DataTableCollection.CanRemove(DataTable)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableCollection.Clear
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear()
  nameWithType: DataTableCollection.Clear()
  fullName: System.Data.DataTableCollection.Clear()
- uid: System.Data.DataTableCollection.CollectionChanged
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataTableCollection.CollectionChanged
  fullName: System.Data.DataTableCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataTableCollection.CollectionChanging
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CollectionChanging
  nameWithType: DataTableCollection.CollectionChanging
  fullName: System.Data.DataTableCollection.CollectionChanging
- uid: System.Data.DataTableCollection.Contains(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataTableCollection.Contains(String)
  fullName: System.Data.DataTableCollection.Contains(String)
- uid: System.Data.DataTableCollection.Contains(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains(String,String)
  nameWithType: DataTableCollection.Contains(String,String)
  fullName: System.Data.DataTableCollection.Contains(String,String)
- uid: System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo(DataTable[],Int32)
  nameWithType: DataTableCollection.CopyTo(DataTable[],Int32)
  fullName: System.Data.DataTableCollection.CopyTo(DataTable[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableCollection.IndexOf(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(DataTable)
  nameWithType: DataTableCollection.IndexOf(DataTable)
  fullName: System.Data.DataTableCollection.IndexOf(DataTable)
- uid: System.Data.DataTableCollection.IndexOf(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataTableCollection.IndexOf(String)
  fullName: System.Data.DataTableCollection.IndexOf(String)
- uid: System.Data.DataTableCollection.IndexOf(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf(String,String)
  nameWithType: DataTableCollection.IndexOf(String,String)
  fullName: System.Data.DataTableCollection.IndexOf(String,String)
- uid: System.Data.DataTableCollection.Item(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableCollection.Item(Int32)
  fullName: System.Data.DataTableCollection.Item(Int32)
- uid: System.Data.DataTableCollection.Item(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataTableCollection.Item(String)
  fullName: System.Data.DataTableCollection.Item(String)
- uid: System.Data.DataTableCollection.Item(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: DataTableCollection.Item(String,String)
  fullName: System.Data.DataTableCollection.Item(String,String)
- uid: System.Data.DataTableCollection.List
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
  fullName: System.Data.DataTableCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataTableCollection.Remove(System.Data.DataTable)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(DataTable)
  nameWithType: DataTableCollection.Remove(DataTable)
  fullName: System.Data.DataTableCollection.Remove(DataTable)
- uid: System.Data.DataTableCollection.Remove(System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataTableCollection.Remove(String)
  fullName: System.Data.DataTableCollection.Remove(String)
- uid: System.Data.DataTableCollection.Remove(System.String,System.String)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: DataTableCollection.Remove(String,String)
  fullName: System.Data.DataTableCollection.Remove(String,String)
- uid: System.Data.DataTableCollection.RemoveAt(System.Int32)
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataTableCollection.RemoveAt(Int32)
  fullName: System.Data.DataTableCollection.RemoveAt(Int32)
- uid: System.Data.DataTableCollection.Add*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Add
  nameWithType: DataTableCollection.Add
- uid: System.Data.DataTableCollection.AddRange*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: AddRange
  nameWithType: DataTableCollection.AddRange
- uid: System.Data.DataTableCollection.CanRemove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataTableCollection.CanRemove
- uid: System.Data.DataTableCollection.Clear*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Clear
  nameWithType: DataTableCollection.Clear
- uid: System.Data.DataTableCollection.Contains*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Contains
  nameWithType: DataTableCollection.Contains
- uid: System.Data.DataTableCollection.CopyTo*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataTableCollection.CopyTo
- uid: System.Data.DataTableCollection.IndexOf*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataTableCollection.IndexOf
- uid: System.Data.DataTableCollection.Item*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Item
  nameWithType: DataTableCollection.Item
- uid: System.Data.DataTableCollection.List*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: List
  nameWithType: DataTableCollection.List
- uid: System.Data.DataTableCollection.Remove*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: Remove
  nameWithType: DataTableCollection.Remove
- uid: System.Data.DataTableCollection.RemoveAt*
  parent: System.Data.DataTableCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataTableCollection.RemoveAt
