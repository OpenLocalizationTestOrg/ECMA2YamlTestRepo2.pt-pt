### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  id: BackupEndpointCollection
  children:
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name
  - System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  langs:
  - csharp
  name: BackupEndpointCollection
  nameWithType: BackupEndpointCollection
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  type: Class
  summary: "Represents a configuration element that contains a collection of <xref href=&quot;System.ServiceModel.Routing.Configuration.BackupEndpointElement&quot;></xref> objects."
  remarks: "The BackupEndpointCollection contains an ordered collection of endpoints that a message will be transmitted to in the event of a communications exception when sending to the primary endpoint.       If a send to the primary endpoint contained in <xref:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName%2A> fails with a communications exception, the Routing Service will attempt to send the message to the first endpoint contained in the **BackupEndpointCollection**. If this also fails with a communications exception, the Routing Service will attempt to send the message to the next endpoint contained in the collection until the send attempt succeeds, returns a failure other than a communication exception, or all endpoints in the collection have returned a failure.       In the following example, if a send to the primary endpoint named “Destination” returns a communication exception, the service will attempt to send the message to the “alternateServiceQueue”. If this attempt also returns a communication exception, the Routing Service will attempt to send the message to the next endpoint in the collection.      ```xml   <filterTables>        <filterTable name=&quot;filterTable1&quot;>             <add filterName=&quot;MatchAllFilter1&quot; endpointName=&quot;Destination&quot; backupList=&quot;backupEndpointList&quot;/>        </filterTable>   </filterTables>   <backupLists>        <backupList name=&quot;backupEndpointList&quot;>             <add endpointName=&quot;backupServiceQueue&quot; />             <add endpointName=&quot;alternateServiceQueue&quot; />        </backupList>   </backupLists>      ```"
  syntax:
    content: >-
      [System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Routing.Configuration.BackupEndpointElement))]

      public class BackupEndpointCollection : System.Configuration.ConfigurationElementCollection
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationElementCollection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CollectionType
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.ElementName
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: BackupEndpointCollection()
  nameWithType: BackupEndpointCollection.BackupEndpointCollection()
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BackupEndpointCollection()
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Creates a new instance of the <xref href=&quot;System.ServiceModel.Routing.Configuration.BackupEndpointCollection&quot;></xref> class."
  syntax:
    content: public BackupEndpointCollection ();
    parameters: []
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  id: Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: Add(BackupEndpointElement)
  nameWithType: BackupEndpointCollection.Add(BackupEndpointElement)
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(BackupEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Adds a new <xref href=&quot;System.ServiceModel.Routing.Configuration.BackupEndpointElement&quot;></xref> to the collection."
  syntax:
    content: public void Add (System.ServiceModel.Routing.Configuration.BackupEndpointElement element);
    parameters:
    - id: element
      type: System.ServiceModel.Routing.Configuration.BackupEndpointElement
      description: "The backup endpoint element to be added."
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear
  id: Clear
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: BackupEndpointCollection.Clear()
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear()
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Removes all elements from the collection."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement
  id: CreateNewElement
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: CreateNewElement()
  nameWithType: BackupEndpointCollection.CreateNewElement()
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement()
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Creates a new <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref>."
  syntax:
    content: protected override System.Configuration.ConfigurationElement CreateNewElement ();
    parameters: []
    return:
      type: System.Configuration.ConfigurationElement
      description: "A new configuration element."
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: BackupEndpointCollection.GetElementKey(ConfigurationElement)
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Gets the element key for the specified configuration element."
  syntax:
    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "The configuration element to return the key for."
    return:
      type: System.Object
      description: "The key for the specified configuration element."
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name
  id: Name
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: Name
  nameWithType: BackupEndpointCollection.Name
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Gets or sets the name used to identify this collection of elements in the configuration file."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the collection."
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  id: Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  langs:
  - csharp
  name: Remove(BackupEndpointElement)
  nameWithType: BackupEndpointCollection.Remove(BackupEndpointElement)
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(BackupEndpointElement)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: "Removes the first occurrence of <xref href=&quot;System.ServiceModel.Routing.Configuration.BackupEndpointElement&quot;></xref> from the collection."
  syntax:
    content: public void Remove (System.ServiceModel.Routing.Configuration.BackupEndpointElement element);
    parameters:
    - id: element
      type: System.ServiceModel.Routing.Configuration.BackupEndpointElement
      description: "The backup element to remove from the collection."
  overload: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElementCollection
  isExternal: false
  name: System.Configuration.ConfigurationElementCollection
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: BackupEndpointCollection()
  nameWithType: BackupEndpointCollection.BackupEndpointCollection()
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BackupEndpointCollection()
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Add(BackupEndpointElement)
  nameWithType: BackupEndpointCollection.Add(BackupEndpointElement)
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(BackupEndpointElement)
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointElement
  parent: System.ServiceModel.Routing.Configuration
  isExternal: false
  name: BackupEndpointElement
  nameWithType: BackupEndpointElement
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointElement
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Clear()
  nameWithType: BackupEndpointCollection.Clear()
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear()
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: CreateNewElement()
  nameWithType: BackupEndpointCollection.CreateNewElement()
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement()
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: BackupEndpointCollection.GetElementKey(ConfigurationElement)
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(ConfigurationElement)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Name
  nameWithType: BackupEndpointCollection.Name
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Remove(BackupEndpointElement)
  nameWithType: BackupEndpointCollection.Remove(BackupEndpointElement)
  fullName: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(BackupEndpointElement)
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: BackupEndpointCollection
  nameWithType: BackupEndpointCollection.BackupEndpointCollection
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Add
  nameWithType: BackupEndpointCollection.Add
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Clear
  nameWithType: BackupEndpointCollection.Clear
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: CreateNewElement
  nameWithType: BackupEndpointCollection.CreateNewElement
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: GetElementKey
  nameWithType: BackupEndpointCollection.GetElementKey
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Name
  nameWithType: BackupEndpointCollection.Name
- uid: System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove*
  parent: System.ServiceModel.Routing.Configuration.BackupEndpointCollection
  isExternal: false
  name: Remove
  nameWithType: BackupEndpointCollection.Remove
