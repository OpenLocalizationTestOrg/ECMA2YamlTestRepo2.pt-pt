### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.Configuration.RootedPathValidator
  id: RootedPathValidator
  children:
  - System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  - System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  - System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  langs:
  - csharp
  name: RootedPathValidator
  nameWithType: RootedPathValidator
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator
  type: Class
  summary: "Valida as regras que rege a utilização do `tempFilesLocation` parâmetro de configuração."
  remarks: "Ao adicionar um `WebReference` objeto para um serviço Web no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], os ficheiros são criados pelo processo de deteção do serviço Web.       Os clientes de serviço Web saiba onde encontrar o documento de descrição (WSDL) do serviço Web adicionando um `WebReference` objeto. Os clientes de serviço Web, em seguida, guardar os documentos detetados o disco utilizando o `WriteAll` método. Por exemplo, os documentos detetados poderá descrições de serviço ou os ficheiros do esquema XSD. No final do processo, o cliente elimina os ficheiros. Pode alterar a localização predefinida dos ficheiros na pasta temporária utilizando o `tempFilesLocation` mudar o `<xmlSerializer>` elemento, especificado no ficheiro de configuração de Machine. config, como no exemplo seguinte.      ```   <configuration>     <system.web>     <system.xml.serialization>       <xmlSerializer tempFilesLocation=&quot;..&quot;/>     </system.xml.serialization>   </configuration>   ```O valor de `tempFilesLocation` tem de ser um caminho absoluto. Se o caminho especificado não é absoluto, o [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] gera um <xref:System.Configuration.ConfigurationErrorsException>exceção quando a secção de configuração é referenciada.</xref:System.Configuration.ConfigurationErrorsException>       O valor da propriedade é truncado para remover espaços em branco à esquerda e.       Se o valor da `tempFilesLocation` propriedade é composta por espaços em branco, a localização predefinida % TMP % é utilizada para a compilação. O mesmo comportamento predefinido ocorre quando não existe nenhum `tempFilesLocation` comutador está especificado.       O <xref:System.Xml.Serialization.XmlSerializer>não verifica se o caminho existe.</xref:System.Xml.Serialization.XmlSerializer> Se não, um <xref:System.IO.DirectoryNotFoundException>é gerado.</xref:System.IO.DirectoryNotFoundException> Esta é idêntica ao comportamento predefinido da `XmlSerializer` se o caminho de % TMP % não existe."
  syntax:
    content: 'public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Serialization.Configuration.RootedPathValidator&quot;> </xref> classe."
  syntax:
    content: public RootedPathValidator ();
    parameters: []
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "Determina se o tipo de objecto possa ser validado."
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo do objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> type </code> corresponde a um parâmetro <xref uid=&quot;langword_csharp_XMLSerializer&quot; name=&quot;XMLSerializer&quot; href=&quot;&quot;> </xref> objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "Determina se o valor de um objeto é válido."
  remarks: "O `XmlSerializer` objeto validar é transmitido como um parâmetro do `Validate` método."
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor de um objeto."
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator
  nameWithType: RootedPathValidator.RootedPathValidator
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate
  nameWithType: RootedPathValidator.CanValidate
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate
  nameWithType: RootedPathValidator.Validate
