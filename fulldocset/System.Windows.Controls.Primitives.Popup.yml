### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.Primitives.Popup
  id: Popup
  children:
  - System.Windows.Controls.Primitives.Popup.#ctor
  - System.Windows.Controls.Primitives.Popup.AllowsTransparency
  - System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty
  - System.Windows.Controls.Primitives.Popup.Child
  - System.Windows.Controls.Primitives.Popup.ChildProperty
  - System.Windows.Controls.Primitives.Popup.Closed
  - System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)
  - System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback
  - System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty
  - System.Windows.Controls.Primitives.Popup.GetUIParentCore
  - System.Windows.Controls.Primitives.Popup.HasDropShadow
  - System.Windows.Controls.Primitives.Popup.HasDropShadowProperty
  - System.Windows.Controls.Primitives.Popup.HorizontalOffset
  - System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty
  - System.Windows.Controls.Primitives.Popup.IsOpen
  - System.Windows.Controls.Primitives.Popup.IsOpenProperty
  - System.Windows.Controls.Primitives.Popup.LogicalChildren
  - System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)
  - System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)
  - System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)
  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.Controls.Primitives.Popup.Opened
  - System.Windows.Controls.Primitives.Popup.Placement
  - System.Windows.Controls.Primitives.Popup.PlacementProperty
  - System.Windows.Controls.Primitives.Popup.PlacementRectangle
  - System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty
  - System.Windows.Controls.Primitives.Popup.PlacementTarget
  - System.Windows.Controls.Primitives.Popup.PlacementTargetProperty
  - System.Windows.Controls.Primitives.Popup.PopupAnimation
  - System.Windows.Controls.Primitives.Popup.PopupAnimationProperty
  - System.Windows.Controls.Primitives.Popup.StaysOpen
  - System.Windows.Controls.Primitives.Popup.StaysOpenProperty
  - System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Controls.Primitives.Popup.VerticalOffset
  - System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty
  langs:
  - csharp
  name: Popup
  nameWithType: Popup
  fullName: System.Windows.Controls.Primitives.Popup
  type: Class
  summary: "Represents a pop-up window that has content."
  remarks: "**Content Model**:  Popup has one content property: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>. A Popup can have a maximum of one child, which can be any <xref:System.Windows.UIElement>.       The following illustration shows a Popup control that has a <xref:System.Windows.Controls.Button> as its parent.       ![Popup illustration](~/add/media/popuppicture.JPG &quot;Popup illustration&quot;)       You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). When Popup is displayed on the screen, it does not reposition itself if its parent is repositioned.       A Popup displays its content in its own window on the screen. A Popup control supports animation when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` and the application is running with full trust. An application that is running with full trust has complete access to system resources and is typically installed on the user&quot;s system. For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md).       For bitmap and opacity effects to appear on the content of a Popup, you must set the effects directly on the Popup content. The content of a Popup does not inherit effects that are set on the Popup control or on any other element that is in the parent window.       A Popup is sized to its content by default. When this occurs, applying a <xref:System.Windows.UIElement.RenderTransform%2A> or bitmap effects may cause the Popup to be obscured. This occurs because the default size of the content does not provide enough area for the effects to display. If more space is required, you can define a margin around the Popup content to increase the area that is available to the control.       The <xref:System.Windows.FrameworkElement.Parent%2A> property must be set on the Popup when used in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)].       To create a tooltip, use the <xref:System.Windows.Controls.ToolTip> and <xref:System.Windows.Controls.ToolTipService> classes. For more information, see [ToolTip Overview](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a Popup control.  \n  \n [!code-xml[PopupSimple#2](~/add/codesnippet/xaml/PopupPropertiesSample/Window1.xaml#2)]  \n  \n [!code-cs[PopupSimple#CreatePopup](~/add/codesnippet/csharp/PopupPropertiesSample/Window1.xaml.cs#createpopup)]\n [!code-vb[PopupSimple#CreatePopup](~/add/codesnippet/visualbasic/PopupSample/Window1.xaml.vb#createpopup)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Opened")]

      [System.ComponentModel.DefaultProperty("Child")]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None)]

      [System.Windows.Markup.ContentProperty("Child")]

      public class Popup : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Media.Visual
  - System.Windows.UIElement
  - System.Windows.FrameworkElement
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.ActualHeight
  - System.Windows.FrameworkElement.ActualHeightProperty
  - System.Windows.FrameworkElement.ActualWidth
  - System.Windows.FrameworkElement.ActualWidthProperty
  - System.Windows.FrameworkElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkElement.ApplyTemplate
  - System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)
  - System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)
  - System.Windows.FrameworkElement.BeginInit
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkElement.BindingGroup
  - System.Windows.FrameworkElement.BindingGroupProperty
  - System.Windows.FrameworkElement.BringIntoView
  - System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)
  - System.Windows.FrameworkElement.ContextMenu
  - System.Windows.FrameworkElement.ContextMenuClosing
  - System.Windows.FrameworkElement.ContextMenuClosingEvent
  - System.Windows.FrameworkElement.ContextMenuOpening
  - System.Windows.FrameworkElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkElement.ContextMenuProperty
  - System.Windows.FrameworkElement.Cursor
  - System.Windows.FrameworkElement.CursorProperty
  - System.Windows.FrameworkElement.DataContext
  - System.Windows.FrameworkElement.DataContextChanged
  - System.Windows.FrameworkElement.DataContextProperty
  - System.Windows.FrameworkElement.DefaultStyleKey
  - System.Windows.FrameworkElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkElement.EndInit
  - System.Windows.FrameworkElement.FindName(System.String)
  - System.Windows.FrameworkElement.FindResource(System.Object)
  - System.Windows.FrameworkElement.FlowDirection
  - System.Windows.FrameworkElement.FlowDirectionProperty
  - System.Windows.FrameworkElement.FocusVisualStyle
  - System.Windows.FrameworkElement.FocusVisualStyleProperty
  - System.Windows.FrameworkElement.ForceCursor
  - System.Windows.FrameworkElement.ForceCursorProperty
  - System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)
  - System.Windows.FrameworkElement.GetTemplateChild(System.String)
  - System.Windows.FrameworkElement.GetVisualChild(System.Int32)
  - System.Windows.FrameworkElement.Height
  - System.Windows.FrameworkElement.HeightProperty
  - System.Windows.FrameworkElement.HorizontalAlignment
  - System.Windows.FrameworkElement.HorizontalAlignmentProperty
  - System.Windows.FrameworkElement.InheritanceBehavior
  - System.Windows.FrameworkElement.Initialized
  - System.Windows.FrameworkElement.InputScope
  - System.Windows.FrameworkElement.InputScopeProperty
  - System.Windows.FrameworkElement.IsInitialized
  - System.Windows.FrameworkElement.IsLoaded
  - System.Windows.FrameworkElement.Language
  - System.Windows.FrameworkElement.LanguageProperty
  - System.Windows.FrameworkElement.LayoutTransform
  - System.Windows.FrameworkElement.LayoutTransformProperty
  - System.Windows.FrameworkElement.Loaded
  - System.Windows.FrameworkElement.LoadedEvent
  - System.Windows.FrameworkElement.Margin
  - System.Windows.FrameworkElement.MarginProperty
  - System.Windows.FrameworkElement.MaxHeight
  - System.Windows.FrameworkElement.MaxHeightProperty
  - System.Windows.FrameworkElement.MaxWidth
  - System.Windows.FrameworkElement.MaxWidthProperty
  - System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)
  - System.Windows.FrameworkElement.MinHeight
  - System.Windows.FrameworkElement.MinHeightProperty
  - System.Windows.FrameworkElement.MinWidth
  - System.Windows.FrameworkElement.MinWidthProperty
  - System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkElement.Name
  - System.Windows.FrameworkElement.NameProperty
  - System.Windows.FrameworkElement.OnApplyTemplate
  - System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)
  - System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)
  - System.Windows.FrameworkElement.OverridesDefaultStyle
  - System.Windows.FrameworkElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkElement.Parent
  - System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)
  - System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkElement.RequestBringIntoView
  - System.Windows.FrameworkElement.RequestBringIntoViewEvent
  - System.Windows.FrameworkElement.Resources
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)
  - System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElement.ShouldSerializeResources
  - System.Windows.FrameworkElement.ShouldSerializeStyle
  - System.Windows.FrameworkElement.ShouldSerializeTriggers
  - System.Windows.FrameworkElement.SizeChanged
  - System.Windows.FrameworkElement.SizeChangedEvent
  - System.Windows.FrameworkElement.SourceUpdated
  - System.Windows.FrameworkElement.Style
  - System.Windows.FrameworkElement.StyleProperty
  - System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkElement.Tag
  - System.Windows.FrameworkElement.TagProperty
  - System.Windows.FrameworkElement.TargetUpdated
  - System.Windows.FrameworkElement.TemplatedParent
  - System.Windows.FrameworkElement.ToolTip
  - System.Windows.FrameworkElement.ToolTipClosing
  - System.Windows.FrameworkElement.ToolTipClosingEvent
  - System.Windows.FrameworkElement.ToolTipOpening
  - System.Windows.FrameworkElement.ToolTipOpeningEvent
  - System.Windows.FrameworkElement.ToolTipProperty
  - System.Windows.FrameworkElement.Triggers
  - System.Windows.FrameworkElement.TryFindResource(System.Object)
  - System.Windows.FrameworkElement.Unloaded
  - System.Windows.FrameworkElement.UnloadedEvent
  - System.Windows.FrameworkElement.UnregisterName(System.String)
  - System.Windows.FrameworkElement.UpdateDefaultStyle
  - System.Windows.FrameworkElement.UseLayoutRounding
  - System.Windows.FrameworkElement.UseLayoutRoundingProperty
  - System.Windows.FrameworkElement.VerticalAlignment
  - System.Windows.FrameworkElement.VerticalAlignmentProperty
  - System.Windows.FrameworkElement.VisualChildrenCount
  - System.Windows.FrameworkElement.Width
  - System.Windows.FrameworkElement.WidthProperty
  - System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)
  - System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)
  - System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)
  - System.Windows.Media.Visual.PointToScreen(System.Windows.Point)
  - System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)
  - System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)
  - System.Windows.Media.Visual.VisualBitmapEffect
  - System.Windows.Media.Visual.VisualBitmapEffectInput
  - System.Windows.Media.Visual.VisualBitmapScalingMode
  - System.Windows.Media.Visual.VisualCacheMode
  - System.Windows.Media.Visual.VisualClearTypeHint
  - System.Windows.Media.Visual.VisualClip
  - System.Windows.Media.Visual.VisualEdgeMode
  - System.Windows.Media.Visual.VisualEffect
  - System.Windows.Media.Visual.VisualOffset
  - System.Windows.Media.Visual.VisualOpacity
  - System.Windows.Media.Visual.VisualOpacityMask
  - System.Windows.Media.Visual.VisualParent
  - System.Windows.Media.Visual.VisualScrollableAreaClip
  - System.Windows.Media.Visual.VisualTextHintingMode
  - System.Windows.Media.Visual.VisualTextRenderingMode
  - System.Windows.Media.Visual.VisualTransform
  - System.Windows.Media.Visual.VisualXSnappingGuidelines
  - System.Windows.Media.Visual.VisualYSnappingGuidelines
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.AllowDrop
  - System.Windows.UIElement.AllowDropProperty
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.AreAnyTouchesCaptured
  - System.Windows.UIElement.AreAnyTouchesCapturedProperty
  - System.Windows.UIElement.AreAnyTouchesCapturedWithin
  - System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.UIElement.AreAnyTouchesDirectlyOver
  - System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.UIElement.AreAnyTouchesOver
  - System.Windows.UIElement.AreAnyTouchesOverProperty
  - System.Windows.UIElement.Arrange(System.Windows.Rect)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.UIElement.BitmapEffect
  - System.Windows.UIElement.BitmapEffectInput
  - System.Windows.UIElement.BitmapEffectInputProperty
  - System.Windows.UIElement.BitmapEffectProperty
  - System.Windows.UIElement.CacheMode
  - System.Windows.UIElement.CacheModeProperty
  - System.Windows.UIElement.CaptureMouse
  - System.Windows.UIElement.CaptureStylus
  - System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.Clip
  - System.Windows.UIElement.ClipProperty
  - System.Windows.UIElement.ClipToBounds
  - System.Windows.UIElement.ClipToBoundsProperty
  - System.Windows.UIElement.CommandBindings
  - System.Windows.UIElement.DesiredSize
  - System.Windows.UIElement.DragEnter
  - System.Windows.UIElement.DragEnterEvent
  - System.Windows.UIElement.DragLeave
  - System.Windows.UIElement.DragLeaveEvent
  - System.Windows.UIElement.DragOver
  - System.Windows.UIElement.DragOverEvent
  - System.Windows.UIElement.Drop
  - System.Windows.UIElement.DropEvent
  - System.Windows.UIElement.Effect
  - System.Windows.UIElement.EffectProperty
  - System.Windows.UIElement.Focus
  - System.Windows.UIElement.Focusable
  - System.Windows.UIElement.FocusableChanged
  - System.Windows.UIElement.FocusableProperty
  - System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.UIElement.GiveFeedback
  - System.Windows.UIElement.GiveFeedbackEvent
  - System.Windows.UIElement.GotFocus
  - System.Windows.UIElement.GotFocusEvent
  - System.Windows.UIElement.GotKeyboardFocus
  - System.Windows.UIElement.GotKeyboardFocusEvent
  - System.Windows.UIElement.GotMouseCapture
  - System.Windows.UIElement.GotMouseCaptureEvent
  - System.Windows.UIElement.GotStylusCapture
  - System.Windows.UIElement.GotStylusCaptureEvent
  - System.Windows.UIElement.GotTouchCapture
  - System.Windows.UIElement.GotTouchCaptureEvent
  - System.Windows.UIElement.HasAnimatedProperties
  - System.Windows.UIElement.HasEffectiveKeyboardFocus
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)
  - System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)
  - System.Windows.UIElement.InputBindings
  - System.Windows.UIElement.InputHitTest(System.Windows.Point)
  - System.Windows.UIElement.InvalidateArrange
  - System.Windows.UIElement.InvalidateMeasure
  - System.Windows.UIElement.InvalidateVisual
  - System.Windows.UIElement.IsArrangeValid
  - System.Windows.UIElement.IsEnabled
  - System.Windows.UIElement.IsEnabledChanged
  - System.Windows.UIElement.IsEnabledCore
  - System.Windows.UIElement.IsEnabledProperty
  - System.Windows.UIElement.IsFocused
  - System.Windows.UIElement.IsFocusedProperty
  - System.Windows.UIElement.IsHitTestVisible
  - System.Windows.UIElement.IsHitTestVisibleChanged
  - System.Windows.UIElement.IsHitTestVisibleProperty
  - System.Windows.UIElement.IsInputMethodEnabled
  - System.Windows.UIElement.IsKeyboardFocused
  - System.Windows.UIElement.IsKeyboardFocusedChanged
  - System.Windows.UIElement.IsKeyboardFocusedProperty
  - System.Windows.UIElement.IsKeyboardFocusWithin
  - System.Windows.UIElement.IsKeyboardFocusWithinChanged
  - System.Windows.UIElement.IsKeyboardFocusWithinProperty
  - System.Windows.UIElement.IsManipulationEnabled
  - System.Windows.UIElement.IsManipulationEnabledProperty
  - System.Windows.UIElement.IsMeasureValid
  - System.Windows.UIElement.IsMouseCaptured
  - System.Windows.UIElement.IsMouseCapturedChanged
  - System.Windows.UIElement.IsMouseCapturedProperty
  - System.Windows.UIElement.IsMouseCaptureWithin
  - System.Windows.UIElement.IsMouseCaptureWithinChanged
  - System.Windows.UIElement.IsMouseCaptureWithinProperty
  - System.Windows.UIElement.IsMouseDirectlyOver
  - System.Windows.UIElement.IsMouseDirectlyOverChanged
  - System.Windows.UIElement.IsMouseDirectlyOverProperty
  - System.Windows.UIElement.IsMouseOver
  - System.Windows.UIElement.IsMouseOverProperty
  - System.Windows.UIElement.IsStylusCaptured
  - System.Windows.UIElement.IsStylusCapturedChanged
  - System.Windows.UIElement.IsStylusCapturedProperty
  - System.Windows.UIElement.IsStylusCaptureWithin
  - System.Windows.UIElement.IsStylusCaptureWithinChanged
  - System.Windows.UIElement.IsStylusCaptureWithinProperty
  - System.Windows.UIElement.IsStylusDirectlyOver
  - System.Windows.UIElement.IsStylusDirectlyOverChanged
  - System.Windows.UIElement.IsStylusDirectlyOverProperty
  - System.Windows.UIElement.IsStylusOver
  - System.Windows.UIElement.IsStylusOverProperty
  - System.Windows.UIElement.IsVisible
  - System.Windows.UIElement.IsVisibleChanged
  - System.Windows.UIElement.IsVisibleProperty
  - System.Windows.UIElement.KeyDown
  - System.Windows.UIElement.KeyDownEvent
  - System.Windows.UIElement.KeyUp
  - System.Windows.UIElement.KeyUpEvent
  - System.Windows.UIElement.LayoutUpdated
  - System.Windows.UIElement.LostFocus
  - System.Windows.UIElement.LostFocusEvent
  - System.Windows.UIElement.LostKeyboardFocus
  - System.Windows.UIElement.LostKeyboardFocusEvent
  - System.Windows.UIElement.LostMouseCapture
  - System.Windows.UIElement.LostMouseCaptureEvent
  - System.Windows.UIElement.LostStylusCapture
  - System.Windows.UIElement.LostStylusCaptureEvent
  - System.Windows.UIElement.LostTouchCapture
  - System.Windows.UIElement.LostTouchCaptureEvent
  - System.Windows.UIElement.ManipulationBoundaryFeedback
  - System.Windows.UIElement.ManipulationBoundaryFeedbackEvent
  - System.Windows.UIElement.ManipulationCompleted
  - System.Windows.UIElement.ManipulationCompletedEvent
  - System.Windows.UIElement.ManipulationDelta
  - System.Windows.UIElement.ManipulationDeltaEvent
  - System.Windows.UIElement.ManipulationInertiaStarting
  - System.Windows.UIElement.ManipulationInertiaStartingEvent
  - System.Windows.UIElement.ManipulationStarted
  - System.Windows.UIElement.ManipulationStartedEvent
  - System.Windows.UIElement.ManipulationStarting
  - System.Windows.UIElement.ManipulationStartingEvent
  - System.Windows.UIElement.Measure(System.Windows.Size)
  - System.Windows.UIElement.MouseDown
  - System.Windows.UIElement.MouseDownEvent
  - System.Windows.UIElement.MouseEnter
  - System.Windows.UIElement.MouseEnterEvent
  - System.Windows.UIElement.MouseLeave
  - System.Windows.UIElement.MouseLeaveEvent
  - System.Windows.UIElement.MouseLeftButtonDown
  - System.Windows.UIElement.MouseLeftButtonDownEvent
  - System.Windows.UIElement.MouseLeftButtonUp
  - System.Windows.UIElement.MouseLeftButtonUpEvent
  - System.Windows.UIElement.MouseMove
  - System.Windows.UIElement.MouseMoveEvent
  - System.Windows.UIElement.MouseRightButtonDown
  - System.Windows.UIElement.MouseRightButtonDownEvent
  - System.Windows.UIElement.MouseRightButtonUp
  - System.Windows.UIElement.MouseRightButtonUpEvent
  - System.Windows.UIElement.MouseUp
  - System.Windows.UIElement.MouseUpEvent
  - System.Windows.UIElement.MouseWheel
  - System.Windows.UIElement.MouseWheelEvent
  - System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)
  - System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)
  - System.Windows.UIElement.OnCreateAutomationPeer
  - System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)
  - System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)
  - System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)
  - System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)
  - System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)
  - System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)
  - System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)
  - System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.UIElement.Opacity
  - System.Windows.UIElement.OpacityMask
  - System.Windows.UIElement.OpacityMaskProperty
  - System.Windows.UIElement.OpacityProperty
  - System.Windows.UIElement.PersistId
  - System.Windows.UIElement.PreviewDragEnter
  - System.Windows.UIElement.PreviewDragEnterEvent
  - System.Windows.UIElement.PreviewDragLeave
  - System.Windows.UIElement.PreviewDragLeaveEvent
  - System.Windows.UIElement.PreviewDragOver
  - System.Windows.UIElement.PreviewDragOverEvent
  - System.Windows.UIElement.PreviewDrop
  - System.Windows.UIElement.PreviewDropEvent
  - System.Windows.UIElement.PreviewGiveFeedback
  - System.Windows.UIElement.PreviewGiveFeedbackEvent
  - System.Windows.UIElement.PreviewGotKeyboardFocus
  - System.Windows.UIElement.PreviewGotKeyboardFocusEvent
  - System.Windows.UIElement.PreviewKeyDown
  - System.Windows.UIElement.PreviewKeyDownEvent
  - System.Windows.UIElement.PreviewKeyUp
  - System.Windows.UIElement.PreviewKeyUpEvent
  - System.Windows.UIElement.PreviewLostKeyboardFocus
  - System.Windows.UIElement.PreviewLostKeyboardFocusEvent
  - System.Windows.UIElement.PreviewMouseDown
  - System.Windows.UIElement.PreviewMouseDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonDown
  - System.Windows.UIElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.UIElement.PreviewMouseLeftButtonUp
  - System.Windows.UIElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.UIElement.PreviewMouseMove
  - System.Windows.UIElement.PreviewMouseMoveEvent
  - System.Windows.UIElement.PreviewMouseRightButtonDown
  - System.Windows.UIElement.PreviewMouseRightButtonDownEvent
  - System.Windows.UIElement.PreviewMouseRightButtonUp
  - System.Windows.UIElement.PreviewMouseRightButtonUpEvent
  - System.Windows.UIElement.PreviewMouseUp
  - System.Windows.UIElement.PreviewMouseUpEvent
  - System.Windows.UIElement.PreviewMouseWheel
  - System.Windows.UIElement.PreviewMouseWheelEvent
  - System.Windows.UIElement.PreviewQueryContinueDrag
  - System.Windows.UIElement.PreviewQueryContinueDragEvent
  - System.Windows.UIElement.PreviewStylusButtonDown
  - System.Windows.UIElement.PreviewStylusButtonDownEvent
  - System.Windows.UIElement.PreviewStylusButtonUp
  - System.Windows.UIElement.PreviewStylusButtonUpEvent
  - System.Windows.UIElement.PreviewStylusDown
  - System.Windows.UIElement.PreviewStylusDownEvent
  - System.Windows.UIElement.PreviewStylusInAirMove
  - System.Windows.UIElement.PreviewStylusInAirMoveEvent
  - System.Windows.UIElement.PreviewStylusInRange
  - System.Windows.UIElement.PreviewStylusInRangeEvent
  - System.Windows.UIElement.PreviewStylusMove
  - System.Windows.UIElement.PreviewStylusMoveEvent
  - System.Windows.UIElement.PreviewStylusOutOfRange
  - System.Windows.UIElement.PreviewStylusOutOfRangeEvent
  - System.Windows.UIElement.PreviewStylusSystemGesture
  - System.Windows.UIElement.PreviewStylusSystemGestureEvent
  - System.Windows.UIElement.PreviewStylusUp
  - System.Windows.UIElement.PreviewStylusUpEvent
  - System.Windows.UIElement.PreviewTextInput
  - System.Windows.UIElement.PreviewTextInputEvent
  - System.Windows.UIElement.PreviewTouchDown
  - System.Windows.UIElement.PreviewTouchDownEvent
  - System.Windows.UIElement.PreviewTouchMove
  - System.Windows.UIElement.PreviewTouchMoveEvent
  - System.Windows.UIElement.PreviewTouchUp
  - System.Windows.UIElement.PreviewTouchUpEvent
  - System.Windows.UIElement.QueryContinueDrag
  - System.Windows.UIElement.QueryContinueDragEvent
  - System.Windows.UIElement.QueryCursor
  - System.Windows.UIElement.QueryCursorEvent
  - System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.UIElement.ReleaseAllTouchCaptures
  - System.Windows.UIElement.ReleaseMouseCapture
  - System.Windows.UIElement.ReleaseStylusCapture
  - System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.UIElement.RenderSize
  - System.Windows.UIElement.RenderTransform
  - System.Windows.UIElement.RenderTransformOrigin
  - System.Windows.UIElement.RenderTransformOriginProperty
  - System.Windows.UIElement.RenderTransformProperty
  - System.Windows.UIElement.ShouldSerializeCommandBindings
  - System.Windows.UIElement.ShouldSerializeInputBindings
  - System.Windows.UIElement.SnapsToDevicePixels
  - System.Windows.UIElement.SnapsToDevicePixelsProperty
  - System.Windows.UIElement.StylusButtonDown
  - System.Windows.UIElement.StylusButtonDownEvent
  - System.Windows.UIElement.StylusButtonUp
  - System.Windows.UIElement.StylusButtonUpEvent
  - System.Windows.UIElement.StylusDown
  - System.Windows.UIElement.StylusDownEvent
  - System.Windows.UIElement.StylusEnter
  - System.Windows.UIElement.StylusEnterEvent
  - System.Windows.UIElement.StylusInAirMove
  - System.Windows.UIElement.StylusInAirMoveEvent
  - System.Windows.UIElement.StylusInRange
  - System.Windows.UIElement.StylusInRangeEvent
  - System.Windows.UIElement.StylusLeave
  - System.Windows.UIElement.StylusLeaveEvent
  - System.Windows.UIElement.StylusMove
  - System.Windows.UIElement.StylusMoveEvent
  - System.Windows.UIElement.StylusOutOfRange
  - System.Windows.UIElement.StylusOutOfRangeEvent
  - System.Windows.UIElement.StylusPlugIns
  - System.Windows.UIElement.StylusSystemGesture
  - System.Windows.UIElement.StylusSystemGestureEvent
  - System.Windows.UIElement.StylusUp
  - System.Windows.UIElement.StylusUpEvent
  - System.Windows.UIElement.TextInput
  - System.Windows.UIElement.TextInputEvent
  - System.Windows.UIElement.TouchDown
  - System.Windows.UIElement.TouchDownEvent
  - System.Windows.UIElement.TouchEnter
  - System.Windows.UIElement.TouchEnterEvent
  - System.Windows.UIElement.TouchesCaptured
  - System.Windows.UIElement.TouchesCapturedWithin
  - System.Windows.UIElement.TouchesDirectlyOver
  - System.Windows.UIElement.TouchesOver
  - System.Windows.UIElement.TouchLeave
  - System.Windows.UIElement.TouchLeaveEvent
  - System.Windows.UIElement.TouchMove
  - System.Windows.UIElement.TouchMoveEvent
  - System.Windows.UIElement.TouchUp
  - System.Windows.UIElement.TouchUpEvent
  - System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)
  - System.Windows.UIElement.Uid
  - System.Windows.UIElement.UidProperty
  - System.Windows.UIElement.UpdateLayout
  - System.Windows.UIElement.Visibility
  - System.Windows.UIElement.VisibilityProperty
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: Popup()
  nameWithType: Popup.Popup()
  fullName: System.Windows.Controls.Primitives.Popup.Popup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> class."
  syntax:
    content: public Popup ();
    parameters: []
  overload: System.Windows.Controls.Primitives.Popup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparency
  id: AllowsTransparency
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: AllowsTransparency
  nameWithType: Popup.AllowsTransparency
  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparency
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets a value that indicates whether a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control can contain transparent content."
  remarks: "A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust. An application that runs with full trust has complete access to system resources and is typically installed on the local system. For more information, see[Security (WPF)](~/add/includes/ajax-current-ext-md.md).       This property cannot be set to `true` when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/add/includes/ajax-current-ext-md.md)].       If the AllowsTransparency property is set to `true` in an application that does not run in full trust, the AllowsTransparency property value is changed to `false`. An application that is hosted in a browser is an example of an application that does not run in full trust.      <a name=&quot;dependencyPropertyInfo_AllowsTransparency&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example shows how to set the AllowsTransparency property on a <xref:System.Windows.Controls.Primitives.Popup> control.  \n  \n [!code-cs[PopupSnips#AllowsTransparency](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#allowstransparency)]\n [!code-xml[PopupSnips#AllowsTransparency](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#allowstransparency)]\n [!code-vb[PopupSnips#AllowsTransparency](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#allowstransparency)]"
  syntax:
    content: public bool AllowsTransparency { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control can contain transparent content; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.AllowsTransparency*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty
  id: AllowsTransparencyProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: AllowsTransparencyProperty
  nameWithType: Popup.AllowsTransparencyProperty
  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency*> dependency property."
  remarks: "The identifier for the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> dependency property."
  example:
  - '[Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.Child
  id: Child
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: Child
  nameWithType: Popup.Child
  fullName: System.Windows.Controls.Primitives.Popup.Child
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets the content of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control."
  remarks: "**Content Model**: The Child property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control. A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content. For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls.       When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to `true`.      <a name=&quot;dependencyPropertyInfo_Child&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example shows how to add content to a <xref:System.Windows.Controls.Primitives.Popup> control.  \n  \n [!code-cs[PopupSnips#Child](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#child)]\n [!code-xml[PopupSnips#Child](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#child)]\n [!code-vb[PopupSnips#Child](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#child)]"
  syntax:
    content: public System.Windows.UIElement Child { get; set; }
    return:
      type: System.Windows.UIElement
      description: "The <xref href=&quot;System.Windows.UIElement&quot;></xref> content of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.Child*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.ChildProperty
  id: ChildProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: ChildProperty
  nameWithType: Popup.ChildProperty
  fullName: System.Windows.Controls.Primitives.Popup.ChildProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.Child*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ChildProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.Closed
  id: Closed
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: Closed
  nameWithType: Popup.Closed
  fullName: System.Windows.Controls.Primitives.Popup.Closed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Occurs when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  remarks: "A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property."
  example:
  - "The following example shows how to define an event handler for the Closed event.  \n  \n [!code-cs[PopupSnips#Closed](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#closed)]\n [!code-xml[PopupSnips#Closed](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#closed)]\n [!code-vb[PopupSnips#Closed](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#closed)]"
  syntax:
    content: public event EventHandler Closed;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)
  id: CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: CreateRootPopup(Popup,UIElement)
  nameWithType: Popup.CreateRootPopup(Popup,UIElement)
  fullName: System.Windows.Controls.Primitives.Popup.CreateRootPopup(Popup,UIElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Attaches a child element to a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control."
  remarks: "You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <xref:System.Windows.Controls.Primitives.Popup>.  You can make your control behave like a <xref:System.Windows.Controls.Primitives.Popup> by adding a <xref:System.Windows.Controls.Primitives.Popup> to your control and calling the CreateRootPopup method.       This method assigns `child` to the child property and binds the following properties to `child`.      -   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>      -   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>       You should implement these as dependency properties in your control so it can be used the same way as a <xref:System.Windows.Controls.Primitives.Popup>. For more information, see [Custom Dependency Properties](~/add/includes/ajax-current-ext-md.md).       When you call CreateRootPopup, `child` cannot be a child of a <xref:System.Windows.UIElement>. Also, `PlacementTarget` should be set on your control before you call this method."
  syntax:
    content: public static void CreateRootPopup (System.Windows.Controls.Primitives.Popup popup, System.Windows.UIElement child);
    parameters:
    - id: popup
      type: System.Windows.Controls.Primitives.Popup
      description: "The <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> to which to add child content."
    - id: child
      type: System.Windows.UIElement
      description: "The <xref href=&quot;System.Windows.UIElement&quot;></xref> child content."
  overload: System.Windows.Controls.Primitives.Popup.CreateRootPopup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback
  id: CustomPopupPlacementCallback
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: CustomPopupPlacementCallback
  nameWithType: Popup.CustomPopupPlacementCallback
  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets a delegate handler method that positions the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control."
  remarks: "<a name=&quot;dependencyPropertyInfo_CustomPopupPlacementCallback&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example shows how to set a CustomPopupPlacementCallback delegate.  \n  \n [!code-cs[PopupCustomPlacement#DelegateDefinition](~/add/codesnippet/csharp/PopupCustomPlacement/Window1.xaml.cs#delegatedefinition)]\n [!code-vb[PopupCustomPlacement#DelegateDefinition](~/add/codesnippet/visualbasic/popupcustomplacement/window1.xaml.vb#delegatedefinition)]  \n  \n [!code-cs[PopupCustomPlacement#DelegateInstance](~/add/codesnippet/csharp/PopupCustomPlacement/Window1.xaml.cs#delegateinstance)]\n [!code-vb[PopupCustomPlacement#DelegateInstance](~/add/codesnippet/visualbasic/popupcustomplacement/window1.xaml.vb#delegateinstance)]"
  syntax:
    content: public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }
    return:
      type: System.Windows.Controls.Primitives.CustomPopupPlacementCallback
      description: "The <xref href=&quot;System.Windows.Controls.Primitives.CustomPopupPlacementCallback&quot;></xref> delegate method that provides placement information for the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty
  id: CustomPopupPlacementCallbackProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: CustomPopupPlacementCallbackProperty
  nameWithType: Popup.CustomPopupPlacementCallbackProperty
  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref href=&quot;System.Windows.Controls.Primitives.CustomPopupPlacementCallback&quot;></xref> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.GetUIParentCore
  id: GetUIParentCore
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: GetUIParentCore()
  nameWithType: Popup.GetUIParentCore()
  fullName: System.Windows.Controls.Primitives.Popup.GetUIParentCore()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Returns the logical parent of a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref>."
  syntax:
    content: protected override System.Windows.DependencyObject GetUIParentCore ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: "If the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> does not have a defined parent and the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> is returned. Otherwise, the return values are the same as &lt;xref:System.Windows.FrameworkElement.GetUIParentCore%2A?displayProperty=fullName&gt;."
  overload: System.Windows.Controls.Primitives.Popup.GetUIParentCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.HasDropShadow
  id: HasDropShadow
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: HasDropShadow
  nameWithType: Popup.HasDropShadow
  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadow
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets a value that indicates whether a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> is displayed with a drop shadow effect."
  remarks: "A drop shadow effect displays when the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=fullName> property and the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=fullName> property are set to `true`.      <a name=&quot;dependencyPropertyInfo_HasDropShadow&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example shows how to get the value of the HasDropShadow property.  \n  \n [!code-cs[PopupSnips#HasDropShadow](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#hasdropshadow)]\n [!code-vb[PopupSnips#HasDropShadow](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#hasdropshadow)]"
  syntax:
    content: public bool HasDropShadow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> is displayed with a drop shadow; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.HasDropShadow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty
  id: HasDropShadowProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: HasDropShadowProperty
  nameWithType: Popup.HasDropShadowProperty
  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow*> dependency property."
  remarks: "The identifier for the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> dependency property."
  example:
  - '[Dependency Properties Overview](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public static readonly System.Windows.DependencyProperty HasDropShadowProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffset
  id: HorizontalOffset
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: HorizontalOffset
  nameWithType: Popup.HorizontalOffset
  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffset
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Get or sets the horizontal distance between the target origin and the popup alignment point."
  remarks: "You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, HorizontalOffset, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).      <a name=&quot;dependencyPropertyInfo_HorizontalOffset&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|   |Metadata properties set to `true`|None|      <a name=&quot;xamlAttributeUsage_HorizontalOffset&quot;></a>    ## XAML Attribute Usage      ```   <object HorizontalOffset=&quot;double&quot;/>   - or -   <object HorizontalOffset=&quot;qualifiedDouble&quot;/>   ```      <a name=&quot;xamlValues_HorizontallOffset&quot;></a>    ## XAML Values    `double`    <xref:System.Double>       A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings do not have to explicitly include decimal points. For example, a value of `1` is acceptable.       The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.       `qualifiedDouble`    A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in=96px       `cm` is centimeters; 1cm=(96/2.54) px       `pt` is points; 1pt=(96/72) px"
  example:
  - "The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the HorizontalOffset and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties to 20.  The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode> (which is the default), so the target origin is the bottom left corner of the target area and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.  \n  \n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_425_1.xaml)]\n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_425_1.xaml)]"
  syntax:
    content: public double HorizontalOffset { get; set; }
    return:
      type: System.Double
      description: "The horizontal distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0."
  overload: System.Windows.Controls.Primitives.Popup.HorizontalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty
  id: HorizontalOffsetProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: HorizontalOffsetProperty
  nameWithType: Popup.HorizontalOffsetProperty
  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.IsOpen
  id: IsOpen
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: IsOpen
  nameWithType: Popup.IsOpen
  fullName: System.Windows.Controls.Primitives.Popup.IsOpen
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets a value that indicates whether the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> is visible."
  remarks: "If a control uses a <xref:System.Windows.Controls.Primitives.Popup> as part of its default style, bind the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup> to a property of the control. For example, a <xref:System.Windows.Controls.ComboBox> can bind its <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to the IsOpen property of the <xref:System.Windows.Controls.Primitives.Popup>. This simplifies the logic for controlling when the <xref:System.Windows.Controls.Primitives.Popup> is visible.      <a name=&quot;dependencyPropertyInfo_IsOpen&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|"
  example:
  - "The following example shows how to set the IsOpen property.  \n  \n [!code-cs[PopupSnips#IsOpen](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#isopen)]\n [!code-xml[PopupSnips#IsOpen](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#isopen)]\n [!code-vb[PopupSnips#IsOpen](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#isopen)]"
  syntax:
    content: public bool IsOpen { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> is visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.IsOpen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.IsOpenProperty
  id: IsOpenProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: IsOpenProperty
  nameWithType: Popup.IsOpenProperty
  fullName: System.Windows.Controls.Primitives.Popup.IsOpenProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsOpenProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.LogicalChildren
  id: LogicalChildren
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: LogicalChildren
  nameWithType: Popup.LogicalChildren
  fullName: System.Windows.Controls.Primitives.Popup.LogicalChildren
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets an enumerator that you can use to access the logical child elements of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control."
  remarks: "When you add content to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content. Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>. The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control. Instead, the child content is rendered in a separate window that has its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property is set to `true`."
  syntax:
    content: protected override System.Collections.IEnumerator LogicalChildren { get; }
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that you can use to access the logical child elements of a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.LogicalChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)
  id: MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: MeasureOverride(Size)
  nameWithType: Popup.MeasureOverride(Size)
  fullName: System.Windows.Controls.Primitives.Popup.MeasureOverride(Size)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Determines the required size of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> content within the visual tree of the logical parent."
  remarks: "This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>. The child content is created in a different window that has its own visual tree."
  syntax:
    content: protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);
    parameters:
    - id: availableSize
      type: System.Windows.Size
      description: "The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available."
    return:
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;></xref> structure that has the <xref:System.Windows.Size.Height*> and <xref:System.Windows.Size.Width*> properties both equal to zero (0)."
  overload: System.Windows.Controls.Primitives.Popup.MeasureOverride*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)
  id: OnClosed(System.EventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: OnClosed(EventArgs)
  nameWithType: Popup.OnClosed(EventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnClosed(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Responds when the value of the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes from to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  syntax:
    content: protected virtual void OnClosed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "The event data."
  overload: System.Windows.Controls.Primitives.Popup.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)
  id: OnOpened(System.EventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: OnOpened(EventArgs)
  nameWithType: Popup.OnOpened(EventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnOpened(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Responds to the condition in which the value of the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes from <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  syntax:
    content: protected virtual void OnOpened (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "The event arguments."
  overload: System.Windows.Controls.Primitives.Popup.OnOpened*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Provides class handling for the <xref href=&quot;System.Windows.UIElement.PreviewMouseLeftButtonDown&quot;></xref> event."
  remarks: "This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."
  syntax:
    content: protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "The event data."
  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Provides class handling for the <xref href=&quot;System.Windows.UIElement.PreviewMouseLeftButtonUp&quot;></xref> event."
  remarks: "This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."
  syntax:
    content: protected override void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "The event data."
  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Provides class handling for the <xref href=&quot;System.Windows.UIElement.PreviewMouseRightButtonUp&quot;></xref> event."
  remarks: "This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."
  syntax:
    content: protected override void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "The event data."
  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  id: OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Provides class handling for the <xref href=&quot;System.Windows.UIElement.PreviewMouseRightButtonDown&quot;></xref> event."
  remarks: "This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`."
  syntax:
    content: protected override void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Input.MouseButtonEventArgs
      description: "The event data."
  overload: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.Opened
  id: Opened
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: Opened
  nameWithType: Popup.Opened
  fullName: System.Windows.Controls.Primitives.Popup.Opened
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Occurs when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property changes to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  remarks: "A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property."
  example:
  - "The following example shows how to define an event handler for the Opened event.  \n  \n [!code-cs[PopupSnips#Opened](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#opened)]\n [!code-xml[PopupSnips#Opened](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#opened)]\n [!code-vb[PopupSnips#Opened](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#opened)]"
  syntax:
    content: public event EventHandler Opened;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.Placement
  id: Placement
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: Placement
  nameWithType: Popup.Placement
  fullName: System.Windows.Controls.Primitives.Popup.Placement
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets the orientation of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control when the control opens, and specifies the behavior of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control when it overlaps screen boundaries."
  remarks: "You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, Placement, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).       If the <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> property is `true`, setting Placement to <xref:System.Windows.Controls.Primitives.PlacementMode> or <xref:System.Windows.Controls.Primitives.PlacementMode> reverses the position of the <xref:System.Windows.Controls.Primitives.Popup>; a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its left edge with the right edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> and a <xref:System.Windows.Controls.Primitives.Popup> with Placement set to <xref:System.Windows.Controls.Primitives.PlacementMode> aligns its right edge with the left edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.      <a name=&quot;dependencyPropertyInfo_Placement&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example creates four <xref:System.Windows.Controls.Primitives.Popup> controls that are relative to an image. Each <xref:System.Windows.Controls.Primitives.Popup> has a different value for the placement property.  \n  \n [!code-xml[PopupPositionSnippets#3](~/add/codesnippet/xaml/p-system.windows.control_390_1.xaml)]\n [!code-xml[PopupPositionSnippets#3](~/add/codesnippet/xaml/p-system.windows.control_390_1.xaml)]"
  syntax:
    content: public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }
    return:
      type: System.Windows.Controls.Primitives.PlacementMode
      description: "A <xref href=&quot;System.Windows.Controls.Primitives.PlacementMode&quot;></xref> enumeration value that determines the orientation of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control when the control opens, and that specifies how the control interacts with screen boundaries. The default is <xref href=&quot;System.Windows.Controls.Primitives.PlacementMode&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.Placement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PlacementProperty
  id: PlacementProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PlacementProperty
  nameWithType: Popup.PlacementProperty
  fullName: System.Windows.Controls.Primitives.Popup.PlacementProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.Placement*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PlacementProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangle
  id: PlacementRectangle
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PlacementRectangle
  nameWithType: Popup.PlacementRectangle
  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets the rectangle relative to which the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control is positioned when it opens."
  remarks: "You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, PlacementRectangle, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_PlacementRectangle&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example sets the PlacementRectangle property of a <xref:System.Windows.Controls.Primitives.Popup>. The <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> properties of the PlacementRectangle are 50, 50, 50, and 100, respectively. The <xref:System.Windows.Controls.Primitives.Popup> is relative to the bounds of the PlacementRectangle property. Note that the PlacementRectangle property does not create a visible element in the application; the example creates a <xref:System.Windows.Shapes.Rectangle> with the same bounds to represent the PlacementRectangle.  \n  \n [!code-xml[PopupPositionSnippets#6](~/add/codesnippet/xaml/p-system.windows.control_138_1.xaml)]\n [!code-xml[PopupPositionSnippets#6](~/add/codesnippet/xaml/p-system.windows.control_138_1.xaml)]"
  syntax:
    content: public System.Windows.Rect PlacementRectangle { get; set; }
    return:
      type: System.Windows.Rect
      description: "The rectangle that is used to position the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.PlacementRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty
  id: PlacementRectangleProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PlacementRectangleProperty
  nameWithType: Popup.PlacementRectangleProperty
  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PlacementTarget
  id: PlacementTarget
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PlacementTarget
  nameWithType: Popup.PlacementTarget
  fullName: System.Windows.Controls.Primitives.Popup.PlacementTarget
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets the element relative to which the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> is positioned when it opens."
  remarks: "You can position a popup by setting the PlacementTarget, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;dependencyPropertyInfo_PlacementTarget&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example creates a <xref:System.Windows.Controls.Primitives.Popup> that is the child of a <xref:System.Windows.Controls.Canvas>, and sets PlacementTarget to `ellipse1`, so the popup is relative to the <xref:System.Windows.Shapes.Ellipse>.  \n  \n [!code-xml[PopupPositionSnippets#2](~/add/codesnippet/xaml/p-system.windows.control_309_1.xaml)]\n [!code-xml[PopupPositionSnippets#2](~/add/codesnippet/xaml/p-system.windows.control_309_1.xaml)]"
  syntax:
    content: public System.Windows.UIElement PlacementTarget { get; set; }
    return:
      type: System.Windows.UIElement
      description: "The <xref href=&quot;System.Windows.UIElement&quot;></xref> that is the logical parent of the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.PlacementTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty
  id: PlacementTargetProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PlacementTargetProperty
  nameWithType: Popup.PlacementTargetProperty
  fullName: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PlacementTargetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PopupAnimation
  id: PopupAnimation
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PopupAnimation
  nameWithType: Popup.PopupAnimation
  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimation
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets an animation for the opening and closing of a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control."
  remarks: "A <xref:System.Windows.Controls.Primitives.Popup> can only animate when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true`. This requires the application that creates the <xref:System.Windows.Controls.Primitives.Popup> control to run with full trust.       If the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> is animated, the <xref:System.Windows.Controls.Primitives.Popup> will not be animated.      <a name=&quot;dependencyPropertyInfo_PopupAnimation&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example shows how to set the PopupAnimation property.  \n  \n [!code-cs[PopupSnips#AllowsTransparency](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#allowstransparency)]\n [!code-xml[PopupSnips#AllowsTransparency](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#allowstransparency)]\n [!code-vb[PopupSnips#AllowsTransparency](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#allowstransparency)]  \n  \n [!code-cs[PopupSnips#Animation](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#animation)]\n [!code-vb[PopupSnips#Animation](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#animation)]"
  syntax:
    content: public System.Windows.Controls.Primitives.PopupAnimation PopupAnimation { get; set; }
    return:
      type: System.Windows.Controls.Primitives.PopupAnimation
      description: "The <xref href=&quot;System.Windows.Controls.Primitives.PopupAnimation&quot;></xref> enumeration value that defines an animation to open and close a <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref href=&quot;System.Windows.Controls.Primitives.PopupAnimation&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.PopupAnimation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty
  id: PopupAnimationProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: PopupAnimationProperty
  nameWithType: Popup.PopupAnimationProperty
  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PopupAnimationProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.StaysOpen
  id: StaysOpen
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: StaysOpen
  nameWithType: Popup.StaysOpen
  fullName: System.Windows.Controls.Primitives.Popup.StaysOpen
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets a value that indicates whether the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control closes when the control is no longer in focus."
  remarks: "When the StaysOpen property is set to `true`, <xref:System.Windows.Controls.Primitives.Popup> stays open until it is explicitly closed by setting the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property to `false`. When StaysOpen is `false`, the <xref:System.Windows.Controls.Primitives.Popup> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <xref:System.Windows.Controls.Primitives.Popup> control.      <a name=&quot;dependencyPropertyInfo_StaysOpen&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example shows how to set the StaysOpen property.  \n  \n [!code-cs[PopupSnips#StaysOpen](~/add/codesnippet/csharp/PopupSnips/Window1.xaml.cs#staysopen)]\n [!code-xml[PopupSnips#StaysOpen](~/add/codesnippet/xaml/PopupSnips/Window1.xaml#staysopen)]\n [!code-vb[PopupSnips#StaysOpen](~/add/codesnippet/visualbasic/popupsnips/window1.xaml.vb#staysopen)]"
  syntax:
    content: public bool StaysOpen { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control closes when <xref:System.Windows.Controls.Primitives.Popup.IsOpen*> property is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control closes when a mouse or keyboard event occurs outside the <xref href=&quot;System.Windows.Controls.Primitives.Popup&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.Primitives.Popup.StaysOpen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.StaysOpenProperty
  id: StaysOpenProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: StaysOpenProperty
  nameWithType: Popup.StaysOpenProperty
  fullName: System.Windows.Controls.Primitives.Popup.StaysOpenProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty StaysOpenProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Popup.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "This member supports the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "An object to add as a child."
  overload: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Popup.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "This member supports the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "A string to add to the object."
  overload: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.VerticalOffset
  id: VerticalOffset
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: VerticalOffset
  nameWithType: Popup.VerticalOffset
  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffset
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Gets or sets the vertical distance between the target origin and the popup alignment point."
  remarks: "You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty> properties. For more information, see [Popup Placement Behavior](../Topic/Popup%20Placement%20Behavior.md).      <a name=&quot;xamlAttributeUsage_VerticalOffset&quot;></a>    ## XAML Attribute Usage      ```   <object VerticalOffset=&quot;double&quot;/>   - or -   <object VerticalOffset=&quot;qualifiedDouble&quot;/>   ```      <a name=&quot;xamlValues_VerticalOffset&quot;></a>    ## XAML Values    `double`    <xref:System.Double>       A string representation of a <xref:System.Double> value. This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/add/includes/tlasharptla-dipixel-md.md)] measurement. Strings do not have to explicitly include decimal points. For example, a value of `1` is acceptable.       The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.       `qualifiedDouble`    A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in=96px       `cm` is centimeters; 1cm=(96/2.54) px       `pt` is points; 1pt=(96/72) px      <a name=&quot;dependencyPropertyInfo_VerticalOffset&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> and VerticalOffset properties to 20.  The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode> (which is the default), so the target origin is the bottom left corner of the target area, and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.  \n  \n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_291_1.xaml)]\n [!code-xml[PopupPositionSnippets#5](~/add/codesnippet/xaml/p-system.windows.control_291_1.xaml)]"
  syntax:
    content: public double VerticalOffset { get; set; }
    return:
      type: System.Double
      description: "The vertical distance between the target origin and the popup alignment point. For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/add/includes/ajax-current-ext-md.md). The default is 0."
  overload: System.Windows.Controls.Primitives.Popup.VerticalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty
  id: VerticalOffsetProperty
  parent: System.Windows.Controls.Primitives.Popup
  langs:
  - csharp
  name: VerticalOffsetProperty
  nameWithType: Popup.VerticalOffsetProperty
  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls.Primitives
  summary: "Identifies the <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkElement
  isExternal: false
  name: System.Windows.FrameworkElement
- uid: System.Windows.Controls.Primitives.Popup.#ctor
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Popup()
  nameWithType: Popup.Popup()
  fullName: System.Windows.Controls.Primitives.Popup.Popup()
- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparency
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: AllowsTransparency
  nameWithType: Popup.AllowsTransparency
  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparency
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: AllowsTransparencyProperty
  nameWithType: Popup.AllowsTransparencyProperty
  fullName: System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Controls.Primitives.Popup.Child
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Child
  nameWithType: Popup.Child
  fullName: System.Windows.Controls.Primitives.Popup.Child
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Controls.Primitives.Popup.ChildProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: ChildProperty
  nameWithType: Popup.ChildProperty
  fullName: System.Windows.Controls.Primitives.Popup.ChildProperty
- uid: System.Windows.Controls.Primitives.Popup.Closed
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Closed
  nameWithType: Popup.Closed
  fullName: System.Windows.Controls.Primitives.Popup.Closed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: CreateRootPopup(Popup,UIElement)
  nameWithType: Popup.CreateRootPopup(Popup,UIElement)
  fullName: System.Windows.Controls.Primitives.Popup.CreateRootPopup(Popup,UIElement)
- uid: System.Windows.Controls.Primitives.Popup
  parent: System.Windows.Controls.Primitives
  isExternal: false
  name: Popup
  nameWithType: Popup
  fullName: System.Windows.Controls.Primitives.Popup
- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: CustomPopupPlacementCallback
  nameWithType: Popup.CustomPopupPlacementCallback
  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback
- uid: System.Windows.Controls.Primitives.CustomPopupPlacementCallback
  parent: System.Windows.Controls.Primitives
  isExternal: false
  name: CustomPopupPlacementCallback
  nameWithType: CustomPopupPlacementCallback
  fullName: System.Windows.Controls.Primitives.CustomPopupPlacementCallback
- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: CustomPopupPlacementCallbackProperty
  nameWithType: Popup.CustomPopupPlacementCallbackProperty
  fullName: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty
- uid: System.Windows.Controls.Primitives.Popup.GetUIParentCore
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: GetUIParentCore()
  nameWithType: Popup.GetUIParentCore()
  fullName: System.Windows.Controls.Primitives.Popup.GetUIParentCore()
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Controls.Primitives.Popup.HasDropShadow
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: HasDropShadow
  nameWithType: Popup.HasDropShadow
  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadow
- uid: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: HasDropShadowProperty
  nameWithType: Popup.HasDropShadowProperty
  fullName: System.Windows.Controls.Primitives.Popup.HasDropShadowProperty
- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffset
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: HorizontalOffset
  nameWithType: Popup.HorizontalOffset
  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffset
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: HorizontalOffsetProperty
  nameWithType: Popup.HorizontalOffsetProperty
  fullName: System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty
- uid: System.Windows.Controls.Primitives.Popup.IsOpen
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: IsOpen
  nameWithType: Popup.IsOpen
  fullName: System.Windows.Controls.Primitives.Popup.IsOpen
- uid: System.Windows.Controls.Primitives.Popup.IsOpenProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: IsOpenProperty
  nameWithType: Popup.IsOpenProperty
  fullName: System.Windows.Controls.Primitives.Popup.IsOpenProperty
- uid: System.Windows.Controls.Primitives.Popup.LogicalChildren
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: LogicalChildren
  nameWithType: Popup.LogicalChildren
  fullName: System.Windows.Controls.Primitives.Popup.LogicalChildren
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: MeasureOverride(Size)
  nameWithType: Popup.MeasureOverride(Size)
  fullName: System.Windows.Controls.Primitives.Popup.MeasureOverride(Size)
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnClosed(EventArgs)
  nameWithType: Popup.OnClosed(EventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnClosed(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnOpened(EventArgs)
  nameWithType: Popup.OnOpened(EventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnOpened(EventArgs)
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)
- uid: System.Windows.Input.MouseButtonEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonEventArgs
  nameWithType: MouseButtonEventArgs
  fullName: System.Windows.Input.MouseButtonEventArgs
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(MouseButtonEventArgs)
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  nameWithType: Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
  fullName: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(MouseButtonEventArgs)
- uid: System.Windows.Controls.Primitives.Popup.Opened
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Opened
  nameWithType: Popup.Opened
  fullName: System.Windows.Controls.Primitives.Popup.Opened
- uid: System.Windows.Controls.Primitives.Popup.Placement
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Placement
  nameWithType: Popup.Placement
  fullName: System.Windows.Controls.Primitives.Popup.Placement
- uid: System.Windows.Controls.Primitives.PlacementMode
  parent: System.Windows.Controls.Primitives
  isExternal: false
  name: PlacementMode
  nameWithType: PlacementMode
  fullName: System.Windows.Controls.Primitives.PlacementMode
- uid: System.Windows.Controls.Primitives.Popup.PlacementProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementProperty
  nameWithType: Popup.PlacementProperty
  fullName: System.Windows.Controls.Primitives.Popup.PlacementProperty
- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangle
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementRectangle
  nameWithType: Popup.PlacementRectangle
  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangle
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementRectangleProperty
  nameWithType: Popup.PlacementRectangleProperty
  fullName: System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty
- uid: System.Windows.Controls.Primitives.Popup.PlacementTarget
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementTarget
  nameWithType: Popup.PlacementTarget
  fullName: System.Windows.Controls.Primitives.Popup.PlacementTarget
- uid: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementTargetProperty
  nameWithType: Popup.PlacementTargetProperty
  fullName: System.Windows.Controls.Primitives.Popup.PlacementTargetProperty
- uid: System.Windows.Controls.Primitives.Popup.PopupAnimation
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PopupAnimation
  nameWithType: Popup.PopupAnimation
  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimation
- uid: System.Windows.Controls.Primitives.PopupAnimation
  parent: System.Windows.Controls.Primitives
  isExternal: false
  name: PopupAnimation
  nameWithType: PopupAnimation
  fullName: System.Windows.Controls.Primitives.PopupAnimation
- uid: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PopupAnimationProperty
  nameWithType: Popup.PopupAnimationProperty
  fullName: System.Windows.Controls.Primitives.Popup.PopupAnimationProperty
- uid: System.Windows.Controls.Primitives.Popup.StaysOpen
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: StaysOpen
  nameWithType: Popup.StaysOpen
  fullName: System.Windows.Controls.Primitives.Popup.StaysOpen
- uid: System.Windows.Controls.Primitives.Popup.StaysOpenProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: StaysOpenProperty
  nameWithType: Popup.StaysOpenProperty
  fullName: System.Windows.Controls.Primitives.Popup.StaysOpenProperty
- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Popup.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Popup.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.Primitives.Popup.VerticalOffset
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: VerticalOffset
  nameWithType: Popup.VerticalOffset
  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffset
- uid: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: VerticalOffsetProperty
  nameWithType: Popup.VerticalOffsetProperty
  fullName: System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty
- uid: System.Windows.Controls.Primitives.Popup.#ctor*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Popup
  nameWithType: Popup.Popup
- uid: System.Windows.Controls.Primitives.Popup.AllowsTransparency*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: AllowsTransparency
  nameWithType: Popup.AllowsTransparency
- uid: System.Windows.Controls.Primitives.Popup.Child*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Child
  nameWithType: Popup.Child
- uid: System.Windows.Controls.Primitives.Popup.CreateRootPopup*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: CreateRootPopup
  nameWithType: Popup.CreateRootPopup
- uid: System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: CustomPopupPlacementCallback
  nameWithType: Popup.CustomPopupPlacementCallback
- uid: System.Windows.Controls.Primitives.Popup.GetUIParentCore*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: GetUIParentCore
  nameWithType: Popup.GetUIParentCore
- uid: System.Windows.Controls.Primitives.Popup.HasDropShadow*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: HasDropShadow
  nameWithType: Popup.HasDropShadow
- uid: System.Windows.Controls.Primitives.Popup.HorizontalOffset*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: HorizontalOffset
  nameWithType: Popup.HorizontalOffset
- uid: System.Windows.Controls.Primitives.Popup.IsOpen*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: IsOpen
  nameWithType: Popup.IsOpen
- uid: System.Windows.Controls.Primitives.Popup.LogicalChildren*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: LogicalChildren
  nameWithType: Popup.LogicalChildren
- uid: System.Windows.Controls.Primitives.Popup.MeasureOverride*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: MeasureOverride
  nameWithType: Popup.MeasureOverride
- uid: System.Windows.Controls.Primitives.Popup.OnClosed*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnClosed
  nameWithType: Popup.OnClosed
- uid: System.Windows.Controls.Primitives.Popup.OnOpened*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnOpened
  nameWithType: Popup.OnOpened
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseLeftButtonDown
  nameWithType: Popup.OnPreviewMouseLeftButtonDown
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseLeftButtonUp
  nameWithType: Popup.OnPreviewMouseLeftButtonUp
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseRightButtonDown
  nameWithType: Popup.OnPreviewMouseRightButtonDown
- uid: System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: OnPreviewMouseRightButtonUp
  nameWithType: Popup.OnPreviewMouseRightButtonUp
- uid: System.Windows.Controls.Primitives.Popup.Placement*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: Placement
  nameWithType: Popup.Placement
- uid: System.Windows.Controls.Primitives.Popup.PlacementRectangle*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementRectangle
  nameWithType: Popup.PlacementRectangle
- uid: System.Windows.Controls.Primitives.Popup.PlacementTarget*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PlacementTarget
  nameWithType: Popup.PlacementTarget
- uid: System.Windows.Controls.Primitives.Popup.PopupAnimation*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: PopupAnimation
  nameWithType: Popup.PopupAnimation
- uid: System.Windows.Controls.Primitives.Popup.StaysOpen*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: StaysOpen
  nameWithType: Popup.StaysOpen
- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Popup.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Popup.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Controls.Primitives.Popup.VerticalOffset*
  parent: System.Windows.Controls.Primitives.Popup
  isExternal: false
  name: VerticalOffset
  nameWithType: Popup.VerticalOffset
