### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReceiveContext
  id: ReceiveContext
  children:
  - System.ServiceModel.Channels.ReceiveContext.#ctor
  - System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.Fault
  - System.ServiceModel.Channels.ReceiveContext.Faulted
  - System.ServiceModel.Channels.ReceiveContext.Name
  - System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  - System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  - System.ServiceModel.Channels.ReceiveContext.OnFaulted
  - System.ServiceModel.Channels.ReceiveContext.State
  - System.ServiceModel.Channels.ReceiveContext.ThisLock
  - System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  - System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  langs:
  - csharp
  name: ReceiveContext
  nameWithType: ReceiveContext
  fullName: System.ServiceModel.Channels.ReceiveContext
  type: Class
  summary: "Derive from this class to implement a custom state machine for receive context functionality."
  remarks: "Receive context functionality is two-fold. When working with a queued channel, receive context allows you to lock a message prior to processing it. If a failure occurs, the message remains locked so that the service that is processing the message maintains ownership (another service cannot receive and process the same message) and may choose to perform some other action on it. When working with a one-way channel, receive context allows a service to control when it sends an acknowledgement message or it can indicate a problem by sending a negative acknowledgement message. The client can then choose to resend the message if it receives a negative acknowledgement or if it does not receive an acknowledgement within a certain period of time."
  syntax:
    content: public abstract class ReceiveContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: ReceiveContext()
  nameWithType: ReceiveContext.ReceiveContext()
  fullName: System.ServiceModel.Channels.ReceiveContext.ReceiveContext()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Channels.ReceiveContext&quot;></xref> class."
  syntax:
    content: protected ReceiveContext ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  id: Abandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Abandon(TimeSpan)
  nameWithType: ReceiveContext.Abandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Causes the state machine to transition to the abandoned state with the specified timeout value."
  syntax:
    content: public virtual void Abandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
  overload: System.ServiceModel.Channels.ReceiveContext.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  id: Abandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Abandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.Abandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Causes the state machine to transition to the abandoned state with the specified exception and timeout value."
  syntax:
    content: public virtual void Abandon (Exception exception, TimeSpan timeout);
    parameters:
    - id: exception
      type: System.Exception
      description: "The exception that causes the abandon operation."
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
  overload: System.ServiceModel.Channels.ReceiveContext.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Begins an asynchronous abandon operation with the specified  timeout, asynchronous callback, and user-defined state data."
  syntax:
    content: public virtual IAsyncResult BeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user-defined state data."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> that references the asynchronous abandon operation."
  overload: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Begins an asynchronous abandon operation with the specified exception, timeout, asynchronous callback, and user-defined state data."
  syntax:
    content: public virtual IAsyncResult BeginAbandon (Exception exception, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: exception
      type: System.Exception
      description: "An exception that contains the reason for the abandon operation."
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "the user-defined state data."
    return:
      type: System.IAsyncResult
      description: "An <xref:System.IAsyncResult> that references the asynchronous abandon operation."
  overload: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: BeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Begins an asynchronous complete operation with the specified  timeout, asynchronous callback, and user-defined state data."
  syntax:
    content: public virtual IAsyncResult BeginComplete (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the complete operation to complete."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user-defined state data."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> that references the asynchronous complete operation."
  overload: System.ServiceModel.Channels.ReceiveContext.BeginComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  id: Complete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Complete(TimeSpan)
  nameWithType: ReceiveContext.Complete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Complete(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Causes the state machine to transition to the completed state with the specified timeout value."
  syntax:
    content: public virtual void Complete (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the complete operation to complete."
  overload: System.ServiceModel.Channels.ReceiveContext.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  id: EndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: EndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.EndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Completes an asynchronous abandon operation."
  syntax:
    content: public virtual void EndAbandon (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "The <xref:System.IAsyncResult> returned by a call to one of the <xref:System.ServiceModel.Activities.WorkflowControlClient.BeginAbandon*> methods."
  overload: System.ServiceModel.Channels.ReceiveContext.EndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  id: EndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: EndComplete(IAsyncResult)
  nameWithType: ReceiveContext.EndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndComplete(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Completes an asynchronous complete operation."
  syntax:
    content: public virtual void EndComplete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "The <xref:System.IAsyncResult> returned by a call to the <xref:System.ServiceModel.Channels.ReceiveContext.BeginComplete*> method."
  overload: System.ServiceModel.Channels.ReceiveContext.EndComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Fault
  id: Fault
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Fault()
  nameWithType: ReceiveContext.Fault()
  fullName: System.ServiceModel.Channels.ReceiveContext.Fault()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Causes the state machine to transition to the faulted state."
  syntax:
    content: protected virtual void Fault ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.Fault*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Faulted
  id: Faulted
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Faulted
  nameWithType: ReceiveContext.Faulted
  fullName: System.ServiceModel.Channels.ReceiveContext.Faulted
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Defines the event to raised when an exception has occurred during the messaging process."
  syntax:
    content: public event EventHandler Faulted;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.Name
  id: Name
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: Name
  nameWithType: ReceiveContext.Name
  fullName: System.ServiceModel.Channels.ReceiveContext.Name
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "The name of the receive context."
  syntax:
    content: public static readonly string Name;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  id: OnAbandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnAbandon(TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the abandoned state with the specified timeout value."
  syntax:
    content: protected abstract void OnAbandon (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
  overload: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  id: OnAbandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnAbandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(Exception,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the abandoned state with the specified exception and timeout value."
  syntax:
    content: protected virtual void OnAbandon (Exception exception, TimeSpan timeout);
    parameters:
    - id: exception
      type: System.Exception
      description: "An exception that contains the reason for the abandon operation."
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
  overload: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the abandoned state asynchronously with the specified timeout value, callback, and state data."
  syntax:
    content: protected abstract IAsyncResult OnBeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user defined state data."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> that references the asynchronous operation."
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the abandoned state asynchronously with the specified exception, timeout value, callback, and state data."
  syntax:
    content: protected virtual IAsyncResult OnBeginAbandon (Exception exception, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: exception
      type: System.Exception
      description: "An exception that contains the reason for the abandon operation."
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the abandon operation to complete."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user-defined state data."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> that references the asynchronous operation."
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnBeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the completed state asynchronously with the specified timeout, callback, and state data."
  syntax:
    content: protected abstract IAsyncResult OnBeginComplete (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the complete operation to complete."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives the notification of the asynchronous operation completion."
    - id: state
      type: System.Object
      description: "The user-defined state data."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> that references the asynchronous operation."
  overload: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  id: OnComplete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnComplete(TimeSpan)
  nameWithType: ReceiveContext.OnComplete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnComplete(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the completed state with the specified timeout value."
  syntax:
    content: protected abstract void OnComplete (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The timeout for the complete operation to complete."
  overload: System.ServiceModel.Channels.ReceiveContext.OnComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  id: OnEndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnEndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.OnEndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the abandoned state asynchronously."
  syntax:
    content: protected abstract void OnEndAbandon (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "The <xref:System.IAsyncResult> returned by a call to one of the <xref:System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*> methods."
  overload: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  id: OnEndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnEndComplete(IAsyncResult)
  nameWithType: ReceiveContext.OnEndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the completed state asynchronously."
  syntax:
    content: protected abstract void OnEndComplete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "The <xref:System.IAsyncResult> returned by a call to the <xref:System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*>"
  overload: System.ServiceModel.Channels.ReceiveContext.OnEndComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted
  id: OnFaulted
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: OnFaulted()
  nameWithType: ReceiveContext.OnFaulted()
  fullName: System.ServiceModel.Channels.ReceiveContext.OnFaulted()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Called when the state machine is transitioning to the faulted state."
  syntax:
    content: protected virtual void OnFaulted ();
    parameters: []
  overload: System.ServiceModel.Channels.ReceiveContext.OnFaulted*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.State
  id: State
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: State
  nameWithType: ReceiveContext.State
  fullName: System.ServiceModel.Channels.ReceiveContext.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the state of the state machine."
  syntax:
    content: public System.ServiceModel.Channels.ReceiveContextState State { get; protected set; }
    return:
      type: System.ServiceModel.Channels.ReceiveContextState
      description: "The current receive context state of the state machine."
  overload: System.ServiceModel.Channels.ReceiveContext.State*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock
  id: ThisLock
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
  fullName: System.ServiceModel.Channels.ReceiveContext.ThisLock
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "An object used for locking the <xref href=&quot;System.ServiceModel.Channels.ReceiveContext&quot;></xref> instance."
  syntax:
    content: protected object ThisLock { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>."
  overload: System.ServiceModel.Channels.ReceiveContext.ThisLock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: TryGet(Message,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(Message,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(Message,ReceiveContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Attempts to get the receive context from the specified message."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.ReceiveContext property);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The message."
    - id: property
      type: System.ServiceModel.Channels.ReceiveContext
      description: "The receive context."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the receive context is retrieved successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.ReceiveContext.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  langs:
  - csharp
  name: TryGet(MessageProperties,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Attempts to get the receive context from the specified message properties collection."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.ReceiveContext property);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "The message properties collection."
    - id: property
      type: System.ServiceModel.Channels.ReceiveContext
      description: "The receive context."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the receive context is retrieved successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.ReceiveContext.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ReceiveContext()
  nameWithType: ReceiveContext.ReceiveContext()
  fullName: System.ServiceModel.Channels.ReceiveContext.ReceiveContext()
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon(TimeSpan)
  nameWithType: ReceiveContext.Abandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.Abandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Abandon(Exception,TimeSpan)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.BeginComplete(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.Complete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Complete(TimeSpan)
  nameWithType: ReceiveContext.Complete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.Complete(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.EndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndAbandon(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndComplete(IAsyncResult)
  nameWithType: ReceiveContext.EndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.EndComplete(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.Fault
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Fault()
  nameWithType: ReceiveContext.Fault()
  fullName: System.ServiceModel.Channels.ReceiveContext.Fault()
- uid: System.ServiceModel.Channels.ReceiveContext.Faulted
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Faulted
  nameWithType: ReceiveContext.Faulted
  fullName: System.ServiceModel.Channels.ReceiveContext.Faulted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ServiceModel.Channels.ReceiveContext.Name
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Name
  nameWithType: ReceiveContext.Name
  fullName: System.ServiceModel.Channels.ReceiveContext.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon(TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon(System.Exception,System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon(Exception,TimeSpan)
  nameWithType: ReceiveContext.OnAbandon(Exception,TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnAbandon(Exception,TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon(Exception,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginComplete(TimeSpan,AsyncCallback,Object)
  nameWithType: ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete(System.TimeSpan)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnComplete(TimeSpan)
  nameWithType: ReceiveContext.OnComplete(TimeSpan)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnComplete(TimeSpan)
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndAbandon(IAsyncResult)
  nameWithType: ReceiveContext.OnEndAbandon(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndComplete(IAsyncResult)
  nameWithType: ReceiveContext.OnEndComplete(IAsyncResult)
  fullName: System.ServiceModel.Channels.ReceiveContext.OnEndComplete(IAsyncResult)
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnFaulted()
  nameWithType: ReceiveContext.OnFaulted()
  fullName: System.ServiceModel.Channels.ReceiveContext.OnFaulted()
- uid: System.ServiceModel.Channels.ReceiveContext.State
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: State
  nameWithType: ReceiveContext.State
  fullName: System.ServiceModel.Channels.ReceiveContext.State
- uid: System.ServiceModel.Channels.ReceiveContextState
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReceiveContextState
  nameWithType: ReceiveContextState
  fullName: System.ServiceModel.Channels.ReceiveContextState
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
  fullName: System.ServiceModel.Channels.ReceiveContext.ThisLock
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet(Message,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(Message,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(Message,ReceiveContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.ReceiveContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReceiveContext
  nameWithType: ReceiveContext
  fullName: System.ServiceModel.Channels.ReceiveContext
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.ReceiveContext@)
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet(MessageProperties,ReceiveContext)
  nameWithType: ReceiveContext.TryGet(MessageProperties,ReceiveContext)
  fullName: System.ServiceModel.Channels.ReceiveContext.TryGet(MessageProperties,ReceiveContext)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Channels.ReceiveContext.#ctor*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ReceiveContext
  nameWithType: ReceiveContext.ReceiveContext
- uid: System.ServiceModel.Channels.ReceiveContext.Abandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Abandon
  nameWithType: ReceiveContext.Abandon
- uid: System.ServiceModel.Channels.ReceiveContext.BeginAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginAbandon
  nameWithType: ReceiveContext.BeginAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.BeginComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: BeginComplete
  nameWithType: ReceiveContext.BeginComplete
- uid: System.ServiceModel.Channels.ReceiveContext.Complete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Complete
  nameWithType: ReceiveContext.Complete
- uid: System.ServiceModel.Channels.ReceiveContext.EndAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndAbandon
  nameWithType: ReceiveContext.EndAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.EndComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: EndComplete
  nameWithType: ReceiveContext.EndComplete
- uid: System.ServiceModel.Channels.ReceiveContext.Fault*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: Fault
  nameWithType: ReceiveContext.Fault
- uid: System.ServiceModel.Channels.ReceiveContext.OnAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnAbandon
  nameWithType: ReceiveContext.OnAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginAbandon
  nameWithType: ReceiveContext.OnBeginAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnBeginComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnBeginComplete
  nameWithType: ReceiveContext.OnBeginComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnComplete
  nameWithType: ReceiveContext.OnComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndAbandon*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndAbandon
  nameWithType: ReceiveContext.OnEndAbandon
- uid: System.ServiceModel.Channels.ReceiveContext.OnEndComplete*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnEndComplete
  nameWithType: ReceiveContext.OnEndComplete
- uid: System.ServiceModel.Channels.ReceiveContext.OnFaulted*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: OnFaulted
  nameWithType: ReceiveContext.OnFaulted
- uid: System.ServiceModel.Channels.ReceiveContext.State*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: State
  nameWithType: ReceiveContext.State
- uid: System.ServiceModel.Channels.ReceiveContext.ThisLock*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: ThisLock
  nameWithType: ReceiveContext.ThisLock
- uid: System.ServiceModel.Channels.ReceiveContext.TryGet*
  parent: System.ServiceModel.Channels.ReceiveContext
  isExternal: false
  name: TryGet
  nameWithType: ReceiveContext.TryGet
