### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServicedComponent
  id: ServicedComponent
  children:
  - System.EnterpriseServices.ServicedComponent.#ctor
  - System.EnterpriseServices.ServicedComponent.Activate
  - System.EnterpriseServices.ServicedComponent.CanBePooled
  - System.EnterpriseServices.ServicedComponent.Construct(System.String)
  - System.EnterpriseServices.ServicedComponent.Deactivate
  - System.EnterpriseServices.ServicedComponent.Dispose
  - System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  - System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  langs:
  - csharp
  name: ServicedComponent
  nameWithType: ServicedComponent
  fullName: System.EnterpriseServices.ServicedComponent
  type: Class
  summary: "Representa a classe base de todas as classes de utilizar os serviços do COM+."
  remarks: "Em determinadas condições, uma classe que deriva de ServicedComponent que é executado numa aplicação COM+ pode deixar de responder. Este problema é causado por um impasse de atividade. Atividades podem criar um impasse nas aplicações multithread devido a uma limpeza assíncrona de referências de componente. Para contornar este problema, chame o <xref:System.EnterpriseServices.ServicedComponent.Dispose%2A>método quando concluir o trabalho com objetos derivadas de ServicedComponent.</xref:System.EnterpriseServices.ServicedComponent.Dispose%2A> Para obter mais informações, consulte [http://support.microsoft.com/default.aspx?scid=kb;en-us;327443](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443).      > [!NOTE] > Código de cliente tem de chamar `Dispose` no servidos componentes para garantir o funcionamento correto."
  example:
  - "The following code example demonstrates how to expose a class as a configured COM component.  \n  \n [!code-cpp[EnterpriseServices_Basic#1](~/add/codesnippet/cpp/t-system.enterpriseservi_3_1.cpp)]\n [!code-cs[EnterpriseServices_Basic#1](~/add/codesnippet/csharp/t-system.enterpriseservi_3_1.cs)]  \n  \n To deploy this class as a configured COM component, you must generate a strong key, compile the class as a library, and register the library. These three steps are accomplished by the following three commands.  \n  \n```  \nsn -k Calculator.snk  \ncsc /t:library Calculator.cs  \nregsvcs Calculator.dll  \n```"
  syntax:
    content: 'public abstract class ServicedComponent : ContextBoundObject, IDisposable, System.EnterpriseServices.IRemoteDispatch, System.EnterpriseServices.IServicedComponentInfo'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ContextBoundObject
  implements:
  - System.EnterpriseServices.IRemoteDispatch
  - System.EnterpriseServices.IServicedComponentInfo
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: ServicedComponent()
  nameWithType: ServicedComponent.ServicedComponent()
  fullName: System.EnterpriseServices.ServicedComponent.ServicedComponent()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref> classe."
  remarks: "Este construtor é designado por construtores de classes derivadas para inicializar o estado deste tipo."
  syntax:
    content: public ServicedComponent ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Activate
  id: Activate
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Activate()
  nameWithType: ServicedComponent.Activate()
  fullName: System.EnterpriseServices.ServicedComponent.Activate()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Chamado pela infraestrutura quando o objeto é criado ou atribuído a partir de um conjunto. Este método para adicionar o código de inicialização personalizada para objetos de substituição."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cpp[EnterpriseServices_Pooling#3](~/add/codesnippet/cpp/m-system.enterpriseservi_15_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#3](~/add/codesnippet/csharp/m-system.enterpriseservi_15_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_15_1.vb)]"
  syntax:
    content: protected virtual void Activate ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.CanBePooled
  id: CanBePooled
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: CanBePooled()
  nameWithType: ServicedComponent.CanBePooled()
  fullName: System.EnterpriseServices.ServicedComponent.CanBePooled()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Este método é denominado pela infraestrutura antes do objeto é colocado para trás para o conjunto. Este método votar em indica se o objeto é colocado para trás para o conjunto de substituição."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cpp[EnterpriseServices_Pooling#5](~/add/codesnippet/cpp/m-system.enterpriseservi_19_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#5](~/add/codesnippet/csharp/m-system.enterpriseservi_19_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#5](~/add/codesnippet/visualbasic/m-system.enterpriseservi_19_1.vb)]"
  syntax:
    content: protected virtual bool CanBePooled ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o componente executado pode ser agrupado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.ServicedComponent.CanBePooled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Construct(System.String)
  id: Construct(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Construct(String)
  nameWithType: ServicedComponent.Construct(String)
  fullName: System.EnterpriseServices.ServicedComponent.Construct(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "A infraestrutura de apenas chamado após a chamada do construtor é, passagem da cadeia de construtor. Substituir este método para se utilizar o valor da cadeia de construção."
  syntax:
    content: protected virtual void Construct (string s);
    parameters:
    - id: s
      type: System.String
      description: "A cadeia de construção."
  overload: System.EnterpriseServices.ServicedComponent.Construct*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Deactivate
  id: Deactivate
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Deactivate()
  nameWithType: ServicedComponent.Deactivate()
  fullName: System.EnterpriseServices.ServicedComponent.Deactivate()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Chamado pela infraestrutura quando o objeto está prestes a ser desativada. Adicione o código de finalização personalizado para objetos ao código de compilados just-in-time (JIT) ou o agrupamento do objeto é utilizado este método de substituição."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cpp[EnterpriseServices_Pooling#4](~/add/codesnippet/cpp/m-system.enterpriseservi_27_1.cpp)]\n [!code-cs[EnterpriseServices_Pooling#4](~/add/codesnippet/csharp/m-system.enterpriseservi_27_1.cs)]\n [!code-vb[EnterpriseServices_Pooling#4](~/add/codesnippet/visualbasic/m-system.enterpriseservi_27_1.vb)]"
  syntax:
    content: protected virtual void Deactivate ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.Deactivate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Dispose
  id: Dispose
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Dispose()
  nameWithType: ServicedComponent.Dispose()
  fullName: System.EnterpriseServices.ServicedComponent.Dispose()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref>."
  remarks: "Finalizes o objeto e remove o contexto COM+ associado.       Recomenda-se o liberte explicitamente objetos COM+ e de recursos externos antes do recoletor de lixo liberta o objeto. Se o recurso externo escassos ou dispendiosa, melhorar o desempenho pode ser alcançado ao libertar explicitamente COM+ recursos quando já não são necessárias. Controlo explícito é fornecido pelo método Dispose.       Chamar Dispose permite que os recursos utilizados pelo <xref:System.EnterpriseServices.ServicedComponent>para possível reatribuir porque para outros fins.</xref:System.EnterpriseServices.ServicedComponent> Para obter mais informações sobre Dispose, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.EnterpriseServices.ServicedComponent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ServicedComponent.Dispose(Boolean)
  fullName: System.EnterpriseServices.ServicedComponent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público `Dispose` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.EnterpriseServices.ServicedComponent>referências.</xref:System.EnterpriseServices.ServicedComponent> Este método invoca o `Dispose` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.EnterpriseServices.ServicedComponent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  id: DisposeObject(System.EnterpriseServices.ServicedComponent)
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: DisposeObject(ServicedComponent)
  nameWithType: ServicedComponent.DisposeObject(ServicedComponent)
  fullName: System.EnterpriseServices.ServicedComponent.DisposeObject(ServicedComponent)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Finalizes o objeto e remove a referência do COM+ associada."
  remarks: "É preferível a utilizar o `Dispose` padrão em vez de DisposeObject de design."
  syntax:
    content: public static void DisposeObject (System.EnterpriseServices.ServicedComponent sc);
    parameters:
    - id: sc
      type: System.EnterpriseServices.ServicedComponent
      description: "O objeto a eliminar."
  overload: System.EnterpriseServices.ServicedComponent.DisposeObject*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  id: System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  isEii: true
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Garante que, no contexto COM+, o <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref> do objeto de classe <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;> </xref> bits estiver definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> após uma invocação de métodos remotos."
  remarks: "O <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A>método não pertence à interface publicada do <xref:System.EnterpriseServices.ServicedComponent>classe e não precisa de ser implementado noutro local.</xref:System.EnterpriseServices.ServicedComponent> </xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A>"
  syntax:
    content: string IRemoteDispatch.RemoteDispatchAutoDone (string s);
    parameters:
    - id: s
      type: System.String
      description: "A adicionar."
    return:
      type: System.String
      description: "Uma cadeia convertida a partir de um objeto de resposta que implementa o <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodReturnMessage&quot;> </xref> interface."
  overload: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  id: System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  isEii: true
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Não Certifique-se de que, no contexto COM+, o <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref> do objeto de classe <xref uid=&quot;langword_csharp_done&quot; name=&quot;done&quot; href=&quot;&quot;> </xref> bits estiver definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> após uma invocação de métodos remotos."
  remarks: "O <xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A>método não pertence à interface publicada do <xref:System.EnterpriseServices.ServicedComponent>classe e não precisa de ser implementado noutro local.</xref:System.EnterpriseServices.ServicedComponent> </xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A>"
  syntax:
    content: string IRemoteDispatch.RemoteDispatchNotAutoDone (string s);
    parameters:
    - id: s
      type: System.String
      description: "Uma cadeia de ser convertida para um objeto de pedido que implementa o <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;> </xref> interface."
    return:
      type: System.String
      description: "Uma cadeia convertida a partir de um objeto de resposta que implementa o <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodReturnMessage&quot;> </xref> interface."
  overload: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  id: System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  isEii: true
  parent: System.EnterpriseServices.ServicedComponent
  langs:
  - csharp
  name: System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  nameWithType: ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Obtém determinadas informações sobre o <xref href=&quot;System.EnterpriseServices.ServicedComponent&quot;> </xref> instância de classe."
  remarks: "O [IServicedComponentInfo.GetComponentInfo (Int32, cadeia\\[\\])](assetId:///M:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(System.Int32@,System.String[]@)?qualifyHint=False&autoUpgrade=True) método não pertence à interface publicada do <xref:System.EnterpriseServices.ServicedComponent>classe e não precisa de ser implementado noutro local.</xref:System.EnterpriseServices.ServicedComponent>"
  syntax:
    content: void IServicedComponentInfo.GetComponentInfo (ref int infoMask, out string[] infoArray);
    parameters:
    - id: infoMask
      type: System.Int32
      description: "Uma máscara de bits onde 0x00000001 é uma chave para ID do processo o componente executados, 0x00000002 é uma chave para o ID de domínio de aplicação e 0x00000004 é uma chave para URI de remoto o componente executados."
    - id: infoArray
      type: System.String[]
      description: 'A string array that may contain any or all of the following, in order: the serviced component''s process ID, the application domain ID, and the serviced component''s remote URI.'
  overload: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ContextBoundObject
  isExternal: false
  name: System.ContextBoundObject
- uid: System.EnterpriseServices.ServicedComponent.#ctor
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: ServicedComponent()
  nameWithType: ServicedComponent.ServicedComponent()
  fullName: System.EnterpriseServices.ServicedComponent.ServicedComponent()
- uid: System.EnterpriseServices.ServicedComponent.Activate
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Activate()
  nameWithType: ServicedComponent.Activate()
  fullName: System.EnterpriseServices.ServicedComponent.Activate()
- uid: System.EnterpriseServices.ServicedComponent.CanBePooled
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: CanBePooled()
  nameWithType: ServicedComponent.CanBePooled()
  fullName: System.EnterpriseServices.ServicedComponent.CanBePooled()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ServicedComponent.Construct(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Construct(String)
  nameWithType: ServicedComponent.Construct(String)
  fullName: System.EnterpriseServices.ServicedComponent.Construct(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.ServicedComponent.Deactivate
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Deactivate()
  nameWithType: ServicedComponent.Deactivate()
  fullName: System.EnterpriseServices.ServicedComponent.Deactivate()
- uid: System.EnterpriseServices.ServicedComponent.Dispose
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Dispose()
  nameWithType: ServicedComponent.Dispose()
  fullName: System.EnterpriseServices.ServicedComponent.Dispose()
- uid: System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ServicedComponent.Dispose(Boolean)
  fullName: System.EnterpriseServices.ServicedComponent.Dispose(Boolean)
- uid: System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: DisposeObject(ServicedComponent)
  nameWithType: ServicedComponent.DisposeObject(ServicedComponent)
  fullName: System.EnterpriseServices.ServicedComponent.DisposeObject(ServicedComponent)
- uid: System.EnterpriseServices.ServicedComponent
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponent
  nameWithType: ServicedComponent
  fullName: System.EnterpriseServices.ServicedComponent
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String)
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String)
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  nameWithType: ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
  fullName: System.EnterpriseServices.ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo(Int32,String[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.ServicedComponent.#ctor*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: ServicedComponent
  nameWithType: ServicedComponent.ServicedComponent
- uid: System.EnterpriseServices.ServicedComponent.Activate*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Activate
  nameWithType: ServicedComponent.Activate
- uid: System.EnterpriseServices.ServicedComponent.CanBePooled*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: CanBePooled
  nameWithType: ServicedComponent.CanBePooled
- uid: System.EnterpriseServices.ServicedComponent.Construct*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Construct
  nameWithType: ServicedComponent.Construct
- uid: System.EnterpriseServices.ServicedComponent.Deactivate*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Deactivate
  nameWithType: ServicedComponent.Deactivate
- uid: System.EnterpriseServices.ServicedComponent.Dispose*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: Dispose
  nameWithType: ServicedComponent.Dispose
- uid: System.EnterpriseServices.ServicedComponent.DisposeObject*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: DisposeObject
  nameWithType: ServicedComponent.DisposeObject
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone
  nameWithType: ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone
- uid: System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo*
  parent: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo
  nameWithType: ServicedComponent.System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo
