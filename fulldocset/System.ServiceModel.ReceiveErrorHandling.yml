### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ReceiveErrorHandling
  id: ReceiveErrorHandling
  children:
  - System.ServiceModel.ReceiveErrorHandling.Drop
  - System.ServiceModel.ReceiveErrorHandling.Fault
  - System.ServiceModel.ReceiveErrorHandling.Move
  - System.ServiceModel.ReceiveErrorHandling.Reject
  langs:
  - csharp
  name: ReceiveErrorHandling
  nameWithType: ReceiveErrorHandling
  fullName: System.ServiceModel.ReceiveErrorHandling
  type: Enum
  summary: "An enumeration that specifies handling for a poison message."
  remarks: "A poison message is a message that fails repeated attempts to deliver to the application. This is applicable only when using a Message Queuing (MSMQ)-based binding. The default value is `Fault`, which faults the listener and therefore the ServiceHost. In the case where the service was to fault because of a poison message, a <xref:System.ServiceModel.MsmqPoisonMessageException> is thrown. The exception contains the `LookupId` of the MSMQ message that can be used to move the message out of the way using System.Messaging API. Certain values of the ReceiveErrorHandling enumeration such as `Reject` and `Move` are only available on [!INCLUDE[wv](~/add/includes/wv-md.md)]. You control poison message handling by setting the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> property to one of the values of this enumeration."
  example:
  - "The following configuration code illustrates how to set this property in the service configuration file:  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public enum ReceiveErrorHandling
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ReceiveErrorHandling.Drop
  id: Drop
  parent: System.ServiceModel.ReceiveErrorHandling
  langs:
  - csharp
  name: Drop
  nameWithType: ReceiveErrorHandling.Drop
  fullName: System.ServiceModel.ReceiveErrorHandling.Drop
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "This option drops the poison message. The message never gets delivered to the application. If the message&quot;s TTL had already expired at this point, then the message may appear in the sender&quot;s Dead Letter Queue. If not, the message does not appear anywhere. This option indicates that the user does not really care if the message is lost."
  remarks: 'Applicable platforms: [!INCLUDE[wxp](~/add/includes/wxp-md.md)], [!INCLUDE[ws2003](~/add/includes/ws2003-md.md)], and [!INCLUDE[wv](~/add/includes/wv-md.md)].'
  syntax:
    content: Drop
    return:
      type: System.ServiceModel.ReceiveErrorHandling
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReceiveErrorHandling.Fault
  id: Fault
  parent: System.ServiceModel.ReceiveErrorHandling
  langs:
  - csharp
  name: Fault
  nameWithType: ReceiveErrorHandling.Fault
  fullName: System.ServiceModel.ReceiveErrorHandling.Fault
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "This option sends a fault to the listener that caused the ServiceHost to fault. The message must be removed from the application queue by some external mechanism before the application can continue to process messages from the queue."
  remarks: 'Applicable platforms: Windows XP, Windows Server 2003, and Windows Vista.'
  syntax:
    content: Fault
    return:
      type: System.ServiceModel.ReceiveErrorHandling
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReceiveErrorHandling.Move
  id: Move
  parent: System.ServiceModel.ReceiveErrorHandling
  langs:
  - csharp
  name: Move
  nameWithType: ReceiveErrorHandling.Move
  fullName: System.ServiceModel.ReceiveErrorHandling.Move
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "This moves the poison message to a Poison Message Queue for later processing by a poison message handling application."
  remarks: 'Applicable platforms: [!INCLUDE[wv](~/add/includes/wv-md.md)] only.'
  syntax:
    content: Move
    return:
      type: System.ServiceModel.ReceiveErrorHandling
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReceiveErrorHandling.Reject
  id: Reject
  parent: System.ServiceModel.ReceiveErrorHandling
  langs:
  - csharp
  name: Reject
  nameWithType: ReceiveErrorHandling.Reject
  fullName: System.ServiceModel.ReceiveErrorHandling.Reject
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "This instructs MSMQ to send a negative acknowledgement back to the sending queue manager that the message cannot be received by the application. The message is placed in the sending queue manager&quot;s Dead Letter Queue."
  remarks: 'Applicable platforms: [!INCLUDE[wv](~/add/includes/wv-md.md)] only.'
  syntax:
    content: Reject
    return:
      type: System.ServiceModel.ReceiveErrorHandling
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ReceiveErrorHandling.Drop
  parent: System.ServiceModel.ReceiveErrorHandling
  isExternal: false
  name: Drop
  nameWithType: ReceiveErrorHandling.Drop
  fullName: System.ServiceModel.ReceiveErrorHandling.Drop
- uid: System.ServiceModel.ReceiveErrorHandling
  parent: System.ServiceModel
  isExternal: false
  name: ReceiveErrorHandling
  nameWithType: ReceiveErrorHandling
  fullName: System.ServiceModel.ReceiveErrorHandling
- uid: System.ServiceModel.ReceiveErrorHandling.Fault
  parent: System.ServiceModel.ReceiveErrorHandling
  isExternal: false
  name: Fault
  nameWithType: ReceiveErrorHandling.Fault
  fullName: System.ServiceModel.ReceiveErrorHandling.Fault
- uid: System.ServiceModel.ReceiveErrorHandling.Move
  parent: System.ServiceModel.ReceiveErrorHandling
  isExternal: false
  name: Move
  nameWithType: ReceiveErrorHandling.Move
  fullName: System.ServiceModel.ReceiveErrorHandling.Move
- uid: System.ServiceModel.ReceiveErrorHandling.Reject
  parent: System.ServiceModel.ReceiveErrorHandling
  isExternal: false
  name: Reject
  nameWithType: ReceiveErrorHandling.Reject
  fullName: System.ServiceModel.ReceiveErrorHandling.Reject
