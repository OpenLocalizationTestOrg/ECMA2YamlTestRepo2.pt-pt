### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectorySecurity
  id: ActiveDirectorySecurity
  children:
  - System.DirectoryServices.ActiveDirectorySecurity.#ctor
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  - System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  langs:
  - csharp
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity
  fullName: System.DirectoryServices.ActiveDirectorySecurity
  type: Class
  summary: "Utiliza a camada de segurança do objeto de biblioteca gerida ACL para encapsular a funcionalidade de controlo de acesso para objetos de diretório."
  syntax:
    content: 'public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.DirectoryObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ActiveDirectorySecurity()
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> classe."
  syntax:
    content: public ActiveDirectorySecurity ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectorySecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  id: AccessRightType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém o <xref:System.Type>objeto que representa acesso à direita para este objeto.</xref:System.Type>"
  remarks: "Esta propriedade devolve sempre o <xref:System.Type>do <xref:System.DirectoryServices.ActiveDirectoryRights>enumeração.</xref:System.DirectoryServices.ActiveDirectoryRights> </xref:System.Type>"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do direito de acesso.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Cria um <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> objeto com os valores especificados."
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto, tal como um objeto de NTAccount que é resolvido para um identificador de segurança (SID)."
    - id: accessMask
      type: System.Int32
      description: "Um <xref:System.Int32>máscara de bits que mostra os privilégios de acesso para utilizar.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objeto que indica se são herdadas ACEs.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ACEs são herdadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> objeto que contém sinalizadores de herança num objeto de diretório."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objeto que contém sinalizadores de propagação de herança num objeto de diretório."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Um <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objeto que contém o tipo ACE."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "O <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> que corresponde ao <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objeto."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Cria um <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> objeto com os valores especificados."
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto, tal como um objeto de NTAccount, que é resolvido para um identificador de segurança (SID)."
    - id: accessMask
      type: System.Int32
      description: "Um <xref:System.Int32>máscara de bits que mostra os privilégios de acesso para utilizar.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objeto que indica se são herdadas ACEs.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Se ACEs são herdadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> objeto que contém sinalizadores de herança para um objeto de diretório."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objeto que contém sinalizadores de propagação de herança para um objeto de diretório."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Um <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objeto que contém o tipo ACE."
    - id: objectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objeto que contém o GUID do objeto de diretório.</xref:System.Guid>"
    - id: inheritedObjectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objeto que contém o GUID do objeto de diretório herdado.</xref:System.Guid>"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "O <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> que corresponde ao <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objeto."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  id: AccessRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém o <xref:System.Type>que representa uma regra de acesso para este objeto.</xref:System.Type>"
  remarks: "Esta propriedade devolve sempre <xref:System.Type>de que a <xref:System.DirectoryServices.ActiveDirectoryAccessRule>classe.</xref:System.DirectoryServices.ActiveDirectoryAccessRule> </xref:System.Type>"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>da regra de acesso.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AddAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Adiciona uma regra de acesso para o DACL de um objeto."
  syntax:
    content: public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "O <xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*>objeto ao qual se aplica esta operação.</xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AddAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Adiciona uma regra de auditoria para SACL de um objeto."
  syntax:
    content: public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAuditRule&quot;> </xref> objeto ao qual se aplica esta operação."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Cria um <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> objeto com os valores especificados."
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto, tal como um objeto de NTAccount, que é resolvido para um identificador de segurança (SID)."
    - id: accessMask
      type: System.Int32
      description: "Um <xref:System.Int32>máscara de bits que mostra os privilégios de acesso para utilizar.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objeto que indica se são herdadas ACEs.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ACEs são herdadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> objeto que contém sinalizadores de herança num objeto de diretório."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objeto que contém sinalizadores de propagação de herança num objeto de diretório."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> objeto que contém os sinalizadores de auditoria para este <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objeto."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "O <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> que corresponde ao <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objeto."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Cria um <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> objeto com os valores especificados."
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto, tal como um objeto de NTAccount que é resolvido para um identificador de segurança (SID)."
    - id: accessMask
      type: System.Int32
      description: "Um <xref:System.Int32>máscara de bits que mostra os privilégios de acesso para utilizar.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objeto que indica se são herdadas ACEs.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ACEs são herdadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> objeto que contém sinalizadores de herança num objeto de diretório."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objeto que contém sinalizadores de propagação de herança num objeto de diretório."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> objeto que contém os sinalizadores de auditoria para este <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objeto."
    - id: objectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objeto que contém o Guido do objeto de diretório.</xref:System.Guid>"
    - id: inheritedObjectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objeto que contém o Guido do objeto de diretório herdado.</xref:System.Guid>"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "O <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> que corresponde ao <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objeto."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  id: AuditRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém o <xref:System.Type>que representa uma regra de auditoria para este objeto.</xref:System.Type>"
  remarks: "Esta propriedade devolve sempre <xref:System.Type>de que a <xref:System.DirectoryServices.ActiveDirectoryAuditRule>classe.</xref:System.DirectoryServices.ActiveDirectoryAuditRule> </xref:System.Type>"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>da regra de auditoria.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Aplica-se a modificação especificada para especificado <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>."
  syntax:
    content: public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "O tipo de modificação de controlo de acesso para executar."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para modificar."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se foi modificada com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se foi modificada com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Aplica-se a modificação especificada para especificado <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>."
  syntax:
    content: public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A modificação para aplicar."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para modificar."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se foi modificada com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se foi modificada com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  id: PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de acesso associadas especificado <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "O <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> para o qual pretende remover todas as regras de acesso."
  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Todas as regras de acesso não estão na ordem canónica."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  id: PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras associadas especificado de auditoria <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "O <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> para o qual pretende remover todas as regras de auditoria."
  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Todas as regras de auditoria não estão na ordem canónica."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  id: RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccess(IdentityReference,AccessControlType)
  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de acesso que tenha especificado <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto e <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objeto contra o DACL de um objeto."
  syntax:
    content: public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto, tal como um objeto de NTAccount, que é resolvido para um identificador de segurança (SID)."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Um <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objeto que contém o tipo ACE."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de acesso que contêm a mesma segurança identificador e acesso máscara como a regra de acesso especificado da DACL de um objeto."
  syntax:
    content: public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação for bem sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de acesso que correspondem exatamente a regra de acesso especificado da DACL de um objeto."
  syntax:
    content: public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  id: RemoveAudit(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAudit(IdentityReference)
  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de auditoria que tem especificado <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto a partir do SACL de um objeto."
  syntax:
    content: public void RemoveAudit (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto, tal como um objeto de NTAccount, que é resolvido para um identificador de segurança (SID)."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de auditoria que contêm a mesma segurança identificador e acesso máscara como a lista de controlo de acesso do sistema (SACL) de um objeto de regra de auditoria especificado."
  syntax:
    content: public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a operação for bem sucedida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Remove todas as regras de auditoria que correspondem exatamente a regra de auditoria especificado da SACL de um objeto."
  syntax:
    content: public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ResetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Procura DACL um objeto todas as regras de acesso que contêm um identificador de segurança (SID) que corresponde o SID especificado no <code> rule </code> objeto e substitui todas essas regras com as regras de acesso que estão contidas de acesso a <code> rule </code> objeto."
  remarks: "Quando ResetAccessRule é utilizada para substituir todas as regras de acesso um determinado SID no DACL de um objeto, ambas as regras de permissão e negação tipo são substituídas.  Para substituir regras de permissão apenas sem afetar as regras de negar, ou para substituir as regras de negar sem afetar as regras de permissão, utilize <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>em vez disso.</xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>"
  syntax:
    content: public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: SetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Procura DACL um objeto todas as regras de acesso que contêm um identificador de segurança (SID) que corresponde o SID especificado no <code> rule </code> objeto e um tipo de controlo do acesso (permitir ou negar) que corresponde ao tipo especificado no <code> rule </code> objeto e substitui todas essas regras com as regras de acesso que estão contidas de acesso a <code> rule </code> objeto."
  remarks: "Quando SetAccessRule é utilizada para substituir todas as regras de acesso que corresponde um SID específico e aceder ao tipo de controlo (permitir ou negar) no DACL de um objeto, todas as regras em que o DACL com um SID e o tipo que corresponder ao SID e acesso controlar tipo contido no `rule` objeto são substituídos.  Através deste método, o programador pode substituir quaisquer regras de permissão para esse SID nesse objecto sem afetar as regras de negar existentes ou substitua todas as regras de negação para esse SID nesse objecto sem afetar existentes regras de permissão.  Para substituir todas as regras para esse objeto relativas ao SID especificado, independentemente do tipo, utilize <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>em vez disso.</xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>"
  syntax:
    content: public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: SetAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Substitui todas as regras de auditoria que contêm o mesmo identificador de segurança que a regra de auditoria especificado no SACL de um objeto com a regra de auditoria especificado."
  syntax:
    content: public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objeto ao qual se aplica esta operação."
  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.DirectoryObjectSecurity
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ActiveDirectorySecurity()
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectoryAccessRule
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectoryAccessRule
  nameWithType: ActiveDirectoryAccessRule
  fullName: System.DirectoryServices.ActiveDirectoryAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectoryAuditRule
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectoryAuditRule
  nameWithType: ActiveDirectoryAuditRule
  fullName: System.DirectoryServices.ActiveDirectoryAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccess(IdentityReference,AccessControlType)
  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAudit(IdentityReference)
  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ResetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: ActiveDirectorySecurity.AddAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: ActiveDirectorySecurity.AddAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAccessRule
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAuditRule
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAccessRules
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAuditRules
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccess
  nameWithType: ActiveDirectorySecurity.RemoveAccess
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAudit
  nameWithType: ActiveDirectorySecurity.RemoveAudit
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: ActiveDirectorySecurity.ResetAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: ActiveDirectorySecurity.SetAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: ActiveDirectorySecurity.SetAuditRule
