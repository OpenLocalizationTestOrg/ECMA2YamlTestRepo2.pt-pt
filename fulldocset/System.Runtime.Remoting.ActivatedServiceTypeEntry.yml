### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry
  id: ActivatedServiceTypeEntry
  children:
  - System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)
  - System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)
  - System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes
  - System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType
  - System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString
  langs:
  - csharp
  name: ActivatedServiceTypeEntry
  nameWithType: ActivatedServiceTypeEntry
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry
  type: Class
  summary: "Contém valores para um tipo de objeto registada no final de serviço como um que pode ser activado no pedido do cliente."
  remarks: "The current class is used by the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A?displayProperty=fullName> method, which is the server-side counterpart of the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A?displayProperty=fullName> method. The <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method is used on the server to allow remote activation by clients of specified object types.  \n  \n To create a client-activated object on the server, you must know its <xref:System.Type>, and it must be registered on the server end by using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> method. To obtain a proxy for a new client-activated object, the client must first register a channel with <xref:System.Runtime.Remoting.Channels.ChannelServices> and then activate the object by calling `new` or <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>.  \n  \n To activate a client-activated object type with the `new` keyword, you must first register the object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> you are giving the remoting infrastructure the location of the remote application where `new` attempts to create it. If, on the other hand, you use the <xref:System.Activator.CreateInstance%2A> method to create a new instance of the client-activated object, you must supply the remote application's URL as a parameter, so no prior registration on the client is necessary. To supply the <xref:System.Activator.CreateInstance%2A> method with the URL of the server on which you want to create the object, you must encapsulate the URL in an instance of the <xref:System.Runtime.Remoting.Activation.UrlAttribute> class.  \n  \n For a detailed description of client-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)."
  example:
  - >-
    [!code-cs[ActivatedServiceTypeEntry_ObjectType_Client#1](~/add/codesnippet/csharp/t-system.runtime.remotin_47_1.cs)]
     [!code-cpp[ActivatedServiceTypeEntry_ObjectType_Client#1](~/add/codesnippet/cpp/t-system.runtime.remotin_47_1.cpp)]
     [!code-vb[ActivatedServiceTypeEntry_ObjectType_Client#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_47_1.vb)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ActivatedServiceTypeEntry : System.Runtime.Remoting.TypeEntry
  inheritance:
  - System.Object
  - System.Runtime.Remoting.TypeEntry
  implements: []
  inheritedMembers:
  - System.Runtime.Remoting.TypeEntry.AssemblyName
  - System.Runtime.Remoting.TypeEntry.TypeName
  platform:
  - net462
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  langs:
  - csharp
  name: ActivatedServiceTypeEntry(Type)
  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.ActivatedServiceTypeEntry&quot;> </xref> classe com o <xref:System.Type>.</xref:System.Type> indicado"
  syntax:
    content: public ActivatedServiceTypeEntry (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do tipo de serviço de cliente ativado.</xref:System.Type>"
  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  langs:
  - csharp
  name: ActivatedServiceTypeEntry(String,String)
  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String,String)
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.ActivatedServiceTypeEntry&quot;> </xref> classe com o nome de tipo especificado e o nome da assemblagem."
  syntax:
    content: public ActivatedServiceTypeEntry (string typeName, string assemblyName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo de cliente ativado do tipo de serviço."
    - id: assemblyName
      type: System.String
      description: "O nome de assemblagem do tipo de serviço de cliente ativado."
  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes
  id: ContextAttributes
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  langs:
  - csharp
  name: ContextAttributes
  nameWithType: ActivatedServiceTypeEntry.ContextAttributes
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Obtém ou define os atributos de contexto para o tipo de serviço de cliente ativado."
  remarks: "Atualmente, este indexador não está implementada e operações no mesmo não irão produzir resultados.       Atributos de contexto fornecem as propriedades de contexto que quando adicionados a um contexto pode impor políticas, como a sincronização e transações."
  syntax:
    content: public System.Runtime.Remoting.Contexts.IContextAttribute[] ContextAttributes { get; set; }
    return:
      type: System.Runtime.Remoting.Contexts.IContextAttribute[]
      description: "Os atributos de contexto para o tipo de serviço de cliente ativado."
  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType
  id: ObjectType
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  langs:
  - csharp
  name: ObjectType
  nameWithType: ActivatedServiceTypeEntry.ObjectType
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Obtém o <xref:System.Type>do tipo de serviço de cliente ativado.</xref:System.Type>"
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do tipo de serviço de cliente ativado.</xref:System.Type>"
  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString
  id: ToString
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  langs:
  - csharp
  name: ToString()
  nameWithType: ActivatedServiceTypeEntry.ToString()
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Devolve o nome de tipo e a assemblagem do tipo de serviço de cliente ativado como um <xref:System.String>.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O nome de tipo e a assemblagem do tipo de serviço de cliente ativado como um <xref:System.String>.</xref:System.String>"
  overload: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.TypeEntry
  isExternal: false
  name: System.Runtime.Remoting.TypeEntry
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.Type)
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ActivatedServiceTypeEntry(Type)
  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor(System.String,System.String)
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ActivatedServiceTypeEntry(String,String)
  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String,String)
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ActivatedServiceTypeEntry(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ContextAttributes
  nameWithType: ActivatedServiceTypeEntry.ContextAttributes
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes
- uid: System.Runtime.Remoting.Contexts.IContextAttribute[]
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: IContextAttribute
  nameWithType: IContextAttribute
  fullName: System.Runtime.Remoting.Contexts.IContextAttribute[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Contexts.IContextAttribute
    name: IContextAttribute
    nameWithType: IContextAttribute
    fullName: IContextAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ObjectType
  nameWithType: ActivatedServiceTypeEntry.ObjectType
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ToString()
  nameWithType: ActivatedServiceTypeEntry.ToString()
  fullName: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString()
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.#ctor*
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ActivatedServiceTypeEntry
  nameWithType: ActivatedServiceTypeEntry.ActivatedServiceTypeEntry
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ContextAttributes*
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ContextAttributes
  nameWithType: ActivatedServiceTypeEntry.ContextAttributes
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ObjectType*
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ObjectType
  nameWithType: ActivatedServiceTypeEntry.ObjectType
- uid: System.Runtime.Remoting.ActivatedServiceTypeEntry.ToString*
  parent: System.Runtime.Remoting.ActivatedServiceTypeEntry
  isExternal: false
  name: ToString
  nameWithType: ActivatedServiceTypeEntry.ToString
