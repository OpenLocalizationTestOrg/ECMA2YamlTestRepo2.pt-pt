### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageRelationship
  id: PackageRelationship
  children:
  - System.IO.Packaging.PackageRelationship.Id
  - System.IO.Packaging.PackageRelationship.Package
  - System.IO.Packaging.PackageRelationship.RelationshipType
  - System.IO.Packaging.PackageRelationship.SourceUri
  - System.IO.Packaging.PackageRelationship.TargetMode
  - System.IO.Packaging.PackageRelationship.TargetUri
  langs:
  - csharp
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
  type: Class
  summary: "Represents an association between a source <xref href=&quot;System.IO.Packaging.Package&quot;></xref> or <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref>, and a target object which can be a <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> or external resource."
  remarks: "A PackageRelationship defines an association between a *source* <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> to a *target* <xref:System.IO.Packaging.PackagePart> or external resource.  The source object is considered the &quot;owner&quot; of the relationship.       The PackageRelationship class has no public constructor; instead, two Create methods are used:      |||   |-|-|   |<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|Creates a &quot;package-level&quot; relationship—from a package to a specified part or external resource.|   |<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|Creates a &quot;part-level&quot; relationship—from one part to another part or external resource.|       The source package or part is identified by the <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> property of the relationship.  The target part or external resource is identified by the <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> property of the relationship.       Creating or deleting a relationship does not affect the source or target objects in any way.       If a source object is deleted, all relationships owned by the object are also deleted.       Relationships enable navigation both in a document and between documents.  Relationships also support document object model services, such as linking a <xref:System.Printing.PrintTicket> to specific document elements when printing.       For more information about PackageRelationship elements see Section 1.3 &quot;Relationships&quot; in the *Open Packaging Conventions* specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public class PackageRelationship
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.Id
  id: Id
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: Id
  nameWithType: PackageRelationship.Id
  fullName: System.IO.Packaging.PackageRelationship.Id
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets a string that identifies the relationship."
  remarks: "The Id property string is unique for all relationships owned by the <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> package or part.       The Id is specified in the call to the **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> or **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> method that created the relationship.  After the relationship is created, the Id cannot be changed.       The Id property string is a valid XML identifier. The Id type is xsd:ID and must follow the naming conventions prescribed in the *XML Schema Part 2: Datatypes* specification (see [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/))."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "A string that identifies the relationship."
  overload: System.IO.Packaging.PackageRelationship.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.Package
  id: Package
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: Package
  nameWithType: PackageRelationship.Package
  fullName: System.IO.Packaging.PackageRelationship.Package
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the <xref href=&quot;System.IO.Packaging.Package&quot;></xref> that contains this relationship."
  remarks: "For more information about <xref:System.IO.Packaging.Package> elements see the *Open Packaging Conventions* specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.Package Package { get; }
    return:
      type: System.IO.Packaging.Package
      description: "The package that contains this relationship."
  overload: System.IO.Packaging.PackageRelationship.Package*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.RelationshipType
  id: RelationshipType
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: RelationshipType
  nameWithType: PackageRelationship.RelationshipType
  fullName: System.IO.Packaging.PackageRelationship.RelationshipType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the qualified type name of the relationship."
  remarks: "The RelationshipType is specified in the call to the **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> or **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> method that created the relationship.  After the relationship is created, the RelationshipType cannot be changed.       RelationshipType is defined in a URI-like syntax and identifies the role of the relationship. For example, &quot;http://schemas.microsoft.com/xps/2005/06/required-resource&quot; identifies the relationship to a target part that is a &quot;required-resource.&quot;       **Package-Wide Relationship Types**      |Description|Relationship Type|   |-----------------|-----------------------|   |Core Properties|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|   |Digital Signature|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|   |Digital Signature Certificate|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|   |Digital Signature Origin|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|   |Thumbnail|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|       For more information about package relationship types see Chapter 3 and Appendix I of the *Open Packaging Conventions* specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public string RelationshipType { get; }
    return:
      type: System.String
      description: "The qualified type name of the relationship."
  overload: System.IO.Packaging.PackageRelationship.RelationshipType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.SourceUri
  id: SourceUri
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: SourceUri
  nameWithType: PackageRelationship.SourceUri
  fullName: System.IO.Packaging.PackageRelationship.SourceUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the package or part that owns the relationship."
  remarks: "If the relationship is owned by a <xref:System.IO.Packaging.Package>, SourceUri returns a URI of &quot;/&quot;.       If the relationship is owned by a <xref:System.IO.Packaging.PackagePart>, SourceUri returns the URI of the part."
  syntax:
    content: public Uri SourceUri { get; }
    return:
      type: System.Uri
      description: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the <xref href=&quot;System.IO.Packaging.Package&quot;></xref> or <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> that owns the relationship."
  overload: System.IO.Packaging.PackageRelationship.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.TargetMode
  id: TargetMode
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: TargetMode
  nameWithType: PackageRelationship.TargetMode
  fullName: System.IO.Packaging.PackageRelationship.TargetMode
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets a value that indicates whether the target of the relationship is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> or <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> to the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
  remarks: "The TargetMode is specified in the call to the **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> or **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> method that created the relationship. After the relationship is created the TargetMode cannot be changed.       When TargetMode is <xref:System.IO.Packaging.TargetMode>, the <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> MUST be a relative reference.  For a package-level relationship, the relative reference of the <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> is resolved relative to the pack URI of the source package that owns and contains the relationship.  (Example source package pack URI: &quot;pack://http:,,www.adatum.com,files,datapak.package/&quot;.)  For a part-level relationship, the <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> is resolved relative to the source part that owns the relationship (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> is interpreted relative to <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).       When TargetMode is <xref:System.IO.Packaging.TargetMode>, the <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> can be either a relative reference or a fully qualified URI.  If the <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> is a relative reference, the reference is interpreted as relative to the location of the <xref:System.IO.Packaging.Package> that contains this relationship.       For more information about TargetMode see Section 1.3.3 &quot;Relationship Markup&quot; of the *Open Packaging Conventions* specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.TargetMode TargetMode { get; }
    return:
      type: System.IO.Packaging.TargetMode
      description: "An enumeration value that indicates whether <xref:System.IO.Packaging.PackageRelationship.TargetUri*> references a resource <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> or <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> to the <xref href=&quot;System.IO.Packaging.Package&quot;></xref>."
  overload: System.IO.Packaging.PackageRelationship.TargetMode*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.TargetUri
  id: TargetUri
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: TargetUri
  nameWithType: PackageRelationship.TargetUri
  fullName: System.IO.Packaging.PackageRelationship.TargetUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Gets the [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the target resource of the relationship."
  remarks: "The TargetUri is specified in the call to the **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> or **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> method that created the relationship. After the relationship is created the TargetUri cannot be changed.       When <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> is <xref:System.IO.Packaging.TargetMode>, the TargetUri MUST be a relative reference.  For a package-level relationship, the relative reference of the TargetUri is resolved relative to the pack URI of the source package that owns and contains the relationship.  (Example source package pack URI: &quot;pack://http:,,www.adatum.com,files,datapak.package/&quot;.)  For a part-level relationship, the TargetUri is resolved relative to the source part that owns the relationship (TargetUri is interpreted relative to <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).       When <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> is <xref:System.IO.Packaging.TargetMode>, the TargetUri can be either a relative reference or a fully qualified URI.  If the TargetUri is a relative reference, the reference is interpreted as relative to the location of the <xref:System.IO.Packaging.Package> that contains this relationship.       For more information about TargetUri see Section 1.3.3 &quot;Relationship Markup&quot; of the *Open Packaging Conventions* specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public Uri TargetUri { get; }
    return:
      type: System.Uri
      description: "The [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] of the target resource."
  overload: System.IO.Packaging.PackageRelationship.TargetUri*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.Packaging.PackageRelationship.Id
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Id
  nameWithType: PackageRelationship.Id
  fullName: System.IO.Packaging.PackageRelationship.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageRelationship.Package
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Package
  nameWithType: PackageRelationship.Package
  fullName: System.IO.Packaging.PackageRelationship.Package
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageRelationship.RelationshipType
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: RelationshipType
  nameWithType: PackageRelationship.RelationshipType
  fullName: System.IO.Packaging.PackageRelationship.RelationshipType
- uid: System.IO.Packaging.PackageRelationship.SourceUri
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: SourceUri
  nameWithType: PackageRelationship.SourceUri
  fullName: System.IO.Packaging.PackageRelationship.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageRelationship.TargetMode
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetMode
  nameWithType: PackageRelationship.TargetMode
  fullName: System.IO.Packaging.PackageRelationship.TargetMode
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.PackageRelationship.TargetUri
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetUri
  nameWithType: PackageRelationship.TargetUri
  fullName: System.IO.Packaging.PackageRelationship.TargetUri
- uid: System.IO.Packaging.PackageRelationship.Id*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Id
  nameWithType: PackageRelationship.Id
- uid: System.IO.Packaging.PackageRelationship.Package*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Package
  nameWithType: PackageRelationship.Package
- uid: System.IO.Packaging.PackageRelationship.RelationshipType*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: RelationshipType
  nameWithType: PackageRelationship.RelationshipType
- uid: System.IO.Packaging.PackageRelationship.SourceUri*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: SourceUri
  nameWithType: PackageRelationship.SourceUri
- uid: System.IO.Packaging.PackageRelationship.TargetMode*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetMode
  nameWithType: PackageRelationship.TargetMode
- uid: System.IO.Packaging.PackageRelationship.TargetUri*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetUri
  nameWithType: PackageRelationship.TargetUri
