### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageRelationship
  id: PackageRelationship
  children:
  - System.IO.Packaging.PackageRelationship.Id
  - System.IO.Packaging.PackageRelationship.Package
  - System.IO.Packaging.PackageRelationship.RelationshipType
  - System.IO.Packaging.PackageRelationship.SourceUri
  - System.IO.Packaging.PackageRelationship.TargetMode
  - System.IO.Packaging.PackageRelationship.TargetUri
  langs:
  - csharp
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
  type: Class
  summary: "Representa uma associação entre uma origem <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref>e um objeto de destino que pode ser um <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> ou um recurso externo."
  remarks: "Um PackageRelationship define uma associação entre um *origem* <xref:System.IO.Packaging.Package>ou <xref:System.IO.Packaging.PackagePart>para um *destino* <xref:System.IO.Packaging.PackagePart>ou um recurso externo.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package>  O objeto de origem é considerado o &quot;proprietário&quot; da relação.       A classe de PackageRelationship não tem nenhum construtor público; em vez disso, são utilizados dois métodos de criação: |||   |-|-|   | <xref:System.IO.Packaging.Package>. <xref:System.IO.Packaging.Package.CreateRelationship%2A>| Cria uma relação de &quot;nível de pacote&quot; — partir de um pacote para uma parte especificado ou um recurso externo. |   | <xref:System.IO.Packaging.PackagePart>. <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>| Cria uma relação de &quot;nível de parte&quot; — a partir de uma parte de outra parte ou um recurso externo. |       O pacote de origem ou parte é identificada pelo <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>propriedade da relação.</xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> </xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package.CreateRelationship%2A> </xref:System.IO.Packaging.Package>  A parte de destino ou um recurso externo é identificado pelo <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>propriedade da relação.</xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>       Criar ou eliminar uma relação não afeta os objetos de origem ou destino de qualquer forma.       Se eliminar um objeto de origem, todas as relações detidas pelo objeto também serão eliminadas.       Relações de ativar a navegação num documento e entre documentos.  Relações também suportam serviços de modelo de objeto de documento, como ligar um <xref:System.Printing.PrintTicket>para elementos do documento específico durante a impressão.</xref:System.Printing.PrintTicket>       Para obter mais informações sobre PackageRelationship elementos consulte a secção 1.3 &quot;Relações&quot; no *Open Packaging Conventions* especificação disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public class PackageRelationship
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.Id
  id: Id
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: Id
  nameWithType: PackageRelationship.Id
  fullName: System.IO.Packaging.PackageRelationship.Id
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém uma cadeia que identifica a relação."
  remarks: "A cadeia de propriedade de Id é exclusiva para todas as relações propriedade o <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>pacote ou parte.</xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>       O Id é especificado na chamada para o **pacote**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método que criou a relação.</xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> </xref:System.IO.Packaging.Package.CreateRelationship%2A>  A relação é criada, o Id não pode ser alterado.       A cadeia de propriedade de Id é um identificador XML válido. O tipo de Id é xsd:ID e tem de seguir as convenções de nomenclatura prescritas no *XML esquema parte 2: tipos de dados* especificação (consulte [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/))."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Uma cadeia que identifica a relação."
  overload: System.IO.Packaging.PackageRelationship.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.Package
  id: Package
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: Package
  nameWithType: PackageRelationship.Package
  fullName: System.IO.Packaging.PackageRelationship.Package
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> que contém esta relação."
  remarks: "Para obter mais informações sobre <xref:System.IO.Packaging.Package>elementos consulte o *Open Packaging Conventions* especificação disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</xref:System.IO.Packaging.Package>"
  syntax:
    content: public System.IO.Packaging.Package Package { get; }
    return:
      type: System.IO.Packaging.Package
      description: "O pacote que contém esta relação."
  overload: System.IO.Packaging.PackageRelationship.Package*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.RelationshipType
  id: RelationshipType
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: RelationshipType
  nameWithType: PackageRelationship.RelationshipType
  fullName: System.IO.Packaging.PackageRelationship.RelationshipType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o nome de tipo qualificado da relação."
  remarks: "O RelationshipType é especificada na chamada para o **pacote**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método que criou a relação.</xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> </xref:System.IO.Packaging.Package.CreateRelationship%2A>  A relação é criada, o RelationshipType não pode ser alterada.       RelationshipType está definida uma sintaxe de URI semelhante e identifica a função da relação. Por exemplo, &quot;http://schemas.microsoft.com/xps/2005/06/required-resource&quot; identifica a relação a uma peça de destino que é um &quot;required-resource.&quot;       **Pacote em todo o tipos de relação** | Descrição | Tipo de relação |   |-----------------|-----------------------|   | Principais propriedades | http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties |   | Assinatura digital | http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature |   | Certificado de assinatura digital | http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate |   | Origem de assinatura digital | http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin |   | Miniatura | http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail |       Para obter mais informações sobre a relação de pacote tipos consulte capítulo 3 e apêndice I do *Open Packaging Conventions* especificação disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public string RelationshipType { get; }
    return:
      type: System.String
      description: "O nome de tipo qualificado da relação."
  overload: System.IO.Packaging.PackageRelationship.RelationshipType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.SourceUri
  id: SourceUri
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: SourceUri
  nameWithType: PackageRelationship.SourceUri
  fullName: System.IO.Packaging.PackageRelationship.SourceUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] do pacote ou parte que é proprietário da relação."
  remarks: "Se a relação é propriedade de um <xref:System.IO.Packaging.Package>, SourceUri devolve um URI de &quot;/&quot;.</xref:System.IO.Packaging.Package>       Se a relação é propriedade de um <xref:System.IO.Packaging.PackagePart>SourceUri devolve o URI da parte a.</xref:System.IO.Packaging.PackagePart>"
  syntax:
    content: public Uri SourceUri { get; }
    return:
      type: System.Uri
      description: "O [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] do <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> que é proprietário da relação."
  overload: System.IO.Packaging.PackageRelationship.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.TargetMode
  id: TargetMode
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: TargetMode
  nameWithType: PackageRelationship.TargetMode
  fullName: System.IO.Packaging.PackageRelationship.TargetMode
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém um valor que indica se o destino da relação é <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> para o <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "O TargetMode for especificada na chamada para o **pacote**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método que criou a relação.</xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> </xref:System.IO.Packaging.Package.CreateRelationship%2A> A relação é criada o TargetMode não pode ser alterada.       Quando TargetMode for <xref:System.IO.Packaging.TargetMode>, a <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>tem de ser uma referência relativa.</xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> </xref:System.IO.Packaging.TargetMode>  Para uma relação de nível de pacote, o caminho relativo de referência do <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>é resolvido relativo para o pacote de URI do pacote de origem que é proprietário e contém a relação.</xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>  (Pacote de pacote de origem do exemplo URI: &quot;pack://http:, www.adatum.com, files,datapak.package/&quot;.)  Para uma relação de nível de parte, o <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>é resolvido relativo para a parte de origem que detém a relação (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> é interpretado relativa <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).</xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> </xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> </xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>       Quando TargetMode for <xref:System.IO.Packaging.TargetMode>, a <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>pode ser uma referência relativa ou um URI completamente qualificado.</xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> </xref:System.IO.Packaging.TargetMode>  Se o <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>é uma referência relativa, a referência é interpretada como relativo à localização do <xref:System.IO.Packaging.Package>que contém esta relação.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.PackageRelationship.TargetUri%2A>       Para obter mais informações sobre TargetMode Consulte secção 1.3.3 &quot;Marcação de relação&quot; do *Open Packaging Conventions* especificação disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.TargetMode TargetMode { get; }
    return:
      type: System.IO.Packaging.TargetMode
      description: "Um valor de enumeração que indica se <xref:System.IO.Packaging.PackageRelationship.TargetUri*>faz referência a um recurso <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> para o <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>.</xref:System.IO.Packaging.PackageRelationship.TargetUri*>"
  overload: System.IO.Packaging.PackageRelationship.TargetMode*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageRelationship.TargetUri
  id: TargetUri
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  name: TargetUri
  nameWithType: PackageRelationship.TargetUri
  fullName: System.IO.Packaging.PackageRelationship.TargetUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém o [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] do recurso de destino da relação."
  remarks: "O TargetUri é especificado na chamada para o **pacote**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> método que criou a relação.</xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> </xref:System.IO.Packaging.Package.CreateRelationship%2A> Depois de criar a relação não é possível alterar o TargetUri.       Quando <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>é <xref:System.IO.Packaging.TargetMode>, o TargetUri deve ser uma referência relativa.</xref:System.IO.Packaging.TargetMode> </xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>  Para uma relação de nível de pacote, a referência do TargetUri relativa é resolvida relativo para o pacote de URI do pacote de origem que é proprietário e contém a relação.  (Pacote de pacote de origem do exemplo URI: &quot;pack://http:, www.adatum.com, files,datapak.package/&quot;.)  Para uma relação de nível de parte é resolvido relativo para a parte de origem que detém a relação o TargetUri (TargetUri é interpretado relativa <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).</xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>       Quando <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>é <xref:System.IO.Packaging.TargetMode>, o TargetUri pode ser uma referência relativa ou um URI completamente qualificado.</xref:System.IO.Packaging.TargetMode> </xref:System.IO.Packaging.PackageRelationship.TargetMode%2A>  Se o TargetUri é uma referência relativa, a referência é interpretada como relativo à localização do <xref:System.IO.Packaging.Package>que contém esta relação.</xref:System.IO.Packaging.Package>       Para obter mais informações sobre TargetUri Consulte secção 1.3.3 &quot;Marcação de relação&quot; do *Open Packaging Conventions* especificação disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public Uri TargetUri { get; }
    return:
      type: System.Uri
      description: "O [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] do recurso de destino."
  overload: System.IO.Packaging.PackageRelationship.TargetUri*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.Packaging.PackageRelationship.Id
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Id
  nameWithType: PackageRelationship.Id
  fullName: System.IO.Packaging.PackageRelationship.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageRelationship.Package
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Package
  nameWithType: PackageRelationship.Package
  fullName: System.IO.Packaging.PackageRelationship.Package
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageRelationship.RelationshipType
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: RelationshipType
  nameWithType: PackageRelationship.RelationshipType
  fullName: System.IO.Packaging.PackageRelationship.RelationshipType
- uid: System.IO.Packaging.PackageRelationship.SourceUri
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: SourceUri
  nameWithType: PackageRelationship.SourceUri
  fullName: System.IO.Packaging.PackageRelationship.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageRelationship.TargetMode
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetMode
  nameWithType: PackageRelationship.TargetMode
  fullName: System.IO.Packaging.PackageRelationship.TargetMode
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.PackageRelationship.TargetUri
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetUri
  nameWithType: PackageRelationship.TargetUri
  fullName: System.IO.Packaging.PackageRelationship.TargetUri
- uid: System.IO.Packaging.PackageRelationship.Id*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Id
  nameWithType: PackageRelationship.Id
- uid: System.IO.Packaging.PackageRelationship.Package*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: Package
  nameWithType: PackageRelationship.Package
- uid: System.IO.Packaging.PackageRelationship.RelationshipType*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: RelationshipType
  nameWithType: PackageRelationship.RelationshipType
- uid: System.IO.Packaging.PackageRelationship.SourceUri*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: SourceUri
  nameWithType: PackageRelationship.SourceUri
- uid: System.IO.Packaging.PackageRelationship.TargetMode*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetMode
  nameWithType: PackageRelationship.TargetMode
- uid: System.IO.Packaging.PackageRelationship.TargetUri*
  parent: System.IO.Packaging.PackageRelationship
  isExternal: false
  name: TargetUri
  nameWithType: PackageRelationship.TargetUri
