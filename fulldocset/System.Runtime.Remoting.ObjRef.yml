### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.ObjRef
  id: ObjRef
  children:
  - System.Runtime.Remoting.ObjRef.#ctor
  - System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  - System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.ChannelInfo
  - System.Runtime.Remoting.ObjRef.EnvoyInfo
  - System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  - System.Runtime.Remoting.ObjRef.IsFromThisProcess
  - System.Runtime.Remoting.ObjRef.TypeInfo
  - System.Runtime.Remoting.ObjRef.URI
  langs:
  - csharp
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
  type: Class
  summary: "Stores all relevant information required to generate a proxy in order to communicate with a remote object."
  remarks: "A ObjRef is a serializable representation of an object that extends <xref:System.MarshalByRefObject> (MBR). A ObjRef is used to transfer an object reference across a <xref:System.AppDomain> boundary. Creating a ObjRef for an object is known as marshaling. You can create a ObjRef (marshal a <xref:System.MarshalByRefObject>) either explicitly, by registering the MBR object with the remoting infrastructure (see <xref:System.Runtime.Remoting.RemotingConfiguration> and <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=fullName>), or implicitly, by passing an MBR object as a parameter when calling a remote object. Remoting uses ObjRef objects to store and transmit all the relevant information about the <xref:System.MarshalByRefObject> being remoted.       The ObjRef contains information that describes the <xref:System.Type> and class of the object being marshaled, its exact location, and communication-related information on how to reach the remoting subdivision where the object is located.       After a class implementing <xref:System.MarshalByRefObject> is marshaled, the ObjRef that represents it is transferred through a channel into another application domain, possibly in another process or computer. When the ObjRef is deserialized (see [XML and SOAP Serialization](~/add/includes/ajax-current-ext-md.md)) in the target application domain, it is parsed to create a transparent proxy for the remote MBR object. This operation is known as unmarshaling.       A transparent proxy is an object that provides the illusion that the actual object resides in the client&quot;s space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure. The transparent proxy is itself housed by an instance of a managed run-time class of type <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality needed to forward the operations from the transparent proxy.       A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>. Applications need not distinguish between proxy references and object references. However, service providers dealing with issues such as activation, lifetime management, and transactions need to make such distinctions.       This class makes a link demand and an inheritance demand at the class level. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following code example demonstrates the use of a custom ObjRef. To view the activation code that tests the custom ObjRef, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> method.  \n  \n [!code-cs[CreateObjRef2#1](~/add/codesnippet/csharp/t-system.runtime.remotin_10_1.cs)]\n [!code-vb[CreateObjRef2#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_10_1.vb)]\n [!code-cpp[CreateObjRef2#1](~/add/codesnippet/cpp/t-system.runtime.remotin_10_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class ObjRef : System.Runtime.Serialization.IObjectReference, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.IObjectReference
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef()
  nameWithType: ObjRef.ObjRef()
  fullName: System.Runtime.Remoting.ObjRef.ObjRef()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> class with default values."
  syntax:
    content: public ObjRef ();
    parameters: []
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  id: '#ctor(System.MarshalByRefObject,System.Type)'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef(MarshalByRefObject,Type)
  nameWithType: ObjRef.ObjRef(MarshalByRefObject,Type)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(MarshalByRefObject,Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> class to reference a specified <xref href=&quot;System.MarshalByRefObject&quot;></xref> of a specified <xref:System.Type>."
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/6f2b5e71-8a5c-4754-afa3-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/6f2b5e71-8a5c-4754-afa3-_1.cpp)]
  syntax:
    content: public ObjRef (MarshalByRefObject o, Type requestedType);
    parameters:
    - id: o
      type: System.MarshalByRefObject
      description: "The object that the new <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance will reference."
    - id: requestedType
      type: System.Type
      description: "The <xref:System.Type> of the object that the new <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance will reference."
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ObjRef(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.ObjRef(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> class from serialized data."
  remarks: "This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see <xref:System.Runtime.Serialization.ISerializable>."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/350cf75f-e9f3-40d2-ab87-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/350cf75f-e9f3-40d2-ab87-_1.cpp)]
  syntax:
    content: protected ObjRef (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The object that holds the serialized object data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The contextual information about the source or destination of the exception."
  overload: System.Runtime.Remoting.ObjRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo
  id: ChannelInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
  fullName: System.Runtime.Remoting.ObjRef.ChannelInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Gets or sets the <xref href=&quot;System.Runtime.Remoting.IChannelInfo&quot;></xref> for the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>."
  remarks: "The current property holds information contributed by active channels in the process, when the <xref:System.Runtime.Remoting.ObjRef> is created (see <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A> for details on marshaling). This information can be used by the channels in other processes or application domains to decide whether or not to create a transport sink to communicate with the object represented by the current instance."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_106_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_106_1.cpp)]
  syntax:
    content: public virtual System.Runtime.Remoting.IChannelInfo ChannelInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IChannelInfo
      description: "The <xref href=&quot;System.Runtime.Remoting.IChannelInfo&quot;></xref> interface for the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>."
  overload: System.Runtime.Remoting.ObjRef.ChannelInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo
  id: EnvoyInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
  fullName: System.Runtime.Remoting.ObjRef.EnvoyInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Gets or sets the <xref href=&quot;System.Runtime.Remoting.IEnvoyInfo&quot;></xref> for the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>."
  remarks: "The current property contains a serialized chain of message sinks that gets regenerated when a proxy is created to represent the object. This is used for <xref:System.Runtime.Remoting.Contexts.Context> bound object types only, and represents the groups of objects that provide such run-time services as transactions."
  syntax:
    content: public virtual System.Runtime.Remoting.IEnvoyInfo EnvoyInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IEnvoyInfo
      description: "The <xref href=&quot;System.Runtime.Remoting.IEnvoyInfo&quot;></xref> interface for the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref>."
  overload: System.Runtime.Remoting.ObjRef.EnvoyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Populates a specified <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> with the data needed to serialize the current <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance."
  remarks: "The current method fills the provided <xref:System.Runtime.Serialization.SerializationInfo> with all the data needed to recreate the <xref:System.Runtime.Remoting.ObjRef>.       The current method is an implementation of <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/088e4c86-d393-401b-857d-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/088e4c86-d393-401b-857d-_1.cpp)]
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> to populate with data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The contextual information about the source or destination of the serialization."
  overload: System.Runtime.Remoting.ObjRef.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have serialization formatter permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  id: GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: GetRealObject(StreamingContext)
  nameWithType: ObjRef.GetRealObject(StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetRealObject(StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Returns a reference to the remote object that the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> describes."
  remarks: "The current method is called during the fix-up stage of deserialization."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/37d6be7e-83fc-46ca-8f58-_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/37d6be7e-83fc-46ca-8f58-_1.cpp)]
  syntax:
    content: public virtual object GetRealObject (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The context where the current object resides."
    return:
      type: System.Object
      description: "A reference to the remote object that the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> describes."
  overload: System.Runtime.Remoting.ObjRef.GetRealObject*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "The immediate caller does not have serialization formatter permission."
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  id: IsFromThisAppDomain
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: IsFromThisAppDomain()
  nameWithType: ObjRef.IsFromThisAppDomain()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Returns a Boolean value that indicates whether the current <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance references an object located in the current <xref href=&quot;System.AppDomain&quot;></xref>."
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/m-system.runtime.remotin_86_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/m-system.runtime.remotin_86_1.cpp)]
  syntax:
    content: public bool IsFromThisAppDomain ();
    parameters: []
    return:
      type: System.Boolean
      description: "A Boolean value that indicates whether the current <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance references an object located in the current <xref href=&quot;System.AppDomain&quot;></xref>."
  overload: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess
  id: IsFromThisProcess
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: IsFromThisProcess()
  nameWithType: ObjRef.IsFromThisProcess()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisProcess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Returns a Boolean value that indicates whether the current <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance references an object located in the current process."
  remarks: ''
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/m-system.runtime.remotin_53_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/m-system.runtime.remotin_53_1.cpp)]
  syntax:
    content: public bool IsFromThisProcess ();
    parameters: []
    return:
      type: System.Boolean
      description: "A Boolean value that indicates whether the current <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> instance references an object located in the current process."
  overload: System.Runtime.Remoting.ObjRef.IsFromThisProcess*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.TypeInfo
  id: TypeInfo
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
  fullName: System.Runtime.Remoting.ObjRef.TypeInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Gets or sets the <xref href=&quot;System.Runtime.Remoting.IRemotingTypeInfo&quot;></xref> for the object that the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> describes."
  remarks: "TypeInfo contains detailed information about the type of remote object represented by the current <xref:System.Runtime.Remoting.ObjRef>. The current property contains a list of interfaces that the type implements, as well as the type hierarchy. This information might be used to refine the proxy incrementally to adjust to the client&quot;s view of the remote object&quot;s type."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_18_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_18_1.cpp)]
  syntax:
    content: public virtual System.Runtime.Remoting.IRemotingTypeInfo TypeInfo { get; set; }
    return:
      type: System.Runtime.Remoting.IRemotingTypeInfo
      description: "The <xref href=&quot;System.Runtime.Remoting.IRemotingTypeInfo&quot;></xref> for the object that the <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;></xref> describes."
  overload: System.Runtime.Remoting.ObjRef.TypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.ObjRef.URI
  id: URI
  parent: System.Runtime.Remoting.ObjRef
  langs:
  - csharp
  name: URI
  nameWithType: ObjRef.URI
  fullName: System.Runtime.Remoting.ObjRef.URI
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Gets or sets the URI of the specific object instance."
  remarks: "A URI uniquely identifies the specific object instance."
  example:
  - >-
    [!code-cs[CreateObjRef#1](~/add/codesnippet/csharp/p-system.runtime.remotin_8_1.cs)]
     [!code-cpp[CreateObjRef#1](~/add/codesnippet/cpp/p-system.runtime.remotin_8_1.cpp)]
  syntax:
    content: public virtual string URI { get; set; }
    return:
      type: System.String
      description: "The URI of the specific object instance."
  overload: System.Runtime.Remoting.ObjRef.URI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.ObjRef.#ctor
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef()
  nameWithType: ObjRef.ObjRef()
  fullName: System.Runtime.Remoting.ObjRef.ObjRef()
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.MarshalByRefObject,System.Type)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef(MarshalByRefObject,Type)
  nameWithType: ObjRef.ObjRef(MarshalByRefObject,Type)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(MarshalByRefObject,Type)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.ObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.ObjRef(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.ObjRef(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
  fullName: System.Runtime.Remoting.ObjRef.ChannelInfo
- uid: System.Runtime.Remoting.IChannelInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IChannelInfo
  nameWithType: IChannelInfo
  fullName: System.Runtime.Remoting.IChannelInfo
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
  fullName: System.Runtime.Remoting.ObjRef.EnvoyInfo
- uid: System.Runtime.Remoting.IEnvoyInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IEnvoyInfo
  nameWithType: IEnvoyInfo
  fullName: System.Runtime.Remoting.IEnvoyInfo
- uid: System.Runtime.Remoting.ObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ObjRef.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Remoting.ObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetRealObject(StreamingContext)
  nameWithType: ObjRef.GetRealObject(StreamingContext)
  fullName: System.Runtime.Remoting.ObjRef.GetRealObject(StreamingContext)
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisAppDomain()
  nameWithType: ObjRef.IsFromThisAppDomain()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisProcess()
  nameWithType: ObjRef.IsFromThisProcess()
  fullName: System.Runtime.Remoting.ObjRef.IsFromThisProcess()
- uid: System.Runtime.Remoting.ObjRef.TypeInfo
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
  fullName: System.Runtime.Remoting.ObjRef.TypeInfo
- uid: System.Runtime.Remoting.IRemotingTypeInfo
  parent: System.Runtime.Remoting
  isExternal: false
  name: IRemotingTypeInfo
  nameWithType: IRemotingTypeInfo
  fullName: System.Runtime.Remoting.IRemotingTypeInfo
- uid: System.Runtime.Remoting.ObjRef.URI
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: URI
  nameWithType: ObjRef.URI
  fullName: System.Runtime.Remoting.ObjRef.URI
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.ObjRef.#ctor*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef.ObjRef
- uid: System.Runtime.Remoting.ObjRef.ChannelInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: ChannelInfo
  nameWithType: ObjRef.ChannelInfo
- uid: System.Runtime.Remoting.ObjRef.EnvoyInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: EnvoyInfo
  nameWithType: ObjRef.EnvoyInfo
- uid: System.Runtime.Remoting.ObjRef.GetObjectData*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetObjectData
  nameWithType: ObjRef.GetObjectData
- uid: System.Runtime.Remoting.ObjRef.GetRealObject*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: GetRealObject
  nameWithType: ObjRef.GetRealObject
- uid: System.Runtime.Remoting.ObjRef.IsFromThisAppDomain*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisAppDomain
  nameWithType: ObjRef.IsFromThisAppDomain
- uid: System.Runtime.Remoting.ObjRef.IsFromThisProcess*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: IsFromThisProcess
  nameWithType: ObjRef.IsFromThisProcess
- uid: System.Runtime.Remoting.ObjRef.TypeInfo*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: TypeInfo
  nameWithType: ObjRef.TypeInfo
- uid: System.Runtime.Remoting.ObjRef.URI*
  parent: System.Runtime.Remoting.ObjRef
  isExternal: false
  name: URI
  nameWithType: ObjRef.URI
