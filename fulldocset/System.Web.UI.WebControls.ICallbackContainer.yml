### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ICallbackContainer
  id: ICallbackContainer
  children:
  - System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  langs:
  - csharp
  name: ICallbackContainer
  nameWithType: ICallbackContainer
  fullName: System.Web.UI.WebControls.ICallbackContainer
  type: Interface
  summary: "Defines a method that enables controls to obtain a callback script."
  remarks: "Classes that implement the ICallbackContainer interface provide controls with a script that will initiate a callback to the server. A callback differs from the more common postback in that the page processing for the callback recreates the page without changing state information held by the page. For more information on creating callbacks, see [Implementing Client Callbacks Without Postbacks](~/add/includes/ajax-current-ext-md.md).       Classes that implement the ICallbackContainer interface should also implement the <xref:System.Web.UI.ICallbackEventHandler> interface to handle the events raised by controls."
  syntax:
    content: public interface ICallbackContainer
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  id: GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.ICallbackContainer
  langs:
  - csharp
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates a script for initiating a client callback to a Web server."
  remarks: "Implementations of the GetCallbackScript method should return a script that, when run on the client, will initiate a callback to the Web server.       The `argument` parameter is passed to the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method that handles the callback.       For more information on creating callbacks, see [Implementing Client Callbacks Without Postbacks](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "The control initiating the callback request."
    - id: argument
      type: System.String
      description: "The arguments used to build the callback script."
    return:
      type: System.String
      description: "A script that, when run on a client, will initiate a callback to the Web server."
  overload: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)
  parent: System.Web.UI.WebControls.ICallbackContainer
  isExternal: false
  name: GetCallbackScript(IButtonControl,String)
  nameWithType: ICallbackContainer.GetCallbackScript(IButtonControl,String)
  fullName: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(IButtonControl,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript*
  parent: System.Web.UI.WebControls.ICallbackContainer
  isExternal: false
  name: GetCallbackScript
  nameWithType: ICallbackContainer.GetCallbackScript
