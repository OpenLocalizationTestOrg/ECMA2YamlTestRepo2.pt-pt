### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ConcurrencyMode
  id: ConcurrencyMode
  children:
  - System.ServiceModel.ConcurrencyMode.Multiple
  - System.ServiceModel.ConcurrencyMode.Reentrant
  - System.ServiceModel.ConcurrencyMode.Single
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
  type: Enum
  summary: "Specifies whether a service class supports single-threaded or multi-threaded modes of operation."
  remarks: "ConcurrencyMode is used in conjunction with the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property to specify whether a service class supports single-threaded or multi-threaded modes of operation. A single-threaded operation can be either reentrant or non-reentrant.       The following table shows when [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] permits an operation to be invoked while another one is in progress, depending upon the ConcurrencyMode.      |ConcurrencyMode Value|Can a new operation be invoked?|   |---------------------------|-------------------------------------|   |Single|Never.|   |Reentrant|Only while invoking another service or a callback.|   |Multiple|Always.|"
  example:
  - "The following code example demonstrates the different between using Single, Reentrant, and Multiple. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public enum ConcurrencyMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  id: Multiple
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "The service instance is multi-threaded. No synchronization guarantees are made. Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times."
  syntax:
    content: Multiple
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  id: Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "The service instance is single-threaded and accepts reentrant calls. The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts. Note that the service instance is unlocked only by calling another service over a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] channel. In this case, the called service can reenter the first service via a callback. If the first service is not reentrant, the sequence of calls results in a deadlock. For details, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>."
  syntax:
    content: Reentrant
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Single
  id: Single
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "The service instance is single-threaded and does not accept reentrant calls. If the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*> property is <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;></xref>, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out."
  syntax:
    content: Single
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
- uid: System.ServiceModel.ConcurrencyMode.Single
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
