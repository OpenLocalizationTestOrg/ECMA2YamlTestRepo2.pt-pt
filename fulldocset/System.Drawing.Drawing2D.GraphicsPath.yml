### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.GraphicsPath
  id: GraphicsPath
  children:
  - System.Drawing.Drawing2D.GraphicsPath.#ctor
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  - System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])
  - System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])
  - System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  - System.Drawing.Drawing2D.GraphicsPath.ClearMarkers
  - System.Drawing.Drawing2D.GraphicsPath.Clone
  - System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures
  - System.Drawing.Drawing2D.GraphicsPath.CloseFigure
  - System.Drawing.Drawing2D.GraphicsPath.Dispose
  - System.Drawing.Drawing2D.GraphicsPath.FillMode
  - System.Drawing.Drawing2D.GraphicsPath.Finalize
  - System.Drawing.Drawing2D.GraphicsPath.Flatten
  - System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.GetBounds
  - System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.GetLastPoint
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  - System.Drawing.Drawing2D.GraphicsPath.PathData
  - System.Drawing.Drawing2D.GraphicsPath.PathPoints
  - System.Drawing.Drawing2D.GraphicsPath.PathTypes
  - System.Drawing.Drawing2D.GraphicsPath.PointCount
  - System.Drawing.Drawing2D.GraphicsPath.Reset
  - System.Drawing.Drawing2D.GraphicsPath.Reverse
  - System.Drawing.Drawing2D.GraphicsPath.SetMarkers
  - System.Drawing.Drawing2D.GraphicsPath.StartFigure
  - System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  - System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  - System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)
  - System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  langs:
  - csharp
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
  type: Class
  summary: "Representa uma série de linhas ligadas e curvas. Esta classe não pode ser herdada."
  remarks: "Aplicações utilizam caminhos para desenhar destaca das formas, preencher interiors das formas e regiões de recorte de criar. O motor de gráficos mantém as coordenadas de formas geométrica num caminho no espaço de coordenada do mundo.       Um caminho pode ser composto por qualquer número de números (subpaths). Cada figura está é composta por uma sequência de linhas ligadas e curvas ou um primitivo de forma geométrica. O ponto de partida de uma figura é o primeiro ponto da sequência de linhas ligadas e curvas. O ponto final é o último ponto na sequência. Os pontos inicial e final de uma forma geométrica primitivo são definidos pela especificação primitiva.       A figura que é composta por uma sequência de linhas ligadas e curvas (cujos pontos inicial e final podem ser coincident) é uma figura aberta, a menos que está fechado explicitamente. Uma figura pode ser fechada explicitamente, utilizando o <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A>método, o que fecha a figura atual ao ligar uma linha do ponto final para o ponto de partida.</xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> A figura que constituem um primitivo de forma geométrica é uma figura fechada.       Para fins de preencher e recorte (por exemplo, se um caminho composto utilizando <xref:System.Drawing.Graphics.FillPath%2A>), abra todos os números são fechados, adicionando uma linha do primeiro ponto da figura para o último ponto de.</xref:System.Drawing.Graphics.FillPath%2A>       Uma novo figura implicitamente é iniciada quando é criado um caminho ou quando uma figura está fechada. Uma novo figura explicitamente é criada quando a <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A>método é chamado.</xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A>       Quando um primitivo de forma geométrica é adicionado a um caminho, adiciona uma figura que contém a forma geométrica e também implicitamente inicia uma nova figura. Por conseguinte, há sempre uma figura atual com um caminho. Quando as linhas e curvas são adicionadas a um caminho, é adicionada uma linha implícita conforme necessário para ligar o ponto final de imagem atual para o ponto de partida de novas linhas, curvas para formar uma sequência de linhas ligadas e curvas.       Uma figura tem uma direção que descreve a forma como os segmentos de linhas e de curva são rastreados entre o ponto de partida e o ponto final. A direção está definida na ordem em que as linhas e curvas são adicionados a uma figura ou é definido pela forma geométrica primitiva. A direção é utilizada para determinar os interiors de caminho para recorte e preencher."
  syntax:
    content: 'public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor
  id: '#ctor'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath()
  nameWithType: GraphicsPath.GraphicsPath()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> classe com um <xref:System.Drawing.Drawing2D.GraphicsPath.FillMode*>valor <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref>.</xref:System.Drawing.Drawing2D.GraphicsPath.FillMode*>"
  syntax:
    content: public GraphicsPath ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)
  id: '#ctor(System.Drawing.Drawing2D.FillMode)'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(FillMode)
  nameWithType: GraphicsPath.GraphicsPath(FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(FillMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumeração."
  syntax:
    content: public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "O <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumeração que determina como o interior deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> é preenchido."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])
  id: '#ctor(System.Drawing.Point[],System.Byte[])'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(Point[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> e <xref href=&quot;System.Drawing.Point&quot;> </xref> matrizes."
  syntax:
    content: public GraphicsPath (System.Drawing.Point[] pts, byte[] types);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que define as coordenadas dos pontos que compõem este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
    - id: types
      type: System.Byte[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> elementos de enumeração que especifica o tipo de cada ponto de correspondente a `pts` matriz."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])
  id: '#ctor(System.Drawing.PointF[],System.Byte[])'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(PointF[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> matriz com especificado <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> e <xref href=&quot;System.Drawing.PointF&quot;> </xref> matrizes."
  syntax:
    content: public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que define as coordenadas dos pontos que compõem este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
    - id: types
      type: System.Byte[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> elementos de enumeração que especifica o tipo de cada ponto de correspondente a `pts` matriz."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  id: '#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(Point[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> e <xref href=&quot;System.Drawing.Point&quot;> </xref> matrizes e com especificado <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> elemento da enumeração."
  syntax:
    content: public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: pts
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que define as coordenadas dos pontos que compõem este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
    - id: types
      type: System.Byte[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> elementos de enumeração que especifica o tipo de cada ponto de correspondente a `pts` matriz."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumeração que especifica como interiors das formas deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> estão preenchidos."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  id: '#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)'
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GraphicsPath(PointF[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> matriz com especificado <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> e <xref href=&quot;System.Drawing.PointF&quot;> </xref> matrizes e com especificado <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> elemento da enumeração."
  syntax:
    content: public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);
    parameters:
    - id: pts
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que define as coordenadas dos pontos que compõem este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
    - id: types
      type: System.Byte[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Drawing2D.PathPointType&quot;> </xref> elementos de enumeração que especifica o tipo de cada ponto de correspondente a `pts` matriz."
    - id: fillMode
      type: System.Drawing.Drawing2D.FillMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumeração que especifica como interiors das formas deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> estão preenchidos."
  overload: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  id: AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddArc(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um arco elíptica para a figura atual."
  remarks: "Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior ao início do arco.       O arco é rastreado ao longo de perímetro de elipse tem um vínculo pelo retângulo especificado. O ponto de partida do arco é determinado pelo medir clockwise do eixo x de reticências (na ângulo 0 graus) pelo número de graus no ângulo inicial. O ponto final da mesma forma encontra-se ao medir clockwise a partir do ponto de partida pelo número de graus no o ângulo de abertura. Se ao ângulo de abertura é superior ao 360 graus ou inferior a-360 graus, o arco é swept por exatamente 360 graus ou-360 graus, respetivamente."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a rectangle, from which the arc is defined.  \n  \n-   Creates a path, `myPath`.  \n  \n-   Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.  \n  \n-   Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/add/codesnippet/csharp/e9f8971e-41e5-4f3a-9883-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/add/codesnippet/cpp/e9f8971e-41e5-4f3a-9883-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/add/codesnippet/visualbasic/e9f8971e-41e5-4f3a-9883-_1.vb)]"
  syntax:
    content: public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa os limites retangular da partir da qual foi atribuído o arco de reticências."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial do arco, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e final do arco."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  id: AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(RectangleF,Single,Single)
  nameWithType: GraphicsPath.AddArc(RectangleF,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um arco elíptica para a figura atual."
  remarks: "Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior ao início do arco.       O arco é rastreado ao longo de perímetro de elipse tem um vínculo pelo retângulo especificado. O ponto de partida do arco é determinado pelo medir clockwise do eixo x de reticências (na ângulo 0 graus) pelo número de graus no ângulo inicial. O ponto final da mesma forma encontra-se ao medir clockwise a partir do ponto de partida pelo número de graus no o ângulo de abertura. Se ao ângulo de abertura é superior ao 360 graus ou inferior a-360 graus, o arco é swept por exatamente 360 graus ou-360 graus, respetivamente."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa os limites retangular da partir da qual foi atribuído o arco de reticências."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial do arco, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e final do arco."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  id: AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um arco elíptica para a figura atual."
  remarks: "Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior ao início do arco.       O arco é rastreado ao longo de perímetro de elipse tem um vínculo pelo retângulo especificado. O ponto de partida do arco é determinado pelo medir clockwise do eixo x de reticências (na ângulo 0 graus) pelo número de graus no ângulo inicial. O ponto final da mesma forma encontra-se ao medir clockwise a partir do ponto de partida pelo número de graus no o ângulo de abertura. Se ao ângulo de abertura é superior ao 360 graus ou inferior a-360 graus, o arco é swept por exatamente 360 graus ou-360 graus, respetivamente."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do canto superior esquerdo da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: y
      type: System.Int32
      description: "A coordenada y do canto superior esquerdo da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: width
      type: System.Int32
      description: "A largura da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: height
      type: System.Int32
      description: "A altura da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial do arco, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e final do arco."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddArc(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um arco elíptica para a figura atual."
  remarks: "Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior ao início do arco.       O arco é rastreado ao longo de perímetro de elipse tem um vínculo pelo retângulo especificado. O ponto de partida do arco é determinado pelo medir clockwise do eixo x de reticências (na ângulo 0 graus) pelo número de graus no ângulo inicial. O ponto final da mesma forma encontra-se ao medir clockwise a partir do ponto de partida pelo número de graus no o ângulo de abertura. Se ao ângulo de abertura é superior ao 360 graus ou inferior a-360 graus, o arco é swept por exatamente 360 graus ou-360 graus, respetivamente."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do canto superior esquerdo da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: y
      type: System.Single
      description: "A coordenada y do canto superior esquerdo da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: width
      type: System.Single
      description: "A largura da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: height
      type: System.Single
      description: "A altura da região retangular que define o elipse a partir do qual o arco é desenhado."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial do arco, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e final do arco."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  id: AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(Point,Point,Point,Point)
  nameWithType: GraphicsPath.AddBezier(Point,Point,Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Point,Point,Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva Bézier cubic para a figura atual."
  remarks: "A curva cubic construída a partir do primeiro ponto para o ponto de quarto utilizando os pontos de segundo e terceiro como pontos de controlo.       Se existir um segmento de curva na figura ou uma linha anterior, é adicionada uma linha para ligar o ponto final de segmento anterior para o ponto de partida a curva cubic."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);
    parameters:
    - id: pt1
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto de partida a curva."
    - id: pt2
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o primeiro ponto de controlo para a curva."
    - id: pt3
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o segundo ponto de controlo para a curva."
    - id: pt4
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto final da curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  id: AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(PointF,PointF,PointF,PointF)
  nameWithType: GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva Bézier cubic para a figura atual."
  remarks: "A curva cubic construída a partir do primeiro ponto para o ponto de quarto utilizando os pontos de segundo e terceiro como pontos de controlo.       Se existir um segmento de curva na figura ou uma linha anterior, é adicionada uma linha para ligar o ponto final de segmento anterior para o ponto de partida a curva cubic."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);
    parameters:
    - id: pt1
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto de partida a curva."
    - id: pt2
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o primeiro ponto de controlo para a curva."
    - id: pt3
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o segundo ponto de controlo para a curva."
    - id: pt4
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto final da curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva Bézier cubic para a figura atual."
  remarks: "A curva cubic construída a partir do primeiro ponto para o ponto de quarto utilizando os pontos de segundo e terceiro como pontos de controlo.       Se existir um segmento de curva na figura ou uma linha anterior, é adicionada uma linha para ligar o ponto final de segmento anterior para o ponto de partida a curva cubic."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.  \n  \n-   Closes the curve.  \n  \n-   Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/add/codesnippet/csharp/745fdee9-1ec2-4fd8-a91a-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/add/codesnippet/cpp/745fdee9-1ec2-4fd8-a91a-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/add/codesnippet/visualbasic/745fdee9-1ec2-4fd8-a91a-_1.vb)]"
  syntax:
    content: public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);
    parameters:
    - id: x1
      type: System.Int32
      description: "A coordenada x do ponto de partida da curva."
    - id: y1
      type: System.Int32
      description: "A coordenada y do ponto de partida da curva."
    - id: x2
      type: System.Int32
      description: "A coordenada x do primeiro ponto de controlo para a curva."
    - id: y2
      type: System.Int32
      description: "A coordenada y do primeiro ponto de controlo para a curva."
    - id: x3
      type: System.Int32
      description: "A coordenada x do segundo ponto de controlo para a curva."
    - id: y3
      type: System.Int32
      description: "A coordenada y do segundo ponto de controlo para a curva."
    - id: x4
      type: System.Int32
      description: "A coordenada x do ponto final da curva."
    - id: y4
      type: System.Int32
      description: "A coordenada y do ponto final da curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva Bézier cubic para a figura atual."
  remarks: "A curva cubic construída a partir do primeiro ponto para o ponto de quarto utilizando os pontos de segundo e terceiro como pontos de controlo.       Se existir um segmento de curva na figura ou uma linha anterior, é adicionada uma linha para ligar o ponto final de segmento anterior para o ponto de partida a curva cubic."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);
    parameters:
    - id: x1
      type: System.Single
      description: "A coordenada x do ponto de partida da curva."
    - id: y1
      type: System.Single
      description: "A coordenada y do ponto de partida da curva."
    - id: x2
      type: System.Single
      description: "A coordenada x do primeiro ponto de controlo para a curva."
    - id: y2
      type: System.Single
      description: "A coordenada y do primeiro ponto de controlo para a curva."
    - id: x3
      type: System.Single
      description: "A coordenada x do segundo ponto de controlo para a curva."
    - id: y3
      type: System.Single
      description: "A coordenada y do segundo ponto de controlo para a curva."
    - id: x4
      type: System.Single
      description: "A coordenada x do ponto final da curva."
    - id: y4
      type: System.Single
      description: "A coordenada y do ponto final da curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])
  id: AddBeziers(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBeziers(Point[])
  nameWithType: GraphicsPath.AddBeziers(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma sequência de curvas de Bézier cubic ligadas para a figura atual."
  remarks: "O `points` parâmetro especifica uma matriz de pontos finais e os pontos de controlo das curvas ligados. A primeira curva construída a partir do primeiro ponto para o ponto na quarto o `points` matriz utilizando os pontos de segundo e terceiro como pontos de controlo. Para além do ponto final da curva anterior, cada curva subsequente na sequência tem exatamente três mais pontos: os dois pontos na sequência são pontos de controlo e a terceira é o ponto final para a curva adicionado.       Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior para o ponto de partida a curva cubic primeiro na sequência."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of seven points (representing two connected Bézier curves).  \n  \n-   Creates a path and adds the series of Bézier curve points to the path.  \n  \n-   Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/add/codesnippet/csharp/m-system.drawing.drawing_9_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/add/codesnippet/cpp/m-system.drawing.drawing_9_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_9_1.vb)]"
  syntax:
    content: public void AddBeziers (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem as curvas."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBeziers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])
  id: AddBeziers(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddBeziers(PointF[])
  nameWithType: GraphicsPath.AddBeziers(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma sequência de curvas de Bézier cubic ligadas para a figura atual."
  remarks: "O `points` parâmetro especifica uma matriz de pontos finais e os pontos de controlo das curvas ligados. A primeira curva construída a partir do primeiro ponto para o ponto na quarto o `points` matriz utilizando os pontos de segundo e terceiro como pontos de controlo. Para além do ponto final da curva anterior, cada curva subsequente na sequência tem exatamente três mais pontos: os dois pontos na sequência são pontos de controlo e a terceira é o ponto final para a curva adicionado.       Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior para o ponto de partida a curva cubic primeiro na sequência."
  example:
  - "For an example see:  \n  \n [AddBeziers(Point\\[\\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False)"
  syntax:
    content: public void AddBeziers (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem as curvas."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddBeziers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])
  id: AddClosedCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(Point[])
  nameWithType: GraphicsPath.AddClosedCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva fechada deste caminho. Uma curva de cardinal spline é utilizada porque a curva circula através de cada um dos pontos de na matriz."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais. Se o ponto de primeiro e último ponto de `points` matriz não são o mesmo ponto, a curva está fechada, ligando-se estes dois pontos. Não é possível definir o valor da tensão para que este método e as predefinições para um valor equivalente ao 0,5."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddClosedCurve (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem a curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])
  id: AddClosedCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(PointF[])
  nameWithType: GraphicsPath.AddClosedCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva fechada deste caminho. Uma curva de cardinal spline é utilizada porque a curva circula através de cada um dos pontos de na matriz."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais. Se o ponto de primeiro e último ponto de `points` matriz não são o mesmo ponto, a curva está fechada, ligando-se estes dois pontos. Não é possível definir o valor da tensão para que este método e as predefinições para um valor equivalente ao 0,5."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddClosedCurve (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem a curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)
  id: AddClosedCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(Point[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva fechada deste caminho. Uma curva de cardinal spline é utilizada porque a curva circula através de cada um dos pontos de na matriz."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais. Se o ponto de primeiro e último ponto de `points` matriz não são o mesmo ponto, a curva está fechada, ligando-se estes dois pontos."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of six points (representing a cardinal spline).  \n  \n-   Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).  \n  \n-   Draws the path to screen.  \n  \n Notice that a tension of 0.5 is used.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/add/codesnippet/csharp/1adde1d4-17a0-40d7-b406-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/add/codesnippet/cpp/1adde1d4-17a0-40d7-b406-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/add/codesnippet/visualbasic/1adde1d4-17a0-40d7-b406-_1.vb)]"
  syntax:
    content: public void AddClosedCurve (System.Drawing.Point[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem a curva."
    - id: tension
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica o período em que a curva bends entre pontos, 0, sendo a curva menor (canto sharpest) e 1 que está a ser a curva smoothest."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)
  id: AddClosedCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddClosedCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva fechada deste caminho. Uma curva de cardinal spline é utilizada porque a curva circula através de cada um dos pontos de na matriz."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais. Se o ponto de primeiro e último ponto de `points` matriz não são o mesmo ponto, a curva está fechada, ligando-se estes dois pontos."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddClosedCurve (System.Drawing.PointF[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem a curva."
    - id: tension
      type: System.Single
      description: "Um valor entre 0 e 1 que especifica o período em que a curva bends entre pontos, 0, sendo a curva menor (canto sharpest) e 1 que está a ser a curva smoothest."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])
  id: AddCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(Point[])
  nameWithType: GraphicsPath.AddCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva spline para a figura atual. Uma curva de cardinal spline é utilizada porque a curva circula através de cada um dos pontos de na matriz."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem a curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])
  id: AddCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(PointF[])
  nameWithType: GraphicsPath.AddCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva spline para a figura atual. Uma curva de cardinal spline é utilizada porque a curva circula através de cada um dos pontos de na matriz."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais."
  example:
  - For an example, see [AddCurve(Point\[\], Int32, Int32, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem a curva."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)
  id: AddCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(Point[],Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva spline para a figura atual."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais."
  example:
  - For an example, see [AddClosedCurve(Point\[\], Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.Point[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem a curva."
    - id: tension
      type: System.Single
      description: "Um valor que especifica o período em que a curva bends entre pontos de controlo. Os valores maiores que 1 produzem resultados imprevisíveis."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)
  id: AddCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva spline para a figura atual."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais."
  example:
  - For an example, see [AddCurve(Point\[\], Int32, Int32, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.PointF[] points, float tension);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem a curva."
    - id: tension
      type: System.Single
      description: "Um valor que especifica o período em que a curva bends entre pontos de controlo. Os valores maiores que 1 produzem resultados imprevisíveis."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  id: AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(Point[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva spline para a figura atual."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais.       A curva começa com o ponto na matriz especificada pelo `offset` parâmetro e inclui o número de pontos (segmentos) especificado pelo `numberOfSegments`."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of four points (representing a cardinal spline).  \n  \n-   Creates a path and using the array of points, adds the curve to the path.  \n  \n-   Draws the path to the screen.  \n  \n Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/add/codesnippet/csharp/ceb7a1f2-0262-4010-ad5e-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/add/codesnippet/cpp/ceb7a1f2-0262-4010-ad5e-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/add/codesnippet/visualbasic/ceb7a1f2-0262-4010-ad5e-_1.vb)]"
  syntax:
    content: public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem a curva."
    - id: offset
      type: System.Int32
      description: "O índice do elemento no `points` matriz que é utilizado como o primeiro ponto de curva."
    - id: numberOfSegments
      type: System.Int32
      description: "Um valor que especifica o período em que a curva bends entre pontos de controlo. Os valores maiores que 1 produzem resultados imprevisíveis."
    - id: tension
      type: System.Single
      description: "Um valor que especifica o período em que a curva bends entre pontos de controlo. Os valores maiores que 1 produzem resultados imprevisíveis."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  id: AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddCurve(PointF[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma curva spline para a figura atual."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais.       A curva começa com o ponto na matriz especificada pelo `offset`e inclui o número de pontos (segmentos) especificado pelo `numberOfSegments`."
  example:
  - For an example, see [AddCurve(Point\[\], Int32, Int32, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem a curva."
    - id: offset
      type: System.Int32
      description: "O índice do elemento no `points` matriz que é utilizado como o primeiro ponto de curva."
    - id: numberOfSegments
      type: System.Int32
      description: "O número de segmentos para desenhar a curva. Um segmento pode considerar como uma linha ligar dois pontos."
    - id: tension
      type: System.Single
      description: "Um valor que especifica o período em que a curva bends entre pontos de controlo. Os valores maiores que 1 produzem resultados imprevisíveis."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)
  id: AddEllipse(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(Rectangle)
  nameWithType: GraphicsPath.AddEllipse(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um elipse para o caminho atual."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n Creates a bounding rectangle that defines an ellipse.  \n  \n Creates a path and adds the ellipse to the path.  \n  \n Draws the path to screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/add/codesnippet/csharp/m-system.drawing.drawing_15_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/add/codesnippet/cpp/m-system.drawing.drawing_15_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.drawing_15_1.vb)]"
  syntax:
    content: public void AddEllipse (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa o retângulo delimitador que define elipse."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)
  id: AddEllipse(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(RectangleF)
  nameWithType: GraphicsPath.AddEllipse(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um elipse para o caminho atual."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddEllipse (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo delimitador que define elipse."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um elipse para o caminho atual."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddEllipse (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do canto superior esquerdo do retângulo delimitador que define elipse."
    - id: y
      type: System.Int32
      description: "A coordenada y do canto superior esquerdo do retângulo delimitador que define elipse."
    - id: width
      type: System.Int32
      description: "A largura do retângulo delimitador que define elipse."
    - id: height
      type: System.Int32
      description: "A altura do retângulo delimitador que define elipse."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)
  id: AddEllipse(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddEllipse(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddEllipse(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um elipse para o caminho atual."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddEllipse (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do canto superior esquerdo do retângulo delimitador que define elipse."
    - id: y
      type: System.Single
      description: "A coordenada y do canto superior esquerdo do retângulo delimitador que define elipse."
    - id: width
      type: System.Single
      description: "A largura do retângulo delimitador que define elipse."
    - id: height
      type: System.Single
      description: "A altura do retângulo delimitador que define elipse."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)
  id: AddLine(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(Point,Point)
  nameWithType: GraphicsPath.AddLine(Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Point,Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um segmento de linha para esta <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Este método adiciona o segmento de linha definido pelos pontos de especificado ao fim do <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> Se não existirem linhas anteriores ou de curvas do <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para ligar o último ponto no caminho para o primeiro ponto de segmento de linha nova.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);
    parameters:
    - id: pt1
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto de partida da linha."
    - id: pt2
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto final da linha."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)
  id: AddLine(System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(PointF,PointF)
  nameWithType: GraphicsPath.AddLine(PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(PointF,PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um segmento de linha para esta <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Este método adiciona o segmento de linha definido pelos pontos de especificado ao fim do <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> Se não existirem linhas anteriores ou de curvas do <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para ligar o último ponto no caminho para o primeiro ponto de segmento de linha nova.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);
    parameters:
    - id: pt1
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto de partida da linha."
    - id: pt2
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto final da linha."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um segmento de linha para a figura atual."
  remarks: "Este método adiciona o segmento de linha definido pelos pontos de especificado ao fim da figura atual. Se não existirem linhas anteriores ou de curvas do <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para ligar o último ponto no caminho para o primeiro ponto de segmento de linha nova.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/add/codesnippet/csharp/d1f4d9ed-8464-43dc-8776-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/add/codesnippet/cpp/d1f4d9ed-8464-43dc-8776-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/add/codesnippet/visualbasic/d1f4d9ed-8464-43dc-8776-_1.vb)]"
  syntax:
    content: public void AddLine (int x1, int y1, int x2, int y2);
    parameters:
    - id: x1
      type: System.Int32
      description: "A coordenada x do ponto de partida da linha."
    - id: y1
      type: System.Int32
      description: "A coordenada y do ponto de partida da linha."
    - id: x2
      type: System.Int32
      description: "A coordenada x do ponto final da linha."
    - id: y2
      type: System.Int32
      description: "A coordenada y do ponto final da linha."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)
  id: AddLine(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLine(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddLine(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta um segmento de linha para esta <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Este método adiciona o segmento de linha definido pelos pontos de especificado ao fim do <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> Se não existirem linhas anteriores ou de curvas do <xref:System.Drawing.Drawing2D.GraphicsPath>, um segmento de linha é desenhado para ligar o último ponto no caminho para o primeiro ponto de segmento de linha nova.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.
  syntax:
    content: public void AddLine (float x1, float y1, float x2, float y2);
    parameters:
    - id: x1
      type: System.Single
      description: "A coordenada x do ponto de partida da linha."
    - id: y1
      type: System.Single
      description: "A coordenada y do ponto de partida da linha."
    - id: x2
      type: System.Single
      description: "A coordenada x do ponto final da linha."
    - id: y2
      type: System.Single
      description: "A coordenada y do ponto final da linha."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])
  id: AddLines(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLines(Point[])
  nameWithType: GraphicsPath.AddLines(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta uma série de segmentos de linha ligada ao fim deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior do ponto de partida da linha. O `points` parâmetro especifica uma matriz de pontos finais. As duas primeiras especifique a primeira linha. Cada ponto adicional Especifica o ponto final de um segmento de linha cujo ponto de partida é o ponto final da linha anterior."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of four points that describe a triangle.  \n  \n-   Creates a path and adds the array of lines.  \n  \n-   Draws the path to screen.  \n  \n Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/add/codesnippet/csharp/m-system.drawing.drawing_24_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/add/codesnippet/cpp/m-system.drawing.drawing_24_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/add/codesnippet/visualbasic/m-system.drawing.drawing_24_1.vb)]"
  syntax:
    content: public void AddLines (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que representa os pontos que definem os segmentos de linha para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLines*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])
  id: AddLines(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddLines(PointF[])
  nameWithType: GraphicsPath.AddLines(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta uma série de segmentos de linha ligada ao fim deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Se não existirem linhas anteriores ou curvas na figura, é adicionada uma linha para ligar o ponto final de segmento anterior do ponto de partida da linha. O `points` parâmetro especifica uma matriz de pontos finais. As duas primeiras especifique a primeira linha. Cada ponto adicional Especifica o ponto final de um segmento de linha cujo ponto de partida é o ponto final da linha anterior."
  example:
  - For an example, see [AddLines(Point\[\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddLines (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que representa os pontos que definem os segmentos de linha para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddLines*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  id: AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPath(GraphicsPath,Boolean)
  nameWithType: GraphicsPath.AddPath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPath(GraphicsPath,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Acrescenta especificado <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> para este caminho."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates two paths one a right-side-up triangle and the other an up-side-down triangle.  \n  \n-   Adds the second path to the first.  \n  \n-   Draws the resultant path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/add/codesnippet/csharp/4c3ef7f8-9fc4-4762-b79e-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/add/codesnippet/cpp/4c3ef7f8-9fc4-4762-b79e-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/add/codesnippet/visualbasic/4c3ef7f8-9fc4-4762-b79e-_1.vb)]"
  syntax:
    content: public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);
    parameters:
    - id: addingPath
      type: System.Drawing.Drawing2D.GraphicsPath
      description: "The <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;></xref> to add."
    - id: connect
      type: System.Boolean
      description: "Um valor booleano que especifica se a primeira figura no caminho adicionado é parte a última figura neste caminho. Um valor de <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Especifica que (se for possível) a figura primeiro no caminho adicionado faz parte do último figura neste caminho. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Especifica que a primeira figura no caminho adicionado está separada do último figura neste caminho."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPath*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  id: AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPie(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddPie(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Rectangle,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona o contorno de uma forma de gráfico circular para este caminho."
  remarks: "A forma circular é definida por um contorno parcial de uma elipse e as duas linhas radiais intersect os pontos finais de contorno parcial. O contorno parcial começa com o `startAngle` (medido clockwise do eixo x) e termina no `startAngle`  +  `sweepAngle`."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa o retângulo delimitador que define o elipse a partir do qual o gráfico circular é desenhado."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial para a secção do gráfico circular, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e o fim da secção de gráfico circular, medido em graus no sentido horário de `startAngle`."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  id: AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPie(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona o contorno de uma forma de gráfico circular para este caminho."
  remarks: "A forma circular é definida por um contorno parcial de uma elipse e as duas linhas radiais intersect os pontos finais de contorno parcial. O contorno parcial começa com o `startAngle` (medido clockwise do eixo x) e termina no `startAngle`  +  `sweepAngle`."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a graphics path, adds the pie shape, and then draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/add/codesnippet/csharp/b8813bf5-5d25-47d2-b607-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/add/codesnippet/cpp/b8813bf5-5d25-47d2-b607-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/add/codesnippet/visualbasic/b8813bf5-5d25-47d2-b607-_1.vb)]"
  syntax:
    content: public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do canto superior esquerdo do retângulo delimitador que define a partir do qual o gráfico circular é desenhado de reticências."
    - id: y
      type: System.Int32
      description: "A coordenada y do canto superior esquerdo do retângulo delimitador que define a partir do qual o gráfico circular é desenhado de reticências."
    - id: width
      type: System.Int32
      description: "A largura do retângulo delimitador que define o elipse a partir do qual o gráfico circular é desenhado."
    - id: height
      type: System.Int32
      description: "A altura do retângulo delimitador que define o elipse a partir do qual o gráfico circular é desenhado."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial para a secção do gráfico circular, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e o fim da secção de gráfico circular, medido em graus no sentido horário de `startAngle`."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPie(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona o contorno de uma forma de gráfico circular para este caminho."
  remarks: "A forma circular é definida por um contorno parcial de uma elipse e as duas linhas radiais intersect os pontos finais de contorno parcial. O contorno parcial começa com o `startAngle` (medido clockwise do eixo x) e termina no `startAngle`  +  `sweepAngle`."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.
  syntax:
    content: public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do canto superior esquerdo do retângulo delimitador que define a partir do qual o gráfico circular é desenhado de reticências."
    - id: y
      type: System.Single
      description: "A coordenada y do canto superior esquerdo do retângulo delimitador que define a partir do qual o gráfico circular é desenhado de reticências."
    - id: width
      type: System.Single
      description: "A largura do retângulo delimitador que define o elipse a partir do qual o gráfico circular é desenhado."
    - id: height
      type: System.Single
      description: "A altura do retângulo delimitador que define o elipse a partir do qual o gráfico circular é desenhado."
    - id: startAngle
      type: System.Single
      description: "O ângulo inicial para a secção do gráfico circular, medido em graus no sentido horário do eixo x."
    - id: sweepAngle
      type: System.Single
      description: "O ângulo entre `startAngle` e o fim da secção de gráfico circular, medido em graus no sentido horário de `startAngle`."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])
  id: AddPolygon(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPolygon(Point[])
  nameWithType: GraphicsPath.AddPolygon(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(Point[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um polígono para este caminho."
  remarks: "Os pontos de `points` matriz especificar vértices de um polígono. Se o primeiro ponto da matriz não é o mesmo que o último ponto, os dois pontos estão ligados ao fechar o polígono."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates an array of points that defines a polygon.  \n  \n-   Creates a path and adds the polygon to the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/add/codesnippet/csharp/m-system.drawing.drawing_14_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/add/codesnippet/cpp/m-system.drawing.drawing_14_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/add/codesnippet/visualbasic/m-system.drawing.drawing_14_1.vb)]"
  syntax:
    content: public void AddPolygon (System.Drawing.Point[] points);
    parameters:
    - id: points
      type: System.Drawing.Point[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Point&quot;> </xref> estruturas que define o polígono para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPolygon*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])
  id: AddPolygon(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddPolygon(PointF[])
  nameWithType: GraphicsPath.AddPolygon(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(PointF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um polígono para este caminho."
  remarks: "Os pontos de `points` matriz especificar vértices de um polígono. Se o primeiro ponto da matriz não é o mesmo que o último ponto, os dois pontos estão ligados ao fechar o polígono."
  example:
  - For an example, see [AddPolygon(Point\[\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddPolygon (System.Drawing.PointF[] points);
    parameters:
    - id: points
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que define o polígono para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddPolygon*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)
  id: AddRectangle(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangle(Rectangle)
  nameWithType: GraphicsPath.AddRectangle(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um retângulo para este caminho."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Creates a rectangle and adds the rectangle to the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/add/codesnippet/csharp/m-system.drawing.drawing_13_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/add/codesnippet/cpp/m-system.drawing.drawing_13_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/add/codesnippet/visualbasic/m-system.drawing.drawing_13_1.vb)]"
  syntax:
    content: public void AddRectangle (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa o retângulo para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)
  id: AddRectangle(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangle(RectangleF)
  nameWithType: GraphicsPath.AddRectangle(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona um retângulo para este caminho."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.
  syntax:
    content: public void AddRectangle (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])
  id: AddRectangles(System.Drawing.Rectangle[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangles(Rectangle[])
  nameWithType: GraphicsPath.AddRectangles(Rectangle[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(Rectangle[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma série de retângulos para este caminho."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Creates an array of rectangles and adds the rectangles to the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/add/codesnippet/csharp/0c74854d-da2e-4c90-801f-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/add/codesnippet/cpp/0c74854d-da2e-4c90-801f-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/add/codesnippet/visualbasic/0c74854d-da2e-4c90-801f-_1.vb)]"
  syntax:
    content: public void AddRectangles (System.Drawing.Rectangle[] rects);
    parameters:
    - id: rects
      type: System.Drawing.Rectangle[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> estruturas que representa os retângulos para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])
  id: AddRectangles(System.Drawing.RectangleF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddRectangles(RectangleF[])
  nameWithType: GraphicsPath.AddRectangles(RectangleF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(RectangleF[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma série de retângulos para este caminho."
  remarks: ''
  example:
  - For an example, see [AddRectangles(Rectangle\[\])](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void AddRectangles (System.Drawing.RectangleF[] rects);
    parameters:
    - id: rects
      type: System.Drawing.RectangleF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> estruturas que representa os retângulos para adicionar."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddRectangles*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma cadeia de texto para este caminho."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Sets up string and font arguments.  \n  \n-   Adds the string to the path.  \n  \n-   Draws the string to the screen.  \n  \n There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer. The AddString method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle> and <xref:System.Drawing.FontStyle>). Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method. If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/add/codesnippet/csharp/6c72550e-791b-4037-846e-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/add/codesnippet/cpp/6c72550e-791b-4037-846e-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/add/codesnippet/visualbasic/6c72550e-791b-4037-846e-_1.vb)]"
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>A adicionar.</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> que representa o nome do tipo de letra com a qual o teste é desenhado."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> enumeração que representa o estilo obter informações sobre o texto (negrito, itálico e outros). Isto deve ser convertido como um valor inteiro (consulte o código de exemplo posteriormente nesta secção)."
    - id: emSize
      type: System.Single
      description: "A altura da caixa de quadrado de IT bounds o caráter."
    - id: origin
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto em que o texto começa."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> que especifica informações, tais como o espaçamento de linha e o alinhamento de formatação de texto."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma cadeia de texto para este caminho."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>A adicionar.</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> que representa o nome do tipo de letra com a qual o teste é desenhado."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> enumeração que representa o estilo obter informações sobre o texto (negrito, itálico e outros). Isto deve ser convertido como um valor inteiro (consulte o código de exemplo posteriormente nesta secção)."
    - id: emSize
      type: System.Single
      description: "A altura da caixa de quadrado de IT bounds o caráter."
    - id: origin
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto em que o texto começa."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> que especifica informações, tais como o espaçamento de linha e o alinhamento de formatação de texto."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma cadeia de texto para este caminho."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>A adicionar.</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> que representa o nome do tipo de letra com a qual o teste é desenhado."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> enumeração que representa o estilo obter informações sobre o texto (negrito, itálico e outros). Isto deve ser convertido como um valor inteiro (consulte o código de exemplo posteriormente nesta secção)."
    - id: emSize
      type: System.Single
      description: "A altura da caixa de quadrado de IT bounds o caráter."
    - id: layoutRect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa o retângulo bounds o texto."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> que especifica informações, tais como o espaçamento de linha e o alinhamento de formatação de texto."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  id: AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma cadeia de texto para este caminho."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.
  syntax:
    content: public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>A adicionar.</xref:System.String>"
    - id: family
      type: System.Drawing.FontFamily
      description: "A <xref href=&quot;System.Drawing.FontFamily&quot;> </xref> que representa o nome do tipo de letra com a qual o teste é desenhado."
    - id: style
      type: System.Int32
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref> enumeração que representa o estilo obter informações sobre o texto (negrito, itálico e outros). Isto deve ser convertido como um valor inteiro (consulte o código de exemplo posteriormente nesta secção)."
    - id: emSize
      type: System.Single
      description: "A altura da caixa de quadrado de IT bounds o caráter."
    - id: layoutRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo bounds o texto."
    - id: format
      type: System.Drawing.StringFormat
      description: "A <xref href=&quot;System.Drawing.StringFormat&quot;> </xref> que especifica informações, tais como o espaçamento de linha e o alinhamento de formatação de texto."
  overload: System.Drawing.Drawing2D.GraphicsPath.AddString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers
  id: ClearMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: ClearMarkers()
  nameWithType: GraphicsPath.ClearMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Limpa todos os marcadores a partir deste caminho."
  remarks: "Utilize o <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A>método para criar um marcador no local atual no <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath> </xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> Utilize o <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>método para iterar através de marcadores existentes num caminho.</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>       Marcadores são utilizados para separar os grupos de subpaths. Um ou mais subpaths podem ser contidos entre duas marcadores."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several objects to the path.  \n  \n-   Adds markers to the path.  \n  \n-   Clears all markers from the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/add/codesnippet/csharp/m-system.drawing.drawing_21_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/add/codesnippet/cpp/m-system.drawing.drawing_21_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/add/codesnippet/visualbasic/m-system.drawing.drawing_21_1.vb)]"
  syntax:
    content: public void ClearMarkers ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Clone()
  nameWithType: GraphicsPath.Clone()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Cria uma cópia deste caminho exata."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several figures to the path.  \n  \n-   Draws the path to the screen.  \n  \n-   Clones a copy of that path.  \n  \n-   Draws the new path to the screen.  \n  \n Notice that the call the Clone method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/add/codesnippet/csharp/m-system.drawing.drawing_2_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/add/codesnippet/cpp/m-system.drawing.drawing_2_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/add/codesnippet/visualbasic/m-system.drawing.drawing_2_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "O <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> este método cria, converter como um objeto."
  overload: System.Drawing.Drawing2D.GraphicsPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures
  id: CloseAllFigures
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: CloseAllFigures()
  nameWithType: GraphicsPath.CloseAllFigures()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Fecha todos os abra figuras neste caminho e inicia uma nova figura. Fecha cada figura aberta ao ligar uma linha do seu ponto final ao ponto de partida."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several open figures to the path.  \n  \n-   Closes all figures in the path.  \n  \n-   Draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/add/codesnippet/csharp/m-system.drawing.drawing_23_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/add/codesnippet/cpp/m-system.drawing.drawing_23_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/add/codesnippet/visualbasic/m-system.drawing.drawing_23_1.vb)]"
  syntax:
    content: public void CloseAllFigures ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseFigure
  id: CloseFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: CloseFigure()
  nameWithType: GraphicsPath.CloseFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseFigure()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Fecha a figura atual e inicia uma nova figura. Se a figura atual contém uma sequência de linhas ligadas e curvas, o método fecha o ciclo, ligando-se uma linha do ponto final para o ponto de partida."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle. The path is then drawn to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/add/codesnippet/csharp/m-system.drawing.drawing_19_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/add/codesnippet/cpp/m-system.drawing.drawing_19_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/add/codesnippet/visualbasic/m-system.drawing.drawing_19_1.vb)]"
  syntax:
    content: public void CloseFigure ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.CloseFigure*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Dispose
  id: Dispose
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Dispose()
  nameWithType: GraphicsPath.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Versões de todos os recursos utilizados por este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Chamar Dispose permite que os recursos utilizados por este <xref:System.Drawing.Drawing2D.GraphicsPath>para possível reatribuir porque para outros fins.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.FillMode
  id: FillMode
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: FillMode
  nameWithType: GraphicsPath.FillMode
  fullName: System.Drawing.Drawing2D.GraphicsPath.FillMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém ou define um <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumeração que determina como os interiors das formas deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> estão preenchidos."
  syntax:
    content: public System.Drawing.Drawing2D.FillMode FillMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.FillMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> enumeração que especifica como interiors das formas deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> estão preenchidos."
  overload: System.Drawing.Drawing2D.GraphicsPath.FillMode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Finalize
  id: Finalize
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Finalize()
  nameWithType: GraphicsPath.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Permite que um objeto para tentar libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~GraphicsPath ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten
  id: Flatten
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Flatten()
  nameWithType: GraphicsPath.Flatten()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Converte uma sequência de segmentos de linha ligada cada curva neste caminho."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Flatten ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)
  id: Flatten(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Flatten(Matrix)
  nameWithType: GraphicsPath.Flatten(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aplica-se a transformação especificada e, em seguida, converte cada curva deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> para uma sequência de segmentos de linha ligada."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Flatten (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> através do qual transformar isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> antes pelo."
  overload: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  id: Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Flatten(Matrix,Single)
  nameWithType: GraphicsPath.Flatten(Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Converte cada curva deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> para uma sequência de segmentos de linha ligada."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path and a translation matrix.  \n  \n-   Adds a curve to the path using four points.  \n  \n-   Draws the path (curve) to the screen, using a black pen.  \n  \n-   Shifts the curve down 10 pixels and flattens it.  \n  \n-   Draws the curve to the screen using, a red pen.  \n  \n Notice that the red curve has flattened lines connecting the points.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/add/codesnippet/csharp/3641dbbe-5db3-4043-b7d1-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/add/codesnippet/cpp/3641dbbe-5db3-4043-b7d1-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/add/codesnippet/visualbasic/3641dbbe-5db3-4043-b7d1-_1.vb)]"
  syntax:
    content: public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> através do qual transformar isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> antes pelo."
    - id: flatness
      type: System.Single
      description: "Especifica o erro máximo permitido entre a curva e respetivos aproximação do seu simplificada. Um valor de 0.25 é a predefinição. Reduzir o valor de flatness irá aumentar o número de segmentos de linha no aproximação do seu."
  overload: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds
  id: GetBounds
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetBounds()
  nameWithType: GraphicsPath.GetBounds()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Devolve um retângulo que bounds isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: 'O tamanho do retângulo delimitador devolvido é deve influenciado pelo tipo de caps de fim, a largura de caneta e o limite de miter caneta e, por conseguinte, produz um &quot;Ajuste soltas&quot; para o caminho vinculado. A fórmula aproximada é: o retângulo delimitador inicial está cheia pela largura de caneta e este resultado é multiplicado pelo limite de miter, mais alguns margem adicional para permitir a funcionalidade caps de fim.'
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a graphics path.  \n  \n-   Adds an ellipse (circle) to it and draws it to the screen.  \n  \n-   Retrieves the bounding rectangle for the circle with a call to GetBounds and draws the rectangle to the screen.  \n  \n-   Creates a second graphics path.  \n  \n-   Adds a circle and widens the path to a width of 10.  \n  \n-   Draws the path to the screen.  \n  \n-   Retrieves the bounding rectangle for the second circle.  \n  \n-   Draws the bounding rectangle to the screen.  \n  \n-   Displays the rectangle size in a dialog box.  \n  \n Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/add/codesnippet/csharp/m-system.drawing.drawing_4_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/add/codesnippet/cpp/m-system.drawing.drawing_4_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/add/codesnippet/visualbasic/m-system.drawing.drawing_4_1.vb)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds ();
    parameters: []
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa um retângulo que bounds isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)
  id: GetBounds(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetBounds(Matrix)
  nameWithType: GraphicsPath.GetBounds(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Devolve um retângulo que bounds isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando este caminho é transformado especificado por <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: 'O tamanho do retângulo delimitador devolvido é deve influenciado pelo tipo de caps de fim, a largura de caneta e o limite de miter caneta e, por conseguinte, produz um &quot;Ajuste soltas&quot; para o caminho vinculado. A fórmula aproximada é: o retângulo delimitador inicial está cheia pela largura de caneta e este resultado é multiplicado pelo limite de miter, mais alguns margem adicional para permitir a funcionalidade caps de fim.'
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.
  syntax:
    content: public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "O <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação a aplicar a este caminho antes do retângulo delimitador é calculado. Este caminho não é transformado permanentemente; a transformação é utilizada apenas durante o processo de calcular o retângulo delimitador."
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa um retângulo que bounds isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  id: GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetBounds(Matrix,Pen)
  nameWithType: GraphicsPath.GetBounds(Matrix,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Devolve um retângulo que bounds isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando o caminho atual é transformado especificado por <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> e desenhadas especificado com <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: 'O tamanho do retângulo delimitador devolvido é deve influenciado pelo tipo de caps de fim, a largura de caneta e o limite de miter caneta e, por conseguinte, produz um &quot;Ajuste soltas&quot; para o caminho vinculado. A fórmula aproximada é: o retângulo delimitador inicial está cheia pela largura de caneta e este resultado é multiplicado pelo limite de miter, mais alguns margem adicional para permitir a funcionalidade caps de fim.'
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.
  syntax:
    content: public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "O <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação a aplicar a este caminho antes do retângulo delimitador é calculado. Este caminho não é transformado permanentemente; a transformação é utilizada apenas durante o processo de calcular o retângulo delimitador."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> com a qual desenhar o <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa um retângulo que bounds isto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint
  id: GetLastPoint
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: GetLastPoint()
  nameWithType: GraphicsPath.GetLastPoint()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém o último ponto de <xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>matriz deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>.</xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a path, adds a line to the path, and then gets the last point in the path.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/add/codesnippet/csharp/m-system.drawing.drawing_10_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/add/codesnippet/cpp/m-system.drawing.drawing_10_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/add/codesnippet/visualbasic/m-system.drawing.drawing_10_1.vb)]"
  syntax:
    content: public System.Drawing.PointF GetLastPoint ();
    parameters: []
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o último ponto deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  id: IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Point,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que especifica a localização para testar."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido no contorno deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  id: IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(PointF,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que especifica a localização para testar."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido no contorno deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Point,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref> e a utilização especificada <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado. As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que especifica a localização para testar."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido no contorno deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> como desenhadas especificado com <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(PointF,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref> e a utilização especificada <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado. As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que especifica a localização para testar."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> como desenhadas especificado com <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  id: IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Int32,Int32,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Int32
      description: "A coordenada y do ponto de teste."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido no contorno deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  id: IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Single,Single,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Single
      description: "A coordenada y do ponto de teste."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido no contorno deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Int32,Int32,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref> e a utilização especificada <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado. As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds a rectangle to the path.  \n  \n-   Creates a wide pen and widens the path with that pen (to make the example clearer),  \n  \n-   Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling IsOutlineVisible.  \n  \n The result is shown in the message box (in this case, true). In other words the edge is rendered over that point.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/add/codesnippet/csharp/87b60199-549b-488d-9f2b-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/add/codesnippet/cpp/87b60199-549b-488d-9f2b-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/add/codesnippet/visualbasic/87b60199-549b-488d-9f2b-_1.vb)]"
  syntax:
    content: public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Int32
      description: "A coordenada y do ponto de teste."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido no contorno deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> como desenhadas especificado com <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  id: IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsOutlineVisible(Single,Single,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> quando desenhado com especificado <xref href=&quot;System.Drawing.Pen&quot;> </xref> e a utilização especificada <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "Este método testes para ver se a descrição de um caminho fornecido é composta visível o momento especificado. As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Single
      description: "A coordenada y do ponto de teste."
    - id: pen
      type: System.Drawing.Pen
      description: "O <xref href=&quot;System.Drawing.Pen&quot;> </xref> para testar."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido dentro de (em), a descrição deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> como desenhadas especificado com <xref href=&quot;System.Drawing.Pen&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)
  id: IsVisible(System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Point)
  nameWithType: GraphicsPath.IsVisible(Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.
  syntax:
    content: public bool IsVisible (System.Drawing.Point point);
    parameters:
    - id: point
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto de teste."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)
  id: IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(PointF)
  nameWithType: GraphicsPath.IsVisible(PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (System.Drawing.PointF point);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto de teste."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  id: IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Point,Graphics)
  nameWithType: GraphicsPath.IsVisible(Point,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade."
  example:
  - For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.
  syntax:
    content: public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o ponto de teste."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  id: IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(PointF,Graphics)
  nameWithType: GraphicsPath.IsVisible(PointF,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> que representa o ponto de teste."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contida neste; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)
  id: IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Int32,Int32)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Int32
      description: "A coordenada y do ponto de teste."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)
  id: IsVisible(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Single,Single)
  nameWithType: GraphicsPath.IsVisible(Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Single
      description: "A coordenada y do ponto de teste."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  id: IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Int32,Int32,Graphics)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>, utilizando especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação de `graphics` temporariamente é aplicada antes de testar para visibilidade."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds an ellipse to the path.  \n  \n-   Tests whether the specified point is contained within the path.  \n  \n-   Displays the result in a dialog box.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/add/codesnippet/csharp/dcc5e859-c137-4241-9ba4-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/add/codesnippet/cpp/dcc5e859-c137-4241-9ba4-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/add/codesnippet/visualbasic/dcc5e859-c137-4241-9ba4-_1.vb)]"
  syntax:
    content: public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Int32
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Int32
      description: "A coordenada y do ponto de teste."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  id: IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: IsVisible(Single,Single,Graphics)
  nameWithType: GraphicsPath.IsVisible(Single,Single,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Indica se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> na região visível clip da especificado <xref href=&quot;System.Drawing.Graphics&quot;> </xref>."
  remarks: "As coordenadas do ponto de ser testados são indicadas em coordenadas do mundo. A matriz de transformação do `graphics` parâmetro temporariamente é aplicado antes de testar para visibilidade."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.
  syntax:
    content: public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);
    parameters:
    - id: x
      type: System.Single
      description: "A coordenada x do ponto de teste."
    - id: y
      type: System.Single
      description: "A coordenada y do ponto de teste."
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o qual pretende testar visibilidade."
    return:
      type: System.Boolean
      description: "Este método devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o ponto especificado está contido nisto <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PathData
  id: PathData
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PathData
  nameWithType: GraphicsPath.PathData
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathData
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém um <xref href=&quot;System.Drawing.Drawing2D.PathData&quot;> </xref> que encapsula matrizes de pontos de (<code>points</code>) e tipos (<code>types</code>) para este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.PathData PathData { get; }
    return:
      type: System.Drawing.Drawing2D.PathData
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PathData&quot;> </xref> que encapsula matrizes para os pontos e de tipos para este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  overload: System.Drawing.Drawing2D.GraphicsPath.PathData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PathPoints
  id: PathPoints
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PathPoints
  nameWithType: GraphicsPath.PathPoints
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathPoints
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém os pontos do caminho."
  syntax:
    content: public System.Drawing.PointF[] PathPoints { get; }
    return:
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> objetos que representam o caminho."
  overload: System.Drawing.Drawing2D.GraphicsPath.PathPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PathTypes
  id: PathTypes
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PathTypes
  nameWithType: GraphicsPath.PathTypes
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathTypes
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém os tipos de pontos de correspondentes no <xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>matriz.</xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>"
  remarks: "A matriz de bytes devolvido pela propriedade PathTypes especifica sinalizadores para os pontos de dados e tipos de pontos de um caminho. Para cada ponto de bits de 0 a 2 indicam o tipo de um ponto, sem soltar bits 3 a 7 um conjunto de sinalizadores que especificam os atributos de um ponto. A tabela seguinte mostra os valores possíveis e os respetivos significados.      | Valor | Significado |   |-----------|-------------|   |&0; | Indica que o ponto de início de uma figura. |   |&1; | Indica que o ponto de um dos dois pontos finais de uma linha. |   |&3; | Indica que o ponto de um ponto de endpoint ou controlo de um spline Bézier cubic. |   |&0;x7 | Dissimula todos os bits, exceto para os três bits de ordem baixa, que indica o tipo de ponto. |   |&0;x20 | Especifica que o ponto de um marcador. |   |&0;x80 | Especifica que o ponto é o último ponto um Subcaminho fechado (figura). |"
  syntax:
    content: public byte[] PathTypes { get; }
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que especifica os tipos de pontos de correspondentes no caminho."
  overload: System.Drawing.Drawing2D.GraphicsPath.PathTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.PointCount
  id: PointCount
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: PointCount
  nameWithType: GraphicsPath.PointCount
  fullName: System.Drawing.Drawing2D.GraphicsPath.PointCount
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Obtém o número de elementos a <> </> *> ou <> </> *> matriz."
  syntax:
    content: public int PointCount { get; }
    return:
      type: System.Int32
      description: "Um número inteiro que especifica o número de elementos a <> </> *> ou <> </> *> matriz."
  overload: System.Drawing.Drawing2D.GraphicsPath.PointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Reset
  id: Reset
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Reset()
  nameWithType: GraphicsPath.Reset()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reset()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Esvazia o <> </> *> e <> </> *> matrizes e define o <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref> para <xref href=&quot;System.Drawing.Drawing2D.FillMode&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds several primitives to it.  \n  \n-   Draws the path's points array to the screen.  \n  \n-   Resets the path to an empty state.  \n  \n-   Re-acquires the points array (if it exists).  \n  \n-   Draws the array to the screen.  \n  \n Notice that it finds no array following the reset call.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/add/codesnippet/csharp/m-system.drawing.drawing_8_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/add/codesnippet/cpp/m-system.drawing.drawing_8_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/add/codesnippet/visualbasic/m-system.drawing.drawing_8_1.vb)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Reverse
  id: Reverse
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Reverse()
  nameWithType: GraphicsPath.Reverse()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reverse()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inverte a ordem dos pontos de <xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>matriz deste <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>.</xref:System.Drawing.Drawing2D.GraphicsPath.PathPoints*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds several primitives to the path.  \n  \n-   Draws the path's points array to the screen.  \n  \n-   Draws the reversed points array to the screen.  \n  \n Notice that the second listing of points is in reverse order from the first.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/add/codesnippet/csharp/m-system.drawing.drawing_22_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/add/codesnippet/cpp/m-system.drawing.drawing_22_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/add/codesnippet/visualbasic/m-system.drawing.drawing_22_1.vb)]"
  syntax:
    content: public void Reverse ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.Reverse*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.SetMarkers
  id: SetMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: SetMarkers()
  nameWithType: GraphicsPath.SetMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.SetMarkers()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Define um marcador no <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Este método cria um marcador no caminho de que pode ser utilizado para separar secções do caminho. Em seguida, pode utilizar os <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>métodos para iterar através de marcadores no caminho.</xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A>       Marcadores são utilizados para separar os grupos de subpaths. Um ou mais subpaths podem ser contidos entre duas marcadores no caminho."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/add/codesnippet/csharp/m-system.drawing.drawing_7_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/add/codesnippet/cpp/m-system.drawing.drawing_7_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/add/codesnippet/visualbasic/m-system.drawing.drawing_7_1.vb)]"
  syntax:
    content: public void SetMarkers ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.SetMarkers*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.StartFigure
  id: StartFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: StartFigure()
  nameWithType: GraphicsPath.StartFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.StartFigure()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inicia uma nova figura sem fechar a figura atual. Todos os pontos de subsequentes adicionados ao caminho são adicionados a este novo figura."
  remarks: "O utilizador tem de manter os pontos de originais se forem necessárias. Os pontos de originais são convertidos em pontos de controlo de Bézier cubic internamente, por conseguinte, não existe nenhum mecanismo para devolver os pontos de originais.       Este método é iniciado um Subcaminho de novo no caminho. Subpaths permitem-lhe separar um caminho em secções e utilizar o <xref:System.Drawing.Drawing2D.GraphicsPathIterator>classe para iterar através de subpaths.</xref:System.Drawing.Drawing2D.GraphicsPathIterator>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path.  \n  \n-   Adds two sets of figures. The first set of figures combines four primitives into two figures. The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.  \n  \n-   Draws all the figures to the screen.  \n  \n Notice the difference in the appearance between the two sets of figures.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/add/codesnippet/csharp/m-system.drawing.drawing_0_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/add/codesnippet/cpp/m-system.drawing.drawing_0_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/add/codesnippet/visualbasic/m-system.drawing.drawing_0_1.vb)]"
  syntax:
    content: public void StartFigure ();
    parameters: []
  overload: System.Drawing.Drawing2D.GraphicsPath.StartFigure*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)
  id: Transform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Transform(Matrix)
  nameWithType: GraphicsPath.Transform(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Transform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aplica-se de uma matriz de transformação para este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "A transformação pode aumentar, traduzir, rodar ou prejudicar <xref:System.Drawing.Drawing2D.GraphicsPath>.</xref:System.Drawing.Drawing2D.GraphicsPath>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds an ellipse to the path.  \n  \n-   Draws path to the screen.  \n  \n-   Creates a transform matrix to translate the path 100 units in the x-axis direction.  \n  \n-   Draws the transformed path to the screen.  \n  \n Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/add/codesnippet/csharp/40450369-76ad-4f55-a17b-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/add/codesnippet/cpp/40450369-76ad-4f55-a17b-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/add/codesnippet/visualbasic/40450369-76ad-4f55-a17b-_1.vb)]"
  syntax:
    content: public void Transform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que representa a transformação a aplicar."
  overload: System.Drawing.Drawing2D.GraphicsPath.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aplica uma transformação de warp definida por um retângulo e um paralelogramo, este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see [Warp(PointF\[\], RectangleF, Matrix, WarpMode, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que definem um paralelogramo ao qual o retângulo definido pelo `srcRect` é transformado. A matriz pode conter três ou quatro elementos. Se a matriz contém três elementos, o canto inferior direito do paralelogramo está implícita pelos primeiros três pontos."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo que é transformado paralelogramo definido pelo `destPoints`."
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF,Matrix)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aplica uma transformação de warp definida por um retângulo e um paralelogramo, este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see [Warp(PointF\[\], RectangleF, Matrix, WarpMode, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que definem um paralelogramo ao qual o retângulo definido pelo `srcRect` é transformado. A matriz pode conter três ou quatro elementos. Se a matriz contém três elementos, o canto inferior direito do paralelogramo está implícita pelos primeiros três pontos."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo que é transformado paralelogramo definido pelo `destPoints`."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação geométrica para aplicar ao caminho."
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF,Matrix,WarpMode)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aplica uma transformação de warp definida por um retângulo e um paralelogramo, este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see [Warp(PointF\[\], RectangleF, Matrix, WarpMode, Single)](assetId:///M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)?qualifyHint=False&autoUpgrade=False).
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que define um paralelogramo ao qual o retângulo definido pelo `srcRect` é transformado. A matriz pode conter três ou quatro elementos. Se a matriz contém três elementos, o canto inferior direito do paralelogramo está implícita pelos primeiros três pontos."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo que é transformado paralelogramo definido pelo `destPoints`."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação geométrica para aplicar ao caminho."
    - id: warpMode
      type: System.Drawing.Drawing2D.WarpMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WarpMode&quot;> </xref> enumeração que especifica se esta operação warp utiliza perspetiva ou modo bilinear."
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  id: Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Aplica uma transformação de warp definida por um retângulo e um paralelogramo, este <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds a rectangle to the path.  \n  \n-   Draws that rectangle to the screen in black.  \n  \n-   Warps the path with a perspective warp.  \n  \n-   Draws the warped rectangle (path) to the screen in red.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/add/codesnippet/csharp/55b0be67-c94c-4de0-a933-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/add/codesnippet/cpp/55b0be67-c94c-4de0-a933-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/add/codesnippet/visualbasic/55b0be67-c94c-4de0-a933-_1.vb)]"
  syntax:
    content: public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);
    parameters:
    - id: destPoints
      type: System.Drawing.PointF[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.PointF&quot;> </xref> estruturas que definem um paralelogramo ao qual o retângulo definido pelo `srcRect` é transformado. A matriz pode conter três ou quatro elementos. Se a matriz contém três elementos, o canto inferior direito do paralelogramo está implícita pelos primeiros três pontos."
    - id: srcRect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> que representa o retângulo que é transformado paralelogramo definido pelo `destPoints`."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação geométrica para aplicar ao caminho."
    - id: warpMode
      type: System.Drawing.Drawing2D.WarpMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WarpMode&quot;> </xref> enumeração que especifica se esta operação warp utiliza perspetiva ou modo bilinear."
    - id: flatness
      type: System.Single
      description: "É um valor entre 0 e 1 que especifica como simples caminho resultante. Para obter mais informações, consulte o <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten*>métodos.</xref:System.Drawing.Drawing2D.GraphicsPath.Flatten*>"
  overload: System.Drawing.Drawing2D.GraphicsPath.Warp*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)
  id: Widen(System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Widen(Pen)
  nameWithType: GraphicsPath.Widen(Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma descrição adicional para o caminho."
  remarks: "Este método cria uma descrição à volta de linhas de originais deste <xref:System.Drawing.Drawing2D.GraphicsPath>, com a uma distância entre as linhas existentes e novo contorno igual para que a largura do <xref:System.Drawing.Pen>utilizado na chamada para Widen.</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.GraphicsPath> Se pretender preencher o espaço entre as linhas que têm de utilizar o <xref:System.Drawing.Graphics.FillPath%2A>em vez disso, em seguida, o <xref:System.Drawing.Graphics.DrawPath%2A>.</xref:System.Drawing.Graphics.DrawPath%2A> </xref:System.Drawing.Graphics.FillPath%2A>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Widen (System.Drawing.Pen pen);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> que especifica a largura entre a descrição do caminho original e o contorno novo, este método cria."
  overload: System.Drawing.Drawing2D.GraphicsPath.Widen*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  id: Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Widen(Pen,Matrix)
  nameWithType: GraphicsPath.Widen(Pen,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Adiciona uma descrição adicional para o <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref>."
  remarks: "Este método cria uma descrição à volta de linhas de originais deste <xref:System.Drawing.Drawing2D.GraphicsPath>, com a uma distância entre as linhas existentes e novo contorno igual para que a largura do <xref:System.Drawing.Pen>utilizado na chamada para Widen.</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.GraphicsPath> Se pretender preencher o espaço entre as linhas que têm de utilizar o <xref:System.Drawing.Graphics.FillPath%2A>em vez disso, em seguida, o <xref:System.Drawing.Graphics.DrawPath%2A>.</xref:System.Drawing.Graphics.DrawPath%2A> </xref:System.Drawing.Graphics.FillPath%2A>"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.
  syntax:
    content: public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> que especifica a largura entre a descrição do caminho original e o contorno novo, este método cria."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação a aplicar ao caminho antes widening."
  overload: System.Drawing.Drawing2D.GraphicsPath.Widen*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  id: Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  langs:
  - csharp
  name: Widen(Pen,Matrix,Single)
  nameWithType: GraphicsPath.Widen(Pen,Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Isto substitui <xref href=&quot;System.Drawing.Drawing2D.GraphicsPath&quot;> </xref> com curvas coloque a área que é preenchida quando este caminho é desenhado pela caneta especificada."
  remarks: "Este método cria uma descrição à volta de linhas de originais deste <xref:System.Drawing.Drawing2D.GraphicsPath>, com a uma distância entre as linhas existentes e novo contorno igual para que a largura do <xref:System.Drawing.Pen>utilizado na chamada para Widen.</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.GraphicsPath> Se pretender preencher o espaço entre as linhas que têm de utilizar o <xref:System.Drawing.Graphics.FillPath%2A>em vez disso, em seguida, o <xref:System.Drawing.Graphics.DrawPath%2A>.</xref:System.Drawing.Graphics.DrawPath%2A> </xref:System.Drawing.Graphics.FillPath%2A>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a path and adds two ellipses to the path.  \n  \n-   Draws the path in black.  \n  \n-   Widens the path.  \n  \n-   Draws the path in red.  \n  \n Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.  \n  \n [!code-cs[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/add/codesnippet/csharp/baafea63-e45c-4b80-99b6-_1.cs)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/add/codesnippet/cpp/baafea63-e45c-4b80-99b6-_1.cpp)]\n [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/add/codesnippet/visualbasic/baafea63-e45c-4b80-99b6-_1.vb)]"
  syntax:
    content: public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);
    parameters:
    - id: pen
      type: System.Drawing.Pen
      description: "A <xref href=&quot;System.Drawing.Pen&quot;> </xref> que especifica a largura entre a descrição do caminho original e o contorno novo, este método cria."
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que especifica uma transformação a aplicar ao caminho antes widening."
    - id: flatness
      type: System.Single
      description: "Um valor que especifica o flatness para curvas."
  overload: System.Drawing.Drawing2D.GraphicsPath.Widen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath()
  nameWithType: GraphicsPath.GraphicsPath()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath()
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(FillMode)
  nameWithType: GraphicsPath.GraphicsPath(FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(FillMode)
- uid: System.Drawing.Drawing2D.FillMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: FillMode
  nameWithType: FillMode
  fullName: System.Drawing.Drawing2D.FillMode
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(Point[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[])
- uid: System.Drawing.Point[]
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point[]
  spec.csharp:
  - uid: System.Drawing.Point
    name: Point
    nameWithType: Point
    fullName: Point[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(PointF[],Byte[])
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[])
- uid: System.Drawing.PointF[]
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF[]
  spec.csharp:
  - uid: System.Drawing.PointF
    name: PointF
    nameWithType: PointF
    fullName: PointF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(Point[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(Point[],Byte[],FillMode)
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath(PointF[],Byte[],FillMode)
  nameWithType: GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GraphicsPath(PointF[],Byte[],FillMode)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddArc(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Rectangle,Single,Single)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(RectangleF,Single,Single)
  nameWithType: GraphicsPath.AddArc(RectangleF,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(RectangleF,Single,Single)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Int32,Int32,Int32,Int32,Single,Single)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddArc(Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(Point,Point,Point,Point)
  nameWithType: GraphicsPath.AddBezier(Point,Point,Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Point,Point,Point,Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(PointF,PointF,PointF,PointF)
  nameWithType: GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(PointF,PointF,PointF,PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBezier(Single,Single,Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBeziers(Point[])
  nameWithType: GraphicsPath.AddBeziers(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBeziers(PointF[])
  nameWithType: GraphicsPath.AddBeziers(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddBeziers(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(Point[])
  nameWithType: GraphicsPath.AddClosedCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(PointF[])
  nameWithType: GraphicsPath.AddClosedCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(Point[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(Point[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddClosedCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(PointF[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(Point[])
  nameWithType: GraphicsPath.AddCurve(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(PointF[])
  nameWithType: GraphicsPath.AddCurve(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(Point[],Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(PointF[],Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(Point[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(Point[],Int32,Int32,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve(PointF[],Int32,Int32,Single)
  nameWithType: GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddCurve(PointF[],Int32,Int32,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(Rectangle)
  nameWithType: GraphicsPath.AddEllipse(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Rectangle)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(RectangleF)
  nameWithType: GraphicsPath.AddEllipse(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(RectangleF)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddEllipse(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddEllipse(Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(Point,Point)
  nameWithType: GraphicsPath.AddLine(Point,Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Point,Point)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(PointF,PointF)
  nameWithType: GraphicsPath.AddLine(PointF,PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(PointF,PointF)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(Int32,Int32,Int32,Int32)
  nameWithType: GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine(Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddLine(Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLine(Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLines(Point[])
  nameWithType: GraphicsPath.AddLines(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLines(PointF[])
  nameWithType: GraphicsPath.AddLines(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddLines(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPath(GraphicsPath,Boolean)
  nameWithType: GraphicsPath.AddPath(GraphicsPath,Boolean)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPath(GraphicsPath,Boolean)
- uid: System.Drawing.Drawing2D.GraphicsPath
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath
  fullName: System.Drawing.Drawing2D.GraphicsPath
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie(Rectangle,Single,Single)
  nameWithType: GraphicsPath.AddPie(Rectangle,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Rectangle,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie(Int32,Int32,Int32,Int32,Single,Single)
  nameWithType: GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Int32,Int32,Int32,Int32,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie(Single,Single,Single,Single,Single,Single)
  nameWithType: GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPie(Single,Single,Single,Single,Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPolygon(Point[])
  nameWithType: GraphicsPath.AddPolygon(Point[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(Point[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPolygon(PointF[])
  nameWithType: GraphicsPath.AddPolygon(PointF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddPolygon(PointF[])
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangle(Rectangle)
  nameWithType: GraphicsPath.AddRectangle(Rectangle)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(Rectangle)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangle(RectangleF)
  nameWithType: GraphicsPath.AddRectangle(RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangle(RectangleF)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangles(Rectangle[])
  nameWithType: GraphicsPath.AddRectangles(Rectangle[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(Rectangle[])
- uid: System.Drawing.Rectangle[]
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle[]
  spec.csharp:
  - uid: System.Drawing.Rectangle
    name: Rectangle
    nameWithType: Rectangle
    fullName: Rectangle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangles(RectangleF[])
  nameWithType: GraphicsPath.AddRectangles(RectangleF[])
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddRectangles(RectangleF[])
- uid: System.Drawing.RectangleF[]
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF[]
  spec.csharp:
  - uid: System.Drawing.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: RectangleF[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Point,StringFormat)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.FontFamily
  parent: System.Drawing
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Drawing.FontFamily
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,PointF,StringFormat)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,Rectangle,StringFormat)
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  nameWithType: GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
  fullName: System.Drawing.Drawing2D.GraphicsPath.AddString(String,FontFamily,Int32,Single,RectangleF,StringFormat)
- uid: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: ClearMarkers()
  nameWithType: GraphicsPath.ClearMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers()
- uid: System.Drawing.Drawing2D.GraphicsPath.Clone
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Clone()
  nameWithType: GraphicsPath.Clone()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseAllFigures()
  nameWithType: GraphicsPath.CloseAllFigures()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures()
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseFigure()
  nameWithType: GraphicsPath.CloseFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.CloseFigure()
- uid: System.Drawing.Drawing2D.GraphicsPath.Dispose
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Dispose()
  nameWithType: GraphicsPath.Dispose()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Dispose()
- uid: System.Drawing.Drawing2D.GraphicsPath.FillMode
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: FillMode
  nameWithType: GraphicsPath.FillMode
  fullName: System.Drawing.Drawing2D.GraphicsPath.FillMode
- uid: System.Drawing.Drawing2D.GraphicsPath.Finalize
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Finalize()
  nameWithType: GraphicsPath.Finalize()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Finalize()
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten()
  nameWithType: GraphicsPath.Flatten()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten()
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten(Matrix)
  nameWithType: GraphicsPath.Flatten(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten(Matrix,Single)
  nameWithType: GraphicsPath.Flatten(Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Flatten(Matrix,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds()
  nameWithType: GraphicsPath.GetBounds()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds()
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds(Matrix)
  nameWithType: GraphicsPath.GetBounds(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds(Matrix,Pen)
  nameWithType: GraphicsPath.GetBounds(Matrix,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetBounds(Matrix,Pen)
- uid: System.Drawing.Pen
  parent: System.Drawing
  isExternal: false
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
- uid: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetLastPoint()
  nameWithType: GraphicsPath.GetLastPoint()
  fullName: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint()
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Point,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(PointF,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Point,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Point,Pen,Graphics)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(PointF,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(PointF,Pen,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Int32,Int32,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Single,Single,Pen)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Int32,Int32,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Int32,Int32,Pen,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible(Single,Single,Pen,Graphics)
  nameWithType: GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(Single,Single,Pen,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Point)
  nameWithType: GraphicsPath.IsVisible(Point)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(PointF)
  nameWithType: GraphicsPath.IsVisible(PointF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Point,Graphics)
  nameWithType: GraphicsPath.IsVisible(Point,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Point,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(PointF,Graphics)
  nameWithType: GraphicsPath.IsVisible(PointF,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(PointF,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Int32,Int32)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Single,Single)
  nameWithType: GraphicsPath.IsVisible(Single,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Int32,Int32,Graphics)
  nameWithType: GraphicsPath.IsVisible(Int32,Int32,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Int32,Int32,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible(Single,Single,Graphics)
  nameWithType: GraphicsPath.IsVisible(Single,Single,Graphics)
  fullName: System.Drawing.Drawing2D.GraphicsPath.IsVisible(Single,Single,Graphics)
- uid: System.Drawing.Drawing2D.GraphicsPath.PathData
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathData
  nameWithType: GraphicsPath.PathData
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathData
- uid: System.Drawing.Drawing2D.PathData
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PathData
  nameWithType: PathData
  fullName: System.Drawing.Drawing2D.PathData
- uid: System.Drawing.Drawing2D.GraphicsPath.PathPoints
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathPoints
  nameWithType: GraphicsPath.PathPoints
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathPoints
- uid: System.Drawing.Drawing2D.GraphicsPath.PathTypes
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathTypes
  nameWithType: GraphicsPath.PathTypes
  fullName: System.Drawing.Drawing2D.GraphicsPath.PathTypes
- uid: System.Drawing.Drawing2D.GraphicsPath.PointCount
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PointCount
  nameWithType: GraphicsPath.PointCount
  fullName: System.Drawing.Drawing2D.GraphicsPath.PointCount
- uid: System.Drawing.Drawing2D.GraphicsPath.Reset
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reset()
  nameWithType: GraphicsPath.Reset()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reset()
- uid: System.Drawing.Drawing2D.GraphicsPath.Reverse
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reverse()
  nameWithType: GraphicsPath.Reverse()
  fullName: System.Drawing.Drawing2D.GraphicsPath.Reverse()
- uid: System.Drawing.Drawing2D.GraphicsPath.SetMarkers
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: SetMarkers()
  nameWithType: GraphicsPath.SetMarkers()
  fullName: System.Drawing.Drawing2D.GraphicsPath.SetMarkers()
- uid: System.Drawing.Drawing2D.GraphicsPath.StartFigure
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: StartFigure()
  nameWithType: GraphicsPath.StartFigure()
  fullName: System.Drawing.Drawing2D.GraphicsPath.StartFigure()
- uid: System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Transform(Matrix)
  nameWithType: GraphicsPath.Transform(Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Transform(Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF)
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF,Matrix)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF,Matrix,WarpMode)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode)
- uid: System.Drawing.Drawing2D.WarpMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WarpMode
  nameWithType: WarpMode
  fullName: System.Drawing.Drawing2D.WarpMode
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  nameWithType: GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Warp(PointF[],RectangleF,Matrix,WarpMode,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen(Pen)
  nameWithType: GraphicsPath.Widen(Pen)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen)
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen(Pen,Matrix)
  nameWithType: GraphicsPath.Widen(Pen,Matrix)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix)
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen(Pen,Matrix,Single)
  nameWithType: GraphicsPath.Widen(Pen,Matrix,Single)
  fullName: System.Drawing.Drawing2D.GraphicsPath.Widen(Pen,Matrix,Single)
- uid: System.Drawing.Drawing2D.GraphicsPath.#ctor*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GraphicsPath
  nameWithType: GraphicsPath.GraphicsPath
- uid: System.Drawing.Drawing2D.GraphicsPath.AddArc*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddArc
  nameWithType: GraphicsPath.AddArc
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBezier*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBezier
  nameWithType: GraphicsPath.AddBezier
- uid: System.Drawing.Drawing2D.GraphicsPath.AddBeziers*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddBeziers
  nameWithType: GraphicsPath.AddBeziers
- uid: System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddClosedCurve
  nameWithType: GraphicsPath.AddClosedCurve
- uid: System.Drawing.Drawing2D.GraphicsPath.AddCurve*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddCurve
  nameWithType: GraphicsPath.AddCurve
- uid: System.Drawing.Drawing2D.GraphicsPath.AddEllipse*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddEllipse
  nameWithType: GraphicsPath.AddEllipse
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLine*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLine
  nameWithType: GraphicsPath.AddLine
- uid: System.Drawing.Drawing2D.GraphicsPath.AddLines*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddLines
  nameWithType: GraphicsPath.AddLines
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPath*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPath
  nameWithType: GraphicsPath.AddPath
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPie*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPie
  nameWithType: GraphicsPath.AddPie
- uid: System.Drawing.Drawing2D.GraphicsPath.AddPolygon*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddPolygon
  nameWithType: GraphicsPath.AddPolygon
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangle*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangle
  nameWithType: GraphicsPath.AddRectangle
- uid: System.Drawing.Drawing2D.GraphicsPath.AddRectangles*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddRectangles
  nameWithType: GraphicsPath.AddRectangles
- uid: System.Drawing.Drawing2D.GraphicsPath.AddString*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: AddString
  nameWithType: GraphicsPath.AddString
- uid: System.Drawing.Drawing2D.GraphicsPath.ClearMarkers*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: ClearMarkers
  nameWithType: GraphicsPath.ClearMarkers
- uid: System.Drawing.Drawing2D.GraphicsPath.Clone*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Clone
  nameWithType: GraphicsPath.Clone
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseAllFigures
  nameWithType: GraphicsPath.CloseAllFigures
- uid: System.Drawing.Drawing2D.GraphicsPath.CloseFigure*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: CloseFigure
  nameWithType: GraphicsPath.CloseFigure
- uid: System.Drawing.Drawing2D.GraphicsPath.Dispose*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Dispose
  nameWithType: GraphicsPath.Dispose
- uid: System.Drawing.Drawing2D.GraphicsPath.FillMode*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: FillMode
  nameWithType: GraphicsPath.FillMode
- uid: System.Drawing.Drawing2D.GraphicsPath.Finalize*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Finalize
  nameWithType: GraphicsPath.Finalize
- uid: System.Drawing.Drawing2D.GraphicsPath.Flatten*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Flatten
  nameWithType: GraphicsPath.Flatten
- uid: System.Drawing.Drawing2D.GraphicsPath.GetBounds*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetBounds
  nameWithType: GraphicsPath.GetBounds
- uid: System.Drawing.Drawing2D.GraphicsPath.GetLastPoint*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: GetLastPoint
  nameWithType: GraphicsPath.GetLastPoint
- uid: System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsOutlineVisible
  nameWithType: GraphicsPath.IsOutlineVisible
- uid: System.Drawing.Drawing2D.GraphicsPath.IsVisible*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: IsVisible
  nameWithType: GraphicsPath.IsVisible
- uid: System.Drawing.Drawing2D.GraphicsPath.PathData*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathData
  nameWithType: GraphicsPath.PathData
- uid: System.Drawing.Drawing2D.GraphicsPath.PathPoints*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathPoints
  nameWithType: GraphicsPath.PathPoints
- uid: System.Drawing.Drawing2D.GraphicsPath.PathTypes*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PathTypes
  nameWithType: GraphicsPath.PathTypes
- uid: System.Drawing.Drawing2D.GraphicsPath.PointCount*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: PointCount
  nameWithType: GraphicsPath.PointCount
- uid: System.Drawing.Drawing2D.GraphicsPath.Reset*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reset
  nameWithType: GraphicsPath.Reset
- uid: System.Drawing.Drawing2D.GraphicsPath.Reverse*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Reverse
  nameWithType: GraphicsPath.Reverse
- uid: System.Drawing.Drawing2D.GraphicsPath.SetMarkers*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: SetMarkers
  nameWithType: GraphicsPath.SetMarkers
- uid: System.Drawing.Drawing2D.GraphicsPath.StartFigure*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: StartFigure
  nameWithType: GraphicsPath.StartFigure
- uid: System.Drawing.Drawing2D.GraphicsPath.Transform*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Transform
  nameWithType: GraphicsPath.Transform
- uid: System.Drawing.Drawing2D.GraphicsPath.Warp*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Warp
  nameWithType: GraphicsPath.Warp
- uid: System.Drawing.Drawing2D.GraphicsPath.Widen*
  parent: System.Drawing.Drawing2D.GraphicsPath
  isExternal: false
  name: Widen
  nameWithType: GraphicsPath.Widen
