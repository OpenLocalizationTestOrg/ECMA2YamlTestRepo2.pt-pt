### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  id: ChannelDispatcherBase
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  langs:
  - csharp
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  type: Class
  summary: "Classe base abstrata para o distribuidor de canal que aceita canais e associa-las um serviço."
  remarks: "Isto é utilizado pelos programadores que pretendem manter o [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] , mas substitua o tempo de execução fornecidos pelo sistema de modelo de programação. Essas aplicações serão mensagens fora dos canais de extração e lidar com os mesmos diretamente com dispatchers definido pelo utilizador. Utilizar ChannelDispatcherBase, crie uma classe derivada de-lo, expandir <xref:System.ServiceModel.ServiceHost>e substituir <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adicionar as instâncias da sua classe derivada de ChannelDispatcherBase para <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A> </xref:System.ServiceModel.ServiceHost>       O <xref:System.ServiceModel.Channels.IChannelListener>e o <xref:System.ServiceModel.ServiceHost>, associadas com o objeto de ChannelDispatcherBase estão disponíveis para inspeção ou modificação através de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A>e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>respetivamente.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Channels.IChannelListener>       <xref:System.ServiceModel.ServiceHost>as chamadas a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29>ou <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29>métodos quando adicionar ou remover um item de ChannelDispatcherBase do respetivo <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29></xref:System.ServiceModel.ServiceHost>       <xref:System.ServiceModel.ServiceHost>as chamadas a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>durante o encerramento antes de o fechar InstanceContexts.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A></xref:System.ServiceModel.ServiceHost> [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]utiliza esta chamada para fechar canais de datagrama e aguarde que todas as mensagens obter um InstanceContext."
  syntax:
    content: 'public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherBase&quot;> </xref> classe."
  syntax:
    content: protected ChannelDispatcherBase ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituí-lo de uma classe derivada, anexa o distribuidor de canal para um anfitrião específico."
  remarks: "Este método só é possível definir quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>está a ser o <xref:System.ServiceModel.CommunicationState>Estado, que é o estado apenas mutável e não é eliminado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       A <xref:System.ServiceModel.ServiceHost>chama este método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>é adicionada ao respetivo <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> </xref:System.ServiceModel.ServiceHost>  Isto dá-o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>uma oportunidade para ligue eventos e Inspecione o <xref:System.ServiceModel.ServiceHost>e fornece o valor deve ser devolvido a partir de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>propriedade.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: protected virtual void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "O <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> para o serviço."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto de comunicação está a ser um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>Estado ou o anfitrião já está definido.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto de comunicação está a ser um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>Estado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "O objeto de comunicação está a ser um <xref:System.ServiceModel.CommunicationState>Estado.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituí-lo de uma classe derivada, remove os dispatchers de ponto final associados o distribuidor de canal."
  remarks: "<xref:System.ServiceModel.ServiceHost>chama este método durante o encerramento dar o dispatcher uma oportunidade para drenar mensagens.</xref:System.ServiceModel.ServiceHost> <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>utiliza esta chamada para fechar canais de datagrama.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public virtual void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituí-lo de uma classe derivada, desanexa o distribuidor de canal de um anfitrião específico."
  remarks: "O <xref:System.ServiceModel.ServiceHostBase>só pode ser desligado quando a instância do <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>está a ser o <xref:System.ServiceModel.CommunicationState>Estado, que é o estado apenas mutável e não é eliminado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHostBase>       Deve definir o <xref:System.ServiceModel.ServiceHostBase>associadas com o distribuidor de canal para `null`.</xref:System.ServiceModel.ServiceHostBase>       <xref:System.ServiceModel.ServiceHost>chama este método quando o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>é removido do respetivo <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase></xref:System.ServiceModel.ServiceHost> Isto proporciona a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>oportunidade de unhook eventos e Inspecione <xref:System.ServiceModel.ServiceHost>.</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: protected virtual void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "The <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O objeto de comunicação está a ser um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>Estado ou o anfitrião já está definido.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto de comunicação está a ser um <xref:System.ServiceModel.CommunicationState>ou <xref:System.ServiceModel.CommunicationState>Estado.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "O objeto de comunicação está a ser um <xref:System.ServiceModel.CommunicationState>Estado.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituí-lo de uma classe derivada, obtém o anfitrião do serviço associado o distribuidor de canal."
  remarks: "Cada <xref:System.ServiceModel.ServiceHost>objecto pode ter muitos <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>objetos, cada um associado com outra <xref:System.ServiceModel.Channels.IChannelListener>relativamente a esse serviço.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHost> O anfitrião mantém uma lista destes <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>objetos no <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>coleção.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: public abstract System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "O <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> para o serviço associado o dispatcher."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando substituí-lo de uma classe derivada, obtém o serviço de escuta de canal associado com o distribuidor de canal."
  remarks: "A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>associa um <xref:System.ServiceModel.Channels.IChannelListener>cujos canais de consumo e mensagens isto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>é emissão.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> </xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "O <xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> associadas com o distribuidor de canal."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcherBase.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcherBase.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcherBase.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
