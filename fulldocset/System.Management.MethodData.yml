### YamlMime:ManagedReference
items:
- uid: System.Management.MethodData
  id: MethodData
  children:
  - System.Management.MethodData.InParameters
  - System.Management.MethodData.Name
  - System.Management.MethodData.Origin
  - System.Management.MethodData.OutParameters
  - System.Management.MethodData.Qualifiers
  langs:
  - csharp
  name: MethodData
  nameWithType: MethodData
  fullName: System.Management.MethodData
  type: Class
  summary: "Contains information about a WMI method."
  remarks: ''
  example:
  - "The following example lists information about the **Win32_Process.Create** method using the MethodData class. For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_MethodData#1](~/add/codesnippet/VisualBasic/t-system.management.meth_0_1.vb)]\n [!code-cs[wminet_MethodData#1](~/add/codesnippet/CSharp/t-system.management.meth_0_1.cs)]"
  syntax:
    content: public class MethodData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Management.MethodData.InParameters
  id: InParameters
  parent: System.Management.MethodData
  langs:
  - csharp
  name: InParameters
  nameWithType: MethodData.InParameters
  fullName: System.Management.MethodData.InParameters
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Gets the input parameters to the method. Each parameter is described as a property in the object. If a parameter is both in and out, it appears in both the InParameters and &lt;xref:System.Management.MethodData.OutParameters%2A&gt; properties."
  remarks: "Each parameter in the object should have an ID qualifier, identifying the order of the parameters in the method call.      ## Property Value    A <xref:System.Management.ManagementBaseObject> containing all the input parameters to the method.      ## .NET Framework Security    Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md)."
  example:
  - "The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class. For more information about the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-cs[wminet_MethodData_InParameters#1](~/add/codesnippet/CSharp/p-system.management.meth_3_1.cs)]\n [!code-vb[wminet_MethodData_InParameters#1](~/add/codesnippet/VisualBasic/p-system.management.meth_3_1.vb)]"
  syntax:
    content: public System.Management.ManagementBaseObject InParameters { get; }
    return:
      type: System.Management.ManagementBaseObject
      description: "Returns a <see cref=&quot;T:System.Management.ManagementBaseObject&quot;></see> containing the input parameters to the method."
  overload: System.Management.MethodData.InParameters*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Management.MethodData.Name
  id: Name
  parent: System.Management.MethodData
  langs:
  - csharp
  name: Name
  nameWithType: MethodData.Name
  fullName: System.Management.MethodData.Name
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Gets the name of the method."
  remarks: "## Property Value    The name of the method.      ## .NET Framework Security    Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md)."
  example:
  - "The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class. For more information about the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_MethodData_Name#1](~/add/codesnippet/VisualBasic/p-system.management.meth_0_1.vb)]\n [!code-cs[wminet_MethodData_Name#1](~/add/codesnippet/CSharp/p-system.management.meth_0_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Returns a &lt;xref:System.String&gt; value containing the name of the method."
  overload: System.Management.MethodData.Name*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Management.MethodData.Origin
  id: Origin
  parent: System.Management.MethodData
  langs:
  - csharp
  name: Origin
  nameWithType: MethodData.Origin
  fullName: System.Management.MethodData.Origin
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Gets the name of the management class in which the method was first introduced in the class inheritance hierarchy."
  remarks: "## Property Value    A string representing the originating management class name.      ## .NET Framework Security    Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md)."
  syntax:
    content: public string Origin { get; }
    return:
      type: System.String
      description: "Returns a &lt;xref:System.String&gt; value containing the name of the class in which the method was first introduced in the class inheritance hierarchy."
  overload: System.Management.MethodData.Origin*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Management.MethodData.OutParameters
  id: OutParameters
  parent: System.Management.MethodData
  langs:
  - csharp
  name: OutParameters
  nameWithType: MethodData.OutParameters
  fullName: System.Management.MethodData.OutParameters
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Gets the output parameters to the method. Each parameter is described as a property in the object. If a parameter is both in and out, it will appear in both the &lt;xref:System.Management.MethodData.InParameters%2A&gt; and OutParameters properties."
  remarks: "Each parameter in this object should have an ID qualifier to identify the order of the parameters in the method call.       The **ReturnValue** property is a special property of the <xref:System.Management.ManagementBaseObject> returned by the OutParameters property and holds the return value of the method.      ## Property Value    A <xref:System.Management.ManagementBaseObject> containing all the output parameters to the method.      ## .NET Framework Security    Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md)."
  example:
  - "The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class. For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_MethodData_OutParameters#1](~/add/codesnippet/VisualBasic/p-system.management.meth_2_1.vb)]\n [!code-cs[wminet_MethodData_OutParameters#1](~/add/codesnippet/CSharp/p-system.management.meth_2_1.cs)]"
  syntax:
    content: public System.Management.ManagementBaseObject OutParameters { get; }
    return:
      type: System.Management.ManagementBaseObject
      description: "Returns a <see cref=&quot;T:System.Management.ManagementBaseObject&quot;></see> containing the output parameters for the method."
  overload: System.Management.MethodData.OutParameters*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Management.MethodData.Qualifiers
  id: Qualifiers
  parent: System.Management.MethodData
  langs:
  - csharp
  name: Qualifiers
  nameWithType: MethodData.Qualifiers
  fullName: System.Management.MethodData.Qualifiers
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Gets a collection of qualifiers defined in the method. Each element is of type <see cref=&quot;T:System.Management.QualifierData&quot;></see> and contains information such as the *qualifier* name, value, and *flavor*."
  remarks: "## Property Value    A <xref:System.Management.QualifierDataCollection> containing the qualifiers for this method.      ## .NET Framework Security    Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md)."
  example:
  - "The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class. For more information about the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.  \n  \n [!code-vb[wminet_MethodData_Qualifiers#1](~/add/codesnippet/VisualBasic/p-system.management.meth_1_1.vb)]\n [!code-cs[wminet_MethodData_Qualifiers#1](~/add/codesnippet/CSharp/p-system.management.meth_1_1.cs)]"
  syntax:
    content: public System.Management.QualifierDataCollection Qualifiers { get; }
    return:
      type: System.Management.QualifierDataCollection
      description: "Returns a <see cref=&quot;T:System.Management.QualifierDataCollection&quot;></see> containing the qualifiers for the method."
  overload: System.Management.MethodData.Qualifiers*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.MethodData.InParameters
  parent: System.Management.MethodData
  isExternal: false
  name: InParameters
  nameWithType: MethodData.InParameters
  fullName: System.Management.MethodData.InParameters
- uid: System.Management.ManagementBaseObject
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject
- uid: System.Management.MethodData.Name
  parent: System.Management.MethodData
  isExternal: false
  name: Name
  nameWithType: MethodData.Name
  fullName: System.Management.MethodData.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.MethodData.Origin
  parent: System.Management.MethodData
  isExternal: false
  name: Origin
  nameWithType: MethodData.Origin
  fullName: System.Management.MethodData.Origin
- uid: System.Management.MethodData.OutParameters
  parent: System.Management.MethodData
  isExternal: false
  name: OutParameters
  nameWithType: MethodData.OutParameters
  fullName: System.Management.MethodData.OutParameters
- uid: System.Management.MethodData.Qualifiers
  parent: System.Management.MethodData
  isExternal: false
  name: Qualifiers
  nameWithType: MethodData.Qualifiers
  fullName: System.Management.MethodData.Qualifiers
- uid: System.Management.QualifierDataCollection
  parent: System.Management
  isExternal: false
  name: QualifierDataCollection
  nameWithType: QualifierDataCollection
  fullName: System.Management.QualifierDataCollection
- uid: System.Management.MethodData.InParameters*
  parent: System.Management.MethodData
  isExternal: false
  name: InParameters
  nameWithType: MethodData.InParameters
- uid: System.Management.MethodData.Name*
  parent: System.Management.MethodData
  isExternal: false
  name: Name
  nameWithType: MethodData.Name
- uid: System.Management.MethodData.Origin*
  parent: System.Management.MethodData
  isExternal: false
  name: Origin
  nameWithType: MethodData.Origin
- uid: System.Management.MethodData.OutParameters*
  parent: System.Management.MethodData
  isExternal: false
  name: OutParameters
  nameWithType: MethodData.OutParameters
- uid: System.Management.MethodData.Qualifiers*
  parent: System.Management.MethodData
  isExternal: false
  name: Qualifiers
  nameWithType: MethodData.Qualifiers
