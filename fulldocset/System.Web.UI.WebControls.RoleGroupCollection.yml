### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.RoleGroupCollection
  id: RoleGroupCollection
  children:
  - System.Web.UI.WebControls.RoleGroupCollection.#ctor
  - System.Web.UI.WebControls.RoleGroupCollection.Add(System.Web.UI.WebControls.RoleGroup)
  - System.Web.UI.WebControls.RoleGroupCollection.Contains(System.Web.UI.WebControls.RoleGroup)
  - System.Web.UI.WebControls.RoleGroupCollection.CopyTo(System.Web.UI.WebControls.RoleGroup[],System.Int32)
  - System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup(System.Security.Principal.IPrincipal)
  - System.Web.UI.WebControls.RoleGroupCollection.IndexOf(System.Web.UI.WebControls.RoleGroup)
  - System.Web.UI.WebControls.RoleGroupCollection.Insert(System.Int32,System.Web.UI.WebControls.RoleGroup)
  - System.Web.UI.WebControls.RoleGroupCollection.Item(System.Int32)
  - System.Web.UI.WebControls.RoleGroupCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.RoleGroupCollection.Remove(System.Web.UI.WebControls.RoleGroup)
  langs:
  - csharp
  name: RoleGroupCollection
  nameWithType: RoleGroupCollection
  fullName: System.Web.UI.WebControls.RoleGroupCollection
  type: Class
  summary: "Contains a sequential list of role groups that the <xref href=&quot;System.Web.UI.WebControls.LoginView&quot;></xref> control uses to determine which control template to display to users based on their role. This class cannot be inherited."
  remarks: "The RoleGroupCollection class manages the list of role groups associated with a particular <xref:System.Web.UI.WebControls.LoginView> template. Each role group defines the content and controls to display to a particular group of users on your Web site. It is possible to assign several role groups to the same template.       To find the role group in the collection that a particular user belongs to, you can use the <xref:System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup%2A> method to search the collection by user name.      > [!CAUTION] >  The order of the roles in the RoleGroupCollection collection is important because matching is done sequentially based on the first role found.       You must configure role management to use the RoleGroupCollection class to manage a list of role groups. For more information, see [Understanding Role Management](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.RoleGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public sealed class RoleGroupCollection : System.Collections.CollectionBase
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: RoleGroupCollection()
  nameWithType: RoleGroupCollection.RoleGroupCollection()
  fullName: System.Web.UI.WebControls.RoleGroupCollection.RoleGroupCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.RoleGroupCollection&quot;></xref> class."
  syntax:
    content: public RoleGroupCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.RoleGroupCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.Add(System.Web.UI.WebControls.RoleGroup)
  id: Add(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: Add(RoleGroup)
  nameWithType: RoleGroupCollection.Add(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Add(RoleGroup)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds a role group to the end of the collection."
  remarks: ''
  example:
  - "The following code example adds a dynamically created <xref:System.Web.UI.WebControls.RoleGroup> object to the <xref:System.Web.UI.WebControls.RoleGroupCollection>. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.RoleGroup> class.  \n  \n [!code-vb[RoleGroupClass#2](~/add/codesnippet/visualbasic/67c62619-8f27-4d59-9186-_1.aspx)]\n [!code-cs[RoleGroupClass#2](~/add/codesnippet/csharp/67c62619-8f27-4d59-9186-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.RoleGroup group);
    parameters:
    - id: group
      type: System.Web.UI.WebControls.RoleGroup
      description: "The <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> to add to the collection."
  overload: System.Web.UI.WebControls.RoleGroupCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.Contains(System.Web.UI.WebControls.RoleGroup)
  id: Contains(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: Contains(RoleGroup)
  nameWithType: RoleGroupCollection.Contains(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Contains(RoleGroup)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Indicates whether the collection contains the specified role group."
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.RoleGroup group);
    parameters:
    - id: group
      type: System.Web.UI.WebControls.RoleGroup
      description: "The <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> to look for in the collection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified role group is a member of the collection; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.RoleGroupCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.CopyTo(System.Web.UI.WebControls.RoleGroup[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.RoleGroup[],System.Int32)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: CopyTo(RoleGroup[],Int32)
  nameWithType: RoleGroupCollection.CopyTo(RoleGroup[],Int32)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.CopyTo(RoleGroup[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies all the items from the <xref href=&quot;System.Web.UI.WebControls.RoleGroupCollection&quot;></xref> collection to a compatible one-dimensional array of <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> objects, starting at the specified index in the target array."
  remarks: "Use the CopyTo method to copy the contents of the collection into the specified zero-based array. Items are copied starting at the specified index of the target array. After the items are in an array, you can use array syntax to access the items in the <xref:System.Web.UI.WebControls.RoleGroupCollection> collection."
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.RoleGroup[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.RoleGroup[]
      description: "A zero-based array of <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> objects that receives the items copied from the collection."
    - id: index
      type: System.Int32
      description: "The position in the target array at which the array starts receiving the copied items."
  overload: System.Web.UI.WebControls.RoleGroupCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup(System.Security.Principal.IPrincipal)
  id: GetMatchingRoleGroup(System.Security.Principal.IPrincipal)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: GetMatchingRoleGroup(IPrincipal)
  nameWithType: RoleGroupCollection.GetMatchingRoleGroup(IPrincipal)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup(IPrincipal)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns the first role group that contains the specified user account."
  remarks: "The GetMatchingRoleGroup method searches the role group collection and returns the first role group that contains the specified user account. The method searches the collection in the order role groups are added to the collection, and returns only the first matching role group.       If the specified user account is not part of any of the role groups in the collection, `null` is returned.       You must configure role management to use the GetMatchingRoleGroup method. For more information, see [Understanding Role Management](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.UI.WebControls.RoleGroup GetMatchingRoleGroup (System.Security.Principal.IPrincipal user);
    parameters:
    - id: user
      type: System.Security.Principal.IPrincipal
      description: "An <xref:System.Security.Principal.IPrincipal> that represents the user account to find the role group collection."
    return:
      type: System.Web.UI.WebControls.RoleGroup
      description: "A <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> representing the first role group in the collection that contains the specified user account. If the user is not part of a role group in the collection, it returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.IndexOf(System.Web.UI.WebControls.RoleGroup)
  id: IndexOf(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: IndexOf(RoleGroup)
  nameWithType: RoleGroupCollection.IndexOf(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.IndexOf(RoleGroup)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Searches the collection and returns the zero-based index of the first occurrence of the specified <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref>."
  remarks: "The IndexOf method performs a linear search; therefore the average execution time depends on the number of members in the collection."
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.RoleGroup group);
    parameters:
    - id: group
      type: System.Web.UI.WebControls.RoleGroup
      description: "The <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> to locate in the collection."
    return:
      type: System.Int32
      description: "The zero-based index of the first occurrence of <code>group</code> within the entire <xref href=&quot;System.Web.UI.WebControls.RoleGroupCollection&quot;></xref>, if found; otherwise, -1."
  overload: System.Web.UI.WebControls.RoleGroupCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.Insert(System.Int32,System.Web.UI.WebControls.RoleGroup)
  id: Insert(System.Int32,System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: Insert(Int32,RoleGroup)
  nameWithType: RoleGroupCollection.Insert(Int32,RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Insert(Int32,RoleGroup)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds a <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> to the collection at the specified index."
  remarks: "The Insert method inserts the specified <xref:System.Web.UI.WebControls.RoleGroup> at the specified location. Role groups that follow the insertion point move down in the collection to accommodate the new element."
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.RoleGroup group);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which to insert the role group."
    - id: group
      type: System.Web.UI.WebControls.RoleGroup
      description: "The role group to insert."
  overload: System.Web.UI.WebControls.RoleGroupCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: RoleGroupCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the role group at the specified index."
  syntax:
    content: public System.Web.UI.WebControls.RoleGroup this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the role group to return."
    return:
      type: System.Web.UI.WebControls.RoleGroup
      description: "The <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> at the specified index."
  overload: System.Web.UI.WebControls.RoleGroupCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: RoleGroupCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "To be added."
  overload: System.Web.UI.WebControls.RoleGroupCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.RoleGroupCollection.Remove(System.Web.UI.WebControls.RoleGroup)
  id: Remove(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  langs:
  - csharp
  name: Remove(RoleGroup)
  nameWithType: RoleGroupCollection.Remove(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Remove(RoleGroup)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Deletes the first occurrence of the specified role group from the collection."
  remarks: "The first instance of the specified <xref:System.Web.UI.WebControls.RoleGroup> object is removed from the <xref:System.Web.UI.WebControls.RoleGroupCollection> collection. Groups that follow the removed group all move up in the index to fill the vacated spot. If there is more than one instance of the specified <xref:System.Web.UI.WebControls.RoleGroup> object, only the first instance is removed."
  syntax:
    content: public void Remove (System.Web.UI.WebControls.RoleGroup group);
    parameters:
    - id: group
      type: System.Web.UI.WebControls.RoleGroup
      description: "The <xref href=&quot;System.Web.UI.WebControls.RoleGroup&quot;></xref> to remove from the collection."
  overload: System.Web.UI.WebControls.RoleGroupCollection.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.RoleGroupCollection.#ctor
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: RoleGroupCollection()
  nameWithType: RoleGroupCollection.RoleGroupCollection()
  fullName: System.Web.UI.WebControls.RoleGroupCollection.RoleGroupCollection()
- uid: System.Web.UI.WebControls.RoleGroupCollection.Add(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Add(RoleGroup)
  nameWithType: RoleGroupCollection.Add(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Add(RoleGroup)
- uid: System.Web.UI.WebControls.RoleGroup
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RoleGroup
  nameWithType: RoleGroup
  fullName: System.Web.UI.WebControls.RoleGroup
- uid: System.Web.UI.WebControls.RoleGroupCollection.Contains(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Contains(RoleGroup)
  nameWithType: RoleGroupCollection.Contains(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Contains(RoleGroup)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.RoleGroupCollection.CopyTo(System.Web.UI.WebControls.RoleGroup[],System.Int32)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: CopyTo(RoleGroup[],Int32)
  nameWithType: RoleGroupCollection.CopyTo(RoleGroup[],Int32)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.CopyTo(RoleGroup[],Int32)
- uid: System.Web.UI.WebControls.RoleGroup[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RoleGroup
  nameWithType: RoleGroup
  fullName: System.Web.UI.WebControls.RoleGroup[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.RoleGroup
    name: RoleGroup
    nameWithType: RoleGroup
    fullName: RoleGroup[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup(System.Security.Principal.IPrincipal)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: GetMatchingRoleGroup(IPrincipal)
  nameWithType: RoleGroupCollection.GetMatchingRoleGroup(IPrincipal)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup(IPrincipal)
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.WebControls.RoleGroupCollection.IndexOf(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: IndexOf(RoleGroup)
  nameWithType: RoleGroupCollection.IndexOf(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.IndexOf(RoleGroup)
- uid: System.Web.UI.WebControls.RoleGroupCollection.Insert(System.Int32,System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Insert(Int32,RoleGroup)
  nameWithType: RoleGroupCollection.Insert(Int32,RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Insert(Int32,RoleGroup)
- uid: System.Web.UI.WebControls.RoleGroupCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: RoleGroupCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Item(Int32)
- uid: System.Web.UI.WebControls.RoleGroupCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: RoleGroupCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.OnValidate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.RoleGroupCollection.Remove(System.Web.UI.WebControls.RoleGroup)
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Remove(RoleGroup)
  nameWithType: RoleGroupCollection.Remove(RoleGroup)
  fullName: System.Web.UI.WebControls.RoleGroupCollection.Remove(RoleGroup)
- uid: System.Web.UI.WebControls.RoleGroupCollection.#ctor*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: RoleGroupCollection
  nameWithType: RoleGroupCollection.RoleGroupCollection
- uid: System.Web.UI.WebControls.RoleGroupCollection.Add*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Add
  nameWithType: RoleGroupCollection.Add
- uid: System.Web.UI.WebControls.RoleGroupCollection.Contains*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Contains
  nameWithType: RoleGroupCollection.Contains
- uid: System.Web.UI.WebControls.RoleGroupCollection.CopyTo*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: CopyTo
  nameWithType: RoleGroupCollection.CopyTo
- uid: System.Web.UI.WebControls.RoleGroupCollection.GetMatchingRoleGroup*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: GetMatchingRoleGroup
  nameWithType: RoleGroupCollection.GetMatchingRoleGroup
- uid: System.Web.UI.WebControls.RoleGroupCollection.IndexOf*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: IndexOf
  nameWithType: RoleGroupCollection.IndexOf
- uid: System.Web.UI.WebControls.RoleGroupCollection.Insert*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Insert
  nameWithType: RoleGroupCollection.Insert
- uid: System.Web.UI.WebControls.RoleGroupCollection.Item*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Item
  nameWithType: RoleGroupCollection.Item
- uid: System.Web.UI.WebControls.RoleGroupCollection.OnValidate*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: OnValidate
  nameWithType: RoleGroupCollection.OnValidate
- uid: System.Web.UI.WebControls.RoleGroupCollection.Remove*
  parent: System.Web.UI.WebControls.RoleGroupCollection
  isExternal: false
  name: Remove
  nameWithType: RoleGroupCollection.Remove
