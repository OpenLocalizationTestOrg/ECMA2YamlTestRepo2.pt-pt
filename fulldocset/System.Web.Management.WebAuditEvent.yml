### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebAuditEvent
  id: WebAuditEvent
  children:
  - System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebAuditEvent.RequestInformation
  langs:
  - csharp
  name: WebAuditEvent
  nameWithType: WebAuditEvent
  fullName: System.Web.Management.WebAuditEvent
  type: Class
  summary: "Serve como a classe base para eventos de auditoria de monitorização de estado de funcionamento do ASP.NET todos os."
  remarks: "Monitorização de estado de funcionamento do ASP.NET permite que os funcionários de operações e de produção gerir aplicações implementadas do Web. O <xref:System.Web.Management>espaço de nomes contém os tipos de eventos de estado de funcionamento responsáveis pelo empacotamento dados de estado de funcionamento da aplicação e os tipos de fornecedor responsáveis por processar estes dados.</xref:System.Web.Management> Também contém tipos de suporte que ajudam a durante a gestão de eventos de estado de funcionamento.       A classe de WebAuditEvent é a classe base a partir da qual derivam as classes de evento de auditoria de monitorização de estado de funcionamento do ASP.NET. Os eventos de auditoria geram informações sobre as operações relacionadas com a segurança de uma aplicação Web e fornecem o evento dos êxitos e falhas para cada operação auditada.       O sistema de monitorização de estado de funcionamento pode eventos de auditoria com êxito e êxito, o que significa que uma aplicação pode ser monitorizada condições normais e malfunctioning. Por predefinição, apenas os eventos de auditoria de falha são registados.       As seguintes operações são auditadas ao ASP.NET e poderá gerar eventos de auditoria de monitorização de estado de funcionamento com êxito ou falha:-tentativas de início de sessão por utilizadores de uma aplicação ASP.NET. Para obter mais detalhes sobre este auditoria, ver <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>e <xref:System.Web.Management.WebSuccessAuditEvent>.</xref:System.Web.Management.WebSuccessAuditEvent> </xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>      -Eventos de relacionadas com segurança, tais como falhas de autenticação, as tentativas de acesso de recurso com falhas e outros eventos relacionados com segurança. O registo destes eventos pode ser úteis quando investigar uma intrusões ou ataque na aplicação. Por predefinição, não existe suporte de auditoria é fornecido para falhas de autorização de utilizadores anónimos. Para obter mais detalhes sobre as auditorias de eventos de falha, consulte <xref:System.Web.Management.WebAuthenticationFailureAuditEvent>e <xref:System.Web.Management.WebFailureAuditEvent>.</xref:System.Web.Management.WebFailureAuditEvent> </xref:System.Web.Management.WebAuthenticationFailureAuditEvent>      -Personalizados eventos gerados por uma aplicação ASP.NET. Pode auditar eventos personalizados ao alargar a funcionalidade fornecida pela classe WebAuditEvent e derivada classes > [!NOTE] > na maioria dos casos poderá utilizar os tipos de monitorização de estado de funcionamento do ASP.NET, conforme implementado e vai controlar o sistema de monitorização de estado de funcionamento, especificando valores de `healthMonitoring` secção de configuração. Também pode derivar de tipos de monitorização de estado de funcionamento para criar os seus próprios fornecedores e eventos personalizados. Para obter um exemplo de derivar da classe de WebAuditEvent, consulte o exemplo fornecido neste tópico."
  example:
  - "The following code example shows how to derive from the WebAuditEvent class to create a custom audit event.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._1_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._1_1.vb)]  \n  \n The following is an excerpt of the configuration file that enables ASP.NET to use the event.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">   \n  \n  <providers>  \n    <add name=\"EventLogProvider\"   \n      type=\"System.Web.Management.EventLogWebEventProvider,  \n      System.Web,Version=2.0.3600.0,Culture=neutral,  \n      PublicKeyToken=b03f5f7f11d50a3a\"/>  \n  </providers>  \n  \n  <eventMappings>  \n    <add  name=\"SampleWebAuditEvent\"   \n      type=\"SamplesAspNet.SampleWebAuditEvent,  \n      webauditevent,Version=1.0.1663.31140,   \n      Culture=neutral,   \n      PublicKeyToken=0d1fa0f69d94de96,   \n      processorArchitecture=MSIL\"/>  \n  </eventMappings>  \n  \n  <rules>  \n    <add name=\"Custom Audit Default\"  \n      eventName=\"SampleWebAuditEvent\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"/>    \n  </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebAuditEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.IncrementPerfCounters
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: WebAuditEvent(String,Object,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Management.WebAuditEvent&quot;> </xref> classe utilizando os parâmetros fornecidos."
  remarks: "Este construtor é utilizado internamente pelo sistema de monitorização de estado de funcionamento ASP.NET. Nunca irá utilizá-lo ao instanciar um <xref:System.Web.Management.WebAuditEvent>objeto, mas pode chamar este construtor quando implementar o seu próprio tipo de evento que herda esta classe.</xref:System.Web.Management.WebAuditEvent>"
  example:
  - "The following code example shows how to call this constructor. This code example is part of a larger example provided for the <xref:System.Web.Management.WebAuditEvent> class.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#2](~/add/codesnippet/csharp/52e543aa-2080-4fab-ac1a-_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#2](~/add/codesnippet/visualbasic/52e543aa-2080-4fab-ac1a-_1.vb)]"
  syntax:
    content: protected WebAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "A descrição do evento."
    - id: eventSource
      type: System.Object
      description: "O objeto que é a origem do evento."
    - id: eventCode
      type: System.Int32
      description: "O código associado ao evento. Quando implementar um evento personalizado, o código de evento tem de ser maior que <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: WebAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Management.WebAuditEvent&quot;> </xref> classe com parâmetros de evento especificado."
  remarks: "Este construtor é utilizado internamente pelo sistema de monitorização de estado de funcionamento ASP.NET. Nunca irá utilizá-lo ao instanciar um <xref:System.Web.Management.WebAuditEvent>objeto, mas pode chamar este construtor quando implementar o seu próprio tipo de evento que herda esta classe.</xref:System.Web.Management.WebAuditEvent>"
  example:
  - "The following code example shows how to call this constructor. This code example is part of a larger example provided for the <xref:System.Web.Management.WebAuditEvent> class.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#3](~/add/codesnippet/csharp/2ea9ddd5-d72f-4e91-92b6-_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#3](~/add/codesnippet/visualbasic/2ea9ddd5-d72f-4e91-92b6-_1.vb)]"
  syntax:
    content: protected WebAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "A descrição do evento."
    - id: eventSource
      type: System.Object
      description: "O objeto que é a origem do evento."
    - id: eventCode
      type: System.Int32
      description: "O código associado ao evento. Quando implementar um evento personalizado, o código de evento tem de ser maior que <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "O <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> valor que especifica o identificador de detalhado para o evento."
  overload: System.Web.Management.WebAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebAuditEvent.RequestInformation
  id: RequestInformation
  parent: System.Web.Management.WebAuditEvent
  langs:
  - csharp
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
  fullName: System.Web.Management.WebAuditEvent.RequestInformation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Obter as informações associadas com o pedido Web."
  remarks: "Utilize as informações fornecidas pela propriedade RequestInformation para ajudar na deteção das causas de uma avaria."
  example:
  - "The following code example shows how to obtain request information through the <xref:System.Web.Management.WebRequestInformation> property.  \n  \n [!code-cs[System.Web.Management.WebAuditEvent#5](~/add/codesnippet/csharp/p-system.web.management._14_1.cs)]\n [!code-vb[System.Web.Management.WebAuditEvent#5](~/add/codesnippet/visualbasic/p-system.web.management._14_1.vb)]"
  syntax:
    content: public System.Web.Management.WebRequestInformation RequestInformation { get; }
    return:
      type: System.Web.Management.WebRequestInformation
      description: "A <xref href=&quot;System.Web.Management.WebRequestInformation&quot;> </xref> que contém as informações associadas com o pedido Web."
  overload: System.Web.Management.WebAuditEvent.RequestInformation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent(String,Object,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebAuditEvent.WebAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebAuditEvent.RequestInformation
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
  fullName: System.Web.Management.WebAuditEvent.RequestInformation
- uid: System.Web.Management.WebRequestInformation
  parent: System.Web.Management
  isExternal: false
  name: WebRequestInformation
  nameWithType: WebRequestInformation
  fullName: System.Web.Management.WebRequestInformation
- uid: System.Web.Management.WebAuditEvent.#ctor*
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: WebAuditEvent
  nameWithType: WebAuditEvent.WebAuditEvent
- uid: System.Web.Management.WebAuditEvent.RequestInformation*
  parent: System.Web.Management.WebAuditEvent
  isExternal: false
  name: RequestInformation
  nameWithType: WebAuditEvent.RequestInformation
