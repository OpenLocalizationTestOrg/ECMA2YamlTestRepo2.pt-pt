### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.WorkflowServiceHost
  id: WorkflowServiceHost
  children:
  - System.ServiceModel.Activities.WorkflowServiceHost.#ctor
  - System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])
  - System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])
  - System.ServiceModel.Activities.WorkflowServiceHost.Activity
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)
  - System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)
  - System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions
  - System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime
  - System.ServiceModel.Activities.WorkflowServiceHost.OnAbort
  - System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)
  - System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions
  - System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions
  langs:
  - csharp
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost
  fullName: System.ServiceModel.Activities.WorkflowServiceHost
  type: Class
  summary: "Provides a host for workflows. Supports features like messaging activities, multi-instancing, and configuration."
  remarks: ''
  example:
  - "The following example shows how to use the WorkflowServiceHost class.  \n  \n [!code-cs[SendReceiveParameters#03](~/add/codesnippet/csharp/echoworkflowservice/program.cs#03)]"
  syntax:
    content: 'public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Activities.WorkflowServiceHost&quot;></xref> class."
  syntax:
    content: protected WorkflowServiceHost ();
    parameters: []
  overload: System.ServiceModel.Activities.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])
  id: '#ctor(System.Activities.Activity,System.Uri[])'
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Activity,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Activity,Uri[])
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost(Activity,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Activities.WorkflowServiceHost&quot;></xref> class using the specified activity and base addresses."
  remarks: ''
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-cs[CreationEndpoint#0](~/add/codesnippet/csharp/d7ce2a74-6ab2-460f-aba1-_1.cs)]"
  syntax:
    content: public WorkflowServiceHost (System.Activities.Activity activity, Uri[] baseAddresses);
    parameters:
    - id: activity
      type: System.Activities.Activity
      description: "The root activity of the workflow service."
    - id: baseAddresses
      type: System.Uri[]
      description: "An array of  base addresses for the workflow service."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Object,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Activities.WorkflowServiceHost&quot;></xref> class using the specified service object and base addresses."
  syntax:
    content: public WorkflowServiceHost (object serviceImplementation, Uri[] baseAddresses);
    parameters:
    - id: serviceImplementation
      type: System.Object
      description: "The root activity of the workflow service to be hosted."
    - id: baseAddresses
      type: System.Uri[]
      description: "An array of base addresses for the workflow service."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])
  id: '#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])'
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(WorkflowService,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(WorkflowService,Uri[])
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost(WorkflowService,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Activities.WorkflowServiceHost&quot;></xref> class using the specified service definition and collection of base addresses."
  syntax:
    content: public WorkflowServiceHost (System.ServiceModel.Activities.WorkflowService serviceDefinition, Uri[] baseAddresses);
    parameters:
    - id: serviceDefinition
      type: System.ServiceModel.Activities.WorkflowService
      description: "The workflow service to host."
    - id: baseAddresses
      type: System.Uri[]
      description: "An array of base addresses for the hosted workflow service."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.Activity
  id: Activity
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: Activity
  nameWithType: WorkflowServiceHost.Activity
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.Activity
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Gets the root activity of the hosted workflow service."
  syntax:
    content: public System.Activities.Activity Activity { get; }
    return:
      type: System.Activities.Activity
      description: "The root activity of the hosted workflow service."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.Activity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host."
  remarks: ''
  example:
  - "The following example shows how to use the AddServiceEndpoint method.  \n  \n [!code-cs[CreationEndpoint#0](~/add/codesnippet/csharp/c257e330-a8ba-4d02-b66c-_1.cs)]"
  syntax:
    content: public override void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The service endpoint to add."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host using the specified contract, binding, and address."
  remarks: ''
  example:
  - "The following example shows how to add a service endpoint using this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "The service contract exposed by the endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding for the endpoint."
    - id: address
      type: System.String
      description: "The address of the endpoint.."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "A service endpoint."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host using the specified contract, binding, and address."
  remarks: ''
  example:
  - "The following example shows how to add a service endpoint using this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "The service contract exposed by the endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding for the endpoint."
    - id: address
      type: System.Uri
      description: "The address of the endpoint."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "A service endpoint."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host using the specified contract, binding, endpoint address, and listen URI."
  remarks: ''
  example:
  - "The following example shows how to add a service endpoint using this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "The service contract exposed by the endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding for the endpoint."
    - id: address
      type: System.String
      description: "The address of the endpoint."
    - id: listenUri
      type: System.Uri
      description: "The address at which the service endpoint listens for incoming messages."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "A service endpoint."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host using the specified contract, binding, endpoint address, and listen URI."
  remarks: ''
  example:
  - "The following example shows how to add a service endpoint using this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "The contract exposed by the endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding for the endpoint."
    - id: address
      type: System.Uri
      description: "The address of the endpoint.l"
    - id: listenUri
      type: System.Uri
      description: "The address at which the service endpoint listens for incoming messages."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "A service endpoint."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)
  id: AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(XName,Binding,String,Uri,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(XName,Binding,String,Uri,String)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(XName,Binding,String,Uri,String)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host using the specified contract, binding, endpoint address, listen URI, and behavior configuration name."
  remarks: ''
  example:
  - "The following example shows how to add a service endpoint using this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (System.Xml.Linq.XName serviceContractName, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri = null, string behaviorConfigurationName = null);
    parameters:
    - id: serviceContractName
      type: System.Xml.Linq.XName
      description: "The contract exposed by the endpoint"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding for the endpoint."
    - id: address
      type: System.String
      description: "The address of the endpoint."
    - id: listenUri
      type: System.Uri
      description: "The address at which the service endpoint listens for incoming messages."
    - id: behaviorConfigurationName
      type: System.String
      description: "The endpoint behavior configuration name."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "A service endpoint."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)
  id: AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(XName,Binding,Uri,Uri,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(XName,Binding,Uri,Uri,String)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(XName,Binding,Uri,Uri,String)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Adds a service endpoint to the workflow service host using the specified implemented contract, binding, endpoint address, listen URI, and a behavior configuration name."
  remarks: ''
  example:
  - "The following example shows how to add a service endpoint using this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (System.Xml.Linq.XName serviceContractName, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri = null, string behaviorConfigurationName = null);
    parameters:
    - id: serviceContractName
      type: System.Xml.Linq.XName
      description: "The contract exposed by the endpoint."
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "The binding for the endpoint."
    - id: address
      type: System.Uri
      description: "The address of the endpoint."
    - id: listenUri
      type: System.Uri
      description: "The address at which the service endpoint listens for incoming messages."
    - id: behaviorConfigurationName
      type: System.String
      description: "The behavior configuration name."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "A service endpoint."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Creates a service description of the hosted workflow service using the specified key/value pair collection of address, binding, contract and behavior service endpoint information."
  remarks: "Override this method to control how the service description of the hosted workflow service is created."
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "A collection of key/value pairs that contains the contract description for the hosted workflow service."
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "A service for the hosted workflow service."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions
  id: DurableInstancingOptions
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: DurableInstancingOptions
  nameWithType: WorkflowServiceHost.DurableInstancingOptions
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Gets the <xref href=&quot;System.ServiceModel.Activities.DurableInstancingOptions&quot;></xref> associated with the workflow service host."
  syntax:
    content: public System.ServiceModel.Activities.DurableInstancingOptions DurableInstancingOptions { get; }
    return:
      type: System.ServiceModel.Activities.DurableInstancingOptions
      description: "The durable instancing options."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime
  id: InitializeRuntime
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: InitializeRuntime()
  nameWithType: WorkflowServiceHost.InitializeRuntime()
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime()
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Initializes the runtime for the workflow service host."
  syntax:
    content: protected override void InitializeRuntime ();
    parameters: []
  overload: System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: OnAbort()
  nameWithType: WorkflowServiceHost.OnAbort()
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Called when  the workflow service host is aborted."
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Activities.WorkflowServiceHost.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowServiceHost.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Begins an asynchronous operation invoked when the workflow service host is closed."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The period of time the asynchronous close operation has to complete before timing out."
    - id: callback
      type: System.AsyncCallback
      description: "The asynchronous callback delegate that receives notification of the completion of the asynchronous close operation."
    - id: state
      type: System.Object
      description: "User-define state data that is associated with the asynchronous close operation."
    return:
      type: System.IAsyncResult
      description: "A reference to the asynchronous close operation."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: WorkflowServiceHost.OnClose(TimeSpan)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Closes down the hosted service, including the channel dispatchers and associated instance contexts and listeners."
  remarks: "The workflow runtime will try to persist any hosted workflow when OnClose is called, but persistence is not guaranteed in this scenario.  If important business data is being hosted, the instances should persist frequently (such as after each Send operation, or after an interval of time) to ensure that data is not lost."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The period of time the close operation has to complete before timing out."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: WorkflowServiceHost.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Completes an asynchronous operation invoked when the workflow service host is closed."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the asynchronous operation."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions
  id: SupportedVersions
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: SupportedVersions
  nameWithType: WorkflowServiceHost.SupportedVersions
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Gets a list of workflow versions that are supported by this workflow service host."
  syntax:
    content: public System.Collections.Generic.ICollection<System.ServiceModel.Activities.WorkflowService> SupportedVersions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.ServiceModel.Activities.WorkflowService}
      description: "A list of workflow versions that are supported by this workflow service host."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions
  id: WorkflowExtensions
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowExtensions
  nameWithType: WorkflowServiceHost.WorkflowExtensions
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Gets a <xref href=&quot;System.Activities.Hosting.WorkflowInstanceExtensionManager&quot;></xref> object to add or remove extensions to the workflow service instance."
  remarks: ''
  example:
  - "The following example shows how to add an extension to the workflow service host.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Activities.Hosting.WorkflowInstanceExtensionManager WorkflowExtensions { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "workflow instance extension manager."
  overload: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost()
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Activities.Activity,System.Uri[])
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Activity,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Activity,Uri[])
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost(Activity,Uri[])
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Object,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor(System.ServiceModel.Activities.WorkflowService,System.Uri[])
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(WorkflowService,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(WorkflowService,Uri[])
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowServiceHost(WorkflowService,Uri[])
- uid: System.ServiceModel.Activities.WorkflowService
  parent: System.ServiceModel.Activities
  isExternal: false
  name: WorkflowService
  nameWithType: WorkflowService
  fullName: System.ServiceModel.Activities.WorkflowService
- uid: System.ServiceModel.Activities.WorkflowServiceHost.Activity
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: Activity
  nameWithType: WorkflowServiceHost.Activity
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.Activity
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,String,Uri)
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(String,Binding,Uri,Uri)
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.String,System.Uri,System.String)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(XName,Binding,String,Uri,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(XName,Binding,String,Uri,String)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(XName,Binding,String,Uri,String)
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(System.Xml.Linq.XName,System.ServiceModel.Channels.Binding,System.Uri,System.Uri,System.String)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(XName,Binding,Uri,Uri,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(XName,Binding,Uri,Uri,String)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint(XName,Binding,Uri,Uri,String)
- uid: System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: DurableInstancingOptions
  nameWithType: WorkflowServiceHost.DurableInstancingOptions
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions
- uid: System.ServiceModel.Activities.DurableInstancingOptions
  parent: System.ServiceModel.Activities
  isExternal: false
  name: DurableInstancingOptions
  nameWithType: DurableInstancingOptions
  fullName: System.ServiceModel.Activities.DurableInstancingOptions
- uid: System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: InitializeRuntime()
  nameWithType: WorkflowServiceHost.InitializeRuntime()
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime()
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnAbort
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnAbort()
  nameWithType: WorkflowServiceHost.OnAbort()
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnAbort()
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowServiceHost.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: WorkflowServiceHost.OnClose(TimeSpan)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnClose(TimeSpan)
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: WorkflowServiceHost.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: SupportedVersions
  nameWithType: WorkflowServiceHost.SupportedVersions
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions
- uid: System.Collections.Generic.ICollection{System.ServiceModel.Activities.WorkflowService}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<WorkflowService>
  nameWithType: ICollection<WorkflowService>
  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Activities.WorkflowService>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.ServiceModel.Activities.WorkflowService>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Activities.WorkflowService
    name: WorkflowService
    nameWithType: WorkflowService
    fullName: WorkflowService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowExtensions
  nameWithType: WorkflowServiceHost.WorkflowExtensions
  fullName: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.ServiceModel.Activities.WorkflowServiceHost.#ctor*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost.WorkflowServiceHost
- uid: System.ServiceModel.Activities.WorkflowServiceHost.Activity*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: Activity
  nameWithType: WorkflowServiceHost.Activity
- uid: System.ServiceModel.Activities.WorkflowServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: WorkflowServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.Activities.WorkflowServiceHost.CreateDescription*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: WorkflowServiceHost.CreateDescription
- uid: System.ServiceModel.Activities.WorkflowServiceHost.DurableInstancingOptions*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: DurableInstancingOptions
  nameWithType: WorkflowServiceHost.DurableInstancingOptions
- uid: System.ServiceModel.Activities.WorkflowServiceHost.InitializeRuntime*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: InitializeRuntime
  nameWithType: WorkflowServiceHost.InitializeRuntime
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnAbort*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnAbort
  nameWithType: WorkflowServiceHost.OnAbort
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnBeginClose*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnBeginClose
  nameWithType: WorkflowServiceHost.OnBeginClose
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnClose*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnClose
  nameWithType: WorkflowServiceHost.OnClose
- uid: System.ServiceModel.Activities.WorkflowServiceHost.OnEndClose*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: OnEndClose
  nameWithType: WorkflowServiceHost.OnEndClose
- uid: System.ServiceModel.Activities.WorkflowServiceHost.SupportedVersions*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: SupportedVersions
  nameWithType: WorkflowServiceHost.SupportedVersions
- uid: System.ServiceModel.Activities.WorkflowServiceHost.WorkflowExtensions*
  parent: System.ServiceModel.Activities.WorkflowServiceHost
  isExternal: false
  name: WorkflowExtensions
  nameWithType: WorkflowServiceHost.WorkflowExtensions
