### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  id: DomainUpDown.DomainUpDownAccessibleObject
  children:
  - System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild(System.Int32)
  - System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChildCount
  - System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.Role
  langs:
  - csharp
  name: DomainUpDown+DomainUpDownAccessibleObject
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject
  type: Class
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DomainUpDown.DomainUpDownAccessibleObject : System.Windows.Forms.Control.ControlAccessibleObject
  inheritance:
  - System.Windows.Forms.Control+ControlAccessibleObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  langs:
  - csharp
  name: DomainUpDown+DomainUpDownAccessibleObject(Control)
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.DomainUpDown+DomainUpDownAccessibleObject(Control)
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.DomainUpDown+DomainUpDownAccessibleObject(Control)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public DomainUpDownAccessibleObject (System.Windows.Forms.Control owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild(System.Int32)
  id: GetChild(System.Int32)
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  langs:
  - csharp
  name: GetChild(Int32)
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.GetChild(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public override System.Windows.Forms.AccessibleObject GetChild (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "To be added."
  overload: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChildCount
  id: GetChildCount
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  langs:
  - csharp
  name: GetChildCount()
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.GetChildCount()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public override int GetChildCount ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChildCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.Role
  id: Role
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  langs:
  - csharp
  name: Role
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.Role
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.Role
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public override System.Windows.Forms.AccessibleRole Role { get; }
    return:
      type: System.Windows.Forms.AccessibleRole
      description: "To be added."
  overload: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.Role*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Control+ControlAccessibleObject
  isExternal: false
  name: System.Windows.Forms.Control+ControlAccessibleObject
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: DomainUpDown+DomainUpDownAccessibleObject(Control)
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.DomainUpDown+DomainUpDownAccessibleObject(Control)
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.DomainUpDown+DomainUpDownAccessibleObject(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild(System.Int32)
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: GetChild(Int32)
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.GetChild(Int32)
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.GetChild(Int32)
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChildCount
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: GetChildCount()
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.GetChildCount()
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.GetChildCount()
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.Role
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: Role
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.Role
  fullName: System.Windows.Forms.DomainUpDown+DomainUpDownAccessibleObject.Role
- uid: System.Windows.Forms.AccessibleRole
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleRole
  nameWithType: AccessibleRole
  fullName: System.Windows.Forms.AccessibleRole
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.#ctor*
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: DomainUpDown+DomainUpDownAccessibleObject
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.DomainUpDown+DomainUpDownAccessibleObject
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChild*
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: GetChild
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.GetChild
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.GetChildCount*
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: GetChildCount
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.GetChildCount
- uid: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject.Role*
  parent: System.Windows.Forms.DomainUpDown.DomainUpDownAccessibleObject
  isExternal: false
  name: Role
  nameWithType: DomainUpDown+DomainUpDownAccessibleObject.Role
