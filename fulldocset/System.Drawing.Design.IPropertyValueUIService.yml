### YamlMime:ManagedReference
items:
- uid: System.Drawing.Design.IPropertyValueUIService
  id: IPropertyValueUIService
  children:
  - System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  - System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  - System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
  - System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  - System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  langs:
  - csharp
  name: IPropertyValueUIService
  nameWithType: IPropertyValueUIService
  fullName: System.Drawing.Design.IPropertyValueUIService
  type: Interface
  summary: "Fornece uma interface para gerir as imagens, descrições e processadores de eventos para as propriedades de um componente apresentado num browser de propriedade."
  remarks: "Um componente pode utilizar a interface IPropertyValueUIService para fornecer <xref:System.Drawing.Design.PropertyValueUIItem>objetos para as propriedades do componente.</xref:System.Drawing.Design.PropertyValueUIItem> A <xref:System.Drawing.Design.PropertyValueUIItem>associados a uma propriedade, pode fornecer uma imagem, uma descrição e um processador de eventos para o evento é desencadeado quando a imagem associada com a propriedade é clicada.</xref:System.Drawing.Design.PropertyValueUIItem>       A interface IPropertyValueUIService fornece métodos para adicionar, remover e obter <xref:System.Drawing.Design.PropertyValueUIHandler>delegados para ou a partir de uma lista interna.</xref:System.Drawing.Design.PropertyValueUIHandler> Quando as propriedades de um componente são apresentadas no browser de propriedades, cada <xref:System.Drawing.Design.PropertyValueUIHandler>na lista, é dada uma oportunidade para fornecer um <xref:System.Drawing.Design.PropertyValueUIItem>para cada propriedade do componente.</xref:System.Drawing.Design.PropertyValueUIItem> </xref:System.Drawing.Design.PropertyValueUIHandler>       Quando um browser de propriedade é definido para apresentar as propriedades de um objeto, aquele invoca o <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>método desta interface para cada propriedade do componente, transmitir um <xref:System.ComponentModel.PropertyDescriptor>que representa a propriedade.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> O <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>chama o método cada <xref:System.Drawing.Design.PropertyValueUIHandler>que tenha sido adicionado ao serviço.</xref:System.Drawing.Design.PropertyValueUIHandler> </xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> Cada <xref:System.Drawing.Design.PropertyValueUIHandler>pode adicionar um <xref:System.Drawing.Design.PropertyValueUIItem>para o <xref:System.Collections.ArrayList>parâmetro transmitido a `valueUIItemList` parâmetro para fornecer IU itens para a propriedade representada pelo <xref:System.ComponentModel.PropertyDescriptor>transmitido a `propDesc` parâmetro.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Collections.ArrayList> </xref:System.Drawing.Design.PropertyValueUIItem> </xref:System.Drawing.Design.PropertyValueUIHandler>       A <xref:System.Drawing.Design.PropertyValueUIItem>pode conter uma imagem a apresentar junto ao nome da propriedade, uma cadeia de descrição e um processador de eventos para invocar quando uma imagem associada com a propriedade faz duplo clique.</xref:System.Drawing.Design.PropertyValueUIItem>"
  example:
  - "The following code example creates a component that obtains an instance of the IPropertyValueUIService interface and adds a <xref:System.Drawing.Design.PropertyValueUIHandler> to the service. The handler provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`. The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked. The image and the ToolTip are displayed in a <xref:System.Windows.Forms.PropertyGrid> when the grid is showing these properties of the component.  \n  \n [!code-cpp[IPropertyValueUIServiceExample#1](~/add/codesnippet/cpp/t-system.drawing.design._3_1.cpp)]\n [!code-cs[IPropertyValueUIServiceExample#1](~/add/codesnippet/csharp/t-system.drawing.design._3_1.cs)]\n [!code-vb[IPropertyValueUIServiceExample#1](~/add/codesnippet/visualbasic/t-system.drawing.design._3_1.vb)]"
  syntax:
    content: public interface IPropertyValueUIService
  implements: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  id: AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: AddPropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Adiciona especificado <xref href=&quot;System.Drawing.Design.PropertyValueUIHandler&quot;> </xref> para este serviço."
  remarks: "Quando <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>é chamado, cada processador adicionado a este serviço é chamado e dado a oportunidade para adicionar um ícone para a propriedade.</xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A>"
  syntax:
    content: public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);
    parameters:
    - id: newHandler
      type: System.Drawing.Design.PropertyValueUIHandler
      description: "Adicione o processador de IU de valor propriedade."
  overload: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  id: GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  nameWithType: IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  fullName: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Obtém o <xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;> </xref> objetos que correspondem às características de descritor de contexto e a propriedade especificadas."
  syntax:
    content: public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que podem ser utilizados para obter informações de contexto adicional."
    - id: propDesc
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que indica a propriedade para corresponder com as propriedades para devolver."
    return:
      type: System.Drawing.Design.PropertyValueUIItem[]
      description: "Uma matriz de <xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;> </xref> objetos que correspondem aos parâmetros especificados."
  overload: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
  id: NotifyPropertyValueUIItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: NotifyPropertyValueUIItemsChanged()
  nameWithType: IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
  fullName: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Notifica o <xref href=&quot;System.Drawing.Design.IPropertyValueUIService&quot;> </xref> implementação que a lista global dos <xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;> </xref> objetos foi modificado."
  syntax:
    content: public void NotifyPropertyValueUIItemsChanged ();
    parameters: []
  overload: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  id: PropertyUIValueItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: PropertyUIValueItemsChanged
  nameWithType: IPropertyValueUIService.PropertyUIValueItemsChanged
  fullName: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Ocorre quando a lista de <xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;> </xref> objetos está modificado."
  remarks: "Os componentes que funcionam <xref:System.Drawing.Design.PropertyValueUIItem>objetos podem chamar <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A>quando são alterados a respetiva lista de itens.</xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> </xref:System.Drawing.Design.PropertyValueUIItem>"
  syntax:
    content: public event EventHandler PropertyUIValueItemsChanged;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  id: RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  langs:
  - csharp
  name: RemovePropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Design
  summary: "Remove o especificado <xref href=&quot;System.Drawing.Design.PropertyValueUIHandler&quot;> </xref> do valor de propriedade de serviço de IU."
  syntax:
    content: public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);
    parameters:
    - id: newHandler
      type: System.Drawing.Design.PropertyValueUIHandler
      description: "O processador para remover."
  overload: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: AddPropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(PropertyValueUIHandler)
- uid: System.Drawing.Design.PropertyValueUIHandler
  parent: System.Drawing.Design
  isExternal: false
  name: PropertyValueUIHandler
  nameWithType: PropertyValueUIHandler
  fullName: System.Drawing.Design.PropertyValueUIHandler
- uid: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  nameWithType: IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
  fullName: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(ITypeDescriptorContext,PropertyDescriptor)
- uid: System.Drawing.Design.PropertyValueUIItem[]
  parent: System.Drawing.Design
  isExternal: false
  name: PropertyValueUIItem
  nameWithType: PropertyValueUIItem
  fullName: System.Drawing.Design.PropertyValueUIItem[]
  spec.csharp:
  - uid: System.Drawing.Design.PropertyValueUIItem
    name: PropertyValueUIItem
    nameWithType: PropertyValueUIItem
    fullName: PropertyValueUIItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: NotifyPropertyValueUIItemsChanged()
  nameWithType: IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
  fullName: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged()
- uid: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: PropertyUIValueItemsChanged
  nameWithType: IPropertyValueUIService.PropertyUIValueItemsChanged
  fullName: System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: RemovePropertyValueUIHandler(PropertyValueUIHandler)
  nameWithType: IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
  fullName: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(PropertyValueUIHandler)
- uid: System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: AddPropertyValueUIHandler
  nameWithType: IPropertyValueUIService.AddPropertyValueUIHandler
- uid: System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: GetPropertyUIValueItems
  nameWithType: IPropertyValueUIService.GetPropertyUIValueItems
- uid: System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: NotifyPropertyValueUIItemsChanged
  nameWithType: IPropertyValueUIService.NotifyPropertyValueUIItemsChanged
- uid: System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler*
  parent: System.Drawing.Design.IPropertyValueUIService
  isExternal: false
  name: RemovePropertyValueUIHandler
  nameWithType: IPropertyValueUIService.RemovePropertyValueUIHandler
