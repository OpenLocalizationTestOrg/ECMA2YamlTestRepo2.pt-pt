### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WebHttpBinding
  id: WebHttpBinding
  children:
  - System.ServiceModel.WebHttpBinding.#ctor
  - System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  - System.ServiceModel.WebHttpBinding.#ctor(System.String)
  - System.ServiceModel.WebHttpBinding.AllowCookies
  - System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  - System.ServiceModel.WebHttpBinding.ContentTypeMapper
  - System.ServiceModel.WebHttpBinding.CreateBindingElements
  - System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  - System.ServiceModel.WebHttpBinding.EnvelopeVersion
  - System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  - System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  - System.ServiceModel.WebHttpBinding.MaxBufferSize
  - System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.WebHttpBinding.ProxyAddress
  - System.ServiceModel.WebHttpBinding.ReaderQuotas
  - System.ServiceModel.WebHttpBinding.Scheme
  - System.ServiceModel.WebHttpBinding.Security
  - System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  - System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  - System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WebHttpBinding.TransferMode
  - System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  - System.ServiceModel.WebHttpBinding.WriteEncoding
  langs:
  - csharp
  name: WebHttpBinding
  nameWithType: WebHttpBinding
  fullName: System.ServiceModel.WebHttpBinding
  type: Class
  summary: "A binding used to configure endpoints for [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] Web services that are exposed through HTTP requests instead of SOAP messages."
  remarks: "The [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Web Programming Model allows developers to expose [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Web services through HTTP requests that use &quot;plain old XML&quot; (POX) style messaging instead of SOAP-based messaging. For clients to communicate with a service using HTTP requests, an endpoint of the service must be configured with the WebHttpBinding that has the <xref:System.ServiceModel.Description.WebHttpBehavior> attached to it. The WCF Web Programming Model also requires that the individual service operations are annotated with the <xref:System.ServiceModel.Web.WebGetAttribute> or <xref:System.ServiceModel.Web.WebInvokeAttribute> attributes. This defines a mapping from a URI and HTTP method to the service operation, as well as the format of the messages used to call the operation and return the results. Support in [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] for syndication and ASP.AJAX integration are both built on top of the WCF Web Programming Model."
  syntax:
    content: 'public class WebHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;></xref> class."
  remarks: "The default security mode is <xref:System.ServiceModel.WebHttpSecurityMode>, which specifies that no security is used.       To use transport-level security for endpoints configured with this binding, the <xref:System.ServiceModel.WebHttpSecurityMode> value must be specified as a parameter in the <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> constructor.       To use HTTP authentication without HTTPS, the <xref:System.ServiceModel.WebHttpSecurityMode> value must be specified as a parameter in the <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> constructor.       The value of <xref:System.ServiceModel.WebHttpSecurityMode> cannot be set again after the binding instance is created."
  syntax:
    content: public WebHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  id: '#ctor(System.ServiceModel.WebHttpSecurityMode)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;></xref> class with the type of security used by the binding explicitly specified."
  remarks: "To use transport-level security for endpoints configured with this binding, the <xref:System.ServiceModel.WebHttpSecurityMode> value must be specified as a parameter in the WebHttpBinding constructor.       To use HTTP authentication without HTTPS, the <xref:System.ServiceModel.WebHttpSecurityMode> value must be specified as a parameter in the WebHttpBinding constructor.       The value of <xref:System.ServiceModel.WebHttpSecurityMode> cannot be set again after the binding instance is created."
  syntax:
    content: public WebHttpBinding (System.ServiceModel.WebHttpSecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.WebHttpSecurityMode
      description: "The value of <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref> that specifies the type of security that is used to configure a service endpoint to receive HTTP requests."
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>securityMode</code> specified is not a valid <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.WebHttpBinding&quot;></xref> class with a binding specified by its configuration name."
  syntax:
    content: public WebHttpBinding (string configurationName);
    parameters:
    - id: configurationName
      type: System.String
      description: "The binding configuration name for the <xref href=&quot;System.ServiceModel.Configuration.WebHttpBindingElement&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The binding element with the name <code>configurationName</code> was not found."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests."
  remarks: "This property is provided as a convenience for using cookies included in HTTP headers. When cookies are accepted by the client by setting the property to `true`, cookies returned from the server are automatically copied to all future client requests to that service."
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if cookies are allowed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "To be added."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "To be added."
  overload: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets a value that indicates whether to bypass the proxy server for local addresses."
  remarks: "An Internet resource is local if it has a local address. A local address is one that is on same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs &quot;http://webserver/&quot; and &quot;http://localhost/&quot;.       Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.WebHttpBinding> use the proxy server when accessing local resources.       If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server. When BypassProxyOnLocal is `false`, all Internet requests are made through the proxy server."
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to bypass the proxy server for local addresses; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  id: ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets the content type mapper."
  syntax:
    content: public System.ServiceModel.Channels.WebContentTypeMapper ContentTypeMapper { get; set; }
    return:
      type: System.ServiceModel.Channels.WebContentTypeMapper
      description: "The content type mapper."
  overload: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Returns an ordered collection of binding elements contained in the current binding."
  remarks: "The order of the binding elements is important. It reflects the order in which the protocol and transport channels are constructed and stacked."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "A <xref:System.ServiceModel.Channels.BindingElementCollection> that contains the <xref:System.ServiceModel.Channels.BindingElement> objects for the binding."
  overload: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  id: CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets a value that determines if cross domain script access is enabled."
  syntax:
    content: public bool CrossDomainScriptAccessEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if cross domain scripting is enabled; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets the envelope version that is used by endpoints that are configured by this binding to receive HTTP requests."
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "The <xref:System.ServiceModel.EnvelopeVersion> with the <xref:System.ServiceModel.EnvelopeVersion.None*> property that is used with endpoints configured with this binding to receive HTTP requests."
  overload: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI."
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "The <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;></xref>, which ignores the hostname in the match."
  overload: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The value set is not a valid <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> value."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets the maximum amount of memory allocated, in bytes, for the buffer manager that manages the buffers required by endpoints that use this binding."
  remarks: "The <xref:System.ServiceModel.Channels.BufferManager> tries to minimize the cost of using buffers with a buffer pool. Buffers are required to process messages by the service when they come out of the channel. If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead. Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit."
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 65,536 bytes."
  overload: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets the maximum amount of memory, in bytes, that is allocated for use by the manager of the message buffers that receive messages from the channel."
  remarks: "The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers by using a buffer pool. Buffers are required to process messages by the service when they come out of the channel. If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead. Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A> limit."
  syntax:
    content: public int MaxBufferSize { get; set; }
    return:
      type: System.Int32
      description: "The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524,288 (0x80000) bytes."
  overload: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value set is less than or equal to zero."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets the maximum size, in bytes, for a message that can be processed by the binding."
  remarks: "The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WebHttpBinding> is bounded by the amount of memory allocated for each message. This bound on message size is intended to limit exposure to denial of service (DoS) attacks."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes."
  overload: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is less than zero."
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: "A message exceeded the maximum size allocated."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets the URI address of the HTTP proxy."
  remarks: "If the <xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of ProxyAddress is ignored."
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri> that serves as the address of the HTTP proxy. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding."
  remarks: "The complexity constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources. The properties that express these constraints and their default values (in bytes) are as follows:      -   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> = 32      -   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> = 8192      -   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> = 16384      -   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> = 4096      -   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> = 16384"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "The <xref:System.Xml.XmlDictionaryReaderQuotas> that specifies the complexity constraints."
  overload: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value set is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The quota values of <xref:System.Xml.XmlDictionaryReaderQuotas> are read only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The quotas set must be positive."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets the URI transport scheme for the channels and listeners that are configured with this binding."
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: "&quot;https&quot; if the <xref:System.ServiceModel.WebHttpBinding.Security*> is set to <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>; &quot;http&quot; if it is set to <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.Scheme*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets the security settings used with this binding."
  remarks: "To use a non-default type of security, use the <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> constructor.      > [!NOTE] >  If you set this property to <xref:System.ServiceModel.WebHttpSecurityMode> and you are using HTTP, be aware that credentials are sent over the wire in plain text."
  syntax:
    content: public System.ServiceModel.WebHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WebHttpSecurity
      description: "The <xref href=&quot;System.ServiceModel.WebHttpSecurity&quot;></xref> that is used with this binding. The default value is <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Determines if reader quotas should be serialized."
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if reader quotas should be serialized; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Determines if security settings should be serialized."
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if security settings should be serialized; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  id: ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Determines if the encoding used for serialization should be serialized."
  syntax:
    content: public bool ShouldSerializeWriteEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the encoding should be serialized; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets a value that indicates whether incoming requests are handled synchronously or asynchronously."
  remarks: "This run-time behavior for receiving messages in either a service or client application can be changed using the [\\&lt;synchronousReceive\\&gt;](../Topic/%3CsynchronousReceive%3E%20element.md)."
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if incoming requests are handled synchronously; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if incoming requests are handled asynchronously. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  id: TransferMode
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer."
  syntax:
    content: public System.ServiceModel.TransferMode TransferMode { get; set; }
    return:
      type: System.ServiceModel.TransferMode
      description: "The <xref:System.ServiceModel.TransferMode> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer. The default value is <xref:System.ServiceModel.TransferMode>."
  overload: System.ServiceModel.WebHttpBinding.TransferMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The value set is not a valid <xref:System.ServiceModel.TransferMode> value."
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available."
  remarks: "It is an error for this to be `true` and <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A> to be non-`null`."
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  id: WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  langs:
  - csharp
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel
  summary: "Gets or sets the character encoding that is used for the message text."
  syntax:
    content: public System.Text.Encoding WriteEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "The <xref:System.Text.Encoding> that indicates the character encoding that is used. The default is <xref:System.Text.UTF8Encoding>."
  overload: System.ServiceModel.WebHttpBinding.WriteEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value set is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.Binding
  isExternal: false
  name: System.ServiceModel.Channels.Binding
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ServiceModel.QuotaExceededException
  isExternal: true
  name: System.ServiceModel.QuotaExceededException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.WebHttpBinding.#ctor
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding()
  nameWithType: WebHttpBinding.WebHttpBinding()
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding()
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.ServiceModel.WebHttpSecurityMode)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(WebHttpSecurityMode)
  nameWithType: WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(WebHttpSecurityMode)
- uid: System.ServiceModel.WebHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurityMode
  nameWithType: WebHttpSecurityMode
  fullName: System.ServiceModel.WebHttpSecurityMode
- uid: System.ServiceModel.WebHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding(String)
  nameWithType: WebHttpBinding.WebHttpBinding(String)
  fullName: System.ServiceModel.WebHttpBinding.WebHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WebHttpBinding.AllowCookies
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
  fullName: System.ServiceModel.WebHttpBinding.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WebHttpBinding.BuildChannelFactory(BindingParameterCollection)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
  fullName: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
  fullName: System.ServiceModel.WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.Channels.WebContentTypeMapper
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebContentTypeMapper
  nameWithType: WebContentTypeMapper
  fullName: System.ServiceModel.Channels.WebContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WebHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WebHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
  fullName: System.ServiceModel.WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: true
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
  fullName: System.ServiceModel.WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
  fullName: System.ServiceModel.WebHttpBinding.MaxBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
  fullName: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
  fullName: System.ServiceModel.WebHttpBinding.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
  fullName: System.ServiceModel.WebHttpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
  fullName: System.ServiceModel.WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
  fullName: System.ServiceModel.WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WebHttpSecurity
  nameWithType: WebHttpSecurity
  fullName: System.ServiceModel.WebHttpSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WebHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding()
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding()
  fullName: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding()
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
  fullName: System.ServiceModel.WebHttpBinding.TransferMode
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
  fullName: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
  fullName: System.ServiceModel.WebHttpBinding.WriteEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WebHttpBinding.#ctor*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WebHttpBinding
  nameWithType: WebHttpBinding.WebHttpBinding
- uid: System.ServiceModel.WebHttpBinding.AllowCookies*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBinding.AllowCookies
- uid: System.ServiceModel.WebHttpBinding.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: WebHttpBinding.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.WebHttpBinding.BypassProxyOnLocal*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBinding.BypassProxyOnLocal
- uid: System.ServiceModel.WebHttpBinding.ContentTypeMapper*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBinding.ContentTypeMapper
- uid: System.ServiceModel.WebHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WebHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WebHttpBinding.CrossDomainScriptAccessEnabled*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBinding.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.WebHttpBinding.EnvelopeVersion*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WebHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.WebHttpBinding.HostNameComparisonMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.WebHttpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBinding.MaxBufferPoolSize
- uid: System.ServiceModel.WebHttpBinding.MaxBufferSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBinding.MaxBufferSize
- uid: System.ServiceModel.WebHttpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WebHttpBinding.ProxyAddress*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBinding.ProxyAddress
- uid: System.ServiceModel.WebHttpBinding.ReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBinding.ReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.Scheme*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WebHttpBinding.Scheme
- uid: System.ServiceModel.WebHttpBinding.Security*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: Security
  nameWithType: WebHttpBinding.Security
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WebHttpBinding.ShouldSerializeReaderQuotas
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WebHttpBinding.ShouldSerializeSecurity
- uid: System.ServiceModel.WebHttpBinding.ShouldSerializeWriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: ShouldSerializeWriteEncoding
  nameWithType: WebHttpBinding.ShouldSerializeWriteEncoding
- uid: System.ServiceModel.WebHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WebHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WebHttpBinding.TransferMode*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBinding.TransferMode
- uid: System.ServiceModel.WebHttpBinding.UseDefaultWebProxy*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WebHttpBinding.WriteEncoding*
  parent: System.ServiceModel.WebHttpBinding
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBinding.WriteEncoding
