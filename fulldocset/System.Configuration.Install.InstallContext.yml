### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.InstallContext
  id: InstallContext
  children:
  - System.Configuration.Install.InstallContext.#ctor
  - System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  - System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  - System.Configuration.Install.InstallContext.LogMessage(System.String)
  - System.Configuration.Install.InstallContext.Parameters
  - System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  langs:
  - csharp
  name: InstallContext
  nameWithType: InstallContext
  fullName: System.Configuration.Install.InstallContext
  type: Class
  summary: "Contém informações sobre a instalação atual."
  remarks: "Normalmente, um InstallContext é criada por uma instalação executável, tal como o InstallUtil.exe, que instala as assemblagens. O programa de instalação invoca o construtor de InstallContext, transmitir os parâmetros da linha de comandos e o caminho de ficheiro de registo predefinido.       Antes de chamar o <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, ou <xref:System.Configuration.Install.Installer.Uninstall%2A>métodos, o programa de instalação define o <xref:System.Configuration.Install.Installer.Context%2A>propriedade de um <xref:System.Configuration.Install.Installer>para a instância do InstallContext.</xref:System.Configuration.Install.Installer> </xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Uninstall%2A> </xref:System.Configuration.Install.Installer.Rollback%2A> </xref:System.Configuration.Install.Installer.Commit%2A> </xref:System.Configuration.Install.Installer.Install%2A> Antes de chamar destes métodos, um <xref:System.Configuration.Install.Installer>que contém uma coleção de instalador no <xref:System.Configuration.Install.Installer.Installers%2A>conjuntos de propriedade o <xref:System.Configuration.Install.Installer.Context%2A>propriedade de cada instalador nele contidos.</xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Installers%2A> </xref:System.Configuration.Install.Installer>       O <xref:System.Configuration.Install.InstallContext.Parameters%2A>propriedade contém uma versão de linha de comandos que é introduzida para executar a instalação executável analisada.</xref:System.Configuration.Install.InstallContext.Parameters%2A> A propriedade contém informações como o caminho para um ficheiro de registo, se pretende apresentar informações de registo na consola e se deve mostrar uma interface de utilizador durante a instalação. Chamar o <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>método para saber se é um parâmetro de linha de comandos `true`.</xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>       Utilize o <xref:System.Configuration.Install.InstallContext.LogMessage%2A>método ao escrever as mensagens de estado para o ficheiro de registo de instalação e a consola.</xref:System.Configuration.Install.InstallContext.LogMessage%2A>"
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the InstallContext class.  \n  \n When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line. Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.  \n  \n When the program is invoked without any arguments, an empty InstallContext is created. When \"/LogFile\" and \"/LogtoConsole\" are specified, the InstallContext is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#1](~/add/codesnippet/csharp/t-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#1](~/add/codesnippet/cpp/t-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#1](~/add/codesnippet/visualbasic/t-system.configuration.i_10_1.vb)]"
  syntax:
    content: public class InstallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.Install.InstallContext&quot;> </xref> classe."
  remarks: "Esta sobrecarga de criar um ficheiro de registo para a instalação."
  example:
  - "> [!NOTE]\n>  This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor. For other examples that might be available, see the individual overload topics.  \n  \n When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.  \n  \n [!code-cs[InstallContext_InstallContext#2](~/add/codesnippet/csharp/m-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#2](~/add/codesnippet/cpp/m-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#2](~/add/codesnippet/visualbasic/m-system.configuration.i_10_1.vb)]"
  syntax:
    content: public InstallContext ();
    parameters: []
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.Install.InstallContext&quot;> </xref> classe e cria um ficheiro de registo para a instalação."
  remarks: "Se a instalação utiliza [Installutil.exe (instalador ferramenta)](~/add/includes/ajax-current-ext-md.md), este construtor cria um ficheiro de registo no caminho especificado e analisa a matriz de parâmetros da linha de comandos para o <xref:System.Configuration.Install.InstallContext.Parameters%2A>propriedade.</xref:System.Configuration.Install.InstallContext.Parameters%2A> Se não for especificado um caminho de ficheiro de registo nos parâmetros de linha de comandos, é utilizado para criar o ficheiro. Se o argumento de ficheiro de registo não for especificado na linha de comandos, o valor da `logFilePath` parâmetro é utilizado. Para suprimir a criação de um ficheiro de registo, transmitir o &quot;/ logfile =&quot; parâmetro da linha de comandos."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n When \"/LogFile\" and \"/LogtoConsole\" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#3](~/add/codesnippet/csharp/542763dc-b606-44ec-b9bd-_1.cs)]\n [!code-cpp[InstallContext_InstallContext#3](~/add/codesnippet/cpp/542763dc-b606-44ec-b9bd-_1.cpp)]\n [!code-vb[InstallContext_InstallContext#3](~/add/codesnippet/visualbasic/542763dc-b606-44ec-b9bd-_1.vb)]"
  syntax:
    content: public InstallContext (string logFilePath, string[] commandLine);
    parameters:
    - id: logFilePath
      type: System.String
      description: "O caminho para o ficheiro de registo para esta instalação, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> não se deve ser criado nenhum ficheiro de registo."
    - id: commandLine
      type: System.String[]
      description: "Os parâmetros da linha de comandos introduzidos quando executar o programa de instalação, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum foram introduzidos."
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  id: IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Determina se o parâmetro da linha de comandos especificado <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Este método acede a <xref:System.Configuration.Install.InstallContext.Parameters%2A>propriedade, que contém uma versão dos parâmetros da linha de comandos, para determinar se o parâmetro especificado é analisada `true`.</xref:System.Configuration.Install.InstallContext.Parameters%2A>"
  example:
  - "This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the IsParameterTrue method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_5_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_5_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_5_1.vb)]"
  syntax:
    content: public bool IsParameterTrue (string paramName);
    parameters:
    - id: paramName
      type: System.String
      description: "O nome do parâmetro da linha de comandos para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o parâmetro especificado estiver definido como &quot;yes&quot;, &quot;true&quot;, &quot;1&quot; ou uma cadeia vazia (&quot;&quot;); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.Install.InstallContext.IsParameterTrue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  id: LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Escreve uma mensagem para a consola e o ficheiro de registo para a instalação."
  remarks: "Um programa de instalação pode chamar este método para escrever progresso ou outras informações de estado para o ficheiro de registo. Se os parâmetros da linha de comandos especificam que uma interface de utilizador deve ser apresentada, o instalador deve mostrar as caixas de mensagem ou efetuar consultas para além de chamar o método LogMessage. Escritas no ficheiro de registo de texto não será visível pelo utilizador, a menos que o InstallUtil.exe é utilizada para executar a instalação e &quot;/ LogToConsole = true&quot; é especificado na linha de comandos."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the LogMessage method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_7_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_7_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_7_1.vb)]"
  syntax:
    content: public void LogMessage (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem a escrever."
  overload: System.Configuration.Install.InstallContext.LogMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.Parameters
  id: Parameters
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Obtém os parâmetros da linha de comandos que foram introduzidos durante a execução do InstallUtil.exe."
  remarks: "Quando um novo <xref:System.Configuration.Install.InstallContext>é criado, a linha de comandos são analisados parâmetros para a propriedade Parameters.</xref:System.Configuration.Install.InstallContext> As chaves e os valores dos parâmetros são cadeias."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n The sample retrieves the Parameters property to see if any command line argument has been entered by the user. It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#6](~/add/codesnippet/csharp/p-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#6](~/add/codesnippet/cpp/p-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#6](~/add/codesnippet/visualbasic/p-system.configuration.i_10_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Parameters { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> que representa os parâmetros da linha de comandos que foram introduzidos quando a instalação executável foi executada."
  overload: System.Configuration.Install.InstallContext.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  id: ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Analisa os parâmetros da linha de comandos para um dicionário de cadeia."
  syntax:
    content: protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);
    parameters:
    - id: args
      type: System.String[]
      description: "Uma matriz que contém os parâmetros da linha de comandos."
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> que contém os parâmetros da linha de comandos analisados."
  overload: System.Configuration.Install.InstallContext.ParseCommandLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Install.InstallContext.#ctor
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
- uid: System.Configuration.Install.InstallContext.Parameters
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
- uid: System.Configuration.Install.InstallContext.#ctor*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext
  nameWithType: InstallContext.InstallContext
- uid: System.Configuration.Install.InstallContext.IsParameterTrue*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue
  nameWithType: InstallContext.IsParameterTrue
- uid: System.Configuration.Install.InstallContext.LogMessage*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage
  nameWithType: InstallContext.LogMessage
- uid: System.Configuration.Install.InstallContext.Parameters*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
- uid: System.Configuration.Install.InstallContext.ParseCommandLine*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine
  nameWithType: InstallContext.ParseCommandLine
