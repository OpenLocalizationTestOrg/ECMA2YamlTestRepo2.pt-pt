### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPart
  id: IWebPart
  children:
  - System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.Description
  - System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.IWebPart.Title
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  langs:
  - csharp
  name: IWebPart
  nameWithType: IWebPart
  fullName: System.Web.UI.WebControls.WebParts.IWebPart
  type: Interface
  summary: "Define as propriedades de interface (IU) do utilizador comuns utilizadas pelo ASP.NET <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos."
  remarks: "A interface IWebPart fornece várias propriedades orientado para a IU que melhoram a experiência de utilizador de trabalhar com <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando cria controlos que derivem de base de <xref:System.Web.UI.WebControls.WebParts.WebPart>classe, obtém uma implementação de todas as propriedades na IWebPart interface, porque o <xref:System.Web.UI.WebControls.WebParts.WebPart>classe base implemente esta interface.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Pode utilizar os controlos de utilizador existentes, controlos do ASP.NET ou controlos de servidor personalizado que herda a partir de <xref:System.Web.UI.WebControls.WebParts.WebPart>classe como parte de uma aplicação de peças Web, e também podem utilizar estas propriedades orientado para a IU declaradas pela IWebPart interface.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se colocar controlos de servidor existentes num <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona, em tempo de execução que são moldadas com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objeto.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Porque o <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>classe herda o <xref:System.Web.UI.WebControls.WebParts.WebPart>classe base, permite que os controlos de servidor existente atuar como verdadeiro <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos e adiciona-lhes as propriedades da IWebPart interface.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Se colocar os controlos de servidor que não são <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos zonas, podem utilizar as propriedades de IWebPart em tempo de execução, e também podem declarar os valores para essas propriedades em controlos de servidor na marcação de página (no formato de persistência de página).</xref:System.Web.UI.WebControls.WebParts.WebPart> No entanto, porque estas propriedades só estão disponíveis para os controlos de servidor em tempo de execução, tempo de criação funcionalidades codificação, como o IntelliSense não reconhecem IWebPart propriedades que são declaradas em controlos de servidor. Propriedades declaradas nestes controlos continuarão a funcionar quando carregar a página, mas o Microsoft Visual Studio não reconhece as propriedades como válido no momento da concepção. Se pretender adicionar as propriedades de IWebPart servidor existente e controlos de utilizador para melhorar a experiência de utilizador do momento da conceção, pode implementar a interface de IWebPart num controlo de servidor.       Talvez o principal motivo para implementar a interface IWebPart destina-se controlos que não suportam a utilização de propriedades (personalizado) expando. Propriedades de expando são cadeias que podem ser adicionadas a uma classe dinamicamente como uma propriedade, através do <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> Controlos que implementem esta interface, incluindo o <xref:System.Web.UI.WebControls.WebControl>classe e respetivos grupos subordinados, pode utilizar propriedades expando.</xref:System.Web.UI.WebControls.WebControl> Por conseguinte, todos os controlos de servidor ASP.NET, controlos personalizados que derivá-los, controlos de utilizador da Web, e <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos suportam a utilização de propriedades de expando.</xref:System.Web.UI.WebControls.WebParts.WebPart> Controlos personalizados, mas que herdam diretamente a partir da base de <xref:System.Web.UI.Control>classe não suporta propriedades de expando.</xref:System.Web.UI.Control> Assim, se declarar estes controlos dentro de uma <xref:System.Web.UI.WebControls.WebParts.WebPartZone>não será possível declarar as propriedades de IWebPart comuns nos controlos, propriedades, tais como <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>e <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> Se pretender utilizar estas propriedades com esses controlos, tem de implementar a interface IWebPart."
  example:
  - "The following code example demonstrates how to implement the IWebPart interface in a user control. This is a simple implementation that shows minimally how to implement the properties.  \n  \n The first part of the code example shows the user control. The user control implements all the properties of the IWebPart interface, plus two additional public properties tied to controls in the user interface. The two custom properties each use the `Personalizable` attribute, which enables the values in those properties to be saved across browser sessions. Note that in the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class implementation, all the properties of the IWebPart interface are implemented as personalizable as well, though they are not in this code example.  \n  \n [!code-cs[WebParts_IWebPart_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_1.ascx)]  \n  \n The second part of the code example shows the Web page that hosts the user control. The page has a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, within which the user control is referenced. Notice that several of the IWebPart interface's property values are set declaratively in the markup for the user control, which enables it to both behave and appear similar to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at design time and run time. If you load the page in a browser, you can use the UI on the page to demonstrate the ability to programmatically change the values of the implemented IWebPart properties at run time. When you change some of the property values, the changes are not evident on the page, but are visible in the page source (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> property), or are stored in the application's state data (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_2.aspx)]"
  syntax:
    content: public interface IWebPart
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define o URL a uma imagem que representa um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo no catálogo de controlos."
  remarks: "Aplicações de peças Web proporcionam, frequentemente, um catálogo (ou uma lista) de controlos que podem adicionar utilizadores a uma página. A propriedade CatalogIconImageUrl num controlo contém o URL de uma imagem que representa o controlo quando é apresentado no catálogo."
  example:
  - "The following code example demonstrates declarative and programmatic use of the CatalogIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the CatalogIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the CatalogIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the CatalogIconImageUrl property is set declaratively on the control. Note that because there is no catalog of Web Parts controls provided with this example, you cannot see the actual effect of setting this property.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_3.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o URL numa imagem utilizada para representar o controlo no catálogo. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define uma expressão de breve que resume a que um controlo faz, para utilização no descrições e catálogos de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos."
  remarks: "O valor da propriedade descrição é normalmente utilizado como uma cadeia descritiva para um controlo numa catálogos que fornecem listas de <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos e como descrição na barra de título de um controlo</xref:System.Web.UI.WebControls.WebParts.WebPart> O conteúdo da propriedade é apresentada numa descrição quando um utilizador positions o ponteiro do rato sobre o texto do título na barra de título de um controlo."
  example:
  - "The following code example demonstrates declarative and programmatic use of the Description property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Description property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Description property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Description property is set declaratively on the control. Note that you can see the value of this property by positioning your mouse pointer over the title text in the control's title bar, after you have loaded the page in a browser. You can also experiment with changing the property value programmatically at run time by loading the Web page and using the provided user interface (UI) to change the property value.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_3.aspx)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Uma cadeia ou que se resume a funcionalidade do controlo. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma cadeia que é concatenada com o <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>valor da propriedade para formar um título de completado para uma <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>"
  remarks: "A propriedade Subtitle é utilizada para devolver uma cadeia de subtitle predefinido para um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo que é acrescentado ao título do controlo da barra de título.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Se fornecer um valor predefinido para a propriedade Subtitle num controlo que implementa o <xref:System.Web.UI.WebControls.WebParts.IWebPart>interface, as peças Web do controlo definido automaticamente o acrescenta para o valor da <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>propriedade do controlo em tempo de execução.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Subtitle property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Subtitle property. Note that the property is read-only and is meant to be used to provide a default subtitle that is appended to the main title of a control.  \n  \n [!code-cs[WebParts_IWebPart_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_1.ascx)]  \n  \n The second part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the writable properties from <xref:System.Web.UI.WebControls.WebParts.IWebPart> are set declaratively on the control. After you load the page in a browser, note that the default value of the Subtitle property, which was set in the user control's implementation code, is appended to the title in the control's title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_2.aspx)]"
  syntax:
    content: public string Subtitle { get; }
    return:
      type: System.String
      description: "Uma cadeia que funciona como um subtítulo para o controlo. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define o título de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O texto do título visíveis na barra de título de um controlo é definido pela propriedade de título.       Se não fornecer um título para um controlo, o controlo de peças Web definido automaticamente calcula uma cadeia de predefinição para utilizar como um título. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Além disso, é possível fornecer um subtítulo do predefinido que é acrescentado à cadeia de título. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Title property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Title property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Title property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Title property is set declaratively on the control.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_3.aspx)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que contém o título do controlo. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define o URL numa imagem utilizada para representar um controlo de peças Web na barra de título do controlo."
  remarks: "A propriedade TitleIconImageUrl fornece uma forma de associar um ícone com um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> O ícone é apresentado na barra de título do controlo. Para consistência thematic, os programadores de aplicações poderão querer tornar este ícone semelhante a imagem que representa o controlo no catálogo de peças Web controlos (a imagem referenciada no <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>propriedade).</xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>       Como está implementado no controlo de peças Web definido, TitleIconImageUrl propriedade pode ser personalizada pelos utilizadores finais para alterar a imagem ou o ícone que é apresentado na barra de título de um controlo."
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleIconImageUrl property is set declaratively on the control. Note that if you do not provide the URL to a real image, a placeholder for the icon appears in the title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_3.aspx)]"
  syntax:
    content: public string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa o URL numa imagem. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define um URL para informações suplementares um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "Quando atribui um URL para a propriedade TitleUrl, o título do controlo torna-se uma ligação. O objetivo desta propriedade é fornece uma maneira conveniente para os utilizadores finais obter informações adicionais sobre um controlo de acesso. As informações adicionais conseguiu fornecer dados de direitos de autor, dados de contacto, os detalhes sobre o criador do controlo ou um resumo da finalidade do controlo.      > [!NOTE] > Normalmente, não seria utilizar a propriedade TitleUrl para ligar ao conteúdo de ajuda. A melhor forma de fornecer uma ligação para obter ajuda para um controlo é utilizar o <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleUrl property is set declaratively on the control. Note that if you do not provide a URL to a real page, and then a user clicks the link in the title bar, an error message appears.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_3.aspx)]"
  syntax:
    content: public string TitleUrl { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que representa um URL para obter mais informações sobre um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
