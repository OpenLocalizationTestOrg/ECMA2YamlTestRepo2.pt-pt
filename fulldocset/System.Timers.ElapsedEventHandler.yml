### YamlMime:ManagedReference
items:
- uid: System.Timers.ElapsedEventHandler
  id: ElapsedEventHandler
  langs:
  - csharp
  name: ElapsedEventHandler
  nameWithType: ElapsedEventHandler
  fullName: System.Timers.ElapsedEventHandler
  type: Delegate
  summary: "Represents the method that will handle the <see cref=&quot;E:System.Timers.Timer.Elapsed&quot;></see> event of a <see cref=&quot;T:System.Timers.Timer&quot;></see>."
  remarks: "When you create an ElapsedEventHandler delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [Events](../Topic/Handling%20and%20Raising%20Events.md)."
  example:
  - "The following code example sets up an event handler for the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event, creates a timer, and starts the timer. The event handler has the same signature as the ElapsedEventHandler delegate. The event handler displays the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property each time it is raised.  \n  \n [!code-cs[Classic Timer Example#1](~/add/codesnippet/CSharp/t-system.timers.elapsede_0_1.cs)]\n [!code-cpp[Classic Timer Example#1](~/add/codesnippet/CPP/t-system.timers.elapsede_0_1.cpp)]\n [!code-vb[Classic Timer Example#1](~/add/codesnippet/VisualBasic/t-system.timers.elapsede_0_1.vb)]"
  syntax:
    content: public delegate void ElapsedEventHandler(object sender, ElapsedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
