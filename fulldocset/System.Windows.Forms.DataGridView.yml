### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridView
  id: DataGridView
  children:
  - System.Windows.Forms.DataGridView.#ctor
  - System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)
  - System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle
  - System.Windows.Forms.DataGridView.AdvancedCellBorderStyle
  - System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle
  - System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle
  - System.Windows.Forms.DataGridView.AllowUserToAddRows
  - System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged
  - System.Windows.Forms.DataGridView.AllowUserToDeleteRows
  - System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged
  - System.Windows.Forms.DataGridView.AllowUserToOrderColumns
  - System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged
  - System.Windows.Forms.DataGridView.AllowUserToResizeColumns
  - System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged
  - System.Windows.Forms.DataGridView.AllowUserToResizeRows
  - System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged
  - System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle
  - System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)
  - System.Windows.Forms.DataGridView.AutoGenerateColumns
  - System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged
  - System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)
  - System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)
  - System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight
  - System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)
  - System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeColumns
  - System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)
  - System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)
  - System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)
  - System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  - System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  - System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeRows
  - System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)
  - System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  - System.Windows.Forms.DataGridView.AutoSize
  - System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged
  - System.Windows.Forms.DataGridView.AutoSizeColumnsMode
  - System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged
  - System.Windows.Forms.DataGridView.AutoSizeRowsMode
  - System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged
  - System.Windows.Forms.DataGridView.BackColor
  - System.Windows.Forms.DataGridView.BackColorChanged
  - System.Windows.Forms.DataGridView.BackgroundColor
  - System.Windows.Forms.DataGridView.BackgroundColorChanged
  - System.Windows.Forms.DataGridView.BackgroundImage
  - System.Windows.Forms.DataGridView.BackgroundImageChanged
  - System.Windows.Forms.DataGridView.BackgroundImageLayout
  - System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged
  - System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)
  - System.Windows.Forms.DataGridView.BorderStyle
  - System.Windows.Forms.DataGridView.BorderStyleChanged
  - System.Windows.Forms.DataGridView.CancelEdit
  - System.Windows.Forms.DataGridView.CancelRowEdit
  - System.Windows.Forms.DataGridView.CanEnableIme
  - System.Windows.Forms.DataGridView.CellBeginEdit
  - System.Windows.Forms.DataGridView.CellBorderStyle
  - System.Windows.Forms.DataGridView.CellBorderStyleChanged
  - System.Windows.Forms.DataGridView.CellClick
  - System.Windows.Forms.DataGridView.CellContentClick
  - System.Windows.Forms.DataGridView.CellContentDoubleClick
  - System.Windows.Forms.DataGridView.CellContextMenuStripChanged
  - System.Windows.Forms.DataGridView.CellContextMenuStripNeeded
  - System.Windows.Forms.DataGridView.CellDoubleClick
  - System.Windows.Forms.DataGridView.CellEndEdit
  - System.Windows.Forms.DataGridView.CellEnter
  - System.Windows.Forms.DataGridView.CellErrorTextChanged
  - System.Windows.Forms.DataGridView.CellErrorTextNeeded
  - System.Windows.Forms.DataGridView.CellFormatting
  - System.Windows.Forms.DataGridView.CellLeave
  - System.Windows.Forms.DataGridView.CellMouseClick
  - System.Windows.Forms.DataGridView.CellMouseDoubleClick
  - System.Windows.Forms.DataGridView.CellMouseDown
  - System.Windows.Forms.DataGridView.CellMouseEnter
  - System.Windows.Forms.DataGridView.CellMouseLeave
  - System.Windows.Forms.DataGridView.CellMouseMove
  - System.Windows.Forms.DataGridView.CellMouseUp
  - System.Windows.Forms.DataGridView.CellPainting
  - System.Windows.Forms.DataGridView.CellParsing
  - System.Windows.Forms.DataGridView.CellStateChanged
  - System.Windows.Forms.DataGridView.CellStyleChanged
  - System.Windows.Forms.DataGridView.CellStyleContentChanged
  - System.Windows.Forms.DataGridView.CellToolTipTextChanged
  - System.Windows.Forms.DataGridView.CellToolTipTextNeeded
  - System.Windows.Forms.DataGridView.CellValidated
  - System.Windows.Forms.DataGridView.CellValidating
  - System.Windows.Forms.DataGridView.CellValueChanged
  - System.Windows.Forms.DataGridView.CellValueNeeded
  - System.Windows.Forms.DataGridView.CellValuePushed
  - System.Windows.Forms.DataGridView.ClearSelection
  - System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.ClipboardCopyMode
  - System.Windows.Forms.DataGridView.ColumnAdded
  - System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged
  - System.Windows.Forms.DataGridView.ColumnCount
  - System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged
  - System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged
  - System.Windows.Forms.DataGridView.ColumnDividerDoubleClick
  - System.Windows.Forms.DataGridView.ColumnDividerWidthChanged
  - System.Windows.Forms.DataGridView.ColumnHeaderCellChanged
  - System.Windows.Forms.DataGridView.ColumnHeaderMouseClick
  - System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick
  - System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle
  - System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged
  - System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle
  - System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.ColumnHeadersHeight
  - System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged
  - System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode
  - System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged
  - System.Windows.Forms.DataGridView.ColumnHeadersVisible
  - System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged
  - System.Windows.Forms.DataGridView.ColumnNameChanged
  - System.Windows.Forms.DataGridView.ColumnRemoved
  - System.Windows.Forms.DataGridView.Columns
  - System.Windows.Forms.DataGridView.ColumnSortModeChanged
  - System.Windows.Forms.DataGridView.ColumnStateChanged
  - System.Windows.Forms.DataGridView.ColumnToolTipTextChanged
  - System.Windows.Forms.DataGridView.ColumnWidthChanged
  - System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  - System.Windows.Forms.DataGridView.CreateAccessibilityInstance
  - System.Windows.Forms.DataGridView.CreateColumnsInstance
  - System.Windows.Forms.DataGridView.CreateControlsInstance
  - System.Windows.Forms.DataGridView.CreateRowsInstance
  - System.Windows.Forms.DataGridView.CurrentCell
  - System.Windows.Forms.DataGridView.CurrentCellAddress
  - System.Windows.Forms.DataGridView.CurrentCellChanged
  - System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged
  - System.Windows.Forms.DataGridView.CurrentRow
  - System.Windows.Forms.DataGridView.DataBindingComplete
  - System.Windows.Forms.DataGridView.DataError
  - System.Windows.Forms.DataGridView.DataMember
  - System.Windows.Forms.DataGridView.DataMemberChanged
  - System.Windows.Forms.DataGridView.DataSource
  - System.Windows.Forms.DataGridView.DataSourceChanged
  - System.Windows.Forms.DataGridView.DefaultCellStyle
  - System.Windows.Forms.DataGridView.DefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.DefaultSize
  - System.Windows.Forms.DataGridView.DefaultValuesNeeded
  - System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)
  - System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)
  - System.Windows.Forms.DataGridView.DisplayRectangle
  - System.Windows.Forms.DataGridView.Dispose(System.Boolean)
  - System.Windows.Forms.DataGridView.EditingControl
  - System.Windows.Forms.DataGridView.EditingControlShowing
  - System.Windows.Forms.DataGridView.EditingPanel
  - System.Windows.Forms.DataGridView.EditMode
  - System.Windows.Forms.DataGridView.EditModeChanged
  - System.Windows.Forms.DataGridView.EnableHeadersVisualStyles
  - System.Windows.Forms.DataGridView.EndEdit
  - System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  - System.Windows.Forms.DataGridView.FirstDisplayedCell
  - System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth
  - System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex
  - System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex
  - System.Windows.Forms.DataGridView.Font
  - System.Windows.Forms.DataGridView.FontChanged
  - System.Windows.Forms.DataGridView.ForeColor
  - System.Windows.Forms.DataGridView.ForeColorChanged
  - System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)
  - System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.GetClipboardContent
  - System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.GridColor
  - System.Windows.Forms.DataGridView.GridColorChanged
  - System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)
  - System.Windows.Forms.DataGridView.HorizontalScrollBar
  - System.Windows.Forms.DataGridView.HorizontalScrollingOffset
  - System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)
  - System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)
  - System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)
  - System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)
  - System.Windows.Forms.DataGridView.IsCurrentCellDirty
  - System.Windows.Forms.DataGridView.IsCurrentCellInEditMode
  - System.Windows.Forms.DataGridView.IsCurrentRowDirty
  - System.Windows.Forms.DataGridView.IsInputChar(System.Char)
  - System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)
  - System.Windows.Forms.DataGridView.Item(System.String,System.Int32)
  - System.Windows.Forms.DataGridView.MultiSelect
  - System.Windows.Forms.DataGridView.MultiSelectChanged
  - System.Windows.Forms.DataGridView.NewRowIndex
  - System.Windows.Forms.DataGridView.NewRowNeeded
  - System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)
  - System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)
  - System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)
  - System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  - System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)
  - System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  - System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)
  - System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)
  - System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)
  - System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)
  - System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)
  - System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)
  - System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)
  - System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)
  - System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)
  - System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)
  - System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  - System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)
  - System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)
  - System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)
  - System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnResize(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)
  - System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)
  - System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)
  - System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)
  - System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)
  - System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)
  - System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)
  - System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)
  - System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)
  - System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)
  - System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  - System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)
  - System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)
  - System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)
  - System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  - System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)
  - System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.DataGridView.Padding
  - System.Windows.Forms.DataGridView.PaddingChanged
  - System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.DataGridView.ReadOnly
  - System.Windows.Forms.DataGridView.ReadOnlyChanged
  - System.Windows.Forms.DataGridView.RefreshEdit
  - System.Windows.Forms.DataGridView.ResetText
  - System.Windows.Forms.DataGridView.RowContextMenuStripChanged
  - System.Windows.Forms.DataGridView.RowContextMenuStripNeeded
  - System.Windows.Forms.DataGridView.RowCount
  - System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.RowDirtyStateNeeded
  - System.Windows.Forms.DataGridView.RowDividerDoubleClick
  - System.Windows.Forms.DataGridView.RowDividerHeightChanged
  - System.Windows.Forms.DataGridView.RowEnter
  - System.Windows.Forms.DataGridView.RowErrorTextChanged
  - System.Windows.Forms.DataGridView.RowErrorTextNeeded
  - System.Windows.Forms.DataGridView.RowHeaderCellChanged
  - System.Windows.Forms.DataGridView.RowHeaderMouseClick
  - System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick
  - System.Windows.Forms.DataGridView.RowHeadersBorderStyle
  - System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged
  - System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle
  - System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.RowHeadersVisible
  - System.Windows.Forms.DataGridView.RowHeadersWidth
  - System.Windows.Forms.DataGridView.RowHeadersWidthChanged
  - System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode
  - System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged
  - System.Windows.Forms.DataGridView.RowHeightChanged
  - System.Windows.Forms.DataGridView.RowHeightInfoNeeded
  - System.Windows.Forms.DataGridView.RowHeightInfoPushed
  - System.Windows.Forms.DataGridView.RowLeave
  - System.Windows.Forms.DataGridView.RowMinimumHeightChanged
  - System.Windows.Forms.DataGridView.RowPostPaint
  - System.Windows.Forms.DataGridView.RowPrePaint
  - System.Windows.Forms.DataGridView.Rows
  - System.Windows.Forms.DataGridView.RowsAdded
  - System.Windows.Forms.DataGridView.RowsDefaultCellStyle
  - System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged
  - System.Windows.Forms.DataGridView.RowsRemoved
  - System.Windows.Forms.DataGridView.RowStateChanged
  - System.Windows.Forms.DataGridView.RowTemplate
  - System.Windows.Forms.DataGridView.RowUnshared
  - System.Windows.Forms.DataGridView.RowValidated
  - System.Windows.Forms.DataGridView.RowValidating
  - System.Windows.Forms.DataGridView.Scroll
  - System.Windows.Forms.DataGridView.ScrollBars
  - System.Windows.Forms.DataGridView.SelectAll
  - System.Windows.Forms.DataGridView.SelectedCells
  - System.Windows.Forms.DataGridView.SelectedColumns
  - System.Windows.Forms.DataGridView.SelectedRows
  - System.Windows.Forms.DataGridView.SelectionChanged
  - System.Windows.Forms.DataGridView.SelectionMode
  - System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.ShowCellErrors
  - System.Windows.Forms.DataGridView.ShowCellToolTips
  - System.Windows.Forms.DataGridView.ShowEditingIcon
  - System.Windows.Forms.DataGridView.ShowRowErrors
  - System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)
  - System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)
  - System.Windows.Forms.DataGridView.SortCompare
  - System.Windows.Forms.DataGridView.Sorted
  - System.Windows.Forms.DataGridView.SortedColumn
  - System.Windows.Forms.DataGridView.SortOrder
  - System.Windows.Forms.DataGridView.StandardTab
  - System.Windows.Forms.DataGridView.StyleChanged
  - System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Forms.DataGridView.Text
  - System.Windows.Forms.DataGridView.TextChanged
  - System.Windows.Forms.DataGridView.TopLeftHeaderCell
  - System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)
  - System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)
  - System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)
  - System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)
  - System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)
  - System.Windows.Forms.DataGridView.UserAddedRow
  - System.Windows.Forms.DataGridView.UserDeletedRow
  - System.Windows.Forms.DataGridView.UserDeletingRow
  - System.Windows.Forms.DataGridView.UserSetCursor
  - System.Windows.Forms.DataGridView.VerticalScrollBar
  - System.Windows.Forms.DataGridView.VerticalScrollingOffset
  - System.Windows.Forms.DataGridView.VirtualMode
  - System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: DataGridView
  nameWithType: DataGridView
  fullName: System.Windows.Forms.DataGridView
  type: Class
  summary: "Displays data in a customizable grid."
  remarks: "The DataGridView control provides a customizable table for displaying data. The DataGridView class allows customization of cells, rows, columns, and borders through the use of properties such as <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, and <xref:System.Windows.Forms.DataGridView.GridColor%2A>. For more information, see [Basic Formatting and Styling in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n You can use a DataGridView control to display data with or without an underlying data source. Without specifying a data source, you can create columns and rows that contain data and add them directly to the DataGridView using the <xref:System.Windows.Forms.DataGridView.Rows%2A> and <xref:System.Windows.Forms.DataGridView.Columns%2A> properties. You can also use the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection to access <xref:System.Windows.Forms.DataGridViewRow> objects and the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=fullName> property to read or write cell values directly. The <xref:System.Windows.Forms.DataGridView.Item%2A> indexer also provides direct access to cells.  \n  \n As an alternative to populating the control manually, you can set the <xref:System.Windows.Forms.DataGridView.DataSource%2A> and <xref:System.Windows.Forms.DataGridView.DataMember%2A> properties to bind the DataGridView to a data source and automatically populate it with data. For more information, see [Displaying Data in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n When working with very large amounts of data, you can set the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property to `true` to display a subset of the available data. Virtual mode requires the implementation of a data cache from which the DataGridView control is populated. For more information, see [Data Display Modes in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n For additional information about the features available in the DataGridView control, see [DataGridView Control](~/add/includes/ajax-current-ext-md.md). The following table provides direct links to common tasks.  \n  \n-   [How to: Bind Data to the Windows Forms DataGridView Control](http://msdn.microsoft.com/library/fbk67b6z\\(v=vs.110\\).aspx)  \n  \n-   [How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control](http://msdn.microsoft.com/library/2249cf0a\\(v=vs.110\\).aspx)  \n  \n-   [How to: Set Font and Color Styles in the Windows Forms DataGridView Control](http://msdn.microsoft.com/library/z2akwyy7\\(v=vs.110\\).aspx)  \n  \n-   [How to: Change the Type of a Windows Forms DataGridView Column Using the Designer](http://msdn.microsoft.com/library/053656ss\\(v=vs.110\\).aspx)  \n  \n-   [How to: Bind Data to the Windows Forms DataGridView Control Using the Designer](http://msdn.microsoft.com/library/33w255ac\\(v=vs.110\\).aspx)  \n  \n-   [How to: Set Default Cell Styles and Data Formats for the Windows Forms DataGridView Control Using the Designer](http://msdn.microsoft.com/library/95y5fz2x\\(v=vs.110\\).aspx)  \n  \n-   [How to: Format Data in the Windows Forms DataGridView Control](http://msdn.microsoft.com/library/f9x2790s\\(v=vs.110\\).aspx)  \n  \n-   [Walkthrough: Validating Data in the Windows Forms DataGridView Control](http://msdn.microsoft.com/library/ykdxa0bc\\(v=vs.110\\).aspx)  \n  \n-   [How to: Customize Data Formatting in the Windows Forms DataGridView Control](http://msdn.microsoft.com/library/z1cc356h\\(v=vs.110\\).aspx)  \n  \n-   [Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls](http://msdn.microsoft.com/library/y8c0cxey\\(v=vs.110\\).aspx)  \n  \n Although the DataGridView control replaces and adds functionality to the <xref:System.Windows.Forms.DataGrid> control of previous versions, the <xref:System.Windows.Forms.DataGrid> control is retained for both backward compatibility and future use if you choose. For more information, see [Differences Between the Windows Forms DataGridView and DataGrid Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  The DataGridView control inherits both the <xref:System.Windows.Forms.Control.ContextMenu%2A> and <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> properties from <xref:System.Windows.Forms.Control>, but supports only the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property. Using the <xref:System.Windows.Forms.Control.ContextMenu%2A> property with the DataGridView control has no effect."
  example:
  - "The following code example demonstrates how to initialize an unbound DataGridView control.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/add/codesnippet/csharp/t-system.windows.forms.d_82_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/add/codesnippet/visualbasic/t-system.windows.forms.d_82_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")]

      [System.ComponentModel.DefaultEvent("CellContentClick")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)]

      public class DataGridView : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.Click
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.CreateParams
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseClick
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.Paint
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataGridView()
  nameWithType: DataGridView.DataGridView()
  fullName: System.Windows.Forms.DataGridView.DataGridView()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> class."
  remarks: "The following table shows initial property values for an instance of the <xref:System.Windows.Forms.DataGridView> class.      |Property|Initial Value|   |--------------|-------------------|   |<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRows%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumns%2A>|`false`|   |<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumns%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode>|   |<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeRowsMode>|   |<xref:System.Windows.Forms.DataGridView.ClipboardCopyMode%2A>|<xref:System.Windows.Forms.DataGridViewClipboardCopyMode>|   |<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode>|   |<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.EditMode%2A>|<xref:System.Windows.Forms.DataGridViewEditMode>|   |<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>|`false`|   |<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>|`true`|   |<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode>|   |<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>|<xref:System.Windows.Forms.DataGridViewSelectionMode>|"
  syntax:
    content: public DataGridView ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)
  id: AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AccessibilityNotifyCurrentCellChanged(Point)
  nameWithType: DataGridView.AccessibilityNotifyCurrentCellChanged(Point)
  fullName: System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Notifies the accessible client applications when a new cell becomes the current cell."
  remarks: "This method converts the specified row and column indexes into `objectID` and `childID` parameters and calls the <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29> method overload twice using the <xref:System.Windows.Forms.AccessibleEvents> and <xref:System.Windows.Forms.AccessibleEvents> values of the <xref:System.Windows.Forms.AccessibleEvents> enumeration. The `objectID` and `childID` are determined by numbering only the visible rows and columns in their display order, counting the row or column headers if they are visible, and starting with 1. For example, if column headers are visible, the `objectID` for the first visible nonheader row is 2."
  syntax:
    content: protected virtual void AccessibilityNotifyCurrentCellChanged (System.Drawing.Point cellAddress);
    parameters:
    - id: cellAddress
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> indicating the row and column indexes of the new current cell."
  overload: System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Drawing.Point.X*> property of <code>cellAddress</code> is less than 0 or greater than the number of columns in the control minus 1.       -or-       The value of the <xref:System.Drawing.Point.Y*> property of <code>cellAddress</code> is less than 0 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)
  id: AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)
  nameWithType: DataGridView.AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> for a column header cell of a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that is currently being painted."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control internally calls the AdjustColumnHeaderBorderStyle method to determine the appearance of the borders for the column header cells. The <xref:System.Windows.Forms.DataGridView> control typically uses the value of the <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> property for the `dataGridViewAdvancedBorderStyleInput` parameter."
  example:
  - "The following code example demonstrates how to override the AdjustColumnHeaderBorderStyle method to customize the borders of the column header cells. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> class.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/add/codesnippet/csharp/7d66cf77-dddc-423c-b30d-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/add/codesnippet/visualbasic/7d66cf77-dddc-423c-b30d-_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);
    parameters:
    - id: dataGridViewAdvancedBorderStyleInput
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that that represents the column header border style to modify."
    - id: dataGridViewAdvancedBorderStylePlaceholder
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that is used to store intermediate changes to the column header border style."
    - id: isFirstDisplayedColumn
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> that is currently being painted is in the first column displayed on the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isLastVisibleColumn
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> that is currently being painted is in the last column in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that has the <xref:System.Windows.Forms.DataGridViewColumn.Visible*> property set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the border style for the current column header."
  overload: System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle
  id: AdjustedTopLeftHeaderBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AdjustedTopLeftHeaderBorderStyle
  nameWithType: DataGridView.AdjustedTopLeftHeaderBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the border style for the upper-left cell in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The upper-left cell is the cell that is shared by the column header row and the row header column. The <xref:System.Windows.Forms.DataGridView> gets the value of this property while painting the upper-left cell."
  example:
  - "The following code example demonstrates how to override the AdjustedTopLeftHeaderBorderStyle property to customize the borders of the upper-left cell. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> class.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/add/codesnippet/csharp/p-system.windows.forms.d_130_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/add/codesnippet/visualbasic/p-system.windows.forms.d_130_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle { get; }
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the style of the border of the upper-left cell in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AdvancedCellBorderStyle
  id: AdvancedCellBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AdvancedCellBorderStyle
  nameWithType: DataGridView.AdvancedCellBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdvancedCellBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the border style of the cells in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Use the AdvancedCellBorderStyle property to customize the appearance of cells&quot; borders. To change the style of the borders using the built-in styles, use the <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> property."
  syntax:
    content: public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle { get; }
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the border style of the cells in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AdvancedCellBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle
  id: AdvancedColumnHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AdvancedColumnHeadersBorderStyle
  nameWithType: DataGridView.AdvancedColumnHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the border style of the column header cells in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Use the AdvancedColumnHeadersBorderStyle property to customize the appearance of column header cells&quot; borders. To change the style of the borders using the built-in styles, use the <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> property."
  syntax:
    content: public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle { get; }
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the border style of the <xref href=&quot;System.Windows.Forms.DataGridViewColumnHeaderCell&quot;></xref> objects in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle
  id: AdvancedRowHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AdvancedRowHeadersBorderStyle
  nameWithType: DataGridView.AdvancedRowHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the border style of the row header cells in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Use the AdvancedRowHeadersBorderStyle property to customize the appearance of row header cells&quot; borders in a derived <xref:System.Windows.Forms.DataGridView> control. To change the style of the borders using the built-in styles, use the <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> property."
  syntax:
    content: public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle { get; }
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the border style of the <xref href=&quot;System.Windows.Forms.DataGridViewRowHeaderCell&quot;></xref> objects in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToAddRows
  id: AllowUserToAddRows
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToAddRows
  nameWithType: DataGridView.AllowUserToAddRows
  fullName: System.Windows.Forms.DataGridView.AllowUserToAddRows
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the option to add rows is displayed to the user."
  remarks: "If the <xref:System.Windows.Forms.DataGridView> is bound to data, the user is allowed to add rows if both this property and the data source&quot;s <xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=fullName> property are set to `true`."
  example:
  - "The following code example illustrates the use of this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_59_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_59_1.cs)]"
  syntax:
    content: public bool AllowUserToAddRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the add-row option is displayed to the user; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AllowUserToAddRows*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged
  id: AllowUserToAddRowsChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToAddRowsChanged
  nameWithType: DataGridView.AllowUserToAddRowsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToAddRowsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AllowUserToAddRowsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#250](~/add/codesnippet/csharp/e-system.windows.forms.d_137_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#250](~/add/codesnippet/visualbasic/e-system.windows.forms.d_137_1.vb)]"
  syntax:
    content: public event EventHandler AllowUserToAddRowsChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToDeleteRows
  id: AllowUserToDeleteRows
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToDeleteRows
  nameWithType: DataGridView.AllowUserToDeleteRows
  fullName: System.Windows.Forms.DataGridView.AllowUserToDeleteRows
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the user is allowed to delete rows from the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "If the <xref:System.Windows.Forms.DataGridView> is bound to data, the user is allowed to delete rows if both this property and the <xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName> property are set to `true`."
  example:
  - "The following code example illustrates the use of this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_31_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_31_1.cs)]"
  syntax:
    content: public bool AllowUserToDeleteRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user can delete rows; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AllowUserToDeleteRows*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged
  id: AllowUserToDeleteRowsChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToDeleteRowsChanged
  nameWithType: DataGridView.AllowUserToDeleteRowsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the AllowUserToDeleteRowsChanged property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToDeleteRowsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AllowUserToDeleteRowsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#251](~/add/codesnippet/csharp/e-system.windows.forms.d_87_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#251](~/add/codesnippet/visualbasic/e-system.windows.forms.d_87_1.vb)]"
  syntax:
    content: public event EventHandler AllowUserToDeleteRowsChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToOrderColumns
  id: AllowUserToOrderColumns
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToOrderColumns
  nameWithType: DataGridView.AllowUserToOrderColumns
  fullName: System.Windows.Forms.DataGridView.AllowUserToOrderColumns
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether manual column repositioning is enabled."
  remarks: "When column repositioning is enabled, users can drag a column header to a new position. Note that frozen and unfrozen columns form two separate groups; users can reposition columns within a group, but cannot move a column from one group to the other.      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridView> control does not support double buffering. If <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is set to `true` in a derived <xref:System.Windows.Forms.DataGridView> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns."
  example:
  - "The following code example illustrates the use of this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_140_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_140_1.cs)]"
  syntax:
    content: public bool AllowUserToOrderColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user can change the column order; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AllowUserToOrderColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged
  id: AllowUserToOrderColumnsChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToOrderColumnsChanged
  nameWithType: DataGridView.AllowUserToOrderColumnsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumns*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToOrderColumnsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AllowUserToOrderColumnsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#252](~/add/codesnippet/csharp/e-system.windows.forms.d_96_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#252](~/add/codesnippet/visualbasic/e-system.windows.forms.d_96_1.vb)]"
  syntax:
    content: public event EventHandler AllowUserToOrderColumnsChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeColumns
  id: AllowUserToResizeColumns
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToResizeColumns
  nameWithType: DataGridView.AllowUserToResizeColumns
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeColumns
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether users can resize columns."
  remarks: "Use this property to prevent users from manually changing column widths. This is useful, for example, with display-only columns where data is loaded once and columns are resized at that time.       For more information about user resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridView> control does not support double buffering. If <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is set to `true` in a derived <xref:System.Windows.Forms.DataGridView> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns."
  example:
  - "The following code example illustrates how to use this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_252_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_252_1.cs)]"
  syntax:
    content: public bool AllowUserToResizeColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if users can resize columns; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AllowUserToResizeColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged
  id: AllowUserToResizeColumnsChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToResizeColumnsChanged
  nameWithType: DataGridView.AllowUserToResizeColumnsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumns*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToResizeColumnsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AllowUserToResizeColumnsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#253](~/add/codesnippet/csharp/e-system.windows.forms.d_95_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#253](~/add/codesnippet/visualbasic/e-system.windows.forms.d_95_1.vb)]"
  syntax:
    content: public event EventHandler AllowUserToResizeColumnsChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeRows
  id: AllowUserToResizeRows
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToResizeRows
  nameWithType: DataGridView.AllowUserToResizeRows
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeRows
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether users can resize rows."
  remarks: "Use this property to prevent users from manually changing row heights. This is useful, for example, with display-only controls where data is loaded once and rows are resized at that time.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about user resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridView> control does not support double buffering. If <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is set to `true` in a derived <xref:System.Windows.Forms.DataGridView> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns."
  example:
  - "The following code example illustrates how to use this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_364_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_364_1.cs)]"
  syntax:
    content: public bool AllowUserToResizeRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all the rows are resizable; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AllowUserToResizeRows*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged
  id: AllowUserToResizeRowsChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AllowUserToResizeRowsChanged
  nameWithType: DataGridView.AllowUserToResizeRowsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToResizeRowsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AllowUserToResizeRowsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#254](~/add/codesnippet/csharp/e-system.windows.forms.d_104_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#254](~/add/codesnippet/visualbasic/e-system.windows.forms.d_104_1.vb)]"
  syntax:
    content: public event EventHandler AllowUserToResizeRowsChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle
  id: AlternatingRowsDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AlternatingRowsDefaultCellStyle
  nameWithType: DataGridView.AlternatingRowsDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the default cell style applied to odd-numbered rows of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control displays its cells using the styles indicated by the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property, which inherits styles from other properties of type <xref:System.Windows.Forms.DataGridViewCellStyle>. For cells in rows with odd index numbers, the styles specified through the AlternatingRowsDefaultCellStyle property override the styles specified through the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>, and are overridden by the styles specified through the <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName> properties.       For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       When getting this property, a <xref:System.Windows.Forms.DataGridViewCellStyle> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <xref:System.Windows.Forms.DataGridViewCellStyle> to set this property for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use this property to create a ledger effect in a <xref:System.Windows.Forms.DataGridView> control. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_109_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_109_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to apply to the odd-numbered rows."
  overload: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged
  id: AlternatingRowsDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AlternatingRowsDefaultCellStyleChanged
  nameWithType: DataGridView.AlternatingRowsDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle*> property changes."
  remarks: "This event occurs when any property of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> property is set to a new value or when the <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> property is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AlternatingRowsDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AlternatingRowsDefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#255](~/add/codesnippet/csharp/e-system.windows.forms.d_108_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#255](~/add/codesnippet/visualbasic/e-system.windows.forms.d_108_1.vb)]"
  syntax:
    content: public event EventHandler AlternatingRowsDefaultCellStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)
  id: AreAllCellsSelected(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AreAllCellsSelected(Boolean)
  nameWithType: DataGridView.AreAllCellsSelected(Boolean)
  fullName: System.Windows.Forms.DataGridView.AreAllCellsSelected(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating whether all the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> cells are currently selected."
  remarks: "The <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> collection does not perform efficiently with large selections. To determine whether all the cells in the <xref:System.Windows.Forms.DataGridView> have been selected before you access the contents of the <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> collection, check the return value of the AreAllCellsSelected method. However, this method can cause rows to become unshared. For more information about <xref:System.Windows.Forms.DataGridView> performance, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use this method to avoid calculations involving the <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> collection.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectedCollections#10](~/add/codesnippet/csharp/m-system.windows.forms.d_53_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#10](~/add/codesnippet/visualbasic/m-system.windows.forms.d_53_1.vb)]"
  syntax:
    content: public bool AreAllCellsSelected (bool includeInvisibleCells);
    parameters:
    - id: includeInvisibleCells
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include the rows and columns with <xref:System.Windows.Forms.DataGridViewBand.Visible*> property values of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all cells (or all visible cells) are selected or if there are no cells (or no visible cells); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AreAllCellsSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoGenerateColumns
  id: AutoGenerateColumns
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoGenerateColumns
  nameWithType: DataGridView.AutoGenerateColumns
  fullName: System.Windows.Forms.DataGridView.AutoGenerateColumns
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether columns are created automatically when the <xref:System.Windows.Forms.DataGridView.DataSource*> or <xref:System.Windows.Forms.DataGridView.DataMember*> properties are set."
  remarks: "Columns are automatically generated when this property is set to `true` and the <xref:System.Windows.Forms.DataGridView.DataSource%2A> or <xref:System.Windows.Forms.DataGridView.DataMember%2A> properties are set or changed. Columns can also be automatically generated when the AutoGenerateColumns property is changed from `false` to `true`. If this property is `true` and the <xref:System.Windows.Forms.DataGridView.DataSource%2A> changes so there are columns that do not match the columns of the previous <xref:System.Windows.Forms.DataGridView.DataSource%2A> value, data in the unmatched columns is discarded. This property is ignored if the <xref:System.Windows.Forms.DataGridView.DataSource%2A> or <xref:System.Windows.Forms.DataGridView.DataMember%2A> properties are not set.       When AutoGenerateColumns is set to `true`, the <xref:System.Windows.Forms.DataGridView> control generates one column for each public property of the objects in the data source. If the bound objects implement the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, the control generates one column for each property returned by the <xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A> method. Each column header will contain the value of the property name the column represents.       If you set the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property but set AutoGenerateColumns to `false`, you must add columns manually. You can bind each added column to the data source by setting the <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=fullName> property to the name of a property exposed by the bound objects.      > [!NOTE] >  Setting the <xref:System.Windows.Forms.DataGridView.DataSource%2A> in the Windows Forms Designer automatically sets the AutoGenerateColumns property to `false` and generates code to add and bind a column for each property in the data source. The code that is generated at design-time is equivalent to the manually added code shown in the following example. It is not the same as the auto-generation of columns at run-time that occurs when the AutoGenerateColumns property is set to `true`."
  example:
  - "The following code example demonstrates how to add columns manually and bind them to a data source when you set AutoGenerateColumns to `false`. In this example, a <xref:System.Windows.Forms.DataGridView> control is bound to a list of `Task` business objects. Then, columns are added and are bound to `Task` properties through the <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=fullName> property. This example is part of a larger example available in [How to: Access Objects in a Windows Forms DataGridViewComboBoxCell Drop-Down List](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/add/codesnippet/csharp/p-system.windows.forms.d_133_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/add/codesnippet/visualbasic/p-system.windows.forms.d_133_1.vb)]"
  syntax:
    content: public bool AutoGenerateColumns { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the columns should be created automatically; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AutoGenerateColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged
  id: AutoGenerateColumnsChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoGenerateColumnsChanged
  nameWithType: DataGridView.AutoGenerateColumnsChanged
  fullName: System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the AutoGenerateColumnsChanged property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AutoGenerateColumnsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AutoGenerateColumnsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#256](~/add/codesnippet/csharp/e-system.windows.forms.d_124_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#256](~/add/codesnippet/visualbasic/e-system.windows.forms.d_124_1.vb)]"
  syntax:
    content: public event EventHandler AutoGenerateColumnsChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)
  id: AutoResizeColumn(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumn(Int32)
  nameWithType: DataGridView.AutoResizeColumn(Int32)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumn(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the specified column to fit the contents of all its cells, including the header cell."
  remarks: "This method is useful if you want to control when a column resizes. The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust. To resize all columns, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> method. To set the column to automatically resize whenever its contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> property or the column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses this method to make the column width large enough to accommodate a new cell value. This example is part of a larger example available in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/cpp/m-system.windows.forms.d_22_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/csharp/m-system.windows.forms.d_22_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/visualbasic/m-system.windows.forms.d_22_1.vb)]"
  syntax:
    content: public void AutoResizeColumn (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column to resize."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumn*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)
  id: AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)
  nameWithType: DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the specified column using the specified size mode."
  remarks: "This method is useful if you want to control when a column resizes. The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust. To resize all columns, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> method. To set the column to automatically resize whenever its contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> property or the column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property.       This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses this method to make the column width large enough to accommodate a new cell value. This example is part of a larger example available in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/cpp/30237d51-ba6e-450c-a204-_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/csharp/30237d51-ba6e-450c-a204-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/visualbasic/30237d51-ba6e-450c-a204-_1.vb)]"
  syntax:
    content: public void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column to resize."
    - id: autoSizeColumnMode
      type: System.Windows.Forms.DataGridViewAutoSizeColumnMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumn*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeColumnMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> and <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeColumnMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>, <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>, or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeColumnMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)
  id: AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)
  nameWithType: DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the specified column using the specified size mode, optionally calculating the width with the expectation that row heights will subsequently be adjusted."
  remarks: "This method is useful if you want to control when a column resizes. The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust. To resize all columns, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> method. To set the column to automatically resize whenever its contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> property or the column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property.       This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If `fixedHeight` is `false`, the column width will be calculated with the expectation that you will call the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> method next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column to resize."
    - id: autoSizeColumnMode
      type: System.Windows.Forms.DataGridViewAutoSizeColumnMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> values."
    - id: fixedHeight
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new width based on the current row heights; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the width with the expectation that the row heights will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumn*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeColumnMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> and <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeColumnMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>, <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>, or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeColumnMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight
  id: AutoResizeColumnHeadersHeight
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumnHeadersHeight()
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight()
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the column headers to fit the contents of the largest column header."
  remarks: "This method is useful if you want to control when the column headers resize. The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property.       For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to resize column headers and rows as a result of a button click.  \n  \n [!code-cpp[System.Windows.Forms.GridViewAutoSize#3](~/add/codesnippet/cpp/m-system.windows.forms.d_12_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewAutoSize#3](~/add/codesnippet/csharp/m-system.windows.forms.d_12_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewAutoSize#3](~/add/codesnippet/visualbasic/m-system.windows.forms.d_12_1.vb)]"
  syntax:
    content: public void AutoResizeColumnHeadersHeight ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)
  id: AutoResizeColumnHeadersHeight(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumnHeadersHeight(Int32)
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight(Int32)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the column headers based on changes to the contents of the header in the specified column."
  remarks: "This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source. The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property.       For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AutoResizeColumnHeadersHeight (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column containing the header with the changed content."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)
  id: AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumnHeadersHeight(Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight(Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the column headers to fit their contents, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when the column headers resize. The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property.       For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If the `fixedColumnsWidth` or `fixedRowHeadersWidth` parameters are `false`, the height of the column headers will be calculated with the expectation that you will call the methods such as <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> and <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeColumnHeadersHeight (bool fixedRowHeadersWidth, bool fixedColumnsWidth);
    parameters:
    - id: fixedRowHeadersWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new height based on the current width of the row headers; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the height with the expectation that the row headers width will also be adjusted."
    - id: fixedColumnsWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new height based on the current column widths; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the height with the expectation that the column widths will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)
  id: AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the column headers based on changes to the contents of the header in the specified column, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source. The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property.       For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If the `fixedColumnWidth` or `fixedRowHeadersWidth` parameters are `false`, the height of the column headers will be calculated with the expectation that you will call the methods such as <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> and <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeColumnHeadersHeight (int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column header whose contents should be used to determine new height."
    - id: fixedRowHeadersWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new height based on the current width of the row headers; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the height with the expectation that the row headers width will also be adjusted."
    - id: fixedColumnWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new height based on the current width of the specified column; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the height with the expectation that the column width will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns
  id: AutoResizeColumns
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumns()
  nameWithType: DataGridView.AutoResizeColumns()
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumns()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of all columns to fit the contents of all their cells, including the header cells."
  remarks: "This method is useful if you want to control when columns resize. The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific column, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> method. To set the columns to automatically resize whenever their contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> property or the column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example resizes all columns to fit the contents of the columns and the column headers. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/add/codesnippet/csharp/m-system.windows.forms.d_55_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/add/codesnippet/visualbasic/m-system.windows.forms.d_55_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/add/codesnippet/cpp/m-system.windows.forms.d_55_1.cpp)]"
  syntax:
    content: public void AutoResizeColumns ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.AutoResizeColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)
  id: AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumns(DataGridViewAutoSizeColumnsMode)
  nameWithType: DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of all columns using the specified size mode."
  remarks: "This method is useful if you want to control when columns resize. The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific column, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> method. To set the columns to automatically resize whenever their contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> property or the column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property.       This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example resizes all columns to fit the contents of the columns and the column headers. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/add/codesnippet/csharp/9a7dd6e4-e64a-49db-84d2-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/add/codesnippet/visualbasic/9a7dd6e4-e64a-49db-84d2-_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/add/codesnippet/cpp/9a7dd6e4-e64a-49db-84d2-_1.cpp)]"
  syntax:
    content: public void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);
    parameters:
    - id: autoSizeColumnsMode
      type: System.Windows.Forms.DataGridViewAutoSizeColumnsMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumns*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeColumnsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> and <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeColumnsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeColumnsMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)
  id: AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)
  nameWithType: DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of all columns using the specified size mode, optionally calculating the widths with the expectation that row heights will subsequently be adjusted."
  remarks: "This method is useful if you want to control when columns resize. The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific column, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> method. To set the columns to automatically resize whenever their contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> property or the column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property.       This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If `fixedHeight` is `false`, the column widths will be calculated with the expectation that you will call the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> method next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);
    parameters:
    - id: autoSizeColumnsMode
      type: System.Windows.Forms.DataGridViewAutoSizeColumnsMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> values."
    - id: fixedHeight
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new widths based on the current row heights; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the widths with the expectation that the row heights will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeColumns*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeColumnsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> and <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeColumnsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeColumnsMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)
  id: AutoResizeRow(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRow(Int32)
  nameWithType: DataGridView.AutoResizeRow(Int32)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRow(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the specified row to fit the contents of all its cells including the header cell."
  remarks: "This method is useful if you want to control when a row resizes. The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust. To resize all rows, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> method. To set the row to automatically resize whenever its contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example resizes the third row in a <xref:System.Windows.Forms.DataGridView> to fit the column contents. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/add/codesnippet/csharp/m-system.windows.forms.d_59_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/add/codesnippet/visualbasic/m-system.windows.forms.d_59_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/add/codesnippet/cpp/m-system.windows.forms.d_59_1.cpp)]"
  syntax:
    content: public void AutoResizeRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row to resize."
  overload: System.Windows.Forms.DataGridView.AutoResizeRow*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)
  id: AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)
  nameWithType: DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the specified row using the specified size mode."
  remarks: "This method is useful if you want to control when a row resizes. The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust. To resize all rows, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> method. To set the row to automatically resize whenever its contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example resizes the third row in a <xref:System.Windows.Forms.DataGridView> to fit the column contents. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/add/codesnippet/csharp/8c594f4c-8340-4123-9e32-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/add/codesnippet/visualbasic/8c594f4c-8340-4123-9e32-_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/add/codesnippet/cpp/8c594f4c-8340-4123-9e32-_1.cpp)]"
  syntax:
    content: public void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row to resize."
    - id: autoSizeRowMode
      type: System.Windows.Forms.DataGridViewAutoSizeRowMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.AutoResizeRow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeRowMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> and <xref:System.Windows.Forms.DataGridView.RowHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeRowMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> value."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  id: AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)
  nameWithType: DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the height of the specified row using the specified size mode, optionally calculating the height with the expectation that column widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when a row resizes. The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust. To resize all rows, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> method. To set the row to automatically resize whenever its contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If `fixedWidth` is `false`, the row height will be calculated with the expectation that you will call the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> method next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row to resize."
    - id: autoSizeRowMode
      type: System.Windows.Forms.DataGridViewAutoSizeRowMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> values."
    - id: fixedWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new height based on the current width of the columns; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the height with the expectation that the column widths will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeRow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeRowMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> and <xref:System.Windows.Forms.DataGridView.RowHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeRowMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> value."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  id: AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the row headers using the specified size mode."
  remarks: "This method is useful if you want to control when the row headers resize. The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property.       This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);
    parameters:
    - id: rowHeadersWidthSizeMode
      type: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  id: AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode."
  remarks: "This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source. The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property.       This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to resize the row header widths based on changes to the contents of the first row header. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/add/codesnippet/csharp/eaf9cae1-197b-48b4-8662-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/add/codesnippet/visualbasic/eaf9cae1-197b-48b4-8662-_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/add/codesnippet/cpp/eaf9cae1-197b-48b4-8662-_1.cpp)]"
  syntax:
    content: public void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row header with the changed content."
    - id: rowHeadersWidthSizeMode
      type: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref>"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  id: AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the row headers using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when the row headers resize. The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property.       This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If the `fixedColumnHeadersHeight` or `fixedRowsHeight` parameters are `false`, the width of the row headers will be calculated with the expectation that you will call methods such as <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> and <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);
    parameters:
    - id: rowHeadersWidthSizeMode
      type: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> values."
    - id: fixedColumnHeadersHeight
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new width based on the current height of the column headers; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the width with the expectation that the height of the column headers will also be adjusted."
    - id: fixedRowsHeight
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new width based on the current row heights; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the width with the expectation that the row heights will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  id: AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source. The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property.       This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If the `fixedColumnHeadersHeight` or `fixedRowHeight` parameters are `false`, the width of the row headers will be calculated with the expectation that you will call methods such as <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> and <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row containing the header with the changed content."
    - id: rowHeadersWidthSizeMode
      type: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> values."
    - id: fixedColumnHeadersHeight
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new width based on the current height of the column headers; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the width with the expectation that the height of the column headers will also be adjusted."
    - id: fixedRowHeight
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new width based on the current height of the specified row; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the width with the expectation that the row height will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>rowHeadersWidthSizeMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRows
  id: AutoResizeRows
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRows()
  nameWithType: DataGridView.AutoResizeRows()
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the heights of all rows to fit the contents of all their cells, including the header cells."
  remarks: "This method is useful if you want to control when rows resize. The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> method. To resize a subset of rows, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> overload. To set the rows to automatically resize whenever their contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to resize all rows based on non-header cell content. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/add/codesnippet/csharp/m-system.windows.forms.d_19_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/add/codesnippet/visualbasic/m-system.windows.forms.d_19_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/add/codesnippet/cpp/m-system.windows.forms.d_19_1.cpp)]"
  syntax:
    content: public void AutoResizeRows ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.AutoResizeRows*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)
  id: AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRows(DataGridViewAutoSizeRowsMode)
  nameWithType: DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the heights of the rows using the specified size mode value."
  remarks: "This method is useful if you want to control when rows resize. The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> method. To resize a subset of rows, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> overload. To set the rows to automatically resize whenever their contents change, use the<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to resize all rows based on non-header cell content. This code example is part of a larger example provided in [How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/add/codesnippet/csharp/27984b43-3d0e-40aa-887c-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/add/codesnippet/visualbasic/27984b43-3d0e-40aa-887c-_1.vb)]\n [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/add/codesnippet/cpp/27984b43-3d0e-40aa-887c-_1.cpp)]"
  syntax:
    content: public void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode);
    parameters:
    - id: autoSizeRowsMode
      type: System.Windows.Forms.DataGridViewAutoSizeRowsMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.AutoResizeRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeRowsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>, and <xref:System.Windows.Forms.DataGridView.RowHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeRowsMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> value."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeRowsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)
  id: AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)
  nameWithType: DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the heights of all rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when rows resize. The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> method. To resize a subset of rows, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> overload. To set the rows to automatically resize whenever their contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If the `fixedWidth` parameter is `false`, the row heights will be calculated with the expectation that you will call the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> method next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);
    parameters:
    - id: autoSizeRowsMode
      type: System.Windows.Forms.DataGridViewAutoSizeRowsMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> values."
    - id: fixedWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new heights based on the current column widths; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the heights with the expectation that the column widths will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeRowsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>, and <xref:System.Windows.Forms.DataGridView.RowHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeRowsMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> value."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeRowsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  id: AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)
  nameWithType: DataGridView.AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adjusts the heights of the specified rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted."
  remarks: "This method is useful if you want to control when rows resize, but you want to resize only a specific subset of rows, such as those within a range of bound records that have been updated. The row heights for the specified rows are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> method. To resize all rows, use a different overload of the <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> method. To set the rows to automatically resize whenever their contents change, use the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.       This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <xref:System.Windows.Forms.DataGridView> class. If the `fixedWidth` parameter is `false`, the row heights will be calculated with the expectation that you will call the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> method next.       For more information about programmatic resizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void AutoResizeRows (int rowIndexStart, int rowsCount, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);
    parameters:
    - id: rowIndexStart
      type: System.Int32
      description: "The index of the first row to resize."
    - id: rowsCount
      type: System.Int32
      description: "The number of rows to resize."
    - id: autoSizeRowMode
      type: System.Windows.Forms.DataGridViewAutoSizeRowMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> values."
    - id: fixedWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the new heights based on the current column widths; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to calculate the heights with the expectation that the column widths will also be adjusted."
  overload: System.Windows.Forms.DataGridView.AutoResizeRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>autoSizeRowsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>, and <xref:System.Windows.Forms.DataGridView.RowHeadersVisible*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeRowsMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> value."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>autoSizeRowsMode</code> has the value <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndexStart</code> is less than 0.       -or-       <code>rowsCount</code> is less than 0."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoSize
  nameWithType: DataGridView.AutoSize
  fullName: System.Windows.Forms.DataGridView.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "This property is not relevant for this class."
  syntax:
    content: public override bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged
  id: AutoSizeColumnModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoSizeColumnModeChanged
  nameWithType: DataGridView.AutoSizeColumnModeChanged
  fullName: System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode*> property of a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event. This example is part of a larger example available in [How to: Manipulate Columns in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/add/codesnippet/cpp/e-system.windows.forms.d_142_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#180](~/add/codesnippet/visualbasic/e-system.windows.forms.d_142_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#180](~/add/codesnippet/csharp/e-system.windows.forms.d_142_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged;
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnsMode
  id: AutoSizeColumnsMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoSizeColumnsMode
  nameWithType: DataGridView.AutoSizeColumnsMode
  fullName: System.Windows.Forms.DataGridView.AutoSizeColumnsMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating how column widths are determined."
  remarks: "This property lets you configure the control so that column widths are automatically adjusted either to fill the control or to fit cell contents. Size adjustments occur in fill mode whenever the width of the control changes. In content-based sizing modes, size adjustments occur whenever cell contents change or, if <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> is enabled, whenever row heights change. Some content-based sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.       To change the sizing mode for an individual column, set its <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> property. The default value of this property is <xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode>, indicating that the column inherits its behavior and its <xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A> property value from the control.       Columns in fill mode divide the available control width in proportions indicated by their <xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A> property values. The width available for fill mode is determined by subtracting the widths of all other columns from the width of the client area of the control. If this width is smaller than the combined <xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A> values of all fill-mode columns, the horizontal scroll bar is displayed, all fill-mode columns are shown with their minimum widths, and user column-resizing is disabled. For more information about column fill mode, see [Column Fill Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       Only columns with a <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A> property value of `true` are resized automatically, and changing the visibility of a column does not cause resizing to occur. Additionally, when columns are set to automatically resize, the user cannot adjust the column widths with the mouse.       To adjust column widths programmatically, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> methods or set the column <xref:System.Windows.Forms.DataGridViewColumn.Width%2A> property.       For more information about content-based automatic sizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use this property in a master/detail scenario where two <xref:System.Windows.Forms.DataGridView> controls display data from two tables in a parent/child relationship. In this example, the column sizing mode for the master control is <xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode>, and the column widths are programmatically initialized to fit the loaded values. The details control is set to an automatic column sizing mode so that columns will adjust automatically whenever the values change (for example, when the user changes the current row in the parent table). This example is part of a larger example available in [How to: Create a Master/Detail Form Using Two Windows Forms DataGridView Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewMasterDetails#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_171_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewMasterDetails#10](~/add/codesnippet/csharp/p-system.windows.forms.d_171_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeColumnsMode
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> value. The default is <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AutoSizeColumnsMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> value."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref>, column headers are hidden, and at least one visible column has an <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode*> property value of <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>.       -or-       The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsMode&quot;></xref> and at least one visible column with an <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode*> property value of <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref> is frozen."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged
  id: AutoSizeColumnsModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoSizeColumnsModeChanged
  nameWithType: DataGridView.AutoSizeColumnsModeChanged
  fullName: System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AutoSizeColumnsModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the AutoSizeColumnsModeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#257](~/add/codesnippet/csharp/e-system.windows.forms.d_68_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#257](~/add/codesnippet/visualbasic/e-system.windows.forms.d_68_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged;
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoSizeRowsMode
  id: AutoSizeRowsMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoSizeRowsMode
  nameWithType: DataGridView.AutoSizeRowsMode
  fullName: System.Windows.Forms.DataGridView.AutoSizeRowsMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating how row heights are determined."
  remarks: "This property lets you configure the control so that row heights are automatically adjusted to fit their contents whenever the contents change. If <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> is enabled, row heights are also adjusted whenever column widths change. Some sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.       Only rows with a <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> property value of `true` are resized automatically, and changing the visibility of a row does not cause resizing to occur. Additionally, when rows are set to automatically resize, the user cannot adjust the row heights with the mouse.       The <xref:System.Windows.Forms.DataGridViewRow.Height%2A> value of an automatically sized row is recalculated during layout to account for the size of the font that is used. To get the correct <xref:System.Windows.Forms.DataGridViewRow.Height%2A>, you should retrieve the value in the form&quot;s <xref:System.Windows.Forms.Control.Layout> event instead of in the form&quot;s constructor.       To adjust row heights programmatically, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> or <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> methods, or set the row <xref:System.Windows.Forms.DataGridViewRow.Height%2A> property.       For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about content-based automatic sizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the row to automatically resize based on the contents of the row headers and all of the columns. This code example is part of a larger example provided in [How to: Automatically Resize Cells When Content Changes in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.AutoSizing#9](~/add/codesnippet/csharp/p-system.windows.forms.d_150_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#9](~/add/codesnippet/cpp/p-system.windows.forms.d_150_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#9](~/add/codesnippet/visualbasic/p-system.windows.forms.d_150_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeRowsMode
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> value indicating the sizing mode. The default is <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.AutoSizeRowsMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> value."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> and row headers are hidden."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged
  id: AutoSizeRowsModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: AutoSizeRowsModeChanged
  nameWithType: DataGridView.AutoSizeRowsModeChanged
  fullName: System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event. This example is part of a larger example available in [How to: Automatically Resize Cells When Content Changes in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.AutoSizing#10](~/add/codesnippet/csharp/e-system.windows.forms.d_126_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#10](~/add/codesnippet/cpp/e-system.windows.forms.d_126_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_126_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged;
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeModeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackColor
  id: BackColor
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackColor
  nameWithType: DataGridView.BackColor
  fullName: System.Windows.Forms.DataGridView.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background color for the control."
  remarks: "This property is not relevant to this control. To set the background color of the portion of the <xref:System.Windows.Forms.DataGridView> control not occupied by cells, use the <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> property."
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the background color of the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultBackColor*> property."
  overload: System.Windows.Forms.DataGridView.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackColorChanged
  id: BackColorChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackColorChanged
  nameWithType: DataGridView.BackColorChanged
  fullName: System.Windows.Forms.DataGridView.BackColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.BackColor*> property changes."
  remarks: "The BackColorChanged event is raised if the <xref:System.Windows.Forms.DataGridView.BackColor%2A> property is changed programmatically or by user interaction.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler BackColorChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackgroundColor
  id: BackgroundColor
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackgroundColor
  nameWithType: DataGridView.BackgroundColor
  fullName: System.Windows.Forms.DataGridView.BackgroundColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background color of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The BackgroundColor property determines the color of the area of the <xref:System.Windows.Forms.DataGridView> that is not filled with cells."
  example:
  - "The following code example demonstrates how to set the BackgroundColor property. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_185_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_185_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_185_1.cs)]"
  syntax:
    content: public System.Drawing.Color BackgroundColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the background color of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>. The default is &lt;xref:System.Drawing.SystemColors.AppWorkspace%2A?displayProperty=fullName&gt;."
  overload: System.Windows.Forms.DataGridView.BackgroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified value when setting this property is <xref href=&quot;System.Drawing.Color.Empty&quot;></xref>.       -or-       The specified value when setting this property has a &lt;xref:System.Drawing.Color.A%2A?displayProperty=fullName&gt; property value that is less that 255."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackgroundColorChanged
  id: BackgroundColorChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackgroundColorChanged
  nameWithType: DataGridView.BackgroundColorChanged
  fullName: System.Windows.Forms.DataGridView.BackgroundColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.BackgroundColor*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BackgroundColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the BackgroundColorChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#259](~/add/codesnippet/csharp/e-system.windows.forms.d_19_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#259](~/add/codesnippet/visualbasic/e-system.windows.forms.d_19_1.vb)]"
  syntax:
    content: public event EventHandler BackgroundColorChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: DataGridView.BackgroundImage
  fullName: System.Windows.Forms.DataGridView.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background image displayed in the control."
  remarks: "This property is not relevant for this control."
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "An <xref href=&quot;System.Drawing.Image&quot;></xref> that represents the image to display in the background of the control."
  overload: System.Windows.Forms.DataGridView.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: DataGridView.BackgroundImageChanged
  fullName: System.Windows.Forms.DataGridView.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.BackgroundImage*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: DataGridView.BackgroundImageLayout
  fullName: System.Windows.Forms.DataGridView.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background image layout as defined in the <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> enumeration."
  remarks: "This property is not relevant for this control."
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "An <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> value indicating the background image layout. The default is <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.BackgroundImageLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: DataGridView.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.BackgroundImageLayout*> property changes."
  remarks: "Although this event occurs as described, the <xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A> property is not relevant for this control.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)
  id: BeginEdit(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BeginEdit(Boolean)
  nameWithType: DataGridView.BeginEdit(Boolean)
  fullName: System.Windows.Forms.DataGridView.BeginEdit(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Puts the current cell in edit mode."
  remarks: "This method returns `false` if the cell fails to enter edit mode, which can happen for a number of reasons. This method returns `false` if the current cell is read-only. It also returns `false` if the cell <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> property is `null` (meaning the cell cannot host an editing control) and the cell type does not implement the <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.       If the cell supports editing, this method raises the <xref:System.Windows.Forms.DataGridView.CellBeginEdit> event, which can be canceled, and returns `false` if an event handler cancels the edit. If the edit is not canceled and the cell can host an editing control, this method initializes the control and displays it. If the initialization fails, this method returns `false`.       If the cell successfully enters edit mode, the <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A> property returns `true`."
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#10](~/add/codesnippet/csharp/m-system.windows.forms.d_17_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/add/codesnippet/visualbasic/m-system.windows.forms.d_17_1.vb)]"
  syntax:
    content: public virtual bool BeginEdit (bool selectAll);
    parameters:
    - id: selectAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to select all the cell&quot;s contents; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to not select any contents."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current cell is already in edit mode or successfully enters edit mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.BeginEdit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridView.CurrentCell*> is not set to a valid cell.       -or-       This method was called in a handler for the <xref href=&quot;System.Windows.Forms.DataGridView.CellBeginEdit&quot;></xref> event."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The type indicated by the cell&quot;s <xref:System.Windows.Forms.DataGridViewCell.EditType*> property does not derive from the <xref href=&quot;System.Windows.Forms.Control&quot;></xref> type.       -or-       The type indicated by the cell&quot;s <xref:System.Windows.Forms.DataGridViewCell.EditType*> property does not implement the <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref> interface."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BorderStyle
  nameWithType: DataGridView.BorderStyle
  fullName: System.Windows.Forms.DataGridView.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the border style for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "This property affects the outer border of the <xref:System.Windows.Forms.DataGridView>. To set the style of the cell borders, use the <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> property."
  example:
  - "The following code example demonstrates how to initialize a simple data-bound <xref:System.Windows.Forms.DataGridView>. It also demonstrates how to set the BorderStyle property.  \n  \n [!code-cs[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/csharp/p-system.windows.forms.d_383_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_383_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/cpp/p-system.windows.forms.d_383_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref> values. The default is <xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.BorderStyleChanged
  id: BorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: BorderStyleChanged
  nameWithType: DataGridView.BorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.BorderStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.BorderStyle*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the BorderStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#260](~/add/codesnippet/csharp/e-system.windows.forms.d_56_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#260](~/add/codesnippet/visualbasic/e-system.windows.forms.d_56_1.vb)]"
  syntax:
    content: public event EventHandler BorderStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CancelEdit
  id: CancelEdit
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataGridView.CancelEdit()
  fullName: System.Windows.Forms.DataGridView.CancelEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cancels edit mode for the currently selected cell and discards any changes."
  remarks: ''
  example:
  - "The following code example illustrates the use of this method. This example is part of a larger example available in [Column Fill Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/add/codesnippet/csharp/m-system.windows.forms.d_41_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/add/codesnippet/visualbasic/m-system.windows.forms.d_41_1.vb)]"
  syntax:
    content: public bool CancelEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the cancel was successful; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CancelRowEdit
  id: CancelRowEdit
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CancelRowEdit
  nameWithType: DataGridView.CancelRowEdit
  fullName: System.Windows.Forms.DataGridView.CancelRowEdit
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.VirtualMode*> property of a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the cancels edits in a row."
  remarks: "When the <xref:System.Windows.Forms.DataGridView> is in virtual mode, changes are committed to the data cache at the cell level by default. The CancelRowEdit event can be used when implementing row-level transactions.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how to handle this event for a <xref:System.Windows.Forms.DataGridView> control in virtual mode. When the control is in edit mode, the `rowInEdit` variable holds the index of the row being edited, and the `customerInEdit` variable holds a reference to a Customer object corresponding to that row. When the user cancels out of edit mode, this object can be discarded. If the row the user was editing is the row for new records, however, the old Customer object is discarded and replaced with a new one so that the user can begin making edits again. This example is part of a larger example available in [Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#170](~/add/codesnippet/cpp/e-system.windows.forms.d_165_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#170](~/add/codesnippet/visualbasic/e-system.windows.forms.d_165_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.VirtualMode#170](~/add/codesnippet/csharp/e-system.windows.forms.d_165_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.QuestionEventHandler CancelRowEdit;
    return:
      type: System.Windows.Forms.QuestionEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CanEnableIme
  id: CanEnableIme
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CanEnableIme
  nameWithType: DataGridView.CanEnableIme
  fullName: System.Windows.Forms.DataGridView.CanEnableIme
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the <xref:System.Windows.Forms.Control.ImeMode*> property can be set to an active value, to enable IME support."
  syntax:
    content: protected override bool CanEnableIme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there is an editable cell selected; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CanEnableIme*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellBeginEdit
  id: CellBeginEdit
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellBeginEdit
  nameWithType: DataGridView.CellBeginEdit
  fullName: System.Windows.Forms.DataGridView.CellBeginEdit
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when edit mode starts for the selected cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates how to handle this event to reflect that the current <xref:System.Windows.Forms.DataGridViewCell> is being edited. In this example, the <xref:System.Windows.Forms.Control.Text%2A> property of the containing <xref:System.Windows.Forms.Form> is set to reflect which cell is being edited. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#220](~/add/codesnippet/csharp/e-system.windows.forms.d_120_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#220](~/add/codesnippet/visualbasic/e-system.windows.forms.d_120_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit;
    return:
      type: System.Windows.Forms.DataGridViewCellCancelEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellBorderStyle
  id: CellBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellBorderStyle
  nameWithType: DataGridView.CellBorderStyle
  fullName: System.Windows.Forms.DataGridView.CellBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the cell border style for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "If the CellBorderStyle property is set to anything other than <xref:System.Windows.Forms.DataGridViewCellBorderStyle>, <xref:System.Windows.Forms.DataGridViewCellBorderStyle>, or <xref:System.Windows.Forms.DataGridViewCellBorderStyle>, the <xref:System.Windows.Forms.DataGridView.GridColor%2A> property must be a system color.       You cannot set this property to the <xref:System.Windows.Forms.DataGridViewCellBorderStyle> value, which is a read-only value indicating that the cell border style has been customized through the use of the <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> property."
  example:
  - "The following code example demonstrates how to use the CellBorderStyle property. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_28_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_28_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_28_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellBorderStyle&quot;></xref> that represents the border style of the cells contained in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CellBorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewCellBorderStyle&quot;></xref> value."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewCellBorderStyle&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellBorderStyleChanged
  id: CellBorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellBorderStyleChanged
  nameWithType: DataGridView.CellBorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.CellBorderStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the border style of a cell changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellBorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellBorderStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#261](~/add/codesnippet/csharp/e-system.windows.forms.d_106_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#261](~/add/codesnippet/visualbasic/e-system.windows.forms.d_106_1.vb)]"
  syntax:
    content: public event EventHandler CellBorderStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellClick
  id: CellClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellClick
  nameWithType: DataGridView.CellClick
  fullName: System.Windows.Forms.DataGridView.CellClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when any part of a cell is clicked."
  remarks: "This event occurs when any part of a cell is clicked, including borders and padding. It also occurs when the user presses and releases the SPACE key while a button cell or check box cell has focus, and will occur twice for these cell types if the cell is clicked while pressing the SPACE key.       To determine when the cell contents are clicked, handle the <xref:System.Windows.Forms.DataGridView.CellContentClick> event.       This event does not receive information about the mouse position. If the event handler needs information about the mouse position, use the <xref:System.Windows.Forms.DataGridView.CellMouseClick> event.       For clicks in a <xref:System.Windows.Forms.DataGridViewCheckBoxCell>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName> event instead. Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName> event. In that handler, if the current cell is a check box cell, call the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName> method and pass in the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example shows a CellClick event handler in a Tic-Tac-Toe game implementation that uses image columns in a <xref:System.Windows.Forms.DataGridView> control. Unless the game is over or the cell has already been clicked, the event handler sets the cell value to one of two <xref:System.Drawing.Bitmap> objects represented by the variables `x` and `o`.  \n  \n This code is part of a larger example shown in [How to: Work with Image Columns in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/add/codesnippet/csharp/e-system.windows.forms.d_65_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/add/codesnippet/cpp/e-system.windows.forms.d_65_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_65_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellClick;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellContentClick
  id: CellContentClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellContentClick
  nameWithType: DataGridView.CellContentClick
  fullName: System.Windows.Forms.DataGridView.CellContentClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the content within a cell is clicked."
  remarks: "This event occurs when the cell content is clicked. It also occurs when the user presses and releases the SPACEBAR while a button cell or check box cell has focus, and will occur twice for these cell types if the cell content is clicked while pressing the SPACEBAR.       Use this event to detect button clicks for a <xref:System.Windows.Forms.DataGridViewButtonCell> or link clicks for a <xref:System.Windows.Forms.DataGridViewLinkCell>.       For clicks in a <xref:System.Windows.Forms.DataGridViewCheckBoxCell>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName> event instead. Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName> event. In that handler, if the current cell is a check box cell, call the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName> method and pass in the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example provides a handler for this event that determines whether the clicked cell is a link cell or a button cell and performs the corresponding action as a result. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.  \n  \n [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/add/codesnippet/cpp/e-system.windows.forms.d_23_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/add/codesnippet/csharp/e-system.windows.forms.d_23_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/add/codesnippet/visualbasic/e-system.windows.forms.d_23_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellContentClick;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellContentDoubleClick
  id: CellContentDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellContentDoubleClick
  nameWithType: DataGridView.CellContentDoubleClick
  fullName: System.Windows.Forms.DataGridView.CellContentDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user double-clicks a cell&quot;s contents."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellContentDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellContentDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#285](~/add/codesnippet/csharp/e-system.windows.forms.d_76_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#285](~/add/codesnippet/visualbasic/e-system.windows.forms.d_76_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellContextMenuStripChanged
  id: CellContextMenuStripChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellContextMenuStripChanged
  nameWithType: DataGridView.CellContextMenuStripChanged
  fullName: System.Windows.Forms.DataGridView.CellContextMenuStripChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellContextMenuStripChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#286](~/add/codesnippet/csharp/e-system.windows.forms.d_40_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#286](~/add/codesnippet/visualbasic/e-system.windows.forms.d_40_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellContextMenuStripNeeded
  id: CellContextMenuStripNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellContextMenuStripNeeded
  nameWithType: DataGridView.CellContextMenuStripNeeded
  fullName: System.Windows.Forms.DataGridView.CellContextMenuStripNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell&quot;s shortcut menu is needed."
  remarks: "The CellContextMenuStripNeeded event occurs only when the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`.       When you handle the CellContextMenuStripNeeded event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a cell. This is useful when you want to display a shortcut menu determined by the current state or value of a cell.       The CellContextMenuStripNeeded event also occurs whenever the value of the <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=fullName> property is retrieved, either programmatically or when the user right-clicks a cell.       You can use the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=fullName>and <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A> properties to determine the state or value of a cell, and use this information to change or modify the <xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName> property. This property is initialized with the value of the cell <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> property, which the event value overrides.       Handle the CellContextMenuStripNeeded event when working with large amounts of data to avoid the performance penalties of setting the cell <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> value for multiple cells. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       You can also specify shortcut menus for individual rows rather than individual cells by setting the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property or handling the <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> event. The cell <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> property setting overrides the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property setting, and the CellContextMenuStripNeeded event overrides both the <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> event and the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property setting. However, you can specify `null` for a cell shortcut menu to prevent a row shortcut menu from being overridden.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use aCellContextMenuStripNeeded event handler to display a custom shortcut menu used when the user right-clicks a cell.  \n  \n [!code-cs[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/add/codesnippet/csharp/e-system.windows.forms.d_46_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/add/codesnippet/cpp/e-system.windows.forms.d_46_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_46_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded;
    return:
      type: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellDoubleClick
  id: CellDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellDoubleClick
  nameWithType: DataGridView.CellDoubleClick
  fullName: System.Windows.Forms.DataGridView.CellDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user double-clicks anywhere in a cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#288](~/add/codesnippet/csharp/e-system.windows.forms.d_154_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#288](~/add/codesnippet/visualbasic/e-system.windows.forms.d_154_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellEndEdit
  id: CellEndEdit
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellEndEdit
  nameWithType: DataGridView.CellEndEdit
  fullName: System.Windows.Forms.DataGridView.CellEndEdit
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when edit mode stops for the currently selected cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates how to handle this event to clear the row <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=fullName> property in case it was previously set by a <xref:System.Windows.Forms.DataGridView.CellValidating> event handler. The <xref:System.Windows.Forms.DataGridView.CellValidating> event handler can clear the error text when the new cell value meets the validation criteria, but when the user reverts to the old cell value by pressing ESC, the <xref:System.Windows.Forms.DataGridView.CellValidating> event does not occur. This example is part of a larger example available in [Walkthrough: Validating Data in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_130_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewDataValidation#20](~/add/codesnippet/csharp/e-system.windows.forms.d_130_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellEnter
  id: CellEnter
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellEnter
  nameWithType: DataGridView.CellEnter
  fullName: System.Windows.Forms.DataGridView.CellEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the current cell changes in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control or when the control receives input focus."
  remarks: "This event may occur twice for a single click if the control does not have input focus and the clicked cell was not previously the current cell.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how to handle this event to change the <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> property of the current cell. In this example the selection background color is set in the CellEnter event, then reset to <xref:System.Drawing.Color.Empty> on the <xref:System.Windows.Forms.DataGridView.CellLeave> event. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and ensure that all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#190](~/add/codesnippet/csharp/e-system.windows.forms.d_138_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/add/codesnippet/visualbasic/e-system.windows.forms.d_138_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellEnter;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellErrorTextChanged
  id: CellErrorTextChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellErrorTextChanged
  nameWithType: DataGridView.CellErrorTextChanged
  fullName: System.Windows.Forms.DataGridView.CellErrorTextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewCell.ErrorText*> property of a cell changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellErrorTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellErrorTextChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#291](~/add/codesnippet/csharp/e-system.windows.forms.d_90_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#291](~/add/codesnippet/visualbasic/e-system.windows.forms.d_90_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellErrorTextNeeded
  id: CellErrorTextNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellErrorTextNeeded
  nameWithType: DataGridView.CellErrorTextNeeded
  fullName: System.Windows.Forms.DataGridView.CellErrorTextNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell&quot;s error text is needed."
  remarks: "The CellErrorTextNeeded event occurs only when the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`. Handling the CellErrorTextNeeded event is useful when you want to determine the error for a cell depending on its value or state.       When you handle the CellErrorTextNeeded event and specify error text in the handler, an error glyph appears in the cell unless the <xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A> property is set to `false` or the cell is in edit mode. When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.       The CellErrorTextNeeded event also occurs whenever the value of the <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=fullName> property is retrieved.       You can use the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A> property to determine the state or value of a cell, and use this information to change or modify the <xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=fullName> property. This property is initialized with the value of the cell <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> property, which the event value overrides.       Handle the CellErrorTextNeeded event when working with large amounts of data to avoid the performance penalties of setting the cell <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> value for multiple cells. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to create error messages for cells without unsharing rows or causing the cell error to be duplicated over all the shared cells.  \n  \n [!code-cs[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/add/codesnippet/csharp/e-system.windows.forms.d_166_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/add/codesnippet/cpp/e-system.windows.forms.d_166_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_166_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded;
    return:
      type: System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellFormatting
  id: CellFormatting
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellFormatting
  nameWithType: DataGridView.CellFormatting
  fullName: System.Windows.Forms.DataGridView.CellFormatting
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the contents of a cell need to be formatted for display."
  remarks: "By default, the <xref:System.Windows.Forms.DataGridView> control will attempt to convert a cell&quot;s value into a format suitable for display. For example, it will convert a numerical value into a string for display in a text box cell. You can indicate the formatting convention to use by setting the <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> property of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by properties such as the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property.       If the standard formatting is insufficient, you can customize the formatting by handling the CellFormattingevent. This event lets you indicate the exact display value as well as the cell styles, such as background and foreground color, to use for the cell display. This means you can handle this event for any kind of cell formatting, regardless of whether the cell value itself needs formatting.       The CellFormatting event occurs every time each cell is painted, so you should avoid lengthy processing when handling this event. This event also occurs when the cell <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> is retrieved or its <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> method is called.       When you handle the CellFormatting event, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> property is initialized with the cell value. If you provide custom conversion from the cell value to the display value, set the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> property to the converted value, ensuring that the new value is of the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> property. To indicate that no further value formatting is necessary, set the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property to `true`.       When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is formatted using the <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style returned by the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=fullName> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.       Regardless of the value of the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName> property, the display properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=fullName> property are used to render the cell.       For more information about custom formatting using the CellFormatting event, see [How to: Customize Data Formatting in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       To avoid performance penalties when handling this event, access the cell through the parameters of the event handler rather than accessing the cell directly.       To customize the conversion of a formatted, user-specified value into an actual cell value, handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example shows how to handle the CellFormatting event.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/add/codesnippet/visualbasic/e-system.windows.forms.d_125_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/add/codesnippet/cpp/e-system.windows.forms.d_125_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#1](~/add/codesnippet/csharp/e-system.windows.forms.d_125_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting;
    return:
      type: System.Windows.Forms.DataGridViewCellFormattingEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellLeave
  id: CellLeave
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellLeave
  nameWithType: DataGridView.CellLeave
  fullName: System.Windows.Forms.DataGridView.CellLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell loses input focus and is no longer the current cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates how to handle this event to change the <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> property of the current cell. In this example the selection background color is set in the <xref:System.Windows.Forms.DataGridView.CellEnter> event, then reset to <xref:System.Drawing.Color.Empty> on the CellLeave event. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and ensure that all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#190](~/add/codesnippet/csharp/e-system.windows.forms.d_127_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/add/codesnippet/visualbasic/e-system.windows.forms.d_127_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellLeave;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseClick
  id: CellMouseClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseClick
  nameWithType: DataGridView.CellMouseClick
  fullName: System.Windows.Forms.DataGridView.CellMouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs whenever the user clicks anywhere on a cell with the mouse."
  remarks: "This event occurs when the user clicks using any of the mouse buttons. Use the <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName> property to determine which button was clicked.       To detect clicks on the contents of a cell, such as a button or link within a cell, use the <xref:System.Windows.Forms.DataGridView.CellContentClick> event.       The handler for this event receives the column index and row index of the mouse pointer position.       For clicks in a <xref:System.Windows.Forms.DataGridViewCheckBoxCell>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <xref:System.Windows.Forms.DataGridView.CellValueChanged> event instead. Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> event. In that handler, if the current cell is a check box cell, call the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> method and pass in the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellMouseClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#295](~/add/codesnippet/csharp/e-system.windows.forms.d_97_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#295](~/add/codesnippet/visualbasic/e-system.windows.forms.d_97_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseDoubleClick
  id: CellMouseDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseDoubleClick
  nameWithType: DataGridView.CellMouseDoubleClick
  fullName: System.Windows.Forms.DataGridView.CellMouseDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell within the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is double-clicked."
  remarks: "This event occurs when the user double-clicks using any of the mouse buttons. Use the <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName> property to determine which button was clicked.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellMouseDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#296](~/add/codesnippet/csharp/e-system.windows.forms.d_143_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#296](~/add/codesnippet/visualbasic/e-system.windows.forms.d_143_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseDown
  id: CellMouseDown
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseDown
  nameWithType: DataGridView.CellMouseDown
  fullName: System.Windows.Forms.DataGridView.CellMouseDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell."
  remarks: "This event occurs when the user presses any of the mouse buttons. Use the <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName> property to determine which button was clicked.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellMouseDown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#297](~/add/codesnippet/csharp/e-system.windows.forms.d_149_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#297](~/add/codesnippet/visualbasic/e-system.windows.forms.d_149_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseEnter
  id: CellMouseEnter
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseEnter
  nameWithType: DataGridView.CellMouseEnter
  fullName: System.Windows.Forms.DataGridView.CellMouseEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the mouse pointer enters a cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example shows a CellMouseEnter event handler in a Tic-Tac-Toe game implementation that uses image columns in a <xref:System.Windows.Forms.DataGridView> control. The event handler uses the cell value to determine the cursor and ToolTip to display.  \n  \n This code is part of a larger example shown in [How to: Work with Image Columns in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/add/codesnippet/csharp/e-system.windows.forms.d_160_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/add/codesnippet/cpp/e-system.windows.forms.d_160_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/add/codesnippet/visualbasic/e-system.windows.forms.d_160_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseLeave
  id: CellMouseLeave
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseLeave
  nameWithType: DataGridView.CellMouseLeave
  fullName: System.Windows.Forms.DataGridView.CellMouseLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the mouse pointer leaves a cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example shows a CellMouseLeave event handler in a Tic-Tac-Toe game implementation that uses image columns in a <xref:System.Windows.Forms.DataGridView> control. The event handler resets the cursor and ToolTip, which are set in a <xref:System.Windows.Forms.DataGridView.CellMouseEnter> event handler.  \n  \n This code is part of a larger example shown in [How to: Work with Image Columns in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/add/codesnippet/csharp/e-system.windows.forms.d_135_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/add/codesnippet/cpp/e-system.windows.forms.d_135_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/add/codesnippet/visualbasic/e-system.windows.forms.d_135_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseMove
  id: CellMouseMove
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseMove
  nameWithType: DataGridView.CellMouseMove
  fullName: System.Windows.Forms.DataGridView.CellMouseMove
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the mouse pointer moves over the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseMove event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellMouseMove event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#300](~/add/codesnippet/csharp/e-system.windows.forms.d_170_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#300](~/add/codesnippet/visualbasic/e-system.windows.forms.d_170_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellMouseUp
  id: CellMouseUp
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellMouseUp
  nameWithType: DataGridView.CellMouseUp
  fullName: System.Windows.Forms.DataGridView.CellMouseUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user releases a mouse button while over a cell."
  remarks: "This event occurs when the user releases any of the mouse buttons. Use the <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName> property to determine which button was clicked.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellMouseUp event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#301](~/add/codesnippet/csharp/e-system.windows.forms.d_161_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#301](~/add/codesnippet/visualbasic/e-system.windows.forms.d_161_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellPainting
  id: CellPainting
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellPainting
  nameWithType: DataGridView.CellPainting
  fullName: System.Windows.Forms.DataGridView.CellPainting
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell needs to be drawn."
  remarks: "You can handle this event to customize the appearance of cells in the control. You can paint entire cells yourself, or paint specific parts of cells and use the <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=fullName> or <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=fullName> methods to paint other parts. You can also use the <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> class to paint standard controls using the current theme. For more information, see [Rendering Controls with Visual Styles](~/add/includes/ajax-current-ext-md.md). If you are using [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], you also have access to a large library of standard images that you can use with the <xref:System.Windows.Forms.DataGridView> control.       When handling this event, you should access the cell through the parameters of the event handler, rather than access the cell directly.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how to use this event to customize the appearance of all cells in a particular column.  \n  \n This code is part of a larger example available in [How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCellPainting#10](~/add/codesnippet/csharp/e-system.windows.forms.d_80_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCellPainting#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_80_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting;
    return:
      type: System.Windows.Forms.DataGridViewCellPaintingEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellParsing
  id: CellParsing
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellParsing
  nameWithType: DataGridView.CellParsing
  fullName: System.Windows.Forms.DataGridView.CellParsing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell leaves edit mode if the cell value has been modified."
  remarks: "By default, the <xref:System.Windows.Forms.DataGridView> control will attempt to convert a user-specified value displayed in a cell to an actual underlying cell value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property. This conversion uses the formatting properties of the cell style returned by the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.       If the standard conversion does not meet your needs, handle the CellParsing event to provide custom value conversion to the required type.       Users can enter edit mode using the method specified by the <xref:System.Windows.Forms.DataGridView.EditMode%2A> property, and can leave edit mode, committing any changes to a cell, by moving to another cell or by pressing ENTER. Pressing ESC will revert any changes to the value before it is committed, and the CellParsing event will not occur. The CellParsing event occurs only if the cell value has actually been modified, even if the final value is the same as the original value. It also occurs when the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> method is called.       When you handle the CellParsing event, you can convert the value yourself or you can customize the default conversion. For example, you can convert the value yourself using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with type converters of your choosing. Alternatively, you can let the default type converters parse the value, but modify the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.       When you convert the value yourself, replace the initial, formatted value of the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> property with the converted value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property. To indicate that no further parsing is necessary, set the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName> property to `true`.       When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is parsed using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with default type converters. The default implementation of this method parses the value using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style passed in. If the value is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, the value is parsed using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the type converters passed in.       To customize the conversion of a cell value into a formatted value for display, handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example shows how to handle the CellParsing event. It also shows how to use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> class.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/visualbasic/e-system.windows.forms.d_50_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/cpp/e-system.windows.forms.d_50_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#2](~/add/codesnippet/csharp/e-system.windows.forms.d_50_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing;
    return:
      type: System.Windows.Forms.DataGridViewCellParsingEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellStateChanged
  id: CellStateChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellStateChanged
  nameWithType: DataGridView.CellStateChanged
  fullName: System.Windows.Forms.DataGridView.CellStateChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell state changes, such as when the cell loses or gains focus."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#135](~/add/codesnippet/csharp/e-system.windows.forms.d_0_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#135](~/add/codesnippet/visualbasic/e-system.windows.forms.d_0_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellStateChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellStyleChanged
  id: CellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellStyleChanged
  nameWithType: DataGridView.CellStyleChanged
  fullName: System.Windows.Forms.DataGridView.CellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewCell.Style*> property of a <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> changes."
  remarks: "This event occurs when any property of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by a <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName> property is set to a new value or when a <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName> property is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#305](~/add/codesnippet/csharp/e-system.windows.forms.d_55_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#305](~/add/codesnippet/visualbasic/e-system.windows.forms.d_55_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellStyleContentChanged
  id: CellStyleContentChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellStyleContentChanged
  nameWithType: DataGridView.CellStyleContentChanged
  fullName: System.Windows.Forms.DataGridView.CellStyleContentChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when one of the values of a cell style changes."
  remarks: "The CellStyleContentChanged event occurs when a property value of a <xref:System.Windows.Forms.DataGridViewCellStyle> object returned by one of the following properties changes:      -   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=fullName>       If one of these properties is set to a different <xref:System.Windows.Forms.DataGridViewCellStyle>, however, the corresponding *PropertyName*`Changed` event occurs, but the CellStyleContentChanged event does not occur.       For row, column, and cell properties, the name of the *PropertyName*`Changed` event begins with &quot;`Row`&quot;, &quot;`Column`&quot;, or &quot;`Cell`&quot; (for example, <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellStyleContentChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellStyleContentChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#306](~/add/codesnippet/csharp/e-system.windows.forms.d_20_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#306](~/add/codesnippet/visualbasic/e-system.windows.forms.d_20_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellToolTipTextChanged
  id: CellToolTipTextChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellToolTipTextChanged
  nameWithType: DataGridView.CellToolTipTextChanged
  fullName: System.Windows.Forms.DataGridView.CellToolTipTextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewCell.ToolTipText*> property value changes for a cell in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellToolTipTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the CellToolTipTextChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#307](~/add/codesnippet/csharp/e-system.windows.forms.d_109_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#307](~/add/codesnippet/visualbasic/e-system.windows.forms.d_109_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellToolTipTextNeeded
  id: CellToolTipTextNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellToolTipTextNeeded
  nameWithType: DataGridView.CellToolTipTextNeeded
  fullName: System.Windows.Forms.DataGridView.CellToolTipTextNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell&quot;s ToolTip text is needed."
  remarks: "The CellToolTipTextNeeded event occurs only when the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`.       When you handle the CellToolTipTextNeeded event, the ToolTip text you specify in the handler is shown whenever the mouse pointer is over a cell and the control <xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A> property value is `true`. The CellToolTipTextNeeded event is useful when you want to display ToolTips determined by the current state or value of a cell.       The CellToolTipTextNeeded event also occurs whenever the value of the <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=fullName> property is retrieved, either programmatically or when the mouse pointer enters a cell.       You can use the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A> properties to determine the state or value of a cell, and use this information to change or modify the <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=fullName> property. This property is initialized with the value of the cell <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> property, which the event value overrides.       Handle the CellToolTipTextNeeded event when working with large amounts of data to avoid the performance penalties of setting the cell <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> value for multiple cells. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a CellToolTipTextNeeded event handler to display information from hidden columns in a data-bound <xref:System.Windows.Forms.DataGridView> control.  \n  \n [!code-cs[System.Windows.Forms.DataGridView_NeededEvents#20](~/add/codesnippet/csharp/e-system.windows.forms.d_60_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_60_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded;
    return:
      type: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellValidated
  id: CellValidated
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellValidated
  nameWithType: DataGridView.CellValidated
  fullName: System.Windows.Forms.DataGridView.CellValidated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs after the cell has finished validating."
  remarks: "Handling this event is useful for post-validation processing of the cell value.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the CellValidated event to clear out the <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> property. In this example, the <xref:System.Windows.Forms.DataGridView.CellValidating> event sets the <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> if the user enters data that is not valid into a cell. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#50](~/add/codesnippet/csharp/e-system.windows.forms.d_36_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#50](~/add/codesnippet/visualbasic/e-system.windows.forms.d_36_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellValidated;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellValidating
  id: CellValidating
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellValidating
  nameWithType: DataGridView.CellValidating
  fullName: System.Windows.Forms.DataGridView.CellValidating
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a cell loses input focus, enabling content validation."
  remarks: "Canceling this event cancels the changes to the current cell. When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event will not be raised.       Handle the <xref:System.Windows.Forms.DataGridView.CellValidated> event to perform post-validation processing.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example handles the CellValidating event to ensure that only positive integers are entered by the user. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/csharp/e-system.windows.forms.d_122_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/cpp/e-system.windows.forms.d_122_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/add/codesnippet/visualbasic/e-system.windows.forms.d_122_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating;
    return:
      type: System.Windows.Forms.DataGridViewCellValidatingEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellValueChanged
  id: CellValueChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellValueChanged
  nameWithType: DataGridView.CellValueChanged
  fullName: System.Windows.Forms.DataGridView.CellValueChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of a cell changes."
  remarks: "The CellValueChanged event occurs when the user-specified value is committed, which typically occurs when focus leaves the cell.       In the case of check box cells, however, you will typically want to handle the change immediately. To commit the change when the cell is clicked, you must handle the <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName> event. In the handler, if the current cell is a check box cell, call the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName> method and pass in the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> value.       Rows in the control are not automatically sorted when a cell value is changed. To sort the control when the user modifies a cell, call the <xref:System.Windows.Forms.DataGridView.Sort%2A> method in a CellValueChanged event handler.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the CellValueChanged event to update the values in a balance column of a <xref:System.Windows.Forms.DataGridView>. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#30](~/add/codesnippet/csharp/e-system.windows.forms.d_58_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/add/codesnippet/visualbasic/e-system.windows.forms.d_58_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellValueNeeded
  id: CellValueNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellValueNeeded
  nameWithType: DataGridView.CellValueNeeded
  fullName: System.Windows.Forms.DataGridView.CellValueNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.VirtualMode*> property of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> requires a value for a cell in order to format and display the cell."
  remarks: "Use this event in virtual mode to populate cells with data from a custom data store without causing rows to become unshared. For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md). For more information about virtual mode, see [Virtual Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       To add user-specified values to your custom data store, handle the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example handles the CellValueNeeded event to populate cells with positive integers. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/csharp/e-system.windows.forms.d_3_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/cpp/e-system.windows.forms.d_3_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_3_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded;
    return:
      type: System.Windows.Forms.DataGridViewCellValueEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CellValuePushed
  id: CellValuePushed
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CellValuePushed
  nameWithType: DataGridView.CellValuePushed
  fullName: System.Windows.Forms.DataGridView.CellValuePushed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.VirtualMode*> property of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and a cell value has changed and requires storage in the underlying data source."
  remarks: "Use this event in virtual mode to update a custom data store with user-specified data. Handle the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> event to retrieve values from the data store for display in the control.       For more information about virtual mode, see [Virtual Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example handles the CellValuePushed event to store updates and new entries in a data store object. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/csharp/e-system.windows.forms.d_77_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/cpp/e-system.windows.forms.d_77_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_77_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed;
    return:
      type: System.Windows.Forms.DataGridViewCellValueEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ClearSelection
  id: ClearSelection
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ClearSelection()
  nameWithType: DataGridView.ClearSelection()
  fullName: System.Windows.Forms.DataGridView.ClearSelection()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Clears the current selection by unselecting all selected cells."
  remarks: "When this method is called, each column and row&quot;s <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> property is set to `false`."
  example:
  - "The following code example clears the selection of the <xref:System.Windows.Forms.DataGridView>. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and a <xref:System.Windows.Forms.Button> named `clearSelectionButton`, and ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#170](~/add/codesnippet/csharp/m-system.windows.forms.d_24_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#170](~/add/codesnippet/visualbasic/m-system.windows.forms.d_24_1.vb)]"
  syntax:
    content: public void ClearSelection ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.ClearSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)
  id: ClearSelection(System.Int32,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ClearSelection(Int32,Int32,Boolean)
  nameWithType: DataGridView.ClearSelection(Int32,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.ClearSelection(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cancels the selection of all currently selected cells except the one indicated, optionally ensuring that the indicated cell is selected."
  remarks: "A `rowIndexException` value of -1 represents a column header, and a `columnIndexException` value of -1 represents a row header.       This method is useful to clear the current selection without canceling the selection of the cell, row, or column indicated by the exception indexes.       If the <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property value allows individual cell selection, this method sets the <xref:System.Windows.Forms.DataGridViewCell.Selected%2A> property of each cell to `false`, excluding the cell in the row and column specified. If the <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property value allows full row or column selection, this method also sets the <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> property of each row or column to `false`, excluding the row or column containing the specified cell.       The excluded cell, row, or column may or may not be in the selected state when this method is called. This method selects it if the `selectExceptionElement` parameter value is `true`. Depending on the selection mode, the entire row or column may also be selected as a result."
  syntax:
    content: protected void ClearSelection (int columnIndexException, int rowIndexException, bool selectExceptionElement);
    parameters:
    - id: columnIndexException
      type: System.Int32
      description: "The column index to exclude."
    - id: rowIndexException
      type: System.Int32
      description: "The row index to exclude."
    - id: selectExceptionElement
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to select the excluded cell, row, or column; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to retain its original state."
  overload: System.Windows.Forms.DataGridView.ClearSelection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndexException</code> is greater than the highest column index.       -or-       <code>columnIndexException</code> is less than -1 when <xref:System.Windows.Forms.DataGridView.SelectionMode*> is <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref>; otherwise, <code>columnIndexException</code> is less than 0.       -or-       <code>rowIndexException</code> is greater than the highest row index.       -or-       <code>rowIndexException</code> is less than -1 when <xref:System.Windows.Forms.DataGridView.SelectionMode*> is <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref>; otherwise, <code>rowIndexException</code> is less than 0."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ClipboardCopyMode
  id: ClipboardCopyMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ClipboardCopyMode
  nameWithType: DataGridView.ClipboardCopyMode
  fullName: System.Windows.Forms.DataGridView.ClipboardCopyMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value that indicates whether users can copy cell text values to the <xref href=&quot;System.Windows.Forms.Clipboard&quot;></xref> and whether row and column header text is included."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control copies the text representation of each selected cell to the Clipboard. This value is the cell value converted to a string or, for image cells, the value of the <xref:System.Windows.Forms.DataGridViewImageCell.Description%2A> property.       Values are copied to the Clipboard in <xref:System.Windows.Forms.DataFormats.Text>, <xref:System.Windows.Forms.DataFormats.UnicodeText>, <xref:System.Windows.Forms.DataFormats.Html>, and <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue> formats. These formats are useful for pasting content into applications such as Notepad, [!INCLUDE[ofprexcel](~/add/includes/ofprexcel-md.md)], and [!INCLUDE[ofprword](~/add/includes/ofprword-md.md)].       The <xref:System.Windows.Forms.DataGridView> control copies the cells contained in the smallest rectangle that includes all selected cells. Rows and columns that do not contain any selected cells are not represented in the copied data. Any unselected cells in the remaining rows and columns are represented by blank placeholders. Depending on the copy mode and the selection mode, header values for the copied rows and columns may be copied, as well.       When users copy content, the <xref:System.Windows.Forms.DataGridView> control adds a <xref:System.Windows.Forms.DataObject> to the Clipboard. This data object is retrieved from the <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> method. You can call this method when you want to programmatically add the data object to the Clipboard.       The <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A>method retrieves values for individual cells by calling the <xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=fullName> method. You can override either or both of these methods in derived classes to customize the layout of copied cells or to support additional data formats.       For more information about Clipboard operations and data formats, see the <xref:System.Windows.Forms.Clipboard> class."
  example:
  - "The following code example demonstrates how to enable copying in the <xref:System.Windows.Forms.DataGridView> control. This example is part of a larger example available in [How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewClipboardDemo#10](~/add/codesnippet/csharp/p-system.windows.forms.d_89_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_89_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewClipboardCopyMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewClipboardCopyMode&quot;></xref> values. The default is <xref href=&quot;System.Windows.Forms.DataGridViewClipboardCopyMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ClipboardCopyMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewClipboardCopyMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnAdded
  id: ColumnAdded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnAdded
  nameWithType: DataGridView.ColumnAdded
  fullName: System.Windows.Forms.DataGridView.ColumnAdded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a column is added to the control."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnAdded event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnAdded event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#314](~/add/codesnippet/csharp/e-system.windows.forms.d_150_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#314](~/add/codesnippet/visualbasic/e-system.windows.forms.d_150_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged
  id: ColumnContextMenuStripChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnContextMenuStripChanged
  nameWithType: DataGridView.ColumnContextMenuStripChanged
  fullName: System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip*> property of a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of theColumnContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnContextMenuStripChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#315](~/add/codesnippet/csharp/e-system.windows.forms.d_14_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#315](~/add/codesnippet/visualbasic/e-system.windows.forms.d_14_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnCount
  id: ColumnCount
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnCount
  nameWithType: DataGridView.ColumnCount
  fullName: System.Windows.Forms.DataGridView.ColumnCount
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the number of columns displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Setting the ColumnCount property to 0 will remove all columns from the <xref:System.Windows.Forms.DataGridView>.       If ColumnCount is reset to a value less than the current value, columns will be removed from the end of the <xref:System.Windows.Forms.DataGridView.Columns%2A> collection. If ColumnCount is set to a value greater than the current value, columns will be added to the end of the <xref:System.Windows.Forms.DataGridView.Columns%2A> collection.       This property can be used with the <xref:System.Windows.Forms.DataGridView.RowCount%2A> property to create a simple <xref:System.Windows.Forms.DataGridView> for displaying and editing text.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to set the<xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, ColumnCount, and <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> properties. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_34_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_34_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_34_1.cs)]"
  syntax:
    content: public int ColumnCount { get; set; }
    return:
      type: System.Int32
      description: "The number of columns displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ColumnCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When setting this property, the <xref:System.Windows.Forms.DataGridView.DataSource*> property has been set."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged
  id: ColumnDataPropertyNameChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnDataPropertyNameChanged
  nameWithType: DataGridView.ColumnDataPropertyNameChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName*> property for a column changes."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDataPropertyNameChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnDataPropertyNameChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#316](~/add/codesnippet/csharp/e-system.windows.forms.d_118_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#316](~/add/codesnippet/visualbasic/e-system.windows.forms.d_118_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged
  id: ColumnDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnDefaultCellStyleChanged
  nameWithType: DataGridView.ColumnDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle*> property for a column changes."
  remarks: "This event occurs when any properties of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> property for a column is set to a new value or when the <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> property for a column is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnDefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#317](~/add/codesnippet/csharp/e-system.windows.forms.d_93_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#317](~/add/codesnippet/visualbasic/e-system.windows.forms.d_93_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged
  id: ColumnDisplayIndexChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnDisplayIndexChanged
  nameWithType: DataGridView.ColumnDisplayIndexChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value the <xref:System.Windows.Forms.DataGridViewColumn.DisplayIndex*> property for a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDisplayIndexChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnDisplayIndexChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#318](~/add/codesnippet/csharp/e-system.windows.forms.d_89_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#318](~/add/codesnippet/visualbasic/e-system.windows.forms.d_89_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnDividerDoubleClick
  id: ColumnDividerDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnDividerDoubleClick
  nameWithType: DataGridView.ColumnDividerDoubleClick
  fullName: System.Windows.Forms.DataGridView.ColumnDividerDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user double-clicks a divider between two columns."
  remarks: "You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a column divider. For example, you can handle this event to programmatically resize columns based only on the content in the rows that are currently visible, avoiding a performance impact with the default behavior when working with a large number of rows.       The column <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> property does not extend the area in which a user can double-click. If the width of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDividerDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnDividerDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#319](~/add/codesnippet/csharp/e-system.windows.forms.d_152_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#319](~/add/codesnippet/visualbasic/e-system.windows.forms.d_152_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnDividerWidthChanged
  id: ColumnDividerWidthChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnDividerWidthChanged
  nameWithType: DataGridView.ColumnDividerWidthChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDividerWidthChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDividerWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnDividerWidthChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#320](~/add/codesnippet/csharp/e-system.windows.forms.d_53_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#320](~/add/codesnippet/visualbasic/e-system.windows.forms.d_53_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeaderCellChanged
  id: ColumnHeaderCellChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeaderCellChanged
  nameWithType: DataGridView.ColumnHeaderCellChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeaderCellChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the contents of a column header cell change."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeaderCellChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnHeaderCellChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#323](~/add/codesnippet/csharp/e-system.windows.forms.d_119_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#323](~/add/codesnippet/visualbasic/e-system.windows.forms.d_119_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeaderMouseClick
  id: ColumnHeaderMouseClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeaderMouseClick
  nameWithType: DataGridView.ColumnHeaderMouseClick
  fullName: System.Windows.Forms.DataGridView.ColumnHeaderMouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user clicks a column header."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "When a column heading is clicked in a <xref:System.Windows.Forms.DataGridView>, the default behavior is to order the grid rows based on the clicked column, or to reverse the sort order if the grid is already sorted by the clicked column. The following code example demonstrates how to use this event to perform a programmatic sort that emulates the default behavior of clicking a <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> when the default behavior has been disabled. In this example, the<xref:System.Windows.Forms.DataGridView.SelectionMode%2A> is set to <xref:System.Windows.Forms.DataGridViewSelectionMode>, so clicking the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> selects the contents of the column. For the example code to function as intended, the default column header click behavior needs to be changed each time the data is loaded into the <xref:System.Windows.Forms.DataGridView>. Add a <xref:System.Windows.Forms.DataGridView.DataBindingComplete> event handler to provide the code that changes the default behavior. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and ensure that all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#160](~/add/codesnippet/csharp/e-system.windows.forms.d_29_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#160](~/add/codesnippet/visualbasic/e-system.windows.forms.d_29_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick
  id: ColumnHeaderMouseDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeaderMouseDoubleClick
  nameWithType: DataGridView.ColumnHeaderMouseDoubleClick
  fullName: System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a column header is double-clicked."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeaderMouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnHeaderMouseDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#322](~/add/codesnippet/csharp/e-system.windows.forms.d_86_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#322](~/add/codesnippet/visualbasic/e-system.windows.forms.d_86_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle
  id: ColumnHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersBorderStyle
  nameWithType: DataGridView.ColumnHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the border style applied to the column headers."
  remarks: "If the ColumnHeadersBorderStyle property is set to anything other than <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle>, the <xref:System.Windows.Forms.DataGridView.GridColor%2A> property must be a system color.       You cannot set this property to the <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle> value, which is a read-only value indicating that the border style has been customized through the use of the <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> property.      > [!NOTE] >  If visual styles are enabled for the application through the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> method and the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> property is `true`, the column headers are painted using the current theme. In this case, the value of the ColumnHeadersBorderStyle property is ignored for all column headers except the <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>, to which the theme is not applied."
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, ColumnHeadersBorderStyle, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, and <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> properties. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named`dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_169_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_169_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_169_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewHeaderBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewHeaderBorderStyle&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewHeaderBorderStyle&quot;></xref> value."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewHeaderBorderStyle&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged
  id: ColumnHeadersBorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersBorderStyleChanged
  nameWithType: DataGridView.ColumnHeadersBorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersBorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnHeadersBorderStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#262](~/add/codesnippet/csharp/e-system.windows.forms.d_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#262](~/add/codesnippet/visualbasic/e-system.windows.forms.d_15_1.vb)]"
  syntax:
    content: public event EventHandler ColumnHeadersBorderStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle
  id: ColumnHeadersDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersDefaultCellStyle
  nameWithType: DataGridView.ColumnHeadersDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the default column header style."
  remarks: "The default <xref:System.Windows.Forms.DataGridViewCellStyle> returned by this property has the following initial property values:      |`DataGridViewCellStyle` property|Default value|   |--------------------------------------|-------------------|   |<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|The value of the <xref:System.Windows.Forms.DataGridView.Font%2A> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment?displayProperty=fullName>|   |<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState?displayProperty=fullName>|       These values automatically override the values set through the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property. To force column headers to inherit the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> values, you must set the values in the ColumnHeadersDefaultCellStyle object to the default values indicated for the <xref:System.Windows.Forms.DataGridViewCellStyle> class.       For more information about cell style inheritance, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       If visual styles are enabled and <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> is set to `true`, all header cells except the <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> are painted using the current theme and the ColumnHeadersDefaultCellStyle values are ignored."
  example:
  - "The following code example demonstrates how to set the ColumnHeadersDefaultCellStyle, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, and <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> properties. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_175_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_175_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_175_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that represents the default column header style."
  overload: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged
  id: ColumnHeadersDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersDefaultCellStyleChanged
  nameWithType: DataGridView.ColumnHeadersDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle*> property changes."
  remarks: "This event occurs when any properties of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> property is set to a new value or when the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> property is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnHeadersDefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#263](~/add/codesnippet/csharp/e-system.windows.forms.d_16_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#263](~/add/codesnippet/visualbasic/e-system.windows.forms.d_16_1.vb)]"
  syntax:
    content: public event EventHandler ColumnHeadersDefaultCellStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeight
  id: ColumnHeadersHeight
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersHeight
  nameWithType: DataGridView.ColumnHeadersHeight
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the height, in pixels, of the column headers row"
  syntax:
    content: public int ColumnHeadersHeight { get; set; }
    return:
      type: System.Int32
      description: "The height, in pixels, of the row that contains the column headers. The default is 23."
  overload: System.Windows.Forms.DataGridView.ColumnHeadersHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than the minimum height of 4 pixels or is greater than the maximum height of 32768 pixels."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged
  id: ColumnHeadersHeightChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersHeightChanged
  nameWithType: DataGridView.ColumnHeadersHeightChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersHeightChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnHeadersHeightChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#264](~/add/codesnippet/csharp/e-system.windows.forms.d_22_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#264](~/add/codesnippet/visualbasic/e-system.windows.forms.d_22_1.vb)]"
  syntax:
    content: public event EventHandler ColumnHeadersHeightChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode
  id: ColumnHeadersHeightSizeMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersHeightSizeMode
  nameWithType: DataGridView.ColumnHeadersHeightSizeMode
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers."
  remarks: "When this property is set to <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode>, the height of the column headers cannot be adjusted by the user.       To adjust the height of the column headers programmatically, use the <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> method or set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A> property.       To set the sizing mode for the row headers, use the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property.       For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about header sizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridView> control does not support double buffering. If <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is set to `true` in a derived <xref:System.Windows.Forms.DataGridView> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns."
  example:
  - "The following code example illustrates how to use this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_5_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_5_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode&quot;></xref> value indicating the mode by which the height of the column headers row can be adjusted. The default is <xref href=&quot;System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged
  id: ColumnHeadersHeightSizeModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersHeightSizeModeChanged
  nameWithType: DataGridView.ColumnHeadersHeightSizeModeChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersHeightSizeModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnHeadersHeightSizeModeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#265](~/add/codesnippet/csharp/e-system.windows.forms.d_156_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#265](~/add/codesnippet/visualbasic/e-system.windows.forms.d_156_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged;
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeModeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnHeadersVisible
  id: ColumnHeadersVisible
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnHeadersVisible
  nameWithType: DataGridView.ColumnHeadersVisible
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the column header row is displayed."
  remarks: "If the ColumnHeadersVisible property is `false`, a column whose <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A> property is set to `true` can still be resized in the user interface (UI) by clicking with the mouse cursor anywhere along the right border of the column to be resized."
  example:
  - "The following code example populates an unbound <xref:System.Windows.Forms.DataGridView> control and sets the ColumnHeadersVisible property to `true` to ensure that column headers are displayed.  \n  \n [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/cpp/p-system.windows.forms.d_294_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/csharp/p-system.windows.forms.d_294_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_294_1.vb)]"
  syntax:
    content: public bool ColumnHeadersVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the column headers are displayed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ColumnHeadersVisible*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and one or more columns have an <xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode*> property value of <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnMode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged
  id: ColumnMinimumWidthChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnMinimumWidthChanged
  nameWithType: DataGridView.ColumnMinimumWidthChanged
  fullName: System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth*> property for a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnMinimumWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnMinimumWidthChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#324](~/add/codesnippet/csharp/e-system.windows.forms.d_35_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#324](~/add/codesnippet/visualbasic/e-system.windows.forms.d_35_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnNameChanged
  id: ColumnNameChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnNameChanged
  nameWithType: DataGridView.ColumnNameChanged
  fullName: System.Windows.Forms.DataGridView.ColumnNameChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewColumn.Name*> property for a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnNameChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnNameChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#325](~/add/codesnippet/csharp/e-system.windows.forms.d_18_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#325](~/add/codesnippet/visualbasic/e-system.windows.forms.d_18_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnRemoved
  id: ColumnRemoved
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnRemoved
  nameWithType: DataGridView.ColumnRemoved
  fullName: System.Windows.Forms.DataGridView.ColumnRemoved
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a column is removed from the control."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnRemoved event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnRemoved event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#326](~/add/codesnippet/csharp/e-system.windows.forms.d_128_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#326](~/add/codesnippet/visualbasic/e-system.windows.forms.d_128_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Columns
  id: Columns
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Columns
  nameWithType: DataGridView.Columns
  fullName: System.Windows.Forms.DataGridView.Columns
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a collection that contains all the columns in the control."
  remarks: "By using the <xref:System.Windows.Forms.DataGridViewColumnCollection> returned by this property, you can add columns, remove columns, and obtain a count of the columns contained in the <xref:System.Windows.Forms.DataGridView> control. For more information, see <xref:System.Windows.Forms.DataGridViewColumnCollection>."
  example:
  - "The following code example demonstrates how to create an unbound <xref:System.Windows.Forms.DataGridView>; set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, and <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> properties; and use the <xref:System.Windows.Forms.DataGridView.Rows%2A> and Columns properties. It also demonstrates how to use a version of the <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> and <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> methods to properly size the column headers and the rows. To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and a button named `Button1`, and then call the `InitializeDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are connected with their event handlers.  \n  \n [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/cpp/p-system.windows.forms.d_381_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/csharp/p-system.windows.forms.d_381_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_381_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewColumnCollection Columns { get; }
    return:
      type: System.Windows.Forms.DataGridViewColumnCollection
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewColumnCollection&quot;></xref> that contains all the columns in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  overload: System.Windows.Forms.DataGridView.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnSortModeChanged
  id: ColumnSortModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnSortModeChanged
  nameWithType: DataGridView.ColumnSortModeChanged
  fullName: System.Windows.Forms.DataGridView.ColumnSortModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewColumn.SortMode*> property for a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnSortModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnSortModeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#327](~/add/codesnippet/csharp/e-system.windows.forms.d_44_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#327](~/add/codesnippet/visualbasic/e-system.windows.forms.d_44_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnStateChanged
  id: ColumnStateChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnStateChanged
  nameWithType: DataGridView.ColumnStateChanged
  fullName: System.Windows.Forms.DataGridView.ColumnStateChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a column changes state, such as gaining or losing focus."
  remarks: "This event is raised when the value of one of the following column properties changes for a <xref:System.Windows.Forms.DataGridViewColumn> in the control:      -   <xref:System.Windows.Forms.DataGridViewBand.Displayed%2A>      -   <xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A>      -   <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A>      -   <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>      -   <xref:System.Windows.Forms.DataGridViewBand.Selected%2A>      -   <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnStateChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnStateChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#328](~/add/codesnippet/csharp/e-system.windows.forms.d_136_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#328](~/add/codesnippet/visualbasic/e-system.windows.forms.d_136_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnStateChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnToolTipTextChanged
  id: ColumnToolTipTextChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnToolTipTextChanged
  nameWithType: DataGridView.ColumnToolTipTextChanged
  fullName: System.Windows.Forms.DataGridView.ColumnToolTipTextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewColumn.ToolTipText*> property value changes for a column in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnToolTipTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ColumnToolTipTextChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#329](~/add/codesnippet/csharp/e-system.windows.forms.d_66_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#329](~/add/codesnippet/visualbasic/e-system.windows.forms.d_66_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ColumnWidthChanged
  id: ColumnWidthChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ColumnWidthChanged
  nameWithType: DataGridView.ColumnWidthChanged
  fullName: System.Windows.Forms.DataGridView.ColumnWidthChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewColumn.Width*> property for a column changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#18](~/add/codesnippet/visualbasic/e-system.windows.forms.d_100_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#18](~/add/codesnippet/csharp/e-system.windows.forms.d_100_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged;
    return:
      type: System.Windows.Forms.DataGridViewColumnEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  id: CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CommitEdit(DataGridViewDataErrorContexts)
  nameWithType: DataGridView.CommitEdit(DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridView.CommitEdit(DataGridViewDataErrorContexts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Commits changes in the current cell to the data cache without ending edit mode."
  remarks: "This method attempts to convert the formatted, user-specified value to the underlying cell data type. To do this, it raises the <xref:System.Windows.Forms.DataGridView.CellParsing> event, which you can handle to customize the type conversion. Otherwise, default type converters are used. Conversion errors may result in an exception if the <xref:System.Windows.Forms.DataGridView.DataError> event is not handled to prevent it. If the value is successfully converted, it is committed to the data store, raising the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event for non-data-bound cells when the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property value is `true`. If the value is successfully committed, the <xref:System.Windows.Forms.DataGridView.CellValueChanged> event occurs."
  example:
  - "The following code example calls the CommitEdit method within a <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> event handler to raise the <xref:System.Windows.Forms.DataGridView.CellValueChanged> event. This code example is part of a larger example provided in [How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/add/codesnippet/visualbasic/9d3dce2f-6bcc-4c80-a293-_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.DisabledButtons#5](~/add/codesnippet/csharp/9d3dce2f-6bcc-4c80-a293-_1.cs)]"
  syntax:
    content: public bool CommitEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);
    parameters:
    - id: context
      type: System.Windows.Forms.DataGridViewDataErrorContexts
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewDataErrorContexts&quot;></xref> values that specifies the context in which an error can occur."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the changes were committed; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CommitEdit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The cell value could not be committed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CreateAccessibilityInstance
  id: CreateAccessibilityInstance
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CreateAccessibilityInstance()
  nameWithType: DataGridView.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.DataGridView.CreateAccessibilityInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new accessible object for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  syntax:
    content: protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "A new <xref:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject> for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CreateAccessibilityInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CreateColumnsInstance
  id: CreateColumnsInstance
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CreateColumnsInstance()
  nameWithType: DataGridView.CreateColumnsInstance()
  fullName: System.Windows.Forms.DataGridView.CreateColumnsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates and returns a new <xref href=&quot;System.Windows.Forms.DataGridViewColumnCollection&quot;></xref>."
  syntax:
    content: protected virtual System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.DataGridViewColumnCollection
      description: "An empty <xref href=&quot;System.Windows.Forms.DataGridViewColumnCollection&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CreateColumnsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CreateControlsInstance
  id: CreateControlsInstance
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CreateControlsInstance()
  nameWithType: DataGridView.CreateControlsInstance()
  fullName: System.Windows.Forms.DataGridView.CreateControlsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates and returns a new <xref:System.Windows.Forms.Control.ControlCollection> that can be cast to type <xref:System.Windows.Forms.DataGridView.DataGridViewControlCollection>."
  remarks: "This method is called by the <xref:System.Windows.Forms.Control.Controls%2A> property to initialize its value."
  syntax:
    content: protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "An empty <xref:System.Windows.Forms.Control.ControlCollection>."
  overload: System.Windows.Forms.DataGridView.CreateControlsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CreateRowsInstance
  id: CreateRowsInstance
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CreateRowsInstance()
  nameWithType: DataGridView.CreateRowsInstance()
  fullName: System.Windows.Forms.DataGridView.CreateRowsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates and returns a new <xref href=&quot;System.Windows.Forms.DataGridViewRowCollection&quot;></xref>."
  syntax:
    content: protected virtual System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.DataGridViewRowCollection
      description: "An empty <xref href=&quot;System.Windows.Forms.DataGridViewRowCollection&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.CreateRowsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CurrentCell
  id: CurrentCell
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CurrentCell
  nameWithType: DataGridView.CurrentCell
  fullName: System.Windows.Forms.DataGridView.CurrentCell
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the currently active cell."
  remarks: "When you set a cell as the current cell, it will scroll into view if it is not currently displayed. The current cell cannot be a header cell, a disabled cell, or a cell in a hidden row or column.       You can set this property to `null` to temporarily remove the focus rectangle, but when the control receives focus and the value of this property is `null`, it is automatically set to the value of the <xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A>property.       When you change the value of this property, the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event occurs before the <xref:System.Windows.Forms.DataGridView.CurrentCellChanged> event. Any <xref:System.Windows.Forms.DataGridView.SelectionChanged> event handler accessing the CurrentCell property at this time will get its previous value.       When you bind the <xref:System.Windows.Forms.DataGridView> to an external data source, this property is reset to its default value."
  example:
  - "The following code example illustrates how to ensure that the current cell is visible after sorting by setting the <xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A> property to the cell retrieved through the CurrentCell property. This code works only with an unbound <xref:System.Windows.Forms.DataGridView> control. With a <xref:System.Windows.Forms.DataGridView> control bound to an external data source, the current cell is not automatically persisted when sorting.  \n  \n To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`. In C#, you must also connect the <xref:System.Windows.Forms.DataGridView.Sorted> event to the event handler.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#150](~/add/codesnippet/csharp/p-system.windows.forms.d_291_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/add/codesnippet/visualbasic/p-system.windows.forms.d_291_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCell CurrentCell { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> that represents the current cell, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no current cell. The default is the first cell in the first column or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there are no cells in the control."
  overload: System.Windows.Forms.DataGridView.CurrentCell*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of this property cannot be set because changes to the current cell cannot be committed or canceled.       -or-       The specified cell when setting this property is in a hidden row or column.       Re-entrant calling is only allowed when the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is bound to a <xref:System.Windows.Forms.DataGridView.DataSource*>. Re-entrant calling results from a change to the underlying data."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified cell when setting this property is not in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CurrentCellAddress
  id: CurrentCellAddress
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CurrentCellAddress
  nameWithType: DataGridView.CurrentCellAddress
  fullName: System.Windows.Forms.DataGridView.CurrentCellAddress
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the row and column indexes of the currently active cell."
  remarks: "Use this property to determine the row and column of the current cell without accessing the cell directly. This is useful to avoid unsharing shared rows. For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use the CurrentCellAddress property in a row-painting scenario. In the example, this property is used to store the row index of the current cell. When the user changes the current cell to a different row, the row is forced to repaint itself.  \n  \n This code is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/add/codesnippet/visualbasic/p-system.windows.forms.d_209_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#19](~/add/codesnippet/csharp/p-system.windows.forms.d_209_1.cs)]"
  syntax:
    content: public System.Drawing.Point CurrentCellAddress { get; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the row and column indexes of the currently active cell."
  overload: System.Windows.Forms.DataGridView.CurrentCellAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CurrentCellChanged
  id: CurrentCellChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CurrentCellChanged
  nameWithType: DataGridView.CurrentCellChanged
  fullName: System.Windows.Forms.DataGridView.CurrentCellChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.CurrentCell*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/add/codesnippet/visualbasic/e-system.windows.forms.d_28_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#19](~/add/codesnippet/csharp/e-system.windows.forms.d_28_1.cs)]"
  syntax:
    content: public event EventHandler CurrentCellChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged
  id: CurrentCellDirtyStateChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CurrentCellDirtyStateChanged
  nameWithType: DataGridView.CurrentCellDirtyStateChanged
  fullName: System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the state of a cell changes in relation to a change in its contents."
  remarks: "A cell is marked as modified if its contents have changed but the change has not been saved.       This event typically occurs when a cell has been edited but the change has not been committed to the data cache, or when an edit operation is canceled.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the CurrentCellDirtyStateChanged event. In this example, the event handler calls the <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> method to raise the <xref:System.Windows.Forms.DataGridView.CellValueChanged> event and determine the current value of a <xref:System.Windows.Forms.DataGridViewCheckBoxCell>. This code example is part of a larger example provided in [How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/add/codesnippet/visualbasic/e-system.windows.forms.d_167_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.DisabledButtons#5](~/add/codesnippet/csharp/e-system.windows.forms.d_167_1.cs)]"
  syntax:
    content: public event EventHandler CurrentCellDirtyStateChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.CurrentRow
  id: CurrentRow
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: CurrentRow
  nameWithType: DataGridView.CurrentRow
  fullName: System.Windows.Forms.DataGridView.CurrentRow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the row containing the current cell."
  remarks: "To change the current row, you must set the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property to a cell in the desired row."
  syntax:
    content: public System.Windows.Forms.DataGridViewRow CurrentRow { get; }
    return:
      type: System.Windows.Forms.DataGridViewRow
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that represents the row containing the current cell, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no current cell."
  overload: System.Windows.Forms.DataGridView.CurrentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DataBindingComplete
  id: DataBindingComplete
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataBindingComplete
  nameWithType: DataGridView.DataBindingComplete
  fullName: System.Windows.Forms.DataGridView.DataBindingComplete
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs after a data-binding operation has finished."
  remarks: "This event is raised when the contents of the data source change or when the value of the <xref:System.Windows.Forms.DataGridView.DataSource%2A>, <xref:System.Windows.Forms.DataGridView.DataMember%2A>, or <xref:System.Windows.Forms.Control.BindingContext%2A> property changes.       Handling this event is useful, for example, to programmatically resize rows and columns based on content updates. For more information, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates the use of this event. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs> class overview.  \n  \n [!code-cs[System.Windows.Forms.DataGridView_NeededEvents#05](~/add/codesnippet/csharp/e-system.windows.forms.d_17_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#05](~/add/codesnippet/visualbasic/e-system.windows.forms.d_17_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete;
    return:
      type: System.Windows.Forms.DataGridViewBindingCompleteEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DataError
  id: DataError
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataError
  nameWithType: DataGridView.DataError
  fullName: System.Windows.Forms.DataGridView.DataError
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source fails."
  remarks: "The DataError event enables you to handle exceptions thrown in code that is called by the control during data processing operations.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> and <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> properties of the <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> object associated with this event normally indicate the cell in which the data error occurred. When the error occurs in an external data source, however, the data source may not provide the column in which the error occurred. In this case, the <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> property typically indicates the column of the current cell at the time of the error."
  example:
  - "The following code example demonstrates a DataError event handler. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.  \n  \n [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/add/codesnippet/cpp/e-system.windows.forms.d_32_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/add/codesnippet/csharp/e-system.windows.forms.d_32_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/add/codesnippet/visualbasic/e-system.windows.forms.d_32_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewDataErrorEventHandler DataError;
    return:
      type: System.Windows.Forms.DataGridViewDataErrorEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DataMember
  id: DataMember
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataMember
  nameWithType: DataGridView.DataMember
  fullName: System.Windows.Forms.DataGridView.DataMember
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the name of the list or table in the data source for which the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is displaying data."
  remarks: "This property is useful when binding to a data source that contains multiple lists or tables. You do not need to set this property when binding to a data source that contains a single list or table. For example, you can bind a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataSet> that contains a single table without setting this property. If the <xref:System.Data.DataSet> contains multiple tables, however, you must set this property to the name of one of the tables."
  example:
  - "The following code example illustrates a common use for this property. In the example, a <xref:System.Windows.Forms.DataGridView> control named `customersDataGridView` is bound to a <xref:System.Data.DataSet> named `customersDataSet`. This <xref:System.Data.DataSet> contains a table named \"Customers\". The DataMember property is set to the name of the table.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#020](~/add/codesnippet/csharp/p-system.windows.forms.d_54_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#020](~/add/codesnippet/visualbasic/p-system.windows.forms.d_54_1.vb)]"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "The name of the table or list in the <xref:System.Windows.Forms.DataGridView.DataSource*> for which the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is displaying data. The default is <xref:System.String.Empty>."
  overload: System.Windows.Forms.DataGridView.DataMember*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "An error occurred in the data source and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DataMemberChanged
  id: DataMemberChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataMemberChanged
  nameWithType: DataGridView.DataMemberChanged
  fullName: System.Windows.Forms.DataGridView.DataMemberChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when value of the <xref:System.Windows.Forms.DataGridView.DataMember*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DataMemberChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the DataMemberChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#266](~/add/codesnippet/csharp/e-system.windows.forms.d_9_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#266](~/add/codesnippet/visualbasic/e-system.windows.forms.d_9_1.vb)]"
  syntax:
    content: public event EventHandler DataMemberChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DataSource
  id: DataSource
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataSource
  nameWithType: DataGridView.DataSource
  fullName: System.Windows.Forms.DataGridView.DataSource
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the data source that the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is displaying data for."
  remarks: "The <xref:System.Windows.Forms.DataGridView> class supports the standard Windows Forms data-binding model. This means the data source can be of any type that implements one of the following interfaces:      -   The <xref:System.Collections.IList> interface, including one-dimensional arrays.      -   The <xref:System.ComponentModel.IListSource> interface, such as the <xref:System.Data.DataTable> and <xref:System.Data.DataSet> classes.      -   The <xref:System.ComponentModel.IBindingList> interface, such as the <xref:System.ComponentModel.BindingList%601> class.      -   The <xref:System.ComponentModel.IBindingListView> interface, such as the <xref:System.Windows.Forms.BindingSource> class.       For specific examples, see the Example section and the task table at the end of this section.       Typically, you will bind to a <xref:System.Windows.Forms.BindingSource> component and bind the <xref:System.Windows.Forms.BindingSource> component to another data source or populate it with business objects. The <xref:System.Windows.Forms.BindingSource> component is the preferred data source because it can bind to a wide variety of data sources and can resolve many data binding issues automatically.       When binding to a data source that contains multiple lists or tables, you must set the <xref:System.Windows.Forms.DataGridView.DataMember%2A> property to a string that specifies the list or table to bind to. When binding to a <xref:System.Windows.Forms.BindingSource> component that contains multiple lists or tables, however, you can set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property of the <xref:System.Windows.Forms.BindingSource> component instead.       When binding to an object collection rather than to database data, you will typically set the <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> property of the object returned by the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property to `null` rather than using the default value of <xref:System.DBNull.Value?displayProperty=fullName>, which is appropriate for database data.       For more information, see [Displaying Data in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md). The following table provides direct links to common tasks related to the DataSource property.       See [Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls](~/add/includes/ajax-current-ext-md.md)and [How to: Bind Objects to Windows Forms DataGridView Controls](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to initialize a simple data-bound <xref:System.Windows.Forms.DataGridView>. It also demonstrates how to set the DataSource property.  \n  \n [!code-cs[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/csharp/p-system.windows.forms.d_359_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_359_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/cpp/p-system.windows.forms.d_359_1.cpp)]"
  syntax:
    content: public object DataSource { get; set; }
    return:
      type: System.Object
      description: "The object that contains data for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> to display."
  overload: System.Windows.Forms.DataGridView.DataSource*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "An error occurred in the data source and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DataSourceChanged
  id: DataSourceChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: DataGridView.DataSourceChanged
  fullName: System.Windows.Forms.DataGridView.DataSourceChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.DataSource*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DataSourceChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the DataSourceChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#267](~/add/codesnippet/csharp/e-system.windows.forms.d_41_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#267](~/add/codesnippet/visualbasic/e-system.windows.forms.d_41_1.vb)]"
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DefaultCellStyle
  id: DefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DefaultCellStyle
  nameWithType: DataGridView.DefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.DefaultCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the default cell style to be applied to the cells in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> if no other cell style properties are set."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control displays its cells using the styles indicated by the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property, which inherits styles from other properties of type <xref:System.Windows.Forms.DataGridViewCellStyle>. The styles specified through the DefaultCellStyle property affect all cells except when overridden by the styles specified through the following properties:      -   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>      -   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>      -   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName>       For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       When getting this property, a <xref:System.Windows.Forms.DataGridViewCellStyle> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <xref:System.Windows.Forms.DataGridViewCellStyle> to set this property for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates the use of this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_24_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_24_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to be applied as the default style."
  overload: System.Windows.Forms.DataGridView.DefaultCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DefaultCellStyleChanged
  id: DefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DefaultCellStyleChanged
  nameWithType: DataGridView.DefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.DefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle*> property changes."
  remarks: "This event occurs when any properties of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property are set to new values or when the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the DefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#268](~/add/codesnippet/csharp/e-system.windows.forms.d_48_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#268](~/add/codesnippet/visualbasic/e-system.windows.forms.d_48_1.vb)]"
  syntax:
    content: public event EventHandler DefaultCellStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DefaultSize
  nameWithType: DataGridView.DefaultSize
  fullName: System.Windows.Forms.DataGridView.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the default initial size of the control."
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> representing the initial size of the control, which is 240 pixels wide by 150 pixels high."
  overload: System.Windows.Forms.DataGridView.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DefaultValuesNeeded
  id: DefaultValuesNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DefaultValuesNeeded
  nameWithType: DataGridView.DefaultValuesNeeded
  fullName: System.Windows.Forms.DataGridView.DefaultValuesNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user enters the row for new records so that it can be populated with default values."
  remarks: "This event lets you populate the row for new records when the user enters the row. Initial values for the row come from the <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> property of the <xref:System.Windows.Forms.DataGridViewCell> returned by each column&quot;s <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> property.       In data bound mode, all cell values for data bound columns are stored in the external data source. When the user enters the row for new records, a new row is created in the data source before the DefaultValuesNeeded event occurs. When you populate the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=fullName> property in your event handler, the values are added directly to the data source.       In virtual mode, after this event occurs, the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event occurs for each cell in the new row so that you can store the default values in your custom data store. Then, the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> event occurs for each cell in the new row, retrieving the values that you stored in the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event, which are then displayed.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how this event can be handled. In the example, cells for the given columns are populated with default values. For the `CustomerID` column, the value is retrieved from a separate method (not implemented) that generates a unique customer ID.  \n  \n To run this example, replace the column names with the names of the column objects from an actual <xref:System.Windows.Forms.DataGridView> control and provide appropriate default values. When specifying columns by name, you must use the name of the column object and not the column header text.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#120](~/add/codesnippet/csharp/e-system.windows.forms.d_5_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#120](~/add/codesnippet/visualbasic/e-system.windows.forms.d_5_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)
  id: DisplayedColumnCount(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DisplayedColumnCount(Boolean)
  nameWithType: DataGridView.DisplayedColumnCount(Boolean)
  fullName: System.Windows.Forms.DataGridView.DisplayedColumnCount(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the number of columns displayed to the user."
  syntax:
    content: public int DisplayedColumnCount (bool includePartialColumns);
    parameters:
    - id: includePartialColumns
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include partial columns in the displayed column count; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "The number of columns displayed to the user."
  overload: System.Windows.Forms.DataGridView.DisplayedColumnCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)
  id: DisplayedRowCount(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DisplayedRowCount(Boolean)
  nameWithType: DataGridView.DisplayedRowCount(Boolean)
  fullName: System.Windows.Forms.DataGridView.DisplayedRowCount(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the number of rows displayed to the user."
  syntax:
    content: public int DisplayedRowCount (bool includePartialRow);
    parameters:
    - id: includePartialRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to include partial rows in the displayed row count; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "The number of rows displayed to the user."
  overload: System.Windows.Forms.DataGridView.DisplayedRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.DisplayRectangle
  id: DisplayRectangle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: DisplayRectangle
  nameWithType: DataGridView.DisplayRectangle
  fullName: System.Windows.Forms.DataGridView.DisplayRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the rectangle that represents the display area of the control."
  remarks: "The DisplayRectangle property returns the client rectangle of the display area of the control, not including the area occupied by any scroll bars that are showing."
  syntax:
    content: public override System.Drawing.Rectangle DisplayRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the display area of the control."
  overload: System.Windows.Forms.DataGridView.DisplayRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataGridView.Dispose(Boolean)
  fullName: System.Windows.Forms.DataGridView.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and its child controls and optionally releases the managed resources."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Windows.Forms.DataGridView.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EditingControl
  id: EditingControl
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EditingControl
  nameWithType: DataGridView.EditingControl
  fullName: System.Windows.Forms.DataGridView.EditingControl
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the control hosted by the current cell, if a cell with an editing control is in edit mode."
  remarks: "If the cell is not in edit mode or the cell type does not accommodate an editing control, this property returns `null`."
  example:
  - "The following code example illustrates how to use this property in an overridden method of a custom cell type. In the example, a reference to the editing control is retrieved, cast to a custom editing control type, and then populated with the current value of the cell.  \n  \n This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#210](~/add/codesnippet/csharp/p-system.windows.forms.d_233_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#210](~/add/codesnippet/visualbasic/p-system.windows.forms.d_233_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Control EditingControl { get; }
    return:
      type: System.Windows.Forms.Control
      description: "The <xref href=&quot;System.Windows.Forms.Control&quot;></xref> hosted by the current cell."
  overload: System.Windows.Forms.DataGridView.EditingControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EditingControlShowing
  id: EditingControlShowing
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EditingControlShowing
  nameWithType: DataGridView.EditingControlShowing
  fullName: System.Windows.Forms.DataGridView.EditingControlShowing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a control for editing a cell is showing."
  remarks: "You can handle this event to perform custom initialization of the editing control when a cell enters edit mode. To customize the display characteristics of the control, set the properties of the object returned by the <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=fullName> property. To perform other initialization, cast the value of the <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=fullName> property to the specific control type and access the members directly. For example, you can handle the EditingControlShowing event to attach event-handlers to the events of the editing control.      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridView> control hosts one editing control at a time, and reuses the editing control whenever the cell type does not change between edits. When attaching event-handlers to the editing control, you must therefore take precautions to avoid attaching the same handler multiple times. To avoid this problem, remove the handler from the event before you attach the handler to the event. This will prevent duplication if the handler is already attached to the event, but will have no effect otherwise. For more information, see the example code in the <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> class overview.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how to handle this event to change the <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> property of the current cell. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and ensure that the EditingControlShowing event is associated with the event handler.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#210](~/add/codesnippet/csharp/e-system.windows.forms.d_162_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#210](~/add/codesnippet/visualbasic/e-system.windows.forms.d_162_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing;
    return:
      type: System.Windows.Forms.DataGridViewEditingControlShowingEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EditingPanel
  id: EditingPanel
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EditingPanel
  nameWithType: DataGridView.EditingPanel
  fullName: System.Windows.Forms.DataGridView.EditingPanel
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the panel that contains the <xref:System.Windows.Forms.DataGridView.EditingControl*>."
  remarks: "Unlike the <xref:System.Windows.Forms.DataGridView.EditingControl%2A> property, which is `null` when the current cell is not in edit mode, the EditingPanel property is always available."
  example:
  - "The following code example illustrates how to use the EditingPanel property in a <xref:System.Windows.Forms.DataGridView> control to visually differentiate a cell when it is in edit mode. In this example, the <xref:System.Windows.Forms.Panel.BorderStyle%2A> of the cell's editing panel is set to <xref:System.Windows.Forms.BorderStyle>. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#069](~/add/codesnippet/csharp/p-system.windows.forms.d_297_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#069](~/add/codesnippet/visualbasic/p-system.windows.forms.d_297_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Panel EditingPanel { get; }
    return:
      type: System.Windows.Forms.Panel
      description: "The <xref href=&quot;System.Windows.Forms.Panel&quot;></xref> that contains the <xref:System.Windows.Forms.DataGridView.EditingControl*>."
  overload: System.Windows.Forms.DataGridView.EditingPanel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EditMode
  id: EditMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EditMode
  nameWithType: DataGridView.EditMode
  fullName: System.Windows.Forms.DataGridView.EditMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating how to begin editing a cell."
  remarks: "All <xref:System.Windows.Forms.DataGridViewEditMode> values except for <xref:System.Windows.Forms.DataGridViewEditMode> also allow a user to double-click a cell to begin editing it."
  example:
  - "The following code example demonstrates how to initialize a simple data-bound <xref:System.Windows.Forms.DataGridView>. It also demonstrates how to set the EditMode property.  \n  \n [!code-cs[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/csharp/p-system.windows.forms.d_300_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_300_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/add/codesnippet/cpp/p-system.windows.forms.d_300_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewEditMode EditMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewEditMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewEditMode&quot;></xref> values. The default is <xref href=&quot;System.Windows.Forms.DataGridViewEditMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.EditMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewEditMode&quot;></xref> value."
  - type: System.Exception
    commentId: T:System.Exception
    description: "The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EditModeChanged
  id: EditModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EditModeChanged
  nameWithType: DataGridView.EditModeChanged
  fullName: System.Windows.Forms.DataGridView.EditModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.EditMode*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the EditModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type<xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the EditModeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#269](~/add/codesnippet/csharp/e-system.windows.forms.d_111_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#269](~/add/codesnippet/visualbasic/e-system.windows.forms.d_111_1.vb)]"
  syntax:
    content: public event EventHandler EditModeChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EnableHeadersVisualStyles
  id: EnableHeadersVisualStyles
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EnableHeadersVisualStyles
  nameWithType: DataGridView.EnableHeadersVisualStyles
  fullName: System.Windows.Forms.DataGridView.EnableHeadersVisualStyles
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether row and column headers use the visual styles of the user&quot;s current theme if visual styles are enabled for the application."
  remarks: "You can enable visual styles for your application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> method before calling the <xref:System.Windows.Forms.Application.Run%2A?displayProperty=fullName> method. If EnableHeadersVisualStyles is set to `true`, all header cells except the <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> are painted using the current theme."
  example:
  - "The following code example demonstrates how to disable visual styles for the row and column headers in an application that has visual styles enabled. In this example, visual styles have been enabled for the application by calling the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> method in `Main`. However, visual styles will not be applied to the row and column headers because EnableHeadersVisualStyles is set to `false`. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> class.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/add/codesnippet/csharp/p-system.windows.forms.d_77_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_77_1.vb)]"
  syntax:
    content: public bool EnableHeadersVisualStyles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if visual styles are enabled for the headers; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.EnableHeadersVisualStyles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EndEdit
  id: EndEdit
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataGridView.EndEdit()
  fullName: System.Windows.Forms.DataGridView.EndEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Commits and ends the edit operation on the current cell using the default error context."
  remarks: "This method calls the <xref:System.Windows.Forms.DataGridView.EndEdit%2A> overload, passing in a bitwise combination of the <xref:System.Windows.Forms.DataGridViewDataErrorContexts> and <xref:System.Windows.Forms.DataGridViewDataErrorContexts> values.       This method raises the <xref:System.Windows.Forms.DataGridView.CellEndEdit> event.       This method may result in an exception if errors are not handled with the <xref:System.Windows.Forms.DataGridView.DataError> event."
  syntax:
    content: public bool EndEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the edit operation is committed and ended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.EndEdit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The cell value could not be committed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  id: EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: EndEdit(DataGridViewDataErrorContexts)
  nameWithType: DataGridView.EndEdit(DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridView.EndEdit(DataGridViewDataErrorContexts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Commits and ends the edit operation on the current cell using the specified error context."
  remarks: "This method raises the <xref:System.Windows.Forms.DataGridView.CellEndEdit> event.       This method may result in an exception if errors are not handled with the <xref:System.Windows.Forms.DataGridView.DataError> event."
  syntax:
    content: public bool EndEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);
    parameters:
    - id: context
      type: System.Windows.Forms.DataGridViewDataErrorContexts
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewDataErrorContexts&quot;></xref> values that specifies the context in which an error can occur."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the edit operation is committed and ended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.EndEdit*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The cell value could not be committed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.FirstDisplayedCell
  id: FirstDisplayedCell
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: FirstDisplayedCell
  nameWithType: DataGridView.FirstDisplayedCell
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedCell
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the first cell currently displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>; typically, this cell is in the upper left corner."
  remarks: "You can use this property to determine which cell is in the first row and column currently displayed in the control. Typically, this is in the upper left corner, but for right-to-left languages, it is in the upper right corner. You can also set this property to scroll the control to the indicated cell."
  example:
  - "The following code example illustrates how to ensure that the current cell is visible after sorting. This code works only with an unbound <xref:System.Windows.Forms.DataGridView> control. With a <xref:System.Windows.Forms.DataGridView> control bound to an external data source, the current cell is not automatically persisted when sorting.  \n  \n To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`. In C#, you must also connect the <xref:System.Windows.Forms.DataGridView.Sorted>event to the event handler.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#150](~/add/codesnippet/csharp/p-system.windows.forms.d_306_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/add/codesnippet/visualbasic/p-system.windows.forms.d_306_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCell FirstDisplayedCell { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "The first <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> currently displayed in the control."
  overload: System.Windows.Forms.DataGridView.FirstDisplayedCell*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified cell when setting this property is not in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified cell when setting this property has a <xref:System.Windows.Forms.DataGridViewCell.RowIndex*> or <xref:System.Windows.Forms.DataGridViewCell.ColumnIndex*> property value of -1, indicating that it is a header cell or a shared cell.       -or-       The specified cell when setting this property has a <xref:System.Windows.Forms.DataGridViewCell.Visible*> property value of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth
  id: FirstDisplayedScrollingColumnHiddenWidth
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: FirstDisplayedScrollingColumnHiddenWidth
  nameWithType: DataGridView.FirstDisplayedScrollingColumnHiddenWidth
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the width of the portion of the column that is currently scrolled out of view.."
  syntax:
    content: public int FirstDisplayedScrollingColumnHiddenWidth { get; }
    return:
      type: System.Int32
      description: "The width of the portion of the column that is scrolled out of view."
  overload: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex
  id: FirstDisplayedScrollingColumnIndex
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: FirstDisplayedScrollingColumnIndex
  nameWithType: DataGridView.FirstDisplayedScrollingColumnIndex
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the index of the column that is the first column displayed on the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  syntax:
    content: public int FirstDisplayedScrollingColumnIndex { get; set; }
    return:
      type: System.Int32
      description: "The index of the column that is the first column displayed on the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than 0 or greater than the number of columns in the control minus 1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property indicates a column with a <xref:System.Windows.Forms.DataGridViewColumn.Visible*> property value of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       The specified value when setting this property indicates a column with a <xref:System.Windows.Forms.DataGridViewColumn.Frozen*> property value of <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex
  id: FirstDisplayedScrollingRowIndex
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: FirstDisplayedScrollingRowIndex
  nameWithType: DataGridView.FirstDisplayedScrollingRowIndex
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the index of the row that is the first row displayed on the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Setting this property raises the <xref:System.Windows.Forms.DataGridView.Scroll> event."
  syntax:
    content: public int FirstDisplayedScrollingRowIndex { get; set; }
    return:
      type: System.Int32
      description: "The index of the row that is the first row displayed on the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than 0 or greater than the number of rows in the control minus 1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property indicates a row with a <xref:System.Windows.Forms.DataGridViewRow.Visible*> property value of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       The specified value when setting this property indicates a column with a <xref:System.Windows.Forms.DataGridViewRow.Frozen*> property value of <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Font
  id: Font
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Font
  nameWithType: DataGridView.Font
  fullName: System.Windows.Forms.DataGridView.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the font of the text displayed by the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.       Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font> object. However, you can base the new font on the existing font.       The <xref:System.Windows.Forms.DataGridView> control uses the value of the Font property as the default value of the <xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A> properties of <xref:System.Windows.Forms.DataGridViewCellStyle> objects returned by the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, and <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> properties. Changing the Font value automatically updates the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, and <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> properties, changing the font for any cell that inherits the value. Header cells override the value by default, and you can override the value for specific rows, columns, and cells. For more information about cell style inheritance, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates the use of this property. This example is part of a larger example available in [How to: Create an Unbound Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/add/codesnippet/csharp/p-system.windows.forms.d_405_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/add/codesnippet/visualbasic/p-system.windows.forms.d_405_1.vb)]"
  syntax:
    content: public override System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the text displayed by the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultFont*> property."
  overload: System.Windows.Forms.DataGridView.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.FontChanged
  id: FontChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: FontChanged
  nameWithType: DataGridView.FontChanged
  fullName: System.Windows.Forms.DataGridView.FontChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.Font*> property value changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FontChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the FontChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#271](~/add/codesnippet/csharp/e-system.windows.forms.d_54_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#271](~/add/codesnippet/visualbasic/e-system.windows.forms.d_54_1.vb)]"
  syntax:
    content: public event EventHandler FontChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ForeColor
  nameWithType: DataGridView.ForeColor
  fullName: System.Windows.Forms.DataGridView.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the foreground color of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default. For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.       Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font> object. However, you can base the new font on the existing font.       The <xref:System.Windows.Forms.DataGridView> control uses the value of the ForeColor property as the default value of the <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> property of <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property. Changing the ForeColor value automatically updates the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property, changing the foreground text color for any cell that inherits the value. Header cells override the value by default, and you can override the value for specific rows, columns, and cells. For more information about cell style inheritance, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the foreground color of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>. The default is the value of the <xref:System.Windows.Forms.Control.DefaultForeColor*> property."
  overload: System.Windows.Forms.DataGridView.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ForeColorChanged
  id: ForeColorChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ForeColorChanged
  nameWithType: DataGridView.ForeColorChanged
  fullName: System.Windows.Forms.DataGridView.ForeColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.ForeColor*> property value changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ForeColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ForeColorChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#270](~/add/codesnippet/csharp/e-system.windows.forms.d_113_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#270](~/add/codesnippet/visualbasic/e-system.windows.forms.d_113_1.vb)]"
  syntax:
    content: public event EventHandler ForeColorChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)
  id: GetAccessibilityObjectById(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GetAccessibilityObjectById(Int32)
  nameWithType: DataGridView.GetAccessibilityObjectById(Int32)
  fullName: System.Windows.Forms.DataGridView.GetAccessibilityObjectById(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves the specified <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>."
  syntax:
    content: protected override System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);
    parameters:
    - id: objectId
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;></xref> that identifies the <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref> to retrieve."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "The specified <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.GetAccessibilityObjectById*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)
  id: GetCellCount(System.Windows.Forms.DataGridViewElementStates)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GetCellCount(DataGridViewElementStates)
  nameWithType: DataGridView.GetCellCount(DataGridViewElementStates)
  fullName: System.Windows.Forms.DataGridView.GetCellCount(DataGridViewElementStates)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the number of cells that satisfy the provided filter."
  remarks: "This method is useful to determine the number of cells in a particular state. To retrieve the number of selected cells, for example, use this method with the <xref:System.Windows.Forms.DataGridViewElementStates?displayProperty=fullName> value. This is typically more efficient than using the <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> property."
  example:
  - "The following code example illustrates how to use this method to determine whether there are any cells selected in a <xref:System.Windows.Forms.DataGridView> control. In this example, if any cells are selected, their values are retrieved through the <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> method and displayed in a <xref:System.Windows.Forms.TextBox> control.  \n  \n This code is part of a larger example illustrating the use of the Clipboard features of the <xref:System.Windows.Forms.DataGridView> control. This example is part of a larger example available in [How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewClipboardDemo#16](~/add/codesnippet/csharp/772005c6-ad39-4372-b859-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#16](~/add/codesnippet/visualbasic/772005c6-ad39-4372-b859-_1.vb)]"
  syntax:
    content: public int GetCellCount (System.Windows.Forms.DataGridViewElementStates includeFilter);
    parameters:
    - id: includeFilter
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values specifying the cells to count."
    return:
      type: System.Int32
      description: "The number of cells that match the <code>includeFilter</code> parameter."
  overload: System.Windows.Forms.DataGridView.GetCellCount*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>includeFilter</code> includes the value <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)
  id: GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GetCellDisplayRectangle(Int32,Int32,Boolean)
  nameWithType: DataGridView.GetCellDisplayRectangle(Int32,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.GetCellDisplayRectangle(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the rectangle that represents the display area for a cell."
  remarks: "This method returns the entire cell bounds or the displayed portion only. To get the bounds of the cell contents only, use the cell <xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A> property."
  syntax:
    content: public System.Drawing.Rectangle GetCellDisplayRectangle (int columnIndex, int rowIndex, bool cutOverflow);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The column index for the desired cell."
    - id: rowIndex
      type: System.Int32
      description: "The row index for the desired cell."
    - id: cutOverflow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to return the displayed portion of the cell only; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to return the entire cell bounds."
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the display rectangle of the cell."
  overload: System.Windows.Forms.DataGridView.GetCellDisplayRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than -1 or greater than the number of columns in the control minus 1.       -or-       <code>rowIndex</code> is less than -1 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GetClipboardContent
  id: GetClipboardContent
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GetClipboardContent()
  nameWithType: DataGridView.GetClipboardContent()
  fullName: System.Windows.Forms.DataGridView.GetClipboardContent()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves the formatted values that represent the contents of the selected cells for copying to the <xref href=&quot;System.Windows.Forms.Clipboard&quot;></xref>."
  remarks: "This method retrieves data that represents the region defined by the selected cells. This region is the smallest rectangle that includes all of the selected cells. The value for each selected cell in this region is retrieved by calling the <xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=fullName> method. Blank placeholder values are used for unselected cells in this region. This method combines these values into a <xref:System.Windows.Forms.DataObject> containing several formats for copying to the clipboard. The supported clipboard formats include <xref:System.Windows.Forms.DataFormats.Text?displayProperty=fullName>, <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=fullName>, <xref:System.Windows.Forms.DataFormats.Html?displayProperty=fullName>, and <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=fullName>.       For more information, see the <xref:System.Windows.Forms.Clipboard> class."
  example:
  - "The following code example demonstrates how to programmatically add selected <xref:System.Windows.Forms.DataGridView> content to the Clipboard. This example is part of a larger example available in [How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewClipboardDemo#10](~/add/codesnippet/csharp/m-system.windows.forms.d_26_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/add/codesnippet/visualbasic/m-system.windows.forms.d_26_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DataObject GetClipboardContent ();
    parameters: []
    return:
      type: System.Windows.Forms.DataObject
      description: "A <xref href=&quot;System.Windows.Forms.DataObject&quot;></xref> that represents the contents of the selected cells."
  overload: System.Windows.Forms.DataGridView.GetClipboardContent*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Windows.Forms.DataGridView.ClipboardCopyMode*> is set to <xref href=&quot;System.Windows.Forms.DataGridViewClipboardCopyMode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)
  id: GetColumnDisplayRectangle(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GetColumnDisplayRectangle(Int32,Boolean)
  nameWithType: DataGridView.GetColumnDisplayRectangle(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the rectangle that represents the display area for a column, as determined by the column index."
  syntax:
    content: public System.Drawing.Rectangle GetColumnDisplayRectangle (int columnIndex, bool cutOverflow);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The column index for the desired cell."
    - id: cutOverflow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to return the column rectangle visible in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> bounds; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to return the entire column rectangle."
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the display rectangle of the column."
  overload: System.Windows.Forms.DataGridView.GetColumnDisplayRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)
  id: GetRowDisplayRectangle(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GetRowDisplayRectangle(Int32,Boolean)
  nameWithType: DataGridView.GetRowDisplayRectangle(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.GetRowDisplayRectangle(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the rectangle that represents the display area for a row, as determined by the row index."
  syntax:
    content: public System.Drawing.Rectangle GetRowDisplayRectangle (int rowIndex, bool cutOverflow);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The row index for the desired cell."
    - id: cutOverflow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to return the row rectangle visible in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> bounds; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to return the entire row rectangle."
    return:
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the display rectangle of the row."
  overload: System.Windows.Forms.DataGridView.GetRowDisplayRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GridColor
  id: GridColor
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GridColor
  nameWithType: DataGridView.GridColor
  fullName: System.Windows.Forms.DataGridView.GridColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the color of the grid lines separating the cells of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "You can set the GridColor property to any color when you use a single border; with other types of borders, the colors are specified by the operating system. If visual styles are enabled for the application through the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> method, the GridColor property is ignored, and the current theme&quot;s colors are used."
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, GridColor, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, and <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> properties. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_365_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_365_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_365_1.cs)]"
  syntax:
    content: public System.Drawing.Color GridColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> or <xref href=&quot;System.Drawing.SystemColors&quot;></xref> that represents the color of the grid lines. The default is <xref href=&quot;System.Drawing.KnownColor&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.GridColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified value when setting this property is <xref href=&quot;System.Drawing.Color.Empty&quot;></xref>.       -or-       The specified value when setting this property has a &lt;xref:System.Drawing.Color.A%2A?displayProperty=fullName&gt; property value that is less that 255."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.GridColorChanged
  id: GridColorChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: GridColorChanged
  nameWithType: DataGridView.GridColorChanged
  fullName: System.Windows.Forms.DataGridView.GridColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.GridColor*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the GridColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName>or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the GridColorChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#272](~/add/codesnippet/csharp/e-system.windows.forms.d_37_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#272](~/add/codesnippet/visualbasic/e-system.windows.forms.d_37_1.vb)]"
  syntax:
    content: public event EventHandler GridColorChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)
  id: HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: HitTest(Int32,Int32)
  nameWithType: DataGridView.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.HitTest(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns location information, such as row and column indices, given x- and y-coordinates."
  remarks: "You can use this method to determine which part of the <xref:System.Windows.Forms.DataGridView> control is located at the specified coordinates. For example, you can call this method—specifying the coordinates of a mouse click—to determine the row and column indexes of the clicked cell or whether a header cell or scroll bar was clicked."
  example:
  - "The following code example illustrates the use of this method. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.Columns%2A> property reference topic.  \n  \n [!code-cs[System.Windows.Forms.GridViewAutoSize#4](~/add/codesnippet/csharp/m-system.windows.forms.d_43_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewAutoSize#4](~/add/codesnippet/visualbasic/m-system.windows.forms.d_43_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridView.HitTestInfo HitTest (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "The x-coordinate."
    - id: y
      type: System.Int32
      description: "The y-coordinate."
    return:
      type: System.Windows.Forms.DataGridView.HitTestInfo
      description: "A <xref:System.Windows.Forms.DataGridView.HitTestInfo> that contains the location information."
  overload: System.Windows.Forms.DataGridView.HitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.HorizontalScrollBar
  id: HorizontalScrollBar
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: HorizontalScrollBar
  nameWithType: DataGridView.HorizontalScrollBar
  fullName: System.Windows.Forms.DataGridView.HorizontalScrollBar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the horizontal scroll bar of the control."
  syntax:
    content: protected System.Windows.Forms.ScrollBar HorizontalScrollBar { get; }
    return:
      type: System.Windows.Forms.ScrollBar
      description: "A <xref href=&quot;System.Windows.Forms.ScrollBar&quot;></xref> representing the horizontal scroll bar."
  overload: System.Windows.Forms.DataGridView.HorizontalScrollBar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.HorizontalScrollingOffset
  id: HorizontalScrollingOffset
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: HorizontalScrollingOffset
  nameWithType: DataGridView.HorizontalScrollingOffset
  fullName: System.Windows.Forms.DataGridView.HorizontalScrollingOffset
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the number of pixels by which the control is scrolled horizontally."
  remarks: ''
  example:
  - "The following code example illustrates the use of this property. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_126_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/csharp/p-system.windows.forms.d_126_1.cs)]"
  syntax:
    content: public int HorizontalScrollingOffset { get; set; }
    return:
      type: System.Int32
      description: "The number of pixels by which the control is scrolled horizontally."
  overload: System.Windows.Forms.DataGridView.HorizontalScrollingOffset*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than 0."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)
  id: InvalidateCell(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: InvalidateCell(DataGridViewCell)
  nameWithType: DataGridView.InvalidateCell(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridView.InvalidateCell(DataGridViewCell)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalidates the specified cell of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>, forcing it to be repainted."
  remarks: "This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted. For example, you can use this method with a custom cell type that changes its appearance as a result of external events.       For more information about painting and invalidation, see <xref:System.Windows.Forms.Control.Invalidate%2A>."
  example:
  - "The following code example illustrates how to use this method in a customized <xref:System.Windows.Forms.DataGridViewCell> that is painted with a custom border when the mouse pointer rests on it. In the example, the cell is invalidated when the mouse pointer enters or leaves it.  \n  \n This code is part of a larger example available in [How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/csharp/e127ddbe-3cbf-48d5-96b5-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/visualbasic/e127ddbe-3cbf-48d5-96b5-_1.vb)]"
  syntax:
    content: public void InvalidateCell (System.Windows.Forms.DataGridViewCell dataGridViewCell);
    parameters:
    - id: dataGridViewCell
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> to invalidate."
  overload: System.Windows.Forms.DataGridView.InvalidateCell*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataGridViewCell</code> does not belong to the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataGridViewCell</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)
  id: InvalidateCell(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: InvalidateCell(Int32,Int32)
  nameWithType: DataGridView.InvalidateCell(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.InvalidateCell(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalidates the cell with the specified row and column indexes, forcing it to be repainted."
  remarks: "This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted. For example, you can use this method with a custom cell type that changes its appearance as a result of external events.       For more information about painting and invalidation, see <xref:System.Windows.Forms.Control.Invalidate%2A>."
  example:
  - "The following code example illustrates how to use this method in a custom cell type that changes a cell's appearance when the user rests the mouse pointer over it. This example is part of a larger example available in [How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/csharp/m-system.windows.forms.d_33_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/visualbasic/m-system.windows.forms.d_33_1.vb)]"
  syntax:
    content: public void InvalidateCell (int columnIndex, int rowIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The column index of the cell to invalidate."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell to invalidate."
  overload: System.Windows.Forms.DataGridView.InvalidateCell*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than -1 or greater than the number of columns in the control minus 1.       -or-       <code>rowIndex</code> is less than -1 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)
  id: InvalidateColumn(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: InvalidateColumn(Int32)
  nameWithType: DataGridView.InvalidateColumn(Int32)
  fullName: System.Windows.Forms.DataGridView.InvalidateColumn(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalidates the specified column of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>, forcing it to be repainted."
  remarks: "For more information about painting and invalidation, see <xref:System.Windows.Forms.Control.Invalidate%2A>."
  syntax:
    content: public void InvalidateColumn (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column to invalidate."
  overload: System.Windows.Forms.DataGridView.InvalidateColumn*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)
  id: InvalidateRow(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: InvalidateRow(Int32)
  nameWithType: DataGridView.InvalidateRow(Int32)
  fullName: System.Windows.Forms.DataGridView.InvalidateRow(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalidates the specified row of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>, forcing it to be repainted."
  remarks: "Use this method to force a row to repaint itself. This method is useful in owner-drawing scenarios where you handle the <xref:System.Windows.Forms.DataGridView.RowPrePaint> or <xref:System.Windows.Forms.DataGridView.RowPostPaint> events.       For more information about painting and invalidation, see <xref:System.Windows.Forms.Control.Invalidate%2A>."
  example:
  - "The following code example illustrates how to use the InvalidateRow method in a row-painting scenario. In the example, the row is invalidated when the current cell changes, forcing the row to repaint itself.  \n  \n This code is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/add/codesnippet/visualbasic/m-system.windows.forms.d_77_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#19](~/add/codesnippet/csharp/m-system.windows.forms.d_77_1.cs)]"
  syntax:
    content: public void InvalidateRow (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row to invalidate."
  overload: System.Windows.Forms.DataGridView.InvalidateRow*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.IsCurrentCellDirty
  id: IsCurrentCellDirty
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: IsCurrentCellDirty
  nameWithType: DataGridView.IsCurrentCellDirty
  fullName: System.Windows.Forms.DataGridView.IsCurrentCellDirty
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the current cell has uncommitted changes."
  remarks: "When the <xref:System.Windows.Forms.DataGridView> is not bound to data, the cell edit is considered committed when the user moves to another cell.       If row headers are visible, a pencil glyph is present in the header for the row that contains a cell with uncommitted changes.       If IsCurrentCellDirty is `true` and the current cell hosts an editing control, you can retrieve it through the <xref:System.Windows.Forms.DataGridView.EditingControl%2A> property."
  example:
  - "The following code example uses the IsCurrentCellDirty property to determine whether to commit a cell value and raise the <xref:System.Windows.Forms.DataGridView.CellValueChanged> event from a handler for the <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> event. This code example is part of a larger example provided in [How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_341_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.DisabledButtons#5](~/add/codesnippet/csharp/p-system.windows.forms.d_341_1.cs)]"
  syntax:
    content: public bool IsCurrentCellDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current cell has uncommitted changes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.IsCurrentCellDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.IsCurrentCellInEditMode
  id: IsCurrentCellInEditMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: IsCurrentCellInEditMode
  nameWithType: DataGridView.IsCurrentCellInEditMode
  fullName: System.Windows.Forms.DataGridView.IsCurrentCellInEditMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the currently active cell is being edited."
  remarks: "A <xref:System.Windows.Forms.DataGridViewCheckBoxCell> that has focus is always in edit mode. If the current cell hosts an editing control and IsCurrentCellInEditMode is `true`, you can retrieve the editing control through the <xref:System.Windows.Forms.DataGridView.EditingControl%2A> property."
  example:
  - "The following code example illustrates the use of this property. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/csharp/p-system.windows.forms.d_262_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/cpp/p-system.windows.forms.d_262_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_262_1.vb)]"
  syntax:
    content: public bool IsCurrentCellInEditMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current cell is being edited; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.IsCurrentCellInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.IsCurrentRowDirty
  id: IsCurrentRowDirty
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: IsCurrentRowDirty
  nameWithType: DataGridView.IsCurrentRowDirty
  fullName: System.Windows.Forms.DataGridView.IsCurrentRowDirty
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the current row has uncommitted changes."
  remarks: "This property returns `true` when the pencil glyph is displayed in the row. By default, the IsCurrentRowDirty property will always equal the value of the <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> property, unless the <xref:System.Windows.Forms.DataGridView> is bound to a data source that supports editing, or virtual mode has been implemented to use row-level commit scope. In these cases, the <xref:System.Windows.Forms.DataGridView> will evaluate this property at the row level.       When the user navigates away from the row, the control commits all row changes. The user can also press CTRL+ENTER to commit row changes without leaving the row. To commit row changes programmatically, call the form&quot;s <xref:System.Windows.Forms.ContainerControl.Validate%2A> method. If your data source is a <xref:System.Windows.Forms.BindingSource>, you can also call<xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=fullName>."
  syntax:
    content: public bool IsCurrentRowDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current row has uncommitted changes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.IsCurrentRowDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.IsInputChar(System.Char)
  id: IsInputChar(System.Char)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: IsInputChar(Char)
  nameWithType: DataGridView.IsInputChar(Char)
  fullName: System.Windows.Forms.DataGridView.IsInputChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether a character is an input character that the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> recognizes."
  remarks: "A character is recognized as an input character depending on whether the control is in edit mode and whether the current editing control can accept the character."
  syntax:
    content: protected override bool IsInputChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "The character to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the character is recognized as an input character; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.IsInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)
  id: IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: IsInputKey(Keys)
  nameWithType: DataGridView.IsInputKey(Keys)
  fullName: System.Windows.Forms.DataGridView.IsInputKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether the specified key is a regular input key or a special key that requires preprocessing."
  syntax:
    content: protected override bool IsInputKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "One of the <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified key is a regular input key; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.IsInputKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Item(Int32,Int32)
  nameWithType: DataGridView.Item(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.Item(Int32,Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes."
  remarks: "This indexer is an alternative to accessing cells through the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> collection of the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection."
  example:
  - "The following code example demonstrates the use of this indexer.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#230](~/add/codesnippet/csharp/p-system.windows.forms.d_393_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/add/codesnippet/visualbasic/p-system.windows.forms.d_393_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCell this[int columnIndex, int rowIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column containing the cell."
    - id: rowIndex
      type: System.Int32
      description: "The index of the row containing the cell."
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> at the specified location."
  overload: System.Windows.Forms.DataGridView.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1.       -or-       <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Item(System.String,System.Int32)
  id: Item(System.String,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Item(String,Int32)
  nameWithType: DataGridView.Item(String,Int32)
  fullName: System.Windows.Forms.DataGridView.Item(String,Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides an indexer to get or set the cell located at the intersection of the row with the specified index and the column with the specified name."
  remarks: "This indexer is an alternative to accessing cells through the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> collection of the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection."
  example:
  - "The following code example demonstrates the use of this indexer.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#230](~/add/codesnippet/csharp/p-system.windows.forms.d_74_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/add/codesnippet/visualbasic/p-system.windows.forms.d_74_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCell this[string columnName, int rowIndex] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "The name of the column containing the cell."
    - id: rowIndex
      type: System.Int32
      description: "The index of the row containing the cell."
    return:
      type: System.Windows.Forms.DataGridViewCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCell&quot;></xref> at the specified location."
  overload: System.Windows.Forms.DataGridView.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.MultiSelect
  id: MultiSelect
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: MultiSelect
  nameWithType: DataGridView.MultiSelect
  fullName: System.Windows.Forms.DataGridView.MultiSelect
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> at a time."
  remarks: "When the MultiSelect property is set to `true`, multiple elements (cells, rows, or columns) can be selected in the <xref:System.Windows.Forms.DataGridView> control. To select multiple elements, the user can hold down the CTRL key while clicking the elements to select. Consecutive elements can be selected by clicking the first element to select and then, while holding down the SHIFT key, clicking the last element to select. The selection scope is based on the <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property. For example, if <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> is set to <xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName>, the user can select multiple columns.       You can use the MultiSelect property to allow a user to select multiple elements in the <xref:System.Windows.Forms.DataGridView> control and perform an operation on all the selected elements. For example, the user could select multiple cells and then right-click a selected cell to display a shortcut menu that displays a set of tasks to perform on the selected cells.       To determine which cells, rows, or columns are selected in the <xref:System.Windows.Forms.DataGridView> control, you can access the <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>, <xref:System.Windows.Forms.DataGridView.SelectedRows%2A>, or <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> property. To determine the number of selected cells, call the <xref:System.Windows.Forms.DataGridView.GetCellCount%2A> method with an argument value of <xref:System.Windows.Forms.DataGridViewElementStates?displayProperty=fullName>. Use the <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A> method to retrieve the number of selected rows and the <xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A> method to retrieve the number of columns. These methods are more efficient than accessing the collections directly when working with large amounts of data. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the MultiSelect property. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_247_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_247_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_247_1.cs)]"
  syntax:
    content: public bool MultiSelect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user can select more than one cell, row, or column at a time; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.MultiSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.MultiSelectChanged
  id: MultiSelectChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: MultiSelectChanged
  nameWithType: DataGridView.MultiSelectChanged
  fullName: System.Windows.Forms.DataGridView.MultiSelectChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.MultiSelect*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MultiSelectChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the MultiSelectChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#273](~/add/codesnippet/csharp/e-system.windows.forms.d_13_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#273](~/add/codesnippet/visualbasic/e-system.windows.forms.d_13_1.vb)]"
  syntax:
    content: public event EventHandler MultiSelectChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.NewRowIndex
  id: NewRowIndex
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: NewRowIndex
  nameWithType: DataGridView.NewRowIndex
  fullName: System.Windows.Forms.DataGridView.NewRowIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the index of the row for new records."
  remarks: "Unless <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> is `false`, the value of this property is equal to the number of rows in the control minus 1."
  syntax:
    content: public int NewRowIndex { get; }
    return:
      type: System.Int32
      description: "The index of the row for new records, or -1 if <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.NewRowIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.NewRowNeeded
  id: NewRowNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: NewRowNeeded
  nameWithType: DataGridView.NewRowNeeded
  fullName: System.Windows.Forms.DataGridView.NewRowNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.VirtualMode*> property of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the user navigates to the new row at the bottom of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "When the <xref:System.Windows.Forms.DataGridView> is in virtual mode, this event allows a new entry to be created in the data store for the new row, and it also allows for the row to be populated with default values.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example uses the NewRowNeeded event to track when a new row is being added, so logic in the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> event handler can initialize a new row's cell to an initial value. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#20](~/add/codesnippet/csharp/e-system.windows.forms.d_27_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/add/codesnippet/cpp/e-system.windows.forms.d_27_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_27_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)
  id: NotifyCurrentCellDirty(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: NotifyCurrentCellDirty(Boolean)
  nameWithType: DataGridView.NotifyCurrentCellDirty(Boolean)
  fullName: System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Notifies the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that the current cell has uncommitted changes."
  remarks: "This method can be used to allow custom cell types to notify the <xref:System.Windows.Forms.DataGridView> when they have uncommitted changes."
  example:
  - "The following code example illustrates the use of this method in a custom cell scenario. In the example, an <xref:System.Windows.Forms.IDataGridViewEditingControl> implementation derived from the <xref:System.Windows.Forms.DateTimePicker> class overrides the <xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A> method and uses the NotifyCurrentCellDirty method to indicate a change to the <xref:System.Windows.Forms.DataGridView> control.  \n  \n This example is part of a larger example shown in [How to: Host Controls in Windows Forms DataGridView Cells](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewCalendarColumn#310](~/add/codesnippet/csharp/m-system.windows.forms.d_38_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#310](~/add/codesnippet/visualbasic/m-system.windows.forms.d_38_1.vb)]"
  syntax:
    content: public virtual void NotifyCurrentCellDirty (bool dirty);
    parameters:
    - id: dirty
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the cell has uncommitted changes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.NotifyCurrentCellDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)
  id: OnAllowUserToAddRowsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAllowUserToAddRowsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToAddRowsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAllowUserToAddRowsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAllowUserToAddRowsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)
  id: OnAllowUserToDeleteRowsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAllowUserToDeleteRowsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToDeleteRowsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAllowUserToDeleteRowsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAllowUserToDeleteRowsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)
  id: OnAllowUserToOrderColumnsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAllowUserToOrderColumnsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToOrderColumnsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAllowUserToOrderColumnsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAllowUserToOrderColumnsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)
  id: OnAllowUserToResizeColumnsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAllowUserToResizeColumnsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToResizeColumnsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAllowUserToResizeColumnsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAllowUserToResizeColumnsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)
  id: OnAllowUserToResizeRowsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAllowUserToResizeRowsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToResizeRowsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAllowUserToResizeRowsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAllowUserToResizeRowsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)
  id: OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAlternatingRowsDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnAlternatingRowsDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAlternatingRowsDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAlternatingRowsDefaultCellStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)
  id: OnAutoGenerateColumnsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAutoGenerateColumnsChanged(EventArgs)
  nameWithType: DataGridView.OnAutoGenerateColumnsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAutoGenerateColumnsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAutoGenerateColumnsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)
  id: OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)
  nameWithType: DataGridView.OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAutoSizeColumnModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAutoSizeColumnModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column*> property of <code>e</code> is null."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)
  id: OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)
  nameWithType: DataGridView.OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAutoSizeColumnsModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAutoSizeColumnsModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes*> property of <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The number of entries in the array returned by the <xref:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes*> property of <code>e</code> is not equal to the number of columns in the control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  id: OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)
  nameWithType: DataGridView.OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnAutoSizeRowsModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAutoSizeRowsModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewAutoSizeModeEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeModeEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)
  id: OnBackgroundColorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnBackgroundColorChanged(EventArgs)
  nameWithType: DataGridView.OnBackgroundColorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnBackgroundColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.BackgroundColorChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnBackgroundColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnBackgroundColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnBackgroundColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)
  id: OnBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnBindingContextChanged(EventArgs)
  nameWithType: DataGridView.OnBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnBindingContextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.BindingContextChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnBindingContextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnBindingContextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnBindingContextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)
  id: OnBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnBorderStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.BorderStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnBorderStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnBorderStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)
  id: OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCancelRowEdit(QuestionEventArgs)
  nameWithType: DataGridView.OnCancelRowEdit(QuestionEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCancelRowEdit(QuestionEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CancelRowEdit&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCancelRowEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCancelRowEdit (System.Windows.Forms.QuestionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.QuestionEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.QuestionEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCancelRowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  id: OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellBeginEdit(DataGridViewCellCancelEventArgs)
  nameWithType: DataGridView.OnCellBeginEdit(DataGridViewCellCancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellBeginEdit(DataGridViewCellCancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellBeginEdit&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see[NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellBeginEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellBeginEdit (System.Windows.Forms.DataGridViewCellCancelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellCancelEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellCancelEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellBeginEdit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)
  id: OnCellBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnCellBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellBorderStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellBorderStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellBorderStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see[NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellContentClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellContentClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContentClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellContentClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellContentClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains information regarding the cell whose content was clicked."
  overload: System.Windows.Forms.DataGridView.OnCellContentClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellContentDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellContentDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContentDoubleClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellContentDoubleClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellContentDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellContentDoubleClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellContextMenuStripChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellContextMenuStripChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellContextMenuStripChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellContextMenuStripChanged (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)
  id: OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)
  nameWithType: DataGridView.OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellContextMenuStripNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellContextMenuStripNeeded (System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellDoubleClick(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellDoubleClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellDoubleClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellEndEdit(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellEndEdit(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellEndEdit(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellEndEdit&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellEndEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellEndEdit (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellEndEdit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellEnter(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellEnter(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellEnter(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellEnter&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellEnter (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellEnter*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellErrorTextChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellErrorTextChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellErrorTextChanged(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellErrorTextChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellErrorTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellErrorTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellErrorTextChanged*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is less than -1 or greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is less than -1 or greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)
  id: OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)
  nameWithType: DataGridView.OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellErrorTextNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellErrorTextNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellErrorTextNeeded (System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellErrorTextNeeded*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)
  id: OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellFormatting(DataGridViewCellFormattingEventArgs)
  nameWithType: DataGridView.OnCellFormatting(DataGridViewCellFormattingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellFormatting(DataGridViewCellFormattingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellFormatting&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellFormatting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellFormatting (System.Windows.Forms.DataGridViewCellFormattingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellFormattingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellFormattingEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellFormatting*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellLeave(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellLeave(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellLeave(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellLeave&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see[NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellLeave (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellLeave*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseDoubleClick&quot;></xref> event."
  remarks: "Typically, double-clicking a cell puts the cell in edit mode.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseDoubleClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseDown(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseDown(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseDown(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseDown&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseDown*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseEnter(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellMouseEnter(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseEnter(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseEnter&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see[NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseEnter (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseEnter*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseLeave(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellMouseLeave(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseLeave(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseLeave&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseLeave (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseLeave*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseMove(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseMove(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseMove(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseMove&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseMove*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellMouseUp(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseUp(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseUp(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellMouseUp&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellMouseUp*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)
  id: OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellPainting(DataGridViewCellPaintingEventArgs)
  nameWithType: DataGridView.OnCellPainting(DataGridViewCellPaintingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellPainting(DataGridViewCellPaintingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellPainting&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellPainting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellPainting (System.Windows.Forms.DataGridViewCellPaintingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellPaintingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellPaintingEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellPainting*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)
  id: OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellParsing(DataGridViewCellParsingEventArgs)
  nameWithType: DataGridView.OnCellParsing(DataGridViewCellParsingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellParsing(DataGridViewCellParsingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellParsing&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellParsing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellParsing (System.Windows.Forms.DataGridViewCellParsingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellParsingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellParsingEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellParsing*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)
  id: OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellStateChanged(DataGridViewCellStateChangedEventArgs)
  nameWithType: DataGridView.OnCellStateChanged(DataGridViewCellStateChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellStateChanged(DataGridViewCellStateChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellStateChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellStateChanged (System.Windows.Forms.DataGridViewCellStateChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellStateChangedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStateChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellStateChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellStyleChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellStyleChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellStyleChanged(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellStyleChanged (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellStyleChanged*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)
  id: OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)
  nameWithType: DataGridView.OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellStyleContentChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellStyleContentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellStyleContentChanged (System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellStyleContentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellToolTipTextChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellToolTipTextChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellToolTipTextChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellToolTipTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellToolTipTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "An <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains information about the cell."
  overload: System.Windows.Forms.DataGridView.OnCellToolTipTextChanged*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)
  id: OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)
  nameWithType: DataGridView.OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellToolTipTextNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellToolTipTextNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellToolTipTextNeeded (System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellValidated(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellValidated(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValidated(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellValidated&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellValidated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellValidated (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellValidated*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)
  id: OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellValidating(DataGridViewCellValidatingEventArgs)
  nameWithType: DataGridView.OnCellValidating(DataGridViewCellValidatingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValidating(DataGridViewCellValidatingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellValidating&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellValidating (System.Windows.Forms.DataGridViewCellValidatingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellValidatingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellValidatingEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellValidating*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellValueChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellValueChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValueChanged(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellValueChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellValueChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellValueChanged (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellValueChanged*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*> property of <code>e</code> is greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex*> property of <code>e</code> is greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)
  id: OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellValueNeeded(DataGridViewCellValueEventArgs)
  nameWithType: DataGridView.OnCellValueNeeded(DataGridViewCellValueEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValueNeeded(DataGridViewCellValueEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellValueNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellValueNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellValueNeeded (System.Windows.Forms.DataGridViewCellValueEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellValueEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellValueEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellValueNeeded*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex*> property of <code>e</code> is less than zero or greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex*> property of <code>e</code> is less than zero or greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)
  id: OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCellValuePushed(DataGridViewCellValueEventArgs)
  nameWithType: DataGridView.OnCellValuePushed(DataGridViewCellValueEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValuePushed(DataGridViewCellValueEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CellValuePushed&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCellValuePushed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCellValuePushed (System.Windows.Forms.DataGridViewCellValueEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellValueEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellValueEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCellValuePushed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex*> property of <code>e</code> is less than zero or greater than the number of columns in the control minus one.       -or-       The value of the <xref:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex*> property of <code>e</code> is less than zero or greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnAdded(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnAdded(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnAdded(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnAdded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnAdded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnAdded (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnAdded*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnContextMenuStripChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnDataPropertyNameChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnDataPropertyNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnDefaultCellStyleChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnDisplayIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnDisplayIndexChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)
  id: OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)
  nameWithType: DataGridView.OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnDividerDoubleClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnDividerDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnDividerDoubleClick (System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnDividerWidthChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnDividerWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnDividerWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeaderCellChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeaderCellChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeaderCellChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeaderMouseClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeaderMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <xref:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*> property of <code>e</code> is less than zero or greater than the number of columns in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeaderMouseDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains information about the cell and the position of the mouse pointer."
  overload: System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)
  id: OnColumnHeadersBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeadersBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnColumnHeadersBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeadersBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeadersBorderStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)
  id: OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeadersDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnColumnHeadersDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeadersDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeadersDefaultCellStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)
  id: OnColumnHeadersHeightChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeadersHeightChanged(EventArgs)
  nameWithType: DataGridView.OnColumnHeadersHeightChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeadersHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeadersHeightChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  id: OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  nameWithType: DataGridView.OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnHeadersHeightSizeModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnHeadersHeightSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewAutoSizeModeEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeModeEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnMinimumWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnMinimumWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnNameChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnNameChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnNameChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnNameChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnNameChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnNameChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnRemoved(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnRemoved(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnRemoved(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnRemoved&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnRemoved method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnRemoved (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnSortModeChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnSortModeChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnSortModeChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnSortModeChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnSortModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnSortModeChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnSortModeChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)
  id: OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)
  nameWithType: DataGridView.OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnStateChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnStateChanged (System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnStateChangedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnStateChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnStateChanged*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The column changed from read-only to read/write, enabling the current cell to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnToolTipTextChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnToolTipTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnToolTipTextChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains information about the column."
  overload: System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  id: OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnColumnWidthChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnWidthChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnWidthChanged(DataGridViewColumnEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ColumnWidthChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnColumnWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnColumnWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewColumnEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewColumnEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnColumnWidthChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The column indicated by the <xref:System.Windows.Forms.DataGridViewColumnEventArgs.Column*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)
  id: OnCurrentCellChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCurrentCellChanged(EventArgs)
  nameWithType: DataGridView.OnCurrentCellChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCurrentCellChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CurrentCellChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCurrentCellChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCurrentCellChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCurrentCellChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)
  id: OnCurrentCellDirtyStateChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCurrentCellDirtyStateChanged(EventArgs)
  nameWithType: DataGridView.OnCurrentCellDirtyStateChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCurrentCellDirtyStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCurrentCellDirtyStateChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)
  id: OnCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnCursorChanged(EventArgs)
  nameWithType: DataGridView.OnCursorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCursorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.CursorChanged&quot;></xref> event and updates the <xref:System.Windows.Forms.DataGridView.UserSetCursor*> property if the cursor was changed in user code."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control changes the <xref:System.Windows.Forms.Control.Cursor%2A> property value depending on the location of the mouse pointer. The <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A> property stores the normal value of the <xref:System.Windows.Forms.Control.Cursor%2A> property and ignores the control&quot;s changes. This method is called when the <xref:System.Windows.Forms.Control.CursorChanged> event occurs, and it updates the <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A> property, if necessary, in addition to invoking any event handlers.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCursorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnCursorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnCursorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)
  id: OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)
  nameWithType: DataGridView.OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.DataBindingComplete&quot;></xref> event."
  remarks: "Binding operations occur when the data changes while a <xref:System.Windows.Forms.CurrencyManager> is in use. For example, if a <xref:System.Windows.Forms.CurrencyManager.ListChanged> event occurs, the <xref:System.Windows.Forms.DataGridView> will update its view and raise the <xref:System.Windows.Forms.DataGridView.DataBindingComplete> event when it is finished."
  syntax:
    content: protected virtual void OnDataBindingComplete (System.Windows.Forms.DataGridViewBindingCompleteEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewBindingCompleteEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewBindingCompleteEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDataBindingComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)
  id: OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDataError(Boolean,DataGridViewDataErrorEventArgs)
  nameWithType: DataGridView.OnDataError(Boolean,DataGridViewDataErrorEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataError(Boolean,DataGridViewDataErrorEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDataError method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDataError (bool displayErrorDialogIfNoHandler, System.Windows.Forms.DataGridViewDataErrorEventArgs e);
    parameters:
    - id: displayErrorDialogIfNoHandler
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display an error dialog box if there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event."
    - id: e
      type: System.Windows.Forms.DataGridViewDataErrorEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewDataErrorEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)
  id: OnDataMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDataMemberChanged(EventArgs)
  nameWithType: DataGridView.OnDataMemberChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataMemberChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.DataMemberChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDataMemberChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDataMemberChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDataMemberChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)
  id: OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDataSourceChanged(EventArgs)
  nameWithType: DataGridView.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataSourceChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.DataSourceChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDataSourceChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDataSourceChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDataSourceChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)
  id: OnDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.DefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDefaultCellStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDefaultValuesNeeded(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnDefaultValuesNeeded(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.DefaultValuesNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDefaultValuesNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDefaultValuesNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDefaultValuesNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)
  id: OnDoubleClick(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnDoubleClick(EventArgs)
  nameWithType: DataGridView.OnDoubleClick(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDoubleClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.DoubleClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnDoubleClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)
  id: OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)
  nameWithType: DataGridView.OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.EditingControlShowing&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnEditingControlShowing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnEditingControlShowing (System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewEditingControlShowingEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewEditingControlShowingEventArgs&quot;></xref> that contains information about the editing control."
  overload: System.Windows.Forms.DataGridView.OnEditingControlShowing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)
  id: OnEditModeChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnEditModeChanged(EventArgs)
  nameWithType: DataGridView.OnEditModeChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEditModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.EditModeChanged&quot;></xref> event."
  remarks: "The <xref:System.Windows.Forms.DataGridView.EditModeChanged> event is raised whenever the <xref:System.Windows.Forms.DataGridView.EditMode%2A> property changes.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnEditModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnEditModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnEditModeChanged*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "When entering edit mode, the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)
  id: OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnEnabledChanged(EventArgs)
  nameWithType: DataGridView.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;></xref> event."
  syntax:
    content: protected override void OnEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)
  id: OnEnter(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnEnter(EventArgs)
  nameWithType: DataGridView.OnEnter(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Enter&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnEnter*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The control is configured to enter edit mode when it receives focus, but upon entering focus, the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: DataGridView.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.FontChanged&quot;></xref> event."
  remarks: "In addition to raising the <xref:System.Windows.Forms.DataGridView.FontChanged> event, this method uses the new value of the <xref:System.Windows.Forms.DataGridView.Font%2A> property to update the <xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A> properties of <xref:System.Windows.Forms.DataGridViewCellStyle> objects returned by the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, and <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A>properties.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnFontChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)
  id: OnForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnForeColorChanged(EventArgs)
  nameWithType: DataGridView.OnForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnForeColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ForeColorChanged&quot;></xref> event."
  remarks: "In addition to raising the <xref:System.Windows.Forms.DataGridView.FontChanged> event, this method uses the new value of the <xref:System.Windows.Forms.DataGridView.ForeColor%2A> property to update the <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> property of <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnForeColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnForeColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnForeColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)
  id: OnGotFocus(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnGotFocus(EventArgs)
  nameWithType: DataGridView.OnGotFocus(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnGotFocus(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.GotFocus&quot;></xref> event."
  syntax:
    content: protected override void OnGotFocus (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)
  id: OnGridColorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnGridColorChanged(EventArgs)
  nameWithType: DataGridView.OnGridColorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnGridColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.GridColorChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnGridColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnGridColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnGridColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: DataGridView.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnHandleCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: DataGridView.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;></xref> event."
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: DataGridView.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnKeyDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnKeyDown*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would cause the control to enter edit mode but initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  id: OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnKeyPress(KeyPressEventArgs)
  nameWithType: DataGridView.OnKeyPress(KeyPressEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnKeyPress(KeyPressEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnKeyPress method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyPressEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnKeyPress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  id: OnKeyUp(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: DataGridView.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnKeyUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)
  id: OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnLayout(LayoutEventArgs)
  nameWithType: DataGridView.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnLayout(LayoutEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Layout&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnLayout method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.LayoutEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.LayoutEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)
  id: OnLeave(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnLeave(EventArgs)
  nameWithType: DataGridView.OnLeave(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Leave&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)
  id: OnLostFocus(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnLostFocus(EventArgs)
  nameWithType: DataGridView.OnLostFocus(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnLostFocus(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.LostFocus&quot;></xref> event."
  syntax:
    content: protected override void OnLostFocus (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  id: OnMouseClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseClick(MouseEventArgs)
  nameWithType: DataGridView.OnMouseClick(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseClick(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates the use of this method.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#10](~/add/codesnippet/csharp/578c3792-9b2b-4d14-93b1-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/add/codesnippet/visualbasic/578c3792-9b2b-4d14-93b1-_1.vb)]"
  syntax:
    content: protected override void OnMouseClick (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseClick*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  id: OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseDoubleClick(MouseEventArgs)
  nameWithType: DataGridView.OnMouseDoubleClick(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseDoubleClick(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseDoubleClick&quot;></xref> event."
  syntax:
    content: protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "An <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  id: OnMouseDown(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseDown(MouseEventArgs)
  nameWithType: DataGridView.OnMouseDown(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseDown(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseDown&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseDown*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)
  id: OnMouseEnter(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseEnter(EventArgs)
  nameWithType: DataGridView.OnMouseEnter(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref:System.Windows.Forms.Control.OnMouseEnter*> event."
  syntax:
    content: protected override void OnMouseEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)
  id: OnMouseLeave(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseLeave(EventArgs)
  nameWithType: DataGridView.OnMouseLeave(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseLeave&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example illustrates the use of this method. This example is part of a larger example available in [How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/csharp/m-system.windows.forms.d_21_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/add/codesnippet/visualbasic/m-system.windows.forms.d_21_1.vb)]"
  syntax:
    content: protected override void OnMouseLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  id: OnMouseMove(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: DataGridView.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseMove&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseUp(MouseEventArgs)
  nameWithType: DataGridView.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseUp(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseUp&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  id: OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMouseWheel(MouseEventArgs)
  nameWithType: DataGridView.OnMouseWheel(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseWheel(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.MouseWheel&quot;></xref> event."
  syntax:
    content: protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)
  id: OnMultiSelectChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnMultiSelectChanged(EventArgs)
  nameWithType: DataGridView.OnMultiSelectChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMultiSelectChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.MultiSelectChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnMultiSelectChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnMultiSelectChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnMultiSelectChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnNewRowNeeded(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnNewRowNeeded(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnNewRowNeeded(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.NewRowNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnNewRowNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnNewRowNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnNewRowNeeded*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)
  id: OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnPaint(PaintEventArgs)
  nameWithType: DataGridView.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnPaint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Paint&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnPaint*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Any exceptions that occur during this method are ignored unless they are one of the following:      -   <xref:System.NullReferenceException>      -   <xref href=&quot;System.StackOverflowException&quot;></xref>      -   <xref:System.OutOfMemoryException>      -   <xref href=&quot;System.Threading.ThreadAbortException&quot;></xref>      -   <xref href=&quot;System.ExecutionEngineException&quot;></xref>      -   <xref:System.IndexOutOfRangeException>      -   <xref href=&quot;System.AccessViolationException&quot;></xref>"
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)
  id: OnReadOnlyChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnReadOnlyChanged(EventArgs)
  nameWithType: DataGridView.OnReadOnlyChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnReadOnlyChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.ReadOnlyChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnReadOnlyChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnReadOnlyChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnReadOnlyChanged*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The control changed from read-only to read/write, enabling the current cell to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: DataGridView.OnResize(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Resize&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnResize method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)
  id: OnRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRightToLeftChanged(EventArgs)
  nameWithType: DataGridView.OnRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRightToLeftChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.RightToLeftChanged&quot;></xref> event."
  syntax:
    content: protected override void OnRightToLeftChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRightToLeftChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowContextMenuStripChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowContextMenuStripChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowContextMenuStripChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowContextMenuStripChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)
  id: OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)
  nameWithType: DataGridView.OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnRowContextMenuStripNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowContextMenuStripNeeded (System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowDefaultCellStyleChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)
  id: OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowDirtyStateNeeded(QuestionEventArgs)
  nameWithType: DataGridView.OnRowDirtyStateNeeded(QuestionEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(QuestionEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowDirtyStateNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDirtyStateNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowDirtyStateNeeded (System.Windows.Forms.QuestionEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.QuestionEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.QuestionEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)
  id: OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)
  nameWithType: DataGridView.OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowDividerDoubleClick&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDividerDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowDividerDoubleClick (System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowDividerDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowDividerHeightChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowDividerHeightChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowDividerHeightChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowDividerHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowDividerHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowDividerHeightChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowEnter(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnRowEnter(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowEnter(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowEnter&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnRowEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowEnter (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowErrorTextChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowErrorTextChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowErrorTextChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowErrorTextChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowErrorTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowErrorTextChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowErrorTextChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)
  id: OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)
  nameWithType: DataGridView.OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowErrorTextNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnRowErrorTextNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowErrorTextNeeded (System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowErrorTextNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeaderCellChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowHeaderCellChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeaderCellChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeaderCellChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeaderCellChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeaderCellChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeaderMouseClick&quot;></xref> event."
  syntax:
    content: protected virtual void OnRowHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains information about the mouse and the header cell that was clicked."
  overload: System.Windows.Forms.DataGridView.OnRowHeaderMouseClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  id: OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick&quot;></xref> event."
  syntax:
    content: protected virtual void OnRowHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellMouseEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellMouseEventArgs&quot;></xref> that contains information about the mouse and the header cell that was double-clicked."
  overload: System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)
  id: OnRowHeadersBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeadersBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnRowHeadersBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeadersBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeadersBorderStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)
  id: OnRowHeadersDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeadersDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnRowHeadersDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeadersDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeadersDefaultCellStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)
  id: OnRowHeadersWidthChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeadersWidthChanged(EventArgs)
  nameWithType: DataGridView.OnRowHeadersWidthChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeadersWidthChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeadersWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeadersWidthChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  id: OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  nameWithType: DataGridView.OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeadersWidthSizeModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeadersWidthSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewAutoSizeModeEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeModeEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeightChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowHeightChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeightChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeightChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeightChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)
  id: OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)
  nameWithType: DataGridView.OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeightInfoNeeded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeightInfoNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeightInfoNeeded (System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)
  id: OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)
  nameWithType: DataGridView.OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowHeightInfoPushed&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowHeightInfoPushed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowHeightInfoPushed (System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowHeightInfoPushed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowLeave(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnRowLeave(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowLeave(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowLeave&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowLeave (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowMinimumHeightChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowMinimumHeightChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowMinimumHeightChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowMinimumHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowMinimumHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)
  id: OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowPostPaint(DataGridViewRowPostPaintEventArgs)
  nameWithType: DataGridView.OnRowPostPaint(DataGridViewRowPostPaintEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowPostPaint(DataGridViewRowPostPaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowPostPaint&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowPostPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowPostPaint (System.Windows.Forms.DataGridViewRowPostPaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowPostPaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowPostPaintEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowPostPaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)
  id: OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowPrePaint(DataGridViewRowPrePaintEventArgs)
  nameWithType: DataGridView.OnRowPrePaint(DataGridViewRowPrePaintEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowPrePaint(DataGridViewRowPrePaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowPrePaint&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowPrePaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowPrePaint (System.Windows.Forms.DataGridViewRowPrePaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowPrePaintEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowPrePaintEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowPrePaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)
  id: OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowsAdded(DataGridViewRowsAddedEventArgs)
  nameWithType: DataGridView.OnRowsAdded(DataGridViewRowsAddedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowsAdded(DataGridViewRowsAddedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowsAdded&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowsAdded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowsAdded (System.Windows.Forms.DataGridViewRowsAddedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowsAddedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowsAddedEventArgs&quot;></xref> that contains information about the added rows."
  overload: System.Windows.Forms.DataGridView.OnRowsAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)
  id: OnRowsDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowsDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnRowsDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowsDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowsDefaultCellStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)
  id: OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowsRemoved(DataGridViewRowsRemovedEventArgs)
  nameWithType: DataGridView.OnRowsRemoved(DataGridViewRowsRemovedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowsRemoved(DataGridViewRowsRemovedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowsRemoved&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowsRemoved method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowsRemoved (System.Windows.Forms.DataGridViewRowsRemovedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowsRemovedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowsRemovedEventArgs&quot;></xref> that contains information about the deleted rows."
  overload: System.Windows.Forms.DataGridView.OnRowsRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)
  id: OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)
  nameWithType: DataGridView.OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowStateChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowStateChanged (int rowIndex, System.Windows.Forms.DataGridViewRowStateChangedEventArgs e);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row that is changing state."
    - id: e
      type: System.Windows.Forms.DataGridViewRowStateChangedEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowStateChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowStateChanged*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The row changed from read-only to read/write, enabling the current cell to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowUnshared(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowUnshared(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowUnshared(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowUnshared&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowUnshared method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowUnshared (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowUnshared*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  id: OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowValidated(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnRowValidated(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowValidated(DataGridViewCellEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowValidated&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowValidated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowValidated (System.Windows.Forms.DataGridViewCellEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowValidated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  id: OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnRowValidating(DataGridViewCellCancelEventArgs)
  nameWithType: DataGridView.OnRowValidating(DataGridViewCellCancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowValidating(DataGridViewCellCancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.RowValidating&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnRowValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnRowValidating (System.Windows.Forms.DataGridViewCellCancelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewCellCancelEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellCancelEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnRowValidating*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)
  id: OnScroll(System.Windows.Forms.ScrollEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnScroll(ScrollEventArgs)
  nameWithType: DataGridView.OnScroll(ScrollEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnScroll(ScrollEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.Scroll&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnScroll method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnScroll (System.Windows.Forms.ScrollEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ScrollEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.ScrollEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnScroll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)
  id: OnSelectionChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnSelectionChanged(EventArgs)
  nameWithType: DataGridView.OnSelectionChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnSelectionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.SelectionChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSelectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnSelectionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains information about the event."
  overload: System.Windows.Forms.DataGridView.OnSelectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)
  id: OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnSortCompare(DataGridViewSortCompareEventArgs)
  nameWithType: DataGridView.OnSortCompare(DataGridViewSortCompareEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnSortCompare(DataGridViewSortCompareEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.SortCompare&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSortCompare method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnSortCompare (System.Windows.Forms.DataGridViewSortCompareEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewSortCompareEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewSortCompareEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnSortCompare*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)
  id: OnSorted(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnSorted(EventArgs)
  nameWithType: DataGridView.OnSorted(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnSorted(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.Sorted&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnSorted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnSorted (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnUserAddedRow(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnUserAddedRow(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnUserAddedRow(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.UserAddedRow&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnUserAddedRow method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnUserAddedRow (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnUserAddedRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row indicated by the <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row*> property of <code>e</code> does not belong to this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  id: OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnUserDeletedRow(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnUserDeletedRow(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnUserDeletedRow(DataGridViewRowEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.UserDeletedRow&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnUserDeletedRow method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnUserDeletedRow (System.Windows.Forms.DataGridViewRowEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnUserDeletedRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)
  id: OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnUserDeletingRow(DataGridViewRowCancelEventArgs)
  nameWithType: DataGridView.OnUserDeletingRow(DataGridViewRowCancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnUserDeletingRow(DataGridViewRowCancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.DataGridView.UserDeletingRow&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnUserDeletingRow method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnUserDeletingRow (System.Windows.Forms.DataGridViewRowCancelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DataGridViewRowCancelEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowCancelEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnUserDeletingRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)
  id: OnValidating(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnValidating(CancelEventArgs)
  nameWithType: DataGridView.OnValidating(CancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnValidating(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Validating&quot;></xref> event."
  remarks: "In addition to raising the <xref:System.Windows.Forms.Control.Validating> event, this method ends the current cell edit and validates the cell and row values.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected override void OnValidating (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs> that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnValidating*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Validation failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)
  id: OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: OnVisibleChanged(EventArgs)
  nameWithType: DataGridView.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;></xref> event."
  syntax:
    content: protected override void OnVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> object that contains the event data."
  overload: System.Windows.Forms.DataGridView.OnVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Padding
  id: Padding
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Padding
  nameWithType: DataGridView.Padding
  fullName: System.Windows.Forms.DataGridView.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "This property is not relevant for this control."
  remarks: "This property is not relevant for this control."
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> instance."
  overload: System.Windows.Forms.DataGridView.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: DataGridView.PaddingChanged
  fullName: System.Windows.Forms.DataGridView.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.Padding*> property changes."
  remarks: "The <xref:System.Windows.Forms.DataGridView.Padding%2A> property is not relevant for this control, although you can change its value and respond to such changes by handling this event.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: PaintBackground(Graphics,Rectangle,Rectangle)
  nameWithType: DataGridView.PaintBackground(Graphics,Rectangle,Rectangle)
  fullName: System.Windows.Forms.DataGridView.PaintBackground(Graphics,Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the background of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The `clipBounds` parameter represents the area of the <xref:System.Windows.Forms.DataGridView> that needs to be repainted. For example, if a user covers the entire <xref:System.Windows.Forms.DataGridView> with another window and then uncovers it, then `clipBounds` represents the entire <xref:System.Windows.Forms.DataGridView>. If a user covers a small area of the <xref:System.Windows.Forms.DataGridView> and then uncovers it, then `clipBounds` represents the small area that was covered."
  syntax:
    content: protected virtual void PaintBackground (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle gridBounds);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the background."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be painted."
    - id: gridBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area in which cells are drawn."
  overload: System.Windows.Forms.DataGridView.PaintBackground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)
  id: ProcessAKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessAKey(Keys)
  nameWithType: DataGridView.ProcessAKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessAKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the A key."
  remarks: "This method returns `true` when the user presses CTRL+A and the <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> property is `true`. By default, this selects all cells in the control."
  syntax:
    content: protected bool ProcessAKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessAKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)
  id: ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessDataGridViewKey(KeyEventArgs)
  nameWithType: DataGridView.ProcessDataGridViewKey(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridView.ProcessDataGridViewKey(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes keys used for navigating in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "This method calls the key-processing method appropriate to the key pressed (for example, the <xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A> method when F2 is pressed) and returns the return value of that method."
  example:
  - "The following code example demonstrates how to change the behavior of the ENTER key in a <xref:System.Windows.Forms.DataGridView> subclass by overriding the ProcessDataGridViewKey and <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> methods. In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#70](~/add/codesnippet/csharp/7c073b5d-2aa6-4c58-9f96-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/add/codesnippet/visualbasic/7c073b5d-2aa6-4c58-9f96-_1.vb)]"
  syntax:
    content: protected virtual bool ProcessDataGridViewKey (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "Contains information about the key that was pressed."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessDataGridViewKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The key pressed would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       -or-       The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)
  id: ProcessDeleteKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessDeleteKey(Keys)
  nameWithType: DataGridView.ProcessDeleteKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessDeleteKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the DELETE key."
  remarks: "This method returns `true` when the user presses DELETE to delete rows in the control. The user can delete rows if the <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property is set to <xref:System.Windows.Forms.DataGridViewSelectionMode> or <xref:System.Windows.Forms.DataGridViewSelectionMode> and the <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> property is set to `true`. If the <xref:System.Windows.Forms.DataGridView> is bound to data, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName> property of the data source must also be set to `true`."
  syntax:
    content: protected bool ProcessDeleteKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessDeleteKey*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: DataGridView.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes keys, such as the TAB, ESCAPE, ENTER, and ARROW keys, used to control dialog boxes."
  remarks: "This method is called in edit mode to handle keyboard input that is not handled by the hosted editing control.       If a key press is determined to not be an input key, it will be sent to the base class for processing."
  example:
  - "The following code example demonstrates how to change the behavior of the ENTER key in a <xref:System.Windows.Forms.DataGridView> subclass by overriding the <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> and ProcessDialogKey methods. In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#70](~/add/codesnippet/csharp/m-system.windows.forms.d_87_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/add/codesnippet/visualbasic/m-system.windows.forms.d_87_1.vb)]"
  syntax:
    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessDialogKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The key pressed would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)
  id: ProcessDownKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessDownKey(Keys)
  nameWithType: DataGridView.ProcessDownKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessDownKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the DOWN ARROW key."
  syntax:
    content: protected bool ProcessDownKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessDownKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The DOWN ARROW key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)
  id: ProcessEndKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessEndKey(Keys)
  nameWithType: DataGridView.ProcessEndKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessEndKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the END key."
  syntax:
    content: protected bool ProcessEndKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessEndKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The END key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)
  id: ProcessEnterKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessEnterKey(Keys)
  nameWithType: DataGridView.ProcessEnterKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessEnterKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the ENTER key."
  syntax:
    content: protected bool ProcessEnterKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessEnterKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The ENTER key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)
  id: ProcessEscapeKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessEscapeKey(Keys)
  nameWithType: DataGridView.ProcessEscapeKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessEscapeKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the ESC key."
  syntax:
    content: protected bool ProcessEscapeKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessEscapeKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)
  id: ProcessF2Key(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessF2Key(Keys)
  nameWithType: DataGridView.ProcessF2Key(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessF2Key(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the F2 key."
  syntax:
    content: protected bool ProcessF2Key (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessF2Key*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The F2 key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "The F2 key would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)
  id: ProcessHomeKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessHomeKey(Keys)
  nameWithType: DataGridView.ProcessHomeKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessHomeKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the HOME key."
  syntax:
    content: protected bool ProcessHomeKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "The key that was pressed."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessHomeKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The HOME key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)
  id: ProcessInsertKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessInsertKey(Keys)
  nameWithType: DataGridView.ProcessInsertKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessInsertKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the INSERT key."
  syntax:
    content: protected bool ProcessInsertKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "One of the <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessInsertKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  id: ProcessKeyEventArgs(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessKeyEventArgs(Message)
  nameWithType: DataGridView.ProcessKeyEventArgs(Message)
  fullName: System.Windows.Forms.DataGridView.ProcessKeyEventArgs(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes a key message and generates the appropriate control events."
  remarks: "For more information, see the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=fullName> method on the base class."
  syntax:
    content: protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;></xref>, passed by reference, that represents the window message to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the message was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessKeyEventArgs*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The key pressed would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)
  id: ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessKeyPreview(Message)
  nameWithType: DataGridView.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.DataGridView.ProcessKeyPreview(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Previews a keyboard message."
  remarks: "For more information, see the <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=fullName> method on the base class."
  syntax:
    content: protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;></xref>, passed by reference, that represents the window message to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the message was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessKeyPreview*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The key pressed would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)
  id: ProcessLeftKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessLeftKey(Keys)
  nameWithType: DataGridView.ProcessLeftKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessLeftKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the LEFT ARROW key."
  syntax:
    content: protected bool ProcessLeftKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessLeftKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The LEFT ARROW key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)
  id: ProcessNextKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessNextKey(Keys)
  nameWithType: DataGridView.ProcessNextKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessNextKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the PAGE DOWN key."
  syntax:
    content: protected bool ProcessNextKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessNextKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The PAGE DOWN key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)
  id: ProcessPriorKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessPriorKey(Keys)
  nameWithType: DataGridView.ProcessPriorKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessPriorKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the PAGE UP key."
  syntax:
    content: protected bool ProcessPriorKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessPriorKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The PAGE UP key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)
  id: ProcessRightKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessRightKey(Keys)
  nameWithType: DataGridView.ProcessRightKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessRightKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the RIGHT ARROW key."
  remarks: ''
  example:
  - "The following code example demonstrates how to change the behavior of the ENTER key in a <xref:System.Windows.Forms.DataGridView> subclass by overriding the <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> and <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> methods. In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#70](~/add/codesnippet/csharp/m-system.windows.forms.d_72_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/add/codesnippet/visualbasic/m-system.windows.forms.d_72_1.vb)]"
  syntax:
    content: protected bool ProcessRightKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessRightKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The RIGHT ARROW key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)
  id: ProcessSpaceKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessSpaceKey(Keys)
  nameWithType: DataGridView.ProcessSpaceKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessSpaceKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the SPACEBAR."
  syntax:
    content: protected bool ProcessSpaceKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "One of the <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessSpaceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)
  id: ProcessTabKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessTabKey(Keys)
  nameWithType: DataGridView.ProcessTabKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessTabKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the TAB key."
  syntax:
    content: protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessTabKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The TAB key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)
  id: ProcessUpKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessUpKey(Keys)
  nameWithType: DataGridView.ProcessUpKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessUpKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the UP ARROW key."
  syntax:
    content: protected bool ProcessUpKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessUpKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The UP ARROW key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the new current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)
  id: ProcessZeroKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ProcessZeroKey(Keys)
  nameWithType: DataGridView.ProcessZeroKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessZeroKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the 0 key."
  syntax:
    content: protected bool ProcessZeroKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.Keys&quot;></xref> values that represents the key or keys to process."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key was processed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ProcessZeroKey*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The 0 key would cause the control to enter edit mode, but the <xref:System.Windows.Forms.DataGridViewCell.EditType*> property of the current cell does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "This action would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ReadOnly
  id: ReadOnly
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DataGridView.ReadOnly
  fullName: System.Windows.Forms.DataGridView.ReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the user can edit the cells of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "A cell is read-only if the value of the ReadOnly property is `true` for the cell, the cell&quot;s row, the cell&quot;s column, or the <xref:System.Windows.Forms.DataGridView>."
  example:
  - "The following code example illustrates the use of this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_286_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_286_1.cs)]"
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the user cannot edit the cells of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ReadOnly*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the current cell is in edit mode, and the current cell contains changes that cannot be committed."
  - type: System.Exception
    commentId: T:System.Exception
    description: "The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event or the handler has set the &lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=fullName&gt; property to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The exception object can typically be cast to type <xref:System.FormatException>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ReadOnlyChanged
  id: ReadOnlyChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ReadOnlyChanged
  nameWithType: DataGridView.ReadOnlyChanged
  fullName: System.Windows.Forms.DataGridView.ReadOnlyChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.ReadOnly*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ReadOnlyChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type<xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the ReadOnlyChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#274](~/add/codesnippet/csharp/e-system.windows.forms.d_34_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#274](~/add/codesnippet/visualbasic/e-system.windows.forms.d_34_1.vb)]"
  syntax:
    content: public event EventHandler ReadOnlyChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RefreshEdit
  id: RefreshEdit
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RefreshEdit()
  nameWithType: DataGridView.RefreshEdit()
  fullName: System.Windows.Forms.DataGridView.RefreshEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Refreshes the value of the current cell with the underlying cell value when the cell is in edit mode, discarding any previous value."
  remarks: "Call this method to force a cell to update its display value in edit mode. This is useful when an external process modifies the cell value and you want to notify the user of the change, even when a user-specified change is lost as a result."
  syntax:
    content: public bool RefreshEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if successful; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if a <xref href=&quot;System.Windows.Forms.DataGridView.DataError&quot;></xref> event occurred."
  overload: System.Windows.Forms.DataGridView.RefreshEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ResetText
  id: ResetText
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ResetText()
  nameWithType: DataGridView.ResetText()
  fullName: System.Windows.Forms.DataGridView.ResetText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Resets the <xref:System.Windows.Forms.DataGridView.Text*> property to its default value."
  remarks: "Although this method behaves as described, the <xref:System.Windows.Forms.DataGridView.Text%2A> property is not relevant for this control."
  syntax:
    content: public override void ResetText ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.ResetText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowContextMenuStripChanged
  id: RowContextMenuStripChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowContextMenuStripChanged
  nameWithType: DataGridView.RowContextMenuStripChanged
  fullName: System.Windows.Forms.DataGridView.RowContextMenuStripChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of theRowContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowContextMenuStripChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#338](~/add/codesnippet/csharp/e-system.windows.forms.d_159_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#338](~/add/codesnippet/visualbasic/e-system.windows.forms.d_159_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowContextMenuStripNeeded
  id: RowContextMenuStripNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowContextMenuStripNeeded
  nameWithType: DataGridView.RowContextMenuStripNeeded
  fullName: System.Windows.Forms.DataGridView.RowContextMenuStripNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row&quot;s shortcut menu is needed."
  remarks: "The RowContextMenuStripNeeded event occurs only when the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`. Handling the RowContextMenuStripNeeded event is useful when you want to display a shortcut menu determined by a row&quot;s current state or the values it contains.       When you handle the RowContextMenuStripNeeded event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a row unless the <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> overrides the shortcut menu for the specific cell that was clicked.       The RowContextMenuStripNeeded event also occurs whenever the value of the <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=fullName> property is retrieved, either programmatically or when the user right-clicks a row.       You can use the <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=fullName> property to determine the state of a row or the values it contains, and use this information to change or modify the <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName> property. This property is initialized with the value of the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> property, which the event value overrides.       Handle the RowContextMenuStripNeeded event when working with large amounts of data to avoid the performance penalties of setting the row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> value for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example handles the RowContextMenuStripNeeded event to provide a <xref:System.Windows.Forms.ContextMenuStrip> based on the title of the employee. In this example, there are two shortcut menus, one for managers and one for all other employees.  \n  \n [!code-cs[System.Windows.Forms.DataGridView_NeededEvents#10](~/add/codesnippet/csharp/e-system.windows.forms.d_6_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_6_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded;
    return:
      type: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowCount
  id: RowCount
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowCount
  nameWithType: DataGridView.RowCount
  fullName: System.Windows.Forms.DataGridView.RowCount
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the number of rows displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "If RowCount is set to a value less than the current value, rows will be removed from the end of the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection. If RowCount is set to a value greater than the current value, rows will be added to the end of the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection. The additional rows are based on the row specified in the <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> property.       If you set the RowCount property to 0, all rows will be removed from the <xref:System.Windows.Forms.DataGridView>. This is equivalent to calling the <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=fullName> method.      > [!NOTE] >  If <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> is `true`, you cannot set RowCount to 0. In this case, call the <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=fullName> method to remove all rows except the row for new records. Calling <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A> has the same result as setting RowCount to 1 in this case, but is much faster.       The RowCount property can be used with the <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> property to create a simple <xref:System.Windows.Forms.DataGridView> for displaying and editing text. If you set the RowCount property to a value greater than 0 for a <xref:System.Windows.Forms.DataGridView> control without columns, a <xref:System.Windows.Forms.DataGridViewTextBoxColumn> is added automatically."
  example:
  - "The following code example demonstrates the use of the RowCount property. In this example, this property is used to track the number of entries in a <xref:System.Windows.Forms.DataGridView>. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/csharp/p-system.windows.forms.d_267_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_267_1.vb)]"
  syntax:
    content: public int RowCount { get; set; }
    return:
      type: System.Int32
      description: "The number of rows to display in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.RowCount*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified value when setting this property is less than 0.       -or-       The specified value is less than 1 and <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When setting this property, the <xref:System.Windows.Forms.DataGridView.DataSource*> property is set."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged
  id: RowDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowDefaultCellStyleChanged
  nameWithType: DataGridView.RowDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle*> property for a row changes."
  remarks: "This event occurs when any property of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> property for a row is set to a new value or when the <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> property for a row is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowDefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#340](~/add/codesnippet/csharp/e-system.windows.forms.d_4_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#340](~/add/codesnippet/visualbasic/e-system.windows.forms.d_4_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowDirtyStateNeeded
  id: RowDirtyStateNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowDirtyStateNeeded
  nameWithType: DataGridView.RowDirtyStateNeeded
  fullName: System.Windows.Forms.DataGridView.RowDirtyStateNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.VirtualMode*> property of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> needs to determine whether the current row has uncommitted changes."
  remarks: "By default, this event sets the <xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=fullName> property to `true` if any cells in the current row have been modified. This causes the <xref:System.Windows.Forms.DataGridView.CancelRowEdit> event to occur when the user reverts edits to a row. Users can revert edits to a row by pressing ESC twice when a cell is in edit mode or once outside of edit mode. This event can be used for customizing commit scope in virtual mode by setting the <xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=fullName> property to the correct value depending on the chosen commit scope.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle this event to provide cell-level commit scope, meaning that the user can revert changes to the current cell only. In cell-level commit scope, the row is treated as having uncommitted changes only when the current cell has uncommitted changes, rather than when any cell in the row has uncommitted changes. This example is part of a larger example available in [Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#160](~/add/codesnippet/cpp/e-system.windows.forms.d_88_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#160](~/add/codesnippet/visualbasic/e-system.windows.forms.d_88_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.VirtualMode#160](~/add/codesnippet/csharp/e-system.windows.forms.d_88_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded;
    return:
      type: System.Windows.Forms.QuestionEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowDividerDoubleClick
  id: RowDividerDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowDividerDoubleClick
  nameWithType: DataGridView.RowDividerDoubleClick
  fullName: System.Windows.Forms.DataGridView.RowDividerDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user double-clicks the divider between two rows."
  remarks: "You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a row divider.       The row <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> property does not extend the area in which a user can double-click. If the height of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowDividerDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowDividerDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#342](~/add/codesnippet/csharp/e-system.windows.forms.d_10_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#342](~/add/codesnippet/visualbasic/e-system.windows.forms.d_10_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowDividerHeightChanged
  id: RowDividerHeightChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowDividerHeightChanged
  nameWithType: DataGridView.RowDividerHeightChanged
  fullName: System.Windows.Forms.DataGridView.RowDividerHeightChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewRow.DividerHeight*> property changes."
  remarks: "The divider height is modified by setting the <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A> property.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowDividerHeightChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowDividerHeightChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#343](~/add/codesnippet/csharp/e-system.windows.forms.d_2_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#343](~/add/codesnippet/visualbasic/e-system.windows.forms.d_2_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowEnter
  id: RowEnter
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowEnter
  nameWithType: DataGridView.RowEnter
  fullName: System.Windows.Forms.DataGridView.RowEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row receives input focus but before it becomes the current row."
  remarks: "This event occurs when the <xref:System.Windows.Forms.DataGridView> is initially loaded, as well as when the user selects a row other than the current row.       This event occurs before the <xref:System.Windows.Forms.DataGridView.CurrentRow%2A> property is updated. To retrieve the index of the newly-entered row, use the <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=fullName> property within the event handler.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how to handle this event to change the <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> property of the cells in the current row. In this example, the background color is set in the RowEnter event, then reset to <xref:System.Drawing.Color.Empty> on the <xref:System.Windows.Forms.DataGridView.RowLeave> event. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and ensure that all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#200](~/add/codesnippet/csharp/e-system.windows.forms.d_164_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/add/codesnippet/visualbasic/e-system.windows.forms.d_164_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler RowEnter;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowErrorTextChanged
  id: RowErrorTextChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowErrorTextChanged
  nameWithType: DataGridView.RowErrorTextChanged
  fullName: System.Windows.Forms.DataGridView.RowErrorTextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridViewRow.ErrorText*> property of a row changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowErrorTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowErrorTextChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#345](~/add/codesnippet/csharp/e-system.windows.forms.d_94_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#345](~/add/codesnippet/visualbasic/e-system.windows.forms.d_94_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowErrorTextNeeded
  id: RowErrorTextNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowErrorTextNeeded
  nameWithType: DataGridView.RowErrorTextNeeded
  fullName: System.Windows.Forms.DataGridView.RowErrorTextNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row&quot;s error text is needed."
  remarks: "The RowErrorTextNeeded event occurs only when the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property of the <xref:System.Windows.Forms.DataGridView> control is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`. Handling the RowErrorTextNeeded event is useful when you want to determine the error for a row depending on its state and the values it contains.       When you handle the RowErrorTextNeeded event and specify error text in the handler, an error glyph appears in the row header unless the <xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A> property is set to `false`. When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.       The RowErrorTextNeeded event also occurs whenever the value of the <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=fullName> property is retrieved.       You can use the <xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=fullName> property to determine the state of a row or the values it contains, and use this information to change or modify the <xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=fullName> property. This property is initialized with the value of the row <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> property, which the event value overrides.       Handle the RowErrorTextNeeded event when working with large amounts of data to avoid the performance penalties of setting the row <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> value for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowErrorTextNeeded event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowErrorTextNeeded event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#346](~/add/codesnippet/csharp/e-system.windows.forms.d_42_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#346](~/add/codesnippet/visualbasic/e-system.windows.forms.d_42_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded;
    return:
      type: System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeaderCellChanged
  id: RowHeaderCellChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeaderCellChanged
  nameWithType: DataGridView.RowHeaderCellChanged
  fullName: System.Windows.Forms.DataGridView.RowHeaderCellChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user changes the contents of a row header cell."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeaderCellChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeaderCellChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#349](~/add/codesnippet/csharp/e-system.windows.forms.d_1_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#349](~/add/codesnippet/visualbasic/e-system.windows.forms.d_1_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeaderMouseClick
  id: RowHeaderMouseClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeaderMouseClick
  nameWithType: DataGridView.RowHeaderMouseClick
  fullName: System.Windows.Forms.DataGridView.RowHeaderMouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user clicks within the boundaries of a row header."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectedCollections#05](~/add/codesnippet/csharp/e-system.windows.forms.d_74_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/add/codesnippet/visualbasic/e-system.windows.forms.d_74_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick
  id: RowHeaderMouseDoubleClick
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeaderMouseDoubleClick
  nameWithType: DataGridView.RowHeaderMouseDoubleClick
  fullName: System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row header is double-clicked."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeaderMouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeaderMouseDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#348](~/add/codesnippet/csharp/e-system.windows.forms.d_145_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#348](~/add/codesnippet/visualbasic/e-system.windows.forms.d_145_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick;
    return:
      type: System.Windows.Forms.DataGridViewCellMouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersBorderStyle
  id: RowHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersBorderStyle
  nameWithType: DataGridView.RowHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.RowHeadersBorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the border style of the row header cells."
  remarks: "If the RowHeadersBorderStyle property is set to anything other than <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle>, the <xref:System.Windows.Forms.DataGridView.GridColor%2A> property must be a system color.       You cannot set this property to the <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle> value, which is a read-only value indicating that the border style has been customized through the use of the <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> property.      > [!NOTE] >  If visual styles are enabled for the application through the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> method and the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> property is `true`, the row headers are painted using the current theme. In this case, the value of the RowHeadersBorderStyle property is ignored for all row headers except the <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>, to which the theme is not applied."
  example:
  - "The following code example illustrates the use of this property.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#030](~/add/codesnippet/csharp/p-system.windows.forms.d_10_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#030](~/add/codesnippet/visualbasic/p-system.windows.forms.d_10_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewHeaderBorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewHeaderBorderStyle&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.RowHeadersBorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewHeaderBorderStyle&quot;></xref> value."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewHeaderBorderStyle&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged
  id: RowHeadersBorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersBorderStyleChanged
  nameWithType: DataGridView.RowHeadersBorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersBorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeadersBorderStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#275](~/add/codesnippet/csharp/e-system.windows.forms.d_99_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#275](~/add/codesnippet/visualbasic/e-system.windows.forms.d_99_1.vb)]"
  syntax:
    content: public event EventHandler RowHeadersBorderStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle
  id: RowHeadersDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersDefaultCellStyle
  nameWithType: DataGridView.RowHeadersDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the default style applied to the row header cells."
  remarks: "The default <xref:System.Windows.Forms.DataGridViewCellStyle> returned by this property has the following initial property values.      |DataGridViewCellStyle property|Default value|   |------------------------------------|-------------------|   |<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|The value of the <xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=fullName> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|The value of the <xref:System.Windows.Forms.DataGridView.Font%2A> property.|   |<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment?displayProperty=fullName>|   |<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState?displayProperty=fullName>|       These values automatically override the values set through the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> property. To force row headers to inherit the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> values, you must set the values in the RowHeadersDefaultCellStyle object to the default values indicated for the <xref:System.Windows.Forms.DataGridViewCellStyle> class.       For more information about cell style inheritance, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use this property in a <xref:System.Windows.Forms.DataGridView> with custom colors. Note how the <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=fullName> property is set to <xref:System.Drawing.Color.Empty?displayProperty=fullName> so that the value is inherited from the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> object.  \n  \n This example is part of a larger example provided in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_203_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_203_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that represents the default style applied to the row header cells."
  overload: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged
  id: RowHeadersDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersDefaultCellStyleChanged
  nameWithType: DataGridView.RowHeadersDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle*> property changes."
  remarks: "This event occurs when a property of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> property is set to a new value or when the <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> property is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeadersDefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#276](~/add/codesnippet/csharp/e-system.windows.forms.d_157_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#276](~/add/codesnippet/visualbasic/e-system.windows.forms.d_157_1.vb)]"
  syntax:
    content: public event EventHandler RowHeadersDefaultCellStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersVisible
  id: RowHeadersVisible
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersVisible
  nameWithType: DataGridView.RowHeadersVisible
  fullName: System.Windows.Forms.DataGridView.RowHeadersVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the column that contains row headers is displayed."
  remarks: "If the RowHeadersVisible property is `false`, a row whose <xref:System.Windows.Forms.DataGridViewBand.Resizable%2A> property is set to `true`can still be resized in the user interface (UI) by clicking the mouse cursor anywhere along the bottom border of the row to be resized."
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, RowHeadersVisible, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, and <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> properties. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_123_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_123_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_123_1.cs)]"
  syntax:
    content: public bool RowHeadersVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the column that contains row headers is displayed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.RowHeadersVisible*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and the <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode*> property is set to <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowsMode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersWidth
  id: RowHeadersWidth
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersWidth
  nameWithType: DataGridView.RowHeadersWidth
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the width, in pixels, of the column that contains the row headers."
  remarks: "The RowHeadersWidth property can be used to resize the row header column to a specified width. To adjust the width of this column to fit the contents of the row header cells, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> method."
  example:
  - "The following code example illustrates how to use the RowHeadersWidth property in a row-painting scenario. In the example, the value of this property is used to calculate the bounds within which a custom background is drawn.  \n  \n This code is part of a larger example available in[How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_30_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/csharp/p-system.windows.forms.d_30_1.cs)]"
  syntax:
    content: public int RowHeadersWidth { get; set; }
    return:
      type: System.Int32
      description: "The width, in pixels, of the column that contains row headers. The default is 43."
  overload: System.Windows.Forms.DataGridView.RowHeadersWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than the minimum width of 4 pixels or is greater than the maximum width of 32768 pixels."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthChanged
  id: RowHeadersWidthChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersWidthChanged
  nameWithType: DataGridView.RowHeadersWidthChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidthChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when value of the <xref:System.Windows.Forms.DataGridView.RowHeadersWidth*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeadersWidthChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#277](~/add/codesnippet/csharp/e-system.windows.forms.d_39_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#277](~/add/codesnippet/visualbasic/e-system.windows.forms.d_39_1.vb)]"
  syntax:
    content: public event EventHandler RowHeadersWidthChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode
  id: RowHeadersWidthSizeMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersWidthSizeMode
  nameWithType: DataGridView.RowHeadersWidthSizeMode
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers."
  remarks: "When this property is set to an automatic sizing mode, the width of the row headers cannot be adjusted by the user.       To adjust the height of the row headers programmatically, use the <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> method or set the <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> property.       To set the sizing mode for the column headers, use the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property.       For more information about header sizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  The <xref:System.Windows.Forms.DataGridView> control does not support double buffering. If <xref:System.Windows.Forms.Control.DoubleBuffered%2A> is set to `true` in a derived <xref:System.Windows.Forms.DataGridView> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns."
  example:
  - "The following code example illustrates how to use this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_27_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_27_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> value indicating the mode by which the width of the row headers can be adjusted. The default is <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode&quot;></xref> value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged
  id: RowHeadersWidthSizeModeChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeadersWidthSizeModeChanged
  nameWithType: DataGridView.RowHeadersWidthSizeModeChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode*> property changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersWidthSizeModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeadersWidthSizeModeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#278](~/add/codesnippet/csharp/e-system.windows.forms.d_61_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#278](~/add/codesnippet/visualbasic/e-system.windows.forms.d_61_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged;
    return:
      type: System.Windows.Forms.DataGridViewAutoSizeModeEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeightChanged
  id: RowHeightChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeightChanged
  nameWithType: DataGridView.RowHeightChanged
  fullName: System.Windows.Forms.DataGridView.RowHeightChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewRow.Height*> property for a row changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates the use of this event. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/add/codesnippet/visualbasic/e-system.windows.forms.d_129_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#40](~/add/codesnippet/csharp/e-system.windows.forms.d_129_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeightInfoNeeded
  id: RowHeightInfoNeeded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeightInfoNeeded
  nameWithType: DataGridView.RowHeightInfoNeeded
  fullName: System.Windows.Forms.DataGridView.RowHeightInfoNeeded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when information about row height is requested."
  remarks: "This event is useful for preserving custom row heights after a sorting operation. This is necessary because sorting operations are normally handled by the data source, which does not keep track of the correspondence between rows of data and rows in the control. This event occurs only when the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property has been set or when the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`. In the latter case, you provide your own data store and sorting operations. Handle the <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> event to store updated height information when the user changes a row height. Use RowHeightInfoNeeded to retrieve the stored height information when the control needs it.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeightInfoNeeded event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeightInfoNeeded event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#351](~/add/codesnippet/csharp/e-system.windows.forms.d_116_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#351](~/add/codesnippet/visualbasic/e-system.windows.forms.d_116_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded;
    return:
      type: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowHeightInfoPushed
  id: RowHeightInfoPushed
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowHeightInfoPushed
  nameWithType: DataGridView.RowHeightInfoPushed
  fullName: System.Windows.Forms.DataGridView.RowHeightInfoPushed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user changes the height of a row."
  remarks: "This event is raised when the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is set to `true` or the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set to a value other than `null`. This event is used to track and store row height information so that it can be restored after a sorting operation. To restore height information, handle the <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> event. Note that this event occurs only when the user changes the height of a row. If you change the height of a row programmatically, you must store the new height information at the same time.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeightInfoPushed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowHeightInfoPushed event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#352](~/add/codesnippet/csharp/e-system.windows.forms.d_163_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#352](~/add/codesnippet/visualbasic/e-system.windows.forms.d_163_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed;
    return:
      type: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowLeave
  id: RowLeave
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowLeave
  nameWithType: DataGridView.RowLeave
  fullName: System.Windows.Forms.DataGridView.RowLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row loses input focus and is no longer the current row."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example illustrates how to handle this event to change the <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> property of the cells in the current row. In this example, the background color is set in the <xref:System.Windows.Forms.DataGridView.RowEnter> event, then reset to <xref:System.Drawing.Color.Empty> on the RowLeave event. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and ensure that all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#200](~/add/codesnippet/csharp/e-system.windows.forms.d_102_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/add/codesnippet/visualbasic/e-system.windows.forms.d_102_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler RowLeave;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowMinimumHeightChanged
  id: RowMinimumHeightChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowMinimumHeightChanged
  nameWithType: DataGridView.RowMinimumHeightChanged
  fullName: System.Windows.Forms.DataGridView.RowMinimumHeightChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight*> property for a row changes."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowMinimumHeightChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowMinimumHeightChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#354](~/add/codesnippet/csharp/e-system.windows.forms.d_144_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#354](~/add/codesnippet/visualbasic/e-system.windows.forms.d_144_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowPostPaint
  id: RowPostPaint
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowPostPaint
  nameWithType: DataGridView.RowPostPaint
  fullName: System.Windows.Forms.DataGridView.RowPostPaint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs after a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> is painted."
  remarks: "You can handle this event alone or in combination with the <xref:System.Windows.Forms.DataGridView.RowPrePaint> event to customize the appearance of rows in the control. You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs> class to paint other parts:      -   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader%2A>       You can also use the <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> class to paint standard controls using the current theme. For more information, see [Rendering Controls with Visual Styles](~/add/includes/ajax-current-ext-md.md). If you are using [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], you also have access to a large library of standard images that you can use with the <xref:System.Windows.Forms.DataGridView> control.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a handler for the RowPostPaint event to paint textual content that spans the entire row below the normal cell values. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/add/codesnippet/visualbasic/e-system.windows.forms.d_85_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#30](~/add/codesnippet/csharp/e-system.windows.forms.d_85_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint;
    return:
      type: System.Windows.Forms.DataGridViewRowPostPaintEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowPrePaint
  id: RowPrePaint
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowPrePaint
  nameWithType: DataGridView.RowPrePaint
  fullName: System.Windows.Forms.DataGridView.RowPrePaint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs before a <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> is painted"
  remarks: "You can handle this event alone or in combination with the <xref:System.Windows.Forms.DataGridView.RowPostPaint> event to customize the appearance of rows in the control. You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs> class to paint other parts:      -   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.DrawFocus%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCells%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsBackground%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsContent%2A>      -   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintHeader%2A>       You can also use the <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> class to paint standard controls using the current theme. For more information, see [Rendering Controls with Visual Styles](~/add/includes/ajax-current-ext-md.md). If you are using [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], you also have access to a large library of standard images that you can use with the <xref:System.Windows.Forms.DataGridView> control.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a handler for the RowPrePaint event to paint a gradient row background if the row is selected. This example is part of a larger example available in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_103_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#20](~/add/codesnippet/csharp/e-system.windows.forms.d_103_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint;
    return:
      type: System.Windows.Forms.DataGridViewRowPrePaintEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Rows
  id: Rows
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Rows
  nameWithType: DataGridView.Rows
  fullName: System.Windows.Forms.DataGridView.Rows
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a collection that contains all the rows in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "You can use the Rows collection to manually populate a <xref:System.Windows.Forms.DataGridView> control instead of binding it to a data source. The following example shows you how to manually add and insert rows. This example assumes that you have added four <xref:System.Windows.Forms.DataGridViewTextBoxColumn> instances to the control&quot;s <xref:System.Windows.Forms.DataGridView.Columns%2A> collection.       [Visual Basic]      ```   Me.dataGridView1.Rows.Add(&quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;)   Me.dataGridView1.Rows.Insert(0, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;)   ```       [C#]      ```   this.dataGridView1.Rows.Add(&quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;);this.dataGridView1.Rows.Insert(0, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;);   ```       For a detailed example that programmatically populates an unbound <xref:System.Windows.Forms.DataGridView> control, see the Example section.       Rows include style information in addition to cell values. For this reason, you might want to add or insert rows based on existing rows that you have already styled. You can do this using the <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A>, and <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A> methods.       You can also use the Rows collection to modify the values in the control or to remove rows. You can modify values or remove rows regardless of whether the control is bound to an external data source. If there is a data source, the changes are made directly to the data source. You may still need to push the data source updates to a remote database, however. For more information, see [How to: Bind Data to the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       The following example shows you how to modify cell values programmatically.       [Visual Basic]      ```   &quot; Modify the value in the first cell of the second row.   Me.dataGridView1.Rows[1].Cells[0].Value = &quot;new value&quot;      &quot; The previous line is equivalent to the following line.   Me.dataGridView1[0, 1].Value = &quot;new value&quot;   ```       [C#]      ```   // Modify the value in the first cell of the second row.   this.dataGridView1.Rows[1].Cells[0].Value = &quot;new value&quot;;      // The previous line is equivalent to the following line.   this.dataGridView1[0, 1].Value = &quot;new value&quot;;   ```       In addition to the standard collection capabilities, you can use the Rows collection to retrieve information about rows. Use the <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A> method to determine the state of a particular row. Use the <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A> and <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A> methods to determine the number of rows or the combined height of rows in a particular state. To retrieve the index of a row with a particular state, use the <xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A>, and <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A> methods.       The following example shows you how to retrieve the index of the first selected row, and then use it to programmatically delete the row.       [Visual Basic]      ```   Dim rowToDelete As Int32 = Me.dataGridView1.Rows.GetFirstRow( _       DataGridViewElementStates.Selected)   If rowToDelete > -1 Then       Me.dataGridView1.Rows.RemoveAt(rowToDelete)   End If   ```       [C#]      ```   Int32 rowToDelete = this.dataGridView1.Rows.GetFirstRow(       DataGridViewElementStates.Selected);   if (rowToDelete > -1)   {       this.dataGridView1.Rows.RemoveAt(rowToDelete);   }   ```       To improve performance, the <xref:System.Windows.Forms.DataGridViewRowCollection> returned by the Rows property can include shared and unshared rows. Shared rows share memory to reduce the cost of a large record set. If your record set is very large, you should be careful to keep the rows shared as much as possible when accessing the Rows property.       For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to create an unbound <xref:System.Windows.Forms.DataGridView>; set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, and <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> properties; and use the Rows and <xref:System.Windows.Forms.DataGridView.Columns%2A> properties. It also demonstrates how to use a version of the <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> and <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> methods to properly size the column headers and the rows. To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and a button named `Button1`, and then call the `InitializeDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are connected with their event handlers.  \n  \n [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/cpp/p-system.windows.forms.d_295_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/csharp/p-system.windows.forms.d_295_1.cs)]\n [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/add/codesnippet/visualbasic/p-system.windows.forms.d_295_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewRowCollection Rows { get; }
    return:
      type: System.Windows.Forms.DataGridViewRowCollection
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowCollection&quot;></xref> that contains all the rows in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.Rows*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowsAdded
  id: RowsAdded
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowsAdded
  nameWithType: DataGridView.RowsAdded
  fullName: System.Windows.Forms.DataGridView.RowsAdded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs after a new row is added to the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "Rows in the control are not automatically sorted when new rows are added. To sort new rows into their correct position, call the <xref:System.Windows.Forms.DataGridView.Sort%2A> method in a RowsAdded event handler.       When the user adds a new row using the row for new records, the <xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=fullName> value in the handler for this event is equal to the index of the new location of the row for new records, which is one greater than the row just added. When you add rows programmatically, however, the <xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A> value is the index of the first row added.       In virtual mode, this event occurs before the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event and can be used to create new records in your data store that you can then populate in the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event handler.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example handles the RowsAdded event to increment the number of rows in a virtual <xref:System.Windows.Forms.DataGridView>. The number of rows is used in the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> handler so it knows when to show a blank cell versus an initialized cell for a new row. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> reference topic.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#20](~/add/codesnippet/csharp/e-system.windows.forms.d_67_1.cs)]\n [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/add/codesnippet/cpp/e-system.windows.forms.d_67_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_67_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded;
    return:
      type: System.Windows.Forms.DataGridViewRowsAddedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowsDefaultCellStyle
  id: RowsDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowsDefaultCellStyle
  nameWithType: DataGridView.RowsDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.RowsDefaultCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the default style applied to the row cells of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control displays its cells using the styles indicated by the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property, which inherits styles from other properties of type <xref:System.Windows.Forms.DataGridViewCellStyle>. For cells in all rows, excluding header cells, the styles specified through the RowsDefaultCellStyle property override the styles specified through the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties, and are overridden by the styles specified through the <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName> properties.       For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       When getting this property, a <xref:System.Windows.Forms.DataGridViewCellStyle> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <xref:System.Windows.Forms.DataGridViewCellStyle> to set this property for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use this property to create a ledger effect in a <xref:System.Windows.Forms.DataGridView> control. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_178_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_178_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to apply to the row cells of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.RowsDefaultCellStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged
  id: RowsDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowsDefaultCellStyleChanged
  nameWithType: DataGridView.RowsDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle*> property changes."
  remarks: "This event occurs when a property of the <xref:System.Windows.Forms.DataGridViewCellStyle> returned by the <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> property is set to a new value or when the <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> property is set to a new <xref:System.Windows.Forms.DataGridViewCellStyle> with at least one property value different than the previous cell style object.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowsDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowsDefaultCellStyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#279](~/add/codesnippet/csharp/e-system.windows.forms.d_69_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#279](~/add/codesnippet/visualbasic/e-system.windows.forms.d_69_1.vb)]"
  syntax:
    content: public event EventHandler RowsDefaultCellStyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowsRemoved
  id: RowsRemoved
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowsRemoved
  nameWithType: DataGridView.RowsRemoved
  fullName: System.Windows.Forms.DataGridView.RowsRemoved
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row or rows are deleted from the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "When rows are deleted from a <xref:System.Windows.Forms.DataGridView> control, the index numbers of subsequent rows are lowered to compensate.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use this event to update the values in a balance column of a <xref:System.Windows.Forms.DataGridView>. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#30](~/add/codesnippet/csharp/e-system.windows.forms.d_11_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/add/codesnippet/visualbasic/e-system.windows.forms.d_11_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved;
    return:
      type: System.Windows.Forms.DataGridViewRowsRemovedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowStateChanged
  id: RowStateChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowStateChanged
  nameWithType: DataGridView.RowStateChanged
  fullName: System.Windows.Forms.DataGridView.RowStateChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row changes state, such as losing or gaining input focus."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowStateChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowStateChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#359](~/add/codesnippet/csharp/e-system.windows.forms.d_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#359](~/add/codesnippet/visualbasic/e-system.windows.forms.d_7_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged;
    return:
      type: System.Windows.Forms.DataGridViewRowStateChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowTemplate
  id: RowTemplate
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowTemplate
  nameWithType: DataGridView.RowTemplate
  fullName: System.Windows.Forms.DataGridView.RowTemplate
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the row that represents the template for all the rows in the control."
  remarks: "Sometimes you want greater control over the appearance of <xref:System.Windows.Forms.DataGridView> rows than what is provided by the various <xref:System.Windows.Forms.DataGridView> cell style properties. The RowTemplate property lets you create and initialize a <xref:System.Windows.Forms.DataGridViewRow> for use as a template by all rows, including the row for new records if <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> is `true`.       This is useful when you are setting default values for properties such as row height. For example, you may want to increase the default row height in order to provide extra room beneath ordinary cell content for displaying content that spans multiple columns.       Setting the row template is necessary when external data is displayed using custom types derived from the <xref:System.Windows.Forms.DataGridViewRow> class. With unbound <xref:System.Windows.Forms.DataGridView> controls, you can programmatically populate the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection with instances of your custom row type. When displaying external data, however, the rows are generated automatically, but they are based on the row template, which you can set to an instance of your custom row type.       If this property has not been set the first time you retrieve its value, a new <xref:System.Windows.Forms.DataGridViewRow> is created and returned."
  example:
  - "The following code example illustrates how to use the row template to specify an initial row height and a minimum row height.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.RowTemplate#1](~/add/codesnippet/cpp/p-system.windows.forms.d_81_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.RowTemplate#1](~/add/codesnippet/csharp/p-system.windows.forms.d_81_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.RowTemplate#1](~/add/codesnippet/visualbasic/p-system.windows.forms.d_81_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewRow RowTemplate { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewRow
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> representing the row template."
  overload: System.Windows.Forms.DataGridView.RowTemplate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified row when setting this property has its <xref:System.Windows.Forms.DataGridViewElement.DataGridView*> property set."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowUnshared
  id: RowUnshared
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowUnshared
  nameWithType: DataGridView.RowUnshared
  fullName: System.Windows.Forms.DataGridView.RowUnshared
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row&quot;s state changes from shared to unshared."
  remarks: "You can use this event during development and testing to help identify code that causes rows to change from a shared to an unshared state. This is useful when scaling the control to display large amounts of data.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowUnshared event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the RowUnshared event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#360](~/add/codesnippet/csharp/e-system.windows.forms.d_64_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#360](~/add/codesnippet/visualbasic/e-system.windows.forms.d_64_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler RowUnshared;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowValidated
  id: RowValidated
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowValidated
  nameWithType: DataGridView.RowValidated
  fullName: System.Windows.Forms.DataGridView.RowValidated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs after a row has finished validating."
  remarks: "This event is analogous to the <xref:System.Windows.Forms.Control.Validated> event. Use this event to perform post-processing on a row of values.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code sample uses this event to clear up any error annotations that may have been left behind after validating the row.  \n  \n [!code-vb[System.Windows.Forms.DataGridView.RowOperations#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_132_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.RowOperations#10](~/add/codesnippet/csharp/e-system.windows.forms.d_132_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellEventHandler RowValidated;
    return:
      type: System.Windows.Forms.DataGridViewCellEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.RowValidating
  id: RowValidating
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: RowValidating
  nameWithType: DataGridView.RowValidating
  fullName: System.Windows.Forms.DataGridView.RowValidating
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a row is validating."
  remarks: "This event is analogous to the <xref:System.Windows.Forms.Control.Validating?displayProperty=fullName> event. Use this event to perform validation on all the values of a row. If the row does not pass validation, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName> property to `true`. Canceling this event prevents the <xref:System.Windows.Forms.DataGridView.RowValidated>, <xref:System.Windows.Forms.Control.Validating?displayProperty=fullName>, and <xref:System.Windows.Forms.Control.Validated?displayProperty=fullName> events from occurring, and also prevents the user from leaving the invalid row and prevents the row from being saved to an external data source in data bound mode.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example uses RowValidating to check if valid track and release dates are entered.  \n  \n [!code-vb[System.Windows.Forms.DataGridView.RowOperations#5](~/add/codesnippet/visualbasic/e-system.windows.forms.d_98_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.RowOperations#5](~/add/codesnippet/csharp/e-system.windows.forms.d_98_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating;
    return:
      type: System.Windows.Forms.DataGridViewCellCancelEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Scroll
  id: Scroll
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Scroll
  nameWithType: DataGridView.Scroll
  fullName: System.Windows.Forms.DataGridView.Scroll
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user scrolls through the control contents."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Scroll event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the Scroll event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#363](~/add/codesnippet/csharp/e-system.windows.forms.d_71_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#363](~/add/codesnippet/visualbasic/e-system.windows.forms.d_71_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.ScrollEventHandler Scroll;
    return:
      type: System.Windows.Forms.ScrollEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ScrollBars
  id: ScrollBars
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ScrollBars
  nameWithType: DataGridView.ScrollBars
  fullName: System.Windows.Forms.DataGridView.ScrollBars
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the type of scroll bars to display for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "Regardless of the value of this property, scroll bars are shown only when they are needed. Use this property to prevent scroll bars from appearing. This is useful, for example, when you want to provide an alternative user interface (UI) for scrolling."
  syntax:
    content: public System.Windows.Forms.ScrollBars ScrollBars { get; set; }
    return:
      type: System.Windows.Forms.ScrollBars
      description: "One of the <xref href=&quot;System.Windows.Forms.ScrollBars&quot;></xref> values. The default is <xref href=&quot;System.Windows.Forms.ScrollBars&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ScrollBars*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.ScrollBars&quot;></xref> value."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The value of this property cannot be set because the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is unable to scroll due to a cell change that cannot be committed or canceled."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SelectAll
  id: SelectAll
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SelectAll()
  nameWithType: DataGridView.SelectAll()
  fullName: System.Windows.Forms.DataGridView.SelectAll()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Selects all the cells in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  remarks: "When the <xref:System.Windows.Forms.DataGridView> is in column-selection mode and this method is called, each column&quot;s <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> property is set to `true`, and each row&quot;s <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> property is set to `false`.       Conversely, when the <xref:System.Windows.Forms.DataGridView> is in row-selection mode and this method is called, each row&quot;s <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> property is set to `true`, and each column&quot;s <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> property is set to `false`."
  example:
  - "The following code example demonstrates the use of the SelectAll method. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1` and a <xref:System.Windows.Forms.Button> named `selectAllButton`, and ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#180](~/add/codesnippet/csharp/m-system.windows.forms.d_34_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#180](~/add/codesnippet/visualbasic/m-system.windows.forms.d_34_1.vb)]"
  syntax:
    content: public void SelectAll ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.SelectAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SelectedCells
  id: SelectedCells
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SelectedCells
  nameWithType: DataGridView.SelectedCells
  fullName: System.Windows.Forms.DataGridView.SelectedCells
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the collection of cells selected by the user."
  remarks: "The SelectedCells property is always populated regardless of the <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property value.       This property contains a read-only snapshot of the selection at the time it is referenced. If you hold onto a copy of this collection, it may differ from the actual, subsequent <xref:System.Windows.Forms.DataGridView> state in which the user may have changed the selection. Therefore, you should not operate on a copy of the collection."
  example:
  - "The following code example demonstrates how to use the SelectedCells collection to find the sum of the values in the selection. In the example, this collection is iterated through and the valid values are added to the sum, which is displayed in a label. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/csharp/p-system.windows.forms.d_8_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells { get; }
    return:
      type: System.Windows.Forms.DataGridViewSelectedCellCollection
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewSelectedCellCollection&quot;></xref> that represents the cells selected by the user."
  overload: System.Windows.Forms.DataGridView.SelectedCells*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SelectedColumns
  id: SelectedColumns
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SelectedColumns
  nameWithType: DataGridView.SelectedColumns
  fullName: System.Windows.Forms.DataGridView.SelectedColumns
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the collection of columns selected by the user."
  remarks: "The <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property must be set to <xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName> or <xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName> for the SelectedColumns property to be populated with selected columns.       This property contains a read-only snapshot of the selection at the time it is referenced. If you hold onto a copy of this collection, it may differ from the actual, subsequent <xref:System.Windows.Forms.DataGridView> state in which the user may have changed the selection. Therefore, you should not operate on a copy of the collection."
  example:
  - "The following code example demonstrates how to use the SelectedColumns property to get the selected column in a programmatic sort. In this example, this property is used in the <xref:System.Windows.Forms.DataGridView.Sort%2A> method to determine the direction of the sort.  \n  \n [!code-cs[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/add/codesnippet/csharp/p-system.windows.forms.d_220_1.cs)]\n [!code-vb[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_220_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns { get; }
    return:
      type: System.Windows.Forms.DataGridViewSelectedColumnCollection
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewSelectedColumnCollection&quot;></xref> that represents the columns selected by the user."
  overload: System.Windows.Forms.DataGridView.SelectedColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SelectedRows
  id: SelectedRows
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SelectedRows
  nameWithType: DataGridView.SelectedRows
  fullName: System.Windows.Forms.DataGridView.SelectedRows
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the collection of rows selected by the user."
  remarks: "The <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property must be set to <xref:System.Windows.Forms.DataGridViewSelectionMode> or <xref:System.Windows.Forms.DataGridViewSelectionMode> for the SelectedRows property to be populated with selected rows.       This property contains a read-only snapshot of the selection at the time it is referenced. If you hold onto a copy of this collection, it may differ from the actual, subsequent <xref:System.Windows.Forms.DataGridView> state in which the user may have changed the selection. You should therefore not operate on a copy of the collection.       To programmatically select a row, set its <xref:System.Windows.Forms.DataGridViewRow.Selected%2A>property to `true`."
  example:
  - "The following code example demonstrates how to use the SelectedRows property in the <xref:System.Windows.Forms.DataGridView.UserDeletingRow> event. In this example, if the first row is contained in the SelectedRows collection, then the deletion is canceled. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#20](~/add/codesnippet/csharp/p-system.windows.forms.d_228_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_228_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows { get; }
    return:
      type: System.Windows.Forms.DataGridViewSelectedRowCollection
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewSelectedRowCollection&quot;></xref> that contains the rows selected by the user."
  overload: System.Windows.Forms.DataGridView.SelectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SelectionChanged
  id: SelectionChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: DataGridView.SelectionChanged
  fullName: System.Windows.Forms.DataGridView.SelectionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the current selection changes."
  remarks: "This event occurs whenever cells are selected or the selection is canceled, whether programmatically or by user action. For example, this event is useful when you want display the sum of the currently selected cells.       When you change the value of the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property, the SelectionChanged event occurs before the <xref:System.Windows.Forms.DataGridView.CurrentCellChanged> event. Any SelectionChanged event handler accessing the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property at this time will get its previous value.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of this event. In the example, the form displays the sum of values in the selected cells, and updates the sum when the selection changes.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#00](~/add/codesnippet/csharp/e-system.windows.forms.d_45_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#00](~/add/codesnippet/visualbasic/e-system.windows.forms.d_45_1.vb)]"
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SelectionMode
  id: SelectionMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SelectionMode
  nameWithType: DataGridView.SelectionMode
  fullName: System.Windows.Forms.DataGridView.SelectionMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating how the cells of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> can be selected."
  remarks: "Changing the value of the SelectionMode property clears the current selection."
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, SelectionMode, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, and <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> properties. In addition, the code example demonstrates how to set the <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName> properties. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`, and then call the `SetUpDataGridView` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler. Ensure all events are associated with their event handlers.  \n  \n [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/visualbasic/p-system.windows.forms.d_151_1.vb)]\n [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/cpp/p-system.windows.forms.d_151_1.cpp)]\n [!code-cs[System.Windows.Forms.GridViewUnbound#5](~/add/codesnippet/csharp/p-system.windows.forms.d_151_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewSelectionMode SelectionMode { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewSelectionMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref> values. The default is <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.SelectionMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified value when setting this property is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref> value."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified value when setting this property is <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref> or <xref href=&quot;System.Windows.Forms.DataGridViewSelectionMode&quot;></xref> and the <xref:System.Windows.Forms.DataGridViewColumn.SortMode*> property of one or more columns is set to <xref href=&quot;System.Windows.Forms.DataGridViewColumnSortMode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: DataGridView.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.DataGridView.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "This member overrides &lt;xref:System.Windows.Forms.Control.SetBoundsCore%2A?displayProperty=fullName&gt;."
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Left*> property value of the control."
    - id: y
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Top*> property value of the control."
    - id: width
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Width*> property value of the control."
    - id: height
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Height*> property value of the control."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.SetBoundsCore*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "One or both of the width or height values exceeds the maximum value of 8,388,607."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  id: SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)
  nameWithType: DataGridView.SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the currently active cell."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control uses this method whenever it changes the current cell. This method changes the current cell without changing the selection and optionally without validating the previous cell or changing the selection anchor cell. The anchor cell is the first cell of a block of multiple cells that the user can select by holding down the SHIFT key and clicking the last cell of the block.       If `rowIndex` and `columnIndex` are both -1, the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property returns `null`."
  syntax:
    content: protected virtual bool SetCurrentCellAddressCore (int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column containing the cell."
    - id: rowIndex
      type: System.Int32
      description: "The index of the row containing the cell."
    - id: setAnchorCellAddress
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to make the new current cell the anchor cell for a subsequent multicell selection using the SHIFT key; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: validateCurrentCell
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to validate the value in the old current cell and cancel the change if validation fails; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: throughMouseClick
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current cell is being set as a result of a mouse click; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current cell was successfully set; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.SetCurrentCellAddressCore*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1, and <code>rowIndex</code> is not -1.       -or-       <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1, and <code>columnIndex</code> is not -1."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The specified cell has a <xref:System.Windows.Forms.DataGridViewCell.Visible*> property value of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       This method was called for a reason other than the underlying data source being reset, and another thread is currently executing this method."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "The new current cell tried to enter edit mode, but its <xref:System.Windows.Forms.DataGridViewCell.EditType*> property does not indicate a class that derives from <xref href=&quot;System.Windows.Forms.Control&quot;></xref> and implements <xref href=&quot;System.Windows.Forms.IDataGridViewEditingControl&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)
  id: SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SetSelectedCellCore(Int32,Int32,Boolean)
  nameWithType: DataGridView.SetSelectedCellCore(Int32,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetSelectedCellCore(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Changes the selection state of the cell with the specified row and column indexes."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control uses this method whenever it changes the selection state of a cell. The selection state changes without regard to the current <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property value, and without changing the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property value. This is useful when you want to implement your own selection modes."
  syntax:
    content: protected virtual void SetSelectedCellCore (int columnIndex, int rowIndex, bool selected);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column containing the cell."
    - id: rowIndex
      type: System.Int32
      description: "The index of the row containing the cell."
    - id: selected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to select the cell; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to cancel the selection of the cell."
  overload: System.Windows.Forms.DataGridView.SetSelectedCellCore*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1.       -or-       <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)
  id: SetSelectedColumnCore(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SetSelectedColumnCore(Int32,Boolean)
  nameWithType: DataGridView.SetSelectedColumnCore(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetSelectedColumnCore(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Changes the selection state of the column with the specified index."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control uses this method whenever it changes the selection state of a column. The selection state changes without regard to the current <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property value, and without changing the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property value. This is useful when you want to implement your own selection modes."
  syntax:
    content: protected virtual void SetSelectedColumnCore (int columnIndex, bool selected);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The index of the column."
    - id: selected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to select the column; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to cancel the selection of the column."
  overload: System.Windows.Forms.DataGridView.SetSelectedColumnCore*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)
  id: SetSelectedRowCore(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SetSelectedRowCore(Int32,Boolean)
  nameWithType: DataGridView.SetSelectedRowCore(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetSelectedRowCore(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Changes the selection state of the row with the specified index."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control uses this method whenever it changes the selection state of a row. The selection state changes without regard to the current <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> property value, and without changing the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property value. This is useful when you want to implement your own selection modes."
  syntax:
    content: protected virtual void SetSelectedRowCore (int rowIndex, bool selected);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row."
    - id: selected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to select the row; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to cancel the selection of the row."
  overload: System.Windows.Forms.DataGridView.SetSelectedRowCore*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ShowCellErrors
  id: ShowCellErrors
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ShowCellErrors
  nameWithType: DataGridView.ShowCellErrors
  fullName: System.Windows.Forms.DataGridView.ShowCellErrors
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether to show cell errors."
  syntax:
    content: public bool ShowCellErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a red glyph will appear in a cell that fails validation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ShowCellErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ShowCellToolTips
  id: ShowCellToolTips
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ShowCellToolTips
  nameWithType: DataGridView.ShowCellToolTips
  fullName: System.Windows.Forms.DataGridView.ShowCellToolTips
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether or not ToolTips will show when the mouse pointer pauses on a cell."
  remarks: "When the value of this property is `true` and the mouse pointer is over a cell, the cell displays a ToolTip when one of the following conditions is met:      -   The value of the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is not `null` or the value of the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`, and a handler for the <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> event sets the <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=fullName> property to a value other than <xref:System.String.Empty?displayProperty=fullName>.      -   The <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> property of the cell has a value other than <xref:System.String.Empty?displayProperty=fullName>. Setting this property has no effect when there is a <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> event handler because getting the value of the property automatically raises the event and returns the ToolTip text specified in the event handler.      -   The cell value is truncated in the cell display. When the value of the cell <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> property value is <xref:System.String.Empty?displayProperty=fullName>, the full value of the truncated cell value is displayed in the ToolTip."
  syntax:
    content: public bool ShowCellToolTips { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if cell ToolTips are enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ShowCellToolTips*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ShowEditingIcon
  id: ShowEditingIcon
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ShowEditingIcon
  nameWithType: DataGridView.ShowEditingIcon
  fullName: System.Windows.Forms.DataGridView.ShowEditingIcon
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether or not the editing glyph is visible in the row header of the cell being edited."
  remarks: "The row header will display an editing glyph that looks like a pencil when the current cell is in edit mode and the user has made changes to the cell. The editing glyph is colored by using the <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> property of the row header cell. The glyph is not rendered if there is not enough space to display it completely. For example, if the row header cell has its <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property set, the glyph is removed if there is not enough room for both the text and glyph.       The display of the editing glyph is controlled by the value of the <xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A> property in virtual mode. Otherwise, it is controlled by the <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> property.       The standard glyph is not publicly exposed. To customize the glyph, you can create a custom <xref:System.Windows.Forms.DataGridViewRowHeaderCell> class."
  syntax:
    content: public bool ShowEditingIcon { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the editing glyph is visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ShowEditingIcon*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.ShowRowErrors
  id: ShowRowErrors
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: ShowRowErrors
  nameWithType: DataGridView.ShowRowErrors
  fullName: System.Windows.Forms.DataGridView.ShowRowErrors
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether row headers will display error glyphs for each row that contains a data entry error."
  remarks: "The <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> property indicates if there is an error in one of the cells in a row. If <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> is set to a value other than <xref:System.String.Empty>, then an error glyph (![ErrorProvider icon](~/add/media/vberrorprovidericon.gif &quot;ErrorProvider icon&quot;)) is shown in the row header.       The default width of the row header includes enough room to display the error glyph, whether or not the glyph is displayed. If the row header size is adjusted so that there is not enough space to display the glyph completely, the glyph is not rendered.       Because row headers can display both text and glyphs, header content is displayed by priority, as follows:      1.  Text displayed in the row header cell.      2.  The editing glyph.      3.  The error glyph.       For example, if the row width is decreased, the error glyph disappears first, then the standard glyph, then text.       Advanced users can customize the error glyph by developing a custom <xref:System.Windows.Forms.DataGridViewRowHeaderCell> or <xref:System.Windows.Forms.DataGridViewCell> class."
  syntax:
    content: public bool ShowRowErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> indicates there is an error; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.ShowRowErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Sort(IComparer)
  nameWithType: DataGridView.Sort(IComparer)
  fullName: System.Windows.Forms.DataGridView.Sort(IComparer)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sorts the contents of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control using an implementation of the <xref:System.Collections.IComparer> interface."
  remarks: "This method allows advanced customization of the sorting feature of the <xref:System.Windows.Forms.DataGridView> class. In order to implement a highly customized sorting operation, you can write an event handler for the <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick> event and call this method with an instance of a class that implements the <xref:System.Collections.IComparer?displayProperty=fullName> interface as a parameter. In this case, you will typically set the <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=fullName> property to <xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName> to disable automatic sorting and to leave room for a sorting glyph. When sorting by columns set to programmatic sort mode, you must display the sorting glyph yourself by setting the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName> property.       This method works only when the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is not set. When you bind the <xref:System.Windows.Forms.DataGridView> control to an external data source, you must use the sorting operations provided by that data source. When you provide your own data source by implementing virtual mode, you must also handle the sorting operations yourself.       Calling this method automatically sets the <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> property to `null`."
  example:
  - "The following code example demonstrates how to use the Sort method overload in a multiple column sort scenario. In this example, the <xref:System.Collections.IComparer> interface is implemented in the `RowComparer` class.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewIComparerSort#10](~/add/codesnippet/visualbasic/m-system.windows.forms.d_76_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewIComparerSort#10](~/add/codesnippet/csharp/m-system.windows.forms.d_76_1.cs)]"
  syntax:
    content: public virtual void Sort (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "An implementation of <xref:System.Collections.IComparer> that performs the custom sorting operation."
  overload: System.Windows.Forms.DataGridView.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comparer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Forms.DataGridView.VirtualMode*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Windows.Forms.DataGridView.DataSource*> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)
  id: Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Sort(DataGridViewColumn,ListSortDirection)
  nameWithType: DataGridView.Sort(DataGridViewColumn,ListSortDirection)
  fullName: System.Windows.Forms.DataGridView.Sort(DataGridViewColumn,ListSortDirection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sorts the contents of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control in ascending or descending order based on the contents of the specified column."
  remarks: "This method sorts the contents of the <xref:System.Windows.Forms.DataGridView> by comparing values in the specified column. By default, the sort operation will use the <xref:System.Collections.Comparer.Compare%2A> method to compare pairs of cells in the column using the <xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=fullName> property.       For columns with the <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property set to <xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName>, the <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> and <xref:System.Windows.Forms.DataGridView.SortOrder%2A> properties are set automatically and the appropriate sorting glyph is displayed. For columns with the <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property set to <xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName>, you must display the sorting glyph yourself through the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName> property.       You can customize the sorting operation used by this method by handling the <xref:System.Windows.Forms.DataGridView.SortCompare> event. This event occurs only when the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property has not been set.       When the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property has been set, this method works for data-bound columns only. Data-bound columns have had their <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=fullName> property set. This causes the <xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=fullName> property to return `true`.       If your <xref:System.Windows.Forms.DataGridView> control contains both bound and unbound columns, you must implement virtual mode to maintain the values of the unbound columns when the control is sorted by a bound column. You can do this by setting the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property to `true` and handling the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> event. If the column is editable, you should also handle the <xref:System.Windows.Forms.DataGridView.CellValuePushed> event. For more information about virtual mode, see [How to: Implement Virtual Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md). Sorting by unbound columns when the control is data-bound is not supported."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.DataGridView.Sort%2A> in a programmatic sort.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/add/codesnippet/csharp/5d12d47a-9e5a-497e-b283-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/add/codesnippet/visualbasic/5d12d47a-9e5a-497e-b283-_1.vb)]"
  syntax:
    content: public virtual void Sort (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: dataGridViewColumn
      type: System.Windows.Forms.DataGridViewColumn
      description: "The column by which to sort the contents of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "One of the <xref href=&quot;System.ComponentModel.ListSortDirection&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.Sort*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified column is not part of this <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>.       -or-       The <xref:System.Windows.Forms.DataGridView.DataSource*> property has been set and the <xref:System.Windows.Forms.DataGridViewColumn.IsDataBound*> property of the specified column returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataGridViewColumn</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Windows.Forms.DataGridView.VirtualMode*> property is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the <xref:System.Windows.Forms.DataGridViewColumn.IsDataBound*> property of the specified column returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       The object specified by the <xref:System.Windows.Forms.DataGridView.DataSource*> property does not implement the <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref> interface.       -or-       The object specified by the <xref:System.Windows.Forms.DataGridView.DataSource*> property has a &lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A?displayProperty=fullName&gt; property value of <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SortCompare
  id: SortCompare
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SortCompare
  nameWithType: DataGridView.SortCompare
  fullName: System.Windows.Forms.DataGridView.SortCompare
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> compares two cell values to perform a sort operation."
  remarks: "This event occurs only when the <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is not set and the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property value is `false`.       This event compares pairs of cells in the column being sorted. It occurs only when the user clicks the header of a column with a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>, or when you call the <xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29> overload. When this event occurs for a column with a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>, you must display the sorting glyph yourself through the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName> property.       You can use this event to sort rows using the cell values in one column or in multiple columns. Use the <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A> and <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A> properties to compare cell values in the column specified in the <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A> property. Use the <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A> and <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A> properties to access values in other columns through the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the SortCompare in a multiple column sort. This example is part of a larger example provided in [How to: Customize Sorting in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/add/codesnippet/visualbasic/e-system.windows.forms.d_151_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.SortCompare#10](~/add/codesnippet/csharp/e-system.windows.forms.d_151_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare;
    return:
      type: System.Windows.Forms.DataGridViewSortCompareEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Sorted
  id: Sorted
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Sorted
  nameWithType: DataGridView.Sorted
  fullName: System.Windows.Forms.DataGridView.Sorted
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control completes a sorting operation."
  remarks: "This event does not occur when the <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is set to `true` and the control is sorted by an unbound column.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example illustrates how to ensure that the current cell is visible after sorting. This code works only with an unbound <xref:System.Windows.Forms.DataGridView> control. With a <xref:System.Windows.Forms.DataGridView> control bound to an external data source, the current cell is not automatically persisted when sorting.  \n  \n To run this example, paste the following code into a form that contains a <xref:System.Windows.Forms.DataGridView> named `dataGridView1`. In C#, you must also connect the Sorted event to the event handler.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc#150](~/add/codesnippet/csharp/e-system.windows.forms.d_146_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/add/codesnippet/visualbasic/e-system.windows.forms.d_146_1.vb)]"
  syntax:
    content: public event EventHandler Sorted;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SortedColumn
  id: SortedColumn
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SortedColumn
  nameWithType: DataGridView.SortedColumn
  fullName: System.Windows.Forms.DataGridView.SortedColumn
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the column by which the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> contents are currently sorted."
  remarks: "If the <xref:System.Windows.Forms.DataGridView> is not sorted, this property will return `null`.       When the column indicated by this property has a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName>, it will display a sorting glyph based on the value of the <xref:System.Windows.Forms.DataGridView.SortOrder%2A> property.       When the column has a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName>, you must display the sorting glyph yourself through the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName> property.      > [!NOTE] >  The value of this property is not meaningful when you sort the control using custom sorting. For more information about custom sorting, see the <xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29> method and the <xref:System.Windows.Forms.DataGridView.SortCompare> event."
  example:
  - "The following code example demonstrates how to use the SortedColumn property in a programmatic sort.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/add/codesnippet/csharp/p-system.windows.forms.d_287_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_287_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewColumn SortedColumn { get; }
    return:
      type: System.Windows.Forms.DataGridViewColumn
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewColumn&quot;></xref> by which the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> contents are currently sorted."
  overload: System.Windows.Forms.DataGridView.SortedColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.SortOrder
  id: SortOrder
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: SortOrder
  nameWithType: DataGridView.SortOrder
  fullName: System.Windows.Forms.DataGridView.SortOrder
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the items in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control are sorted in ascending or descending order, or are not sorted."
  remarks: "This property is used to determine which sorting glyph appears when the column specified by the <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> property has a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>. When the column has a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>, you must display and hide the sorting glyph yourself through the <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A> property. When the column has a <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> property value of <xref:System.Windows.Forms.DataGridViewColumnSortMode>, you can display the sorting glyph, but space is not reserved for it if the column is automatically resized.      > [!NOTE] >  The value of this property is not meaningful when you sort the control using custom sorting. For more information about custom sorting, see the <xref:System.Windows.Forms.DataGridView.Sort%2A> method and the <xref:System.Windows.Forms.DataGridView.SortCompare> event."
  example:
  - "The following code example demonstrates how to use the SortOrder property in a programmatic sort.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/add/codesnippet/csharp/p-system.windows.forms.d_248_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_248_1.vb)]"
  syntax:
    content: public System.Windows.Forms.SortOrder SortOrder { get; }
    return:
      type: System.Windows.Forms.SortOrder
      description: "One of the <xref href=&quot;System.Windows.Forms.SortOrder&quot;></xref> values."
  overload: System.Windows.Forms.DataGridView.SortOrder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.StandardTab
  id: StandardTab
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: StandardTab
  nameWithType: DataGridView.StandardTab
  fullName: System.Windows.Forms.DataGridView.StandardTab
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control."
  remarks: "Setting this property to `false` allows the TAB key to move the focus through the grid of cells. The following table describes how the cell focus changes when the given TAB key combinations are pressed.      |Key combination|Result|   |---------------------|------------|   |TAB|If the StandardTab property is `false`, the focus moves to the next cell in the row. If the focus is in the last cell in the row, the focus moves to the first cell in the next row. If the focus is in the last cell in the <xref:System.Windows.Forms.DataGridView>, the focus moves to the next control in the tab order.|   |SHIFT+TAB|If StandardTab is `false`, the focus moves to the previous cell in the row. If the focus is in the first cell in the row, the focus moves to the last cell in the previous row. If the focus is in the first cell in the <xref:System.Windows.Forms.DataGridView>, the focus moves to the previous control in the tab order.|   |CTRL+TAB|The focus moves to the next control in the tab order.|"
  syntax:
    content: public bool StandardTab { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the TAB key moves the focus to the next control in the tab order; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.StandardTab*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.StyleChanged
  id: StyleChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: StyleChanged
  nameWithType: DataGridView.StyleChanged
  fullName: System.Windows.Forms.DataGridView.StyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the control style changes."
  remarks: "This event is not relevant to this control.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler StyleChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: DataGridView.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Forms.DataGridView.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "For a description of this member, see <xref:System.ComponentModel.ISupportInitialize.BeginInit*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridView> instance is cast to an <xref:System.ComponentModel.ISupportInitialize> instance."
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This method has already been called for this control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: DataGridView.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Forms.DataGridView.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "For a description of this member, see <xref:System.ComponentModel.ISupportInitialize.EndInit*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.DataGridView> instance is cast to an <xref:System.ComponentModel.ISupportInitialize> instance."
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.Text
  id: Text
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: Text
  nameWithType: DataGridView.Text
  fullName: System.Windows.Forms.DataGridView.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the text associated with the control."
  remarks: "This property is not meaningful for this control."
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "The text associated with the control."
  overload: System.Windows.Forms.DataGridView.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: TextChanged
  nameWithType: DataGridView.TextChanged
  fullName: System.Windows.Forms.DataGridView.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.DataGridView.Text*> property changes."
  remarks: "Although the <xref:System.Windows.Forms.DataGridView.Text%2A> property is not meaningful for this control, its value can be changed, thereby causing this event to occur."
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.TopLeftHeaderCell
  id: TopLeftHeaderCell
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: TopLeftHeaderCell
  nameWithType: DataGridView.TopLeftHeaderCell
  fullName: System.Windows.Forms.DataGridView.TopLeftHeaderCell
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the header cell located in the upper left corner of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "Setting this property allows you to set a value for the cell, associate a shortcut menu with it, or perform any other operations you can perform on a <xref:System.Windows.Forms.DataGridViewHeaderCell>.       In applications designed for use with right-to-left languages, the cell represented by this property is typically in the upper-right corner."
  example:
  - "The following code example uses this property to display a value in the upper-left corner of a <xref:System.Windows.Forms.DataGridView> control. This value labels a child table in a master/detail scenario. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview topic.  \n  \n [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/add/codesnippet/cpp/p-system.windows.forms.d_60_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/add/codesnippet/csharp/p-system.windows.forms.d_60_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/add/codesnippet/visualbasic/p-system.windows.forms.d_60_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewHeaderCell
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewHeaderCell&quot;></xref> located at the upper left corner of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.TopLeftHeaderCell*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)
  id: UpdateCellErrorText(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UpdateCellErrorText(Int32,Int32)
  nameWithType: DataGridView.UpdateCellErrorText(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateCellErrorText(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces the cell at the specified location to update its error text."
  remarks: "Use this method when you maintain cell error text yourself by handling the <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> event. Call this method when you change the stored error text for the specified cell. This will invalidate the cell, forcing the <xref:System.Windows.Forms.DataGridView> control to retrieve the updated error text through the <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> event handler.       Although you can use this method to update errors for header cells, column header cells do not display error glyphs."
  syntax:
    content: public void UpdateCellErrorText (int columnIndex, int rowIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The column index of the cell to update, or -1 to indicate a row header cell."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell to update, or -1 to indicate a column header cell."
  overload: System.Windows.Forms.DataGridView.UpdateCellErrorText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than -1 or greater than the number of columns in the control minus 1.       -or-       <code>rowIndex</code> is less than -1 or greater than the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)
  id: UpdateCellValue(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UpdateCellValue(Int32,Int32)
  nameWithType: DataGridView.UpdateCellValue(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateCellValue(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces the control to update its display of the cell at the specified location based on its new value, applying any automatic sizing modes currently in effect."
  remarks: "Use this method when you maintain cell values in virtual mode and you update a value in your custom data cache outside of a <xref:System.Windows.Forms.DataGridView.CellValuePushed> event handler.       This method invalidates the cell, forcing the control to retrieve the new value through the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> event handler and apply any automatic sizing modes that are in effect."
  syntax:
    content: public void UpdateCellValue (int columnIndex, int rowIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "The zero-based column index of the cell with the new value."
    - id: rowIndex
      type: System.Int32
      description: "The zero-based row index of the cell with the new value."
  overload: System.Windows.Forms.DataGridView.UpdateCellValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>columnIndex</code> is less than zero or greater than the number of columns in the control minus one.       -or-       <code>rowIndex</code> is less than zero or greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)
  id: UpdateRowErrorText(System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UpdateRowErrorText(Int32)
  nameWithType: DataGridView.UpdateRowErrorText(Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateRowErrorText(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces the row at the given row index to update its error text."
  remarks: "This method is useful when you maintain row error text yourself by handling the <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> event. Call this method when you change the stored error text for the specified row. This will force the <xref:System.Windows.Forms.DataGridView> control to retrieve the updated text through the <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> event handler."
  syntax:
    content: public void UpdateRowErrorText (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The zero-based index of the row to update."
  overload: System.Windows.Forms.DataGridView.UpdateRowErrorText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is not in the valid range of 0 to the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)
  id: UpdateRowErrorText(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UpdateRowErrorText(Int32,Int32)
  nameWithType: DataGridView.UpdateRowErrorText(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateRowErrorText(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces the rows in the given range to update their error text."
  remarks: "This method is useful when you maintain row error text yourself by handling the <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> event. Call this method when you change the stored error text for the specified rows. This will force the <xref:System.Windows.Forms.DataGridView> control to retrieve the updated text through the <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> event handler."
  syntax:
    content: public void UpdateRowErrorText (int rowIndexStart, int rowIndexEnd);
    parameters:
    - id: rowIndexStart
      type: System.Int32
      description: "The zero-based index of the first row in the set of rows to update."
    - id: rowIndexEnd
      type: System.Int32
      description: "The zero-based index of the last row in the set of rows to update."
  overload: System.Windows.Forms.DataGridView.UpdateRowErrorText*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndexStart</code> is not in the valid range of 0 to the number of rows in the control minus 1.       -or-       <code>rowIndexEnd</code> is not in the valid range of 0 to the number of rows in the control minus 1.       -or-       <code>rowIndexEnd</code> is less than <code>rowIndexStart</code>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)
  id: UpdateRowHeightInfo(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UpdateRowHeightInfo(Int32,Boolean)
  nameWithType: DataGridView.UpdateRowHeightInfo(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.UpdateRowHeightInfo(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces the specified row or rows to update their height information."
  remarks: "This method is useful when you maintain row heights yourself using handlers for the <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> and <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> events. Call this method whenever you change the stored row heights outside of a <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> event handler. This will force the <xref:System.Windows.Forms.DataGridView> control to retrieve the updated height information through the <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> event handler."
  syntax:
    content: public void UpdateRowHeightInfo (int rowIndex, bool updateToEnd);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The zero-based index of the first row to update."
    - id: updateToEnd
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to update the specified row and all subsequent rows."
  overload: System.Windows.Forms.DataGridView.UpdateRowHeightInfo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is less than 0 and <code>updateToEnd</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       -or-       <code>rowIndex</code> is less than -1 and <code>updateToEnd</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       <code>rowIndex</code> is greater than the highest row index in the <xref:System.Windows.Forms.DataGridView.Rows*> collection."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UserAddedRow
  id: UserAddedRow
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UserAddedRow
  nameWithType: DataGridView.UserAddedRow
  fullName: System.Windows.Forms.DataGridView.UserAddedRow
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user has finished adding a row to the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates how to use the UserAddedRow event to update a label displaying the total number of entries in a <xref:System.Windows.Forms.DataGridView>. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#40](~/add/codesnippet/csharp/e-system.windows.forms.d_92_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#40](~/add/codesnippet/visualbasic/e-system.windows.forms.d_92_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UserDeletedRow
  id: UserDeletedRow
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UserDeletedRow
  nameWithType: DataGridView.UserDeletedRow
  fullName: System.Windows.Forms.DataGridView.UserDeletedRow
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user has finished deleting a row from the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: 'For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the UserDeletedRow event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`. Then ensure that the event handler is associated with the UserDeletedRow event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#368](~/add/codesnippet/csharp/e-system.windows.forms.d_30_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#368](~/add/codesnippet/visualbasic/e-system.windows.forms.d_30_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow;
    return:
      type: System.Windows.Forms.DataGridViewRowEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UserDeletingRow
  id: UserDeletingRow
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UserDeletingRow
  nameWithType: DataGridView.UserDeletingRow
  fullName: System.Windows.Forms.DataGridView.UserDeletingRow
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user deletes a row from the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "This event can be canceled to prevent a row deletion from being completed.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the UserDeletingRow event to cancel the deletion of rows from the <xref:System.Windows.Forms.DataGridView> if the starting balance row is included in the selection. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridView.SelectionChanged> event.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectionSum#20](~/add/codesnippet/csharp/e-system.windows.forms.d_140_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/add/codesnippet/visualbasic/e-system.windows.forms.d_140_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow;
    return:
      type: System.Windows.Forms.DataGridViewRowCancelEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.UserSetCursor
  id: UserSetCursor
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: UserSetCursor
  nameWithType: DataGridView.UserSetCursor
  fullName: System.Windows.Forms.DataGridView.UserSetCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the default or user-specified value of the <xref:System.Windows.Forms.Control.Cursor*> property."
  remarks: "Although you can set the value of the <xref:System.Windows.Forms.Control.Cursor%2A> property, its value can change depending on the location of the mouse pointer. Use this property to retrieve the value of the <xref:System.Windows.Forms.Control.Cursor%2A> property in its normal state, which is either its default value, or a value specified in code."
  syntax:
    content: public System.Windows.Forms.Cursor UserSetCursor { get; }
    return:
      type: System.Windows.Forms.Cursor
      description: "A <xref href=&quot;System.Windows.Forms.Cursor&quot;></xref> representing the normal value of the <xref:System.Windows.Forms.Control.Cursor*> property."
  overload: System.Windows.Forms.DataGridView.UserSetCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.VerticalScrollBar
  id: VerticalScrollBar
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: VerticalScrollBar
  nameWithType: DataGridView.VerticalScrollBar
  fullName: System.Windows.Forms.DataGridView.VerticalScrollBar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the vertical scroll bar of the control."
  syntax:
    content: protected System.Windows.Forms.ScrollBar VerticalScrollBar { get; }
    return:
      type: System.Windows.Forms.ScrollBar
      description: "A <xref href=&quot;System.Windows.Forms.ScrollBar&quot;></xref> representing the vertical scroll bar."
  overload: System.Windows.Forms.DataGridView.VerticalScrollBar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.VerticalScrollingOffset
  id: VerticalScrollingOffset
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: VerticalScrollingOffset
  nameWithType: DataGridView.VerticalScrollingOffset
  fullName: System.Windows.Forms.DataGridView.VerticalScrollingOffset
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the number of pixels by which the control is scrolled vertically."
  syntax:
    content: public int VerticalScrollingOffset { get; }
    return:
      type: System.Int32
      description: "The number of pixels by which the control is scrolled vertically."
  overload: System.Windows.Forms.DataGridView.VerticalScrollingOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.VirtualMode
  id: VirtualMode
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: VirtualMode
  nameWithType: DataGridView.VirtualMode
  fullName: System.Windows.Forms.DataGridView.VirtualMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether you have provided your own data-management operations for the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "Virtual mode is designed for use with very large stores of data. When the VirtualMode property is `true`, you create a <xref:System.Windows.Forms.DataGridView> with a set number of rows and columns and then handle the <xref:System.Windows.Forms.DataGridView.CellValueNeeded> event to populate the cells. Virtual mode requires implementation of an underlying data cache to handle the population, editing, and deletion of <xref:System.Windows.Forms.DataGridView> cells based on actions of the user. For more information about implementing virtual mode, see [How to: Implement Virtual Mode in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       You must use virtual mode to maintain the values of unbound columns when the <xref:System.Windows.Forms.DataGridView> control is in bound mode. Sorting by unbound columns in bound mode is not supported."
  example:
  - "The following code example code uses virtual mode to create a table of positive integers.  \n  \n [!code-cs[System.Windows.Forms.DataGridView._Virtual#0](~/add/codesnippet/csharp/p-system.windows.forms.d_377_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView._Virtual#0](~/add/codesnippet/visualbasic/p-system.windows.forms.d_377_1.vb)]"
  syntax:
    content: public bool VirtualMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> uses data-management operations that you provide; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridView.VirtualMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.DataGridView
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: DataGridView.WndProc(Message)
  fullName: System.Windows.Forms.DataGridView.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes window messages."
  remarks: "For more information, see the <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=fullName> method on the base class."
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;></xref>, passed by reference, that represents the window message to process."
  overload: System.Windows.Forms.DataGridView.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.Control
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.DataGridView.#ctor
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataGridView()
  nameWithType: DataGridView.DataGridView()
  fullName: System.Windows.Forms.DataGridView.DataGridView()
- uid: System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AccessibilityNotifyCurrentCellChanged(Point)
  nameWithType: DataGridView.AccessibilityNotifyCurrentCellChanged(Point)
  fullName: System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)
  nameWithType: DataGridView.AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridViewAdvancedBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAdvancedBorderStyle
  nameWithType: DataGridViewAdvancedBorderStyle
  fullName: System.Windows.Forms.DataGridViewAdvancedBorderStyle
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdjustedTopLeftHeaderBorderStyle
  nameWithType: DataGridView.AdjustedTopLeftHeaderBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle
- uid: System.Windows.Forms.DataGridView.AdvancedCellBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdvancedCellBorderStyle
  nameWithType: DataGridView.AdvancedCellBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdvancedCellBorderStyle
- uid: System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdvancedColumnHeadersBorderStyle
  nameWithType: DataGridView.AdvancedColumnHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdvancedRowHeadersBorderStyle
  nameWithType: DataGridView.AdvancedRowHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.AllowUserToAddRows
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToAddRows
  nameWithType: DataGridView.AllowUserToAddRows
  fullName: System.Windows.Forms.DataGridView.AllowUserToAddRows
- uid: System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToAddRowsChanged
  nameWithType: DataGridView.AllowUserToAddRowsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.DataGridView.AllowUserToDeleteRows
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToDeleteRows
  nameWithType: DataGridView.AllowUserToDeleteRows
  fullName: System.Windows.Forms.DataGridView.AllowUserToDeleteRows
- uid: System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToDeleteRowsChanged
  nameWithType: DataGridView.AllowUserToDeleteRowsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged
- uid: System.Windows.Forms.DataGridView.AllowUserToOrderColumns
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToOrderColumns
  nameWithType: DataGridView.AllowUserToOrderColumns
  fullName: System.Windows.Forms.DataGridView.AllowUserToOrderColumns
- uid: System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToOrderColumnsChanged
  nameWithType: DataGridView.AllowUserToOrderColumnsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeColumns
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToResizeColumns
  nameWithType: DataGridView.AllowUserToResizeColumns
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeColumns
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToResizeColumnsChanged
  nameWithType: DataGridView.AllowUserToResizeColumnsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeRows
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToResizeRows
  nameWithType: DataGridView.AllowUserToResizeRows
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeRows
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToResizeRowsChanged
  nameWithType: DataGridView.AllowUserToResizeRowsChanged
  fullName: System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged
- uid: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AlternatingRowsDefaultCellStyle
  nameWithType: DataGridView.AlternatingRowsDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AlternatingRowsDefaultCellStyleChanged
  nameWithType: DataGridView.AlternatingRowsDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AreAllCellsSelected(Boolean)
  nameWithType: DataGridView.AreAllCellsSelected(Boolean)
  fullName: System.Windows.Forms.DataGridView.AreAllCellsSelected(Boolean)
- uid: System.Windows.Forms.DataGridView.AutoGenerateColumns
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: DataGridView.AutoGenerateColumns
  fullName: System.Windows.Forms.DataGridView.AutoGenerateColumns
- uid: System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoGenerateColumnsChanged
  nameWithType: DataGridView.AutoGenerateColumnsChanged
  fullName: System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumn(Int32)
  nameWithType: DataGridView.AutoResizeColumn(Int32)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumn(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)
  nameWithType: DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)
- uid: System.Windows.Forms.DataGridViewAutoSizeColumnMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeColumnMode
  nameWithType: DataGridViewAutoSizeColumnMode
  fullName: System.Windows.Forms.DataGridViewAutoSizeColumnMode
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)
  nameWithType: DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumnHeadersHeight()
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight()
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight()
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumnHeadersHeight(Int32)
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight(Int32)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(Int32)
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumnHeadersHeight(Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight(Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(Boolean,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumns()
  nameWithType: DataGridView.AutoResizeColumns()
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumns()
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumns(DataGridViewAutoSizeColumnsMode)
  nameWithType: DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode)
- uid: System.Windows.Forms.DataGridViewAutoSizeColumnsMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeColumnsMode
  nameWithType: DataGridViewAutoSizeColumnsMode
  fullName: System.Windows.Forms.DataGridViewAutoSizeColumnsMode
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)
  nameWithType: DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRow(Int32)
  nameWithType: DataGridView.AutoResizeRow(Int32)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRow(Int32)
- uid: System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)
  nameWithType: DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)
- uid: System.Windows.Forms.DataGridViewAutoSizeRowMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeRowMode
  nameWithType: DataGridViewAutoSizeRowMode
  fullName: System.Windows.Forms.DataGridViewAutoSizeRowMode
- uid: System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)
  nameWithType: DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)
- uid: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowHeadersWidthSizeMode
  nameWithType: DataGridViewRowHeadersWidthSizeMode
  fullName: System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  nameWithType: DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeRows
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRows()
  nameWithType: DataGridView.AutoResizeRows()
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows()
- uid: System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRows(DataGridViewAutoSizeRowsMode)
  nameWithType: DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode)
- uid: System.Windows.Forms.DataGridViewAutoSizeRowsMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeRowsMode
  nameWithType: DataGridViewAutoSizeRowsMode
  fullName: System.Windows.Forms.DataGridViewAutoSizeRowsMode
- uid: System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)
  nameWithType: DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)
  nameWithType: DataGridView.AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)
  fullName: System.Windows.Forms.DataGridView.AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)
- uid: System.Windows.Forms.DataGridView.AutoSize
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSize
  nameWithType: DataGridView.AutoSize
  fullName: System.Windows.Forms.DataGridView.AutoSize
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeColumnModeChanged
  nameWithType: DataGridView.AutoSizeColumnModeChanged
  fullName: System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged
- uid: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeColumnModeEventHandler
  nameWithType: DataGridViewAutoSizeColumnModeEventHandler
  fullName: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnsMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeColumnsMode
  nameWithType: DataGridView.AutoSizeColumnsMode
  fullName: System.Windows.Forms.DataGridView.AutoSizeColumnsMode
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeColumnsModeChanged
  nameWithType: DataGridView.AutoSizeColumnsModeChanged
  fullName: System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged
- uid: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeColumnsModeEventHandler
  nameWithType: DataGridViewAutoSizeColumnsModeEventHandler
  fullName: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler
- uid: System.Windows.Forms.DataGridView.AutoSizeRowsMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeRowsMode
  nameWithType: DataGridView.AutoSizeRowsMode
  fullName: System.Windows.Forms.DataGridView.AutoSizeRowsMode
- uid: System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeRowsModeChanged
  nameWithType: DataGridView.AutoSizeRowsModeChanged
  fullName: System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged
- uid: System.Windows.Forms.DataGridViewAutoSizeModeEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeModeEventHandler
  nameWithType: DataGridViewAutoSizeModeEventHandler
  fullName: System.Windows.Forms.DataGridViewAutoSizeModeEventHandler
- uid: System.Windows.Forms.DataGridView.BackColor
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackColor
  nameWithType: DataGridView.BackColor
  fullName: System.Windows.Forms.DataGridView.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataGridView.BackColorChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackColorChanged
  nameWithType: DataGridView.BackColorChanged
  fullName: System.Windows.Forms.DataGridView.BackColorChanged
- uid: System.Windows.Forms.DataGridView.BackgroundColor
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundColor
  nameWithType: DataGridView.BackgroundColor
  fullName: System.Windows.Forms.DataGridView.BackgroundColor
- uid: System.Windows.Forms.DataGridView.BackgroundColorChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundColorChanged
  nameWithType: DataGridView.BackgroundColorChanged
  fullName: System.Windows.Forms.DataGridView.BackgroundColorChanged
- uid: System.Windows.Forms.DataGridView.BackgroundImage
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundImage
  nameWithType: DataGridView.BackgroundImage
  fullName: System.Windows.Forms.DataGridView.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.DataGridView.BackgroundImageChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: DataGridView.BackgroundImageChanged
  fullName: System.Windows.Forms.DataGridView.BackgroundImageChanged
- uid: System.Windows.Forms.DataGridView.BackgroundImageLayout
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: DataGridView.BackgroundImageLayout
  fullName: System.Windows.Forms.DataGridView.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: DataGridView.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BeginEdit(Boolean)
  nameWithType: DataGridView.BeginEdit(Boolean)
  fullName: System.Windows.Forms.DataGridView.BeginEdit(Boolean)
- uid: System.Windows.Forms.DataGridView.BorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BorderStyle
  nameWithType: DataGridView.BorderStyle
  fullName: System.Windows.Forms.DataGridView.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.DataGridView.BorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BorderStyleChanged
  nameWithType: DataGridView.BorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.BorderStyleChanged
- uid: System.Windows.Forms.DataGridView.CancelEdit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CancelEdit()
  nameWithType: DataGridView.CancelEdit()
  fullName: System.Windows.Forms.DataGridView.CancelEdit()
- uid: System.Windows.Forms.DataGridView.CancelRowEdit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CancelRowEdit
  nameWithType: DataGridView.CancelRowEdit
  fullName: System.Windows.Forms.DataGridView.CancelRowEdit
- uid: System.Windows.Forms.QuestionEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: QuestionEventHandler
  nameWithType: QuestionEventHandler
  fullName: System.Windows.Forms.QuestionEventHandler
- uid: System.Windows.Forms.DataGridView.CanEnableIme
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CanEnableIme
  nameWithType: DataGridView.CanEnableIme
  fullName: System.Windows.Forms.DataGridView.CanEnableIme
- uid: System.Windows.Forms.DataGridView.CellBeginEdit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellBeginEdit
  nameWithType: DataGridView.CellBeginEdit
  fullName: System.Windows.Forms.DataGridView.CellBeginEdit
- uid: System.Windows.Forms.DataGridViewCellCancelEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellCancelEventHandler
  nameWithType: DataGridViewCellCancelEventHandler
  fullName: System.Windows.Forms.DataGridViewCellCancelEventHandler
- uid: System.Windows.Forms.DataGridView.CellBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellBorderStyle
  nameWithType: DataGridView.CellBorderStyle
  fullName: System.Windows.Forms.DataGridView.CellBorderStyle
- uid: System.Windows.Forms.DataGridViewCellBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellBorderStyle
  nameWithType: DataGridViewCellBorderStyle
  fullName: System.Windows.Forms.DataGridViewCellBorderStyle
- uid: System.Windows.Forms.DataGridView.CellBorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellBorderStyleChanged
  nameWithType: DataGridView.CellBorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.CellBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.CellClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellClick
  nameWithType: DataGridView.CellClick
  fullName: System.Windows.Forms.DataGridView.CellClick
- uid: System.Windows.Forms.DataGridViewCellEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellEventHandler
  nameWithType: DataGridViewCellEventHandler
  fullName: System.Windows.Forms.DataGridViewCellEventHandler
- uid: System.Windows.Forms.DataGridView.CellContentClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellContentClick
  nameWithType: DataGridView.CellContentClick
  fullName: System.Windows.Forms.DataGridView.CellContentClick
- uid: System.Windows.Forms.DataGridView.CellContentDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellContentDoubleClick
  nameWithType: DataGridView.CellContentDoubleClick
  fullName: System.Windows.Forms.DataGridView.CellContentDoubleClick
- uid: System.Windows.Forms.DataGridView.CellContextMenuStripChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellContextMenuStripChanged
  nameWithType: DataGridView.CellContextMenuStripChanged
  fullName: System.Windows.Forms.DataGridView.CellContextMenuStripChanged
- uid: System.Windows.Forms.DataGridView.CellContextMenuStripNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellContextMenuStripNeeded
  nameWithType: DataGridView.CellContextMenuStripNeeded
  fullName: System.Windows.Forms.DataGridView.CellContextMenuStripNeeded
- uid: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellContextMenuStripNeededEventHandler
  nameWithType: DataGridViewCellContextMenuStripNeededEventHandler
  fullName: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler
- uid: System.Windows.Forms.DataGridView.CellDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellDoubleClick
  nameWithType: DataGridView.CellDoubleClick
  fullName: System.Windows.Forms.DataGridView.CellDoubleClick
- uid: System.Windows.Forms.DataGridView.CellEndEdit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellEndEdit
  nameWithType: DataGridView.CellEndEdit
  fullName: System.Windows.Forms.DataGridView.CellEndEdit
- uid: System.Windows.Forms.DataGridView.CellEnter
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellEnter
  nameWithType: DataGridView.CellEnter
  fullName: System.Windows.Forms.DataGridView.CellEnter
- uid: System.Windows.Forms.DataGridView.CellErrorTextChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellErrorTextChanged
  nameWithType: DataGridView.CellErrorTextChanged
  fullName: System.Windows.Forms.DataGridView.CellErrorTextChanged
- uid: System.Windows.Forms.DataGridView.CellErrorTextNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellErrorTextNeeded
  nameWithType: DataGridView.CellErrorTextNeeded
  fullName: System.Windows.Forms.DataGridView.CellErrorTextNeeded
- uid: System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellErrorTextNeededEventHandler
  nameWithType: DataGridViewCellErrorTextNeededEventHandler
  fullName: System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler
- uid: System.Windows.Forms.DataGridView.CellFormatting
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellFormatting
  nameWithType: DataGridView.CellFormatting
  fullName: System.Windows.Forms.DataGridView.CellFormatting
- uid: System.Windows.Forms.DataGridViewCellFormattingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellFormattingEventHandler
  nameWithType: DataGridViewCellFormattingEventHandler
  fullName: System.Windows.Forms.DataGridViewCellFormattingEventHandler
- uid: System.Windows.Forms.DataGridView.CellLeave
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellLeave
  nameWithType: DataGridView.CellLeave
  fullName: System.Windows.Forms.DataGridView.CellLeave
- uid: System.Windows.Forms.DataGridView.CellMouseClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseClick
  nameWithType: DataGridView.CellMouseClick
  fullName: System.Windows.Forms.DataGridView.CellMouseClick
- uid: System.Windows.Forms.DataGridViewCellMouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellMouseEventHandler
  nameWithType: DataGridViewCellMouseEventHandler
  fullName: System.Windows.Forms.DataGridViewCellMouseEventHandler
- uid: System.Windows.Forms.DataGridView.CellMouseDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseDoubleClick
  nameWithType: DataGridView.CellMouseDoubleClick
  fullName: System.Windows.Forms.DataGridView.CellMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.CellMouseDown
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseDown
  nameWithType: DataGridView.CellMouseDown
  fullName: System.Windows.Forms.DataGridView.CellMouseDown
- uid: System.Windows.Forms.DataGridView.CellMouseEnter
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseEnter
  nameWithType: DataGridView.CellMouseEnter
  fullName: System.Windows.Forms.DataGridView.CellMouseEnter
- uid: System.Windows.Forms.DataGridView.CellMouseLeave
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseLeave
  nameWithType: DataGridView.CellMouseLeave
  fullName: System.Windows.Forms.DataGridView.CellMouseLeave
- uid: System.Windows.Forms.DataGridView.CellMouseMove
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseMove
  nameWithType: DataGridView.CellMouseMove
  fullName: System.Windows.Forms.DataGridView.CellMouseMove
- uid: System.Windows.Forms.DataGridView.CellMouseUp
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellMouseUp
  nameWithType: DataGridView.CellMouseUp
  fullName: System.Windows.Forms.DataGridView.CellMouseUp
- uid: System.Windows.Forms.DataGridView.CellPainting
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellPainting
  nameWithType: DataGridView.CellPainting
  fullName: System.Windows.Forms.DataGridView.CellPainting
- uid: System.Windows.Forms.DataGridViewCellPaintingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellPaintingEventHandler
  nameWithType: DataGridViewCellPaintingEventHandler
  fullName: System.Windows.Forms.DataGridViewCellPaintingEventHandler
- uid: System.Windows.Forms.DataGridView.CellParsing
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellParsing
  nameWithType: DataGridView.CellParsing
  fullName: System.Windows.Forms.DataGridView.CellParsing
- uid: System.Windows.Forms.DataGridViewCellParsingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellParsingEventHandler
  nameWithType: DataGridViewCellParsingEventHandler
  fullName: System.Windows.Forms.DataGridViewCellParsingEventHandler
- uid: System.Windows.Forms.DataGridView.CellStateChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellStateChanged
  nameWithType: DataGridView.CellStateChanged
  fullName: System.Windows.Forms.DataGridView.CellStateChanged
- uid: System.Windows.Forms.DataGridViewCellStateChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStateChangedEventHandler
  nameWithType: DataGridViewCellStateChangedEventHandler
  fullName: System.Windows.Forms.DataGridViewCellStateChangedEventHandler
- uid: System.Windows.Forms.DataGridView.CellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellStyleChanged
  nameWithType: DataGridView.CellStyleChanged
  fullName: System.Windows.Forms.DataGridView.CellStyleChanged
- uid: System.Windows.Forms.DataGridView.CellStyleContentChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellStyleContentChanged
  nameWithType: DataGridView.CellStyleContentChanged
  fullName: System.Windows.Forms.DataGridView.CellStyleContentChanged
- uid: System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyleContentChangedEventHandler
  nameWithType: DataGridViewCellStyleContentChangedEventHandler
  fullName: System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler
- uid: System.Windows.Forms.DataGridView.CellToolTipTextChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellToolTipTextChanged
  nameWithType: DataGridView.CellToolTipTextChanged
  fullName: System.Windows.Forms.DataGridView.CellToolTipTextChanged
- uid: System.Windows.Forms.DataGridView.CellToolTipTextNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellToolTipTextNeeded
  nameWithType: DataGridView.CellToolTipTextNeeded
  fullName: System.Windows.Forms.DataGridView.CellToolTipTextNeeded
- uid: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellToolTipTextNeededEventHandler
  nameWithType: DataGridViewCellToolTipTextNeededEventHandler
  fullName: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler
- uid: System.Windows.Forms.DataGridView.CellValidated
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellValidated
  nameWithType: DataGridView.CellValidated
  fullName: System.Windows.Forms.DataGridView.CellValidated
- uid: System.Windows.Forms.DataGridView.CellValidating
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellValidating
  nameWithType: DataGridView.CellValidating
  fullName: System.Windows.Forms.DataGridView.CellValidating
- uid: System.Windows.Forms.DataGridViewCellValidatingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellValidatingEventHandler
  nameWithType: DataGridViewCellValidatingEventHandler
  fullName: System.Windows.Forms.DataGridViewCellValidatingEventHandler
- uid: System.Windows.Forms.DataGridView.CellValueChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellValueChanged
  nameWithType: DataGridView.CellValueChanged
  fullName: System.Windows.Forms.DataGridView.CellValueChanged
- uid: System.Windows.Forms.DataGridView.CellValueNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellValueNeeded
  nameWithType: DataGridView.CellValueNeeded
  fullName: System.Windows.Forms.DataGridView.CellValueNeeded
- uid: System.Windows.Forms.DataGridViewCellValueEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellValueEventHandler
  nameWithType: DataGridViewCellValueEventHandler
  fullName: System.Windows.Forms.DataGridViewCellValueEventHandler
- uid: System.Windows.Forms.DataGridView.CellValuePushed
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellValuePushed
  nameWithType: DataGridView.CellValuePushed
  fullName: System.Windows.Forms.DataGridView.CellValuePushed
- uid: System.Windows.Forms.DataGridView.ClearSelection
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ClearSelection()
  nameWithType: DataGridView.ClearSelection()
  fullName: System.Windows.Forms.DataGridView.ClearSelection()
- uid: System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ClearSelection(Int32,Int32,Boolean)
  nameWithType: DataGridView.ClearSelection(Int32,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.ClearSelection(Int32,Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.ClipboardCopyMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ClipboardCopyMode
  nameWithType: DataGridView.ClipboardCopyMode
  fullName: System.Windows.Forms.DataGridView.ClipboardCopyMode
- uid: System.Windows.Forms.DataGridViewClipboardCopyMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewClipboardCopyMode
  nameWithType: DataGridViewClipboardCopyMode
  fullName: System.Windows.Forms.DataGridViewClipboardCopyMode
- uid: System.Windows.Forms.DataGridView.ColumnAdded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnAdded
  nameWithType: DataGridView.ColumnAdded
  fullName: System.Windows.Forms.DataGridView.ColumnAdded
- uid: System.Windows.Forms.DataGridViewColumnEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnEventHandler
  nameWithType: DataGridViewColumnEventHandler
  fullName: System.Windows.Forms.DataGridViewColumnEventHandler
- uid: System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnContextMenuStripChanged
  nameWithType: DataGridView.ColumnContextMenuStripChanged
  fullName: System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged
- uid: System.Windows.Forms.DataGridView.ColumnCount
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnCount
  nameWithType: DataGridView.ColumnCount
  fullName: System.Windows.Forms.DataGridView.ColumnCount
- uid: System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnDataPropertyNameChanged
  nameWithType: DataGridView.ColumnDataPropertyNameChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged
- uid: System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnDefaultCellStyleChanged
  nameWithType: DataGridView.ColumnDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnDisplayIndexChanged
  nameWithType: DataGridView.ColumnDisplayIndexChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged
- uid: System.Windows.Forms.DataGridView.ColumnDividerDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnDividerDoubleClick
  nameWithType: DataGridView.ColumnDividerDoubleClick
  fullName: System.Windows.Forms.DataGridView.ColumnDividerDoubleClick
- uid: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnDividerDoubleClickEventHandler
  nameWithType: DataGridViewColumnDividerDoubleClickEventHandler
  fullName: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler
- uid: System.Windows.Forms.DataGridView.ColumnDividerWidthChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnDividerWidthChanged
  nameWithType: DataGridView.ColumnDividerWidthChanged
  fullName: System.Windows.Forms.DataGridView.ColumnDividerWidthChanged
- uid: System.Windows.Forms.DataGridView.ColumnHeaderCellChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeaderCellChanged
  nameWithType: DataGridView.ColumnHeaderCellChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeaderCellChanged
- uid: System.Windows.Forms.DataGridView.ColumnHeaderMouseClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeaderMouseClick
  nameWithType: DataGridView.ColumnHeaderMouseClick
  fullName: System.Windows.Forms.DataGridView.ColumnHeaderMouseClick
- uid: System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeaderMouseDoubleClick
  nameWithType: DataGridView.ColumnHeaderMouseDoubleClick
  fullName: System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersBorderStyle
  nameWithType: DataGridView.ColumnHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle
- uid: System.Windows.Forms.DataGridViewHeaderBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewHeaderBorderStyle
  nameWithType: DataGridViewHeaderBorderStyle
  fullName: System.Windows.Forms.DataGridViewHeaderBorderStyle
- uid: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersBorderStyleChanged
  nameWithType: DataGridView.ColumnHeadersBorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersDefaultCellStyle
  nameWithType: DataGridView.ColumnHeadersDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersDefaultCellStyleChanged
  nameWithType: DataGridView.ColumnHeadersDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeight
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersHeight
  nameWithType: DataGridView.ColumnHeadersHeight
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeight
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersHeightChanged
  nameWithType: DataGridView.ColumnHeadersHeightChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersHeightSizeMode
  nameWithType: DataGridView.ColumnHeadersHeightSizeMode
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode
- uid: System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnHeadersHeightSizeMode
  nameWithType: DataGridViewColumnHeadersHeightSizeMode
  fullName: System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersHeightSizeModeChanged
  nameWithType: DataGridView.ColumnHeadersHeightSizeModeChanged
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged
- uid: System.Windows.Forms.DataGridView.ColumnHeadersVisible
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersVisible
  nameWithType: DataGridView.ColumnHeadersVisible
  fullName: System.Windows.Forms.DataGridView.ColumnHeadersVisible
- uid: System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnMinimumWidthChanged
  nameWithType: DataGridView.ColumnMinimumWidthChanged
  fullName: System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged
- uid: System.Windows.Forms.DataGridView.ColumnNameChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnNameChanged
  nameWithType: DataGridView.ColumnNameChanged
  fullName: System.Windows.Forms.DataGridView.ColumnNameChanged
- uid: System.Windows.Forms.DataGridView.ColumnRemoved
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnRemoved
  nameWithType: DataGridView.ColumnRemoved
  fullName: System.Windows.Forms.DataGridView.ColumnRemoved
- uid: System.Windows.Forms.DataGridView.Columns
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Columns
  nameWithType: DataGridView.Columns
  fullName: System.Windows.Forms.DataGridView.Columns
- uid: System.Windows.Forms.DataGridViewColumnCollection
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnCollection
  nameWithType: DataGridViewColumnCollection
  fullName: System.Windows.Forms.DataGridViewColumnCollection
- uid: System.Windows.Forms.DataGridView.ColumnSortModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnSortModeChanged
  nameWithType: DataGridView.ColumnSortModeChanged
  fullName: System.Windows.Forms.DataGridView.ColumnSortModeChanged
- uid: System.Windows.Forms.DataGridView.ColumnStateChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnStateChanged
  nameWithType: DataGridView.ColumnStateChanged
  fullName: System.Windows.Forms.DataGridView.ColumnStateChanged
- uid: System.Windows.Forms.DataGridViewColumnStateChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnStateChangedEventHandler
  nameWithType: DataGridViewColumnStateChangedEventHandler
  fullName: System.Windows.Forms.DataGridViewColumnStateChangedEventHandler
- uid: System.Windows.Forms.DataGridView.ColumnToolTipTextChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnToolTipTextChanged
  nameWithType: DataGridView.ColumnToolTipTextChanged
  fullName: System.Windows.Forms.DataGridView.ColumnToolTipTextChanged
- uid: System.Windows.Forms.DataGridView.ColumnWidthChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnWidthChanged
  nameWithType: DataGridView.ColumnWidthChanged
  fullName: System.Windows.Forms.DataGridView.ColumnWidthChanged
- uid: System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CommitEdit(DataGridViewDataErrorContexts)
  nameWithType: DataGridView.CommitEdit(DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridView.CommitEdit(DataGridViewDataErrorContexts)
- uid: System.Windows.Forms.DataGridViewDataErrorContexts
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewDataErrorContexts
  nameWithType: DataGridViewDataErrorContexts
  fullName: System.Windows.Forms.DataGridViewDataErrorContexts
- uid: System.Windows.Forms.DataGridView.CreateAccessibilityInstance
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateAccessibilityInstance()
  nameWithType: DataGridView.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.DataGridView.CreateAccessibilityInstance()
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.DataGridView.CreateColumnsInstance
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateColumnsInstance()
  nameWithType: DataGridView.CreateColumnsInstance()
  fullName: System.Windows.Forms.DataGridView.CreateColumnsInstance()
- uid: System.Windows.Forms.DataGridView.CreateControlsInstance
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateControlsInstance()
  nameWithType: DataGridView.CreateControlsInstance()
  fullName: System.Windows.Forms.DataGridView.CreateControlsInstance()
- uid: System.Windows.Forms.Control.ControlCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection
  fullName: System.Windows.Forms.Control+ControlCollection
- uid: System.Windows.Forms.DataGridView.CreateRowsInstance
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateRowsInstance()
  nameWithType: DataGridView.CreateRowsInstance()
  fullName: System.Windows.Forms.DataGridView.CreateRowsInstance()
- uid: System.Windows.Forms.DataGridViewRowCollection
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowCollection
  nameWithType: DataGridViewRowCollection
  fullName: System.Windows.Forms.DataGridViewRowCollection
- uid: System.Windows.Forms.DataGridView.CurrentCell
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentCell
  nameWithType: DataGridView.CurrentCell
  fullName: System.Windows.Forms.DataGridView.CurrentCell
- uid: System.Windows.Forms.DataGridViewCell
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCell
  nameWithType: DataGridViewCell
  fullName: System.Windows.Forms.DataGridViewCell
- uid: System.Windows.Forms.DataGridView.CurrentCellAddress
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentCellAddress
  nameWithType: DataGridView.CurrentCellAddress
  fullName: System.Windows.Forms.DataGridView.CurrentCellAddress
- uid: System.Windows.Forms.DataGridView.CurrentCellChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentCellChanged
  nameWithType: DataGridView.CurrentCellChanged
  fullName: System.Windows.Forms.DataGridView.CurrentCellChanged
- uid: System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentCellDirtyStateChanged
  nameWithType: DataGridView.CurrentCellDirtyStateChanged
  fullName: System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged
- uid: System.Windows.Forms.DataGridView.CurrentRow
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentRow
  nameWithType: DataGridView.CurrentRow
  fullName: System.Windows.Forms.DataGridView.CurrentRow
- uid: System.Windows.Forms.DataGridViewRow
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRow
  nameWithType: DataGridViewRow
  fullName: System.Windows.Forms.DataGridViewRow
- uid: System.Windows.Forms.DataGridView.DataBindingComplete
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataBindingComplete
  nameWithType: DataGridView.DataBindingComplete
  fullName: System.Windows.Forms.DataGridView.DataBindingComplete
- uid: System.Windows.Forms.DataGridViewBindingCompleteEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewBindingCompleteEventHandler
  nameWithType: DataGridViewBindingCompleteEventHandler
  fullName: System.Windows.Forms.DataGridViewBindingCompleteEventHandler
- uid: System.Windows.Forms.DataGridView.DataError
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataError
  nameWithType: DataGridView.DataError
  fullName: System.Windows.Forms.DataGridView.DataError
- uid: System.Windows.Forms.DataGridViewDataErrorEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewDataErrorEventHandler
  nameWithType: DataGridViewDataErrorEventHandler
  fullName: System.Windows.Forms.DataGridViewDataErrorEventHandler
- uid: System.Windows.Forms.DataGridView.DataMember
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataMember
  nameWithType: DataGridView.DataMember
  fullName: System.Windows.Forms.DataGridView.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataGridView.DataMemberChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataMemberChanged
  nameWithType: DataGridView.DataMemberChanged
  fullName: System.Windows.Forms.DataGridView.DataMemberChanged
- uid: System.Windows.Forms.DataGridView.DataSource
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataSource
  nameWithType: DataGridView.DataSource
  fullName: System.Windows.Forms.DataGridView.DataSource
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.DataGridView.DataSourceChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataSourceChanged
  nameWithType: DataGridView.DataSourceChanged
  fullName: System.Windows.Forms.DataGridView.DataSourceChanged
- uid: System.Windows.Forms.DataGridView.DefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DefaultCellStyle
  nameWithType: DataGridView.DefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.DefaultCellStyle
- uid: System.Windows.Forms.DataGridView.DefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DefaultCellStyleChanged
  nameWithType: DataGridView.DefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.DefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.DefaultSize
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DefaultSize
  nameWithType: DataGridView.DefaultSize
  fullName: System.Windows.Forms.DataGridView.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.DataGridView.DefaultValuesNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DefaultValuesNeeded
  nameWithType: DataGridView.DefaultValuesNeeded
  fullName: System.Windows.Forms.DataGridView.DefaultValuesNeeded
- uid: System.Windows.Forms.DataGridViewRowEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowEventHandler
  nameWithType: DataGridViewRowEventHandler
  fullName: System.Windows.Forms.DataGridViewRowEventHandler
- uid: System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DisplayedColumnCount(Boolean)
  nameWithType: DataGridView.DisplayedColumnCount(Boolean)
  fullName: System.Windows.Forms.DataGridView.DisplayedColumnCount(Boolean)
- uid: System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DisplayedRowCount(Boolean)
  nameWithType: DataGridView.DisplayedRowCount(Boolean)
  fullName: System.Windows.Forms.DataGridView.DisplayedRowCount(Boolean)
- uid: System.Windows.Forms.DataGridView.DisplayRectangle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DisplayRectangle
  nameWithType: DataGridView.DisplayRectangle
  fullName: System.Windows.Forms.DataGridView.DisplayRectangle
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.DataGridView.Dispose(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataGridView.Dispose(Boolean)
  fullName: System.Windows.Forms.DataGridView.Dispose(Boolean)
- uid: System.Windows.Forms.DataGridView.EditingControl
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditingControl
  nameWithType: DataGridView.EditingControl
  fullName: System.Windows.Forms.DataGridView.EditingControl
- uid: System.Windows.Forms.DataGridView.EditingControlShowing
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditingControlShowing
  nameWithType: DataGridView.EditingControlShowing
  fullName: System.Windows.Forms.DataGridView.EditingControlShowing
- uid: System.Windows.Forms.DataGridViewEditingControlShowingEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewEditingControlShowingEventHandler
  nameWithType: DataGridViewEditingControlShowingEventHandler
  fullName: System.Windows.Forms.DataGridViewEditingControlShowingEventHandler
- uid: System.Windows.Forms.DataGridView.EditingPanel
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditingPanel
  nameWithType: DataGridView.EditingPanel
  fullName: System.Windows.Forms.DataGridView.EditingPanel
- uid: System.Windows.Forms.Panel
  parent: System.Windows.Forms
  isExternal: false
  name: Panel
  nameWithType: Panel
  fullName: System.Windows.Forms.Panel
- uid: System.Windows.Forms.DataGridView.EditMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditMode
  nameWithType: DataGridView.EditMode
  fullName: System.Windows.Forms.DataGridView.EditMode
- uid: System.Windows.Forms.DataGridViewEditMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewEditMode
  nameWithType: DataGridViewEditMode
  fullName: System.Windows.Forms.DataGridViewEditMode
- uid: System.Windows.Forms.DataGridView.EditModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditModeChanged
  nameWithType: DataGridView.EditModeChanged
  fullName: System.Windows.Forms.DataGridView.EditModeChanged
- uid: System.Windows.Forms.DataGridView.EnableHeadersVisualStyles
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EnableHeadersVisualStyles
  nameWithType: DataGridView.EnableHeadersVisualStyles
  fullName: System.Windows.Forms.DataGridView.EnableHeadersVisualStyles
- uid: System.Windows.Forms.DataGridView.EndEdit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EndEdit()
  nameWithType: DataGridView.EndEdit()
  fullName: System.Windows.Forms.DataGridView.EndEdit()
- uid: System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EndEdit(DataGridViewDataErrorContexts)
  nameWithType: DataGridView.EndEdit(DataGridViewDataErrorContexts)
  fullName: System.Windows.Forms.DataGridView.EndEdit(DataGridViewDataErrorContexts)
- uid: System.Windows.Forms.DataGridView.FirstDisplayedCell
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedCell
  nameWithType: DataGridView.FirstDisplayedCell
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedCell
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedScrollingColumnHiddenWidth
  nameWithType: DataGridView.FirstDisplayedScrollingColumnHiddenWidth
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedScrollingColumnIndex
  nameWithType: DataGridView.FirstDisplayedScrollingColumnIndex
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedScrollingRowIndex
  nameWithType: DataGridView.FirstDisplayedScrollingRowIndex
  fullName: System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex
- uid: System.Windows.Forms.DataGridView.Font
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Font
  nameWithType: DataGridView.Font
  fullName: System.Windows.Forms.DataGridView.Font
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.DataGridView.FontChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FontChanged
  nameWithType: DataGridView.FontChanged
  fullName: System.Windows.Forms.DataGridView.FontChanged
- uid: System.Windows.Forms.DataGridView.ForeColor
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ForeColor
  nameWithType: DataGridView.ForeColor
  fullName: System.Windows.Forms.DataGridView.ForeColor
- uid: System.Windows.Forms.DataGridView.ForeColorChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ForeColorChanged
  nameWithType: DataGridView.ForeColorChanged
  fullName: System.Windows.Forms.DataGridView.ForeColorChanged
- uid: System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetAccessibilityObjectById(Int32)
  nameWithType: DataGridView.GetAccessibilityObjectById(Int32)
  fullName: System.Windows.Forms.DataGridView.GetAccessibilityObjectById(Int32)
- uid: System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetCellCount(DataGridViewElementStates)
  nameWithType: DataGridView.GetCellCount(DataGridViewElementStates)
  fullName: System.Windows.Forms.DataGridView.GetCellCount(DataGridViewElementStates)
- uid: System.Windows.Forms.DataGridViewElementStates
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewElementStates
  nameWithType: DataGridViewElementStates
  fullName: System.Windows.Forms.DataGridViewElementStates
- uid: System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetCellDisplayRectangle(Int32,Int32,Boolean)
  nameWithType: DataGridView.GetCellDisplayRectangle(Int32,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.GetCellDisplayRectangle(Int32,Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.GetClipboardContent
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetClipboardContent()
  nameWithType: DataGridView.GetClipboardContent()
  fullName: System.Windows.Forms.DataGridView.GetClipboardContent()
- uid: System.Windows.Forms.DataObject
  parent: System.Windows.Forms
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Windows.Forms.DataObject
- uid: System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetColumnDisplayRectangle(Int32,Boolean)
  nameWithType: DataGridView.GetColumnDisplayRectangle(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetRowDisplayRectangle(Int32,Boolean)
  nameWithType: DataGridView.GetRowDisplayRectangle(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.GetRowDisplayRectangle(Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.GridColor
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GridColor
  nameWithType: DataGridView.GridColor
  fullName: System.Windows.Forms.DataGridView.GridColor
- uid: System.Windows.Forms.DataGridView.GridColorChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GridColorChanged
  nameWithType: DataGridView.GridColorChanged
  fullName: System.Windows.Forms.DataGridView.GridColorChanged
- uid: System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: HitTest(Int32,Int32)
  nameWithType: DataGridView.HitTest(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.HitTest(Int32,Int32)
- uid: System.Windows.Forms.DataGridView.HitTestInfo
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridView+HitTestInfo
  nameWithType: DataGridView+HitTestInfo
  fullName: System.Windows.Forms.DataGridView+HitTestInfo
- uid: System.Windows.Forms.DataGridView.HorizontalScrollBar
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: HorizontalScrollBar
  nameWithType: DataGridView.HorizontalScrollBar
  fullName: System.Windows.Forms.DataGridView.HorizontalScrollBar
- uid: System.Windows.Forms.ScrollBar
  parent: System.Windows.Forms
  isExternal: false
  name: ScrollBar
  nameWithType: ScrollBar
  fullName: System.Windows.Forms.ScrollBar
- uid: System.Windows.Forms.DataGridView.HorizontalScrollingOffset
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: HorizontalScrollingOffset
  nameWithType: DataGridView.HorizontalScrollingOffset
  fullName: System.Windows.Forms.DataGridView.HorizontalScrollingOffset
- uid: System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateCell(DataGridViewCell)
  nameWithType: DataGridView.InvalidateCell(DataGridViewCell)
  fullName: System.Windows.Forms.DataGridView.InvalidateCell(DataGridViewCell)
- uid: System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateCell(Int32,Int32)
  nameWithType: DataGridView.InvalidateCell(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.InvalidateCell(Int32,Int32)
- uid: System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateColumn(Int32)
  nameWithType: DataGridView.InvalidateColumn(Int32)
  fullName: System.Windows.Forms.DataGridView.InvalidateColumn(Int32)
- uid: System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateRow(Int32)
  nameWithType: DataGridView.InvalidateRow(Int32)
  fullName: System.Windows.Forms.DataGridView.InvalidateRow(Int32)
- uid: System.Windows.Forms.DataGridView.IsCurrentCellDirty
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsCurrentCellDirty
  nameWithType: DataGridView.IsCurrentCellDirty
  fullName: System.Windows.Forms.DataGridView.IsCurrentCellDirty
- uid: System.Windows.Forms.DataGridView.IsCurrentCellInEditMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsCurrentCellInEditMode
  nameWithType: DataGridView.IsCurrentCellInEditMode
  fullName: System.Windows.Forms.DataGridView.IsCurrentCellInEditMode
- uid: System.Windows.Forms.DataGridView.IsCurrentRowDirty
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsCurrentRowDirty
  nameWithType: DataGridView.IsCurrentRowDirty
  fullName: System.Windows.Forms.DataGridView.IsCurrentRowDirty
- uid: System.Windows.Forms.DataGridView.IsInputChar(System.Char)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsInputChar(Char)
  nameWithType: DataGridView.IsInputChar(Char)
  fullName: System.Windows.Forms.DataGridView.IsInputChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsInputKey(Keys)
  nameWithType: DataGridView.IsInputKey(Keys)
  fullName: System.Windows.Forms.DataGridView.IsInputKey(Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Item(Int32,Int32)
  nameWithType: DataGridView.Item(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.Item(Int32,Int32)
- uid: System.Windows.Forms.DataGridView.Item(System.String,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Item(String,Int32)
  nameWithType: DataGridView.Item(String,Int32)
  fullName: System.Windows.Forms.DataGridView.Item(String,Int32)
- uid: System.Windows.Forms.DataGridView.MultiSelect
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: MultiSelect
  nameWithType: DataGridView.MultiSelect
  fullName: System.Windows.Forms.DataGridView.MultiSelect
- uid: System.Windows.Forms.DataGridView.MultiSelectChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: MultiSelectChanged
  nameWithType: DataGridView.MultiSelectChanged
  fullName: System.Windows.Forms.DataGridView.MultiSelectChanged
- uid: System.Windows.Forms.DataGridView.NewRowIndex
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: NewRowIndex
  nameWithType: DataGridView.NewRowIndex
  fullName: System.Windows.Forms.DataGridView.NewRowIndex
- uid: System.Windows.Forms.DataGridView.NewRowNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: NewRowNeeded
  nameWithType: DataGridView.NewRowNeeded
  fullName: System.Windows.Forms.DataGridView.NewRowNeeded
- uid: System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: NotifyCurrentCellDirty(Boolean)
  nameWithType: DataGridView.NotifyCurrentCellDirty(Boolean)
  fullName: System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(Boolean)
- uid: System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToAddRowsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToAddRowsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToDeleteRowsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToDeleteRowsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToOrderColumnsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToOrderColumnsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToResizeColumnsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToResizeColumnsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToResizeRowsChanged(EventArgs)
  nameWithType: DataGridView.OnAllowUserToResizeRowsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAlternatingRowsDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnAlternatingRowsDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoGenerateColumnsChanged(EventArgs)
  nameWithType: DataGridView.OnAutoGenerateColumnsChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)
  nameWithType: DataGridView.OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)
- uid: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeColumnModeEventArgs
  nameWithType: DataGridViewAutoSizeColumnModeEventArgs
  fullName: System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs
- uid: System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)
  nameWithType: DataGridView.OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)
- uid: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeColumnsModeEventArgs
  nameWithType: DataGridViewAutoSizeColumnsModeEventArgs
  fullName: System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs
- uid: System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)
  nameWithType: DataGridView.OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)
- uid: System.Windows.Forms.DataGridViewAutoSizeModeEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeModeEventArgs
  nameWithType: DataGridViewAutoSizeModeEventArgs
  fullName: System.Windows.Forms.DataGridViewAutoSizeModeEventArgs
- uid: System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnBackgroundColorChanged(EventArgs)
  nameWithType: DataGridView.OnBackgroundColorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnBackgroundColorChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnBindingContextChanged(EventArgs)
  nameWithType: DataGridView.OnBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnBindingContextChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnBorderStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCancelRowEdit(QuestionEventArgs)
  nameWithType: DataGridView.OnCancelRowEdit(QuestionEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCancelRowEdit(QuestionEventArgs)
- uid: System.Windows.Forms.QuestionEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: QuestionEventArgs
  nameWithType: QuestionEventArgs
  fullName: System.Windows.Forms.QuestionEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellBeginEdit(DataGridViewCellCancelEventArgs)
  nameWithType: DataGridView.OnCellBeginEdit(DataGridViewCellCancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellBeginEdit(DataGridViewCellCancelEventArgs)
- uid: System.Windows.Forms.DataGridViewCellCancelEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellCancelEventArgs
  nameWithType: DataGridViewCellCancelEventArgs
  fullName: System.Windows.Forms.DataGridViewCellCancelEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnCellBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridViewCellEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellEventArgs
  nameWithType: DataGridViewCellEventArgs
  fullName: System.Windows.Forms.DataGridViewCellEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContentClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellContentClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContentClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContentDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellContentDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContentDoubleClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContextMenuStripChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellContextMenuStripChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)
  nameWithType: DataGridView.OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)
- uid: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellContextMenuStripNeededEventArgs
  nameWithType: DataGridViewCellContextMenuStripNeededEventArgs
  fullName: System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellDoubleClick(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellDoubleClick(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellDoubleClick(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellEndEdit(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellEndEdit(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellEndEdit(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellEnter(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellEnter(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellEnter(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellErrorTextChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellErrorTextChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellErrorTextChanged(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)
  nameWithType: DataGridView.OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)
- uid: System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellErrorTextNeededEventArgs
  nameWithType: DataGridViewCellErrorTextNeededEventArgs
  fullName: System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellFormatting(DataGridViewCellFormattingEventArgs)
  nameWithType: DataGridView.OnCellFormatting(DataGridViewCellFormattingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellFormatting(DataGridViewCellFormattingEventArgs)
- uid: System.Windows.Forms.DataGridViewCellFormattingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellFormattingEventArgs
  nameWithType: DataGridViewCellFormattingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellFormattingEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellLeave(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellLeave(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellLeave(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridViewCellMouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellMouseEventArgs
  nameWithType: DataGridViewCellMouseEventArgs
  fullName: System.Windows.Forms.DataGridViewCellMouseEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseDown(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseDown(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseDown(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseEnter(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellMouseEnter(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseEnter(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseLeave(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellMouseLeave(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseLeave(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseMove(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseMove(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseMove(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseUp(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnCellMouseUp(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellMouseUp(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellPainting(DataGridViewCellPaintingEventArgs)
  nameWithType: DataGridView.OnCellPainting(DataGridViewCellPaintingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellPainting(DataGridViewCellPaintingEventArgs)
- uid: System.Windows.Forms.DataGridViewCellPaintingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellPaintingEventArgs
  nameWithType: DataGridViewCellPaintingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellPaintingEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellParsing(DataGridViewCellParsingEventArgs)
  nameWithType: DataGridView.OnCellParsing(DataGridViewCellParsingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellParsing(DataGridViewCellParsingEventArgs)
- uid: System.Windows.Forms.DataGridViewCellParsingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellParsingEventArgs
  nameWithType: DataGridViewCellParsingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellParsingEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellStateChanged(DataGridViewCellStateChangedEventArgs)
  nameWithType: DataGridView.OnCellStateChanged(DataGridViewCellStateChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellStateChanged(DataGridViewCellStateChangedEventArgs)
- uid: System.Windows.Forms.DataGridViewCellStateChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStateChangedEventArgs
  nameWithType: DataGridViewCellStateChangedEventArgs
  fullName: System.Windows.Forms.DataGridViewCellStateChangedEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellStyleChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellStyleChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellStyleChanged(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)
  nameWithType: DataGridView.OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)
- uid: System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyleContentChangedEventArgs
  nameWithType: DataGridViewCellStyleContentChangedEventArgs
  fullName: System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellToolTipTextChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellToolTipTextChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)
  nameWithType: DataGridView.OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)
- uid: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellToolTipTextNeededEventArgs
  nameWithType: DataGridViewCellToolTipTextNeededEventArgs
  fullName: System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValidated(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellValidated(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValidated(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValidating(DataGridViewCellValidatingEventArgs)
  nameWithType: DataGridView.OnCellValidating(DataGridViewCellValidatingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValidating(DataGridViewCellValidatingEventArgs)
- uid: System.Windows.Forms.DataGridViewCellValidatingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellValidatingEventArgs
  nameWithType: DataGridViewCellValidatingEventArgs
  fullName: System.Windows.Forms.DataGridViewCellValidatingEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValueChanged(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnCellValueChanged(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValueChanged(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValueNeeded(DataGridViewCellValueEventArgs)
  nameWithType: DataGridView.OnCellValueNeeded(DataGridViewCellValueEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValueNeeded(DataGridViewCellValueEventArgs)
- uid: System.Windows.Forms.DataGridViewCellValueEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellValueEventArgs
  nameWithType: DataGridViewCellValueEventArgs
  fullName: System.Windows.Forms.DataGridViewCellValueEventArgs
- uid: System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValuePushed(DataGridViewCellValueEventArgs)
  nameWithType: DataGridView.OnCellValuePushed(DataGridViewCellValueEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCellValuePushed(DataGridViewCellValueEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnAdded(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnAdded(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnAdded(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridViewColumnEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnEventArgs
  nameWithType: DataGridViewColumnEventArgs
  fullName: System.Windows.Forms.DataGridViewColumnEventArgs
- uid: System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)
  nameWithType: DataGridView.OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)
- uid: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnDividerDoubleClickEventArgs
  nameWithType: DataGridViewColumnDividerDoubleClickEventArgs
  fullName: System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs
- uid: System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnColumnHeadersBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnColumnHeadersDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersHeightChanged(EventArgs)
  nameWithType: DataGridView.OnColumnHeadersHeightChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  nameWithType: DataGridView.OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnNameChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnNameChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnNameChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnRemoved(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnRemoved(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnRemoved(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnSortModeChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnSortModeChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnSortModeChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)
  nameWithType: DataGridView.OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)
- uid: System.Windows.Forms.DataGridViewColumnStateChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumnStateChangedEventArgs
  nameWithType: DataGridViewColumnStateChangedEventArgs
  fullName: System.Windows.Forms.DataGridViewColumnStateChangedEventArgs
- uid: System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnWidthChanged(DataGridViewColumnEventArgs)
  nameWithType: DataGridView.OnColumnWidthChanged(DataGridViewColumnEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnColumnWidthChanged(DataGridViewColumnEventArgs)
- uid: System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCurrentCellChanged(EventArgs)
  nameWithType: DataGridView.OnCurrentCellChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCurrentCellChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCurrentCellDirtyStateChanged(EventArgs)
  nameWithType: DataGridView.OnCurrentCellDirtyStateChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCursorChanged(EventArgs)
  nameWithType: DataGridView.OnCursorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnCursorChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)
  nameWithType: DataGridView.OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)
- uid: System.Windows.Forms.DataGridViewBindingCompleteEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewBindingCompleteEventArgs
  nameWithType: DataGridViewBindingCompleteEventArgs
  fullName: System.Windows.Forms.DataGridViewBindingCompleteEventArgs
- uid: System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataError(Boolean,DataGridViewDataErrorEventArgs)
  nameWithType: DataGridView.OnDataError(Boolean,DataGridViewDataErrorEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataError(Boolean,DataGridViewDataErrorEventArgs)
- uid: System.Windows.Forms.DataGridViewDataErrorEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewDataErrorEventArgs
  nameWithType: DataGridViewDataErrorEventArgs
  fullName: System.Windows.Forms.DataGridViewDataErrorEventArgs
- uid: System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataMemberChanged(EventArgs)
  nameWithType: DataGridView.OnDataMemberChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataMemberChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataSourceChanged(EventArgs)
  nameWithType: DataGridView.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDataSourceChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDefaultValuesNeeded(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnDefaultValuesNeeded(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridViewRowEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowEventArgs
  nameWithType: DataGridViewRowEventArgs
  fullName: System.Windows.Forms.DataGridViewRowEventArgs
- uid: System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDoubleClick(EventArgs)
  nameWithType: DataGridView.OnDoubleClick(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnDoubleClick(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)
  nameWithType: DataGridView.OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)
- uid: System.Windows.Forms.DataGridViewEditingControlShowingEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewEditingControlShowingEventArgs
  nameWithType: DataGridViewEditingControlShowingEventArgs
  fullName: System.Windows.Forms.DataGridViewEditingControlShowingEventArgs
- uid: System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEditModeChanged(EventArgs)
  nameWithType: DataGridView.OnEditModeChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEditModeChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEnabledChanged(EventArgs)
  nameWithType: DataGridView.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEnabledChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEnter(EventArgs)
  nameWithType: DataGridView.OnEnter(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnEnter(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: DataGridView.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnForeColorChanged(EventArgs)
  nameWithType: DataGridView.OnForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnForeColorChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnGotFocus(EventArgs)
  nameWithType: DataGridView.OnGotFocus(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnGotFocus(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnGridColorChanged(EventArgs)
  nameWithType: DataGridView.OnGridColorChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnGridColorChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: DataGridView.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: DataGridView.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: DataGridView.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Forms.KeyEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Forms.KeyEventArgs
- uid: System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnKeyPress(KeyPressEventArgs)
  nameWithType: DataGridView.OnKeyPress(KeyPressEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnKeyPress(KeyPressEventArgs)
- uid: System.Windows.Forms.KeyPressEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
- uid: System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: DataGridView.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnKeyUp(KeyEventArgs)
- uid: System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnLayout(LayoutEventArgs)
  nameWithType: DataGridView.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnLayout(LayoutEventArgs)
- uid: System.Windows.Forms.LayoutEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventArgs
  nameWithType: LayoutEventArgs
  fullName: System.Windows.Forms.LayoutEventArgs
- uid: System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnLeave(EventArgs)
  nameWithType: DataGridView.OnLeave(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnLeave(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnLostFocus(EventArgs)
  nameWithType: DataGridView.OnLostFocus(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnLostFocus(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseClick(MouseEventArgs)
  nameWithType: DataGridView.OnMouseClick(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseClick(MouseEventArgs)
- uid: System.Windows.Forms.MouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
- uid: System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseDoubleClick(MouseEventArgs)
  nameWithType: DataGridView.OnMouseDoubleClick(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseDoubleClick(MouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseDown(MouseEventArgs)
  nameWithType: DataGridView.OnMouseDown(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseDown(MouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseEnter(EventArgs)
  nameWithType: DataGridView.OnMouseEnter(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseEnter(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseLeave(EventArgs)
  nameWithType: DataGridView.OnMouseLeave(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseLeave(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: DataGridView.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseMove(MouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseUp(MouseEventArgs)
  nameWithType: DataGridView.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseUp(MouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseWheel(MouseEventArgs)
  nameWithType: DataGridView.OnMouseWheel(MouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMouseWheel(MouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMultiSelectChanged(EventArgs)
  nameWithType: DataGridView.OnMultiSelectChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnMultiSelectChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnNewRowNeeded(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnNewRowNeeded(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnNewRowNeeded(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnPaint(PaintEventArgs)
  nameWithType: DataGridView.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnPaint(PaintEventArgs)
- uid: System.Windows.Forms.PaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventArgs
  nameWithType: PaintEventArgs
  fullName: System.Windows.Forms.PaintEventArgs
- uid: System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnReadOnlyChanged(EventArgs)
  nameWithType: DataGridView.OnReadOnlyChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnReadOnlyChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnResize(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: DataGridView.OnResize(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnResize(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRightToLeftChanged(EventArgs)
  nameWithType: DataGridView.OnRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRightToLeftChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowContextMenuStripChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowContextMenuStripChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)
  nameWithType: DataGridView.OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)
- uid: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowContextMenuStripNeededEventArgs
  nameWithType: DataGridViewRowContextMenuStripNeededEventArgs
  fullName: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDirtyStateNeeded(QuestionEventArgs)
  nameWithType: DataGridView.OnRowDirtyStateNeeded(QuestionEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(QuestionEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)
  nameWithType: DataGridView.OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)
- uid: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowDividerDoubleClickEventArgs
  nameWithType: DataGridViewRowDividerDoubleClickEventArgs
  fullName: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDividerHeightChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowDividerHeightChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowEnter(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnRowEnter(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowEnter(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowErrorTextChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowErrorTextChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowErrorTextChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)
  nameWithType: DataGridView.OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)
- uid: System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowErrorTextNeededEventArgs
  nameWithType: DataGridViewRowErrorTextNeededEventArgs
  fullName: System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeaderCellChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowHeaderCellChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  nameWithType: DataGridView.OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersBorderStyleChanged(EventArgs)
  nameWithType: DataGridView.OnRowHeadersBorderStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnRowHeadersDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersWidthChanged(EventArgs)
  nameWithType: DataGridView.OnRowHeadersWidthChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  nameWithType: DataGridView.OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeightChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowHeightChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeightChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)
  nameWithType: DataGridView.OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)
- uid: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowHeightInfoNeededEventArgs
  nameWithType: DataGridViewRowHeightInfoNeededEventArgs
  fullName: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)
  nameWithType: DataGridView.OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)
- uid: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowHeightInfoPushedEventArgs
  nameWithType: DataGridViewRowHeightInfoPushedEventArgs
  fullName: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowLeave(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnRowLeave(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowLeave(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowMinimumHeightChanged(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowMinimumHeightChanged(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowPostPaint(DataGridViewRowPostPaintEventArgs)
  nameWithType: DataGridView.OnRowPostPaint(DataGridViewRowPostPaintEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowPostPaint(DataGridViewRowPostPaintEventArgs)
- uid: System.Windows.Forms.DataGridViewRowPostPaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowPostPaintEventArgs
  nameWithType: DataGridViewRowPostPaintEventArgs
  fullName: System.Windows.Forms.DataGridViewRowPostPaintEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowPrePaint(DataGridViewRowPrePaintEventArgs)
  nameWithType: DataGridView.OnRowPrePaint(DataGridViewRowPrePaintEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowPrePaint(DataGridViewRowPrePaintEventArgs)
- uid: System.Windows.Forms.DataGridViewRowPrePaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowPrePaintEventArgs
  nameWithType: DataGridViewRowPrePaintEventArgs
  fullName: System.Windows.Forms.DataGridViewRowPrePaintEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowsAdded(DataGridViewRowsAddedEventArgs)
  nameWithType: DataGridView.OnRowsAdded(DataGridViewRowsAddedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowsAdded(DataGridViewRowsAddedEventArgs)
- uid: System.Windows.Forms.DataGridViewRowsAddedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowsAddedEventArgs
  nameWithType: DataGridViewRowsAddedEventArgs
  fullName: System.Windows.Forms.DataGridViewRowsAddedEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowsDefaultCellStyleChanged(EventArgs)
  nameWithType: DataGridView.OnRowsDefaultCellStyleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowsRemoved(DataGridViewRowsRemovedEventArgs)
  nameWithType: DataGridView.OnRowsRemoved(DataGridViewRowsRemovedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowsRemoved(DataGridViewRowsRemovedEventArgs)
- uid: System.Windows.Forms.DataGridViewRowsRemovedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowsRemovedEventArgs
  nameWithType: DataGridViewRowsRemovedEventArgs
  fullName: System.Windows.Forms.DataGridViewRowsRemovedEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)
  nameWithType: DataGridView.OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)
- uid: System.Windows.Forms.DataGridViewRowStateChangedEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowStateChangedEventArgs
  nameWithType: DataGridViewRowStateChangedEventArgs
  fullName: System.Windows.Forms.DataGridViewRowStateChangedEventArgs
- uid: System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowUnshared(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnRowUnshared(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowUnshared(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowValidated(DataGridViewCellEventArgs)
  nameWithType: DataGridView.OnRowValidated(DataGridViewCellEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowValidated(DataGridViewCellEventArgs)
- uid: System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowValidating(DataGridViewCellCancelEventArgs)
  nameWithType: DataGridView.OnRowValidating(DataGridViewCellCancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnRowValidating(DataGridViewCellCancelEventArgs)
- uid: System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnScroll(ScrollEventArgs)
  nameWithType: DataGridView.OnScroll(ScrollEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnScroll(ScrollEventArgs)
- uid: System.Windows.Forms.ScrollEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: ScrollEventArgs
  nameWithType: ScrollEventArgs
  fullName: System.Windows.Forms.ScrollEventArgs
- uid: System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnSelectionChanged(EventArgs)
  nameWithType: DataGridView.OnSelectionChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnSelectionChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnSortCompare(DataGridViewSortCompareEventArgs)
  nameWithType: DataGridView.OnSortCompare(DataGridViewSortCompareEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnSortCompare(DataGridViewSortCompareEventArgs)
- uid: System.Windows.Forms.DataGridViewSortCompareEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewSortCompareEventArgs
  nameWithType: DataGridViewSortCompareEventArgs
  fullName: System.Windows.Forms.DataGridViewSortCompareEventArgs
- uid: System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnSorted(EventArgs)
  nameWithType: DataGridView.OnSorted(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnSorted(EventArgs)
- uid: System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnUserAddedRow(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnUserAddedRow(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnUserAddedRow(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnUserDeletedRow(DataGridViewRowEventArgs)
  nameWithType: DataGridView.OnUserDeletedRow(DataGridViewRowEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnUserDeletedRow(DataGridViewRowEventArgs)
- uid: System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnUserDeletingRow(DataGridViewRowCancelEventArgs)
  nameWithType: DataGridView.OnUserDeletingRow(DataGridViewRowCancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnUserDeletingRow(DataGridViewRowCancelEventArgs)
- uid: System.Windows.Forms.DataGridViewRowCancelEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowCancelEventArgs
  nameWithType: DataGridViewRowCancelEventArgs
  fullName: System.Windows.Forms.DataGridViewRowCancelEventArgs
- uid: System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnValidating(CancelEventArgs)
  nameWithType: DataGridView.OnValidating(CancelEventArgs)
  fullName: System.Windows.Forms.DataGridView.OnValidating(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnVisibleChanged(EventArgs)
  nameWithType: DataGridView.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.DataGridView.OnVisibleChanged(EventArgs)
- uid: System.Windows.Forms.DataGridView.Padding
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Padding
  nameWithType: DataGridView.Padding
  fullName: System.Windows.Forms.DataGridView.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.DataGridView.PaddingChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: PaddingChanged
  nameWithType: DataGridView.PaddingChanged
  fullName: System.Windows.Forms.DataGridView.PaddingChanged
- uid: System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: PaintBackground(Graphics,Rectangle,Rectangle)
  nameWithType: DataGridView.PaintBackground(Graphics,Rectangle,Rectangle)
  fullName: System.Windows.Forms.DataGridView.PaintBackground(Graphics,Rectangle,Rectangle)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessAKey(Keys)
  nameWithType: DataGridView.ProcessAKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessAKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDataGridViewKey(KeyEventArgs)
  nameWithType: DataGridView.ProcessDataGridViewKey(KeyEventArgs)
  fullName: System.Windows.Forms.DataGridView.ProcessDataGridViewKey(KeyEventArgs)
- uid: System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDeleteKey(Keys)
  nameWithType: DataGridView.ProcessDeleteKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessDeleteKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: DataGridView.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDownKey(Keys)
  nameWithType: DataGridView.ProcessDownKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessDownKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessEndKey(Keys)
  nameWithType: DataGridView.ProcessEndKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessEndKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessEnterKey(Keys)
  nameWithType: DataGridView.ProcessEnterKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessEnterKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessEscapeKey(Keys)
  nameWithType: DataGridView.ProcessEscapeKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessEscapeKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessF2Key(Keys)
  nameWithType: DataGridView.ProcessF2Key(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessF2Key(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessHomeKey(Keys)
  nameWithType: DataGridView.ProcessHomeKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessHomeKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessInsertKey(Keys)
  nameWithType: DataGridView.ProcessInsertKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessInsertKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessKeyEventArgs(Message)
  nameWithType: DataGridView.ProcessKeyEventArgs(Message)
  fullName: System.Windows.Forms.DataGridView.ProcessKeyEventArgs(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessKeyPreview(Message)
  nameWithType: DataGridView.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.DataGridView.ProcessKeyPreview(Message)
- uid: System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessLeftKey(Keys)
  nameWithType: DataGridView.ProcessLeftKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessLeftKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessNextKey(Keys)
  nameWithType: DataGridView.ProcessNextKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessNextKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessPriorKey(Keys)
  nameWithType: DataGridView.ProcessPriorKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessPriorKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessRightKey(Keys)
  nameWithType: DataGridView.ProcessRightKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessRightKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessSpaceKey(Keys)
  nameWithType: DataGridView.ProcessSpaceKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessSpaceKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessTabKey(Keys)
  nameWithType: DataGridView.ProcessTabKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessTabKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessUpKey(Keys)
  nameWithType: DataGridView.ProcessUpKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessUpKey(Keys)
- uid: System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessZeroKey(Keys)
  nameWithType: DataGridView.ProcessZeroKey(Keys)
  fullName: System.Windows.Forms.DataGridView.ProcessZeroKey(Keys)
- uid: System.Windows.Forms.DataGridView.ReadOnly
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ReadOnly
  nameWithType: DataGridView.ReadOnly
  fullName: System.Windows.Forms.DataGridView.ReadOnly
- uid: System.Windows.Forms.DataGridView.ReadOnlyChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ReadOnlyChanged
  nameWithType: DataGridView.ReadOnlyChanged
  fullName: System.Windows.Forms.DataGridView.ReadOnlyChanged
- uid: System.Windows.Forms.DataGridView.RefreshEdit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RefreshEdit()
  nameWithType: DataGridView.RefreshEdit()
  fullName: System.Windows.Forms.DataGridView.RefreshEdit()
- uid: System.Windows.Forms.DataGridView.ResetText
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ResetText()
  nameWithType: DataGridView.ResetText()
  fullName: System.Windows.Forms.DataGridView.ResetText()
- uid: System.Windows.Forms.DataGridView.RowContextMenuStripChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowContextMenuStripChanged
  nameWithType: DataGridView.RowContextMenuStripChanged
  fullName: System.Windows.Forms.DataGridView.RowContextMenuStripChanged
- uid: System.Windows.Forms.DataGridView.RowContextMenuStripNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowContextMenuStripNeeded
  nameWithType: DataGridView.RowContextMenuStripNeeded
  fullName: System.Windows.Forms.DataGridView.RowContextMenuStripNeeded
- uid: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowContextMenuStripNeededEventHandler
  nameWithType: DataGridViewRowContextMenuStripNeededEventHandler
  fullName: System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler
- uid: System.Windows.Forms.DataGridView.RowCount
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowCount
  nameWithType: DataGridView.RowCount
  fullName: System.Windows.Forms.DataGridView.RowCount
- uid: System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowDefaultCellStyleChanged
  nameWithType: DataGridView.RowDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.RowDirtyStateNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowDirtyStateNeeded
  nameWithType: DataGridView.RowDirtyStateNeeded
  fullName: System.Windows.Forms.DataGridView.RowDirtyStateNeeded
- uid: System.Windows.Forms.DataGridView.RowDividerDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowDividerDoubleClick
  nameWithType: DataGridView.RowDividerDoubleClick
  fullName: System.Windows.Forms.DataGridView.RowDividerDoubleClick
- uid: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowDividerDoubleClickEventHandler
  nameWithType: DataGridViewRowDividerDoubleClickEventHandler
  fullName: System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler
- uid: System.Windows.Forms.DataGridView.RowDividerHeightChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowDividerHeightChanged
  nameWithType: DataGridView.RowDividerHeightChanged
  fullName: System.Windows.Forms.DataGridView.RowDividerHeightChanged
- uid: System.Windows.Forms.DataGridView.RowEnter
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowEnter
  nameWithType: DataGridView.RowEnter
  fullName: System.Windows.Forms.DataGridView.RowEnter
- uid: System.Windows.Forms.DataGridView.RowErrorTextChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowErrorTextChanged
  nameWithType: DataGridView.RowErrorTextChanged
  fullName: System.Windows.Forms.DataGridView.RowErrorTextChanged
- uid: System.Windows.Forms.DataGridView.RowErrorTextNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowErrorTextNeeded
  nameWithType: DataGridView.RowErrorTextNeeded
  fullName: System.Windows.Forms.DataGridView.RowErrorTextNeeded
- uid: System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowErrorTextNeededEventHandler
  nameWithType: DataGridViewRowErrorTextNeededEventHandler
  fullName: System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler
- uid: System.Windows.Forms.DataGridView.RowHeaderCellChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeaderCellChanged
  nameWithType: DataGridView.RowHeaderCellChanged
  fullName: System.Windows.Forms.DataGridView.RowHeaderCellChanged
- uid: System.Windows.Forms.DataGridView.RowHeaderMouseClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeaderMouseClick
  nameWithType: DataGridView.RowHeaderMouseClick
  fullName: System.Windows.Forms.DataGridView.RowHeaderMouseClick
- uid: System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeaderMouseDoubleClick
  nameWithType: DataGridView.RowHeaderMouseDoubleClick
  fullName: System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.RowHeadersBorderStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersBorderStyle
  nameWithType: DataGridView.RowHeadersBorderStyle
  fullName: System.Windows.Forms.DataGridView.RowHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersBorderStyleChanged
  nameWithType: DataGridView.RowHeadersBorderStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersDefaultCellStyle
  nameWithType: DataGridView.RowHeadersDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersDefaultCellStyleChanged
  nameWithType: DataGridView.RowHeadersDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.RowHeadersVisible
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersVisible
  nameWithType: DataGridView.RowHeadersVisible
  fullName: System.Windows.Forms.DataGridView.RowHeadersVisible
- uid: System.Windows.Forms.DataGridView.RowHeadersWidth
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersWidth
  nameWithType: DataGridView.RowHeadersWidth
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidth
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersWidthChanged
  nameWithType: DataGridView.RowHeadersWidthChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidthChanged
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersWidthSizeMode
  nameWithType: DataGridView.RowHeadersWidthSizeMode
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersWidthSizeModeChanged
  nameWithType: DataGridView.RowHeadersWidthSizeModeChanged
  fullName: System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged
- uid: System.Windows.Forms.DataGridView.RowHeightChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeightChanged
  nameWithType: DataGridView.RowHeightChanged
  fullName: System.Windows.Forms.DataGridView.RowHeightChanged
- uid: System.Windows.Forms.DataGridView.RowHeightInfoNeeded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeightInfoNeeded
  nameWithType: DataGridView.RowHeightInfoNeeded
  fullName: System.Windows.Forms.DataGridView.RowHeightInfoNeeded
- uid: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowHeightInfoNeededEventHandler
  nameWithType: DataGridViewRowHeightInfoNeededEventHandler
  fullName: System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler
- uid: System.Windows.Forms.DataGridView.RowHeightInfoPushed
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeightInfoPushed
  nameWithType: DataGridView.RowHeightInfoPushed
  fullName: System.Windows.Forms.DataGridView.RowHeightInfoPushed
- uid: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowHeightInfoPushedEventHandler
  nameWithType: DataGridViewRowHeightInfoPushedEventHandler
  fullName: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler
- uid: System.Windows.Forms.DataGridView.RowLeave
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowLeave
  nameWithType: DataGridView.RowLeave
  fullName: System.Windows.Forms.DataGridView.RowLeave
- uid: System.Windows.Forms.DataGridView.RowMinimumHeightChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowMinimumHeightChanged
  nameWithType: DataGridView.RowMinimumHeightChanged
  fullName: System.Windows.Forms.DataGridView.RowMinimumHeightChanged
- uid: System.Windows.Forms.DataGridView.RowPostPaint
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowPostPaint
  nameWithType: DataGridView.RowPostPaint
  fullName: System.Windows.Forms.DataGridView.RowPostPaint
- uid: System.Windows.Forms.DataGridViewRowPostPaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowPostPaintEventHandler
  nameWithType: DataGridViewRowPostPaintEventHandler
  fullName: System.Windows.Forms.DataGridViewRowPostPaintEventHandler
- uid: System.Windows.Forms.DataGridView.RowPrePaint
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowPrePaint
  nameWithType: DataGridView.RowPrePaint
  fullName: System.Windows.Forms.DataGridView.RowPrePaint
- uid: System.Windows.Forms.DataGridViewRowPrePaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowPrePaintEventHandler
  nameWithType: DataGridViewRowPrePaintEventHandler
  fullName: System.Windows.Forms.DataGridViewRowPrePaintEventHandler
- uid: System.Windows.Forms.DataGridView.Rows
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Rows
  nameWithType: DataGridView.Rows
  fullName: System.Windows.Forms.DataGridView.Rows
- uid: System.Windows.Forms.DataGridView.RowsAdded
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowsAdded
  nameWithType: DataGridView.RowsAdded
  fullName: System.Windows.Forms.DataGridView.RowsAdded
- uid: System.Windows.Forms.DataGridViewRowsAddedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowsAddedEventHandler
  nameWithType: DataGridViewRowsAddedEventHandler
  fullName: System.Windows.Forms.DataGridViewRowsAddedEventHandler
- uid: System.Windows.Forms.DataGridView.RowsDefaultCellStyle
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowsDefaultCellStyle
  nameWithType: DataGridView.RowsDefaultCellStyle
  fullName: System.Windows.Forms.DataGridView.RowsDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowsDefaultCellStyleChanged
  nameWithType: DataGridView.RowsDefaultCellStyleChanged
  fullName: System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.RowsRemoved
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowsRemoved
  nameWithType: DataGridView.RowsRemoved
  fullName: System.Windows.Forms.DataGridView.RowsRemoved
- uid: System.Windows.Forms.DataGridViewRowsRemovedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowsRemovedEventHandler
  nameWithType: DataGridViewRowsRemovedEventHandler
  fullName: System.Windows.Forms.DataGridViewRowsRemovedEventHandler
- uid: System.Windows.Forms.DataGridView.RowStateChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowStateChanged
  nameWithType: DataGridView.RowStateChanged
  fullName: System.Windows.Forms.DataGridView.RowStateChanged
- uid: System.Windows.Forms.DataGridViewRowStateChangedEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowStateChangedEventHandler
  nameWithType: DataGridViewRowStateChangedEventHandler
  fullName: System.Windows.Forms.DataGridViewRowStateChangedEventHandler
- uid: System.Windows.Forms.DataGridView.RowTemplate
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowTemplate
  nameWithType: DataGridView.RowTemplate
  fullName: System.Windows.Forms.DataGridView.RowTemplate
- uid: System.Windows.Forms.DataGridView.RowUnshared
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowUnshared
  nameWithType: DataGridView.RowUnshared
  fullName: System.Windows.Forms.DataGridView.RowUnshared
- uid: System.Windows.Forms.DataGridView.RowValidated
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowValidated
  nameWithType: DataGridView.RowValidated
  fullName: System.Windows.Forms.DataGridView.RowValidated
- uid: System.Windows.Forms.DataGridView.RowValidating
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowValidating
  nameWithType: DataGridView.RowValidating
  fullName: System.Windows.Forms.DataGridView.RowValidating
- uid: System.Windows.Forms.DataGridView.Scroll
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Scroll
  nameWithType: DataGridView.Scroll
  fullName: System.Windows.Forms.DataGridView.Scroll
- uid: System.Windows.Forms.ScrollEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: ScrollEventHandler
  nameWithType: ScrollEventHandler
  fullName: System.Windows.Forms.ScrollEventHandler
- uid: System.Windows.Forms.DataGridView.ScrollBars
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ScrollBars
  nameWithType: DataGridView.ScrollBars
  fullName: System.Windows.Forms.DataGridView.ScrollBars
- uid: System.Windows.Forms.ScrollBars
  parent: System.Windows.Forms
  isExternal: false
  name: ScrollBars
  nameWithType: ScrollBars
  fullName: System.Windows.Forms.ScrollBars
- uid: System.Windows.Forms.DataGridView.SelectAll
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectAll()
  nameWithType: DataGridView.SelectAll()
  fullName: System.Windows.Forms.DataGridView.SelectAll()
- uid: System.Windows.Forms.DataGridView.SelectedCells
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectedCells
  nameWithType: DataGridView.SelectedCells
  fullName: System.Windows.Forms.DataGridView.SelectedCells
- uid: System.Windows.Forms.DataGridViewSelectedCellCollection
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewSelectedCellCollection
  nameWithType: DataGridViewSelectedCellCollection
  fullName: System.Windows.Forms.DataGridViewSelectedCellCollection
- uid: System.Windows.Forms.DataGridView.SelectedColumns
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectedColumns
  nameWithType: DataGridView.SelectedColumns
  fullName: System.Windows.Forms.DataGridView.SelectedColumns
- uid: System.Windows.Forms.DataGridViewSelectedColumnCollection
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewSelectedColumnCollection
  nameWithType: DataGridViewSelectedColumnCollection
  fullName: System.Windows.Forms.DataGridViewSelectedColumnCollection
- uid: System.Windows.Forms.DataGridView.SelectedRows
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectedRows
  nameWithType: DataGridView.SelectedRows
  fullName: System.Windows.Forms.DataGridView.SelectedRows
- uid: System.Windows.Forms.DataGridViewSelectedRowCollection
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewSelectedRowCollection
  nameWithType: DataGridViewSelectedRowCollection
  fullName: System.Windows.Forms.DataGridViewSelectedRowCollection
- uid: System.Windows.Forms.DataGridView.SelectionChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectionChanged
  nameWithType: DataGridView.SelectionChanged
  fullName: System.Windows.Forms.DataGridView.SelectionChanged
- uid: System.Windows.Forms.DataGridView.SelectionMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectionMode
  nameWithType: DataGridView.SelectionMode
  fullName: System.Windows.Forms.DataGridView.SelectionMode
- uid: System.Windows.Forms.DataGridViewSelectionMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewSelectionMode
  nameWithType: DataGridViewSelectionMode
  fullName: System.Windows.Forms.DataGridViewSelectionMode
- uid: System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: DataGridView.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.DataGridView.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)
  nameWithType: DataGridView.SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetSelectedCellCore(Int32,Int32,Boolean)
  nameWithType: DataGridView.SetSelectedCellCore(Int32,Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetSelectedCellCore(Int32,Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetSelectedColumnCore(Int32,Boolean)
  nameWithType: DataGridView.SetSelectedColumnCore(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetSelectedColumnCore(Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetSelectedRowCore(Int32,Boolean)
  nameWithType: DataGridView.SetSelectedRowCore(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.SetSelectedRowCore(Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.ShowCellErrors
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowCellErrors
  nameWithType: DataGridView.ShowCellErrors
  fullName: System.Windows.Forms.DataGridView.ShowCellErrors
- uid: System.Windows.Forms.DataGridView.ShowCellToolTips
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowCellToolTips
  nameWithType: DataGridView.ShowCellToolTips
  fullName: System.Windows.Forms.DataGridView.ShowCellToolTips
- uid: System.Windows.Forms.DataGridView.ShowEditingIcon
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowEditingIcon
  nameWithType: DataGridView.ShowEditingIcon
  fullName: System.Windows.Forms.DataGridView.ShowEditingIcon
- uid: System.Windows.Forms.DataGridView.ShowRowErrors
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowRowErrors
  nameWithType: DataGridView.ShowRowErrors
  fullName: System.Windows.Forms.DataGridView.ShowRowErrors
- uid: System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Sort(IComparer)
  nameWithType: DataGridView.Sort(IComparer)
  fullName: System.Windows.Forms.DataGridView.Sort(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Sort(DataGridViewColumn,ListSortDirection)
  nameWithType: DataGridView.Sort(DataGridViewColumn,ListSortDirection)
  fullName: System.Windows.Forms.DataGridView.Sort(DataGridViewColumn,ListSortDirection)
- uid: System.Windows.Forms.DataGridViewColumn
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewColumn
  nameWithType: DataGridViewColumn
  fullName: System.Windows.Forms.DataGridViewColumn
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.Windows.Forms.DataGridView.SortCompare
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SortCompare
  nameWithType: DataGridView.SortCompare
  fullName: System.Windows.Forms.DataGridView.SortCompare
- uid: System.Windows.Forms.DataGridViewSortCompareEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewSortCompareEventHandler
  nameWithType: DataGridViewSortCompareEventHandler
  fullName: System.Windows.Forms.DataGridViewSortCompareEventHandler
- uid: System.Windows.Forms.DataGridView.Sorted
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Sorted
  nameWithType: DataGridView.Sorted
  fullName: System.Windows.Forms.DataGridView.Sorted
- uid: System.Windows.Forms.DataGridView.SortedColumn
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SortedColumn
  nameWithType: DataGridView.SortedColumn
  fullName: System.Windows.Forms.DataGridView.SortedColumn
- uid: System.Windows.Forms.DataGridView.SortOrder
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SortOrder
  nameWithType: DataGridView.SortOrder
  fullName: System.Windows.Forms.DataGridView.SortOrder
- uid: System.Windows.Forms.SortOrder
  parent: System.Windows.Forms
  isExternal: false
  name: SortOrder
  nameWithType: SortOrder
  fullName: System.Windows.Forms.SortOrder
- uid: System.Windows.Forms.DataGridView.StandardTab
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: StandardTab
  nameWithType: DataGridView.StandardTab
  fullName: System.Windows.Forms.DataGridView.StandardTab
- uid: System.Windows.Forms.DataGridView.StyleChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: StyleChanged
  nameWithType: DataGridView.StyleChanged
  fullName: System.Windows.Forms.DataGridView.StyleChanged
- uid: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: DataGridView.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Forms.DataGridView.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: DataGridView.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Forms.DataGridView.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Forms.DataGridView.Text
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Text
  nameWithType: DataGridView.Text
  fullName: System.Windows.Forms.DataGridView.Text
- uid: System.Windows.Forms.DataGridView.TextChanged
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: TextChanged
  nameWithType: DataGridView.TextChanged
  fullName: System.Windows.Forms.DataGridView.TextChanged
- uid: System.Windows.Forms.DataGridView.TopLeftHeaderCell
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: TopLeftHeaderCell
  nameWithType: DataGridView.TopLeftHeaderCell
  fullName: System.Windows.Forms.DataGridView.TopLeftHeaderCell
- uid: System.Windows.Forms.DataGridViewHeaderCell
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewHeaderCell
  nameWithType: DataGridViewHeaderCell
  fullName: System.Windows.Forms.DataGridViewHeaderCell
- uid: System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateCellErrorText(Int32,Int32)
  nameWithType: DataGridView.UpdateCellErrorText(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateCellErrorText(Int32,Int32)
- uid: System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateCellValue(Int32,Int32)
  nameWithType: DataGridView.UpdateCellValue(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateCellValue(Int32,Int32)
- uid: System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateRowErrorText(Int32)
  nameWithType: DataGridView.UpdateRowErrorText(Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateRowErrorText(Int32)
- uid: System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateRowErrorText(Int32,Int32)
  nameWithType: DataGridView.UpdateRowErrorText(Int32,Int32)
  fullName: System.Windows.Forms.DataGridView.UpdateRowErrorText(Int32,Int32)
- uid: System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateRowHeightInfo(Int32,Boolean)
  nameWithType: DataGridView.UpdateRowHeightInfo(Int32,Boolean)
  fullName: System.Windows.Forms.DataGridView.UpdateRowHeightInfo(Int32,Boolean)
- uid: System.Windows.Forms.DataGridView.UserAddedRow
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UserAddedRow
  nameWithType: DataGridView.UserAddedRow
  fullName: System.Windows.Forms.DataGridView.UserAddedRow
- uid: System.Windows.Forms.DataGridView.UserDeletedRow
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UserDeletedRow
  nameWithType: DataGridView.UserDeletedRow
  fullName: System.Windows.Forms.DataGridView.UserDeletedRow
- uid: System.Windows.Forms.DataGridView.UserDeletingRow
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UserDeletingRow
  nameWithType: DataGridView.UserDeletingRow
  fullName: System.Windows.Forms.DataGridView.UserDeletingRow
- uid: System.Windows.Forms.DataGridViewRowCancelEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowCancelEventHandler
  nameWithType: DataGridViewRowCancelEventHandler
  fullName: System.Windows.Forms.DataGridViewRowCancelEventHandler
- uid: System.Windows.Forms.DataGridView.UserSetCursor
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UserSetCursor
  nameWithType: DataGridView.UserSetCursor
  fullName: System.Windows.Forms.DataGridView.UserSetCursor
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Windows.Forms.DataGridView.VerticalScrollBar
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: VerticalScrollBar
  nameWithType: DataGridView.VerticalScrollBar
  fullName: System.Windows.Forms.DataGridView.VerticalScrollBar
- uid: System.Windows.Forms.DataGridView.VerticalScrollingOffset
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: VerticalScrollingOffset
  nameWithType: DataGridView.VerticalScrollingOffset
  fullName: System.Windows.Forms.DataGridView.VerticalScrollingOffset
- uid: System.Windows.Forms.DataGridView.VirtualMode
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: VirtualMode
  nameWithType: DataGridView.VirtualMode
  fullName: System.Windows.Forms.DataGridView.VirtualMode
- uid: System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: WndProc(Message)
  nameWithType: DataGridView.WndProc(Message)
  fullName: System.Windows.Forms.DataGridView.WndProc(Message)
- uid: System.Windows.Forms.DataGridView.#ctor*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataGridView
  nameWithType: DataGridView.DataGridView
- uid: System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AccessibilityNotifyCurrentCellChanged
  nameWithType: DataGridView.AccessibilityNotifyCurrentCellChanged
- uid: System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdjustColumnHeaderBorderStyle
  nameWithType: DataGridView.AdjustColumnHeaderBorderStyle
- uid: System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdjustedTopLeftHeaderBorderStyle
  nameWithType: DataGridView.AdjustedTopLeftHeaderBorderStyle
- uid: System.Windows.Forms.DataGridView.AdvancedCellBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdvancedCellBorderStyle
  nameWithType: DataGridView.AdvancedCellBorderStyle
- uid: System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdvancedColumnHeadersBorderStyle
  nameWithType: DataGridView.AdvancedColumnHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AdvancedRowHeadersBorderStyle
  nameWithType: DataGridView.AdvancedRowHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.AllowUserToAddRows*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToAddRows
  nameWithType: DataGridView.AllowUserToAddRows
- uid: System.Windows.Forms.DataGridView.AllowUserToDeleteRows*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToDeleteRows
  nameWithType: DataGridView.AllowUserToDeleteRows
- uid: System.Windows.Forms.DataGridView.AllowUserToOrderColumns*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToOrderColumns
  nameWithType: DataGridView.AllowUserToOrderColumns
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeColumns*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToResizeColumns
  nameWithType: DataGridView.AllowUserToResizeColumns
- uid: System.Windows.Forms.DataGridView.AllowUserToResizeRows*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AllowUserToResizeRows
  nameWithType: DataGridView.AllowUserToResizeRows
- uid: System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AlternatingRowsDefaultCellStyle
  nameWithType: DataGridView.AlternatingRowsDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.AreAllCellsSelected*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AreAllCellsSelected
  nameWithType: DataGridView.AreAllCellsSelected
- uid: System.Windows.Forms.DataGridView.AutoGenerateColumns*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoGenerateColumns
  nameWithType: DataGridView.AutoGenerateColumns
- uid: System.Windows.Forms.DataGridView.AutoResizeColumn*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumn
  nameWithType: DataGridView.AutoResizeColumn
- uid: System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumnHeadersHeight
  nameWithType: DataGridView.AutoResizeColumnHeadersHeight
- uid: System.Windows.Forms.DataGridView.AutoResizeColumns*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeColumns
  nameWithType: DataGridView.AutoResizeColumns
- uid: System.Windows.Forms.DataGridView.AutoResizeRow*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRow
  nameWithType: DataGridView.AutoResizeRow
- uid: System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRowHeadersWidth
  nameWithType: DataGridView.AutoResizeRowHeadersWidth
- uid: System.Windows.Forms.DataGridView.AutoResizeRows*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoResizeRows
  nameWithType: DataGridView.AutoResizeRows
- uid: System.Windows.Forms.DataGridView.AutoSize*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSize
  nameWithType: DataGridView.AutoSize
- uid: System.Windows.Forms.DataGridView.AutoSizeColumnsMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeColumnsMode
  nameWithType: DataGridView.AutoSizeColumnsMode
- uid: System.Windows.Forms.DataGridView.AutoSizeRowsMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: AutoSizeRowsMode
  nameWithType: DataGridView.AutoSizeRowsMode
- uid: System.Windows.Forms.DataGridView.BackColor*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackColor
  nameWithType: DataGridView.BackColor
- uid: System.Windows.Forms.DataGridView.BackgroundColor*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundColor
  nameWithType: DataGridView.BackgroundColor
- uid: System.Windows.Forms.DataGridView.BackgroundImage*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundImage
  nameWithType: DataGridView.BackgroundImage
- uid: System.Windows.Forms.DataGridView.BackgroundImageLayout*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: DataGridView.BackgroundImageLayout
- uid: System.Windows.Forms.DataGridView.BeginEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BeginEdit
  nameWithType: DataGridView.BeginEdit
- uid: System.Windows.Forms.DataGridView.BorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: BorderStyle
  nameWithType: DataGridView.BorderStyle
- uid: System.Windows.Forms.DataGridView.CancelEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CancelEdit
  nameWithType: DataGridView.CancelEdit
- uid: System.Windows.Forms.DataGridView.CanEnableIme*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CanEnableIme
  nameWithType: DataGridView.CanEnableIme
- uid: System.Windows.Forms.DataGridView.CellBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CellBorderStyle
  nameWithType: DataGridView.CellBorderStyle
- uid: System.Windows.Forms.DataGridView.ClearSelection*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ClearSelection
  nameWithType: DataGridView.ClearSelection
- uid: System.Windows.Forms.DataGridView.ClipboardCopyMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ClipboardCopyMode
  nameWithType: DataGridView.ClipboardCopyMode
- uid: System.Windows.Forms.DataGridView.ColumnCount*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnCount
  nameWithType: DataGridView.ColumnCount
- uid: System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersBorderStyle
  nameWithType: DataGridView.ColumnHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersDefaultCellStyle
  nameWithType: DataGridView.ColumnHeadersDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeight*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersHeight
  nameWithType: DataGridView.ColumnHeadersHeight
- uid: System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersHeightSizeMode
  nameWithType: DataGridView.ColumnHeadersHeightSizeMode
- uid: System.Windows.Forms.DataGridView.ColumnHeadersVisible*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ColumnHeadersVisible
  nameWithType: DataGridView.ColumnHeadersVisible
- uid: System.Windows.Forms.DataGridView.Columns*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Columns
  nameWithType: DataGridView.Columns
- uid: System.Windows.Forms.DataGridView.CommitEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CommitEdit
  nameWithType: DataGridView.CommitEdit
- uid: System.Windows.Forms.DataGridView.CreateAccessibilityInstance*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateAccessibilityInstance
  nameWithType: DataGridView.CreateAccessibilityInstance
- uid: System.Windows.Forms.DataGridView.CreateColumnsInstance*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateColumnsInstance
  nameWithType: DataGridView.CreateColumnsInstance
- uid: System.Windows.Forms.DataGridView.CreateControlsInstance*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateControlsInstance
  nameWithType: DataGridView.CreateControlsInstance
- uid: System.Windows.Forms.DataGridView.CreateRowsInstance*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CreateRowsInstance
  nameWithType: DataGridView.CreateRowsInstance
- uid: System.Windows.Forms.DataGridView.CurrentCell*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentCell
  nameWithType: DataGridView.CurrentCell
- uid: System.Windows.Forms.DataGridView.CurrentCellAddress*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentCellAddress
  nameWithType: DataGridView.CurrentCellAddress
- uid: System.Windows.Forms.DataGridView.CurrentRow*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: CurrentRow
  nameWithType: DataGridView.CurrentRow
- uid: System.Windows.Forms.DataGridView.DataMember*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataMember
  nameWithType: DataGridView.DataMember
- uid: System.Windows.Forms.DataGridView.DataSource*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DataSource
  nameWithType: DataGridView.DataSource
- uid: System.Windows.Forms.DataGridView.DefaultCellStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DefaultCellStyle
  nameWithType: DataGridView.DefaultCellStyle
- uid: System.Windows.Forms.DataGridView.DefaultSize*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DefaultSize
  nameWithType: DataGridView.DefaultSize
- uid: System.Windows.Forms.DataGridView.DisplayedColumnCount*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DisplayedColumnCount
  nameWithType: DataGridView.DisplayedColumnCount
- uid: System.Windows.Forms.DataGridView.DisplayedRowCount*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DisplayedRowCount
  nameWithType: DataGridView.DisplayedRowCount
- uid: System.Windows.Forms.DataGridView.DisplayRectangle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: DisplayRectangle
  nameWithType: DataGridView.DisplayRectangle
- uid: System.Windows.Forms.DataGridView.Dispose*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Dispose
  nameWithType: DataGridView.Dispose
- uid: System.Windows.Forms.DataGridView.EditingControl*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditingControl
  nameWithType: DataGridView.EditingControl
- uid: System.Windows.Forms.DataGridView.EditingPanel*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditingPanel
  nameWithType: DataGridView.EditingPanel
- uid: System.Windows.Forms.DataGridView.EditMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EditMode
  nameWithType: DataGridView.EditMode
- uid: System.Windows.Forms.DataGridView.EnableHeadersVisualStyles*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EnableHeadersVisualStyles
  nameWithType: DataGridView.EnableHeadersVisualStyles
- uid: System.Windows.Forms.DataGridView.EndEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: EndEdit
  nameWithType: DataGridView.EndEdit
- uid: System.Windows.Forms.DataGridView.FirstDisplayedCell*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedCell
  nameWithType: DataGridView.FirstDisplayedCell
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedScrollingColumnHiddenWidth
  nameWithType: DataGridView.FirstDisplayedScrollingColumnHiddenWidth
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedScrollingColumnIndex
  nameWithType: DataGridView.FirstDisplayedScrollingColumnIndex
- uid: System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: FirstDisplayedScrollingRowIndex
  nameWithType: DataGridView.FirstDisplayedScrollingRowIndex
- uid: System.Windows.Forms.DataGridView.Font*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Font
  nameWithType: DataGridView.Font
- uid: System.Windows.Forms.DataGridView.ForeColor*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ForeColor
  nameWithType: DataGridView.ForeColor
- uid: System.Windows.Forms.DataGridView.GetAccessibilityObjectById*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetAccessibilityObjectById
  nameWithType: DataGridView.GetAccessibilityObjectById
- uid: System.Windows.Forms.DataGridView.GetCellCount*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetCellCount
  nameWithType: DataGridView.GetCellCount
- uid: System.Windows.Forms.DataGridView.GetCellDisplayRectangle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetCellDisplayRectangle
  nameWithType: DataGridView.GetCellDisplayRectangle
- uid: System.Windows.Forms.DataGridView.GetClipboardContent*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetClipboardContent
  nameWithType: DataGridView.GetClipboardContent
- uid: System.Windows.Forms.DataGridView.GetColumnDisplayRectangle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetColumnDisplayRectangle
  nameWithType: DataGridView.GetColumnDisplayRectangle
- uid: System.Windows.Forms.DataGridView.GetRowDisplayRectangle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GetRowDisplayRectangle
  nameWithType: DataGridView.GetRowDisplayRectangle
- uid: System.Windows.Forms.DataGridView.GridColor*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: GridColor
  nameWithType: DataGridView.GridColor
- uid: System.Windows.Forms.DataGridView.HitTest*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: HitTest
  nameWithType: DataGridView.HitTest
- uid: System.Windows.Forms.DataGridView.HorizontalScrollBar*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: HorizontalScrollBar
  nameWithType: DataGridView.HorizontalScrollBar
- uid: System.Windows.Forms.DataGridView.HorizontalScrollingOffset*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: HorizontalScrollingOffset
  nameWithType: DataGridView.HorizontalScrollingOffset
- uid: System.Windows.Forms.DataGridView.InvalidateCell*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateCell
  nameWithType: DataGridView.InvalidateCell
- uid: System.Windows.Forms.DataGridView.InvalidateColumn*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateColumn
  nameWithType: DataGridView.InvalidateColumn
- uid: System.Windows.Forms.DataGridView.InvalidateRow*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: InvalidateRow
  nameWithType: DataGridView.InvalidateRow
- uid: System.Windows.Forms.DataGridView.IsCurrentCellDirty*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsCurrentCellDirty
  nameWithType: DataGridView.IsCurrentCellDirty
- uid: System.Windows.Forms.DataGridView.IsCurrentCellInEditMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsCurrentCellInEditMode
  nameWithType: DataGridView.IsCurrentCellInEditMode
- uid: System.Windows.Forms.DataGridView.IsCurrentRowDirty*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsCurrentRowDirty
  nameWithType: DataGridView.IsCurrentRowDirty
- uid: System.Windows.Forms.DataGridView.IsInputChar*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsInputChar
  nameWithType: DataGridView.IsInputChar
- uid: System.Windows.Forms.DataGridView.IsInputKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: IsInputKey
  nameWithType: DataGridView.IsInputKey
- uid: System.Windows.Forms.DataGridView.Item*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Item
  nameWithType: DataGridView.Item
- uid: System.Windows.Forms.DataGridView.MultiSelect*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: MultiSelect
  nameWithType: DataGridView.MultiSelect
- uid: System.Windows.Forms.DataGridView.NewRowIndex*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: NewRowIndex
  nameWithType: DataGridView.NewRowIndex
- uid: System.Windows.Forms.DataGridView.NotifyCurrentCellDirty*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: NotifyCurrentCellDirty
  nameWithType: DataGridView.NotifyCurrentCellDirty
- uid: System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToAddRowsChanged
  nameWithType: DataGridView.OnAllowUserToAddRowsChanged
- uid: System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToDeleteRowsChanged
  nameWithType: DataGridView.OnAllowUserToDeleteRowsChanged
- uid: System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToOrderColumnsChanged
  nameWithType: DataGridView.OnAllowUserToOrderColumnsChanged
- uid: System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToResizeColumnsChanged
  nameWithType: DataGridView.OnAllowUserToResizeColumnsChanged
- uid: System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAllowUserToResizeRowsChanged
  nameWithType: DataGridView.OnAllowUserToResizeRowsChanged
- uid: System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAlternatingRowsDefaultCellStyleChanged
  nameWithType: DataGridView.OnAlternatingRowsDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoGenerateColumnsChanged
  nameWithType: DataGridView.OnAutoGenerateColumnsChanged
- uid: System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoSizeColumnModeChanged
  nameWithType: DataGridView.OnAutoSizeColumnModeChanged
- uid: System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoSizeColumnsModeChanged
  nameWithType: DataGridView.OnAutoSizeColumnsModeChanged
- uid: System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnAutoSizeRowsModeChanged
  nameWithType: DataGridView.OnAutoSizeRowsModeChanged
- uid: System.Windows.Forms.DataGridView.OnBackgroundColorChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnBackgroundColorChanged
  nameWithType: DataGridView.OnBackgroundColorChanged
- uid: System.Windows.Forms.DataGridView.OnBindingContextChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnBindingContextChanged
  nameWithType: DataGridView.OnBindingContextChanged
- uid: System.Windows.Forms.DataGridView.OnBorderStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnBorderStyleChanged
  nameWithType: DataGridView.OnBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.OnCancelRowEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCancelRowEdit
  nameWithType: DataGridView.OnCancelRowEdit
- uid: System.Windows.Forms.DataGridView.OnCellBeginEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellBeginEdit
  nameWithType: DataGridView.OnCellBeginEdit
- uid: System.Windows.Forms.DataGridView.OnCellBorderStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellBorderStyleChanged
  nameWithType: DataGridView.OnCellBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.OnCellClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellClick
  nameWithType: DataGridView.OnCellClick
- uid: System.Windows.Forms.DataGridView.OnCellContentClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContentClick
  nameWithType: DataGridView.OnCellContentClick
- uid: System.Windows.Forms.DataGridView.OnCellContentDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContentDoubleClick
  nameWithType: DataGridView.OnCellContentDoubleClick
- uid: System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContextMenuStripChanged
  nameWithType: DataGridView.OnCellContextMenuStripChanged
- uid: System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellContextMenuStripNeeded
  nameWithType: DataGridView.OnCellContextMenuStripNeeded
- uid: System.Windows.Forms.DataGridView.OnCellDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellDoubleClick
  nameWithType: DataGridView.OnCellDoubleClick
- uid: System.Windows.Forms.DataGridView.OnCellEndEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellEndEdit
  nameWithType: DataGridView.OnCellEndEdit
- uid: System.Windows.Forms.DataGridView.OnCellEnter*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellEnter
  nameWithType: DataGridView.OnCellEnter
- uid: System.Windows.Forms.DataGridView.OnCellErrorTextChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellErrorTextChanged
  nameWithType: DataGridView.OnCellErrorTextChanged
- uid: System.Windows.Forms.DataGridView.OnCellErrorTextNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellErrorTextNeeded
  nameWithType: DataGridView.OnCellErrorTextNeeded
- uid: System.Windows.Forms.DataGridView.OnCellFormatting*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellFormatting
  nameWithType: DataGridView.OnCellFormatting
- uid: System.Windows.Forms.DataGridView.OnCellLeave*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellLeave
  nameWithType: DataGridView.OnCellLeave
- uid: System.Windows.Forms.DataGridView.OnCellMouseClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseClick
  nameWithType: DataGridView.OnCellMouseClick
- uid: System.Windows.Forms.DataGridView.OnCellMouseDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseDoubleClick
  nameWithType: DataGridView.OnCellMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.OnCellMouseDown*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseDown
  nameWithType: DataGridView.OnCellMouseDown
- uid: System.Windows.Forms.DataGridView.OnCellMouseEnter*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseEnter
  nameWithType: DataGridView.OnCellMouseEnter
- uid: System.Windows.Forms.DataGridView.OnCellMouseLeave*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseLeave
  nameWithType: DataGridView.OnCellMouseLeave
- uid: System.Windows.Forms.DataGridView.OnCellMouseMove*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseMove
  nameWithType: DataGridView.OnCellMouseMove
- uid: System.Windows.Forms.DataGridView.OnCellMouseUp*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellMouseUp
  nameWithType: DataGridView.OnCellMouseUp
- uid: System.Windows.Forms.DataGridView.OnCellPainting*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellPainting
  nameWithType: DataGridView.OnCellPainting
- uid: System.Windows.Forms.DataGridView.OnCellParsing*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellParsing
  nameWithType: DataGridView.OnCellParsing
- uid: System.Windows.Forms.DataGridView.OnCellStateChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellStateChanged
  nameWithType: DataGridView.OnCellStateChanged
- uid: System.Windows.Forms.DataGridView.OnCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellStyleChanged
  nameWithType: DataGridView.OnCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnCellStyleContentChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellStyleContentChanged
  nameWithType: DataGridView.OnCellStyleContentChanged
- uid: System.Windows.Forms.DataGridView.OnCellToolTipTextChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellToolTipTextChanged
  nameWithType: DataGridView.OnCellToolTipTextChanged
- uid: System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellToolTipTextNeeded
  nameWithType: DataGridView.OnCellToolTipTextNeeded
- uid: System.Windows.Forms.DataGridView.OnCellValidated*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValidated
  nameWithType: DataGridView.OnCellValidated
- uid: System.Windows.Forms.DataGridView.OnCellValidating*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValidating
  nameWithType: DataGridView.OnCellValidating
- uid: System.Windows.Forms.DataGridView.OnCellValueChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValueChanged
  nameWithType: DataGridView.OnCellValueChanged
- uid: System.Windows.Forms.DataGridView.OnCellValueNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValueNeeded
  nameWithType: DataGridView.OnCellValueNeeded
- uid: System.Windows.Forms.DataGridView.OnCellValuePushed*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCellValuePushed
  nameWithType: DataGridView.OnCellValuePushed
- uid: System.Windows.Forms.DataGridView.OnColumnAdded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnAdded
  nameWithType: DataGridView.OnColumnAdded
- uid: System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnContextMenuStripChanged
  nameWithType: DataGridView.OnColumnContextMenuStripChanged
- uid: System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDataPropertyNameChanged
  nameWithType: DataGridView.OnColumnDataPropertyNameChanged
- uid: System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDefaultCellStyleChanged
  nameWithType: DataGridView.OnColumnDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDisplayIndexChanged
  nameWithType: DataGridView.OnColumnDisplayIndexChanged
- uid: System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDividerDoubleClick
  nameWithType: DataGridView.OnColumnDividerDoubleClick
- uid: System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnDividerWidthChanged
  nameWithType: DataGridView.OnColumnDividerWidthChanged
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeaderCellChanged
  nameWithType: DataGridView.OnColumnHeaderCellChanged
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeaderMouseClick
  nameWithType: DataGridView.OnColumnHeaderMouseClick
- uid: System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeaderMouseDoubleClick
  nameWithType: DataGridView.OnColumnHeaderMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersBorderStyleChanged
  nameWithType: DataGridView.OnColumnHeadersBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersDefaultCellStyleChanged
  nameWithType: DataGridView.OnColumnHeadersDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersHeightChanged
  nameWithType: DataGridView.OnColumnHeadersHeightChanged
- uid: System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnHeadersHeightSizeModeChanged
  nameWithType: DataGridView.OnColumnHeadersHeightSizeModeChanged
- uid: System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnMinimumWidthChanged
  nameWithType: DataGridView.OnColumnMinimumWidthChanged
- uid: System.Windows.Forms.DataGridView.OnColumnNameChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnNameChanged
  nameWithType: DataGridView.OnColumnNameChanged
- uid: System.Windows.Forms.DataGridView.OnColumnRemoved*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnRemoved
  nameWithType: DataGridView.OnColumnRemoved
- uid: System.Windows.Forms.DataGridView.OnColumnSortModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnSortModeChanged
  nameWithType: DataGridView.OnColumnSortModeChanged
- uid: System.Windows.Forms.DataGridView.OnColumnStateChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnStateChanged
  nameWithType: DataGridView.OnColumnStateChanged
- uid: System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnToolTipTextChanged
  nameWithType: DataGridView.OnColumnToolTipTextChanged
- uid: System.Windows.Forms.DataGridView.OnColumnWidthChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnColumnWidthChanged
  nameWithType: DataGridView.OnColumnWidthChanged
- uid: System.Windows.Forms.DataGridView.OnCurrentCellChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCurrentCellChanged
  nameWithType: DataGridView.OnCurrentCellChanged
- uid: System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCurrentCellDirtyStateChanged
  nameWithType: DataGridView.OnCurrentCellDirtyStateChanged
- uid: System.Windows.Forms.DataGridView.OnCursorChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnCursorChanged
  nameWithType: DataGridView.OnCursorChanged
- uid: System.Windows.Forms.DataGridView.OnDataBindingComplete*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataBindingComplete
  nameWithType: DataGridView.OnDataBindingComplete
- uid: System.Windows.Forms.DataGridView.OnDataError*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataError
  nameWithType: DataGridView.OnDataError
- uid: System.Windows.Forms.DataGridView.OnDataMemberChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataMemberChanged
  nameWithType: DataGridView.OnDataMemberChanged
- uid: System.Windows.Forms.DataGridView.OnDataSourceChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDataSourceChanged
  nameWithType: DataGridView.OnDataSourceChanged
- uid: System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDefaultCellStyleChanged
  nameWithType: DataGridView.OnDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnDefaultValuesNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDefaultValuesNeeded
  nameWithType: DataGridView.OnDefaultValuesNeeded
- uid: System.Windows.Forms.DataGridView.OnDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnDoubleClick
  nameWithType: DataGridView.OnDoubleClick
- uid: System.Windows.Forms.DataGridView.OnEditingControlShowing*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEditingControlShowing
  nameWithType: DataGridView.OnEditingControlShowing
- uid: System.Windows.Forms.DataGridView.OnEditModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEditModeChanged
  nameWithType: DataGridView.OnEditModeChanged
- uid: System.Windows.Forms.DataGridView.OnEnabledChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEnabledChanged
  nameWithType: DataGridView.OnEnabledChanged
- uid: System.Windows.Forms.DataGridView.OnEnter*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnEnter
  nameWithType: DataGridView.OnEnter
- uid: System.Windows.Forms.DataGridView.OnFontChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnFontChanged
  nameWithType: DataGridView.OnFontChanged
- uid: System.Windows.Forms.DataGridView.OnForeColorChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnForeColorChanged
  nameWithType: DataGridView.OnForeColorChanged
- uid: System.Windows.Forms.DataGridView.OnGotFocus*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnGotFocus
  nameWithType: DataGridView.OnGotFocus
- uid: System.Windows.Forms.DataGridView.OnGridColorChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnGridColorChanged
  nameWithType: DataGridView.OnGridColorChanged
- uid: System.Windows.Forms.DataGridView.OnHandleCreated*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnHandleCreated
  nameWithType: DataGridView.OnHandleCreated
- uid: System.Windows.Forms.DataGridView.OnHandleDestroyed*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: DataGridView.OnHandleDestroyed
- uid: System.Windows.Forms.DataGridView.OnKeyDown*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnKeyDown
  nameWithType: DataGridView.OnKeyDown
- uid: System.Windows.Forms.DataGridView.OnKeyPress*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnKeyPress
  nameWithType: DataGridView.OnKeyPress
- uid: System.Windows.Forms.DataGridView.OnKeyUp*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnKeyUp
  nameWithType: DataGridView.OnKeyUp
- uid: System.Windows.Forms.DataGridView.OnLayout*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnLayout
  nameWithType: DataGridView.OnLayout
- uid: System.Windows.Forms.DataGridView.OnLeave*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnLeave
  nameWithType: DataGridView.OnLeave
- uid: System.Windows.Forms.DataGridView.OnLostFocus*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnLostFocus
  nameWithType: DataGridView.OnLostFocus
- uid: System.Windows.Forms.DataGridView.OnMouseClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseClick
  nameWithType: DataGridView.OnMouseClick
- uid: System.Windows.Forms.DataGridView.OnMouseDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseDoubleClick
  nameWithType: DataGridView.OnMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.OnMouseDown*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseDown
  nameWithType: DataGridView.OnMouseDown
- uid: System.Windows.Forms.DataGridView.OnMouseEnter*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseEnter
  nameWithType: DataGridView.OnMouseEnter
- uid: System.Windows.Forms.DataGridView.OnMouseLeave*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseLeave
  nameWithType: DataGridView.OnMouseLeave
- uid: System.Windows.Forms.DataGridView.OnMouseMove*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseMove
  nameWithType: DataGridView.OnMouseMove
- uid: System.Windows.Forms.DataGridView.OnMouseUp*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseUp
  nameWithType: DataGridView.OnMouseUp
- uid: System.Windows.Forms.DataGridView.OnMouseWheel*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMouseWheel
  nameWithType: DataGridView.OnMouseWheel
- uid: System.Windows.Forms.DataGridView.OnMultiSelectChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnMultiSelectChanged
  nameWithType: DataGridView.OnMultiSelectChanged
- uid: System.Windows.Forms.DataGridView.OnNewRowNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnNewRowNeeded
  nameWithType: DataGridView.OnNewRowNeeded
- uid: System.Windows.Forms.DataGridView.OnPaint*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnPaint
  nameWithType: DataGridView.OnPaint
- uid: System.Windows.Forms.DataGridView.OnReadOnlyChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnReadOnlyChanged
  nameWithType: DataGridView.OnReadOnlyChanged
- uid: System.Windows.Forms.DataGridView.OnResize*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnResize
  nameWithType: DataGridView.OnResize
- uid: System.Windows.Forms.DataGridView.OnRightToLeftChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRightToLeftChanged
  nameWithType: DataGridView.OnRightToLeftChanged
- uid: System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowContextMenuStripChanged
  nameWithType: DataGridView.OnRowContextMenuStripChanged
- uid: System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowContextMenuStripNeeded
  nameWithType: DataGridView.OnRowContextMenuStripNeeded
- uid: System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDefaultCellStyleChanged
  nameWithType: DataGridView.OnRowDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDirtyStateNeeded
  nameWithType: DataGridView.OnRowDirtyStateNeeded
- uid: System.Windows.Forms.DataGridView.OnRowDividerDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDividerDoubleClick
  nameWithType: DataGridView.OnRowDividerDoubleClick
- uid: System.Windows.Forms.DataGridView.OnRowDividerHeightChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowDividerHeightChanged
  nameWithType: DataGridView.OnRowDividerHeightChanged
- uid: System.Windows.Forms.DataGridView.OnRowEnter*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowEnter
  nameWithType: DataGridView.OnRowEnter
- uid: System.Windows.Forms.DataGridView.OnRowErrorTextChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowErrorTextChanged
  nameWithType: DataGridView.OnRowErrorTextChanged
- uid: System.Windows.Forms.DataGridView.OnRowErrorTextNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowErrorTextNeeded
  nameWithType: DataGridView.OnRowErrorTextNeeded
- uid: System.Windows.Forms.DataGridView.OnRowHeaderCellChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeaderCellChanged
  nameWithType: DataGridView.OnRowHeaderCellChanged
- uid: System.Windows.Forms.DataGridView.OnRowHeaderMouseClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeaderMouseClick
  nameWithType: DataGridView.OnRowHeaderMouseClick
- uid: System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeaderMouseDoubleClick
  nameWithType: DataGridView.OnRowHeaderMouseDoubleClick
- uid: System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersBorderStyleChanged
  nameWithType: DataGridView.OnRowHeadersBorderStyleChanged
- uid: System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersDefaultCellStyleChanged
  nameWithType: DataGridView.OnRowHeadersDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersWidthChanged
  nameWithType: DataGridView.OnRowHeadersWidthChanged
- uid: System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeadersWidthSizeModeChanged
  nameWithType: DataGridView.OnRowHeadersWidthSizeModeChanged
- uid: System.Windows.Forms.DataGridView.OnRowHeightChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeightChanged
  nameWithType: DataGridView.OnRowHeightChanged
- uid: System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeightInfoNeeded
  nameWithType: DataGridView.OnRowHeightInfoNeeded
- uid: System.Windows.Forms.DataGridView.OnRowHeightInfoPushed*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowHeightInfoPushed
  nameWithType: DataGridView.OnRowHeightInfoPushed
- uid: System.Windows.Forms.DataGridView.OnRowLeave*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowLeave
  nameWithType: DataGridView.OnRowLeave
- uid: System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowMinimumHeightChanged
  nameWithType: DataGridView.OnRowMinimumHeightChanged
- uid: System.Windows.Forms.DataGridView.OnRowPostPaint*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowPostPaint
  nameWithType: DataGridView.OnRowPostPaint
- uid: System.Windows.Forms.DataGridView.OnRowPrePaint*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowPrePaint
  nameWithType: DataGridView.OnRowPrePaint
- uid: System.Windows.Forms.DataGridView.OnRowsAdded*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowsAdded
  nameWithType: DataGridView.OnRowsAdded
- uid: System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowsDefaultCellStyleChanged
  nameWithType: DataGridView.OnRowsDefaultCellStyleChanged
- uid: System.Windows.Forms.DataGridView.OnRowsRemoved*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowsRemoved
  nameWithType: DataGridView.OnRowsRemoved
- uid: System.Windows.Forms.DataGridView.OnRowStateChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowStateChanged
  nameWithType: DataGridView.OnRowStateChanged
- uid: System.Windows.Forms.DataGridView.OnRowUnshared*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowUnshared
  nameWithType: DataGridView.OnRowUnshared
- uid: System.Windows.Forms.DataGridView.OnRowValidated*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowValidated
  nameWithType: DataGridView.OnRowValidated
- uid: System.Windows.Forms.DataGridView.OnRowValidating*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnRowValidating
  nameWithType: DataGridView.OnRowValidating
- uid: System.Windows.Forms.DataGridView.OnScroll*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnScroll
  nameWithType: DataGridView.OnScroll
- uid: System.Windows.Forms.DataGridView.OnSelectionChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnSelectionChanged
  nameWithType: DataGridView.OnSelectionChanged
- uid: System.Windows.Forms.DataGridView.OnSortCompare*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnSortCompare
  nameWithType: DataGridView.OnSortCompare
- uid: System.Windows.Forms.DataGridView.OnSorted*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnSorted
  nameWithType: DataGridView.OnSorted
- uid: System.Windows.Forms.DataGridView.OnUserAddedRow*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnUserAddedRow
  nameWithType: DataGridView.OnUserAddedRow
- uid: System.Windows.Forms.DataGridView.OnUserDeletedRow*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnUserDeletedRow
  nameWithType: DataGridView.OnUserDeletedRow
- uid: System.Windows.Forms.DataGridView.OnUserDeletingRow*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnUserDeletingRow
  nameWithType: DataGridView.OnUserDeletingRow
- uid: System.Windows.Forms.DataGridView.OnValidating*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnValidating
  nameWithType: DataGridView.OnValidating
- uid: System.Windows.Forms.DataGridView.OnVisibleChanged*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: OnVisibleChanged
  nameWithType: DataGridView.OnVisibleChanged
- uid: System.Windows.Forms.DataGridView.Padding*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Padding
  nameWithType: DataGridView.Padding
- uid: System.Windows.Forms.DataGridView.PaintBackground*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: PaintBackground
  nameWithType: DataGridView.PaintBackground
- uid: System.Windows.Forms.DataGridView.ProcessAKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessAKey
  nameWithType: DataGridView.ProcessAKey
- uid: System.Windows.Forms.DataGridView.ProcessDataGridViewKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDataGridViewKey
  nameWithType: DataGridView.ProcessDataGridViewKey
- uid: System.Windows.Forms.DataGridView.ProcessDeleteKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDeleteKey
  nameWithType: DataGridView.ProcessDeleteKey
- uid: System.Windows.Forms.DataGridView.ProcessDialogKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDialogKey
  nameWithType: DataGridView.ProcessDialogKey
- uid: System.Windows.Forms.DataGridView.ProcessDownKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessDownKey
  nameWithType: DataGridView.ProcessDownKey
- uid: System.Windows.Forms.DataGridView.ProcessEndKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessEndKey
  nameWithType: DataGridView.ProcessEndKey
- uid: System.Windows.Forms.DataGridView.ProcessEnterKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessEnterKey
  nameWithType: DataGridView.ProcessEnterKey
- uid: System.Windows.Forms.DataGridView.ProcessEscapeKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessEscapeKey
  nameWithType: DataGridView.ProcessEscapeKey
- uid: System.Windows.Forms.DataGridView.ProcessF2Key*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessF2Key
  nameWithType: DataGridView.ProcessF2Key
- uid: System.Windows.Forms.DataGridView.ProcessHomeKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessHomeKey
  nameWithType: DataGridView.ProcessHomeKey
- uid: System.Windows.Forms.DataGridView.ProcessInsertKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessInsertKey
  nameWithType: DataGridView.ProcessInsertKey
- uid: System.Windows.Forms.DataGridView.ProcessKeyEventArgs*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessKeyEventArgs
  nameWithType: DataGridView.ProcessKeyEventArgs
- uid: System.Windows.Forms.DataGridView.ProcessKeyPreview*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessKeyPreview
  nameWithType: DataGridView.ProcessKeyPreview
- uid: System.Windows.Forms.DataGridView.ProcessLeftKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessLeftKey
  nameWithType: DataGridView.ProcessLeftKey
- uid: System.Windows.Forms.DataGridView.ProcessNextKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessNextKey
  nameWithType: DataGridView.ProcessNextKey
- uid: System.Windows.Forms.DataGridView.ProcessPriorKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessPriorKey
  nameWithType: DataGridView.ProcessPriorKey
- uid: System.Windows.Forms.DataGridView.ProcessRightKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessRightKey
  nameWithType: DataGridView.ProcessRightKey
- uid: System.Windows.Forms.DataGridView.ProcessSpaceKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessSpaceKey
  nameWithType: DataGridView.ProcessSpaceKey
- uid: System.Windows.Forms.DataGridView.ProcessTabKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessTabKey
  nameWithType: DataGridView.ProcessTabKey
- uid: System.Windows.Forms.DataGridView.ProcessUpKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessUpKey
  nameWithType: DataGridView.ProcessUpKey
- uid: System.Windows.Forms.DataGridView.ProcessZeroKey*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ProcessZeroKey
  nameWithType: DataGridView.ProcessZeroKey
- uid: System.Windows.Forms.DataGridView.ReadOnly*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ReadOnly
  nameWithType: DataGridView.ReadOnly
- uid: System.Windows.Forms.DataGridView.RefreshEdit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RefreshEdit
  nameWithType: DataGridView.RefreshEdit
- uid: System.Windows.Forms.DataGridView.ResetText*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ResetText
  nameWithType: DataGridView.ResetText
- uid: System.Windows.Forms.DataGridView.RowCount*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowCount
  nameWithType: DataGridView.RowCount
- uid: System.Windows.Forms.DataGridView.RowHeadersBorderStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersBorderStyle
  nameWithType: DataGridView.RowHeadersBorderStyle
- uid: System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersDefaultCellStyle
  nameWithType: DataGridView.RowHeadersDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.RowHeadersVisible*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersVisible
  nameWithType: DataGridView.RowHeadersVisible
- uid: System.Windows.Forms.DataGridView.RowHeadersWidth*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersWidth
  nameWithType: DataGridView.RowHeadersWidth
- uid: System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowHeadersWidthSizeMode
  nameWithType: DataGridView.RowHeadersWidthSizeMode
- uid: System.Windows.Forms.DataGridView.Rows*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Rows
  nameWithType: DataGridView.Rows
- uid: System.Windows.Forms.DataGridView.RowsDefaultCellStyle*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowsDefaultCellStyle
  nameWithType: DataGridView.RowsDefaultCellStyle
- uid: System.Windows.Forms.DataGridView.RowTemplate*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: RowTemplate
  nameWithType: DataGridView.RowTemplate
- uid: System.Windows.Forms.DataGridView.ScrollBars*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ScrollBars
  nameWithType: DataGridView.ScrollBars
- uid: System.Windows.Forms.DataGridView.SelectAll*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectAll
  nameWithType: DataGridView.SelectAll
- uid: System.Windows.Forms.DataGridView.SelectedCells*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectedCells
  nameWithType: DataGridView.SelectedCells
- uid: System.Windows.Forms.DataGridView.SelectedColumns*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectedColumns
  nameWithType: DataGridView.SelectedColumns
- uid: System.Windows.Forms.DataGridView.SelectedRows*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectedRows
  nameWithType: DataGridView.SelectedRows
- uid: System.Windows.Forms.DataGridView.SelectionMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SelectionMode
  nameWithType: DataGridView.SelectionMode
- uid: System.Windows.Forms.DataGridView.SetBoundsCore*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetBoundsCore
  nameWithType: DataGridView.SetBoundsCore
- uid: System.Windows.Forms.DataGridView.SetCurrentCellAddressCore*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetCurrentCellAddressCore
  nameWithType: DataGridView.SetCurrentCellAddressCore
- uid: System.Windows.Forms.DataGridView.SetSelectedCellCore*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetSelectedCellCore
  nameWithType: DataGridView.SetSelectedCellCore
- uid: System.Windows.Forms.DataGridView.SetSelectedColumnCore*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetSelectedColumnCore
  nameWithType: DataGridView.SetSelectedColumnCore
- uid: System.Windows.Forms.DataGridView.SetSelectedRowCore*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SetSelectedRowCore
  nameWithType: DataGridView.SetSelectedRowCore
- uid: System.Windows.Forms.DataGridView.ShowCellErrors*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowCellErrors
  nameWithType: DataGridView.ShowCellErrors
- uid: System.Windows.Forms.DataGridView.ShowCellToolTips*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowCellToolTips
  nameWithType: DataGridView.ShowCellToolTips
- uid: System.Windows.Forms.DataGridView.ShowEditingIcon*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowEditingIcon
  nameWithType: DataGridView.ShowEditingIcon
- uid: System.Windows.Forms.DataGridView.ShowRowErrors*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: ShowRowErrors
  nameWithType: DataGridView.ShowRowErrors
- uid: System.Windows.Forms.DataGridView.Sort*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Sort
  nameWithType: DataGridView.Sort
- uid: System.Windows.Forms.DataGridView.SortedColumn*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SortedColumn
  nameWithType: DataGridView.SortedColumn
- uid: System.Windows.Forms.DataGridView.SortOrder*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: SortOrder
  nameWithType: DataGridView.SortOrder
- uid: System.Windows.Forms.DataGridView.StandardTab*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: StandardTab
  nameWithType: DataGridView.StandardTab
- uid: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: DataGridView.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: DataGridView.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Forms.DataGridView.Text*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: Text
  nameWithType: DataGridView.Text
- uid: System.Windows.Forms.DataGridView.TopLeftHeaderCell*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: TopLeftHeaderCell
  nameWithType: DataGridView.TopLeftHeaderCell
- uid: System.Windows.Forms.DataGridView.UpdateCellErrorText*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateCellErrorText
  nameWithType: DataGridView.UpdateCellErrorText
- uid: System.Windows.Forms.DataGridView.UpdateCellValue*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateCellValue
  nameWithType: DataGridView.UpdateCellValue
- uid: System.Windows.Forms.DataGridView.UpdateRowErrorText*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateRowErrorText
  nameWithType: DataGridView.UpdateRowErrorText
- uid: System.Windows.Forms.DataGridView.UpdateRowHeightInfo*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UpdateRowHeightInfo
  nameWithType: DataGridView.UpdateRowHeightInfo
- uid: System.Windows.Forms.DataGridView.UserSetCursor*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: UserSetCursor
  nameWithType: DataGridView.UserSetCursor
- uid: System.Windows.Forms.DataGridView.VerticalScrollBar*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: VerticalScrollBar
  nameWithType: DataGridView.VerticalScrollBar
- uid: System.Windows.Forms.DataGridView.VerticalScrollingOffset*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: VerticalScrollingOffset
  nameWithType: DataGridView.VerticalScrollingOffset
- uid: System.Windows.Forms.DataGridView.VirtualMode*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: VirtualMode
  nameWithType: DataGridView.VirtualMode
- uid: System.Windows.Forms.DataGridView.WndProc*
  parent: System.Windows.Forms.DataGridView
  isExternal: false
  name: WndProc
  nameWithType: DataGridView.WndProc
