### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  id: IRowset
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)
  - Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(System.Int32,System.Int32,System.IntPtr)
  - Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)
  - Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)
  - Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(System.Int32)
  langs:
  - csharp
  name: IRowset
  nameWithType: IRowset
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  type: Interface
  summary: "Provides an implementation of the OLE DB <xref uid=&quot;langword_csharp_IRowset&quot; name=&quot;IRowset&quot; href=&quot;&quot;></xref> interface for use by applications upgraded from Visual Basic 6.0."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: >-
      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      [System.Runtime.InteropServices.Guid("0C733A7C-2A1C-11CE-ADE5-00AA0044773D")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IRowset
  implements: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)
  id: AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  langs:
  - csharp
  name: AddRefRows(Int32,Int32[],Int32[],Int32[])
  nameWithType: IRowset.AddRefRows(Int32,Int32[],Int32[],Int32[])
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(Int32,Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Adds a reference count to an existing row handle."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public void AddRefRows (int cRows, int[] hRows, out int[] refCounts, out int[] rowStatus);
    parameters:
    - id: cRows
      type: System.Int32
      description: "The number of rows for which to increment the reference count."
    - id: hRows
      type: System.Int32[]
      description: "An array of row handles for which to increment the reference count. The reference count of row handles is incremented by one for each time they appear in the array."
    - id: refCounts
      type: System.Int32[]
      description: "An array with `cRows` elements in which to return the new reference count for each row handle. The consumer allocates memory for this array. If `refCounts` is a null pointer, no reference counts are returned."
    - id: rowStatus
      type: System.Int32[]
      description: "An array with `cRows` elements in which to return values indicating the status of each row specified in `hRows`."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(System.Int32,System.Int32,System.IntPtr)
  id: GetData(System.Int32,System.Int32,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  langs:
  - csharp
  name: GetData(Int32,Int32,IntPtr)
  nameWithType: IRowset.GetData(Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Retrieves data from the rowset&quot;s copy of the row."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public void GetData (int hRow, int hAccessor, IntPtr pData);
    parameters:
    - id: hRow
      type: System.Int32
      description: "The handle of the row from which to get the data."
    - id: hAccessor
      type: System.Int32
      description: "The handle of the accessor to use."
    - id: pData
      type: System.IntPtr
      description: "A pointer to a buffer in which to return the data."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)
  id: GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  langs:
  - csharp
  name: GetNextRows(Int32,Int32,Int32,Int32,Int32[])
  nameWithType: IRowset.GetNextRows(Int32,Int32,Int32,Int32,Int32[])
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(Int32,Int32,Int32,Int32,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Fetches rows sequentially, remembering the previous position."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public void GetNextRows (int hChapter, int lRowsOffset, int cRows, out int cRowsObtained, out int[] hRows);
    parameters:
    - id: hChapter
      type: System.Int32
      description: "The chapter handle designating the rows to fetch."
    - id: lRowsOffset
      type: System.Int32
      description: "The signed count of rows to skip before fetching rows. Deleted rows that the provider has removed from the rowset are not counted in the skip."
    - id: cRows
      type: System.Int32
      description: "The number of rows to fetch. A negative number means to fetch backward."
    - id: cRowsObtained
      type: System.Int32
      description: "A pointer to memory in which to return the actual number of fetched rows."
    - id: hRows
      type: System.Int32[]
      description: "A pointer to memory in which to return an array of handles of the fetched rows."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)
  id: ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  langs:
  - csharp
  name: ReleaseRows(Int32,Int32[],IntPtr,IntPtr,IntPtr)
  nameWithType: IRowset.ReleaseRows(Int32,Int32[],IntPtr,IntPtr,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(Int32,Int32[],IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Releases rows."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public int ReleaseRows (int cRows, int[] hRows, IntPtr rowOptions, IntPtr rowRefCounts, IntPtr rgRowStatus);
    parameters:
    - id: cRows
      type: System.Int32
      description: "The number of rows to release."
    - id: hRows
      type: System.Int32[]
      description: "An array of handles of the rows to be released. The row handles do not need to form a logical cluster; they may have been obtained at separate times and need not be for contiguous underlying rows. Row handles are decremented by one reference count for each time they appear in the array."
    - id: rowOptions
      type: System.IntPtr
      description: "An array of `cRows` elements containing bitmasks indicating additional options to be specified when a row is released."
    - id: rowRefCounts
      type: System.IntPtr
      description: "An array with `cRows` elements in which to return the new reference count of each row."
    - id: rgRowStatus
      type: System.IntPtr
      description: "An array with `cRows` elements in which to return values indicating the status of each row specified in `hRows`."
    return:
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> representing the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(System.Int32)
  id: RestartPosition(System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  langs:
  - csharp
  name: RestartPosition(Int32)
  nameWithType: IRowset.RestartPosition(Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility.Data
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: "Repositions the next fetch position to its initial position."
  remarks: '[!INCLUDE[Note_compatibility](~/add/includes/ajax-current-ext-md.md)]'
  syntax:
    content: public int RestartPosition (int hChapter);
    parameters:
    - id: hChapter
      type: System.Int32
      description: "The chapter handle designating the rows on which to reposition."
    return:
      type: System.Int32
      description: "An <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref> representing the result."
  overload: Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: AddRefRows(Int32,Int32[],Int32[],Int32[])
  nameWithType: IRowset.AddRefRows(Int32,Int32[],Int32[],Int32[])
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(Int32,Int32[],Int32[],Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(System.Int32,System.Int32,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: GetData(Int32,Int32,IntPtr)
  nameWithType: IRowset.GetData(Int32,Int32,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(Int32,Int32,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: GetNextRows(Int32,Int32,Int32,Int32,Int32[])
  nameWithType: IRowset.GetNextRows(Int32,Int32,Int32,Int32,Int32[])
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(Int32,Int32,Int32,Int32,Int32[])
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: ReleaseRows(Int32,Int32[],IntPtr,IntPtr,IntPtr)
  nameWithType: IRowset.ReleaseRows(Int32,Int32[],IntPtr,IntPtr,IntPtr)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(Int32,Int32[],IntPtr,IntPtr,IntPtr)
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: RestartPosition(Int32)
  nameWithType: IRowset.RestartPosition(Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(Int32)
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: AddRefRows
  nameWithType: IRowset.AddRefRows
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: GetData
  nameWithType: IRowset.GetData
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: GetNextRows
  nameWithType: IRowset.GetNextRows
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: ReleaseRows
  nameWithType: IRowset.ReleaseRows
- uid: Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition*
  parent: Microsoft.VisualBasic.Compatibility.VB6.IRowset
  isExternal: false
  name: RestartPosition
  nameWithType: IRowset.RestartPosition
