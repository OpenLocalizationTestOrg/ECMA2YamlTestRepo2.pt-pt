### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  id: X509RawDataKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause
  nameWithType: X509RawDataKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  type: Class
  summary: "Represents a key identifier clause that identifies a <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref> security token using the X.509 certificate&quot;s raw data."
  remarks: "Typically, the X509RawDataKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token. Use the X509RawDataKeyIdentifierClause class to reference a <xref:System.IdentityModel.Tokens.X509SecurityToken> security token using the X.509 certificate&quot;s raw data. The <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A> method returns the raw data.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] supports the following types of security token references for <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.      -   <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>      -   X509RawDataKeyIdentifierClause      -   <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>       <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>"
  syntax:
    content: 'public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause(Byte[])
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;></xref> class using the specified raw data of an X.509 certificate."
  syntax:
    content: public X509RawDataKeyIdentifierClause (byte[] certificateRawData);
    parameters:
    - id: certificateRawData
      type: System.Byte[]
      description: "An array of <xref:System.Byte> that contains the raw data of an X.509 certificate."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificateRawData</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>certificateRawData</code> is zero length."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;></xref> class using the specified X.509 certificate."
  remarks: "The raw data is obtained for the `certificate` parameter using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method."
  syntax:
    content: public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> that contains the X.509 certificate."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether a key can be created from the raw data of the X.509 certificate or byte array that is specified in the constructor."
  remarks: "To create the key, call the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method."
  syntax:
    content: public override bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: CreateKey()
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a key from the raw data of the X.509 certificate or byte array that is specified in the constructor."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.X509AsymmetricSecurityKey&quot;></xref> that contains the key(s) associated with the X.509 certificate."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  id: GetX509RawData
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: GetX509RawData()
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the raw data associated with the X.509 certificate."
  syntax:
    content: public byte[] GetX509RawData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "An array of <xref:System.Byte> that contains the raw data associated with the X.509 certificate."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a value that indicates whether the key identifier for this instance is equivalent to the specified X.509 certificate."
  remarks: "The Matches method calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method for the `certificate` and then compares that to the current instance."
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> that contains the X.509 certificate to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>certificate</code> has the raw data that matches the current instance; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509RawDataKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns the current object."
  remarks: "The ToString method returns the raw data that is Base-64 encoded."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that represents the current object."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause(Byte[])
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CreateKey()
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: GetX509RawData()
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData()
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509RawDataKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: GetX509RawData
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509RawDataKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509RawDataKeyIdentifierClause.ToString
