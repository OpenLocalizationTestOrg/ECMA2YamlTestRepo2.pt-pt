### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  id: X509RawDataKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause
  nameWithType: X509RawDataKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  type: Class
  summary: "Representa uma cláusula do identificador da chave que identifica um <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> token de segurança utilizando os dados brutos do certificado x.&509;."
  remarks: "Normalmente, o X509RawDataKeyIdentifierClause não ser necessário utilizar, diferente de quando é criado um serviço de token de segurança personalizada. Quando um serviço de token de segurança devolve um token de segurança, o token de segurança emitido contém referências a tokens de segurança ligado e não ligados. Consulte referências anexadas tokens de segurança que são contidos no cabeçalho de segurança de uma mensagem SOAP e referências não são tokens de segurança que não estão incluídos no cabeçalho de segurança de uma mensagem SOAP. Estas referências afirma normalmente a autenticidade do token de segurança emitido. Utilizar a classe de X509RawDataKeyIdentifierClause para fazer referência a um <xref:System.IdentityModel.Tokens.X509SecurityToken>token de segurança utilizando os dados brutos do certificado x.&509;.</xref:System.IdentityModel.Tokens.X509SecurityToken> O <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A>método devolve os dados não processados.</xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData%2A>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]suporta os seguintes tipos de referências de token de segurança para <xref:System.IdentityModel.Tokens.X509SecurityToken>tokens de segurança.</xref:System.IdentityModel.Tokens.X509SecurityToken>      - <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>- X509RawDataKeyIdentifierClause - <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause><xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause></xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>       </xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: 'public class X509RawDataKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause(Byte[])
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;> </xref> classe utilizando os dados não processados especificados de um certificado x.&509;."
  syntax:
    content: public X509RawDataKeyIdentifierClause (byte[] certificateRawData);
    parameters:
    - id: certificateRawData
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém os dados não processados de um certificado x.&509;.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificateRawData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>certificateRawData</code>é o comprimento zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: X509RawDataKeyIdentifierClause(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&quot;> </xref> classe utilizando o certificado x.&509; especificado."
  remarks: "Os dados não processados são obtidos para o `certificate` parâmetro utilizando o <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>método.</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>"
  syntax:
    content: public X509RawDataKeyIdentifierClause (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509;."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se pode ser criada uma chave a partir dos dados brutos do certificado x.&509; ou uma matriz de bytes que é especificado no construtor."
  remarks: "Para criar a chave, chame o <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>método.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A>"
  syntax:
    content: public override bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: CreateKey()
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria uma chave dos dados brutos da matriz de bytes ou certificado x.&509; que é especificado no construtor."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.X509AsymmetricSecurityKey&quot;> </xref> que contenha as chaves associadas com o certificado x.&509;."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  id: GetX509RawData
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: GetX509RawData()
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém os dados não processados associados ao certificado x.&509;."
  syntax:
    content: public byte[] GetX509RawData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém os dados não processados associados ao certificado x.&509;.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Devolve um valor que indica se o identificador da chave para esta instância é equivalente ao certificado x.&509; especificado."
  remarks: "As chamadas de método de correspondências de <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>método para o `certificate` e, em seguida, compara com que a instância atual.</xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A>"
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509; para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> certificate </code> tem os dados não processados que corresponda à instância atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509RawDataKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Devolve o objeto atual."
  remarks: "O método ToString devolve os dados não processados que são com codificação Base&64;."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>que representa o objeto atual.</xref:System.String>"
  overload: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause(Byte[])
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CreateKey()
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: GetX509RawData()
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData()
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509RawDataKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: X509RawDataKeyIdentifierClause
  nameWithType: X509RawDataKeyIdentifierClause.X509RawDataKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CanCreateKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: CreateKey
  nameWithType: X509RawDataKeyIdentifierClause.CreateKey
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: GetX509RawData
  nameWithType: X509RawDataKeyIdentifierClause.GetX509RawData
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509RawDataKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509RawDataKeyIdentifierClause.ToString
