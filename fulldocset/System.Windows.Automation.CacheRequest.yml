### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.CacheRequest
  id: CacheRequest
  children:
  - System.Windows.Automation.CacheRequest.#ctor
  - System.Windows.Automation.CacheRequest.Activate
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.CacheRequest.AutomationElementMode
  - System.Windows.Automation.CacheRequest.Clone
  - System.Windows.Automation.CacheRequest.Current
  - System.Windows.Automation.CacheRequest.Pop
  - System.Windows.Automation.CacheRequest.Push
  - System.Windows.Automation.CacheRequest.TreeFilter
  - System.Windows.Automation.CacheRequest.TreeScope
  langs:
  - csharp
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
  type: Class
  summary: "Specifies properties and patterns that the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] framework caches when an <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref> is obtained."
  remarks: "Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance. By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.       Create a new cache request by calling the class constructor. The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.       Only a single CacheRequest can be active. There are two ways to activate a request:      -   Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request. This pushes the request onto the stack, and the request is popped when the object is disposed. To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]).      -   Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>. Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>. Popping the request deactivates it.       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] elements obtained while the request is active will have cached values for the properties and patterns specified."
  example:
  - "The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]  \n  \n The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public sealed class CacheRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.#ctor
  id: '#ctor'
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
  type: Constructor
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> class."
  remarks: "When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache."
  syntax:
    content: public CacheRequest ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Activate
  id: Activate
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Sets this <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> as the active specification for the items that are returned when an <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref> is requested on the same thread."
  remarks: "Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>. The object is pushed onto the stack when Activate is called, and then popped off when it is disposed. To ensure disposal, place the return value within a `using` block (`Using` in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)])."
  example:
  - "The following example shows how to use Activate to cache patterns and properties.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public IDisposable Activate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "The object that can be used to dispose the <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>."
  overload: System.Windows.Automation.CacheRequest.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  id: Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Adds the specified <xref href=&quot;System.Windows.Automation.AutomationPattern&quot;></xref> identifier to this <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>."
  remarks: "Adding a pattern that is already in the cache request has no effect."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "An identifier specifying a pattern to cache."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> is active."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  id: Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Adds the specified <xref href=&quot;System.Windows.Automation.AutomationProperty&quot;></xref> identifier to this <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>."
  remarks: "When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.       Adding a property that is already in the cache request has no effect."
  example:
  - "The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.  \n  \n [!code-vb[UIAClient_snip#202](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#202)]\n [!code-cs[UIAClient_snip#202](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#202)]"
  syntax:
    content: public void Add (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "An identifier specifying a property value to cache."
  overload: System.Windows.Automation.CacheRequest.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> is active."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  id: AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)], or only cached information."
  remarks: "<xref:System.Windows.Automation.AutomationElementMode> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]. <xref:System.Windows.Automation.AutomationElementMode> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)], and contain only cached information.       Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.       Using <xref:System.Windows.Automation.AutomationElementMode> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references."
  example:
  - "In the following example, AutomationElementMode is set to <xref:System.Windows.Automation.AutomationElementMode>, with the result that only cached properties and patterns are available for the retrieved object.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }
    return:
      type: System.Windows.Automation.AutomationElementMode
      description: "<xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]; otherwise <xref href=&quot;System.Windows.Automation.AutomationElementMode&quot;></xref>."
  overload: System.Windows.Automation.CacheRequest.AutomationElementMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Clone
  id: Clone
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Creates a copy of this <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>."
  syntax:
    content: public System.Windows.Automation.CacheRequest Clone ();
    parameters: []
    return:
      type: System.Windows.Automation.CacheRequest
      description: "A modifiable copy of the current object."
  overload: System.Windows.Automation.CacheRequest.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Current
  id: Current
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Gets the <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> that is active on the current thread."
  syntax:
    content: public static System.Windows.Automation.CacheRequest Current { get; }
    return:
      type: System.Windows.Automation.CacheRequest
      description: "The active <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref>."
  overload: System.Windows.Automation.CacheRequest.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Pop
  id: Pop
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Removes the active <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> from the internal stack for the current thread."
  remarks: "Only the currently active request can be removed using the Pop method. Attempting to remove a request that is not the current one results in an exception.       Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack. The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), ensuring that the request is popped off the stack even if an exception is raised."
  example:
  - "The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using Pop.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Pop ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Pop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "An attempt was made to remove a cache request that was not the last one pushed onto the stack."
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.Push
  id: Push
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Places the <xref href=&quot;System.Windows.Automation.CacheRequest&quot;></xref> on the internal state stack, making it the active request on the current thread."
  remarks: "Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack. Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.       Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack. The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in [!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]), ensuring that the request is popped off the stack even if an exception is raised."
  example:
  - "The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using Push.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public void Push ();
    parameters: []
  overload: System.Windows.Automation.CacheRequest.Push*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  id: TreeFilter
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching."
  remarks: "For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "In the following example, TreeFilter is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public System.Windows.Automation.Condition TreeFilter { get; set; }
    return:
      type: System.Windows.Automation.Condition
      description: "The view of the [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] element tree. The default view is <xref href=&quot;System.Windows.Automation.Automation.ControlViewCondition&quot;></xref>."
  overload: System.Windows.Automation.CacheRequest.TreeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.CacheRequest.TreeScope
  id: TreeScope
  parent: System.Windows.Automation.CacheRequest
  langs:
  - csharp
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants."
  remarks: "The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called. See the example."
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and TreeScope is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.TreeScope TreeScope { get; set; }
    return:
      type: System.Windows.Automation.TreeScope
      description: "One or more of <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>, or <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>. The default value is <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>."
  overload: System.Windows.Automation.CacheRequest.TreeScope*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An attempt was made to set the property to <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref> or <xref href=&quot;System.Windows.Automation.TreeScope&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.CacheRequest.#ctor
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest()
  nameWithType: CacheRequest.CacheRequest()
  fullName: System.Windows.Automation.CacheRequest.CacheRequest()
- uid: System.Windows.Automation.CacheRequest.Activate
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate()
  nameWithType: CacheRequest.Activate()
  fullName: System.Windows.Automation.CacheRequest.Activate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationPattern)
  nameWithType: CacheRequest.Add(AutomationPattern)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add(AutomationProperty)
  nameWithType: CacheRequest.Add(AutomationProperty)
  fullName: System.Windows.Automation.CacheRequest.Add(AutomationProperty)
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
  fullName: System.Windows.Automation.CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.AutomationElementMode
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementMode
  nameWithType: AutomationElementMode
  fullName: System.Windows.Automation.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone()
  nameWithType: CacheRequest.Clone()
  fullName: System.Windows.Automation.CacheRequest.Clone()
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Current
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
  fullName: System.Windows.Automation.CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop()
  nameWithType: CacheRequest.Pop()
  fullName: System.Windows.Automation.CacheRequest.Pop()
- uid: System.Windows.Automation.CacheRequest.Push
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push()
  nameWithType: CacheRequest.Push()
  fullName: System.Windows.Automation.CacheRequest.Push()
- uid: System.Windows.Automation.CacheRequest.TreeFilter
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
  fullName: System.Windows.Automation.CacheRequest.TreeFilter
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.CacheRequest.TreeScope
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
  fullName: System.Windows.Automation.CacheRequest.TreeScope
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.CacheRequest.#ctor*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest.CacheRequest
- uid: System.Windows.Automation.CacheRequest.Activate*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Activate
  nameWithType: CacheRequest.Activate
- uid: System.Windows.Automation.CacheRequest.Add*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Add
  nameWithType: CacheRequest.Add
- uid: System.Windows.Automation.CacheRequest.AutomationElementMode*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: AutomationElementMode
  nameWithType: CacheRequest.AutomationElementMode
- uid: System.Windows.Automation.CacheRequest.Clone*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Clone
  nameWithType: CacheRequest.Clone
- uid: System.Windows.Automation.CacheRequest.Current*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Current
  nameWithType: CacheRequest.Current
- uid: System.Windows.Automation.CacheRequest.Pop*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Pop
  nameWithType: CacheRequest.Pop
- uid: System.Windows.Automation.CacheRequest.Push*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: Push
  nameWithType: CacheRequest.Push
- uid: System.Windows.Automation.CacheRequest.TreeFilter*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeFilter
  nameWithType: CacheRequest.TreeFilter
- uid: System.Windows.Automation.CacheRequest.TreeScope*
  parent: System.Windows.Automation.CacheRequest
  isExternal: false
  name: TreeScope
  nameWithType: CacheRequest.TreeScope
