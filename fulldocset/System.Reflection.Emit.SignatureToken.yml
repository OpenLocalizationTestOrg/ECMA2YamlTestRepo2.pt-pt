### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.SignatureToken
  id: SignatureToken
  children:
  - System.Reflection.Emit.SignatureToken.Empty
  - System.Reflection.Emit.SignatureToken.Equals(System.Object)
  - System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)
  - System.Reflection.Emit.SignatureToken.GetHashCode
  - System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  - System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  - System.Reflection.Emit.SignatureToken.Token
  langs:
  - csharp
  name: SignatureToken
  nameWithType: SignatureToken
  fullName: System.Reflection.Emit.SignatureToken
  type: Struct
  summary: "Represents the <xref uid=&quot;langword_csharp_Token&quot; name=&quot;Token&quot; href=&quot;&quot;></xref> returned by the metadata to represent a signature."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct SignatureToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.Empty
  id: Empty
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Empty
  nameWithType: SignatureToken.Empty
  fullName: System.Reflection.Emit.SignatureToken.Empty
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "The default <xref uid=&quot;langword_csharp_SignatureToken&quot; name=&quot;SignatureToken&quot; href=&quot;&quot;></xref> with &lt;xref:System.Reflection.Emit.SignatureToken.Token%2A&gt; value 0."
  syntax:
    content: public static readonly System.Reflection.Emit.SignatureToken Empty;
    return:
      type: System.Reflection.Emit.SignatureToken
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SignatureToken.Equals(Object)
  fullName: System.Reflection.Emit.SignatureToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Checks if the given object is an instance of <xref uid=&quot;langword_csharp_SignatureToken&quot; name=&quot;SignatureToken&quot; href=&quot;&quot;></xref> and is equal to this instance."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare with this ."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Reflection.Emit.SignatureToken.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)
  id: Equals(System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Equals(SignatureToken)
  nameWithType: SignatureToken.Equals(SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.Equals(SignatureToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Indicates whether the current instance is equal to the specified <see cref=&quot;T:System.Reflection.Emit.SignatureToken&quot;></see>."
  syntax:
    content: public bool Equals (System.Reflection.Emit.SignatureToken obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.SignatureToken
      description: "The  to compare to the current instance."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Reflection.Emit.SignatureToken.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SignatureToken.GetHashCode()
  fullName: System.Reflection.Emit.SignatureToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Generates the hash code for this signature."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Reflection.Emit.SignatureToken.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  id: op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: op_Equality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Equality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Equality(SignatureToken,SignatureToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Indicates whether two <see cref=&quot;T:System.Reflection.Emit.SignatureToken&quot;></see> structures are equal."
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.SignatureToken a, System.Reflection.Emit.SignatureToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.SignatureToken
      description: "The  to compare to `b`."
    - id: b
      type: System.Reflection.Emit.SignatureToken
      description: "The  to compare to `a`."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Reflection.Emit.SignatureToken.op_Equality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  id: op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: op_Inequality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Inequality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Inequality(SignatureToken,SignatureToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Indicates whether two <see cref=&quot;T:System.Reflection.Emit.SignatureToken&quot;></see> structures are not equal."
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.SignatureToken a, System.Reflection.Emit.SignatureToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.SignatureToken
      description: "The  to compare to `b`."
    - id: b
      type: System.Reflection.Emit.SignatureToken
      description: "The  to compare to `a`."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Reflection.Emit.SignatureToken.op_Inequality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.SignatureToken.Token
  id: Token
  parent: System.Reflection.Emit.SignatureToken
  langs:
  - csharp
  name: Token
  nameWithType: SignatureToken.Token
  fullName: System.Reflection.Emit.SignatureToken.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Retrieves the metadata token for the local variable signature for this method."
  remarks: "This returns a numeric representation of the metadata token."
  syntax:
    content: public int Token { get; }
    return:
      type: System.Int32
      description: "Read-only. Retrieves the metadata token of this signature."
  overload: System.Reflection.Emit.SignatureToken.Token*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.SignatureToken.Empty
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Empty
  nameWithType: SignatureToken.Empty
  fullName: System.Reflection.Emit.SignatureToken.Empty
- uid: System.Reflection.Emit.SignatureToken
  parent: System.Reflection.Emit
  isExternal: false
  name: SignatureToken
  nameWithType: SignatureToken
  fullName: System.Reflection.Emit.SignatureToken
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Object)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Equals(Object)
  nameWithType: SignatureToken.Equals(Object)
  fullName: System.Reflection.Emit.SignatureToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Equals(SignatureToken)
  nameWithType: SignatureToken.Equals(SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.Equals(SignatureToken)
- uid: System.Reflection.Emit.SignatureToken.GetHashCode
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: GetHashCode()
  nameWithType: SignatureToken.GetHashCode()
  fullName: System.Reflection.Emit.SignatureToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Equality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Equality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Equality(SignatureToken,SignatureToken)
- uid: System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Inequality(SignatureToken,SignatureToken)
  nameWithType: SignatureToken.op_Inequality(SignatureToken,SignatureToken)
  fullName: System.Reflection.Emit.SignatureToken.op_Inequality(SignatureToken,SignatureToken)
- uid: System.Reflection.Emit.SignatureToken.Token
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Token
  nameWithType: SignatureToken.Token
  fullName: System.Reflection.Emit.SignatureToken.Token
- uid: System.Reflection.Emit.SignatureToken.Equals*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Equals
  nameWithType: SignatureToken.Equals
- uid: System.Reflection.Emit.SignatureToken.GetHashCode*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: GetHashCode
  nameWithType: SignatureToken.GetHashCode
- uid: System.Reflection.Emit.SignatureToken.op_Equality*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Equality
  nameWithType: SignatureToken.op_Equality
- uid: System.Reflection.Emit.SignatureToken.op_Inequality*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: op_Inequality
  nameWithType: SignatureToken.op_Inequality
- uid: System.Reflection.Emit.SignatureToken.Token*
  parent: System.Reflection.Emit.SignatureToken
  isExternal: false
  name: Token
  nameWithType: SignatureToken.Token
