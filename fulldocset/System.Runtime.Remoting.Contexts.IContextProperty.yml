### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.IContextProperty
  id: IContextProperty
  children:
  - System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  - System.Runtime.Remoting.Contexts.IContextProperty.Name
  langs:
  - csharp
  name: IContextProperty
  nameWithType: IContextProperty
  fullName: System.Runtime.Remoting.Contexts.IContextProperty
  type: Interface
  summary: "Gathers naming information from the context property and determines whether the new context is ok for the context property."
  remarks: "The IContextProperty interface is exposed by the property contributed to a context by an attribute. By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IContextProperty
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)
  id: Freeze(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  langs:
  - csharp
  name: Freeze(Context)
  nameWithType: IContextProperty.Freeze(Context)
  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Called when the context is frozen."
  remarks: "Context properties cannot be added after the context has been frozen."
  syntax:
    content: public void Freeze (System.Runtime.Remoting.Contexts.Context newContext);
    parameters:
    - id: newContext
      type: System.Runtime.Remoting.Contexts.Context
      description: "The context to freeze."
  overload: System.Runtime.Remoting.Contexts.IContextProperty.Freeze*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  id: IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  langs:
  - csharp
  name: IsNewContextOK(Context)
  nameWithType: IContextProperty.IsNewContextOK(Context)
  fullName: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(Context)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Returns a Boolean value indicating whether the context property is compatible with the new context."
  remarks: "Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties from `newCtx` and determine whether it is compatible with these other context properties."
  syntax:
    content: public bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);
    parameters:
    - id: newCtx
      type: System.Runtime.Remoting.Contexts.Context
      description: "The new context in which the <xref href=&quot;System.Runtime.Remoting.Contexts.ContextProperty&quot;></xref> has been created."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the context property can coexist with the other context properties in the given context; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContextProperty.Name
  id: Name
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  langs:
  - csharp
  name: Name
  nameWithType: IContextProperty.Name
  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Gets the name of the property under which it will be added to the context."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the property."
  overload: System.Runtime.Remoting.Contexts.IContextProperty.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  isExternal: false
  name: Freeze(Context)
  nameWithType: IContextProperty.Freeze(Context)
  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Freeze(Context)
- uid: System.Runtime.Remoting.Contexts.Context
  parent: System.Runtime.Remoting.Contexts
  isExternal: false
  name: Context
  nameWithType: Context
  fullName: System.Runtime.Remoting.Contexts.Context
- uid: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  isExternal: false
  name: IsNewContextOK(Context)
  nameWithType: IContextProperty.IsNewContextOK(Context)
  fullName: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(Context)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Contexts.IContextProperty.Name
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  isExternal: false
  name: Name
  nameWithType: IContextProperty.Name
  fullName: System.Runtime.Remoting.Contexts.IContextProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Contexts.IContextProperty.Freeze*
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  isExternal: false
  name: Freeze
  nameWithType: IContextProperty.Freeze
- uid: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK*
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  isExternal: false
  name: IsNewContextOK
  nameWithType: IContextProperty.IsNewContextOK
- uid: System.Runtime.Remoting.Contexts.IContextProperty.Name*
  parent: System.Runtime.Remoting.Contexts.IContextProperty
  isExternal: false
  name: Name
  nameWithType: IContextProperty.Name
