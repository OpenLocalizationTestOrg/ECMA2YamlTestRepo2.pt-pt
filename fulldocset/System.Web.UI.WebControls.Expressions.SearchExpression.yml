### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.SearchExpression
  id: SearchExpression
  children:
  - System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  - System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  - System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  - System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  langs:
  - csharp
  name: SearchExpression
  nameWithType: SearchExpression
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression
  type: Class
  summary: "Provides a way to search a field or fields for string values and compare them to a specified string value."
  remarks: "The <xref:System.Web.UI.WebControls.QueryExtender> control provides the ability to filter data in a Web page by using the SearchExpression class. The SearchExpression class compares a specified string in a field or fields to a value that you supply. The expression performs a &quot;starts with&quot;, &quot;contains&quot;, or &quot;ends with&quot; search. You must specify values for the <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> and the <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> properties in order to indicate the type of search you want to perform and the data fields that you want to search. If the LINQ provider that you use in the <xref:System.Web.UI.WebControls.QueryExtender> control supports case sensitivity, you can use the <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> property to enable or ignore case sensitivity.       The value to search can be provided by an [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] control. To specify this, you set the <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property of the <xref:System.Web.UI.WebControls.ControlParameter> class in the SearchExpression object to the ID of a [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] control. For example, if the value to search is entered in a text box, the <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property must be set to the ID of the text box control. You can use the SearchExpression class in combination with the other expressions that the <xref:System.Web.UI.WebControls.QueryExtender> supports, such as the <xref:System.Web.UI.WebControls.Expressions.RangeExpression> filter. For example, you can search for product names that contain the string &quot;tea&quot; and a list price between 100 and 200."
  example:
  - "The following example shows how to search the Name column in the Products table of the AdventureWorks database for products whose that start with the string that is specified in the `SearchTextBox` control. The result that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: SearchExpression()
  nameWithType: SearchExpression.SearchExpression()
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;></xref> class."
  syntax:
    content: public SearchExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  id: ComparisonType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Gets or sets the type of string comparison to perform."
  remarks: "This property enables you to use the <xref:System.StringComparison> enumeration to specify how the search is performed. The <xref:System.StringComparison> enumeration is used to specify whether a string comparison uses the current culture or the invariant culture, and whether it uses text or ordinal sort rules. If the data provider that the <xref:System.Web.UI.WebControls.QueryExtender> uses supports case sensitivity, you can use one of the comparison type properties to enable or ignore case sensitivity."
  syntax:
    content: public StringComparison ComparisonType { get; set; }
    return:
      type: System.StringComparison
      description: "The type of string comparison to perform."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  id: DataFields
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: DataFields
  nameWithType: SearchExpression.DataFields
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Gets and sets a single field or a comma-separated list of fields to search."
  remarks: "The <xref:System.Web.UI.WebControls.Expressions.SearchExpression> class performs the search in one or more data fields in the specified table. At least one data field must be specified in the <xref:System.Web.UI.WebControls.Expressions.SearchExpression> instance. If you specify more than one data field, separate the fields by using a comma."
  example:
  - "The following example shows how to search the Name and the ProductNumber data fields in the Products table of the AdventureWorks database for products that have names that start with a specified string. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:SearchExpression SearchType=\"StartsWith\"   \n      DataFields=\"Name\",\"ProductNumber\" >  \n  <asp:ControlParameter ControlID=\"SearchTextBox\" />  \n</asp:SearchExpression>  \n```"
  syntax:
    content: public string DataFields { get; set; }
    return:
      type: System.String
      description: "The field or fields to search."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The DataFields property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: SearchExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Applies a <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;></xref> object to the specified <xref:System.Linq.IQueryable> object based on the <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchType&quot;></xref> object."
  remarks: "This property evaluates the collection of parameters that are used in the <xref:System.Web.UI.WebControls.Expressions.SearchExpression> object and applies the expression to the <xref:System.Linq.IQueryable> object. If multiple data fields are specified, the `AND` operator is applied to the data fields."
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "The object to use."
    return:
      type: System.Linq.IQueryable
      description: "An instance of the <xref:System.Linq.IQueryable> object that the <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;></xref> was applied to."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  id: SearchType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: SearchType
  nameWithType: SearchExpression.SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Gets or sets the <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchType&quot;></xref> value that determines where in the string the search occurs."
  remarks: "The <xref:System.Web.UI.WebControls.Expressions.SearchType> property uses the <xref:System.Web.UI.WebControls.Expressions.SearchType> enumeration that contains the search types to use in an instance of the <xref:System.Web.UI.WebControls.Expressions.SearchExpression> class.       The following table lists the possible enumeration values.      |Enumeration|Description|   |-----------------|-----------------|   |<xref:System.Web.UI.WebControls.Expressions.SearchType>|Indicates a search that starts anywhere in a field.|   |<xref:System.Web.UI.WebControls.Expressions.SearchType>|Indicates a search that starts at the beginning of a field.|   |<xref:System.Web.UI.WebControls.Expressions.SearchType>|Indicates a search that at the end of a field.|"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.SearchType
      description: "The type of search to perform."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchExpression()
  nameWithType: SearchExpression.SearchExpression()
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchExpression()
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: DataFields
  nameWithType: SearchExpression.DataFields
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: SearchExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchType
  nameWithType: SearchExpression.SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
- uid: System.Web.UI.WebControls.Expressions.SearchType
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: SearchType
  nameWithType: SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchType
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchExpression
  nameWithType: SearchExpression.SearchExpression
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: DataFields
  nameWithType: SearchExpression.DataFields
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: GetQueryable
  nameWithType: SearchExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchType
  nameWithType: SearchExpression.SearchType
