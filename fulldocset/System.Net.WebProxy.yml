### YamlMime:ManagedReference
items:
- uid: System.Net.WebProxy
  id: WebProxy
  children:
  - System.Net.WebProxy.#ctor
  - System.Net.WebProxy.#ctor(System.String)
  - System.Net.WebProxy.#ctor(System.Uri)
  - System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Int32)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  - System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  - System.Net.WebProxy.Address
  - System.Net.WebProxy.BypassArrayList
  - System.Net.WebProxy.BypassList
  - System.Net.WebProxy.BypassProxyOnLocal
  - System.Net.WebProxy.Credentials
  - System.Net.WebProxy.GetDefaultProxy
  - System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.GetProxy(System.Uri)
  - System.Net.WebProxy.IsBypassed(System.Uri)
  - System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.WebProxy.UseDefaultCredentials
  langs:
  - csharp
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
  type: Class
  summary: "Contém definições de proxy HTTP para a <xref:System.Net.WebRequest>classe.</xref:System.Net.WebRequest>"
  remarks: "A classe de WebProxy contém as definições de proxy que <xref:System.Net.WebRequest>instâncias utilizam para determinar se um proxy Web é utilizado para enviar pedidos.</xref:System.Net.WebRequest> Web global, as definições de proxy podem ser especificadas numa máquina e ficheiros de configuração de aplicação e as aplicações podem utilizar instâncias da classe WebProxy para personalizar a utilização do proxy Web. A classe de WebProxy é a implementação base do <xref:System.Net.IWebProxy>interface.</xref:System.Net.IWebProxy>       Para obter as instâncias da classe de proxy Web, pode utilizar qualquer um dos seguintes métodos: - <xref:System.Net.WebProxy.%23ctor%2A>construtor.</xref:System.Net.WebProxy.%23ctor%2A>      -O <xref:System.Net.WebProxy.GetDefaultProxy%2A>método.</xref:System.Net.WebProxy.GetDefaultProxy%2A>      -O <xref:System.Net.GlobalProxySelection.Select%2A>método.</xref:System.Net.GlobalProxySelection.Select%2A>       Estes métodos fornecem uma instância de WebProxy que pode personalizar ainda mais; a diferença entre eles é como a instância está inicializada antes da devolução à sua aplicação. O <xref:System.Net.WebProxy.%23ctor%2A>construtor devolve uma instância da classe WebProxy com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.%23ctor%2A> Quando um pedido utiliza uma instância de WebProxy neste estado, não existe nenhum proxy é utilizada para enviar o pedido.       O <xref:System.Net.WebProxy.GetDefaultProxy%2A>método devolve uma instância da classe WebProxy com o <xref:System.Net.WebProxy.Address%2A>, <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>, e <xref:System.Net.WebProxy.BypassList%2A>Propriedades definidas para os valores utilizados por 5.5 do Internet Explorer e mais tarde.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy.GetDefaultProxy%2A>       O <xref:System.Net.GlobalProxySelection.Select%2A>método devolve uma instância da classe WebProxy com o mesmo propriedades definida de acordo com uma combinação de definições de ficheiro de configuração e do Internet Explorer.</xref:System.Net.GlobalProxySelection.Select%2A>       A classe de WebProxy suporta a deteção automática e a execução de scripts de configuração de proxy. Esta funcionalidade também é conhecido como a deteção automática de Proxy Web (WPAD). Quando utilizar a configuração automática do proxy, um script de configuração, normalmente, denominado Wpad.dat, tem de ter localizado, transferido, compilar e executar. Se estas operações são bem sucedidas, o script devolve proxies que podem ser utilizadas para um pedido."
  example:
  - "The following code example assigns a WebProxy instance to a <xref:System.Net.WebRequest> instance. The <xref:System.Net.WebRequest> instance uses the proxy to connect to external Internet resources. (For an example that demonstrates using the WPAD feature, see the documentation for the <xref:System.Net.IWebProxyScript> class.)  \n  \n [!code-cpp[Classic WebProxy Example#1](~/add/codesnippet/cpp/t-system.net.webproxy_1.cpp)]\n [!code-vb[Classic WebProxy Example#1](~/add/codesnippet/visualbasic/t-system.net.webproxy_1.vb)]\n [!code-cs[Classic WebProxy Example#1](~/add/codesnippet/csharp/t-system.net.webproxy_1.cs)]"
  syntax:
    content: 'public class WebProxy : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor
  id: '#ctor'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma instância vazia do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe."
  remarks: "O construtor predefinido inicializa uma instância vazia do <xref:System.Net.WebProxy>classe com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como `null`.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>       Quando o <xref:System.Net.WebProxy.Address%2A>propriedade é `null`, a <xref:System.Net.WebProxy.IsBypassed%2A>método devolve `true` e <xref:System.Net.WebProxy.GetProxy%2A>método devolve o endereço de destino.</xref:System.Net.WebProxy.GetProxy%2A> </xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.Address%2A>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#1](~/add/codesnippet/cpp/m-system.net.webproxy.sh_3_1.cpp)]\n [!code-cs[NCLWebProxy#1](~/add/codesnippet/csharp/m-system.net.webproxy.sh_3_1.cs)]"
  syntax:
    content: public WebProxy ();
    parameters: []
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o URI especificado."
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como um <xref:System.Uri>que contém a instância `Address`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#6](~/add/codesnippet/cpp/m-system.net.webproxy.sh_1_1.cpp)]\n [!code-cs[NCLWebProxy#6](~/add/codesnippet/csharp/m-system.net.webproxy.sh_1_1.cs)]"
  syntax:
    content: public WebProxy (string Address);
    parameters:
    - id: Address
      type: System.String
      description: "O URI do servidor proxy."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> é um URI inválido."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe a partir de especificado <xref:System.Uri>instância.</xref:System.Uri>"
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como o `Address` parâmetro.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.sh_0_1.cpp)]\n [!code-cs[NCLWebProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.sh_0_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>instância que contém o endereço do servidor proxy.</xref:System.Uri>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> com conteúdo anteriormente serializado de classe."
  remarks: "Este método é denominado pelo sistema para anular a serialização de uma <xref:System.Net.WebProxy>instância; efetue aplicações chamada não o mesmo.</xref:System.Net.WebProxy>"
  syntax:
    content: protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Os dados de serialização."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "O contexto de dados serializados."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o URI especificado e ignorar a definição."
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como um <xref:System.Uri>instância que contém `Address` e <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>propriedade definida como `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/m-system.net.webproxy.sh_4_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/m-system.net.webproxy.sh_4_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.String
      description: "O URI do servidor proxy."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> é um URI inválido."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o anfitrião especificado e o número de porta."
  remarks: 'O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como um <xref:System.Uri>instância do http:// formulário `Host` : `Port`.</xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>'
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#5](~/add/codesnippet/cpp/m-system.net.webproxy.sh_6_1.cpp)]\n [!code-cs[NCLWebProxy#5](~/add/codesnippet/csharp/m-system.net.webproxy.sh_6_1.cs)]"
  syntax:
    content: public WebProxy (string Host, int Port);
    parameters:
    - id: Host
      type: System.String
      description: "O nome do anfitrião proxy."
    - id: Port
      type: System.Int32
      description: "O número da porta no `Host` a utilizar."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O URI formado ao combinar <code> Host </code> e <code> Port </code> não é um URI válido."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o <xref:System.Uri>instância e ignorar a definição.</xref:System.Uri>"
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como `Address` e com o <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>propriedade definida como `BypassOnLocal`.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#3](~/add/codesnippet/cpp/m-system.net.webproxy.sh_7_1.cpp)]\n [!code-cs[NCLWebProxy#3](~/add/codesnippet/csharp/m-system.net.webproxy.sh_7_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>instância que contém o endereço do servidor proxy.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  id: '#ctor(System.String,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o URI especificado, a ignorar a definição e a lista de URIs de modo a ignorar."
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como um <xref:System.Uri>instância que contém `Address`, a <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>propriedade definida como `BypassOnLocal`e o <xref:System.Net.WebProxy.BypassList%2A>propriedade definida como `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#8](~/add/codesnippet/cpp/m-system.net.webproxy.sh_2_1.cpp)]\n [!code-cs[NCLWebProxy#8](~/add/codesnippet/csharp/m-system.net.webproxy.sh_2_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.String
      description: "O URI do servidor proxy."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Uma matriz de cadeias de expressão regular que contêm os URIs dos servidores de modo a ignorar."
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> é um URI inválido."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  id: '#ctor(System.Uri,System.Boolean,System.String[])'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com especificado <xref:System.Uri>instância, ignorar a definição e lista de URIs de modo a ignorar.</xref:System.Uri>"
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como `Address`, a <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>propriedade definida como `BypassOnLocal`e o <xref:System.Net.WebProxy.BypassList%2A>propriedade definida como `BypassList`.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#4](~/add/codesnippet/cpp/m-system.net.webproxy.sh_5_1.cpp)]\n [!code-cs[NCLWebProxy#4](~/add/codesnippet/csharp/m-system.net.webproxy.sh_5_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>instância que contém o endereço do servidor proxy.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Uma matriz de cadeias de expressão regular que contém os URIs dos servidores de modo a ignorar."
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o URI especificado, ignorar a definição de lista de URIs para ignorar e as credenciais."
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como um <xref:System.Uri>instância que contém `Address`, a <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>propriedade definida como `BypassOnLocal`, a <xref:System.Net.WebProxy.BypassList%2A>propriedade definida como `BypassList`e o <xref:System.Net.WebProxy.Credentials%2A>propriedade definida como `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Uri> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#9](~/add/codesnippet/cpp/25929c39-89a2-4ac3-bf8d-_1.cpp)]\n [!code-cs[NCLWebProxy#9](~/add/codesnippet/csharp/25929c39-89a2-4ac3-bf8d-_1.cs)]"
  syntax:
    content: public WebProxy (string Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.String
      description: "O URI do servidor proxy."
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Uma matriz de cadeias de expressão regular que contém os URIs dos servidores de modo a ignorar."
    - id: Credentials
      type: System.Net.ICredentials
      description: "Um <xref:System.Net.ICredentials>instância para submeter para o servidor proxy para autenticação.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>Address</code> é um URI inválido."
  platform:
  - net462
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  id: '#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)'
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.WebProxy&quot;> </xref> classe com o especificada <xref:System.Uri>instância, ignorar a definição de lista de URIs para ignorar e as credenciais.</xref:System.Uri>"
  remarks: "O <xref:System.Net.WebProxy>instância é inicializada com o <xref:System.Net.WebProxy.Address%2A>propriedade definida como `Address`, a <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>propriedade definida como `BypassOnLocal`, a <xref:System.Net.WebProxy.BypassList%2A>propriedade definida como `BypassList`e o <xref:System.Net.WebProxy.Credentials%2A>propriedade definida como `Credentials`.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A> </xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NCLWebProxy#13](~/add/codesnippet/cpp/35b6ace3-e60e-4d11-a417-_1.cpp)]\n [!code-cs[NCLWebProxy#13](~/add/codesnippet/csharp/35b6ace3-e60e-4d11-a417-_1.cs)]"
  syntax:
    content: public WebProxy (Uri Address, bool BypassOnLocal, string[] BypassList, System.Net.ICredentials Credentials);
    parameters:
    - id: Address
      type: System.Uri
      description: "A <xref:System.Uri>instância que contém o endereço do servidor proxy.</xref:System.Uri>"
    - id: BypassOnLocal
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: BypassList
      type: System.String[]
      description: "Uma matriz de cadeias de expressão regular que contém os URIs dos servidores de modo a ignorar."
    - id: Credentials
      type: System.Net.ICredentials
      description: "Um <xref:System.Net.ICredentials>instância para submeter para o servidor proxy para autenticação.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Address
  id: Address
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o endereço do servidor proxy."
  remarks: "A propriedade de endereço contém o endereço do servidor proxy. Quando a deteção automática do proxy não está ativada e não existe nenhum script de configuração automática é especificado, a propriedade de endereço e <xref:System.Net.WebProxy.BypassList%2A>determinar o proxy utilizado para um pedido.</xref:System.Net.WebProxy.BypassList%2A>       Quando a propriedade de endereço está `null`, ignorar o proxy de pedidos e ligar diretamente para o anfitrião de destino."
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its Address.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.ad_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.ad_1.cpp)]"
  syntax:
    content: public Uri Address { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>instância que contém o endereço do servidor proxy.</xref:System.Uri>"
  overload: System.Net.WebProxy.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassArrayList
  id: BypassArrayList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém uma lista de endereços que não utilizam o servidor proxy."
  remarks: "O <xref:System.Net.WebProxy.BypassList%2A>é uma lista de matriz de cadeias de expressão regular que descrevem os URIs de que um <xref:System.Net.WebRequest>instância acede diretamente em vez de através do servidor proxy.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  syntax:
    content: public System.Collections.ArrayList BypassArrayList { get; }
    return:
      type: System.Collections.ArrayList
      description: "Um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> que contém uma lista de <xref:System.Net.WebProxy.BypassList*>matrizes que representa os URIs de que não utilizam o servidor proxy quando acedido.</xref:System.Net.WebProxy.BypassList*>"
  overload: System.Net.WebProxy.BypassArrayList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassList
  id: BypassList
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define uma matriz de endereços que não utilizam o servidor proxy."
  remarks: "A propriedade BypassList contém uma matriz de expressões regulares que descrevem os URIs que um <xref:System.Net.WebRequest>instância acede diretamente em vez de através do servidor proxy.</xref:System.Net.WebRequest>"
  example:
  - "The following code example displays the properties of a <xref:System.Net.WebProxy> object, including its BypassList property.  \n  \n [!code-cs[NCLAutoProxy#1](~/add/codesnippet/csharp/p-system.net.webproxy.by_0_1.cs)]\n [!code-cpp[NCLAutoProxy#1](~/add/codesnippet/cpp/p-system.net.webproxy.by_0_1.cpp)]"
  syntax:
    content: public string[] BypassList { get; set; }
    return:
      type: System.String[]
      description: "Uma matriz que contém uma lista de expressões regulares que descrevem os URIs que não utilizam o servidor proxy quando acedido."
  overload: System.Net.WebProxy.BypassList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um valor que indica se pretende ignorar o servidor proxy para endereços locais."
  remarks: "A definição da propriedade BypassProxyOnLocal determina se <xref:System.Net.WebRequest>instâncias utilizam o servidor proxy quando acedem a recursos de Internet locais.</xref:System.Net.WebRequest>       Se for BypassProxyOnLocal `true`, pedidos de recursos locais de Internet não utilizam o servidor proxy. Pedidos locais são identificados por falta de um ponto (.) no URI, como no http://webserver/, ou acedam ao servidor local, incluindo http://localhost, http://loopback ou http://127.0.0.1. Quando é BypassProxyOnLocal `false`, todos os pedidos de Internet são efetuados através do servidor proxy.      > [!NOTE] > Pedidos para um anfitrião local com um URI que contêm um período de utilizam o proxy. Para evitar a utilização de um proxy nestes casos, crie uma entrada para o anfitrião em <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example demonstrates calling a constructor that sets this property and getting the value of this property.  \n  \n [!code-cpp[NCLWebProxy#7](~/add/codesnippet/cpp/p-system.net.webproxy.by_1_1.cpp)]\n [!code-cs[NCLWebProxy#7](~/add/codesnippet/csharp/p-system.net.webproxy.by_1_1.cs)]"
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar o servidor proxy para endereços locais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.Credentials
  id: Credentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define as credenciais para submeter para o servidor proxy para autenticação."
  remarks: "A propriedade de credenciais contém as credenciais de autenticação para enviar para o servidor proxy em resposta a um código de estado HTTP 407 (autorização de proxy). Na maioria dos cenários de cliente, deve utilizar o <xref:System.Net.CredentialCache.DefaultCredentials%2A>, quais são as credenciais do utilizador atualmente com sessão iniciada.</xref:System.Net.CredentialCache.DefaultCredentials%2A> Para tal, defina o <xref:System.Net.WebProxy.UseDefaultCredentials%2A>propriedade `true` em vez de definir esta propriedade.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>      > [!NOTE] > Se definir a propriedade de credenciais para as credenciais que o <xref:System.Net.CredentialCache.DefaultCredentials%2A>, definição de <xref:System.Net.WebProxy.UseDefaultCredentials%2A>propriedade `true` faz com que um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.WebProxy.UseDefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> Para evitar esta situação, tem de definir a propriedade de credenciais `null` antes de definir o <xref:System.Net.WebProxy.UseDefaultCredentials%2A>propriedade `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A> Da mesma forma, não é possível definir esta propriedade para qualquer valor quando <xref:System.Net.WebProxy.UseDefaultCredentials%2A>é `true`.</xref:System.Net.WebProxy.UseDefaultCredentials%2A>"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Um <xref:System.Net.ICredentials>instância que contém as credenciais para submeter para o servidor proxy para autenticação.</xref:System.Net.ICredentials>"
  overload: System.Net.WebProxy.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentou definir esta propriedade quando o <xref:System.Net.WebProxy.UseDefaultCredentials*>propriedade foi definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Net.WebProxy.UseDefaultCredentials*>"
  platform:
  - net462
- uid: System.Net.WebProxy.GetDefaultProxy
  id: GetDefaultProxy
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Lê as definições de nondynamic proxy do Internet Explorer."
  remarks: "O método GetDefaultProxy lê as definições de nondynamic proxy armazenadas pelo 5.5 do Internet Explorer e mais tarde e cria um <xref:System.Net.WebProxy>instância com essas definições.</xref:System.Net.WebProxy>       O método GetDefaultProxy não processará quaisquer definições dinâmicas que são geradas a partir dos scripts de executar o Internet Explorer, de entradas de configuração automática ou de pesquisas de DHCP ou DNS.       As aplicações devem utilizar o <xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>propriedade e o <xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName>método em vez do método GetDefaultProxy.</xref:System.Net.WebRequest.GetSystemWebProxy%2A?displayProperty=fullName> </xref:System.Net.WebRequest.DefaultWebProxy%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NCLWebProxy#11](~/add/codesnippet/cpp/m-system.net.webproxy.ge_0_1.cpp)]\n [!code-cs[NCLWebProxy#11](~/add/codesnippet/csharp/m-system.net.webproxy.ge_0_1.cs)]"
  syntax:
    content: public static System.Net.WebProxy GetDefaultProxy ();
    parameters: []
    return:
      type: System.Net.WebProxy
      description: "A <xref href=&quot;System.Net.WebProxy&quot;> </xref> instância que contém as definições de nondynamic proxy do Internet Explorer 5.5 e mais tarde."
  overload: System.Net.WebProxy.GetDefaultProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Preenche um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados que é necessário para serializar o objeto de destino."
  remarks: "Quaisquer objetos incluídos a <xref:System.Runtime.Serialization.SerializationInfo>automaticamente registadas e serializado pelo formatador.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para preencher com dados."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>que especifica o destino para esta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  id: GetProxy(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Devolve o URI efetuado para um pedido."
  remarks: "O método GetProxy devolve o URI que o <xref:System.Net.WebRequest>instância que utiliza para aceder ao recurso de Internet.</xref:System.Net.WebRequest>       Compara GetProxy `destination` com o conteúdo do <xref:System.Net.WebProxy.BypassList%2A>, utilizando o <xref:System.Net.WebProxy.IsBypassed%2A>método.</xref:System.Net.WebProxy.IsBypassed%2A> </xref:System.Net.WebProxy.BypassList%2A> Se <xref:System.Net.WebProxy.IsBypassed%2A>devolve `true`, GetProxy devolve `destination` e <xref:System.Net.WebRequest>instância não utilizar o servidor proxy.</xref:System.Net.WebRequest> </xref:System.Net.WebProxy.IsBypassed%2A>       Se `destination` não se encontra em <xref:System.Net.WebProxy.BypassList%2A>, a <xref:System.Net.WebRequest>instância utiliza o servidor proxy e o <xref:System.Net.WebProxy.Address%2A>propriedade é devolvida.</xref:System.Net.WebProxy.Address%2A> </xref:System.Net.WebRequest> </xref:System.Net.WebProxy.BypassList%2A>"
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to get the proxy that is selected for a resource.  \n  \n [!code-cs[NCLAutoProxy#2](~/add/codesnippet/csharp/m-system.net.webproxy.ge_1_1.cs)]\n [!code-cpp[NCLAutoProxy#2](~/add/codesnippet/cpp/m-system.net.webproxy.ge_1_1.cpp)]"
  syntax:
    content: public Uri GetProxy (Uri destination);
    parameters:
    - id: destination
      type: System.Uri
      description: "O <xref:System.Uri>instância do recurso de Internet pedida.</xref:System.Uri>"
    return:
      type: System.Uri
      description: "O <xref:System.Uri>instância do recurso de Internet, se o recurso estiver na lista de Desativação; caso contrário, o <xref:System.Uri>instância do proxy.</xref:System.Uri> </xref:System.Uri>"
  overload: System.Net.WebProxy.GetProxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destination</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  id: IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Indica se deve utilizar o servidor proxy para o anfitrião especificado."
  remarks: "O método IsBypassed é utilizado para determinar se pretende ignorar o servidor proxy ao aceder a um recurso de Internet.       O <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>e <xref:System.Net.WebProxy.BypassList%2A>Propriedades controlam o valor devolvido do método IsBypassed.</xref:System.Net.WebProxy.BypassList%2A> </xref:System.Net.WebProxy.BypassProxyOnLocal%2A>       Devolve IsBypassed `true` em qualquer uma das seguintes condições: - se <xref:System.Net.WebProxy.BypassProxyOnLocal%2A>é `true` e `host` é um URI local.</xref:System.Net.WebProxy.BypassProxyOnLocal%2A> Pedidos locais são identificados por falta de um ponto (.) no URI, como &quot;http://webserver/&quot;.      -Se `host` corresponde a uma expressão regular no <xref:System.Net.WebProxy.BypassList%2A>.</xref:System.Net.WebProxy.BypassList%2A>      -   If <xref:System.Net.WebProxy.Address%2A> is `null`.</xref:System.Net.WebProxy.Address%2A>       Devolvem todas as outras condições `false`."
  example:
  - "The following code example creates a <xref:System.Net.WebProxy> object and calls this method to check whether the bypass list is properly set.  \n  \n [!code-cpp[NCLWebProxy#12](~/add/codesnippet/cpp/m-system.net.webproxy.is_1.cpp)]\n [!code-cs[NCLWebProxy#12](~/add/codesnippet/csharp/m-system.net.webproxy.is_1.cs)]"
  syntax:
    content: public bool IsBypassed (Uri host);
    parameters:
    - id: host
      type: System.Uri
      description: "O <xref:System.Uri>instância de anfitrião para verificar a existência de utilização do proxy.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o servidor proxy não deve ser utilizado para <code> host </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.IsBypassed*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>host</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria os dados de serialização e contexto que são utilizadas pelo sistema para serializar um <xref href=&quot;System.Net.WebProxy&quot;> </xref> objeto."
  remarks: "O sistema chama este método de serialização de um objeto; aplicações não o chamam diretamente."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto para preencher com dados."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>estrutura que indica o destino para esta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebProxy.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebProxy
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que controla se o <xref:System.Net.CredentialCache.DefaultCredentials*>são enviadas com pedidos.</xref:System.Net.CredentialCache.DefaultCredentials*> </xref:System.Boolean>"
  remarks: "Defina esta propriedade como `true` quando os pedidos efetuados por este <xref:System.Net.WebProxy>objecto deve, se for pedida pelo servidor, ser autenticado utilizando as credenciais do utilizador atualmente com sessão iniciada.</xref:System.Net.WebProxy> Para aplicações de cliente, este é o comportamento pretendido na maioria dos cenários. Para aplicações de camada média, tais como aplicações do ASP.NET, em vez de utilizar esta propriedade, normalmente iria definir o <xref:System.Net.WebProxy.Credentials%2A>propriedade para as credenciais do cliente em cujo nome é efetuado o pedido.</xref:System.Net.WebProxy.Credentials%2A>       A tabela seguinte mostra o efeito da definição do valor UseDefaultCredentials, com base no valor da <xref:System.Net.WebProxy.Credentials%2A>propriedade.</xref:System.Net.WebProxy.Credentials%2A>      | valor de <xref:System.Net.WebProxy.Credentials%2A>| Valor de UseDefaultCredentials | Efeito |   |----------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `true`| Sem qualquer efeito. |   | <xref:System.Net.CredentialCache.DefaultCredentials%2A>| `false`| <xref:System.Net.WebProxy.Credentials%2A>está definido como `null`. |   | `null`|`true`|<xref:System.Net.WebProxy.Credentials%2A> is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A>.|   | Qualquer valor diferente de <xref:System.Net.CredentialCache.DefaultCredentials%2A>ou `null` | `true` ou `false`| Definição UseDefaultCredentials emite uma exceção. |       Se for UseDefaultCredentials `false`, pode alterar o <xref:System.Net.WebProxy.Credentials%2A>propriedade para as credenciais.</xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.WebProxy.Credentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A> Se for UseDefaultCredentials `true`, a alteração de <xref:System.Net.WebProxy.Credentials%2A>propriedade da <xref:System.Net.CredentialCache.DefaultCredentials%2A>(o valor que é definido quando a propriedade UseDefaultCredentials está definida como `true`) irá gerar uma exceção.</xref:System.Net.CredentialCache.DefaultCredentials%2A> </xref:System.Net.WebProxy.Credentials%2A>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se forem utilizadas as credenciais predefinidas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebProxy.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Tentou definir esta propriedade quando o <xref:System.Net.WebProxy.Credentials*>propriedade contém as credenciais que não sejam as credenciais predefinidas.</xref:System.Net.WebProxy.Credentials*> Para obter mais informações, consulte a secção observações."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.WebProxy.#ctor
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy()
  nameWithType: WebProxy.WebProxy()
  fullName: System.Net.WebProxy.WebProxy()
- uid: System.Net.WebProxy.#ctor(System.String)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String)
  nameWithType: WebProxy.WebProxy(String)
  fullName: System.Net.WebProxy.WebProxy(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebProxy.#ctor(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri)
  nameWithType: WebProxy.WebProxy(Uri)
  fullName: System.Net.WebProxy.WebProxy(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.WebProxy(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.WebProxy(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean)
  nameWithType: WebProxy.WebProxy(String,Boolean)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebProxy.#ctor(System.String,System.Int32)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Int32)
  nameWithType: WebProxy.WebProxy(String,Int32)
  fullName: System.Net.WebProxy.WebProxy(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean)
  nameWithType: WebProxy.WebProxy(Uri,Boolean)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean)
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[])
  nameWithType: WebProxy.WebProxy(String,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[])
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[])
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[])
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[])
- uid: System.Net.WebProxy.#ctor(System.String,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(String,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(String,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(String,Boolean,String[],ICredentials)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebProxy.#ctor(System.Uri,System.Boolean,System.String[],System.Net.ICredentials)
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy(Uri,Boolean,String[],ICredentials)
  nameWithType: WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
  fullName: System.Net.WebProxy.WebProxy(Uri,Boolean,String[],ICredentials)
- uid: System.Net.WebProxy.Address
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
  fullName: System.Net.WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
  fullName: System.Net.WebProxy.BypassArrayList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Net.WebProxy.BypassList
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
  fullName: System.Net.WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
  fullName: System.Net.WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
  fullName: System.Net.WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy()
  nameWithType: WebProxy.GetDefaultProxy()
  fullName: System.Net.WebProxy.GetDefaultProxy()
- uid: System.Net.WebProxy
  parent: System.Net
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy
  fullName: System.Net.WebProxy
- uid: System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.GetProxy(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy(Uri)
  nameWithType: WebProxy.GetProxy(Uri)
  fullName: System.Net.WebProxy.GetProxy(Uri)
- uid: System.Net.WebProxy.IsBypassed(System.Uri)
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed(Uri)
  nameWithType: WebProxy.IsBypassed(Uri)
  fullName: System.Net.WebProxy.IsBypassed(Uri)
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.WebProxy.UseDefaultCredentials
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
  fullName: System.Net.WebProxy.UseDefaultCredentials
- uid: System.Net.WebProxy.#ctor*
  parent: System.Net.WebProxy
  isExternal: false
  name: WebProxy
  nameWithType: WebProxy.WebProxy
- uid: System.Net.WebProxy.Address*
  parent: System.Net.WebProxy
  isExternal: false
  name: Address
  nameWithType: WebProxy.Address
- uid: System.Net.WebProxy.BypassArrayList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassArrayList
  nameWithType: WebProxy.BypassArrayList
- uid: System.Net.WebProxy.BypassList*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassList
  nameWithType: WebProxy.BypassList
- uid: System.Net.WebProxy.BypassProxyOnLocal*
  parent: System.Net.WebProxy
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebProxy.BypassProxyOnLocal
- uid: System.Net.WebProxy.Credentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: Credentials
  nameWithType: WebProxy.Credentials
- uid: System.Net.WebProxy.GetDefaultProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetDefaultProxy
  nameWithType: WebProxy.GetDefaultProxy
- uid: System.Net.WebProxy.GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetObjectData
  nameWithType: WebProxy.GetObjectData
- uid: System.Net.WebProxy.GetProxy*
  parent: System.Net.WebProxy
  isExternal: false
  name: GetProxy
  nameWithType: WebProxy.GetProxy
- uid: System.Net.WebProxy.IsBypassed*
  parent: System.Net.WebProxy
  isExternal: false
  name: IsBypassed
  nameWithType: WebProxy.IsBypassed
- uid: System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.WebProxy
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.WebProxy.UseDefaultCredentials*
  parent: System.Net.WebProxy
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebProxy.UseDefaultCredentials
