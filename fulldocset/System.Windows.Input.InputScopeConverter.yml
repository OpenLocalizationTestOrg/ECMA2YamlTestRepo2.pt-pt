### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.InputScopeConverter
  id: InputScopeConverter
  children:
  - System.Windows.Input.InputScopeConverter.#ctor
  - System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: InputScopeConverter
  nameWithType: InputScopeConverter
  fullName: System.Windows.Input.InputScopeConverter
  type: Class
  summary: "Converts a <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> to and from other types."
  remarks: "<a name=&quot;xamlTextUsage_InputScopeConverter&quot;></a>    ## XAML Text Usage"
  syntax:
    content: 'public class InputScopeConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Input.InputScopeConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Input.InputScopeConverter
  langs:
  - csharp
  name: InputScopeConverter()
  nameWithType: InputScopeConverter.InputScopeConverter()
  fullName: System.Windows.Input.InputScopeConverter.InputScopeConverter()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Input.InputScopeConverter&quot;></xref> class."
  syntax:
    content: public InputScopeConverter ();
    parameters: []
  overload: System.Windows.Input.InputScopeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Input.InputScopeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: InputScopeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Input.InputScopeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Determines whether an <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> object can be converted from an object of a specified type."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An object that describes any type descriptor context.  This object must implement the <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> interface.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type> to check for conversion compatibility."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>sourceType</code> is type <xref:System.String>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Input.InputScopeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Input.InputScopeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: InputScopeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Input.InputScopeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Determines whether an <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> object can be converted to an object of a specified type."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An object that describes any type descriptor context.  This object must implement the <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> interface.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type> to check for conversion compatibility."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>destinationType</code> is type <xref:System.String>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Input.InputScopeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Input.InputScopeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: InputScopeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Input.InputScopeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Converts a source object (string) into an <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> object."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An object that describes any type descriptor context.  This object must implement the <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> interface.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object containing any cultural context for the conversion.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: source
      type: System.Object
      description: "A source object to convert from.  This object must be a string."
    return:
      type: System.Object
      description: "An <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> object converted from the specified source object."
  overload: System.Windows.Input.InputScopeConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Input.InputScopeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: InputScopeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Input.InputScopeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Converts an <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> object into a specified object type (string)."
  remarks: '`destinationType` must be <xref:System.String>.'
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An object that describes any type descriptor context.  This object must implement the <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> interface.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object containing any cultural context for the conversion.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: value
      type: System.Object
      description: "An object to convert from.  This object must be of type <xref href=&quot;System.Windows.Input.InputScope&quot;></xref>."
    - id: destinationType
      type: System.Type
      description: "A destination type to convert type.  This type must be string."
    return:
      type: System.Object
      description: "A new object of the specified type (string) converted from the given <xref href=&quot;System.Windows.Input.InputScope&quot;></xref> object."
  overload: System.Windows.Input.InputScopeConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Windows.Input.InputScopeConverter.#ctor
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: InputScopeConverter()
  nameWithType: InputScopeConverter.InputScopeConverter()
  fullName: System.Windows.Input.InputScopeConverter.InputScopeConverter()
- uid: System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: InputScopeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Input.InputScopeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: InputScopeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Input.InputScopeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: InputScopeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Input.InputScopeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: InputScopeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Input.InputScopeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Input.InputScopeConverter.#ctor*
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: InputScopeConverter
  nameWithType: InputScopeConverter.InputScopeConverter
- uid: System.Windows.Input.InputScopeConverter.CanConvertFrom*
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: InputScopeConverter.CanConvertFrom
- uid: System.Windows.Input.InputScopeConverter.CanConvertTo*
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: InputScopeConverter.CanConvertTo
- uid: System.Windows.Input.InputScopeConverter.ConvertFrom*
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: InputScopeConverter.ConvertFrom
- uid: System.Windows.Input.InputScopeConverter.ConvertTo*
  parent: System.Windows.Input.InputScopeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: InputScopeConverter.ConvertTo
