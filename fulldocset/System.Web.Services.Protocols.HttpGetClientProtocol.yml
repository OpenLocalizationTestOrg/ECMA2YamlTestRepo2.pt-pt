### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpGetClientProtocol
  id: HttpGetClientProtocol
  children:
  - System.Web.Services.Protocols.HttpGetClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)
  langs:
  - csharp
  name: HttpGetClientProtocol
  nameWithType: HttpGetClientProtocol
  fullName: System.Web.Services.Protocols.HttpGetClientProtocol
  type: Class
  summary: "The base class for XML Web service client proxies that use the HTTP-GET protocol."
  remarks: "When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.  \n  \n If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call. When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.  \n  \n HttpGetClientProtocol and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively. Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.  \n  \n For details on building a proxy class, see [&#91;\\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/en-us/142d91f5-3249-4cfc-a431-1f3acb76d756)."
  example:
  - "The following example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below. The proxy class derives from HttpGetClientProtocol, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.  \n  \n [!code-cs[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_16_1.cs)]\n [!code-cpp[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_16_1.cpp)]\n [!code-vb[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_16_1.vb)]  \n  \n The following example is the `Math` XML Web service, from which the above proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  - System.Web.Services.Protocols.HttpWebClientProtocol
  - System.Web.Services.Protocols.HttpSimpleClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpGetClientProtocol
  langs:
  - csharp
  name: HttpGetClientProtocol()
  nameWithType: HttpGetClientProtocol.HttpGetClientProtocol()
  fullName: System.Web.Services.Protocols.HttpGetClientProtocol.HttpGetClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Services.Protocols.HttpGetClientProtocol&quot;></xref> class."
  remarks: ''
  example:
  - >-
    [!code-cpp[HttpGetClientProtocol_Constructor#1](~/add/codesnippet/cpp/m-system.web.services.pr_0_1.cpp)]
     [!code-vb[HttpGetClientProtocol_Constructor#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_0_1.vb)]
     [!code-cs[HttpGetClientProtocol_Constructor#1](~/add/codesnippet/csharp/m-system.web.services.pr_0_1.cs)]
  syntax:
    content: public HttpGetClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpGetClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: HttpGetClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Creates a <xref:System.Net.WebRequest> instance for the specified URI."
  remarks: "This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET. By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request."
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "The <xref:System.Uri> to use when creating the <xref:System.Net.WebRequest>."
    return:
      type: System.Net.WebRequest
      description: "The <xref:System.Net.WebRequest> instance."
  overload: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is null or has a length of zero."
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.HttpSimpleClientProtocol
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpGetClientProtocol
  isExternal: false
  name: HttpGetClientProtocol()
  nameWithType: HttpGetClientProtocol.HttpGetClientProtocol()
  fullName: System.Web.Services.Protocols.HttpGetClientProtocol.HttpGetClientProtocol()
- uid: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpGetClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: HttpGetClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpGetClientProtocol
  isExternal: false
  name: HttpGetClientProtocol
  nameWithType: HttpGetClientProtocol.HttpGetClientProtocol
- uid: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.HttpGetClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: HttpGetClientProtocol.GetWebRequest
