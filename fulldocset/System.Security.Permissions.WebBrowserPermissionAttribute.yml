### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.WebBrowserPermissionAttribute
  id: WebBrowserPermissionAttribute
  children:
  - System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission
  - System.Security.Permissions.WebBrowserPermissionAttribute.Level
  langs:
  - csharp
  name: WebBrowserPermissionAttribute
  nameWithType: WebBrowserPermissionAttribute
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute
  type: Class
  summary: "Permite que as ações de segurança para <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref> seja aplicada ao código utilizando a segurança declarativa."
  remarks: "WebBrowserPermissionAttribute controla a capacidade de um controlo de browser da Web para ser executada numa aplicação Windows Presentation Foundation (WPF). Depende do âmbito da declaração de que está autorizado a <xref:System.Security.Permissions.SecurityAction>que é utilizado.</xref:System.Security.Permissions.SecurityAction>       As informações de segurança declaradas por um atributo de segurança são armazenadas nos metadados do destino de atributo e são acedidas pelo sistema em tempo de execução. Atributos de segurança são utilizados apenas para a segurança declarativa. Para segurança imperativo, utilizar a classe de permissão correspondente, <xref:System.Security.Permissions.WebBrowserPermission>.</xref:System.Security.Permissions.WebBrowserPermission>      ## Classe de atributo utilização este XAML não é normalmente utilizado em XAML."
  example:
  - "The following example shows how to demand that the calling code has unrestricted permission to create a Web browser control.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute3](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermissionattribute3)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute3](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermissionattribute3)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class WebBrowserPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  langs:
  - csharp
  name: WebBrowserPermissionAttribute(SecurityAction)
  nameWithType: WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.WebBrowserPermissionAttribute&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  remarks: "O valor predefinido da <xref:System.Security.Permissions.WebBrowserPermissionAttribute.Level%2A>propriedade é <xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel> </xref:System.Security.Permissions.WebBrowserPermissionAttribute.Level%2A>      ## Os membros da utilização de atributos XAML desta classe: são não normalmente utilizados nas [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], ou não é possível utilizar [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example shows how to define a <xref:System.Security.Permissions.WebBrowserPermissionAttribute>.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute4](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermissionattribute4)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute4](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermissionattribute4)]"
  syntax:
    content: public WebBrowserPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Um do <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valores."
  overload: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: WebBrowserPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma nova instância do <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref> classe."
  remarks: "O método de CreatePermission é chamado pelo sistema de segurança, não pelo código da aplicação.       As informações de segurança descritas pelo <xref:System.Security.Permissions.WebBrowserPermissionAttribute>é armazenada nos metadados do destino de atributo, que é a classe para o qual <xref:System.Security.Permissions.WebBrowserPermissionAttribute>é aplicada.</xref:System.Security.Permissions.WebBrowserPermissionAttribute> </xref:System.Security.Permissions.WebBrowserPermissionAttribute> O sistema acede as informações em tempo de execução. O sistema utiliza o <xref:System.Security.Permissions.WebBrowserPermission>devolvido pelo CreatePermission para converter as informações de segurança do destino do atributo de um formulário serializável armazenado nos metadados.</xref:System.Security.Permissions.WebBrowserPermission>      ## Os membros da utilização de atributos XAML desta classe: são não normalmente utilizados nas [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], ou não é possível utilizar [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.WebBrowserPermission&quot;> </xref> correspondente para a declaração de segurança."
  overload: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.Level
  id: Level
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  langs:
  - csharp
  name: Level
  nameWithType: WebBrowserPermissionAttribute.Level
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.Level
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Obtém ou define a permissão de browser Web atual nível para o <xref href=&quot;System.Security.Permissions.WebBrowserPermissionAttribute&quot;> </xref>."
  remarks: "O valor predefinido é <xref:System.Security.Permissions.WebBrowserPermissionLevel>.</xref:System.Security.Permissions.WebBrowserPermissionLevel>      ## Os membros da utilização de atributos XAML desta classe: são não normalmente utilizados nas [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], ou não é possível utilizar [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example shows how to demand that the calling code has permission to create a Web browser control that runs at a safe level.  \n  \n [!code-cs[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute2](~/add/codesnippet/csharp/WebBrowserPermissionsSnippets/Window1.xaml.cs#webbrowserpermissionattribute2)]\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermissionAttribute2](~/add/codesnippet/visualbasic/webbrowserpermissionssnippets/window1.xaml.vb#webbrowserpermissionattribute2)]"
  syntax:
    content: public System.Security.Permissions.WebBrowserPermissionLevel Level { get; set; }
    return:
      type: System.Security.Permissions.WebBrowserPermissionLevel
      description: "O estado de nível de permissão de browser Web atual."
  overload: System.Security.Permissions.WebBrowserPermissionAttribute.Level*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: WebBrowserPermissionAttribute(SecurityAction)
  nameWithType: WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.WebBrowserPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: WebBrowserPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.Level
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermissionAttribute.Level
  fullName: System.Security.Permissions.WebBrowserPermissionAttribute.Level
- uid: System.Security.Permissions.WebBrowserPermissionLevel
  parent: System.Security.Permissions
  isExternal: false
  name: WebBrowserPermissionLevel
  nameWithType: WebBrowserPermissionLevel
  fullName: System.Security.Permissions.WebBrowserPermissionLevel
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.#ctor*
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: WebBrowserPermissionAttribute
  nameWithType: WebBrowserPermissionAttribute.WebBrowserPermissionAttribute
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: WebBrowserPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.WebBrowserPermissionAttribute.Level*
  parent: System.Security.Permissions.WebBrowserPermissionAttribute
  isExternal: false
  name: Level
  nameWithType: WebBrowserPermissionAttribute.Level
