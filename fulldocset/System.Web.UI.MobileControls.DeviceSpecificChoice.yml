### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice
  id: DeviceSpecificChoice
  children:
  - System.Web.UI.MobileControls.DeviceSpecificChoice.#ctor
  - System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject(System.Object)
  - System.Web.UI.MobileControls.DeviceSpecificChoice.Argument
  - System.Web.UI.MobileControls.DeviceSpecificChoice.Contents
  - System.Web.UI.MobileControls.DeviceSpecificChoice.Filter
  - System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute(System.String)
  - System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates
  - System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute(System.String,System.String)
  - System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.MobileControls.DeviceSpecificChoice.Templates
  - System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns
  langs:
  - csharp
  name: DeviceSpecificChoice
  nameWithType: DeviceSpecificChoice
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice
  type: Class
  summary: "Provides a single choice within a DeviceSpecific/Choice construct. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "This class is analogous to the [\\<Choice>](http://msdn.microsoft.com/en-us/c81bee77-bb45-4211-be0f-e13a040b3c2d) element. Choices are tested in the order that they appear within a [\\<DeviceSpecific>](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element. If you specify the <xref:System.Web.UI.MobileControls.DeviceSpecificChoice.Filter%2A> property of the `<Choice>` element, its value must be the name of a device filter defined in the `<deviceFilters>` section of the Machine.config file. At run time, ASP.NET evaluates the specified device filter against the capabilities of the current device. If successful, the choice is selected. If you do not specify the <xref:System.Web.UI.MobileControls.DeviceSpecificChoice.Filter%2A> property, the defaults for the `<Choice>` element are selected."
  example:
  - "The following code example shows a `<Choice>` element within an image. The `Source` attribute overrides the <xref:System.Web.UI.MobileControls.Image.ImageUrl%2A> property of the <xref:System.Web.UI.MobileControls.Image> control.  \n  \n Although the example uses functions to determine whether the browser requires WML (`isWML11`) or supports color (`supportsColor`), you can instead use a Web.config file to define a `<DeviceSpecific>` element that the .NET Framework automatically uses to make the determination for you.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information, see [ASP.NET Web Forms Page Syntax Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[MobileDeviceSpecificChoiceSample#1](~/add/codesnippet/csharp/t-system.web.ui.mobileco_28_2.aspx)]\n [!code-vb[MobileDeviceSpecificChoiceSample#1](~/add/codesnippet/visualbasic/t-system.web.ui.mobileco_28_2.aspx)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Web.Mobile.dll assembly has been deprecated and should no longer be used. For information about how to develop ASP.NET mobile applications, see http://go.microsoft.com/fwlink/?LinkId=157231.")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.MobileControls.DeviceSpecificChoiceControlBuilder))]

      [System.Web.UI.MobileControls.PersistName("Choice")]

      [System.Web.UI.PersistChildren(false)]

      public class DeviceSpecificChoice : System.Web.UI.IAttributeAccessor, System.Web.UI.IParserAccessor
  inheritance:
  - System.Object
  implements:
  - System.Web.UI.IAttributeAccessor
  - System.Web.UI.IParserAccessor
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.#ctor
  id: '#ctor'
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: DeviceSpecificChoice()
  nameWithType: DeviceSpecificChoice.DeviceSpecificChoice()
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.DeviceSpecificChoice()
  type: Constructor
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.MobileControls.DeviceSpecificChoice&quot;></xref> class. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public DeviceSpecificChoice ();
    parameters: []
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: DeviceSpecificChoice.AddParsedSubObject(Object)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Adds the <xref:System.Object> to the <xref href=&quot;System.Web.UI.MobileControls.DeviceSpecificChoice&quot;></xref> object&quot;s <xref:System.Web.UI.MobileControls.DeviceSpecificChoice.Templates*> object. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "This method is used primarily by control designers and is not intended for general use."
  syntax:
    content: protected void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to be added."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Argument
  id: Argument
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: Argument
  nameWithType: DeviceSpecificChoice.Argument
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Argument
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets or sets the argument used for a <xref:System.Web.UI.MobileControls.DeviceSpecificChoice.Filter*> property. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "If the filter is a comparison filter, the value of Argument is used in place of the argument value defined in Web.config. If the value of <xref:System.Web.UI.MobileControls.DeviceSpecificChoice.Filter%2A> is the name of a method (either on the page or off in an assembly pointed to by Web.config), the value of Argument is supplied as an argument to that method."
  syntax:
    content: public string Argument { get; set; }
    return:
      type: System.String
      description: "The argument used for a <xref:System.Web.UI.MobileControls.DeviceSpecificChoice.Filter*>."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.Argument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Contents
  id: Contents
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: Contents
  nameWithType: DeviceSpecificChoice.Contents
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Contents
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets the overridden properties defined for a choice in a DeviceSpecific/Choice construct. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "Changing this collection after overridden properties have been processed (in the <xref:System.Web.UI.MobileControls.MobilePage.OnDeviceCustomize%2A> method) has no effect. This method is used primarily by control designers and is not intended for general use."
  syntax:
    content: public System.Collections.IDictionary Contents { get; }
    return:
      type: System.Collections.IDictionary
      description: "The overridden properties defined for a choice in a DeviceSpecific/Choice construct."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Filter
  id: Filter
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: Filter
  nameWithType: DeviceSpecificChoice.Filter
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Filter
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets or sets the name of a device filter. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "The filter name must be the name of a method on the page, in the associated `.ascx` file, or the name of a valid device filter defined in the <`deviceFilters`> section of Web.config. If a method name is specified with the Filter property, that method must match the following prototype.  \n  \n```  \npublic bool methodName(System.Web.Mobile.MobileCapabilities   \n    capabilities, String optionalArgument)  \n```  \n  \n For example, if the Filter property was set to `myChoiceMethod`, a method with the following signature must exist.  \n  \n```  \npublic bool myChoiceMethod(System.Web.Mobile.MobileCapabilities   \n    capabilities, String optionalArgument);  \n```  \n  \n When evaluating the [\\<Choice>](http://msdn.microsoft.com/en-us/c81bee77-bb45-4211-be0f-e13a040b3c2d) element, a check is made to determine whether a method of the appropriate signature exists on the page. If not, ASP.NET checks the <`deviceFilters`> section of Web.config.  \n  \n> [!NOTE]\n>  Device filters are case-sensitive."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "The name of a device filter. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DeviceSpecificChoice.GetAttribute(String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Returns the specified attribute from the <xref href=&quot;System.Web.UI.MobileControls.DeviceSpecificChoice&quot;></xref> object. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: protected string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "The name of the attribute to get."
    return:
      type: System.String
      description: "A <xref:System.String> that contains the value of the specified attribute."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "There is no attribute in the object identified by <code>key</code>."
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates
  id: HasTemplates
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: HasTemplates
  nameWithType: DeviceSpecificChoice.HasTemplates
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets a value indicating whether the currently selected choice in the [&lt;DeviceSpecific&gt;](http://msdn.microsoft.com/en-us/5984e67a-91cf-4f32-8815-7e7fab3d3b5b) element has templates defined within it. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public bool HasTemplates { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the currently selected choice has templates defined with in it; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DeviceSpecificChoice.SetAttribute(String,String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Assigns the given value to the attribute specified by the key. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: protected void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "The name of the attribute to set."
    - id: value
      type: System.String
      description: "The value that is assigned to the attribute."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  isEii: true
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A?displayProperty=fullName&gt;. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "The value of the attribute."
  syntax:
    content: string IAttributeAccessor.GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the attribute to be set."
    return:
      type: System.String
      description: "A <xref:System.String> that contains the value of the specified attribute."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  isEii: true
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A?displayProperty=fullName&gt;. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.MobileControls.DeviceSpecificChoice> instance is cast to an <xref:System.Web.UI.IAttributeAccessor> interface."
  syntax:
    content: void IAttributeAccessor.SetAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the attribute to be set."
    - id: value
      type: System.String
      description: "The value assigned to the attribute."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  id: System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  isEii: true
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  nameWithType: DeviceSpecificChoice.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.IParserAccessor.AddParsedSubObject%2A?displayProperty=fullName&gt;. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.MobileControls.DeviceSpecificChoice> instance is cast to an <xref:System.Web.UI.IParserAccessor> interface."
  syntax:
    content: void IParserAccessor.AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to be added."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IParserAccessor#AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Templates
  id: Templates
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: Templates
  nameWithType: DeviceSpecificChoice.Templates
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Templates
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets the templates that have been defined in the [&lt;Choice&gt;](http://msdn.microsoft.com/en-us/c81bee77-bb45-4211-be0f-e13a040b3c2d) element. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  syntax:
    content: public System.Collections.IDictionary Templates { get; }
    return:
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> instance containing the <xref href=&quot;System.Web.UI.ITemplate&quot;></xref> objects defined for the <xref uid=&quot;langword_csharp_&lt;Choice&gt;&quot; name=&quot;&lt;Choice&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.Templates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns
  id: Xmlns
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  langs:
  - csharp
  name: Xmlns
  nameWithType: DeviceSpecificChoice.Xmlns
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns
  type: Property
  assemblies:
  - System.Web.Mobile
  namespace: System.Web.UI.MobileControls
  summary: "Gets or sets the type of markup in a [&lt;Choice&gt;](http://msdn.microsoft.com/en-us/c81bee77-bb45-4211-be0f-e13a040b3c2d) element. This API is obsolete. For information about how to develop ASP.NET mobile applications, see the [www.asp.net/mobile](http://go.microsoft.com/fwlink/?LinkID=182900) Web site."
  remarks: "This property is used primarily by control designers and is not intended for general developer use. The Xmlns value is inherited from the containing control or page."
  syntax:
    content: public string Xmlns { get; set; }
    return:
      type: System.String
      description: "The type of markup inside templates of a choice."
  overload: System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.#ctor
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: DeviceSpecificChoice()
  nameWithType: DeviceSpecificChoice.DeviceSpecificChoice()
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.DeviceSpecificChoice()
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject(System.Object)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: DeviceSpecificChoice.AddParsedSubObject(Object)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject(Object)
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Argument
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Argument
  nameWithType: DeviceSpecificChoice.Argument
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Argument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Contents
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Contents
  nameWithType: DeviceSpecificChoice.Contents
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Contents
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Filter
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Filter
  nameWithType: DeviceSpecificChoice.Filter
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Filter
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute(System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DeviceSpecificChoice.GetAttribute(String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute(String)
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: HasTemplates
  nameWithType: DeviceSpecificChoice.HasTemplates
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute(System.String,System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DeviceSpecificChoice.SetAttribute(String,String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute(String,String)
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.GetAttribute(String)
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  nameWithType: DeviceSpecificChoice.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Templates
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Templates
  nameWithType: DeviceSpecificChoice.Templates
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Templates
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Xmlns
  nameWithType: DeviceSpecificChoice.Xmlns
  fullName: System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.#ctor*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: DeviceSpecificChoice
  nameWithType: DeviceSpecificChoice.DeviceSpecificChoice
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.AddParsedSubObject*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: AddParsedSubObject
  nameWithType: DeviceSpecificChoice.AddParsedSubObject
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Argument*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Argument
  nameWithType: DeviceSpecificChoice.Argument
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Contents*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Contents
  nameWithType: DeviceSpecificChoice.Contents
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Filter*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Filter
  nameWithType: DeviceSpecificChoice.Filter
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.GetAttribute*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: GetAttribute
  nameWithType: DeviceSpecificChoice.GetAttribute
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.HasTemplates*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: HasTemplates
  nameWithType: DeviceSpecificChoice.HasTemplates
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.SetAttribute*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: SetAttribute
  nameWithType: DeviceSpecificChoice.SetAttribute
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#GetAttribute*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute
  nameWithType: DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.GetAttribute
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IAttributeAccessor#SetAttribute*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute
  nameWithType: DeviceSpecificChoice.System.Web.UI.IAttributeAccessor.SetAttribute
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.System#Web#UI#IParserAccessor#AddParsedSubObject*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: System.Web.UI.IParserAccessor.AddParsedSubObject
  nameWithType: DeviceSpecificChoice.System.Web.UI.IParserAccessor.AddParsedSubObject
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Templates*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Templates
  nameWithType: DeviceSpecificChoice.Templates
- uid: System.Web.UI.MobileControls.DeviceSpecificChoice.Xmlns*
  parent: System.Web.UI.MobileControls.DeviceSpecificChoice
  isExternal: false
  name: Xmlns
  nameWithType: DeviceSpecificChoice.Xmlns
