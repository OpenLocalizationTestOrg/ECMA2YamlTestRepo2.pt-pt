### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SiteIdentityPermission
  id: SiteIdentityPermission
  children:
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.SiteIdentityPermission.Copy
  - System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.Site
  - System.Security.Permissions.SiteIdentityPermission.ToXml
  - System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission
  fullName: System.Security.Permissions.SiteIdentityPermission
  type: Class
  summary: "Define a permissão de identidade para o Web site a partir do qual o código de origem. Esta classe não pode ser herdada."
  remarks: "Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "O estado de completamente restrito <xref:System.Security.Permissions.SiteIdentityPermission>não corresponde a nenhum site.</xref:System.Security.Permissions.SiteIdentityPermission> Este construtor está incluído para consistência com a estrutura de outras permissões, mas não é útil em prática.      > [!NOTE] > No versões do .NET Framework 1.0 e 1.1, permissões de identidade não podem ter um <xref:System.Security.Permissions.PermissionState>o valor de estado de permissão.</xref:System.Security.Permissions.PermissionState> A partir do .NET Framework versão 2.0, permissões de identidade podem ter qualquer valor de estado de permissão. Isto significa que em versões 2.0 e posteriores, permissões de identidade têm o mesmo comportamento de permissões que implementam o <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Ou seja, uma pedido para uma identidade sempre for bem sucedida, independentemente da identidade da assemblagem, se a assemblagem foi concedida fidedignidade total.       Nas versões do .NET Framework 1.0 e 1.1, exigências nas permissões de identidade são eficazes, mesmo quando a assemblagem de chamada é totalmente fidedigna. Ou seja, embora a assemblagem de chamada tem fidedignidade total, uma pedido para uma permissão de identidade falha se a assemblagem não cumpre os critérios de pedidos. A partir do .NET Framework versão 2.0, os pedidos para permissões de identidade são ineficaz se a assemblagem de chamada tem fidedignidade total. Isto garante a consistência para todas as permissões, eliminando o tratamento de permissões de identidade num caso especial."
  syntax:
    content: public SiteIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um do <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valores."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> state </code> parâmetro não é um valor válido de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> classe para representar a identidade do site especificado."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match."
  syntax:
    content: public SiteIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "A expressão de nome ou o caráter universal de site."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> site </code> parâmetro não é uma cadeia válida ou não corresponde um nome de site de caráter universal válido."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma cópia da permissão atual idêntica."
  remarks: "Uma cópia da permissão representa o mesmo acesso aos recursos ou a mesma identidade de site como a permissão original."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Uma cópia da permissão atual."
  overload: System.Security.Permissions.SiteIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Reconstructs uma permissão com um estado especificado de uma codificação de XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "O codificação XML a utilizar para reconstrua a permissão."
  overload: System.Security.Permissions.SiteIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> esd </code> parâmetro não é um elemento de permissão válido.       - ou - <code> esd </code> número da versão do parâmetro não é válido."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma permissão que está a interseção da permissão atual e a permissão especificada."
  remarks: "A intersecção de dois permissões é uma permissão que descreve os sites ambas as descrevem em comum. Apenas um pedido que transmite ambas as permissões originais passarão a interseção. Por exemplo, a intersecção de uma permissão que representa acesso www.fourthcoffee.com e outro que representa acesso a *. fourthcoffee.com é uma permissão que representa acesso www.fourthcoffee.com.       A intersecção de dois permissões de identidade do site idênticos é a mesma permissão. A intersecção de dois diferente (e não universais) expressões é uma permissão vazia. A intersecção de uma expressão com carateres universais e um site correspondente é o site. A intersecção de dois expressões com carateres universais que correspondem ao ultrapassa o, mais específicos de duas expressões."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para intersect com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a interseção da permissão atual e a permissão especificada. Esta nova permissão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a interseção está vazia."
  overload: System.Security.Permissions.SiteIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se a permissão atual é um subconjunto da permissão especificado."
  remarks: "A permissão atual é um subconjunto da permissão especificada se a permissão atual Especifica um site que detida está contido pela permissão especificada.       A tabela seguinte mostra o valor de IsSubsetOf para um intervalo de valores de permissão atual e a permissão especificada.      | Permissão atual | Especificado permissão | IsSubsetOf |   |------------------------|--------------------------|----------------|   | www.fourthcoffee.com | www.fourthcoffee.com | `true`|   | www.fourthcoffee.com | www.tailspintoys.com | `false`|   | www.fourthcoffee.com | *. fourthcoffee.com| `true`|   | www.fourthcoffee.com | *.com| `true`|   | *. fourthcoffee.com| www.fourthcoffee.com | `false`|   | *. fourthcoffee.com| *. fourthcoffee.com| `true`|   | *. fourthcoffee.com| *.com| `true`|   | Anything except `None`|*|`true`|   | `None`| Nada |`true`|"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão que está a ser testada para a relação de subconjunto. Esta permissão tem de ser do mesmo tipo como a permissão atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a permissão atual é um subconjunto da permissão especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  id: Site
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o site atual."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence."
  syntax:
    content: public string Site { get; set; }
    return:
      type: System.String
      description: "O site atual."
  overload: System.Security.Permissions.SiteIdentityPermission.Site*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível obter a identidade do site porque tem uma identidade ambígua."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma codificação XML de permissão e o respetivo estado atual."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Uma codificação XML da permissão, incluindo as informações de estado."
  overload: System.Security.Permissions.SiteIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma permissão que é a União de permissão atual e a permissão especificada."
  remarks: "The result of a call to Union is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to \\*.fourthcoffee.com.  \n  \n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para combinar com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a União de permissão atual e a permissão especificada."
  overload: System.Security.Permissions.SiteIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual.       - ou - as permissões não são iguais e um não é um subconjunto das outras."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission.SiteIdentityPermission
- uid: System.Security.Permissions.SiteIdentityPermission.Copy*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: SiteIdentityPermission.Copy
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: SiteIdentityPermission.FromXml
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: SiteIdentityPermission.Intersect
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SiteIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.SiteIdentityPermission.Site*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: SiteIdentityPermission.ToXml
- uid: System.Security.Permissions.SiteIdentityPermission.Union*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union
  nameWithType: SiteIdentityPermission.Union
