### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ApplicationQueuingAttribute
  id: ApplicationQueuingAttribute
  children:
  - System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  - System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  - System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  - System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  langs:
  - csharp
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute
  type: Class
  summary: "Enables queuing support for the marked assembly and enables the application to read method calls from Message Queuing queues. This class cannot be inherited."
  remarks: "For a list of initial property values for an instance of ApplicationQueuingAttribute, see the <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A> constructor.       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the ApplicationQueuingAttribute type.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/csharp/t-system.enterpriseservi_4_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/visualbasic/t-system.enterpriseservi_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ApplicationQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initializes a new instance of the <xref href=&quot;System.EnterpriseServices.ApplicationQueuingAttribute&quot;></xref> class, enabling queuing support for the assembly and initializing <xref:System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*>, <xref:System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*>, and <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>."
  remarks: "The following table shows initial property values for an instance of <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.      |Property|Value|   |--------------|-----------|   |`Enabled`|`true`|   |`QueueListenerEnabled`|`false`|   |`MaxListenerThreads`|zero (0)|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_25_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_25_1.vb)]"
  syntax:
    content: public ApplicationQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets a value indicating whether queuing support is enabled."
  remarks: "Applications are not able to use queued components by default. Instantiating <xref:System.EnterpriseServices.ApplicationQueuingAttribute> enables an application to use queued components; however, it does not enable the application to listen for queued messages from clients."
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's Enabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/csharp/p-system.enterpriseservi_8_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_8_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if queuing support is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value set by the constructor is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  id: MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets the number of threads used to extract messages from the queue and activate the corresponding component."
  remarks: "The valid range for this property is 0 to 1000. The default is zero. For a newly created application, the setting is derived from the algorithm currently used for determining the default number of listener threads: 16 times the number of CPUs in the server.       For more information, see `QcListenerMaxThreads` in [Applications (COM+)](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp)."
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's MaxListenerThreads property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/csharp/p-system.enterpriseservi_2_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/visualbasic/p-system.enterpriseservi_2_1.vb)]"
  syntax:
    content: public int MaxListenerThreads { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of threads to use for processing messages arriving in the queue. The default is zero."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  id: QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets a value indicating whether the application will accept queued component calls from clients."
  remarks: ''
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's QueueListenerEnabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/csharp/p-system.enterpriseservi_0_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_0_1.vb)]"
  syntax:
    content: public bool QueueListenerEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the application accepts queued component calls; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
