### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProvider
  id: SettingsProvider
  children:
  - System.Configuration.SettingsProvider.#ctor
  - System.Configuration.SettingsProvider.ApplicationName
  - System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  langs:
  - csharp
  name: SettingsProvider
  nameWithType: SettingsProvider
  fullName: System.Configuration.SettingsProvider
  type: Class
  summary: "Funciona como uma classe base para efetuar a derivação de fornecedores de definições personalizadas na arquitetura de definições da aplicação."
  remarks: "Um fornecedor de definições define o mecanismo para armazenar dados de configuração utilizados na arquitetura de definições da aplicação. O .NET Framework contém um fornecedor de definições predefinidas único, <xref:System.Configuration.LocalFileSettingsProvider>, que armazena dados de configuração para o sistema de ficheiros local.</xref:System.Configuration.LocalFileSettingsProvider> No entanto, pode criar os mecanismos de armazenamento alternativo ao efetuar a derivação do abstrato SettingsProvider classe. O fornecedor que utiliza uma classe de wrapper é determinado pelo decorating a classe de wrapper com <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> Se este atributo não for fornecido, o predefinido, <xref:System.Configuration.LocalFileSettingsProvider>, é utilizado.</xref:System.Configuration.LocalFileSettingsProvider>       Quando criar um fornecedor de definições personalizadas, no mínimo, tem de fornecer as implementações para os três métodos desta classe: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>e <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</xref:System.Configuration.SettingsProvider.ApplicationName%2A> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> </xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>       Para aplicações de cliente, pode adicionar mais funcionalidades padronizada para um fornecedor personalizado através da implementação também o <xref:System.Configuration.IApplicationSettingsProvider>interface.</xref:System.Configuration.IApplicationSettingsProvider> Esta interface reflete métodos encontrados no <xref:System.Configuration.ApplicationSettingsBase>classe que principalmente permite o suporte de controlo de versões.</xref:System.Configuration.ApplicationSettingsBase>       Normalmente, deve conceber a fornecedores de definições para ser o único instanced para evitar a contenção de recursos de armazenamento. Os fornecedores também devem ser seguro para thread porque pode ser chamados em simultâneo a partir de várias instâncias de wrapper num domínio de aplicação única ou de várias aplicações em domínios diferentes.       No mínimo, um fornecedor de definições deve reconhecer três atributos —<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>e <xref:System.Configuration.DefaultSettingValueAttribute>.</xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Para obter uma listagem completa dos atributos que podem ser aplicadas para as definições da aplicação, consulte [atributos de definições de aplicação](~/add/includes/ajax-current-ext-md.md). Um fornecedor de definição personalizada deve resolver atributos aplicados às propriedades de definições da seguinte forma: 1.  Se o fornecedor pode satisfazer o pedido implicado pelo atributo, obviamente, deve fazer.      2.  Se o fornecedor não é possível satisfazer o pedido, este deve ignorá-lo silenciosamente.      3.  Se duas ou mais propriedades em conflito; Por exemplo, uma propriedade que está a ser decorada com ambos os <xref:System.Configuration.ApplicationScopedSettingAttribute>e <xref:System.Configuration.UserScopedSettingAttribute>; o fornecedor deve acionar um <xref:System.Configuration.ConfigurationException>.</xref:System.Configuration.ConfigurationException> </xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute>"
  syntax:
    content: 'public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma instância do <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> classe."
  remarks: "Esta é este construtor protegido predefinido para esta classe abstrata. Fornecedores de definições personalizadas derivada não são necessário fornecer um construtor explícito, porque o <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>método normalmente efetua inicialização todos os.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A>       Código de cliente, normalmente, não diretamente instanciar o fornecedor de definições; em vez disso, utilize o procedimento seguinte para localizar um fornecedor de definições para uma propriedade de definições: 1.  Chamar o <xref:System.ComponentModel.Component.GetService%2A>método na atual <xref:System.ComponentModel.Component>ou <xref:System.ComponentModel.ISite>para devolver uma referência a atual <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.ComponentModel.ISite> </xref:System.ComponentModel.Component> </xref:System.ComponentModel.Component.GetService%2A>      2.  Chamar o <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>método o <xref:System.Configuration.ISettingsProviderService>obtido no primeiro passo para devolver o fornecedor de definições.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A>"
  syntax:
    content: protected SettingsProvider ();
    parameters: []
  overload: System.Configuration.SettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o nome da aplicação em execução."
  remarks: "O ApplicationName e <xref:System.Configuration.Provider.ProviderBase.Name%2A>Propriedades ajudam para eliminar a ambiguidade, da mesma forma, propriedades de definição com nome em aplicações diferentes.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public abstract string ApplicationName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>que contém o nome da aplicação encurtado, que não contém um caminho completo ou a extensão, por exemplo, `SimpleAppSettings`.</xref:System.String>"
  overload: System.Configuration.SettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Devolve a coleção de definições de valores de propriedade para o grupo de propriedade de instância e as definições da aplicação especificada."
  remarks: "O método GetPropertyValues tem de ser implementado para lidar com as definições especiais, os que são marcados com <xref:System.Configuration.SpecialSettingAttribute>, bem como reconciliar as definições de aplicação e o utilizador.</xref:System.Configuration.SpecialSettingAttribute>"
  syntax:
    content: public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve a utilização de aplicação atual."
    - id: collection
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> que contém o grupo de definições de propriedade cujos valores devem ser obtidos."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> que contém os valores para o grupo de propriedade de definições especificadas."
  overload: System.Configuration.SettingsProvider.GetPropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Define os valores do grupo de definições de propriedade especificado."
  remarks: "<xref:System.Configuration.ApplicationSettingsBase>contém o <xref:System.Configuration.ApplicationSettingsBase.Save%2A>método, o que é chamado para manter os valores de todas as suas propriedades de definições.</xref:System.Configuration.ApplicationSettingsBase.Save%2A></xref:System.Configuration.ApplicationSettingsBase> Este método enumera através de todos os fornecedores de definições associadas com as respetivas propriedades de definições e chama o método de SetPropertyValues para cada <xref:System.Configuration.SettingsProvider>para efetuar a operação de serialização real.</xref:System.Configuration.SettingsProvider>       O método SetPropertyValues deve ser implementado com segurança em mente: - só totalmente fidedigna código deve ser permitido ao atualizar as definições de aplicação. Código parcialmente fidedigno deve ser permitido para atualizar apenas as definições da aplicação de utilizador. Normalmente, não é permitido código não fidedigno ao atualizar as definições de aplicação.      -Quotas de utilização devem ser consideradas para proteger contra ataques de recursos por aplicações parcialmente fidedignas."
  syntax:
    content: public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve a utilização atual da aplicação."
    - id: collection
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> que representa o grupo de definições de propriedade para definir."
  overload: System.Configuration.SettingsProvider.SetPropertyValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.SettingsProvider.#ctor
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider()
  nameWithType: SettingsProvider.SettingsProvider()
  fullName: System.Configuration.SettingsProvider.SettingsProvider()
- uid: System.Configuration.SettingsProvider.ApplicationName
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
  fullName: System.Configuration.SettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.SettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.SettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.SettingsProvider.#ctor*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SettingsProvider
  nameWithType: SettingsProvider.SettingsProvider
- uid: System.Configuration.SettingsProvider.ApplicationName*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SettingsProvider.ApplicationName
- uid: System.Configuration.SettingsProvider.GetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: SettingsProvider.GetPropertyValues
- uid: System.Configuration.SettingsProvider.SetPropertyValues*
  parent: System.Configuration.SettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: SettingsProvider.SetPropertyValues
