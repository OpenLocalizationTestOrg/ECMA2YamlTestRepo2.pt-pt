### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.InvokeFunc`2
  id: InvokeFunc`2
  children:
  - System.Activities.Expressions.InvokeFunc`2.#ctor
  - System.Activities.Expressions.InvokeFunc`2.Argument
  - System.Activities.Expressions.InvokeFunc`2.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Expressions.InvokeFunc`2.Func
  - System.Activities.Expressions.InvokeFunc`2.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  langs:
  - csharp
  name: InvokeFunc<T,TResult>
  nameWithType: InvokeFunc<T,TResult>
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>
  type: Class
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Func")]

      public sealed class InvokeFunc<T,TResult> : System.Activities.NativeActivity<TResult>
    typeParameters:
    - id: T
      description: "To be added."
    - id: TResult
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.NativeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity`1.CanInduceIdle
  - System.Activities.NativeActivity`1.Implementation
  - System.Activities.NativeActivity`1.ImplementationVersion
  - System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeFunc`2.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.InvokeFunc`2
  langs:
  - csharp
  name: InvokeFunc()
  nameWithType: InvokeFunc<T,TResult>.InvokeFunc()
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.InvokeFunc()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public InvokeFunc ();
    parameters: []
  overload: System.Activities.Expressions.InvokeFunc`2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeFunc`2.Argument
  id: Argument
  parent: System.Activities.Expressions.InvokeFunc`2
  langs:
  - csharp
  name: Argument
  nameWithType: InvokeFunc<T,TResult>.Argument
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.Argument
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T> Argument { get; set; }
    return:
      type: System.Activities.InArgument`1
      description: "To be added."
  overload: System.Activities.Expressions.InvokeFunc`2.Argument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeFunc`2.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Expressions.InvokeFunc`2
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: InvokeFunc<T,TResult>.Execute(NativeActivityContext)
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Expressions.InvokeFunc`2.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeFunc`2.Func
  id: Func
  parent: System.Activities.Expressions.InvokeFunc`2
  langs:
  - csharp
  name: Func
  nameWithType: InvokeFunc<T,TResult>.Func
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.Func
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.ActivityFunc<T,TResult> Func { get; set; }
    return:
      type: System.Activities.ActivityFunc`2
      description: "To be added."
  overload: System.Activities.Expressions.InvokeFunc`2.Func*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeFunc`2.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Expressions.InvokeFunc`2
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: InvokeFunc<T,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: "To be added."
    - id: originalActivity
      type: System.Activities.Activity
      description: "To be added."
  overload: System.Activities.Expressions.InvokeFunc`2.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity`1
  isExternal: false
  name: System.Activities.NativeActivity<TResult>
- uid: System.Activities.Expressions.InvokeFunc`2.#ctor
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: InvokeFunc()
  nameWithType: InvokeFunc<T,TResult>.InvokeFunc()
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.InvokeFunc()
- uid: System.Activities.Expressions.InvokeFunc`2.Argument
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: Argument
  nameWithType: InvokeFunc<T,TResult>.Argument
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.Argument
- uid: System.Activities.InArgument`1
  parent: System.Activities
  isExternal: false
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Activities.Expressions.InvokeFunc`2.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: InvokeFunc<T,TResult>.Execute(NativeActivityContext)
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Expressions.InvokeFunc`2.Func
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: Func
  nameWithType: InvokeFunc<T,TResult>.Func
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.Func
- uid: System.Activities.ActivityFunc`2
  parent: System.Activities
  isExternal: false
  name: ActivityFunc<T,TResult>
  nameWithType: ActivityFunc<T,TResult>
  fullName: System.Activities.ActivityFunc<T,TResult>
- uid: System.Activities.Expressions.InvokeFunc`2.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: InvokeFunc<T,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Expressions.InvokeFunc<T,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Expressions.InvokeFunc`2.#ctor*
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: InvokeFunc<T,TResult>
  nameWithType: InvokeFunc<T,TResult>.InvokeFunc<T,TResult>
- uid: System.Activities.Expressions.InvokeFunc`2.Argument*
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: Argument
  nameWithType: InvokeFunc<T,TResult>.Argument
- uid: System.Activities.Expressions.InvokeFunc`2.Execute*
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: Execute
  nameWithType: InvokeFunc<T,TResult>.Execute
- uid: System.Activities.Expressions.InvokeFunc`2.Func*
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: Func
  nameWithType: InvokeFunc<T,TResult>.Func
- uid: System.Activities.Expressions.InvokeFunc`2.OnCreateDynamicUpdateMap*
  parent: System.Activities.Expressions.InvokeFunc`2
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: InvokeFunc<T,TResult>.OnCreateDynamicUpdateMap
