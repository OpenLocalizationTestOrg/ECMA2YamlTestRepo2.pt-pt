### YamlMime:ManagedReference
items:
- uid: System.Xml.IStreamProvider
  id: IStreamProvider
  children:
  - System.Xml.IStreamProvider.GetStream
  - System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  langs:
  - csharp
  name: IStreamProvider
  nameWithType: IStreamProvider
  fullName: System.Xml.IStreamProvider
  type: Interface
  summary: "Representa uma interface que pode ser implementada por classes de fluxos."
  remarks: "Quando escrever uma mensagem de saída que contém um corpo de transmissão em fluxo para um escritor XML, o <xref:System.ServiceModel.Channels.Message>irá utilizar uma sequência de chamadas semelhantes à seguinte no respetivo <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>implementação:-escrever as informações necessárias anterior no fluxo (por exemplo, a abertura XML tag).</xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> </xref:System.ServiceModel.Channels.Message>      -A sequência de escrita.      -Não escrevem qualquer informação seguir o fluxo (por exemplo, o fecho XML tag).       Isto funciona bem com codificações que são semelhantes a codificação de XML textual. No entanto, existem algumas codificações de que não coloque informações de conjunto de informações XML (por exemplo, etiquetas para inicial e final elementos XML) juntamente com os dados contidos elementos. Por exemplo, a codificação de MTOM é criado, a mensagem está dividida em várias partes. Uma parte contém o conjunto de informações XML, que pode conter referências a outras peças para conteúdo de elemento real. Uma vez que o conjunto de informações XML normalmente estará pequeno em comparação com os conteúdos de transmissão em fluxo, faz sentido para a memória intermédia do conjunto de informações, escrevê-lo e, em seguida, escrever o conteúdo de uma forma de transmissão em fluxo. Isto significa que o tempo de fecho é escrito tag do elemento, iremos deve não ter escrito o fluxo ainda.       Para esta finalidade, a interface de IStreamProvider é utilizada. A interface tem um <xref:System.Xml.IStreamProvider.GetStream>método devolve a sequência para serem escritos.</xref:System.Xml.IStreamProvider.GetStream> Da forma correta para escrever um corpo de mensagem em fluxo no <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>é o seguinte: - escrever as informações necessárias anterior no fluxo (por exemplo, a abertura XML tag) - chamar o `WriteValue` sobrecarga no <xref:System.Xml.XmlDictionaryWriter>que assume um IStreamProvider, com um `IStreamProvider` implementação que devolve a sequência para serem escritos.</xref:System.Xml.XmlDictionaryWriter> </xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>      -Não escrevem qualquer informação seguir o fluxo (por exemplo, o fecho XML tag) com esta abordagem, o escritor XML tem uma opção de quando chamar <xref:System.Xml.IStreamProvider.GetStream>e escrever os dados de transmissão em fluxo.</xref:System.Xml.IStreamProvider.GetStream> Por exemplo, os escritores XML binários e textual serão chamá-lo imediatamente e escrever os conteúdos de transmissão em fluxo entre as etiquetas de início e de fim. O escritor MTOM poderá optar por chamar <xref:System.Xml.IStreamProvider.GetStream>mais tarde, quando estiver pronto para escrever o adequado parte da mensagem.</xref:System.Xml.IStreamProvider.GetStream>"
  syntax:
    content: public interface IStreamProvider
  implements: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.GetStream
  id: GetStream
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Obtém uma transmissão em fluxo."
  remarks: "Este método pode ser utilizado para devolver o fluxo de escrita."
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto.</xref:System.IO.Stream>"
  overload: System.Xml.IStreamProvider.GetStream*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  id: ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  langs:
  - csharp
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Xml
  summary: "Versões de um fluxo de saída."
  syntax:
    content: public void ReleaseStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo a ser libertado."
  overload: System.Xml.IStreamProvider.ReleaseStream*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.IStreamProvider.GetStream
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream()
  nameWithType: IStreamProvider.GetStream()
  fullName: System.Xml.IStreamProvider.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream(Stream)
  nameWithType: IStreamProvider.ReleaseStream(Stream)
  fullName: System.Xml.IStreamProvider.ReleaseStream(Stream)
- uid: System.Xml.IStreamProvider.GetStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: GetStream
  nameWithType: IStreamProvider.GetStream
- uid: System.Xml.IStreamProvider.ReleaseStream*
  parent: System.Xml.IStreamProvider
  isExternal: false
  name: ReleaseStream
  nameWithType: IStreamProvider.ReleaseStream
