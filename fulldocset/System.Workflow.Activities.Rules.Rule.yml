### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.Rule
  id: Rule
  children:
  - System.Workflow.Activities.Rules.Rule.#ctor
  - System.Workflow.Activities.Rules.Rule.#ctor(System.String)
  - System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  - System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  - System.Workflow.Activities.Rules.Rule.Active
  - System.Workflow.Activities.Rules.Rule.Clone
  - System.Workflow.Activities.Rules.Rule.Condition
  - System.Workflow.Activities.Rules.Rule.Description
  - System.Workflow.Activities.Rules.Rule.ElseActions
  - System.Workflow.Activities.Rules.Rule.Equals(System.Object)
  - System.Workflow.Activities.Rules.Rule.GetHashCode
  - System.Workflow.Activities.Rules.Rule.Name
  - System.Workflow.Activities.Rules.Rule.Priority
  - System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  - System.Workflow.Activities.Rules.Rule.ThenActions
  langs:
  - csharp
  name: Rule
  nameWithType: Rule
  fullName: System.Workflow.Activities.Rules.Rule
  type: Class
  summary: "Define uma condição com um conjunto associado de acções a executar."
  remarks: "Uma regra é composta por um <xref:System.Workflow.Activities.Rules.RuleCondition>e um ou ambos os <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A>ou <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A>coleções.</xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A> </xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> </xref:System.Workflow.Activities.Rules.RuleCondition>"
  example:
  - "The following example shows how to create a named Rule.  \n  \n```c#  \nprivate Rule firstRule = new Rule(\"firstRule\");  \n```"
  syntax:
    content: public class Rule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule()
  nameWithType: Rule.Rule()
  fullName: System.Workflow.Activities.Rules.Rule.Rule()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> classe."
  syntax:
    content: public Rule ();
    parameters: []
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule(String)
  nameWithType: Rule.Rule(String)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> classe utilizando o nome do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public Rule (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  id: '#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule(String,RuleCondition,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> classe utilizando o nome do <xref uid=&quot;langword_csharp_Rule&quot; name=&quot;Rule&quot; href=&quot;&quot;> </xref>, a condição de regra e uma lista de ações, em seguida."
  syntax:
    content: public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> thenActions);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
    - id: condition
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "The <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;></xref> for the <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;></xref>."
    - id: thenActions
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> objetos para avaliar se a condição for true."
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  id: '#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> classe utilizando o nome do <xref uid=&quot;langword_csharp_Rule&quot; name=&quot;Rule&quot; href=&quot;&quot;> </xref>, a condição de regra, uma lista de ações, em seguida e uma lista de ações de ELSE."
  syntax:
    content: public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> thenActions, System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> elseActions);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
    - id: condition
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "The <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;></xref> for the <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;></xref>."
    - id: thenActions
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> objetos para avaliar se a condição for true."
    - id: elseActions
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> objetos para avaliar se a condição for false."
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Active
  id: Active
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Active
  nameWithType: Rule.Active
  fullName: System.Workflow.Activities.Rules.Rule.Active
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> deve ser avaliada."
  remarks: "Quando definido como `false`, esta propriedade é semelhante para comentar enviados a regra. A predefinição é `true`."
  syntax:
    content: public bool Active { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra deve ser avaliada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Active*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Clone
  id: Clone
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Clone()
  nameWithType: Rule.Clone()
  fullName: System.Workflow.Activities.Rules.Rule.Clone()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Cria uma cópia profunda da atual <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public System.Workflow.Activities.Rules.Rule Clone ();
    parameters: []
    return:
      type: System.Workflow.Activities.Rules.Rule
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> que é idêntica a esta instância."
  overload: System.Workflow.Activities.Rules.Rule.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Condition
  id: Condition
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Condition
  nameWithType: Rule.Condition
  fullName: System.Workflow.Activities.Rules.Rule.Condition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém ou define um <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;> </xref> para o <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> a avaliar."
  syntax:
    content: public System.Workflow.Activities.Rules.RuleCondition Condition { get; set; }
    return:
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;> </xref> para o <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> a avaliar."
  overload: System.Workflow.Activities.Rules.Rule.Condition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Description
  id: Description
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Description
  nameWithType: Rule.Description
  fullName: System.Workflow.Activities.Rules.Rule.Description
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém ou define uma descrição do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Uma descrição do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.ElseActions
  id: ElseActions
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: ElseActions
  nameWithType: Rule.ElseActions
  fullName: System.Workflow.Activities.Rules.Rule.ElseActions
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> classes para efetuar no caso de ELSE."
  remarks: "Normalmente, ElseActions definido um valor de variável das propriedades da atividade, chama um método para a atividade ou chama os métodos estáticos em tipos em assemblagens referenciadas.       O <xref:System.Workflow.Activities.Rules.RuleHaltAction>faz com que o <xref:System.Workflow.Activities.Rules.RuleSet>para parar a execução e devolve controlo para o método de chamada.</xref:System.Workflow.Activities.Rules.RuleSet> </xref:System.Workflow.Activities.Rules.RuleHaltAction> A <xref:System.Workflow.Activities.Rules.RuleStatementAction>modifica uma propriedade ou chama um método.</xref:System.Workflow.Activities.Rules.RuleStatementAction> A <xref:System.Workflow.Activities.Rules.RuleUpdateAction>explicitamente indica que uma regra está a atualizar uma variável.</xref:System.Workflow.Activities.Rules.RuleUpdateAction> Isto faz com que a reavaliação de quaisquer regras afetadas."
  syntax:
    content: public System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> ElseActions { get; }
    return:
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> efetuar no caso de ELSE."
  overload: System.Workflow.Activities.Rules.Rule.ElseActions*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Rule.Equals(Object)
  fullName: System.Workflow.Activities.Rules.Rule.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Determina se esta instância do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> e o objecto transmitido como parâmetro têm o mesmo valor."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto comparar o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto atual e <code> obj </code> são os mesmos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Rule.GetHashCode()
  fullName: System.Workflow.Activities.Rules.Rule.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Devolve o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para esta instância."
  overload: System.Workflow.Activities.Rules.Rule.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Name
  id: Name
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Name
  nameWithType: Rule.Name
  fullName: System.Workflow.Activities.Rules.Rule.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém ou define o nome do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Priority
  id: Priority
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Priority
  nameWithType: Rule.Priority
  fullName: System.Workflow.Activities.Rules.Rule.Priority
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém ou define um valor que indica a ordem pela qual um <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> deve ser executado."
  remarks: "<xref:System.Workflow.Activities.Rules.Rule>classes que têm um valor de prioridade superior são executadas antes de prioridade mais baixa <xref:System.Workflow.Activities.Rules.Rule>classes.</xref:System.Workflow.Activities.Rules.Rule></xref:System.Workflow.Activities.Rules.Rule> As regras que têm a mesma prioridade são executadas pela ordem alfabética das respetivas propriedades de nome.       O valor de prioridade pode ser positivo ou negativo. O valor predefinido para qualquer <xref:System.Workflow.Activities.Rules.Rule>é 0.</xref:System.Workflow.Activities.Rules.Rule>"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "Um valor que indica a ordem pela qual um <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> deve ser executado."
  overload: System.Workflow.Activities.Rules.Rule.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  id: ReevaluationBehavior
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: ReevaluationBehavior
  nameWithType: Rule.ReevaluationBehavior
  fullName: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém ou define um valor que indica se um <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> pode ser reavaliadas."
  syntax:
    content: public System.Workflow.Activities.Rules.RuleReevaluationBehavior ReevaluationBehavior { get; set; }
    return:
      type: System.Workflow.Activities.Rules.RuleReevaluationBehavior
      description: "O <xref href=&quot;System.Workflow.Activities.Rules.RuleReevaluationBehavior&quot;> </xref> que indica se o <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> pode ser reavaliadas."
  overload: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.ThenActions
  id: ThenActions
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: ThenActions
  nameWithType: Rule.ThenActions
  fullName: System.Workflow.Activities.Rules.Rule.ThenActions
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Obtém uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> classes para o caso, em seguida, efetuar."
  remarks: "Normalmente ThenActions definir um valor de variável das propriedades da atividade, chamar um método da atividade ou chamar os métodos estáticos em tipos em assemblagens referenciadas.       O <xref:System.Workflow.Activities.Rules.RuleHaltAction>faz com que o <xref:System.Workflow.Activities.Rules.RuleSet>para parar a execução e devolve controlo para o método de chamada.</xref:System.Workflow.Activities.Rules.RuleSet> </xref:System.Workflow.Activities.Rules.RuleHaltAction> A <xref:System.Workflow.Activities.Rules.RuleUpdateAction>explicitamente indica que uma regra está a atualizar uma variável.</xref:System.Workflow.Activities.Rules.RuleUpdateAction> Isto faz com que a reavaliação de quaisquer regras afetadas."
  syntax:
    content: public System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> ThenActions { get; }
    return:
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Uma coleção de <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> classes para o caso, em seguida, efetuar."
  overload: System.Workflow.Activities.Rules.Rule.ThenActions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.Activities.Rules.Rule.#ctor
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule()
  nameWithType: Rule.Rule()
  fullName: System.Workflow.Activities.Rules.Rule.Rule()
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String)
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule(String)
  nameWithType: Rule.Rule(String)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule(String,RuleCondition,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>)
- uid: System.Workflow.Activities.Rules.RuleCondition
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleCondition
  nameWithType: RuleCondition
  fullName: System.Workflow.Activities.Rules.RuleCondition
- uid: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<RuleAction>
  nameWithType: IList<RuleAction>
  fullName: System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Workflow.Activities.Rules.RuleAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.Rules.RuleAction
    name: RuleAction
    nameWithType: RuleAction
    fullName: RuleAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
- uid: System.Workflow.Activities.Rules.Rule.Active
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Active
  nameWithType: Rule.Active
  fullName: System.Workflow.Activities.Rules.Rule.Active
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.Rules.Rule.Clone
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Clone()
  nameWithType: Rule.Clone()
  fullName: System.Workflow.Activities.Rules.Rule.Clone()
- uid: System.Workflow.Activities.Rules.Rule
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Workflow.Activities.Rules.Rule
- uid: System.Workflow.Activities.Rules.Rule.Condition
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Condition
  nameWithType: Rule.Condition
  fullName: System.Workflow.Activities.Rules.Rule.Condition
- uid: System.Workflow.Activities.Rules.Rule.Description
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Description
  nameWithType: Rule.Description
  fullName: System.Workflow.Activities.Rules.Rule.Description
- uid: System.Workflow.Activities.Rules.Rule.ElseActions
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ElseActions
  nameWithType: Rule.ElseActions
  fullName: System.Workflow.Activities.Rules.Rule.ElseActions
- uid: System.Workflow.Activities.Rules.Rule.Equals(System.Object)
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Equals(Object)
  nameWithType: Rule.Equals(Object)
  fullName: System.Workflow.Activities.Rules.Rule.Equals(Object)
- uid: System.Workflow.Activities.Rules.Rule.GetHashCode
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: GetHashCode()
  nameWithType: Rule.GetHashCode()
  fullName: System.Workflow.Activities.Rules.Rule.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.Rules.Rule.Name
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Name
  nameWithType: Rule.Name
  fullName: System.Workflow.Activities.Rules.Rule.Name
- uid: System.Workflow.Activities.Rules.Rule.Priority
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Priority
  nameWithType: Rule.Priority
  fullName: System.Workflow.Activities.Rules.Rule.Priority
- uid: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ReevaluationBehavior
  nameWithType: Rule.ReevaluationBehavior
  fullName: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
- uid: System.Workflow.Activities.Rules.RuleReevaluationBehavior
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleReevaluationBehavior
  nameWithType: RuleReevaluationBehavior
  fullName: System.Workflow.Activities.Rules.RuleReevaluationBehavior
- uid: System.Workflow.Activities.Rules.Rule.ThenActions
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ThenActions
  nameWithType: Rule.ThenActions
  fullName: System.Workflow.Activities.Rules.Rule.ThenActions
- uid: System.Workflow.Activities.Rules.Rule.#ctor*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule
  nameWithType: Rule.Rule
- uid: System.Workflow.Activities.Rules.Rule.Active*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Active
  nameWithType: Rule.Active
- uid: System.Workflow.Activities.Rules.Rule.Clone*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Clone
  nameWithType: Rule.Clone
- uid: System.Workflow.Activities.Rules.Rule.Condition*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Condition
  nameWithType: Rule.Condition
- uid: System.Workflow.Activities.Rules.Rule.Description*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Description
  nameWithType: Rule.Description
- uid: System.Workflow.Activities.Rules.Rule.ElseActions*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ElseActions
  nameWithType: Rule.ElseActions
- uid: System.Workflow.Activities.Rules.Rule.Equals*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Equals
  nameWithType: Rule.Equals
- uid: System.Workflow.Activities.Rules.Rule.GetHashCode*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: GetHashCode
  nameWithType: Rule.GetHashCode
- uid: System.Workflow.Activities.Rules.Rule.Name*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Name
  nameWithType: Rule.Name
- uid: System.Workflow.Activities.Rules.Rule.Priority*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Priority
  nameWithType: Rule.Priority
- uid: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ReevaluationBehavior
  nameWithType: Rule.ReevaluationBehavior
- uid: System.Workflow.Activities.Rules.Rule.ThenActions*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ThenActions
  nameWithType: Rule.ThenActions
