### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingExpression
  id: BindingExpression
  children:
  - System.Windows.Data.BindingExpression.DataItem
  - System.Windows.Data.BindingExpression.ParentBinding
  - System.Windows.Data.BindingExpression.ResolvedSource
  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.BindingExpression.UpdateSource
  - System.Windows.Data.BindingExpression.UpdateTarget
  langs:
  - csharp
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
  type: Class
  summary: "Contains information about a single instance of a <xref href=&quot;System.Windows.Data.Binding&quot;></xref>."
  remarks: "The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding. The BindingExpression class is the underlying object that maintains the connection between the binding source and the binding target. A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several BindingExpression objects. A BindingExpression is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.       For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`. This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.       [!code-cs[CodeOnlyBinding#1](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)]  [!code-vb[CodeOnlyBinding#1](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1)]       You can use the same `myBinding` object to create other bindings. For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`. In that scenario, there will be two instances of BindingExpression that share the `myBinding` object.       You can obtain a BindingExpression object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object."
  syntax:
    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  implements:
  - System.Windows.IWeakEventListener
  inheritedMembers:
  - System.Windows.Data.BindingExpressionBase.BindingGroup
  - System.Windows.Data.BindingExpressionBase.HasError
  - System.Windows.Data.BindingExpressionBase.HasValidationError
  - System.Windows.Data.BindingExpressionBase.IsDirty
  - System.Windows.Data.BindingExpressionBase.ParentBindingBase
  - System.Windows.Data.BindingExpressionBase.Status
  - System.Windows.Data.BindingExpressionBase.Target
  - System.Windows.Data.BindingExpressionBase.TargetProperty
  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate
  - System.Windows.Data.BindingExpressionBase.ValidationError
  - System.Windows.Data.BindingExpressionBase.ValidationErrors
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.DataItem
  id: DataItem
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Gets the binding source object that this <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> uses."
  remarks: ''
  example:
  - "The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the DataItem property to access the binding source object.  \n  \n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \n  \n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "The binding source object that this <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> uses."
  overload: System.Windows.Data.BindingExpression.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ParentBinding
  id: ParentBinding
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Returns the <xref href=&quot;System.Windows.Data.Binding&quot;></xref> object of the current <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>."
  syntax:
    content: public System.Windows.Data.Binding ParentBinding { get; }
    return:
      type: System.Windows.Data.Binding
      description: "The <xref href=&quot;System.Windows.Data.Binding&quot;></xref> object of the current binding expression."
  overload: System.Windows.Data.BindingExpression.ParentBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  id: ResolvedSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Gets the binding source object for this <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>."
  syntax:
    content: public object ResolvedSource { get; }
    return:
      type: System.Object
      description: "The binding source object for this <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>."
  overload: System.Windows.Data.BindingExpression.ResolvedSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  id: ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Gets the name of the binding source property for this <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>."
  syntax:
    content: public string ResolvedSourcePropertyName { get; }
    return:
      type: System.String
      description: "The name of the binding source property for this <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>."
  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  isEii: true
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "This member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "The type of the <xref href=&quot;System.Windows.WeakEventManager&quot;></xref> calling this method. This only recognizes manager objects of type <xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;></xref>."
    - id: sender
      type: System.Object
      description: "Object that originated the event."
    - id: e
      type: System.EventArgs
      description: "Event data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the listener handled the event; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Sends the current binding target value to the binding source property in <xref href=&quot;System.Windows.Data.BindingMode&quot;></xref> or <xref href=&quot;System.Windows.Data.BindingMode&quot;></xref> bindings."
  remarks: "This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode> or <xref:System.Windows.Data.BindingMode>.       If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger>, you must call the UpdateSource method or the changes will not propagate back to the source."
  syntax:
    content: public override void UpdateSource ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The binding has been detached from its target."
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  id: UpdateTarget
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Forces a data transfer from the binding source property to the binding target property."
  remarks: "This method enables you to force a data transfer from the source property to the target property. If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically. However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications. You can also use this method if your application needs to update the target properties periodically."
  syntax:
    content: public override void UpdateTarget ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateTarget*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The binding has been detached from its target."
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingExpressionBase
  isExternal: false
  name: System.Windows.Data.BindingExpressionBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.BindingExpression.DataItem
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingExpression.ParentBinding
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
- uid: System.Windows.Data.Binding
  parent: System.Windows.Data
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Data.BindingExpression.UpdateSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
- uid: System.Windows.Data.BindingExpression.DataItem*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
- uid: System.Windows.Data.BindingExpression.ParentBinding*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
- uid: System.Windows.Data.BindingExpression.ResolvedSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent
- uid: System.Windows.Data.BindingExpression.UpdateSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource
  nameWithType: BindingExpression.UpdateSource
- uid: System.Windows.Data.BindingExpression.UpdateTarget*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget
  nameWithType: BindingExpression.UpdateTarget
