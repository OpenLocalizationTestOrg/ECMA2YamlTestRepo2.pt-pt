### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.BrowserInteropHelper
  id: BrowserInteropHelper
  children:
  - System.Windows.Interop.BrowserInteropHelper.ClientSite
  - System.Windows.Interop.BrowserInteropHelper.HostScript
  - System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  - System.Windows.Interop.BrowserInteropHelper.Source
  langs:
  - csharp
  name: BrowserInteropHelper
  nameWithType: BrowserInteropHelper
  fullName: System.Windows.Interop.BrowserInteropHelper
  type: Class
  summary: "Uma classe de programa auxiliar que fornece informações sobre o ambiente de browser na qual um [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplicações está alojada."
  syntax:
    content: public static class BrowserInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  id: ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Devolve uma referência a um objeto que pode ser utilizada para aceder ao browser de anfitrião através do respetivos interfaces de contentor OLE (por exemplo, IOleClientSite::GetContainer();)."
  syntax:
    content: public static object ClientSite { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser convertido para <xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>.</xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>"
  overload: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  id: HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Obtém um objeto de script que fornece acesso ao objeto de janela HTML, funções de script personalizado e variáveis globais para a página HTML, se o [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] está alojado num intervalo."
  remarks: "Com o objeto devolvido HostScript, pode aceder a propriedades, os métodos e eventos do objeto de janela HTML, chamar uma função de script diretamente ou aceder a uma variável global. A sintaxe para aceder a estes itens utiliza a notação de pontos familiar.       Para obter mais informações sobre o objeto de janela, consulte [objeto janela](http://go.microsoft.com/fwlink/?LinkId=160274) na documentação do HTML (DHTML dinâmica).       Devolve de propriedade HostScript `null` se moldura está direcionada a partir de uma localização entre domínios.       Esta funcionalidade pode ser desativada para o Internet Explorer, definindo o **ScriptInteropDisallow** valor de registo. Para obter mais informações, consulte [segurança (WPF)](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to retrieve the HostScript object and close the browser window.  \n  \n [!code-xml[XbapBrowserInterop#1](~/add/codesnippet/xaml/wpfbrowserapplication1/page1.xaml#1)]  \n[!code-cs[XbapBrowserInterop#10](~/add/codesnippet/csharp/wpfbrowserapplication1/page1.xaml.cs#10)]\n[!code-vb[XbapBrowserInterop#10](~/add/codesnippet/visualbasic/wpfbrowserapplication1vb/page1.xaml.vb#10)]"
  syntax:
    content: public static dynamic HostScript { get; }
    return:
      type: System.Object
      description: "Um objeto de script que fornece acesso ao objeto de janela HTML, funções de script personalizado e variáveis globais para a página HTML, se o [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] é alojada num intervalo; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.HostScript*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  id: IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Obtém um valor que especifica se atual [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] aplicação é o browser alojado."
  remarks: "A <xref:System.Windows.Controls.Page>pode ser desconhecidas do anfitrião e, por conseguinte, podem ser carregados para vários tipos diferentes de anfitriões, incluindo um <xref:System.Windows.Controls.Frame>, um <xref:System.Windows.Navigation.NavigationWindow>, ou um browser.</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Page> Isto pode acontecer se tiver uma assemblagem de biblioteca que contém uma ou mais páginas e que é referenciado por várias autónoma e pesquisável ([!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]) alojar aplicações."
  example:
  - "The following example demonstrates how to use IsBrowserHosted to determine if a <xref:System.Windows.Controls.Page> is hosted in a browser.  \n  \n [!code-cs[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/csharp/BrowserInteropHelperSnippet/Page1.xaml.cs#isbrowserhostedcode)]\n [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/visualbasic/browserinterophelpersnippet/page1.xaml.vb#isbrowserhostedcode)]"
  syntax:
    content: public static bool IsBrowserHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a aplicação está alojado; do browser caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  id: Source
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Obtém o [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] para a localização a partir do qual um [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplicação foi iniciada."
  remarks: "A propriedade de origem contém apenas um <xref:System.Uri>para [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplicações.</xref:System.Uri> Para obter um exemplo da propriedade de origem, consulte <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.</xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>"
  syntax:
    content: public static Uri Source { get; }
    return:
      type: System.Uri
      description: "O <xref:System.Uri>para a localização a partir do qual um [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplicação foi iniciado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Windows.Interop.BrowserInteropHelper.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
- uid: System.Windows.Interop.BrowserInteropHelper.Source*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
