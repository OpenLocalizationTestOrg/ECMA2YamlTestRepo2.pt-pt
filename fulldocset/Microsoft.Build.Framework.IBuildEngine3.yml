### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Framework.IBuildEngine3
  id: IBuildEngine3
  children:
  - Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)
  - Microsoft.Build.Framework.IBuildEngine3.Reacquire
  - Microsoft.Build.Framework.IBuildEngine3.Yield
  langs:
  - csharp
  name: IBuildEngine3
  nameWithType: IBuildEngine3
  fullName: Microsoft.Build.Framework.IBuildEngine3
  type: Interface
  summary: "This interface extends IBuildEngine to provide a method allowing building project files in parallel."
  syntax:
    content: 'public interface IBuildEngine3 : Microsoft.Build.Framework.IBuildEngine2'
  implements:
  - Microsoft.Build.Framework.IBuildEngine2
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)
  id: BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)
  parent: Microsoft.Build.Framework.IBuildEngine3
  langs:
  - csharp
  name: BuildProjectFilesInParallel(String[],String[],IDictionary[],IList<String>,String[],Boolean)
  nameWithType: IBuildEngine3.BuildProjectFilesInParallel(String[],String[],IDictionary[],IList<String>,String[],Boolean)
  fullName: Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(String[],String[],IDictionary[],IList<String>,String[],Boolean)
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "Allows tasks to initiate a build on a project file"
  syntax:
    content: public Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList<string>[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs);
    parameters:
    - id: projectFileNames
      type: System.String[]
      description: "The project to build."
    - id: targetNames
      type: System.String[]
      description: "The targets in the project to build (can be null)."
    - id: globalProperties
      type: System.Collections.IDictionary[]
      description: "An array of <xref:System.Collections.IDictionary> of additional global properties to apply to the child project (array entries can be null).       The keys and should both be strings."
    - id: removeGlobalProperties
      type: System.Collections.Generic.IList{System.String}[]
      description: "A list of global properties which should be removed."
    - id: toolsVersion
      type: System.String[]
      description: "A tools version recognized by the Engine that will be used during this build (can be null)."
    - id: returnTargetOutputs
      type: System.Boolean
      description: "Should the target outputs be returned in the BuildEngineResult."
    return:
      type: Microsoft.Build.Framework.BuildEngineResult
      description: "If the build is successful, the outputs of the specified targets are returned."
  overload: Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine3.Reacquire
  id: Reacquire
  parent: Microsoft.Build.Framework.IBuildEngine3
  langs:
  - csharp
  name: Reacquire()
  nameWithType: IBuildEngine3.Reacquire()
  fullName: Microsoft.Build.Framework.IBuildEngine3.Reacquire()
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "Waits to reacquire control after yielding."
  syntax:
    content: public void Reacquire ();
    parameters: []
  overload: Microsoft.Build.Framework.IBuildEngine3.Reacquire*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Framework.IBuildEngine3.Yield
  id: Yield
  parent: Microsoft.Build.Framework.IBuildEngine3
  langs:
  - csharp
  name: Yield()
  nameWithType: IBuildEngine3.Yield()
  fullName: Microsoft.Build.Framework.IBuildEngine3.Yield()
  type: Method
  assemblies:
  - Microsoft.Build.Framework
  namespace: Microsoft.Build.Framework
  summary: "Informs the system that this task has a long-running out-of-process component and other work can be done in the build while that work completes."
  remarks: "There is only one node (msbuild.exe process) per CPU. Only one project, target, and task can build at any time on a node. If a task is waiting, for example, for a spawned tool or some other event to complete, the task can call Yield, which returns immediately. This lets the node build a target in another project, if any are available.  When the task is ready to continue, it should call <xref:Microsoft.Build.Framework.IBuildEngine3.Reacquire%2A>. As a rough rule, if a task expects that an operation will take more than 20 or 30 seconds, it can choose to call `Yield` before it starts the operation, and `Reaquire` when the operation is complete."
  syntax:
    content: public void Yield ();
    parameters: []
  overload: Microsoft.Build.Framework.IBuildEngine3.Yield*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)
  parent: Microsoft.Build.Framework.IBuildEngine3
  isExternal: false
  name: BuildProjectFilesInParallel(String[],String[],IDictionary[],IList<String>,String[],Boolean)
  nameWithType: IBuildEngine3.BuildProjectFilesInParallel(String[],String[],IDictionary[],IList<String>,String[],Boolean)
  fullName: Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(String[],String[],IDictionary[],IList<String>,String[],Boolean)
- uid: Microsoft.Build.Framework.BuildEngineResult
  parent: Microsoft.Build.Framework
  isExternal: false
  name: BuildEngineResult
  nameWithType: BuildEngineResult
  fullName: Microsoft.Build.Framework.BuildEngineResult
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.IDictionary[]
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary[]
  spec.csharp:
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Generic.IList{System.String}[]
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>[]
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Framework.IBuildEngine3.Reacquire
  parent: Microsoft.Build.Framework.IBuildEngine3
  isExternal: false
  name: Reacquire()
  nameWithType: IBuildEngine3.Reacquire()
  fullName: Microsoft.Build.Framework.IBuildEngine3.Reacquire()
- uid: Microsoft.Build.Framework.IBuildEngine3.Yield
  parent: Microsoft.Build.Framework.IBuildEngine3
  isExternal: false
  name: Yield()
  nameWithType: IBuildEngine3.Yield()
  fullName: Microsoft.Build.Framework.IBuildEngine3.Yield()
- uid: Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel*
  parent: Microsoft.Build.Framework.IBuildEngine3
  isExternal: false
  name: BuildProjectFilesInParallel
  nameWithType: IBuildEngine3.BuildProjectFilesInParallel
- uid: Microsoft.Build.Framework.IBuildEngine3.Reacquire*
  parent: Microsoft.Build.Framework.IBuildEngine3
  isExternal: false
  name: Reacquire
  nameWithType: IBuildEngine3.Reacquire
- uid: Microsoft.Build.Framework.IBuildEngine3.Yield*
  parent: Microsoft.Build.Framework.IBuildEngine3
  isExternal: false
  name: Yield
  nameWithType: IBuildEngine3.Yield
