### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaAttribute
  id: XmlSchemaAttribute
  children:
  - System.Xml.Schema.XmlSchemaAttribute.#ctor
  - System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType
  - System.Xml.Schema.XmlSchemaAttribute.AttributeType
  - System.Xml.Schema.XmlSchemaAttribute.DefaultValue
  - System.Xml.Schema.XmlSchemaAttribute.FixedValue
  - System.Xml.Schema.XmlSchemaAttribute.Form
  - System.Xml.Schema.XmlSchemaAttribute.Name
  - System.Xml.Schema.XmlSchemaAttribute.QualifiedName
  - System.Xml.Schema.XmlSchemaAttribute.RefName
  - System.Xml.Schema.XmlSchemaAttribute.SchemaType
  - System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName
  - System.Xml.Schema.XmlSchemaAttribute.Use
  langs:
  - csharp
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute
  fullName: System.Xml.Schema.XmlSchemaAttribute
  type: Class
  summary: "Representa o <xref uid=&quot;langword_csharp_attribute&quot; name=&quot;attribute&quot; href=&quot;&quot;> </xref> elemento a partir do esquema XML, tal como especificado pelo Consortium a World Wide Web (W3C). Atributos fornecem informações adicionais para outros elementos do documento. A tag de atributo está aninhada entre as etiquetas do elemento do documento para o esquema. O documento XML apresenta os atributos como itens com nome a tag de abertura de um elemento."
  remarks: "Declarações de atributo podem estar presentes como elementos subordinados do `schema` elemento (ter âmbito global) ou dentro de definições de tipo complexo. Para tipos complexos, declarações de atributo podem estar presentes como declarações locais ou referências para atributos com âmbito global. Ambas as declarações de atributo global e local tem o atributo de tipo opcionais que se refere a um tipo simple existente. Se não for utilizado o atributo de tipo opcionais, a declaração de atributo (global ou local) tem de definir um tipo simples local."
  example:
  - "The following example creates the `attribute` element.  \n  \n [!code-cs[Classic WebData XmlSchemaAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_9_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_9_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_9_1.vb)]  \n  \n The following XML file is generated for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaAttribute Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_9_2.xml)]"
  syntax:
    content: 'public class XmlSchemaAttribute : System.Xml.Schema.XmlSchemaAnnotated'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: XmlSchemaAttribute()
  nameWithType: XmlSchemaAttribute.XmlSchemaAttribute()
  fullName: System.Xml.Schema.XmlSchemaAttribute.XmlSchemaAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> classe."
  syntax:
    content: public XmlSchemaAttribute ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType
  id: AttributeSchemaType
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: AttributeSchemaType
  nameWithType: XmlSchemaAttribute.AttributeSchemaType
  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém um <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;> </xref> objeto que representa o tipo de atributo baseado no <> </> *> ou <> </> *> do atributo."
  remarks: "Esta propriedade é uma propriedade de conjunto de informações de validação do schema post."
  syntax:
    content: public System.Xml.Schema.XmlSchemaSimpleType AttributeSchemaType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaSimpleType
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleType&quot;> </xref> objeto."
  overload: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeType
  id: AttributeType
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: AttributeType
  nameWithType: XmlSchemaAttribute.AttributeType
  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém o objeto de runtime (CLR) de idioma comum com base no <> </> *> ou <> </> *> do atributo que contém o valor de pós-compilação do <xref uid=&quot;langword_csharp_AttributeType&quot; name=&quot;AttributeType&quot; href=&quot;&quot;> </xref> propriedade."
  remarks: "O objeto pode ser <xref:System.Xml.Schema.XmlSchemaDatatype>se o atributo tem um tipo de esquema XML incorporado ou <xref:System.Xml.Schema.XmlSchemaSimpleType>se o atributo tem um tipo definido pelo utilizador.</xref:System.Xml.Schema.XmlSchemaSimpleType> </xref:System.Xml.Schema.XmlSchemaDatatype> Esta propriedade é uma propriedade de conjunto de informações de validação do schema post.      > [!IMPORTANT] > AttributeType a propriedade está obsoleta na versão 2.0 do .NET Framework e foi substituída pelo <xref:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType%2A>propriedade.</xref:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType%2A>"
  syntax:
    content: public object AttributeType { get; }
    return:
      type: System.Object
      description: "O objeto de biblioteca (CLR) de tempo de execução comuns que contém o valor de pós-compilação do <xref uid=&quot;langword_csharp_AttributeType&quot; name=&quot;AttributeType&quot; href=&quot;&quot;> </xref> propriedade."
  overload: System.Xml.Schema.XmlSchemaAttribute.AttributeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.DefaultValue
  id: DefaultValue
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: XmlSchemaAttribute.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o valor predefinido para o atributo."
  remarks: "`DefaultValue`propriedade indica que o atributo é a aparecer incondicionalmente no documento de XML, o valor fornecido a utilizar sempre que o atributo não está presente. Por predefinição, esta propriedade for definida como nula para indicar que nenhum valor predefinido é fornecido para o atributo. O `fixed` e `default` propriedades são mutuamente exclusivas.       Opcional.       A predefinição é nulo."
  syntax:
    content: public string DefaultValue { get; set; }
    return:
      type: System.String
      description: "O valor predefinido para o atributo. A predefinição é uma referência nula.       Opcional."
  overload: System.Xml.Schema.XmlSchemaAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.FixedValue
  id: FixedValue
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: FixedValue
  nameWithType: XmlSchemaAttribute.FixedValue
  fullName: System.Xml.Schema.XmlSchemaAttribute.FixedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o valor fixo do atributo."
  remarks: "`FixedValue`indica que o valor do atributo, se estiver presente, tem de ser igual o valor fornecido. Por predefinição, esta propriedade está definida como nulo, o que significa que nenhum valor fixo é fornecido para o atributo. O `fixed` e `default` propriedades são mutuamente exclusivas.       Opcional."
  syntax:
    content: public string FixedValue { get; set; }
    return:
      type: System.String
      description: "O valor fixo do atributo. A predefinição é nulo.       Opcional."
  overload: System.Xml.Schema.XmlSchemaAttribute.FixedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.Form
  id: Form
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: Form
  nameWithType: XmlSchemaAttribute.Form
  fullName: System.Xml.Schema.XmlSchemaAttribute.Form
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o formato para o atributo."
  syntax:
    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: "Um do <xref:System.Xml.Schema.XmlSchemaForm>valores.</xref:System.Xml.Schema.XmlSchemaForm> A predefinição é o valor da &lt;xref:System.Xml.Schema.XmlSchema.AttributeFormDefault%2A?displayProperty=fullName&gt; do elemento de esquema que contém o atributo.       Opcional."
  overload: System.Xml.Schema.XmlSchemaAttribute.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.Name
  id: Name
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: Name
  nameWithType: XmlSchemaAttribute.Name
  fullName: System.Xml.Schema.XmlSchemaAttribute.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o nome do atributo."
  remarks: "O nome tem de ser um NCName (nome de não-vírgula) tal como definido na especificação Consortium World Wide Web (W3C) espaços de nomes de XML. Quando um documento XML for validado com um esquema, cada atributo no documento é validado com um `attribute` elemento no esquema. O `attribute` elemento com um `name` atributo que corresponde ao nome do atributo no documento local é utilizado para validar esse atributo. O `Name` e `RefName` propriedades são mutuamente exclusivas.       Opcional."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do atributo."
  overload: System.Xml.Schema.XmlSchemaAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.QualifiedName
  id: QualifiedName
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: QualifiedName
  nameWithType: XmlSchemaAttribute.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaAttribute.QualifiedName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém o nome qualificado para o atributo."
  remarks: "Opcional."
  syntax:
    content: public System.Xml.XmlQualifiedName QualifiedName { get; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "O valor de pós-compilação do <xref uid=&quot;langword_csharp_QualifiedName&quot; name=&quot;QualifiedName&quot; href=&quot;&quot;> </xref> propriedade."
  overload: System.Xml.Schema.XmlSchemaAttribute.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.RefName
  id: RefName
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: RefName
  nameWithType: XmlSchemaAttribute.RefName
  fullName: System.Xml.Schema.XmlSchemaAttribute.RefName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o nome de um atributo declarado neste esquema (ou outra esquema indicado pelo espaço de nomes especificado)."
  remarks: "O `RefName` tem de ser um QName. O tipo pode incluir um prefixo de espaço de nomes. O `Name` e `RefName` propriedades são mutuamente exclusivas.       Opcional."
  syntax:
    content: public System.Xml.XmlQualifiedName RefName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "O nome do atributo declarado."
  overload: System.Xml.Schema.XmlSchemaAttribute.RefName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaType
  id: SchemaType
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: SchemaType
  nameWithType: XmlSchemaAttribute.SchemaType
  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o tipo de atributo para um tipo simples."
  remarks: '`SchemaTypeName`e `SchemaType` não é possível definir propriedades ao mesmo tempo.'
  syntax:
    content: public System.Xml.Schema.XmlSchemaSimpleType SchemaType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaSimpleType
      description: "O tipo simple definido neste esquema."
  overload: System.Xml.Schema.XmlSchemaAttribute.SchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName
  id: SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: SchemaTypeName
  nameWithType: XmlSchemaAttribute.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o nome do tipo simple definido neste esquema (ou outra esquema indicado pelo espaço de nomes especificado)."
  remarks: "`SchemaTypeName`e <xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType%2A>não é possível definir propriedades ao mesmo tempo.</xref:System.Xml.Schema.XmlSchemaAttribute.SchemaType%2A> O tipo tem de ser um QName. O tipo pode incluir um prefixo de espaço de nomes.       Opcional."
  syntax:
    content: public System.Xml.XmlQualifiedName SchemaTypeName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "O nome do tipo simple."
  overload: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaAttribute.Use
  id: Use
  parent: System.Xml.Schema.XmlSchemaAttribute
  langs:
  - csharp
  name: Use
  nameWithType: XmlSchemaAttribute.Use
  fullName: System.Xml.Schema.XmlSchemaAttribute.Use
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define a informação sobre como o atributo é utilizado."
  remarks: "Se for especificado, este atributo tem de ter um dos valores mostrados na seguinte tabela.      | Enum | Descrição |   |----------|-----------------|   | `None`| Atributo não tem um valor. |   | `Prohibited`| O atributo não pode ser utilizado. |   | `Optional`| Atributo é opcional e pode ter qualquer valor. Esta é a predefinição. |   | `Required`| Atributo tem de aparecer uma vez. |"
  syntax:
    content: public System.Xml.Schema.XmlSchemaUse Use { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaUse
      description: "Um dos seguintes valores: None, proibida, necessária ou opcional. A predefinição é opcional.       Opcional."
  overload: System.Xml.Schema.XmlSchemaAttribute.Use*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaAnnotated
  isExternal: false
  name: System.Xml.Schema.XmlSchemaAnnotated
- uid: System.Xml.Schema.XmlSchemaAttribute.#ctor
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: XmlSchemaAttribute()
  nameWithType: XmlSchemaAttribute.XmlSchemaAttribute()
  fullName: System.Xml.Schema.XmlSchemaAttribute.XmlSchemaAttribute()
- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: AttributeSchemaType
  nameWithType: XmlSchemaAttribute.AttributeSchemaType
  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType
- uid: System.Xml.Schema.XmlSchemaSimpleType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSimpleType
  nameWithType: XmlSchemaSimpleType
  fullName: System.Xml.Schema.XmlSchemaSimpleType
- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeType
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: AttributeType
  nameWithType: XmlSchemaAttribute.AttributeType
  fullName: System.Xml.Schema.XmlSchemaAttribute.AttributeType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlSchemaAttribute.DefaultValue
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaAttribute.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaAttribute.DefaultValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaAttribute.FixedValue
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaAttribute.FixedValue
  fullName: System.Xml.Schema.XmlSchemaAttribute.FixedValue
- uid: System.Xml.Schema.XmlSchemaAttribute.Form
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: Form
  nameWithType: XmlSchemaAttribute.Form
  fullName: System.Xml.Schema.XmlSchemaAttribute.Form
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchemaForm
  nameWithType: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Schema.XmlSchemaAttribute.Name
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: Name
  nameWithType: XmlSchemaAttribute.Name
  fullName: System.Xml.Schema.XmlSchemaAttribute.Name
- uid: System.Xml.Schema.XmlSchemaAttribute.QualifiedName
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaAttribute.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaAttribute.QualifiedName
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaAttribute.RefName
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaAttribute.RefName
  fullName: System.Xml.Schema.XmlSchemaAttribute.RefName
- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaType
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaAttribute.SchemaType
  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaType
- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaAttribute.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaAttribute.Use
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: Use
  nameWithType: XmlSchemaAttribute.Use
  fullName: System.Xml.Schema.XmlSchemaAttribute.Use
- uid: System.Xml.Schema.XmlSchemaUse
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaUse
  nameWithType: XmlSchemaUse
  fullName: System.Xml.Schema.XmlSchemaUse
- uid: System.Xml.Schema.XmlSchemaAttribute.#ctor*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute.XmlSchemaAttribute
- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: AttributeSchemaType
  nameWithType: XmlSchemaAttribute.AttributeSchemaType
- uid: System.Xml.Schema.XmlSchemaAttribute.AttributeType*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: AttributeType
  nameWithType: XmlSchemaAttribute.AttributeType
- uid: System.Xml.Schema.XmlSchemaAttribute.DefaultValue*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaAttribute.DefaultValue
- uid: System.Xml.Schema.XmlSchemaAttribute.FixedValue*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaAttribute.FixedValue
- uid: System.Xml.Schema.XmlSchemaAttribute.Form*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: Form
  nameWithType: XmlSchemaAttribute.Form
- uid: System.Xml.Schema.XmlSchemaAttribute.Name*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: Name
  nameWithType: XmlSchemaAttribute.Name
- uid: System.Xml.Schema.XmlSchemaAttribute.QualifiedName*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaAttribute.QualifiedName
- uid: System.Xml.Schema.XmlSchemaAttribute.RefName*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaAttribute.RefName
- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaType*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaAttribute.SchemaType
- uid: System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaAttribute.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaAttribute.Use*
  parent: System.Xml.Schema.XmlSchemaAttribute
  isExternal: false
  name: Use
  nameWithType: XmlSchemaAttribute.Use
