### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.Package
  id: Package
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  - System.IO.Packaging.Package.System#IDisposable#Dispose
  langs:
  - csharp
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
  type: Class
  summary: "Representa um contentor que pode armazenar vários objetos de dados."
  remarks: "Pacote é uma classe abstracta que pode ser utilizada para organizar os objetos para uma única entidade de um formato físico definido para portabilidade e acesso eficiente.       Um ficheiro ZIP é o formato físico primário para o pacote.  Noutras implementações de pacote poderão utilizar outros formatos físicos, como um documento XML, uma base de dados ou o serviço Web.       Como um sistema de ficheiros, itens incluídos num pacote são referenciados numa organização hierárquica de pastas e ficheiros.       Apesar de pacote em si é uma classe abstracta, o <xref:System.IO.Packaging.ZipPackage>classe derivada é utilizada como predefinição, o <xref:System.IO.Packaging.Package.Open%2A>método.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.ZipPackage>       A <xref:System.IO.Packaging.PackagePart>(&quot;parte&quot;) é a classe abstrata que representa um objeto que é armazenado num pacote.</xref:System.IO.Packaging.PackagePart>       A <xref:System.IO.Packaging.PackageRelationship>(&quot;relação&quot;) define uma associação entre uma origem de pacote ou <xref:System.IO.Packaging.PackagePart>e um objeto de destino.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackageRelationship>  A <xref:System.IO.Packaging.PackageRelationship>pode ser um dos dois tipos, cada um dos quais pode ser uma das duas formas:-uma relação de nível de pacote (criado pelo <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName>método) está relacionada com um pacote de um: - uma parte do pacote de destino.</xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName> </xref:System.IO.Packaging.PackageRelationship>          -Um recurso de destino fora de package.      -A parte ao nível da relação (criado pelo <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>método) está relacionada com uma origem de <xref:System.IO.Packaging.PackagePart>para qualquer: - outra parte do pacote de destino.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>          -Um recurso de destino fora de package.       A relação de origem de pacote ou origem <xref:System.IO.Packaging.PackagePart>é considerado o &quot;proprietário&quot; da relação.</xref:System.IO.Packaging.PackagePart>  Quando o objeto de origem é eliminado, todas as relações pertencentes ao objeto de origem também são eliminadas.  O processo de criação ou eliminação de uma relação não altera os objetos de origem ou destino de qualquer forma fisicamente.       A <xref:System.IO.Packaging.PackageDigitalSignature>(&quot;assinatura digital&quot;) é uma combinação de partes e as relações que representam uma assinatura digital incluída com um pacote.</xref:System.IO.Packaging.PackageDigitalSignature>  A assinatura digital identifica o originador e valida que as partes assinadas e relações contidas no pacote não foram modificadas.       Pacotes também suportam Digital Rights Management (DRM) que permite que os elementos de conteúdo num pacote sejam encriptados com direitos de acesso específicas concedidos aos utilizadores autorizados.       Com a arquitetura de pacote, um <xref:System.Windows.Xps.Packaging.XpsDocument>é um tipo de pacote concebido para armazenar documentos com base na open [especificação de documento XML (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</xref:System.Windows.Xps.Packaging.XpsDocument>       [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)]utiliza pacotes para armazenar o conteúdo, recursos e as relações de páginas e os documentos utilizando um ficheiro ZIP padrão por predefinição. Como com qualquer ficheiro ZIP, pode utilizar a aplicação a <xref:System.IO.Packaging>classes para armazenar e, opcionalmente, proteger qualquer tipo ou o número de ficheiros de dados de um único contentor eficiente acesso.</xref:System.IO.Packaging>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows the basic steps for creating a Package.  In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.  (This is similar to the case in which an HTML file has an \\<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.  The first, a \"package-level\" relationship, defines the document part as the package's root element.  A second, \"part-level\" relationship defines the association between the document part (the \"source\" of the part-level relationship) and its use of the image part (the \"target\" of the part-level relationship).  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: 'public abstract class Package : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> classe que utiliza uma determinada <xref href=&quot;System.IO.FileAccess&quot;> </xref>."
  remarks: "Pacote é um construtor protegido da <xref:System.IO.Packaging.Package>classe de base abstracta.</xref:System.IO.Packaging.Package> Quando chamado numa classe derivada, o construtor do pacote inicializa uma nova instância da classe derivada."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "As permissões de e/s de ficheiro para o pacote."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor para <code> openFileAccess </code> não é válido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  id: '#ctor(System.IO.FileAccess,System.Boolean)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> classe que utiliza uma determinada <xref href=&quot;System.IO.FileAccess&quot;> </xref> e opção de transmissão em fluxo."
  remarks: "Pacote é um construtor protegido de <xref:System.IO.Packaging.Package>classe abstracta base abstracta base.</xref:System.IO.Packaging.Package> Quando chamado numa classe derivada, o construtor do pacote inicializa uma nova instância da classe derivada."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess, bool streaming);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "As permissões de e/s de ficheiro para o pacote."
    - id: streaming
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para abrir o pacote para transmissão em fluxo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor para <code> openFileAccess </code> não é válido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Guarda e fecha o pacote plus todos os fluxos de parte subjacente."
  remarks: "Para o <xref:System.IO.Packaging.Package>classe fechar e <xref:System.IO.Packaging.Package.Dispose%2A>efetuar a mesma operação — não é não existe nenhuma razão para chamar <xref:System.IO.Packaging.Package.Dispose%2A>se chamar Close ou vice-versa.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package>       Feche e <xref:System.IO.Packaging.Package.Dispose%2A>chamar internamente <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A> </xref:System.IO.Packaging.Package.Dispose%2A>      > [!NOTE] > O `using` instrução (diferente do `using` diretiva de espaço de nomes) é a forma recomendada de fechar e <xref:System.IO.Packaging.Package.Dispose%2A>um pacote.</xref:System.IO.Packaging.Package.Dispose%2A>  [Escrever uma amostra de pacote](http://go.microsoft.com/fwlink/?LinkID=160055) e [ler um exemplo de pacote](http://go.microsoft.com/fwlink/?LinkID=160034) mostram como fechar e eliminar um pacote, utilizando o `using` instrução."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.Package.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Cria uma nova parte descomprimida com um URI indicado e um tipo de conteúdo."
  remarks: "CreatePart inicializa um vazio <xref:System.IO.Stream>para a parte de novo.</xref:System.IO.Stream>  O <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>método pode ser utilizado para obter uma referência para a instância de fluxo associada a parte.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       A parte <xref:System.IO.Packaging.PackagePart.CompressionOption%2A>é <xref:System.IO.Packaging.CompressionOption?displayProperty=fullName>.</xref:System.IO.Packaging.CompressionOption?displayProperty=fullName> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>       Para obter informações adicionais sobre as partes do pacote, consulte a secção de 1.1 na especificação Open empacotamento convenções (OPC) disponível para transferência [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] da parte do novo."
    - id: contentType
      type: System.String
      description: "O tipo de conteúdo do fluxo de dados."
    return:
      type: System.IO.Packaging.PackagePart
      description: "A parte criada de novo."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma parte com especificado <code> partUri </code> já se encontra presente no pacote."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura (não é possível adicionar uma nova parte)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Cria uma nova parte com um URI indicado, o tipo de conteúdo e a opção de compressão."
  remarks: "Para a predefinição <xref:System.IO.Packaging.ZipPackage>derivados de classe, o CreatePart método só suporta dois `compressionOption` valores, <xref:System.IO.Packaging.CompressionOption>ou <xref:System.IO.Packaging.CompressionOption>compressão.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Outros <xref:System.IO.Packaging.CompressionOption>valores de <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, ou <xref:System.IO.Packaging.CompressionOption>utilizar <xref:System.IO.Packaging.CompressionOption>compressão.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       CreatePart cria um vazio <xref:System.IO.Stream>para a parte de novo.</xref:System.IO.Stream>  O <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>método pode ser utilizado para obter uma referência para a instância de fluxo associada a parte.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] da parte do novo."
    - id: contentType
      type: System.String
      description: "O tipo de conteúdo do fluxo de dados."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "A opção de compressão para o fluxo de dados, <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> compressão."
    return:
      type: System.IO.Packaging.PackagePart
      description: "A parte criada de novo."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma parte com especificado <code> partUri </code> já se encontra presente no pacote."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> compressionOption </code> valor não é válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura (não é possível adicionar uma nova parte)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando substituí-lo de uma classe derivada, cria uma nova parte do pacote."
  remarks: "O método de CreatePartCore derivado é chamado pelo <xref:System.IO.Packaging.Package.CreatePart%2A>método para criar uma parte com base no formato físico implementado na classe derivada.</xref:System.IO.Packaging.Package.CreatePart%2A>       Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação de classe do abstrato <xref:System.IO.Packaging.Package>classe é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Na operação predefinido, <xref:System.IO.Packaging.Package.CreatePart%2A>chama internamente CreatePartCore do <xref:System.IO.Packaging.ZipPackage>classe para criar uma nova parte num ficheiro ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.CreatePart%2A>       Para a predefinição <xref:System.IO.Packaging.ZipPackage>derivados de classe, o CreatePartCore método só suporta dois `compressionOption` valores, <xref:System.IO.Packaging.CompressionOption>ou <xref:System.IO.Packaging.CompressionOption>compressão.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Outros <xref:System.IO.Packaging.CompressionOption>valores de <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, ou <xref:System.IO.Packaging.CompressionOption>utilizar <xref:System.IO.Packaging.CompressionOption>compressão.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       Para obter mais informações sobre o modelo de pacote e partes de pacotes, consulte o capítulo 1 da especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] para a parte que está a ser criada."
    - id: contentType
      type: System.String
      description: "O tipo de conteúdo do fluxo de dados."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "A opção de compressão para o fluxo de dados."
    return:
      type: System.IO.Packaging.PackagePart
      description: "A parte criada."
  overload: System.IO.Packaging.Package.CreatePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Cria uma relação de ao nível do pacote a uma peça com um URI indicado, o modo de destino e o tipo de relação."
  remarks: "Uma relação de nível de pacote define uma associação entre o pacote e uma parte de destino associada ou recurso.  Uma relação de ao nível do pacote pode ser uma das duas formas.      -Entre um <xref:System.IO.Packaging.Package>a uma peça de destino no pacote.</xref:System.IO.Packaging.Package>      -Entre um <xref:System.IO.Packaging.Package>a um recurso de destino fora de package.</xref:System.IO.Packaging.Package>       Numa relação de pacote, o pacote é considerado o &quot;proprietário&quot; da relação.  Quando o pacote foi eliminado, todas as relações pertencentes ao pacote também serão eliminadas.       CreateRelationship não altera fisicamente a parte de destino ou recurso de qualquer forma.       O destino de uma relação não pode ser outra relação.       Se `targetMode` está especificado como <xref:System.IO.Packaging.TargetMode>, `targetUri` tem de ser um URI relativo que está formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).</xref:System.IO.Packaging.TargetMode>  O URI relativo interno pode ser qualquer um caminho absoluto que começa com uma barra (&quot;/&quot;) caráter, tal como &quot;/ page1.xaml&quot; ou &quot;/ images/picture4.jpg&quot;, ou um caminho relativo, tal como &quot;.. / imagespicture1.jpg &quot;que resolve contra na raiz do pacote (&quot;/ &quot;) como o URI base.       Se `targetMode` está especificado como <xref:System.IO.Packaging.TargetMode>, `targetUri` pode ser qualquer um dos absoluto ou URI relativo formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot; é um exemplo de um URI absoluto que faça referência a um recurso de destino externos &quot;page2.xml&quot;.  &quot;images/picture1.jpg&quot; é um exemplo de um URI relativo que também faz referência a um destino externo recursos &quot;1.jpg&quot;, mas que resolve contra o URI do pacote de si próprio.       `relationshipType`tem de ser um [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] que está formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).  A tabela seguinte mostra o nível de pacote `relationshipType` URIs definido pela especificação Open empacotamento convenções (OPC).      | Pacote de nível de relação | Tipo de relação URI |   |---------------------------------|---------------------------|   | Principais propriedades | http://schemas.openxmlformats.org/package/2006/relationships/meta/core-propriedades dados |   | Assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-assinatura/assinatura |   | Certificado de assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-/ certificado de assinatura |   | Origem de assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-assinatura/origem |   | Miniatura | http://schemas.openxmlformats.org/package/2006/relationships/meta dados/miniatura |       Para obter mais informações sobre o empacotamento e relações de pacote, consulte a secção 1.3 a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use CreateRelationship to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] da peça de destino."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Indica se a peça de destino é <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> ao pacote."
    - id: relationshipType
      type: System.String
      description: "URI que define exclusivamente a função da relação."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "A relação ao nível do pacote para a parte especificada."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor para <code> targetMode </code> não é válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Cria uma relação de ao nível do pacote a uma peça com o URI fornecido, de modo de destino, o tipo de relação, e [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Uma relação de nível de pacote define uma associação entre o pacote e uma parte de destino associada ou recurso.  Uma relação de ao nível do pacote pode ser uma das duas formas.      -Entre um <xref:System.IO.Packaging.Package>a uma peça de destino no pacote.</xref:System.IO.Packaging.Package>      -Entre um <xref:System.IO.Packaging.Package>a um recurso de destino fora de package.</xref:System.IO.Packaging.Package>       Numa relação de pacote, o pacote é considerado o &quot;proprietário&quot; da relação.  Quando o pacote foi eliminado, todas as relações pertencentes ao pacote também serão eliminadas.       CreateRelationship não altera fisicamente a parte de destino ou recurso de qualquer forma.       O destino de uma relação não pode ser outra relação.       `id`tem de ser um identificador XML válido.  O `id` tipo é xsd:ID e tem de seguir as convenções de nomenclatura prescritas no esquema XML parte 2: especificação de tipos de dados (consulte [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).       Se `id` está especificado como `null` um ID exclusivo será gerado automaticamente.  Um `id` especificado pelo vazio cadeia não é válida.       Se `targetMode` está especificado como <xref:System.IO.Packaging.TargetMode>, `targetUri` tem de ser um URI relativo que está formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).</xref:System.IO.Packaging.TargetMode>  O URI relativo interno pode ser qualquer um caminho absoluto que começa com uma barra (&quot;/&quot;) caráter, tal como &quot;/ page1.xaml&quot; ou &quot;/ images/picture4.jpg&quot;, ou um caminho relativo, tal como &quot;.. / imagespicture1.jpg &quot;que resolve contra na raiz do pacote (&quot;/ &quot;) como o URI base.       Se `targetMode` está especificado como <xref:System.IO.Packaging.TargetMode>, `targetUri` pode ser qualquer um dos absoluto ou URI relativo formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).</xref:System.IO.Packaging.TargetMode>  &quot;http://www.microsoft.com/page2.xml&quot; é um exemplo de um URI absoluto que faça referência a um recurso de destino externos &quot;page2.xml&quot;.  &quot;images/picture1.jpg&quot; é um exemplo de um URI relativo que também faz referência a um destino externo recursos &quot;1.jpg&quot;, mas que resolve contra o URI do pacote de si próprio.       `relationshipType`tem de ser um URI que está formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).  A tabela seguinte mostra o nível de pacote `relationshipType` URIs definido pela especificação Open empacotamento convenções (OPC).      | Pacote de nível de relação | Tipo de relação URI |   |---------------------------------|---------------------------|   | Principais propriedades | http://schemas.openxmlformats.org/package/2006/relationships/meta/core-propriedades dados |   | Assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-assinatura/assinatura |   | Certificado de assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-/ certificado de assinatura |   | Origem de assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-assinatura/origem |   | Miniatura | http://schemas.openxmlformats.org/package/2006/relationships/meta dados/miniatura |       Para obter informações adicionais sobre o empacotamento e relações de pacote, consulte a secção 1.3 a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] da peça de destino."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Indica se a peça de destino é <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> ou <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> ao pacote."
    - id: relationshipType
      type: System.String
      description: "URI que define exclusivamente a função da relação."
    - id: id
      type: System.String
      description: "Um identificador exclusivo de XML."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "A relação ao nível do pacote para a parte especificada."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor para <code> targetMode </code> não é válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>Não é um identificador XML válido; ou uma parte com especificado <code>id</code> já ocorre no pacote."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Elimina uma parte com um URI fornecido no pacote."
  remarks: "`partUri`tem de ser um URI relativo, que é composta por um caminho absoluto que começa com uma barra (&quot;/&quot;) caráter.  O caminho absoluto relativo na raiz do pacote e está formado de acordo com o [RFC 3986](http://tools.ietf.org/html/rfc3986) especificação de sintaxe genérico Uniform Resource Identifier (URI).  &quot;/ page1.xaml&quot; e &quot;/ images/picture4.jpg&quot; são exemplos de URIs de parte válido.       Não é exceção se a parte com especificado `partUri` não se encontra no pacote.  (Pode utilizar o <xref:System.IO.Packaging.Package.PartExists%2A>método para determinar se a parte com uma determinada `partUri` no pacote.)</xref:System.IO.Packaging.Package.PartExists%2A>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeletePart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] da peça para eliminar."
  overload: System.IO.Packaging.Package.DeletePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando substituí-lo de uma classe derivada, elimina uma parte com um URI indicado."
  remarks: "Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação de classe do abstrato <xref:System.IO.Packaging.Package>classe é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Na operação predefinido, <xref:System.IO.Packaging.Package.DeletePart%2A>chama internamente DeletePartCore de <xref:System.IO.Packaging.ZipPackage>classe para efetuar a operação de eliminação real com base no formato físico implementado na classe derivada.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.DeletePart%2A>       Para obter mais informações sobre o modelo de pacote e partes de pacotes, consulte o capítulo 1 da especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract void DeletePartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O <xref:System.IO.Packaging.PackagePart.Uri*>do <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> para eliminar.</xref:System.IO.Packaging.PackagePart.Uri*>"
  overload: System.IO.Packaging.Package.DeletePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Elimina uma relação de ao nível do pacote."
  remarks: "Uma relação de nível de pacote define uma associação entre o pacote e uma parte de destino associada ou recurso.  Uma relação de ao nível do pacote pode ser uma das duas formas.      -Entre um <xref:System.IO.Packaging.Package>a uma peça de destino no pacote.</xref:System.IO.Packaging.Package>      -Entre um <xref:System.IO.Packaging.Package>a um recurso de destino fora de package.</xref:System.IO.Packaging.Package>       Numa relação de pacote, o pacote é considerado o &quot;proprietário&quot; da relação.  Quando o pacote foi eliminado, todas as relações pertencentes ao pacote também serão eliminadas.       Não é exceção se uma relação com especificado `id` não se encontra no pacote.       DeleteRelationship não altera fisicamente a parte do destino de qualquer forma.       Para obter mais informações sobre relações de pacote, consulte a secção 1.3 a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "O <xref:System.IO.Packaging.PackageRelationship.Id*>do <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> para eliminar.</xref:System.IO.Packaging.PackageRelationship.Id*>"
  overload: System.IO.Packaging.Package.DeleteRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>Não é um identificador XML válido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Esvaziamentos da e guarda o conteúdo de todas as partes e relações, fecha o pacote e disponibiliza todos os recursos."
  remarks: "Para se certificar de que todas as alterações são guardadas corretamente, Dispose também finalizes, esvaziamentos da e fecha todas as partes e relações que estão contidas no pacote.       Para o <xref:System.IO.Packaging.Package>classe Dispose e <xref:System.IO.Packaging.Package.Close%2A>efetuar a mesma operação – não existe nenhuma razão para chamar Dispose se chamar <xref:System.IO.Packaging.Package.Close%2A>, ou vice-versa.</xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package>       <xref:System.IO.Packaging.Package.Close%2A>e Dispose internamente chamar <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A></xref:System.IO.Packaging.Package.Close%2A>       Classes derivadas que atribuem e gerir recursos de memória não devem substituir este método para libertar recursos quando Dispose é chamado. Substituições de classe derivada também devem chamar <xref:System.IO.Packaging.Package.Flush%2A>e o método de Dispose de classe base para se certificar de que limpeza de classe base é sempre executada.</xref:System.IO.Packaging.Package.Flush%2A>      > [!NOTE] > O `using` instrução (diferente do `using` diretiva de espaço de nomes) é a forma recomendada <xref:System.IO.Packaging.Package.Close%2A>e eliminar um pacote.</xref:System.IO.Packaging.Package.Close%2A> [Escrever uma amostra de pacote](http://go.microsoft.com/fwlink/?LinkID=160055) mostra como fechar e eliminar um pacote, utilizando o `using` instrução."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.IO.Packaging.Package.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "O acesso a ficheiros obtém a definição de pacote."
  remarks: "A propriedade de FileOpenAccess não tem nenhum valor predefinido.  A definição de acesso do ficheiro especificado no <xref:System.IO.Packaging.Package.%23ctor%2A>construtor chamar quando criar um novo pacote ou no <xref:System.IO.Packaging.Package.Open%2A>chamar quando abre um pacote existente.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.Package.%23ctor%2A>"
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: 'One of the <xref href=&quot;System.IO.FileAccess&quot;></xref> values: <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, or <xref href=&quot;System.IO.FileAccess&quot;></xref>.'
  overload: System.IO.Packaging.Package.FileOpenAccess*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Guarda o conteúdo de todas as partes e relações que estão contidas no pacote."
  remarks: "Descarregar chama internamente a classe derivada <xref:System.IO.Packaging.Package.FlushCore%2A>implemetation para efetuar a operação de libertação do formato específico real.</xref:System.IO.Packaging.Package.FlushCore%2A>  A classe derivada <xref:System.IO.Packaging.Package.FlushCore%2A>método é responsável pela, na verdade, guardar o conteúdo de parte e a relação para a implementação de classe derivada físico específica.</xref:System.IO.Packaging.Package.FlushCore%2A>       Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação do abstrato <xref:System.IO.Packaging.Package>classe base é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage> Na operação predefinido, descarregar o internamente chamadas <xref:System.IO.Packaging.Package.FlushCore%2A>para guardar as partes e as relações de um pacote de ficheiro ZIP.</xref:System.IO.Packaging.Package.FlushCore%2A>       Chama-se automaticamente pelo esvaziamento o <xref:System.IO.Packaging.Package.Close%2A>e <xref:System.IO.Packaging.Package.Dispose%2A>métodos.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>  Quando <xref:System.IO.Packaging.Package.Close%2A>ou <xref:System.IO.Packaging.Package.Dispose%2A>denomina-se não tem de chamar descarregar separadamente.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.Package.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de leitura e não pode ser modificado."
  platform:
  - net462
- uid: System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando substituí-lo de uma classe derivada, guarda o conteúdo de todas as partes e relações para o arquivo de classes derivadas."
  remarks: "FlushCore é chamado pelo <xref:System.IO.Packaging.Package.Flush%2A>método para efetuar a operação real com base no formato físico implementado na classe derivada.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: protected abstract void FlushCore ();
    parameters: []
  overload: System.IO.Packaging.Package.FlushCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Devolve a parte com um URI indicado."
  remarks: "Um <xref:System.InvalidOperationException>é emitida se parte com especificado `partUri` não existe.</xref:System.InvalidOperationException>       O <xref:System.IO.Packaging.Package.PartExists%2A>método pode ser utilizado para determinar se `partUri` referencia uma parte existente</xref:System.IO.Packaging.Package.PartExists%2A>       Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação do abstrato <xref:System.IO.Packaging.Package>classe base é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Na operação predefinido, GetPart chama internamente <xref:System.IO.Packaging.Package.GetPartCore%2A>do <xref:System.IO.Packaging.ZipPackage>classe para devolver uma pedido parte de um ficheiro ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to locate, retrieve, and read parts that are contained in a package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackagePart GetPart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] da peça a devolver."
    return:
      type: System.IO.Packaging.PackagePart
      description: "A parte com especificado <code> partUri </code>."
  overload: System.IO.Packaging.Package.GetPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma parte com especificado <code> partUri </code> não se encontra no pacote."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando substituí-lo de uma classe derivada, devolve a parte abordada um URI indicado."
  remarks: "Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação do abstrato <xref:System.IO.Packaging.Package>classe é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Na operação predefinido, <xref:System.IO.Packaging.Package.GetPart%2A>chama internamente GetPartCore do <xref:System.IO.Packaging.ZipPackage>classe para obter uma parte de um ficheiro ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPart%2A>       Para obter mais informações sobre o modelo de pacote e partes de pacotes, consulte o capítulo 1 da especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] da peça a obter."
    return:
      type: System.IO.Packaging.PackagePart
      description: "A parte do pedido; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se uma parte com especificado <code> partUri </code> não se encontra no pacote."
  overload: System.IO.Packaging.Package.GetPartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Devolve um conjunto de todas as partes do pacote."
  remarks: "GetParts devolve um conjunto de todas as partes que estão contidos no pacote, incluindo <xref:System.IO.Packaging.PackageRelationship>partes.</xref:System.IO.Packaging.PackageRelationship>       GetParts nunca irá devolver `null`; no entanto, a coleção devolvida irá conter zero elementos, se o pacote não contém peças.       Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação do abstrato <xref:System.IO.Packaging.Package>classe base é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Na operação predefinido, GetParts chama o <xref:System.IO.Packaging.Package.GetPartsCore%2A>método o <xref:System.IO.Packaging.ZipPackage>classe para devolver as partes de um ficheiro ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartsCore%2A>       Para obter mais informações sobre pacotes e partes de pacotes, consulte a secção 1.1 a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the GetParts method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.  For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.PackagePartCollection GetParts ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: "Uma coleção de todos os <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elementos que estão contidos no pacote."
  overload: System.IO.Packaging.Package.GetParts*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Quando substituí-lo de uma classe derivada, devolve uma matriz de todas as partes do pacote."
  remarks: "A implementação de GetPartsCore classe derivada é chamada pelo <xref:System.IO.Packaging.Package.GetParts%2A>método para aceder e voltar a matriz de partes com base no formato físico implementado na classe derivada.</xref:System.IO.Packaging.Package.GetParts%2A>       Por predefinição, um <xref:System.IO.Packaging.ZipPackage>derivado de implementação do abstrato <xref:System.IO.Packaging.Package>classe é fornecida e utilizada.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  Na operação predefinido, <xref:System.IO.Packaging.Package.GetParts%2A>chama internamente <xref:System.IO.Packaging.Package.GetPartCore%2A>do <xref:System.IO.Packaging.ZipPackage>classe para obter as partes de um ficheiro ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A> </xref:System.IO.Packaging.Package.GetParts%2A>       Para obter mais informações sobre o modelo de pacote e partes de pacotes, consulte o capítulo 1 da especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePart[]
      description: "Uma matriz de todas as partes que estão contidos no pacote."
  overload: System.IO.Packaging.Package.GetPartsCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Devolve a relação ao nível do pacote com um identificador especificado."
  remarks: "`id`tem de ser um identificador XML válido.  O `id` tipo é xsd:ID e tem de seguir as convenções de nomenclatura prescritas no esquema XML parte 2: especificação de tipos de dados (consulte [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).       Para obter informações adicionais sobre o empacotamento e relações de pacote, consulte a secção 1.3 a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "O <xref:System.IO.Packaging.PackageRelationship.Id*>da relação para devolver.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "A relação ao nível do pacote especificado com <code> id </code>."
  overload: System.IO.Packaging.Package.GetRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>Não é um identificador XML válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma relação com especificado <code> id </code> não se encontra no pacote."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Devolve um conjunto de todas as relações ao nível do pacote."
  remarks: "GetRelationships nunca irá devolver `null`; no entanto, a coleção devolvida pode conter zero elementos se o pacote contiver não existem relações de ao nível do pacote.       Uma relação de nível de pacote define uma associação entre o pacote e uma parte de destino associada ou recurso.  Uma relação de ao nível do pacote pode ser uma das duas formas.      -Entre um <xref:System.IO.Packaging.Package>a uma peça de destino no pacote.</xref:System.IO.Packaging.Package>      -Entre um <xref:System.IO.Packaging.Package>a um recurso de destino fora de package.</xref:System.IO.Packaging.Package>       Numa relação de pacote, o pacote é considerado o &quot;proprietário&quot; da relação.  Quando o pacote foi eliminado, todas as relações pertencentes ao pacote também serão eliminadas.  O processo de criação ou eliminar a relação não alter fisicamente a parte de destino ou recurso de qualquer forma.       Para obter informações adicionais sobre o empacotamento e relações de pacote, consulte a secção 1.3 a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Uma coleção de todas as relações ao nível do pacote estão contidos no pacote."
  overload: System.IO.Packaging.Package.GetRelationships*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Devolve um conjunto de todas as relações ao nível do pacote que correspondem a uma determinada <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
  remarks: "<xref:System.IO.Packaging.Package.GetRelationships%2A>nunca irá devolver `null`; no entanto, a coleção devolvida pode conter zero elementos se existem não existem relações de ao nível do pacote corresponder ao especificado `relationshipType`.</xref:System.IO.Packaging.Package.GetRelationships%2A>       A tabela seguinte mostra o nível de pacote `relationshipType` URIs definido pela especificação Open empacotamento convenções (OPC).      | Pacote de nível de relação | Tipo de relação URI |   |---------------------------------|---------------------------|   | Principais propriedades | http://schemas.openxmlformats.org/package/2006/relationships/meta/core-propriedades dados |   | Assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-assinatura/assinatura |   | Certificado de assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-/ certificado de assinatura |   | Origem de assinatura digital | http://schemas.openxmlformats.org/package/2006/relationships/digit usados-assinatura/origem |   | Miniatura | http://schemas.openxmlformats.org/package/2006/relationships/meta dados/miniatura |       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to retrieve the relationships that have been defined for the package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: "O <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>para fazer corresponder e regressar na coleção.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Uma coleção de relações de ao nível do pacote corresponder ao especificado <code> relationshipType </code>."
  overload: System.IO.Packaging.Package.GetRelationshipsByType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>é uma cadeia vazia."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote numa sequência de e/s especificada."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de e/s no qual pretende abrir o pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote para abrir necessita de leitura ou de leitura/escrita permissão e especificada <code> stream </code> é só de escrita; ou, o pacote para abrir necessita de escrita ou permissão de leitura/escrita e especificado <code> stream </code> é só de leitura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote de um determinado nome de ficheiro e caminho."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Isto <xref:System.IO.Packaging.Package.Open%2A>método abre o pacote com atributos predefinidos <xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, e <xref:System.IO.FileShare>(para especificar atributos diferentes, utilize um dos outras sobrecargas do método Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.Packaging.Package.Open%2A>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho e nome de ficheiro do pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote com um modo de fluxo e ficheiros de e/s especificado."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de e/s no qual pretende abrir o pacote."
    - id: packageMode
      type: System.IO.FileMode
      description: "O modo de ficheiro em que abrir o pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>packageMode</code>o valor não é válido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote para abrir necessita de leitura ou de leitura/escrita permissão e especificada <code> stream </code> é só de escrita; ou, o pacote para abrir necessita de escrita ou permissão de leitura/escrita e especificado <code> stream </code> é só de leitura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote de um determinado caminho utilizando o modo de ficheiro."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Este método Open abre o pacote com atributos predefinidos <xref:System.IO.FileAccess>e <xref:System.IO.FileShare>(para especificar atributos diferentes, utilize um dos outras sobrecargas do método Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);
    parameters:
    - id: path
      type: System.String
      description: "O caminho e nome de ficheiro do pacote."
    - id: packageMode
      type: System.IO.FileMode
      description: "O modo de ficheiro em que abrir o pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor para <code> packageMode </code> não é válido."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote com um determinado fluxo de e/s, o modo de ficheiro e a definição de acesso do ficheiro."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de e/s no qual pretende abrir o pacote."
    - id: packageMode
      type: System.IO.FileMode
      description: "O modo de ficheiro em que abrir o pacote."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "O acesso a ficheiros no qual pretende abrir o pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote para abrir necessita de leitura ou de leitura/escrita permissão e especificada <code> stream </code> é só de escrita; ou o pacote para abrir necessita de escrita ou permissão de leitura/escrita e especificado <code> stream </code> é só de leitura."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote de um caminho fornecido através de um modo de ficheiro e a definição de acesso do ficheiro."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Este método Open abre o pacote com um predefinido <xref:System.IO.FileShare>atributos (para especificar a utilização de um atributo diferente de <xref:System.IO.Packaging.Package.Open%2A>sobrecarga de método).</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.FileShare>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: path
      type: System.String
      description: "O caminho e nome de ficheiro do pacote."
    - id: packageMode
      type: System.IO.FileMode
      description: "O modo de ficheiro em que abrir o pacote."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "O acesso a ficheiros no qual pretende abrir o pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Abre-se um pacote de um caminho fornecido através de um modo de ficheiro, o acesso a ficheiros e a partilha de ficheiros de definição."
  remarks: "<xref:System.IO.Packaging.ZipPackage>é o tipo de pacote predefinido que é utilizado pelo método aberto.</xref:System.IO.Packaging.ZipPackage>       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);
    parameters:
    - id: path
      type: System.String
      description: "O caminho e nome de ficheiro do pacote."
    - id: packageMode
      type: System.IO.FileMode
      description: "O modo de ficheiro em que abrir o pacote."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "O acesso a ficheiros no qual pretende abrir o pacote."
    - id: packageShare
      type: System.IO.FileShare
      description: "O partilha de ficheiros de modo no qual pretende abrir o pacote."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote foi aberto."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code>, <code>packageAccess</code>, or <code>packageShare</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Obtém as propriedades de núcleo do pacote."
  remarks: "Para obter informações adicionais sobre as propriedades do pacote core, consulte a secção 3.1 na especificação Open empacotamento convenções (OPC) disponível para transferência [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "As propriedades de núcleo do pacote."
  overload: System.IO.Packaging.Package.PackageProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Indica se uma parte com um URI indicado está no pacote."
  remarks: "O `partUri` deve começar com um caráter de barra de reencaminhamento &quot;/&quot; e ser absolutos da raiz do pacote.       Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public virtual bool PartExists (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.Uri>Da peça para verificar for.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma parte com especificado <code> partUri </code> no pacote; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.PartExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita (não não possível ler informações)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Indica se uma relação de ao nível do pacote com um ID especificado está contida no pacote."
  remarks: "Para obter mais informações, consulte a especificação de convenções de empacotamento abrir (OPC) disponível para transferência em [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>Da relação para verificar for.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma relação de ao nível do pacote especificado com <code> id </code> no pacote; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.RelationshipExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>Não é um identificador XML válido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pacote não está aberto (<>*> ou <> </> *> ter sido chamado)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pacote é só de escrita."
  platform:
  - net462
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Este membro suporta o [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infraestrutura e não se destina a utilização de aplicações.  Utilize o tipo seguro <xref:System.IO.Packaging.Package.Dispose*>método em vez disso.</xref:System.IO.Packaging.Package.Dispose*>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.IO.Packaging.Package.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.Close
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
- uid: System.IO.Packaging.Package.FileOpenAccess
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
- uid: System.IO.Packaging.Package.FlushCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
- uid: System.IO.Packaging.Package.GetParts
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  nameWithType: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.Package.GetPartsCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
- uid: System.IO.Packaging.PackagePart[]
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart[]
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    nameWithType: PackagePart
    fullName: PackagePart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
- uid: System.IO.Packaging.Package.GetRelationships
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package.Open(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.Package.PackageProperties
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
- uid: System.IO.Packaging.Package.#ctor*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package
  nameWithType: Package.Package
- uid: System.IO.Packaging.Package.Close*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close
  nameWithType: Package.Close
- uid: System.IO.Packaging.Package.CreatePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart
  nameWithType: Package.CreatePart
- uid: System.IO.Packaging.Package.CreatePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore
  nameWithType: Package.CreatePartCore
- uid: System.IO.Packaging.Package.CreateRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship
  nameWithType: Package.CreateRelationship
- uid: System.IO.Packaging.Package.DeletePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart
  nameWithType: Package.DeletePart
- uid: System.IO.Packaging.Package.DeletePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore
  nameWithType: Package.DeletePartCore
- uid: System.IO.Packaging.Package.DeleteRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship
  nameWithType: Package.DeleteRelationship
- uid: System.IO.Packaging.Package.Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose
  nameWithType: Package.Dispose
- uid: System.IO.Packaging.Package.FileOpenAccess*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush
  nameWithType: Package.Flush
- uid: System.IO.Packaging.Package.FlushCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore
  nameWithType: Package.FlushCore
- uid: System.IO.Packaging.Package.GetPart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart
  nameWithType: Package.GetPart
- uid: System.IO.Packaging.Package.GetPartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore
  nameWithType: Package.GetPartCore
- uid: System.IO.Packaging.Package.GetParts*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts
  nameWithType: Package.GetParts
- uid: System.IO.Packaging.Package.GetPartsCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore
  nameWithType: Package.GetPartsCore
- uid: System.IO.Packaging.Package.GetRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship
  nameWithType: Package.GetRelationship
- uid: System.IO.Packaging.Package.GetRelationships*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships
  nameWithType: Package.GetRelationships
- uid: System.IO.Packaging.Package.GetRelationshipsByType*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType
  nameWithType: Package.GetRelationshipsByType
- uid: System.IO.Packaging.Package.Open*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open
  nameWithType: Package.Open
- uid: System.IO.Packaging.Package.PackageProperties*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
- uid: System.IO.Packaging.Package.PartExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists
  nameWithType: Package.PartExists
- uid: System.IO.Packaging.Package.RelationshipExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists
  nameWithType: Package.RelationshipExists
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: Package.System.IDisposable.Dispose
