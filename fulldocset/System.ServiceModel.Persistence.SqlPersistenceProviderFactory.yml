### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  id: SqlPersistenceProviderFactory
  children:
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  langs:
  - csharp
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  type: Class
  summary: "A system-provided <xref href=&quot;System.ServiceModel.Persistence.PersistenceProviderFactory&quot;></xref> implementation used to create a <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;></xref> instance that uses a SQL database to store persisted service state data."
  remarks: "The SqlPersistenceProviderFactory class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service.       In addition to persistence, the provider created by the SqlPersistenceProviderFactory class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.      > [!NOTE] >  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by SqlPersistenceProviderFactory do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.      > [!NOTE] >  The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProviderFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;></xref> class, configured with the specified parameter collection."
  remarks: "This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \n  \n [!code-cs[SqlPersistenceProviderFactory#3](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#3)]"
  syntax:
    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "The collection of parameters used by the new persistence provider factory. Valid parameters include <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;></xref> class, configured with the specified connection string."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \n  \n [!code-cs[SqlPersistenceProviderFactory#2](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#2)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "The connection parameters for the new persistence provider instance."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;></xref> class, configured with the specified connection string and <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;></xref> parameters."
  remarks: "The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#1](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#1)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);
    parameters:
    - id: connectionString
      type: System.String
      description: "The connection parameters for the new persistence provider instance."
    - id: serializeAsText
      type: System.Boolean
      description: "Specifies whether data is serialized as text rather than binary."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Persistence.SqlPersistenceProviderFactory&quot;></xref> class, configured with the specified connection string, <xref uid=&quot;langword_csharp_serializeAsText&quot; name=&quot;serializeAsText&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_lockTimeout&quot; name=&quot;lockTimeout&quot; href=&quot;&quot;></xref> parameters."
  remarks: "The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.       The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely."
  example:
  - "The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \n  \n [!code-cs[SqlPersistenceProviderFactory#0](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#0)]"
  syntax:
    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);
    parameters:
    - id: connectionString
      type: System.String
      description: "The connection parameters for the new persistence provider factory instance."
    - id: serializeAsText
      type: System.Boolean
      description: "Specifies whether data is serialized as text rather than binary."
    - id: lockTimeout
      type: System.TimeSpan
      description: "The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref> specifies that no locking is used."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  id: ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Gets the connection parameters for persistence provider instances created with this factory."
  remarks: ''
  example:
  - "The following code example shows how to set and access the `ConnectionString` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#4](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#4)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "The connection parameters for persistence provider instances created with this factory."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  id: CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Initializes a new <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;></xref> instance that uses a SQL database as its persistence store."
  remarks: "The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory&quot;s parameters are changed after the persistence provider is created."
  example:
  - "The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \n  \n [!code-cs[SqlPersistenceProviderFactory#7](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#7)]"
  syntax:
    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "The unique identifier of the persistence provider being created."
    return:
      type: System.ServiceModel.Persistence.PersistenceProvider
      description: "A newly-created <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;></xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Gets the default time-out value used when persistence providers created with this factory are closed."
  remarks: "The default value for close time-out is 15 seconds."
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "The default time-out value."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Gets the default time-out value used when persistence provider is opened."
  remarks: "The default value for open time-out is 15 seconds."
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "The default time-out value."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  id: LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period."
  remarks: "A time-out of `TimeSpan.Zero` specifies that no locking is used."
  example:
  - "The following code example shows how to access the `LockTimeout` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#5](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#5)]"
  syntax:
    content: public TimeSpan LockTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The time-out value for lock ownership."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the Abort phase."
  remarks: '`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.'
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the beginning of the Close phase."
  remarks: "The Close phase occurs when the service is closed."
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the OnBeginClose asynchronous method call."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the beginning of the Open phase."
  remarks: "The Open phase occurs when the service is opened."
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the OnBeginOpen asynchronous method call."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the Close phase."
  remarks: "The Close phase occurs when the service is closed."
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the end of the Close phase."
  remarks: "The Close phase occurs when the service is closed."
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the end of the Open phase."
  remarks: "The Open phase occurs when the service is opened."
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the Open phase."
  remarks: "The Open phase occurs when the service is opened."
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  id: SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  langs:
  - csharp
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Specifies whether data is serialized as text rather than binary in persistence providers created with this factory."
  remarks: "The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."
  example:
  - "The following code example shows how to access the `SerializeAsText` property.  \n  \n [!code-cs[SqlPersistenceProviderFactory#6](~/add/codesnippet/csharp/sqlpersistenceproviderfactory/sqlpersistenceproviderfactory.cs#6)]"
  syntax:
    content: public bool SerializeAsText { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the service information is serialized as text; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProviderFactory
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(NameValueCollection)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider(Guid)
  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(Guid)
- uid: System.ServiceModel.Persistence.PersistenceProvider
  parent: System.ServiceModel.Persistence
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort()
  nameWithType: SqlPersistenceProviderFactory.OnAbort()
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort()
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SqlPersistenceProviderFactory
  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: ConnectionString
  nameWithType: SqlPersistenceProviderFactory.ConnectionString
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: CreateProvider
  nameWithType: SqlPersistenceProviderFactory.CreateProvider
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: LockTimeout
  nameWithType: SqlPersistenceProviderFactory.LockTimeout
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnAbort
  nameWithType: SqlPersistenceProviderFactory.OnAbort
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginClose
  nameWithType: SqlPersistenceProviderFactory.OnBeginClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnBeginOpen
  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnClose
  nameWithType: SqlPersistenceProviderFactory.OnClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndClose
  nameWithType: SqlPersistenceProviderFactory.OnEndClose
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnEndOpen
  nameWithType: SqlPersistenceProviderFactory.OnEndOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: OnOpen
  nameWithType: SqlPersistenceProviderFactory.OnOpen
- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*
  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory
  isExternal: false
  name: SerializeAsText
  nameWithType: SqlPersistenceProviderFactory.SerializeAsText
