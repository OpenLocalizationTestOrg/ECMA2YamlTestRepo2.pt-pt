### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.Block
  id: Block
  children:
  - System.Windows.Documents.Block.#ctor
  - System.Windows.Documents.Block.BorderBrush
  - System.Windows.Documents.Block.BorderBrushProperty
  - System.Windows.Documents.Block.BorderThickness
  - System.Windows.Documents.Block.BorderThicknessProperty
  - System.Windows.Documents.Block.BreakColumnBefore
  - System.Windows.Documents.Block.BreakColumnBeforeProperty
  - System.Windows.Documents.Block.BreakPageBefore
  - System.Windows.Documents.Block.BreakPageBeforeProperty
  - System.Windows.Documents.Block.ClearFloaters
  - System.Windows.Documents.Block.ClearFloatersProperty
  - System.Windows.Documents.Block.FlowDirection
  - System.Windows.Documents.Block.FlowDirectionProperty
  - System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)
  - System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)
  - System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)
  - System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)
  - System.Windows.Documents.Block.IsHyphenationEnabled
  - System.Windows.Documents.Block.IsHyphenationEnabledProperty
  - System.Windows.Documents.Block.LineHeight
  - System.Windows.Documents.Block.LineHeightProperty
  - System.Windows.Documents.Block.LineStackingStrategy
  - System.Windows.Documents.Block.LineStackingStrategyProperty
  - System.Windows.Documents.Block.Margin
  - System.Windows.Documents.Block.MarginProperty
  - System.Windows.Documents.Block.NextBlock
  - System.Windows.Documents.Block.Padding
  - System.Windows.Documents.Block.PaddingProperty
  - System.Windows.Documents.Block.PreviousBlock
  - System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)
  - System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)
  - System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  - System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  - System.Windows.Documents.Block.SiblingBlocks
  - System.Windows.Documents.Block.TextAlignment
  - System.Windows.Documents.Block.TextAlignmentProperty
  langs:
  - csharp
  name: Block
  nameWithType: Block
  fullName: System.Windows.Documents.Block
  type: Class
  summary: "An abstract class that provides a base for all block-level flow content elements."
  remarks: "Elements that inherit from the Block class (such as <xref:System.Windows.Documents.Section>) can be used to group elements under a common parent or to apply common attributes to a group. Conceptually, this is similar to how you might use the \\<DIV> tag in [!INCLUDE[TLA#tla_html](~/add/includes/tlasharptla-html-md.md)]."
  syntax:
    content: 'public abstract class Block : System.Windows.Documents.TextElement'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.ContentElement
  - System.Windows.FrameworkContentElement
  - System.Windows.Documents.TextElement
  implements: []
  inheritedMembers:
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.AllowDrop
  - System.Windows.ContentElement.AllowDropProperty
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.AreAnyTouchesCaptured
  - System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.ContentElement.AreAnyTouchesOver
  - System.Windows.ContentElement.AreAnyTouchesOverProperty
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.CaptureMouse
  - System.Windows.ContentElement.CaptureStylus
  - System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.CommandBindings
  - System.Windows.ContentElement.DragEnter
  - System.Windows.ContentElement.DragEnterEvent
  - System.Windows.ContentElement.DragLeave
  - System.Windows.ContentElement.DragLeaveEvent
  - System.Windows.ContentElement.DragOver
  - System.Windows.ContentElement.DragOverEvent
  - System.Windows.ContentElement.Drop
  - System.Windows.ContentElement.DropEvent
  - System.Windows.ContentElement.Focus
  - System.Windows.ContentElement.Focusable
  - System.Windows.ContentElement.FocusableChanged
  - System.Windows.ContentElement.FocusableProperty
  - System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.ContentElement.GiveFeedback
  - System.Windows.ContentElement.GiveFeedbackEvent
  - System.Windows.ContentElement.GotFocus
  - System.Windows.ContentElement.GotFocusEvent
  - System.Windows.ContentElement.GotKeyboardFocus
  - System.Windows.ContentElement.GotKeyboardFocusEvent
  - System.Windows.ContentElement.GotMouseCapture
  - System.Windows.ContentElement.GotMouseCaptureEvent
  - System.Windows.ContentElement.GotStylusCapture
  - System.Windows.ContentElement.GotStylusCaptureEvent
  - System.Windows.ContentElement.GotTouchCapture
  - System.Windows.ContentElement.GotTouchCaptureEvent
  - System.Windows.ContentElement.HasAnimatedProperties
  - System.Windows.ContentElement.InputBindings
  - System.Windows.ContentElement.IsEnabled
  - System.Windows.ContentElement.IsEnabledChanged
  - System.Windows.ContentElement.IsEnabledCore
  - System.Windows.ContentElement.IsEnabledProperty
  - System.Windows.ContentElement.IsFocused
  - System.Windows.ContentElement.IsFocusedProperty
  - System.Windows.ContentElement.IsInputMethodEnabled
  - System.Windows.ContentElement.IsKeyboardFocused
  - System.Windows.ContentElement.IsKeyboardFocusedChanged
  - System.Windows.ContentElement.IsKeyboardFocusedProperty
  - System.Windows.ContentElement.IsKeyboardFocusWithin
  - System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  - System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  - System.Windows.ContentElement.IsMouseCaptured
  - System.Windows.ContentElement.IsMouseCapturedChanged
  - System.Windows.ContentElement.IsMouseCapturedProperty
  - System.Windows.ContentElement.IsMouseCaptureWithin
  - System.Windows.ContentElement.IsMouseCaptureWithinChanged
  - System.Windows.ContentElement.IsMouseCaptureWithinProperty
  - System.Windows.ContentElement.IsMouseDirectlyOver
  - System.Windows.ContentElement.IsMouseDirectlyOverChanged
  - System.Windows.ContentElement.IsMouseDirectlyOverProperty
  - System.Windows.ContentElement.IsMouseOver
  - System.Windows.ContentElement.IsMouseOverProperty
  - System.Windows.ContentElement.IsStylusCaptured
  - System.Windows.ContentElement.IsStylusCapturedChanged
  - System.Windows.ContentElement.IsStylusCapturedProperty
  - System.Windows.ContentElement.IsStylusCaptureWithin
  - System.Windows.ContentElement.IsStylusCaptureWithinChanged
  - System.Windows.ContentElement.IsStylusCaptureWithinProperty
  - System.Windows.ContentElement.IsStylusDirectlyOver
  - System.Windows.ContentElement.IsStylusDirectlyOverChanged
  - System.Windows.ContentElement.IsStylusDirectlyOverProperty
  - System.Windows.ContentElement.IsStylusOver
  - System.Windows.ContentElement.IsStylusOverProperty
  - System.Windows.ContentElement.KeyDown
  - System.Windows.ContentElement.KeyDownEvent
  - System.Windows.ContentElement.KeyUp
  - System.Windows.ContentElement.KeyUpEvent
  - System.Windows.ContentElement.LostFocus
  - System.Windows.ContentElement.LostFocusEvent
  - System.Windows.ContentElement.LostKeyboardFocus
  - System.Windows.ContentElement.LostKeyboardFocusEvent
  - System.Windows.ContentElement.LostMouseCapture
  - System.Windows.ContentElement.LostMouseCaptureEvent
  - System.Windows.ContentElement.LostStylusCapture
  - System.Windows.ContentElement.LostStylusCaptureEvent
  - System.Windows.ContentElement.LostTouchCapture
  - System.Windows.ContentElement.LostTouchCaptureEvent
  - System.Windows.ContentElement.MouseDown
  - System.Windows.ContentElement.MouseDownEvent
  - System.Windows.ContentElement.MouseEnter
  - System.Windows.ContentElement.MouseEnterEvent
  - System.Windows.ContentElement.MouseLeave
  - System.Windows.ContentElement.MouseLeaveEvent
  - System.Windows.ContentElement.MouseLeftButtonDown
  - System.Windows.ContentElement.MouseLeftButtonDownEvent
  - System.Windows.ContentElement.MouseLeftButtonUp
  - System.Windows.ContentElement.MouseLeftButtonUpEvent
  - System.Windows.ContentElement.MouseMove
  - System.Windows.ContentElement.MouseMoveEvent
  - System.Windows.ContentElement.MouseRightButtonDown
  - System.Windows.ContentElement.MouseRightButtonDownEvent
  - System.Windows.ContentElement.MouseRightButtonUp
  - System.Windows.ContentElement.MouseRightButtonUpEvent
  - System.Windows.ContentElement.MouseUp
  - System.Windows.ContentElement.MouseUpEvent
  - System.Windows.ContentElement.MouseWheel
  - System.Windows.ContentElement.MouseWheelEvent
  - System.Windows.ContentElement.OnCreateAutomationPeer
  - System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.PreviewDragEnter
  - System.Windows.ContentElement.PreviewDragEnterEvent
  - System.Windows.ContentElement.PreviewDragLeave
  - System.Windows.ContentElement.PreviewDragLeaveEvent
  - System.Windows.ContentElement.PreviewDragOver
  - System.Windows.ContentElement.PreviewDragOverEvent
  - System.Windows.ContentElement.PreviewDrop
  - System.Windows.ContentElement.PreviewDropEvent
  - System.Windows.ContentElement.PreviewGiveFeedback
  - System.Windows.ContentElement.PreviewGiveFeedbackEvent
  - System.Windows.ContentElement.PreviewGotKeyboardFocus
  - System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewKeyDown
  - System.Windows.ContentElement.PreviewKeyDownEvent
  - System.Windows.ContentElement.PreviewKeyUp
  - System.Windows.ContentElement.PreviewKeyUpEvent
  - System.Windows.ContentElement.PreviewLostKeyboardFocus
  - System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewMouseDown
  - System.Windows.ContentElement.PreviewMouseDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonDown
  - System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonUp
  - System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseMove
  - System.Windows.ContentElement.PreviewMouseMoveEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonDown
  - System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonUp
  - System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseUp
  - System.Windows.ContentElement.PreviewMouseUpEvent
  - System.Windows.ContentElement.PreviewMouseWheel
  - System.Windows.ContentElement.PreviewMouseWheelEvent
  - System.Windows.ContentElement.PreviewQueryContinueDrag
  - System.Windows.ContentElement.PreviewQueryContinueDragEvent
  - System.Windows.ContentElement.PreviewStylusButtonDown
  - System.Windows.ContentElement.PreviewStylusButtonDownEvent
  - System.Windows.ContentElement.PreviewStylusButtonUp
  - System.Windows.ContentElement.PreviewStylusButtonUpEvent
  - System.Windows.ContentElement.PreviewStylusDown
  - System.Windows.ContentElement.PreviewStylusDownEvent
  - System.Windows.ContentElement.PreviewStylusInAirMove
  - System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  - System.Windows.ContentElement.PreviewStylusInRange
  - System.Windows.ContentElement.PreviewStylusInRangeEvent
  - System.Windows.ContentElement.PreviewStylusMove
  - System.Windows.ContentElement.PreviewStylusMoveEvent
  - System.Windows.ContentElement.PreviewStylusOutOfRange
  - System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  - System.Windows.ContentElement.PreviewStylusSystemGesture
  - System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  - System.Windows.ContentElement.PreviewStylusUp
  - System.Windows.ContentElement.PreviewStylusUpEvent
  - System.Windows.ContentElement.PreviewTextInput
  - System.Windows.ContentElement.PreviewTextInputEvent
  - System.Windows.ContentElement.PreviewTouchDown
  - System.Windows.ContentElement.PreviewTouchDownEvent
  - System.Windows.ContentElement.PreviewTouchMove
  - System.Windows.ContentElement.PreviewTouchMoveEvent
  - System.Windows.ContentElement.PreviewTouchUp
  - System.Windows.ContentElement.PreviewTouchUpEvent
  - System.Windows.ContentElement.QueryContinueDrag
  - System.Windows.ContentElement.QueryContinueDragEvent
  - System.Windows.ContentElement.QueryCursor
  - System.Windows.ContentElement.QueryCursorEvent
  - System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.ReleaseAllTouchCaptures
  - System.Windows.ContentElement.ReleaseMouseCapture
  - System.Windows.ContentElement.ReleaseStylusCapture
  - System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.ShouldSerializeCommandBindings
  - System.Windows.ContentElement.ShouldSerializeInputBindings
  - System.Windows.ContentElement.StylusButtonDown
  - System.Windows.ContentElement.StylusButtonDownEvent
  - System.Windows.ContentElement.StylusButtonUp
  - System.Windows.ContentElement.StylusButtonUpEvent
  - System.Windows.ContentElement.StylusDown
  - System.Windows.ContentElement.StylusDownEvent
  - System.Windows.ContentElement.StylusEnter
  - System.Windows.ContentElement.StylusEnterEvent
  - System.Windows.ContentElement.StylusInAirMove
  - System.Windows.ContentElement.StylusInAirMoveEvent
  - System.Windows.ContentElement.StylusInRange
  - System.Windows.ContentElement.StylusInRangeEvent
  - System.Windows.ContentElement.StylusLeave
  - System.Windows.ContentElement.StylusLeaveEvent
  - System.Windows.ContentElement.StylusMove
  - System.Windows.ContentElement.StylusMoveEvent
  - System.Windows.ContentElement.StylusOutOfRange
  - System.Windows.ContentElement.StylusOutOfRangeEvent
  - System.Windows.ContentElement.StylusSystemGesture
  - System.Windows.ContentElement.StylusSystemGestureEvent
  - System.Windows.ContentElement.StylusUp
  - System.Windows.ContentElement.StylusUpEvent
  - System.Windows.ContentElement.TextInput
  - System.Windows.ContentElement.TextInputEvent
  - System.Windows.ContentElement.TouchDown
  - System.Windows.ContentElement.TouchDownEvent
  - System.Windows.ContentElement.TouchEnter
  - System.Windows.ContentElement.TouchEnterEvent
  - System.Windows.ContentElement.TouchesCaptured
  - System.Windows.ContentElement.TouchesCapturedWithin
  - System.Windows.ContentElement.TouchesDirectlyOver
  - System.Windows.ContentElement.TouchesOver
  - System.Windows.ContentElement.TouchLeave
  - System.Windows.ContentElement.TouchLeaveEvent
  - System.Windows.ContentElement.TouchMove
  - System.Windows.ContentElement.TouchMoveEvent
  - System.Windows.ContentElement.TouchUp
  - System.Windows.ContentElement.TouchUpEvent
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Documents.TextElement.Background
  - System.Windows.Documents.TextElement.BackgroundProperty
  - System.Windows.Documents.TextElement.ContentEnd
  - System.Windows.Documents.TextElement.ContentStart
  - System.Windows.Documents.TextElement.ElementEnd
  - System.Windows.Documents.TextElement.ElementStart
  - System.Windows.Documents.TextElement.FontFamily
  - System.Windows.Documents.TextElement.FontFamilyProperty
  - System.Windows.Documents.TextElement.FontSize
  - System.Windows.Documents.TextElement.FontSizeProperty
  - System.Windows.Documents.TextElement.FontStretch
  - System.Windows.Documents.TextElement.FontStretchProperty
  - System.Windows.Documents.TextElement.FontStyle
  - System.Windows.Documents.TextElement.FontStyleProperty
  - System.Windows.Documents.TextElement.FontWeight
  - System.Windows.Documents.TextElement.FontWeightProperty
  - System.Windows.Documents.TextElement.Foreground
  - System.Windows.Documents.TextElement.ForegroundProperty
  - System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.LogicalChildren
  - System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)
  - System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)
  - System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)
  - System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)
  - System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)
  - System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)
  - System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Documents.TextElement.TextEffects
  - System.Windows.Documents.TextElement.TextEffectsProperty
  - System.Windows.Documents.TextElement.Typography
  - System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkContentElement.BeginInit
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkContentElement.BindingGroup
  - System.Windows.FrameworkContentElement.BindingGroupProperty
  - System.Windows.FrameworkContentElement.BringIntoView
  - System.Windows.FrameworkContentElement.ContextMenu
  - System.Windows.FrameworkContentElement.ContextMenuClosing
  - System.Windows.FrameworkContentElement.ContextMenuClosingEvent
  - System.Windows.FrameworkContentElement.ContextMenuOpening
  - System.Windows.FrameworkContentElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkContentElement.ContextMenuProperty
  - System.Windows.FrameworkContentElement.Cursor
  - System.Windows.FrameworkContentElement.CursorProperty
  - System.Windows.FrameworkContentElement.DataContext
  - System.Windows.FrameworkContentElement.DataContextChanged
  - System.Windows.FrameworkContentElement.DataContextProperty
  - System.Windows.FrameworkContentElement.DefaultStyleKey
  - System.Windows.FrameworkContentElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkContentElement.EndInit
  - System.Windows.FrameworkContentElement.FindName(System.String)
  - System.Windows.FrameworkContentElement.FindResource(System.Object)
  - System.Windows.FrameworkContentElement.FocusVisualStyle
  - System.Windows.FrameworkContentElement.FocusVisualStyleProperty
  - System.Windows.FrameworkContentElement.ForceCursor
  - System.Windows.FrameworkContentElement.ForceCursorProperty
  - System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkContentElement.GetUIParentCore
  - System.Windows.FrameworkContentElement.Initialized
  - System.Windows.FrameworkContentElement.InputScope
  - System.Windows.FrameworkContentElement.InputScopeProperty
  - System.Windows.FrameworkContentElement.IsInitialized
  - System.Windows.FrameworkContentElement.IsLoaded
  - System.Windows.FrameworkContentElement.Language
  - System.Windows.FrameworkContentElement.LanguageProperty
  - System.Windows.FrameworkContentElement.Loaded
  - System.Windows.FrameworkContentElement.LoadedEvent
  - System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkContentElement.Name
  - System.Windows.FrameworkContentElement.NameProperty
  - System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkContentElement.OverridesDefaultStyle
  - System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkContentElement.Parent
  - System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkContentElement.Resources
  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkContentElement.ShouldSerializeResources
  - System.Windows.FrameworkContentElement.ShouldSerializeStyle
  - System.Windows.FrameworkContentElement.SourceUpdated
  - System.Windows.FrameworkContentElement.Style
  - System.Windows.FrameworkContentElement.StyleProperty
  - System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkContentElement.Tag
  - System.Windows.FrameworkContentElement.TagProperty
  - System.Windows.FrameworkContentElement.TargetUpdated
  - System.Windows.FrameworkContentElement.TemplatedParent
  - System.Windows.FrameworkContentElement.ToolTip
  - System.Windows.FrameworkContentElement.ToolTipClosing
  - System.Windows.FrameworkContentElement.ToolTipClosingEvent
  - System.Windows.FrameworkContentElement.ToolTipOpening
  - System.Windows.FrameworkContentElement.ToolTipOpeningEvent
  - System.Windows.FrameworkContentElement.ToolTipProperty
  - System.Windows.FrameworkContentElement.TryFindResource(System.Object)
  - System.Windows.FrameworkContentElement.Unloaded
  - System.Windows.FrameworkContentElement.UnloadedEvent
  - System.Windows.FrameworkContentElement.UnregisterName(System.String)
  - System.Windows.FrameworkContentElement.UpdateDefaultStyle
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Documents.Block.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: Block()
  nameWithType: Block.Block()
  fullName: System.Windows.Documents.Block.Block()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Initializes <xref href=&quot;System.Windows.Documents.Block&quot;></xref> base class values when called by a derived class."
  syntax:
    content: protected Block ();
    parameters: []
  overload: System.Windows.Documents.Block.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BorderBrush
  id: BorderBrush
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BorderBrush
  nameWithType: Block.BorderBrush
  fullName: System.Windows.Documents.Block.BorderBrush
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets a <xref href=&quot;System.Windows.Media.Brush&quot;></xref> to use when painting the element&quot;s border."
  remarks: "For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.      <a name=&quot;dependencyPropertyInfo_BorderBrush&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.BorderBrushProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to set the BorderBrush attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_BordersXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_bordersxaml)]  \n  \n The following figure shows how the preceding example renders.  \n  \n ![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png \"Screenshot: Blue, 1/4inch border around Block\")  \n  \n The following example shows how to set the BorderBrush property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_Borders](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_borders)]\n [!code-cs[BlockSnippets#_Block_Borders](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_borders)]"
  syntax:
    content: public System.Windows.Media.Brush BorderBrush { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "The brush used to apply to the element&quot;s border. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Documents.Block.BorderBrush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BorderBrushProperty
  id: BorderBrushProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BorderBrushProperty
  nameWithType: Block.BorderBrushProperty
  fullName: System.Windows.Documents.Block.BorderBrushProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.BorderBrush*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BorderBrushProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BorderThickness
  id: BorderThickness
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BorderThickness
  nameWithType: Block.BorderThickness
  fullName: System.Windows.Documents.Block.BorderThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the border thickness for the element."
  remarks: "<a name=&quot;xamlAttributeUsage_BorderThickness&quot;></a>    ## XAML Attribute Usage      ```   <object BorderThickness=&quot;uniformThickness&quot;/>   - or -   <object BorderThickness=&quot;independentThickness&quot;/>   - or -   <object BorderThickness=&quot;qualifiedUniformThickness&quot;/>   - or -   <object BorderThickness=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_BorderThickness&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform border of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_BorderThickness&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.BorderThicknessProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the BorderThickness attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_BordersXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_bordersxaml)]  \n  \n The following figure shows how the preceding example renders.  \n  \n ![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png \"Screenshot: Blue, 1/4inch border around Block\")  \n  \n The following example shows how to set the BorderThickness property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_Borders](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_borders)]\n [!code-cs[BlockSnippets#_Block_Borders](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_borders)]"
  syntax:
    content: public System.Windows.Thickness BorderThickness { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure specifying the amount of border to apply, in device independent pixels. The default is a uniform thickness of zero (0.0)."
  overload: System.Windows.Documents.Block.BorderThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BorderThicknessProperty
  id: BorderThicknessProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BorderThicknessProperty
  nameWithType: Block.BorderThicknessProperty
  fullName: System.Windows.Documents.Block.BorderThicknessProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.BorderThickness*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BorderThicknessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BreakColumnBefore
  id: BreakColumnBefore
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BreakColumnBefore
  nameWithType: Block.BreakColumnBefore
  fullName: System.Windows.Documents.Block.BreakColumnBefore
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets a value that indicates whether to automatically insert a column-break before this element in cases where the element participates in a column-based presentation."
  remarks: "<a name=&quot;dependencyPropertyInfo_BreakColumnBefore&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|"
  syntax:
    content: public bool BreakColumnBefore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to automatically insert a column-break before this element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Documents.Block.BreakColumnBefore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BreakColumnBeforeProperty
  id: BreakColumnBeforeProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BreakColumnBeforeProperty
  nameWithType: Block.BreakColumnBeforeProperty
  fullName: System.Windows.Documents.Block.BreakColumnBeforeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.BreakColumnBefore*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BreakColumnBeforeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BreakPageBefore
  id: BreakPageBefore
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BreakPageBefore
  nameWithType: Block.BreakPageBefore
  fullName: System.Windows.Documents.Block.BreakPageBefore
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets a value that indicates whether to automatically insert a page-break before this element."
  remarks: "<a name=&quot;dependencyPropertyInfo_BreakPageBefore&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|"
  syntax:
    content: public bool BreakPageBefore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to automatically insert a page-break before this element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Documents.Block.BreakPageBefore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.BreakPageBeforeProperty
  id: BreakPageBeforeProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: BreakPageBeforeProperty
  nameWithType: Block.BreakPageBeforeProperty
  fullName: System.Windows.Documents.Block.BreakPageBeforeProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.BreakPageBefore*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BreakPageBeforeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.ClearFloaters
  id: ClearFloaters
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: ClearFloaters
  nameWithType: Block.ClearFloaters
  fullName: System.Windows.Documents.Block.ClearFloaters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the direction in which any <xref href=&quot;System.Windows.Documents.Floater&quot;></xref> elements contained by a <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element should be repositioned."
  remarks: "The ClearFloaters property affects how content is laid out within a <xref:System.Windows.Documents.Block> and is intended to be used to prevent <xref:System.Windows.Documents.Floater> elements from congesting the contents of a <xref:System.Windows.Documents.Block> element.  Specifying a direction for this property causes floaters to be repositioned in a uniform direction within the <xref:System.Windows.Documents.Block> content.  Floaters are not repositioned outside of their parent <xref:System.Windows.Documents.Block>.      <a name=&quot;dependencyPropertyInfo_ClearFloaters&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.ClearFloatersProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|"
  syntax:
    content: public System.Windows.WrapDirection ClearFloaters { get; set; }
    return:
      type: System.Windows.WrapDirection
      description: "One of the <xref href=&quot;System.Windows.WrapDirection&quot;></xref> values that specifies the direction in which to separate any <xref href=&quot;System.Windows.Documents.Floater&quot;></xref> elements from other content contained in the <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element. The default is <xref href=&quot;System.Windows.WrapDirection&quot;></xref>, which indicates that floaters should be rendered in place."
  overload: System.Windows.Documents.Block.ClearFloaters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.ClearFloatersProperty
  id: ClearFloatersProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: ClearFloatersProperty
  nameWithType: Block.ClearFloatersProperty
  fullName: System.Windows.Documents.Block.ClearFloatersProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.ClearFloaters*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ClearFloatersProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.FlowDirection
  id: FlowDirection
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: FlowDirection
  nameWithType: Block.FlowDirection
  fullName: System.Windows.Documents.Block.FlowDirection
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the relative direction for flow of content within a <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element."
  remarks: "Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <xref:System.Windows.Documents.Block> element to re-flow in the indicated direction.       The flow direction of content typically corresponds to the innate flow direction of the language being represented.  Hebrew and Arabic are examples of languages that naturally flow from right to left.  English, German, and Russian are examples of languages that naturally flow from left to right.      > [!NOTE] >  **The value of this property is not automatically changed to match the language used by the operating system. If you need to use a different value th**a**n the default of** <xref:System.Windows.FlowDirection>**, you must specify it yourself.**      <a name=&quot;dependencyPropertyInfo_FlowDirection&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.FlowDirectionProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|"
  example:
  - "The following example shows how to set the FlowDirection attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_FlowDirectionXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_flowdirectionxaml)]  \n  \n The following example shows how to set the FlowDirection property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_FlowDirection](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_flowdirection)]\n [!code-cs[BlockSnippets#_Block_FlowDirection](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_flowdirection)]"
  syntax:
    content: public System.Windows.FlowDirection FlowDirection { get; set; }
    return:
      type: System.Windows.FlowDirection
      description: "One of the <xref href=&quot;System.Windows.FlowDirection&quot;></xref> values that specifies the relative flow direction. The default is <xref href=&quot;System.Windows.FlowDirection&quot;></xref>."
  overload: System.Windows.Documents.Block.FlowDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.FlowDirectionProperty
  id: FlowDirectionProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: FlowDirectionProperty
  nameWithType: Block.FlowDirectionProperty
  fullName: System.Windows.Documents.Block.FlowDirectionProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.FlowDirection*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty FlowDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)
  id: GetIsHyphenationEnabled(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: GetIsHyphenationEnabled(DependencyObject)
  nameWithType: Block.GetIsHyphenationEnabled(DependencyObject)
  fullName: System.Windows.Documents.Block.GetIsHyphenationEnabled(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Returns the value of the <xref:System.Windows.Documents.Block.IsHyphenationEnabled*> attached property for a specified dependency object."
  syntax:
    content: public static bool GetIsHyphenationEnabled (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Documents.Block.IsHyphenationEnabled*> property."
    return:
      type: System.Boolean
      description: "The current value of the <xref:System.Windows.Documents.Block.IsHyphenationEnabled*> attached property on the specified dependency object."
  overload: System.Windows.Documents.Block.GetIsHyphenationEnabled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)
  id: GetLineHeight(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: GetLineHeight(DependencyObject)
  nameWithType: Block.GetLineHeight(DependencyObject)
  fullName: System.Windows.Documents.Block.GetLineHeight(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Returns the value of the <xref:System.Windows.Documents.Block.LineHeight*> attached property for a specified dependency object."
  syntax:
    content: public static double GetLineHeight (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Documents.Block.LineHeight*> property."
    return:
      type: System.Double
      description: "The current value of the <xref:System.Windows.Documents.Block.LineHeight*> attached property on the specified dependency object."
  overload: System.Windows.Documents.Block.GetLineHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)
  id: GetLineStackingStrategy(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: GetLineStackingStrategy(DependencyObject)
  nameWithType: Block.GetLineStackingStrategy(DependencyObject)
  fullName: System.Windows.Documents.Block.GetLineStackingStrategy(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Returns the value of the <xref:System.Windows.Documents.Block.LineStackingStrategy*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Documents.Block.LineStackingStrategy*> attached property."
    return:
      type: System.Windows.LineStackingStrategy
      description: "The current value of the <xref:System.Windows.Documents.Block.LineStackingStrategy*> attached property on the specified dependency object."
  overload: System.Windows.Documents.Block.GetLineStackingStrategy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)
  id: GetTextAlignment(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: GetTextAlignment(DependencyObject)
  nameWithType: Block.GetTextAlignment(DependencyObject)
  fullName: System.Windows.Documents.Block.GetTextAlignment(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Returns the value of the <xref:System.Windows.Documents.Block.TextAlignment*> attached property for a specified dependency object."
  syntax:
    content: public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object from which to retrieve the value of the <xref:System.Windows.Documents.Block.TextAlignment*> property."
    return:
      type: System.Windows.TextAlignment
      description: "The current value of the <xref:System.Windows.Documents.Block.TextAlignment*> attached property on the specified dependency object."
  overload: System.Windows.Documents.Block.GetTextAlignment*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.IsHyphenationEnabled
  id: IsHyphenationEnabled
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: IsHyphenationEnabled
  nameWithType: Block.IsHyphenationEnabled
  fullName: System.Windows.Documents.Block.IsHyphenationEnabled
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled."
  remarks: "The automatic word hyphenation feature enables a <xref:System.Windows.Documents.Block> element to automatically break and hyphenate words, based on current layout conditions.  This enables long words to begin on one line and continue on this next, and tends to achieve a more even distribution of white space in justified text.  Words are broken and hyphenated according to standard grammar rules.      <a name=&quot;dependencyPropertyInfo_IsHyphenationEnabled&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.IsHyphenationEnabledProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the IsHyphenationEnabled attribute of a <xref:System.Windows.Documents.Block> element.  \n  \n [!code-xml[BlockSnippets#_Block_HyphenateXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_hyphenatexaml)]  \n  \n The following figure shows how the preceding example renders.  \n  \n ![Screenshot: FlowDocument hyphen enabled](~/add/media/flowdoc-hyphenenabled.png \"Screenshot: FlowDocument hyphen enabled\")  \n  \n The following figure shows how the same example renders with the default setting of IsHyphenationEnabled=`false`.  \n  \n ![Screenshot: FlowDocument with disabled hyphens](~/add/media/flowdoc-hyphendisabled.png \"Screenshot: FlowDocument with disabled hyphens\")  \n  \n The following example shows how to set the IsHyphenationEnabled property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_Hyphenate](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_hyphenate)]\n [!code-cs[BlockSnippets#_Block_Hyphenate](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_hyphenate)]"
  syntax:
    content: public bool IsHyphenationEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if automatic breaking and hyphenation of words is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Documents.Block.IsHyphenationEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.IsHyphenationEnabledProperty
  id: IsHyphenationEnabledProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: IsHyphenationEnabledProperty
  nameWithType: Block.IsHyphenationEnabledProperty
  fullName: System.Windows.Documents.Block.IsHyphenationEnabledProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.IsHyphenationEnabled*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.LineHeight
  id: LineHeight
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: LineHeight
  nameWithType: Block.LineHeight
  fullName: System.Windows.Documents.Block.LineHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the height of each line of content."
  remarks: "A value of <xref:System.Double.NaN?displayProperty=fullName> (equivalent to an attribute value of `Auto`) indicates that the line height is determined automatically from the current font characteristics.       Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text. To change the size of the text, use the <xref:System.Windows.Documents.FlowDocument.FontSize%2A> property.       In addition to this property, the layout of lines in a <xref:System.Windows.Documents.Block> is affected by its <xref:System.Windows.Documents.Block.LineStackingStrategy%2A> property.      <a name=&quot;xamlAttributeUsage_LineHeight&quot;></a>    ## XAML Attribute Usage      ```   <object LineHeight=&quot;double&quot;/>   - or -   <object LineHeight=&quot;qualifiedDouble&quot;/>   - or -   <object LineHeight=&quot;Auto&quot;/>   ```      <a name=&quot;xamlValues_LineHeight&quot;></a>    ## XAML Values    *double*    <xref:System.Double>       String representation of a <xref:System.Double> value equal to or greater than 0.0034 but equal to or less than 160000. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN?displayProperty=fullName>.      <a name=&quot;dependencyPropertyInfo_LineHeight&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the LineHeight attribute of a <xref:System.Windows.Documents.Block> element.  \n  \n [!code-xml[BlockSnippets#_Block_LineHeightXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_lineheightxaml)]  \n  \n The following figure shows how the preceding example renders.  \n  \n ![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png \"Screenshot: FlowDocument LineHeight\")  \n  \n The following figure shows how the same <xref:System.Windows.Documents.FlowDocument> renders with the default setting of <xref:System.Windows.Documents.FlowDocument.LineHeight%2A>=<xref:System.Double.NaN?displayProperty=fullName>.  \n  \n ![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png \"Screenshot: FlowDocument LineHeight default\")  \n  \n The following example shows how to set the LineHeight property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_LineHeight](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_lineheight)]\n [!code-cs[BlockSnippets#_Block_LineHeight](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_lineheight)]"
  syntax:
    content: public double LineHeight { get; set; }
    return:
      type: System.Double
      description: "The height of each line in device independent pixels, in the range of 0.0034 to 160000, or &lt;xref:System.Double?displayProperty=fullName&gt; to determine the height automatically. The default is &lt;xref:System.Double?displayProperty=fullName&gt;."
  overload: System.Windows.Documents.Block.LineHeight*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Windows.Controls.TextBlock.LineHeight*> is set to a non-positive value."
  platform:
  - net462
- uid: System.Windows.Documents.Block.LineHeightProperty
  id: LineHeightProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: LineHeightProperty
  nameWithType: Block.LineHeightProperty
  fullName: System.Windows.Documents.Block.LineHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.LineHeight*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.LineStackingStrategy
  id: LineStackingStrategy
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: LineStackingStrategy
  nameWithType: Block.LineStackingStrategy
  fullName: System.Windows.Documents.Block.LineStackingStrategy
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets how a line box is determined for each line of text within the block-level flow content element."
  remarks: "This dependency property also has an attached property usage. In [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], the usage is \\<*object* LineStackingStrategy=\"*value*\".../>, where *object* is an object element (typically a flow element) contained within a <xref:System.Windows.Documents.Block> derived class, and *value* is a string value of the <xref:System.Windows.LineStackingStrategy> enumeration. In code, the attached property usage is supported by the <xref:System.Windows.Documents.Block.GetLineStackingStrategy%2A> and <xref:System.Windows.Documents.Block.SetLineStackingStrategy%2A> methods. The attached property usage is not common.  \n  \n<a name=\"dependencyPropertyInfo_LineStackingStrategy\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Documents.Block.LineStackingStrategyProperty>|  \n|Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>. The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy>.  \n  \n [!code-xml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/add/codesnippet/xaml/flowmiscsnippets_snip/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  \n  \n The following illustration shows the result of the preceding code.  \n  \n ![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif \"Screenshot: Compare LineStackingStrategy values\")"
  syntax:
    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }
    return:
      type: System.Windows.LineStackingStrategy
      description: "One of the <xref href=&quot;System.Windows.LineStackingStrategy&quot;></xref> values that specifies how a line box is determined for each line of text within the block-level flow content element. The default value is <xref href=&quot;System.Windows.LineStackingStrategy&quot;></xref>."
  overload: System.Windows.Documents.Block.LineStackingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.LineStackingStrategyProperty
  id: LineStackingStrategyProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: LineStackingStrategyProperty
  nameWithType: Block.LineStackingStrategyProperty
  fullName: System.Windows.Documents.Block.LineStackingStrategyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.LineStackingStrategy*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.Margin
  id: Margin
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: Margin
  nameWithType: Block.Margin
  fullName: System.Windows.Documents.Block.Margin
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the margin thickness for the element."
  remarks: "Margin is buffer space that falls outside an element&quot;s content area, between the edges of the element&quot;s content area and the edges of the parent element.  Contrast with <xref:System.Windows.Documents.Block.Padding%2A>, which is buffer space that falls inside an element&quot;s content area, between the element&quot;s content and the inner edge of the element.      <a name=&quot;xamlAttributeUsage_Margin&quot;></a>    ## XAML Attribute Usage      ```   <object Margin=&quot;uniformThickness&quot;/>   - or -   <object Margin=&quot;independentThickness&quot;/>   - or -   <object Margin=&quot;qualifiedUniformThickness&quot;/>   - or -   <object Margin=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_Margin&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform margin of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_Margin&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.MarginProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the Margin attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_MarginPaddingXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_marginpaddingxaml)]  \n  \n The following figure shows how the preceding example renders.  Exaggerated thicknesses and colors are used for illustration.  \n  \n ![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png \"Screenshot: Paragraphs with padding and margins\")  \n  \n The following example shows how to set the Margin property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_marginpadding)]\n [!code-cs[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_marginpadding)]"
  syntax:
    content: public System.Windows.Thickness Margin { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure that specifies the amount of margin to apply, in device independent pixels. The default is a uniform thickness of zero (0.0)."
  overload: System.Windows.Documents.Block.Margin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.MarginProperty
  id: MarginProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: MarginProperty
  nameWithType: Block.MarginProperty
  fullName: System.Windows.Documents.Block.MarginProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.Margin*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty MarginProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.NextBlock
  id: NextBlock
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: NextBlock
  nameWithType: Block.NextBlock
  fullName: System.Windows.Documents.Block.NextBlock
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets the sibling <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element that directly follows the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element."
  syntax:
    content: public System.Windows.Documents.Block NextBlock { get; }
    return:
      type: System.Windows.Documents.Block
      description: "The sibling <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element that directly follows the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no such element exists."
  overload: System.Windows.Documents.Block.NextBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.Padding
  id: Padding
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: Padding
  nameWithType: Block.Padding
  fullName: System.Windows.Documents.Block.Padding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the padding thickness for the element."
  remarks: "Padding is buffer space that falls inside an element&quot;s content area, between the element&quot;s content and the inner edge of the element.  Contrast with <xref:System.Windows.Documents.Block.Margin%2A>, which is buffer space that falls outside an element&quot;s content area, between the edges of the element&quot;s content area and the edges of the parent element.      <a name=&quot;xamlAttributeUsage_Padding&quot;></a>    ## XAML Attribute Usage      ```   <object Padding=&quot;uniformThickness&quot;/>   - or -   <object Padding=&quot;independentThickness&quot;/>   - or -   <object Padding=&quot;qualifiedUniformThickness&quot;/>   - or -   <object Padding=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_Padding&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform padding of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_Padding&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the Padding attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_MarginPaddingXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_marginpaddingxaml)]  \n  \n The following figure shows how the preceding example renders.  Exaggerated thicknesses and colors are used for illustration.  \n  \n ![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png \"Screenshot: Paragraphs with padding and margins\")  \n  \n The following example shows how to set the Padding property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_marginpadding)]\n [!code-cs[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_marginpadding)]"
  syntax:
    content: public System.Windows.Thickness Padding { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure that specifies the amount of padding to apply, in device independent pixels. The default is a uniform thickness of zero (0.0)."
  overload: System.Windows.Documents.Block.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.PaddingProperty
  id: PaddingProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: PaddingProperty
  nameWithType: Block.PaddingProperty
  fullName: System.Windows.Documents.Block.PaddingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.Padding*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PaddingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.PreviousBlock
  id: PreviousBlock
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: PreviousBlock
  nameWithType: Block.PreviousBlock
  fullName: System.Windows.Documents.Block.PreviousBlock
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets the sibling <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element that directly precedes the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element."
  syntax:
    content: public System.Windows.Documents.Block PreviousBlock { get; }
    return:
      type: System.Windows.Documents.Block
      description: "The sibling <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element that directly precedes the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no such element exists."
  overload: System.Windows.Documents.Block.PreviousBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)
  id: SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: SetIsHyphenationEnabled(DependencyObject,Boolean)
  nameWithType: Block.SetIsHyphenationEnabled(DependencyObject,Boolean)
  fullName: System.Windows.Documents.Block.SetIsHyphenationEnabled(DependencyObject,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Sets the value of the <xref:System.Windows.Documents.Block.IsHyphenationEnabled*> attached property on a specified dependency object."
  syntax:
    content: public static void SetIsHyphenationEnabled (System.Windows.DependencyObject element, bool value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Documents.Block.IsHyphenationEnabled*> property."
    - id: value
      type: System.Boolean
      description: "The new value to set the property to."
  overload: System.Windows.Documents.Block.SetIsHyphenationEnabled*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)
  id: SetLineHeight(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: SetLineHeight(DependencyObject,Double)
  nameWithType: Block.SetLineHeight(DependencyObject,Double)
  fullName: System.Windows.Documents.Block.SetLineHeight(DependencyObject,Double)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Sets the value of the <xref:System.Windows.Documents.Block.LineHeight*> attached property for a specified dependency object."
  syntax:
    content: public static void SetLineHeight (System.Windows.DependencyObject element, double value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Documents.Block.LineHeight*> property."
    - id: value
      type: System.Double
      description: "The new value to set the property to."
  overload: System.Windows.Documents.Block.SetLineHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is negative."
  platform:
  - net462
- uid: System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  id: SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  nameWithType: Block.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  fullName: System.Windows.Documents.Block.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Sets the value of the <xref:System.Windows.Documents.Block.LineStackingStrategy*> attached property on a specified dependency object."
  syntax:
    content: public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Documents.Block.LineStackingStrategy*> property."
    - id: value
      type: System.Windows.LineStackingStrategy
      description: "The new value to set the property to."
  overload: System.Windows.Documents.Block.SetLineStackingStrategy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  id: SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: SetTextAlignment(DependencyObject,TextAlignment)
  nameWithType: Block.SetTextAlignment(DependencyObject,TextAlignment)
  fullName: System.Windows.Documents.Block.SetTextAlignment(DependencyObject,TextAlignment)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Sets the value of the <xref:System.Windows.Documents.Block.TextAlignment*> attached property for a specified dependency object."
  remarks: ''
  example:
  - <xref:System.Windows.Documents.Block.GetTextAlignment%2A>
  syntax:
    content: public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "The dependency object on which to set the value of the <xref:System.Windows.Documents.Block.TextAlignment*> property."
    - id: value
      type: System.Windows.TextAlignment
      description: "The new value to set the property to."
  overload: System.Windows.Documents.Block.SetTextAlignment*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Documents.Block.SiblingBlocks
  id: SiblingBlocks
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: SiblingBlocks
  nameWithType: Block.SiblingBlocks
  fullName: System.Windows.Documents.Block.SiblingBlocks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets a collection of <xref href=&quot;System.Windows.Documents.Block&quot;></xref> elements that are siblings to the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element."
  remarks: "The <xref:System.Windows.Documents.BlockCollection> returned by this property includes the <xref:System.Windows.Documents.Block> element through which the collection is accessed; that is, the element that owns this property is considered to be its own sibling for the purposes of generating the collection of siblings."
  syntax:
    content: public System.Windows.Documents.BlockCollection SiblingBlocks { get; }
    return:
      type: System.Windows.Documents.BlockCollection
      description: "A <xref href=&quot;System.Windows.Documents.BlockCollection&quot;></xref> that contains the child <xref href=&quot;System.Windows.Documents.Block&quot;></xref> elements that are directly hosted by the parent of the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the current <xref href=&quot;System.Windows.Documents.Block&quot;></xref> element has no parent."
  overload: System.Windows.Documents.Block.SiblingBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.TextAlignment
  id: TextAlignment
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: TextAlignment
  nameWithType: Block.TextAlignment
  fullName: System.Windows.Documents.Block.TextAlignment
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the horizontal alignment of text content."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextAlignment&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.Block.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the TextAlignment attribute of a <xref:System.Windows.Documents.Block> element.  \n  \n [!code-xml[BlockSnippets#_Block_TextAlignmentXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_textalignmentxaml)]  \n  \n The following figure shows how the preceding example renders with <xref:System.Windows.TextAlignment> text alignment (the default).  \n  \n ![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png \"Screenshot: TextAlign property value of Left\")  \n  \n The following figure shows how the same example renders with <xref:System.Windows.TextAlignment> text alignment.  \n  \n ![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png \"Screenshot: TextAlign value of Right\")  \n  \n The following figure shows how the same example renders with <xref:System.Windows.TextAlignment> text alignment.  \n  \n ![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png \"Screenshot: TextAlign property value of Center\")  \n  \n The following example shows how to set the TextAlignment property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_TextAlignment](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_textalignment)]\n [!code-cs[BlockSnippets#_Block_TextAlignment](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_textalignment)]"
  syntax:
    content: public System.Windows.TextAlignment TextAlignment { get; set; }
    return:
      type: System.Windows.TextAlignment
      description: "One of the <xref href=&quot;System.Windows.TextAlignment&quot;></xref> values that specifies the desired alignment. The default is <xref href=&quot;System.Windows.TextAlignment&quot;></xref>."
  overload: System.Windows.Documents.Block.TextAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Block.TextAlignmentProperty
  id: TextAlignmentProperty
  parent: System.Windows.Documents.Block
  langs:
  - csharp
  name: TextAlignmentProperty
  nameWithType: Block.TextAlignmentProperty
  fullName: System.Windows.Documents.Block.TextAlignmentProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.Block.TextAlignment*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Documents.TextElement
  isExternal: false
  name: System.Windows.Documents.TextElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Documents.Block.#ctor
  parent: System.Windows.Documents.Block
  isExternal: false
  name: Block()
  nameWithType: Block.Block()
  fullName: System.Windows.Documents.Block.Block()
- uid: System.Windows.Documents.Block.BorderBrush
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BorderBrush
  nameWithType: Block.BorderBrush
  fullName: System.Windows.Documents.Block.BorderBrush
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Documents.Block.BorderBrushProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BorderBrushProperty
  nameWithType: Block.BorderBrushProperty
  fullName: System.Windows.Documents.Block.BorderBrushProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.Block.BorderThickness
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BorderThickness
  nameWithType: Block.BorderThickness
  fullName: System.Windows.Documents.Block.BorderThickness
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Documents.Block.BorderThicknessProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BorderThicknessProperty
  nameWithType: Block.BorderThicknessProperty
  fullName: System.Windows.Documents.Block.BorderThicknessProperty
- uid: System.Windows.Documents.Block.BreakColumnBefore
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BreakColumnBefore
  nameWithType: Block.BreakColumnBefore
  fullName: System.Windows.Documents.Block.BreakColumnBefore
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.Block.BreakColumnBeforeProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BreakColumnBeforeProperty
  nameWithType: Block.BreakColumnBeforeProperty
  fullName: System.Windows.Documents.Block.BreakColumnBeforeProperty
- uid: System.Windows.Documents.Block.BreakPageBefore
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BreakPageBefore
  nameWithType: Block.BreakPageBefore
  fullName: System.Windows.Documents.Block.BreakPageBefore
- uid: System.Windows.Documents.Block.BreakPageBeforeProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BreakPageBeforeProperty
  nameWithType: Block.BreakPageBeforeProperty
  fullName: System.Windows.Documents.Block.BreakPageBeforeProperty
- uid: System.Windows.Documents.Block.ClearFloaters
  parent: System.Windows.Documents.Block
  isExternal: false
  name: ClearFloaters
  nameWithType: Block.ClearFloaters
  fullName: System.Windows.Documents.Block.ClearFloaters
- uid: System.Windows.WrapDirection
  parent: System.Windows
  isExternal: false
  name: WrapDirection
  nameWithType: WrapDirection
  fullName: System.Windows.WrapDirection
- uid: System.Windows.Documents.Block.ClearFloatersProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: ClearFloatersProperty
  nameWithType: Block.ClearFloatersProperty
  fullName: System.Windows.Documents.Block.ClearFloatersProperty
- uid: System.Windows.Documents.Block.FlowDirection
  parent: System.Windows.Documents.Block
  isExternal: false
  name: FlowDirection
  nameWithType: Block.FlowDirection
  fullName: System.Windows.Documents.Block.FlowDirection
- uid: System.Windows.FlowDirection
  parent: System.Windows
  isExternal: false
  name: FlowDirection
  nameWithType: FlowDirection
  fullName: System.Windows.FlowDirection
- uid: System.Windows.Documents.Block.FlowDirectionProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: FlowDirectionProperty
  nameWithType: Block.FlowDirectionProperty
  fullName: System.Windows.Documents.Block.FlowDirectionProperty
- uid: System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetIsHyphenationEnabled(DependencyObject)
  nameWithType: Block.GetIsHyphenationEnabled(DependencyObject)
  fullName: System.Windows.Documents.Block.GetIsHyphenationEnabled(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetLineHeight(DependencyObject)
  nameWithType: Block.GetLineHeight(DependencyObject)
  fullName: System.Windows.Documents.Block.GetLineHeight(DependencyObject)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetLineStackingStrategy(DependencyObject)
  nameWithType: Block.GetLineStackingStrategy(DependencyObject)
  fullName: System.Windows.Documents.Block.GetLineStackingStrategy(DependencyObject)
- uid: System.Windows.LineStackingStrategy
  parent: System.Windows
  isExternal: false
  name: LineStackingStrategy
  nameWithType: LineStackingStrategy
  fullName: System.Windows.LineStackingStrategy
- uid: System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetTextAlignment(DependencyObject)
  nameWithType: Block.GetTextAlignment(DependencyObject)
  fullName: System.Windows.Documents.Block.GetTextAlignment(DependencyObject)
- uid: System.Windows.TextAlignment
  parent: System.Windows
  isExternal: false
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: System.Windows.TextAlignment
- uid: System.Windows.Documents.Block.IsHyphenationEnabled
  parent: System.Windows.Documents.Block
  isExternal: false
  name: IsHyphenationEnabled
  nameWithType: Block.IsHyphenationEnabled
  fullName: System.Windows.Documents.Block.IsHyphenationEnabled
- uid: System.Windows.Documents.Block.IsHyphenationEnabledProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: IsHyphenationEnabledProperty
  nameWithType: Block.IsHyphenationEnabledProperty
  fullName: System.Windows.Documents.Block.IsHyphenationEnabledProperty
- uid: System.Windows.Documents.Block.LineHeight
  parent: System.Windows.Documents.Block
  isExternal: false
  name: LineHeight
  nameWithType: Block.LineHeight
  fullName: System.Windows.Documents.Block.LineHeight
- uid: System.Windows.Documents.Block.LineHeightProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: LineHeightProperty
  nameWithType: Block.LineHeightProperty
  fullName: System.Windows.Documents.Block.LineHeightProperty
- uid: System.Windows.Documents.Block.LineStackingStrategy
  parent: System.Windows.Documents.Block
  isExternal: false
  name: LineStackingStrategy
  nameWithType: Block.LineStackingStrategy
  fullName: System.Windows.Documents.Block.LineStackingStrategy
- uid: System.Windows.Documents.Block.LineStackingStrategyProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: LineStackingStrategyProperty
  nameWithType: Block.LineStackingStrategyProperty
  fullName: System.Windows.Documents.Block.LineStackingStrategyProperty
- uid: System.Windows.Documents.Block.Margin
  parent: System.Windows.Documents.Block
  isExternal: false
  name: Margin
  nameWithType: Block.Margin
  fullName: System.Windows.Documents.Block.Margin
- uid: System.Windows.Documents.Block.MarginProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: MarginProperty
  nameWithType: Block.MarginProperty
  fullName: System.Windows.Documents.Block.MarginProperty
- uid: System.Windows.Documents.Block.NextBlock
  parent: System.Windows.Documents.Block
  isExternal: false
  name: NextBlock
  nameWithType: Block.NextBlock
  fullName: System.Windows.Documents.Block.NextBlock
- uid: System.Windows.Documents.Block
  parent: System.Windows.Documents
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: System.Windows.Documents.Block
- uid: System.Windows.Documents.Block.Padding
  parent: System.Windows.Documents.Block
  isExternal: false
  name: Padding
  nameWithType: Block.Padding
  fullName: System.Windows.Documents.Block.Padding
- uid: System.Windows.Documents.Block.PaddingProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: PaddingProperty
  nameWithType: Block.PaddingProperty
  fullName: System.Windows.Documents.Block.PaddingProperty
- uid: System.Windows.Documents.Block.PreviousBlock
  parent: System.Windows.Documents.Block
  isExternal: false
  name: PreviousBlock
  nameWithType: Block.PreviousBlock
  fullName: System.Windows.Documents.Block.PreviousBlock
- uid: System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetIsHyphenationEnabled(DependencyObject,Boolean)
  nameWithType: Block.SetIsHyphenationEnabled(DependencyObject,Boolean)
  fullName: System.Windows.Documents.Block.SetIsHyphenationEnabled(DependencyObject,Boolean)
- uid: System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetLineHeight(DependencyObject,Double)
  nameWithType: Block.SetLineHeight(DependencyObject,Double)
  fullName: System.Windows.Documents.Block.SetLineHeight(DependencyObject,Double)
- uid: System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  nameWithType: Block.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
  fullName: System.Windows.Documents.Block.SetLineStackingStrategy(DependencyObject,LineStackingStrategy)
- uid: System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetTextAlignment(DependencyObject,TextAlignment)
  nameWithType: Block.SetTextAlignment(DependencyObject,TextAlignment)
  fullName: System.Windows.Documents.Block.SetTextAlignment(DependencyObject,TextAlignment)
- uid: System.Windows.Documents.Block.SiblingBlocks
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SiblingBlocks
  nameWithType: Block.SiblingBlocks
  fullName: System.Windows.Documents.Block.SiblingBlocks
- uid: System.Windows.Documents.BlockCollection
  parent: System.Windows.Documents
  isExternal: false
  name: BlockCollection
  nameWithType: BlockCollection
  fullName: System.Windows.Documents.BlockCollection
- uid: System.Windows.Documents.Block.TextAlignment
  parent: System.Windows.Documents.Block
  isExternal: false
  name: TextAlignment
  nameWithType: Block.TextAlignment
  fullName: System.Windows.Documents.Block.TextAlignment
- uid: System.Windows.Documents.Block.TextAlignmentProperty
  parent: System.Windows.Documents.Block
  isExternal: false
  name: TextAlignmentProperty
  nameWithType: Block.TextAlignmentProperty
  fullName: System.Windows.Documents.Block.TextAlignmentProperty
- uid: System.Windows.Documents.Block.#ctor*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: Block
  nameWithType: Block.Block
- uid: System.Windows.Documents.Block.BorderBrush*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BorderBrush
  nameWithType: Block.BorderBrush
- uid: System.Windows.Documents.Block.BorderThickness*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BorderThickness
  nameWithType: Block.BorderThickness
- uid: System.Windows.Documents.Block.BreakColumnBefore*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BreakColumnBefore
  nameWithType: Block.BreakColumnBefore
- uid: System.Windows.Documents.Block.BreakPageBefore*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: BreakPageBefore
  nameWithType: Block.BreakPageBefore
- uid: System.Windows.Documents.Block.ClearFloaters*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: ClearFloaters
  nameWithType: Block.ClearFloaters
- uid: System.Windows.Documents.Block.FlowDirection*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: FlowDirection
  nameWithType: Block.FlowDirection
- uid: System.Windows.Documents.Block.GetIsHyphenationEnabled*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetIsHyphenationEnabled
  nameWithType: Block.GetIsHyphenationEnabled
- uid: System.Windows.Documents.Block.GetLineHeight*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetLineHeight
  nameWithType: Block.GetLineHeight
- uid: System.Windows.Documents.Block.GetLineStackingStrategy*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetLineStackingStrategy
  nameWithType: Block.GetLineStackingStrategy
- uid: System.Windows.Documents.Block.GetTextAlignment*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: GetTextAlignment
  nameWithType: Block.GetTextAlignment
- uid: System.Windows.Documents.Block.IsHyphenationEnabled*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: IsHyphenationEnabled
  nameWithType: Block.IsHyphenationEnabled
- uid: System.Windows.Documents.Block.LineHeight*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: LineHeight
  nameWithType: Block.LineHeight
- uid: System.Windows.Documents.Block.LineStackingStrategy*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: LineStackingStrategy
  nameWithType: Block.LineStackingStrategy
- uid: System.Windows.Documents.Block.Margin*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: Margin
  nameWithType: Block.Margin
- uid: System.Windows.Documents.Block.NextBlock*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: NextBlock
  nameWithType: Block.NextBlock
- uid: System.Windows.Documents.Block.Padding*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: Padding
  nameWithType: Block.Padding
- uid: System.Windows.Documents.Block.PreviousBlock*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: PreviousBlock
  nameWithType: Block.PreviousBlock
- uid: System.Windows.Documents.Block.SetIsHyphenationEnabled*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetIsHyphenationEnabled
  nameWithType: Block.SetIsHyphenationEnabled
- uid: System.Windows.Documents.Block.SetLineHeight*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetLineHeight
  nameWithType: Block.SetLineHeight
- uid: System.Windows.Documents.Block.SetLineStackingStrategy*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetLineStackingStrategy
  nameWithType: Block.SetLineStackingStrategy
- uid: System.Windows.Documents.Block.SetTextAlignment*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SetTextAlignment
  nameWithType: Block.SetTextAlignment
- uid: System.Windows.Documents.Block.SiblingBlocks*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: SiblingBlocks
  nameWithType: Block.SiblingBlocks
- uid: System.Windows.Documents.Block.TextAlignment*
  parent: System.Windows.Documents.Block
  isExternal: false
  name: TextAlignment
  nameWithType: Block.TextAlignment
