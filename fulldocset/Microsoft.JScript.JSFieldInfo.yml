### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.JSFieldInfo
  id: JSFieldInfo
  children:
  - Microsoft.JScript.JSFieldInfo.Attributes
  - Microsoft.JScript.JSFieldInfo.DeclaringType
  - Microsoft.JScript.JSFieldInfo.FieldHandle
  - Microsoft.JScript.JSFieldInfo.FieldType
  - Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)
  - Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)
  - Microsoft.JScript.JSFieldInfo.GetValue(System.Object)
  - Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)
  - Microsoft.JScript.JSFieldInfo.MemberType
  - Microsoft.JScript.JSFieldInfo.Name
  - Microsoft.JScript.JSFieldInfo.ReflectedType
  - Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)
  - Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: JSFieldInfo
  nameWithType: JSFieldInfo
  fullName: Microsoft.JScript.JSFieldInfo
  type: Class
  summary: "Wraps a <xref:System.Reflection.FieldInfo> object."
  syntax:
    content: 'public sealed class JSFieldInfo : System.Reflection.FieldInfo'
  inheritance:
  - System.Reflection.FieldInfo
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.Attributes
  id: Attributes
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: JSFieldInfo.Attributes
  fullName: Microsoft.JScript.JSFieldInfo.Attributes
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the attributes that are associated with this field."
  syntax:
    content: public override System.Reflection.FieldAttributes Attributes { get; }
    return:
      type: System.Reflection.FieldAttributes
      description: "A bitwise combination of the enumeration values."
  overload: Microsoft.JScript.JSFieldInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.DeclaringType
  id: DeclaringType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: JSFieldInfo.DeclaringType
  fullName: Microsoft.JScript.JSFieldInfo.DeclaringType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the type that declares this field."
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: "The <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> object for the class that declares this member."
  overload: Microsoft.JScript.JSFieldInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.FieldHandle
  id: FieldHandle
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: FieldHandle
  nameWithType: JSFieldInfo.FieldHandle
  fullName: Microsoft.JScript.JSFieldInfo.FieldHandle
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets a handle to the internal metadata representation of this field."
  syntax:
    content: public override RuntimeFieldHandle FieldHandle { get; }
    return:
      type: System.RuntimeFieldHandle
      description: "A handle to the internal metadata representation of this field."
  overload: Microsoft.JScript.JSFieldInfo.FieldHandle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.FieldType
  id: FieldType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: FieldType
  nameWithType: JSFieldInfo.FieldType
  fullName: Microsoft.JScript.JSFieldInfo.FieldType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the type of this field."
  syntax:
    content: public override Type FieldType { get; }
    return:
      type: System.Type
      description: "The type of this field."
  overload: Microsoft.JScript.JSFieldInfo.FieldType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Returns an array that contains the custom attributes that are attached to this field."
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to search this member&quot;s inheritance hierarchy to find the attributes."
    return:
      type: System.Object[]
      description: "An array of <xref:System.Reflection.FieldInfo> objects that has zero elements."
  overload: Microsoft.JScript.JSFieldInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Returns an array that contains the custom attributes that are attached to this field, searching only for attributes of the specified type."
  syntax:
    content: public override object[] GetCustomAttributes (Type t, bool inherit);
    parameters:
    - id: t
      type: System.Type
      description: "The type of attribute to search for."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to search this member&quot;s inheritance hierarchy to find the attributes."
    return:
      type: System.Object[]
      description: "An array of <xref:System.Reflection.FieldInfo> objects that has zero elements."
  overload: Microsoft.JScript.JSFieldInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: GetValue(Object)
  nameWithType: JSFieldInfo.GetValue(Object)
  fullName: Microsoft.JScript.JSFieldInfo.GetValue(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the value of the field."
  syntax:
    content: public override object GetValue (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object whose field value will be returned."
    return:
      type: System.Object
      description: "The value of the field."
  overload: Microsoft.JScript.JSFieldInfo.GetValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: JSFieldInfo.IsDefined(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Determines whether the specified attribute type is attached to this field."
  syntax:
    content: public override bool IsDefined (Type type, bool inherit);
    parameters:
    - id: type
      type: System.Type
      description: "The attribute type to search for."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to search this member&quot;s inheritance hierarchy to find the attributes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: Microsoft.JScript.JSFieldInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.MemberType
  id: MemberType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: JSFieldInfo.MemberType
  fullName: Microsoft.JScript.JSFieldInfo.MemberType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the type of member that this field is. Identifies the type of class derived from <xref:System.Reflection.MemberInfo> that this class derives from."
  syntax:
    content: public override System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>, because this class derives from <xref:System.Reflection.FieldInfo>."
  overload: Microsoft.JScript.JSFieldInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.Name
  id: Name
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: Name
  nameWithType: JSFieldInfo.Name
  fullName: Microsoft.JScript.JSFieldInfo.Name
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the name of this field."
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "The name of this field."
  overload: Microsoft.JScript.JSFieldInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.ReflectedType
  id: ReflectedType
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: JSFieldInfo.ReflectedType
  fullName: Microsoft.JScript.JSFieldInfo.ReflectedType
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Gets the class object that was used to obtain this instance through reflection."
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: "The <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> object that was used to obtain this method."
  overload: Microsoft.JScript.JSFieldInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: SetValue(Object,Object)
  nameWithType: JSFieldInfo.SetValue(Object,Object)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Sets the value of the field, using the specified value."
  syntax:
    content: public void SetValue (object obj, object value);
    parameters:
    - id: obj
      type: System.Object
      description: "The object whose field value will be set."
    - id: value
      type: System.Object
      description: "The value to assign to the field."
  overload: Microsoft.JScript.JSFieldInfo.SetValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: Microsoft.JScript.JSFieldInfo
  langs:
  - csharp
  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  nameWithType: JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Sets the value of the field, using the specified value, culture, and binding information."
  syntax:
    content: public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "The object whose field value will be set."
    - id: value
      type: System.Object
      description: "The value to assign to the field."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "A bitwise combination of the enumeration values that control the binding."
    - id: binder
      type: System.Reflection.Binder
      description: "A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Provides information about a specific culture or locale. Used to format numbers, dates, and strings correctly."
  overload: Microsoft.JScript.JSFieldInfo.SetValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Reflection.FieldInfo
  isExternal: false
  name: System.Reflection.FieldInfo
- uid: Microsoft.JScript.JSFieldInfo.Attributes
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Attributes
  nameWithType: JSFieldInfo.Attributes
  fullName: Microsoft.JScript.JSFieldInfo.Attributes
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: Microsoft.JScript.JSFieldInfo.DeclaringType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: DeclaringType
  nameWithType: JSFieldInfo.DeclaringType
  fullName: Microsoft.JScript.JSFieldInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.JScript.JSFieldInfo.FieldHandle
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldHandle
  nameWithType: JSFieldInfo.FieldHandle
  fullName: Microsoft.JScript.JSFieldInfo.FieldHandle
- uid: System.RuntimeFieldHandle
  parent: System
  isExternal: true
  name: RuntimeFieldHandle
  nameWithType: RuntimeFieldHandle
  fullName: System.RuntimeFieldHandle
- uid: Microsoft.JScript.JSFieldInfo.FieldType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldType
  nameWithType: JSFieldInfo.FieldType
  fullName: Microsoft.JScript.JSFieldInfo.FieldType
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: JSFieldInfo.GetCustomAttributes(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.GetCustomAttributes(Type,Boolean)
- uid: Microsoft.JScript.JSFieldInfo.GetValue(System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetValue(Object)
  nameWithType: JSFieldInfo.GetValue(Object)
  fullName: Microsoft.JScript.JSFieldInfo.GetValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.JSFieldInfo.IsDefined(System.Type,System.Boolean)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: JSFieldInfo.IsDefined(Type,Boolean)
  fullName: Microsoft.JScript.JSFieldInfo.IsDefined(Type,Boolean)
- uid: Microsoft.JScript.JSFieldInfo.MemberType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: MemberType
  nameWithType: JSFieldInfo.MemberType
  fullName: Microsoft.JScript.JSFieldInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: Microsoft.JScript.JSFieldInfo.Name
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Name
  nameWithType: JSFieldInfo.Name
  fullName: Microsoft.JScript.JSFieldInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.JSFieldInfo.ReflectedType
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: ReflectedType
  nameWithType: JSFieldInfo.ReflectedType
  fullName: Microsoft.JScript.JSFieldInfo.ReflectedType
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: SetValue(Object,Object)
  nameWithType: JSFieldInfo.SetValue(Object,Object)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object)
- uid: Microsoft.JScript.JSFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  nameWithType: JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
  fullName: Microsoft.JScript.JSFieldInfo.SetValue(Object,Object,BindingFlags,Binder,CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.JScript.JSFieldInfo.Attributes*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Attributes
  nameWithType: JSFieldInfo.Attributes
- uid: Microsoft.JScript.JSFieldInfo.DeclaringType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: DeclaringType
  nameWithType: JSFieldInfo.DeclaringType
- uid: Microsoft.JScript.JSFieldInfo.FieldHandle*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldHandle
  nameWithType: JSFieldInfo.FieldHandle
- uid: Microsoft.JScript.JSFieldInfo.FieldType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: FieldType
  nameWithType: JSFieldInfo.FieldType
- uid: Microsoft.JScript.JSFieldInfo.GetCustomAttributes*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: JSFieldInfo.GetCustomAttributes
- uid: Microsoft.JScript.JSFieldInfo.GetValue*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: GetValue
  nameWithType: JSFieldInfo.GetValue
- uid: Microsoft.JScript.JSFieldInfo.IsDefined*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: IsDefined
  nameWithType: JSFieldInfo.IsDefined
- uid: Microsoft.JScript.JSFieldInfo.MemberType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: MemberType
  nameWithType: JSFieldInfo.MemberType
- uid: Microsoft.JScript.JSFieldInfo.Name*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: Name
  nameWithType: JSFieldInfo.Name
- uid: Microsoft.JScript.JSFieldInfo.ReflectedType*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: ReflectedType
  nameWithType: JSFieldInfo.ReflectedType
- uid: Microsoft.JScript.JSFieldInfo.SetValue*
  parent: Microsoft.JScript.JSFieldInfo
  isExternal: false
  name: SetValue
  nameWithType: JSFieldInfo.SetValue
