### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildManager
  id: BuildManager
  children:
  - System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  - System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  - System.Web.Compilation.BuildManager.BatchCompilationEnabled
  - System.Web.Compilation.BuildManager.CodeAssemblies
  - System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  - System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.BuildManager.GetGlobalAsaxType
  - System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetReferencedAssemblies
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  - System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  - System.Web.Compilation.BuildManager.IsPrecompiledApp
  - System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  - System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  - System.Web.Compilation.BuildManager.TargetFramework
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildManager
  fullName: System.Web.Compilation.BuildManager
  type: Class
  summary: "Fornece um conjunto de métodos para ajudar a gerir a compilação de uma aplicação ASP.NET."
  remarks: "A classe de BuildManager gere o processo de compilação assemblagens e páginas de uma aplicação. É uma classe selada e não pode ser herdada.       BuildManager contém membros estáticos que fornecem informações sobre as assemblagens compiladas."
  syntax:
    content: public sealed class BuildManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  id: AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Especifica uma cadeia que representa uma dependência que utiliza o Gestor de compilação para ajudar a determinar se é necessária uma compilação limpa."
  remarks: "O método tem de ser chamado durante o `Application_PreStartInit` fase da aplicação."
  syntax:
    content: public static void AddCompilationDependency (string dependency);
    parameters:
    - id: dependency
      type: System.String
      description: "Uma cadeia que representa uma dependência."
  overload: System.Web.Compilation.BuildManager.AddCompilationDependency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> dependency </code> parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método foi chamado após a <xref uid=&quot;langword_csharp_Application_PreStartInit&quot; name=&quot;Application_PreStartInit&quot; href=&quot;&quot;> </xref> fase da aplicação."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  id: AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Adiciona uma assemblagem ao conjunto da aplicação de assemblagens referenciadas."
  remarks: "Chamar este método é equivalente ao adicionar a assemblagem para o ficheiro Web. config do nível de aplicação. O método tem de ser chamado durante o `Application_PreStartInit` fase da aplicação.       O <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>método irá devolver o conjunto de assemblagens que são determinadas de ficheiros de configuração e todas as assemblagens que foram adicionadas através deste método.</xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>       Se é efetuada uma tentativa de adicionar uma assemblagem que já tenha sido adicionada, é ignorada a entrada duplicada.       Este método tem de ser chamado antes do `Application_Start` ocorre evento no ficheiro global. asax."
  syntax:
    content: public static void AddReferencedAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "A assemblagem para adicionar."
  overload: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> assembly </code> parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou estar vazio."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método não foi chamado antes do <xref uid=&quot;langword_csharp_Application_Start&quot; name=&quot;Application_Start&quot; href=&quot;&quot;> </xref> Ocorreu um evento no ficheiro global. asax."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  id: BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém ou define um valor que indica se a compilação de batches está ativada."
  remarks: "Esta propriedade permite-lhe ativar ou desativar a compilação de batches através de programação. Correspondendo ao `batch` atributo o `compilation` elemento no ficheiro Web. config. Para obter mais informações, consulte [compilação elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/7c319582-074a-4d2a-a787-03b9d4541c12).       A propriedade pode ser definida apenas o `PreApplicationStart` método. Para obter mais informações sobre o `PreApplicationStart` método, consulte <xref:System.Web.PreApplicationStartMethodAttribute>.</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static Nullable<bool> BatchCompilationEnabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a compilação de batches é sempre ativada, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se a compilação de batches nunca estiver ativada, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a definição de compilação é determinada a partir do ficheiro de configuração. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade não foi definida no <xref uid=&quot;langword_csharp_PreApplicationStart&quot; name=&quot;PreApplicationStart&quot; href=&quot;&quot;> </xref> método."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  id: CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém uma lista de assemblagens criadas a partir do diretório App_Code."
  syntax:
    content: public static System.Collections.IList CodeAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "Um <xref:System.Collections.IList>coleção que contém as assemblagens criadas a partir do diretório App_Code.</xref:System.Collections.IList>"
  overload: System.Web.Compilation.BuildManager.CodeAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  id: CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Cria um ficheiro em cache."
  remarks: "Este método e o <xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A>método permitem-lhe executar a colocação em cache que persiste entre reinícios de domínio de aplicação em ambientes de fidedignidade parcial.</xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> É utilizado pelo framework MVC para os resultados da cache da pesquisa de controlador.       Dados em cache, escrever para o <xref:System.IO.Stream>objeto é devolvido por este método.</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream CreateCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome do ficheiro a criar."
    return:
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>objeto para o novo ficheiro.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.CreateCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  id: CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Processa um ficheiro, fornecidos o caminho virtual e cria uma instância do resultado."
  remarks: "O método CreateInstanceFromVirtualPath funciona para páginas compiladas e não compilação."
  syntax:
    content: public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual do ficheiro para criar uma instância do."
    - id: requiredBaseType
      type: System.Type
      description: "O tipo de base que define o objeto ser criado."
    return:
      type: System.Object
      description: "O <xref:System.Object>que representa a instância do ficheiro processado.</xref:System.Object>"
  overload: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve uma dependência de compilação definido para um caminho virtual se o caminho está localizado na cache do ASP.NET."
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O contexto do pedido."
    - id: virtualPath
      type: System.String
      description: "O caminho virtual da qual pode determinar o conjunto de dependência de compilação."
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> objeto que está armazenado na cache, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> não é possível obter o objeto da cache."
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve uma dependência de compilação definido para um caminho virtual, se o caminho se encontrar na cache de ASP.NET, mesmo que o conteúdo não está atualizado."
  remarks: "Se o `ensureIsUpToDate` valor do parâmetro está definido como `true`, a sobrecarga de método GetCachedBuildDependencySet tem o mesmo comportamento de <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName>sobrecarga de método.</xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> Ambas as sobrecargas devolverem uma dependência de compilação atual definida se existir, caso contrário, devolvem `null`.       No entanto, a sobrecarga de método GetCachedBuildDependencySet inclui a opção para devolver qualquer conjunto de dependência de compilação que está disponível, mesmo um desatualizada. Se o `ensureIsUpToDate` valor do parâmetro está definido como `false`, o método irá devolver qualquer conjunto de dependência de compilação disponíveis."
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O contexto do pedido."
    - id: virtualPath
      type: System.String
      description: "O caminho virtual da qual pode determinar o conjunto de dependência de compilação."
    - id: ensureIsUpToDate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para especificar que apenas um atual criar dependência deve ser devolvido conjunto, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para indicar que deve ser devolvido qualquer conjunto de dependência de compilação disponível, mesmo se não for atual. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> objeto que está armazenado na cache, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> não é possível obter o objeto da cache."
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  id: GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila um ficheiro para uma assemblagem com o caminho virtual especificado."
  syntax:
    content: public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para criar para uma assemblagem."
    return:
      type: System.Reflection.Assembly
      description: "Um <xref:System.Reflection.Assembly>objeto que está compilado do caminho virtual especificado, que é colocado em cache para a memória ou para disco.</xref:System.Reflection.Assembly>"
  overload: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  id: GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila um ficheiro, fornecidos o caminho virtual e devolve uma cadeia personalizada que o fornecedor de compilação persistir na cache."
  syntax:
    content: public static string GetCompiledCustomString (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual do ficheiro a criar."
    return:
      type: System.String
      description: "Uma cadeia, tal como devolvido pelo <xref:System.Web.Compilation.BuildProvider.GetCustomString*>método, o que é colocado em cache para disco ou memória.</xref:System.Web.Compilation.BuildProvider.GetCustomString*>"
  overload: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila um ficheiro, fornecidos o caminho virtual e devolve o tipo compilado."
  syntax:
    content: public static Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para criar para um tipo."
    return:
      type: System.Type
      description: "Um <xref:System.Type>objeto que representa o tipo gerado a partir de compilar o caminho virtual.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetCompiledType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ocorreu um erro ao compilar o caminho virtual."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  id: GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém um objecto que representa o tipo de compilada para o ficheiro global. asax."
  remarks: "Se este método é denominado antes do ficheiro global. asax tenha sido compilado, é emitida uma exceção."
  syntax:
    content: public static Type GetGlobalAsaxType ();
    parameters: []
    return:
      type: System.Type
      description: "Um objeto que representa o tipo de compilada para o ficheiro global. asax."
  overload: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi efetuada uma tentativa de chamar este método antes da página de global. asax foi compilada."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  id: GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém uma fábrica de objeto para o caminho virtual especificado."
  remarks: "Este método devolve um objeto que permite-lhe gerar um tipo ao compilar o caminho virtual. Devolve um objeto independentemente se o Web site está pré-compilada."
  syntax:
    content: public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual."
    - id: throwIfNotFound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para gerar um erro se o caminho virtual não existe caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se o caminho virtual não existe e `throwIfNotFound` é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, este método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Util.IWebObjectFactory
      description: "A fábrica do objeto."
  overload: System.Web.Compilation.BuildManager.GetObjectFactory*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O caminho virtual não existe.       - ou - uma nível mais elevada exceção já existia ao chamar este método.       - ou - este método foi chamado durante o processo de compilação estava a construir os ficheiros de nível superior.       - ou - esta é uma aplicação pré-compilada e o caminho virtual não foi encontrado na cache.       - ou - foi detetada uma referência circular."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve uma lista de referências de assemblagem tem de referenciar todas as compilações de página."
  remarks: "A coleção de assemblagens, que é devolvida do método GetReferencedAssemblies inclui assemblagens especificadas no elemento do ficheiro Web. config, a assemblagens criadas a partir do código personalizado no diretório App_Code e as assemblagens noutras pastas de nível superior.       GetReferencedAssemblies é apresentado no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões do .NET Framework e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Collections.ICollection GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>coleção de referências de assemblagem.</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Localiza um tipo em assemblagens de nível superior, ou em assemblagens que são definidas na configuração e, opcionalmente, emite uma exceção em caso de falha."
  remarks: "Uma assemblagem de nível superior refere-se para o ficheiro global. asax ou para um ficheiro que está no diretório App_GlobalResources, App_WebReferences, App_Code ou App_Browsers."
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para acionar uma excepção se um <xref:System.Type>objeto não pode ser gerado para o nome do tipo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Type
      description: "A <xref:System.Type>objeto que representa o pedido <code> typeName </code> parâmetro.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Localiza um tipo de assemblagens de nível superior, ou em assemblagens que são definidas na configuração, utilizando uma procura sensível e, opcionalmente, gerar uma exceção em caso de falha."
  remarks: "Uma assemblagem de nível superior refere-se para o ficheiro global. asax ou para um ficheiro que está no diretório App_GlobalResources, App_WebReferences, App_Code ou App_Browsers."
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para acionar uma excepção se um <xref:System.Type>não pode ser gerado para o nome do tipo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se `typeName` é maiúsculas e minúsculas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type
      description: "A <xref:System.Type>objeto que representa o pedido <code> typeName </code> parâmetro.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  id: GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Fornece uma coleção de dependências de caminho virtual para um caminho virtual especificado."
  syntax:
    content: public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual utilizado para determinar as dependências."
    return:
      type: System.Collections.ICollection
      description: "Uma <xref:System.Collections.ICollection>coleção de ficheiros representado pelo caminhos virtuais que estão a colocação em cache as dependências para o caminho virtual.</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  id: IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém um valor que especifica se a aplicação é pré-compilada."
  syntax:
    content: public static bool IsPrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a aplicação é pré-compilada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  id: IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém um valor que especifica se a aplicação é pré-compilada como atualizável."
  syntax:
    content: public static bool IsUpdatablePrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a aplicação é pré-compilada como atualizável; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  id: ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Lê um ficheiro em cache."
  remarks: "Este método e o <xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A>método permitem-lhe executar a colocação em cache que persiste entre reinícios de domínio de aplicação em ambientes de fidedignidade parcial.</xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> É utilizado pelo framework MVC para os resultados da cache da pesquisa de controlador.       Para obter dados em cache, é lida a <xref:System.IO.Stream>objeto é devolvido por este método.</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream ReadCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome do ficheiro para leitura."
    return:
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>objeto para o ficheiro ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o ficheiro não existe.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.ReadCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.TargetFramework
  id: TargetFramework
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Obtém a versão de destino do .NET Framework para o Web site atual."
  remarks: "Esta propriedade suporta a funcionalidade de filtragem de várias ASP.NET, que permite-lhe utilizar a versão mais recente do [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] para desenvolver aplicações que serão executados com versões anteriores do .NET Framework. Um fornecedor de compilação pode utilizar esta propriedade para se certificar de que o fornecedor gera o código que é adequado para a versão especificada do .NET Framework. Por exemplo, pode querer gerar código diferente consoante se um destinos de Web sites a [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] ou [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]. Para obter mais informações sobre a filtragem de várias, consulte [filtragem múltipla do .NET Framework para projetos Web de ASP.NET](~/add/includes/ajax-current-ext-md.md).       Se o Web site não tiver um ficheiro Web. config, ASP.NET parte do princípio de que a versão do framework de destino é a versão que está associada ao conjunto de aplicações do IIS que o site está a ser executado. Para um Web site do sistema de ficheiros que está a executar no Visual Studio, a versão do framework predefinida é a versão atual do [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].       Se o Web site tiver um ficheiro Web. config, o ASP.NET determina o framework de destino, examinando o ficheiro Web. config.      ## Web Sites que visam as aplicações Web do .NET Framework 2.0 que o destino de [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] são compilados como se o destino foram o [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]. O processo de compilação não distingue entre o [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] e [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] porque o ficheiro Web. config não indicar o framework de destino ou a versão do compilador quando um dessas versões é direcionado. (Para o [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)], o ficheiro Web. config especifica uma versão do compilador e para o [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], o ficheiro Web. config especifica o framework de destino.) Por conseguinte, para aplicações Web que o destino de [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], esta propriedade devolve um moniker do framework de destino que indica o [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)].       Isto normalmente será não causa quaisquer problemas. [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]impede a criação de referências a [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] funcionalidades num projeto que se destina a [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]. Por exemplo, [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] não fornece modelos de item para serviços do WCF num projeto que se destina [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], porque a WCF foi introduzido com o [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] e não é compatível com o [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)].       Se planeia implementar um Web site num [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] ambiente de tempo de execução e utilize uma ferramenta que [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] às funcionalidades de referência que são compatíveis apenas com [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)], poderá criar o projeto sem gerar erros ou avisos. No entanto, a aplicação poderá gerar erros quando o Web site é executada [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]."
  syntax:
    content: public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: "A versão de destino do .NET Framework para o Web site atual."
  overload: System.Web.Compilation.BuildManager.TargetFramework*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
- uid: System.Web.Compilation.BuildDependencySet
  parent: System.Web.Compilation
  isExternal: false
  name: BuildDependencySet
  nameWithType: BuildDependencySet
  fullName: System.Web.Compilation.BuildDependencySet
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
- uid: System.Web.Util.IWebObjectFactory
  parent: System.Web.Util
  isExternal: false
  name: IWebObjectFactory
  nameWithType: IWebObjectFactory
  fullName: System.Web.Util.IWebObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
- uid: System.Web.Compilation.BuildManager.TargetFramework
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency
  nameWithType: BuildManager.AddCompilationDependency
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly
  nameWithType: BuildManager.AddReferencedAssembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
- uid: System.Web.Compilation.BuildManager.CodeAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
- uid: System.Web.Compilation.BuildManager.CreateCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile
  nameWithType: BuildManager.CreateCachedFile
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath
  nameWithType: BuildManager.CreateInstanceFromVirtualPath
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet
  nameWithType: BuildManager.GetCachedBuildDependencySet
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly
  nameWithType: BuildManager.GetCompiledAssembly
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString
  nameWithType: BuildManager.GetCompiledCustomString
- uid: System.Web.Compilation.BuildManager.GetCompiledType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: BuildManager.GetCompiledType
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType
  nameWithType: BuildManager.GetGlobalAsaxType
- uid: System.Web.Compilation.BuildManager.GetObjectFactory*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory
  nameWithType: BuildManager.GetObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies
  nameWithType: BuildManager.GetReferencedAssemblies
- uid: System.Web.Compilation.BuildManager.GetType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType
  nameWithType: BuildManager.GetType
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies
  nameWithType: BuildManager.GetVirtualPathDependencies
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile
  nameWithType: BuildManager.ReadCachedFile
- uid: System.Web.Compilation.BuildManager.TargetFramework*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
