### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.IPv6MulticastOption
  id: IPv6MulticastOption
  children:
  - System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)
  - System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)
  - System.Net.Sockets.IPv6MulticastOption.Group
  - System.Net.Sockets.IPv6MulticastOption.InterfaceIndex
  langs:
  - csharp
  name: IPv6MulticastOption
  nameWithType: IPv6MulticastOption
  fullName: System.Net.Sockets.IPv6MulticastOption
  type: Class
  summary: "Contains option values for joining an IPv6 multicast group."
  remarks: ''
  example:
  - "The following example creates an IPv6MulticastOption object.  \n  \n [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CPP/t-system.net.sockets.ipv_1.cpp)]\n [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/VisualBasic/t-system.net.sockets.ipv_1.vb)]\n [!code-cs[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CSharp/t-system.net.sockets.ipv_1.cs)]"
  syntax:
    content: public class IPv6MulticastOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)
  id: '#ctor(System.Net.IPAddress)'
  parent: System.Net.Sockets.IPv6MulticastOption
  langs:
  - csharp
  name: IPv6MulticastOption(IPAddress)
  nameWithType: IPv6MulticastOption.IPv6MulticastOption(IPAddress)
  fullName: System.Net.Sockets.IPv6MulticastOption.IPv6MulticastOption(IPAddress)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new version of the <see cref=&quot;T:System.Net.Sockets.IPv6MulticastOption&quot;></see> class for the specified IP multicast group."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Net.Sockets.IPv6MulticastOption> object.  \n  \n [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CPP/m-system.net.sockets.ipv_1.cpp)]\n [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/VisualBasic/m-system.net.sockets.ipv_1.vb)]\n [!code-cs[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CSharp/m-system.net.sockets.ipv_1.cs)]"
  syntax:
    content: public IPv6MulticastOption (System.Net.IPAddress group);
    parameters:
    - id: group
      type: System.Net.IPAddress
      description: "The <xref:System.Net.IPAddress> of the multicast group."
  overload: System.Net.Sockets.IPv6MulticastOption.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    group is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)
  id: '#ctor(System.Net.IPAddress,System.Int64)'
  parent: System.Net.Sockets.IPv6MulticastOption
  langs:
  - csharp
  name: IPv6MulticastOption(IPAddress,Int64)
  nameWithType: IPv6MulticastOption.IPv6MulticastOption(IPAddress,Int64)
  fullName: System.Net.Sockets.IPv6MulticastOption.IPv6MulticastOption(IPAddress,Int64)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Sockets.IPv6MulticastOption&quot;></see> class with the specified IP multicast group and the local interface address."
  remarks: "The `ifindex` parameter specifies the interface on which data is received or sent."
  example:
  - "The following example creates an <xref:System.Net.Sockets.IPv6MulticastOption> object.  \n  \n [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/add/codesnippet/CPP/e62fa385-61c2-416b-895e-_1.cpp)]\n [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/add/codesnippet/VisualBasic/e62fa385-61c2-416b-895e-_1.vb)]\n [!code-cs[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/add/codesnippet/CSharp/e62fa385-61c2-416b-895e-_1.cs)]"
  syntax:
    content: public IPv6MulticastOption (System.Net.IPAddress group, long ifindex);
    parameters:
    - id: group
      type: System.Net.IPAddress
      description: "The group <xref:System.Net.IPAddress>."
    - id: ifindex
      type: System.Int64
      description: "The local interface address."
  overload: System.Net.Sockets.IPv6MulticastOption.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n    ifindex is less than 0.  \n  \n -or-  \n  \n ifindex is greater than 0x00000000FFFFFFFF."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    group is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPv6MulticastOption.Group
  id: Group
  parent: System.Net.Sockets.IPv6MulticastOption
  langs:
  - csharp
  name: Group
  nameWithType: IPv6MulticastOption.Group
  fullName: System.Net.Sockets.IPv6MulticastOption.Group
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets or sets the IP address of a multicast group."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Net.Sockets.IPv6MulticastOption> object.  \n  \n [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CPP/p-system.net.sockets.ipv_1_1.cpp)]\n [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/VisualBasic/p-system.net.sockets.ipv_1_1.vb)]\n [!code-cs[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CSharp/p-system.net.sockets.ipv_1_1.cs)]"
  syntax:
    content: public System.Net.IPAddress Group { get; set; }
    return:
      type: System.Net.IPAddress
      description: "An &lt;xref:System.Net.IPAddress&gt; that contains the Internet address of a multicast group."
  overload: System.Net.Sockets.IPv6MulticastOption.Group*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    group is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPv6MulticastOption.InterfaceIndex
  id: InterfaceIndex
  parent: System.Net.Sockets.IPv6MulticastOption
  langs:
  - csharp
  name: InterfaceIndex
  nameWithType: IPv6MulticastOption.InterfaceIndex
  fullName: System.Net.Sockets.IPv6MulticastOption.InterfaceIndex
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets or sets the interface index that is associated with a multicast group."
  remarks: "This property specifies the interface on which data is received or sent."
  example:
  - "The following example creates an <xref:System.Net.Sockets.IPv6MulticastOption> object.  \n  \n [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CPP/p-system.net.sockets.ipv_0_1.cpp)]\n [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/VisualBasic/p-system.net.sockets.ipv_0_1.vb)]\n [!code-cs[System.Net.Sockets.UdpClient.JoinMulticastGroup#4](~/add/codesnippet/CSharp/p-system.net.sockets.ipv_0_1.cs)]"
  syntax:
    content: public long InterfaceIndex { get; set; }
    return:
      type: System.Int64
      description: "A &lt;xref:System.UInt64&gt; value that specifies the address of the interface."
  overload: System.Net.Sockets.IPv6MulticastOption.InterfaceIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value that is specified for a set operation is less than 0 or greater than 0x00000000FFFFFFFF."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: IPv6MulticastOption(IPAddress)
  nameWithType: IPv6MulticastOption.IPv6MulticastOption(IPAddress)
  fullName: System.Net.Sockets.IPv6MulticastOption.IPv6MulticastOption(IPAddress)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: IPv6MulticastOption(IPAddress,Int64)
  nameWithType: IPv6MulticastOption.IPv6MulticastOption(IPAddress,Int64)
  fullName: System.Net.Sockets.IPv6MulticastOption.IPv6MulticastOption(IPAddress,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Sockets.IPv6MulticastOption.Group
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: Group
  nameWithType: IPv6MulticastOption.Group
  fullName: System.Net.Sockets.IPv6MulticastOption.Group
- uid: System.Net.Sockets.IPv6MulticastOption.InterfaceIndex
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: InterfaceIndex
  nameWithType: IPv6MulticastOption.InterfaceIndex
  fullName: System.Net.Sockets.IPv6MulticastOption.InterfaceIndex
- uid: System.Net.Sockets.IPv6MulticastOption.#ctor*
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: IPv6MulticastOption
  nameWithType: IPv6MulticastOption.IPv6MulticastOption
- uid: System.Net.Sockets.IPv6MulticastOption.Group*
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: Group
  nameWithType: IPv6MulticastOption.Group
- uid: System.Net.Sockets.IPv6MulticastOption.InterfaceIndex*
  parent: System.Net.Sockets.IPv6MulticastOption
  isExternal: false
  name: InterfaceIndex
  nameWithType: IPv6MulticastOption.InterfaceIndex
