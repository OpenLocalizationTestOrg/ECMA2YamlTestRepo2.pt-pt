### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.Collaboration.Peer
  id: Peer
  children:
  - System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose
  - System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  - System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  - System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  - System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  - System.Net.PeerToPeer.Collaboration.Peer.Invite
  - System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  - System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  - System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  - System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  - System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  - System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  - System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.Collaboration.Peer.ToString
  langs:
  - csharp
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
  type: Class
  summary: "This class represents a remote peer."
  remarks: "The purpose of the abstract Peer class is to provide a common base class definition that can be shared by derived classes such as <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> and <xref:System.Net.PeerToPeer.Collaboration.PeerContact>. It cannot be directly constructed, since it is abstract. Developers should use the subclasses PeerNearMe or PeerContact instead.       Contact, peer, remote peer, <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>, <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>, and <xref:System.Net.PeerToPeer.Collaboration.PeerContact> are synonymous terms, based on context.       &quot;Calling peer&quot; and &quot;remote peer&quot; are commonly synonymous.  Calling peer does not refer to the application calling a given method."
  syntax:
    content: 'public abstract class Peer : IDisposable, IEquatable<System.Net.PeerToPeer.Collaboration.Peer>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IEquatable<System.Net.PeerToPeer.Collaboration.Peer>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> type."
  remarks: "Returns a type <xref:System.Net.PeerToPeer.Collaboration.Peer> object, subclassed on <xref:System.Net.PeerToPeer.Collaboration.PeerContact> or <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>. The PeerContact <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> or the PeerNearMe <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> contain unique references to the name of the new peer object."
  syntax:
    content: protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "Reference to the object that holds the data needed to deserialize this instance."
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: "Context that provides the means for deserializing the data. Also referred to as the source of the serialized data."
  overload: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Releases all resources used by the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object and optionally releases the managed resources."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  id: Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Performs a case-sensitive comparison of the current <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> and the specified peer."
  remarks: "Two peers are considered equal if they have the same endpoint collection, regardless of the values in their <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> properties. Usage scenarios do not involve this class directly, but rather the derived <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> or the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> classes."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.Collaboration.Peer
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> instance to compare to this instance."
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the supplied <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> instance has the same <xref:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*> as this peer instance, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. This method also returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the peer parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Populates a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> object with the data needed to serialize the target <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> to populate with data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The destination for this serialization."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  id: GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Gets the collection of data objects from a local cache."
  remarks: "This functionality is only exposed on the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> class.  This functionality is not exposed on any other type of peer for security reasons.       If the peer collaboration session did not instantiate with a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>, this method cannot access objects on the local computer.  The same is true of the applications registered into the collaboration session.       The collection of peer objects consists of application, data object, and presence information for the peer or endpoint specified by this instance. If no objects are found for the endpoint, a collection of size zero (0) is returned. If the calling peer is subscribed to this endpoint, the cache is automatically updated; otherwise <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> must be called prior to calling this method.       The caller is not required to be signed into the collaboration infrastructure for this method to complete successfully.  A successful call to <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> or one of the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> methods must have been completed while the caller was signed in previous to calling this method.       NOTE: Additional overloads are defined on the <xref:System.Net.PeerToPeer.Collaboration.Peer> class instead of the subclasses <xref:System.Net.PeerToPeer.Collaboration.PeerContact> and <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref> collection for the peer or endpoint specified by this instance."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The caller is not subscribed to the endpoint or has not yet called <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "The method is unable to complete due to an error in the underlying Peer Collaboration infrastructure."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  id: GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Gets the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object associated with the supplied <xref:System.Guid> from the <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObjectCollection&quot;></xref>."
  remarks: "This functionality is only exposed on the <xref:System.Net.PeerToPeer.Collaboration.PeerContact> class. This functionality is not exposed on any other type of peer for security reasons.       The collection of peer objects consists of application, data object, and presence information for the peer or endpoint specified by this instance. If no objects are found for the endpoint, a collection of size zero (0) is returned. When the calling peer is subscribed to this endpoint, the cache is automatically updated; otherwise <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> must be called prior to calling this method.       The caller is not required to be signed into the collaboration infrastructure for this method to complete successfully.  A successful call to <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> or one of the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> methods must have been completed while the caller was signed in previous to calling this method. Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>. This state is created when the collaboration session begins.       NOTE: Additional overloads are defined on the <xref:System.Net.PeerToPeer.Collaboration.Peer> class instead of the derived classes <xref:System.Net.PeerToPeer.Collaboration.PeerContact> and <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);
    parameters:
    - id: objectId
      type: System.Guid
      description: "The <xref:System.Guid> of the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object to be retrieved from the collection"
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object associated with the supplied <xref:System.Guid>. If an object is not found, a collection of size zero (0) is returned."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The object ID is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The caller is not subscribed to the <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref> or has not yet called <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData*> against it."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "An error occurred when getting object information from the peer."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  id: GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Gets the available presence information for a <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref>."
  remarks: "Presence information includes status descriptors such as online, offline, and away.       Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>."
  syntax:
    content: public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);
    parameters:
    - id: peerEndPoint
      type: System.Net.PeerToPeer.Collaboration.PeerEndPoint
      description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPoint&quot;></xref> for which to retrieve presence information."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
      description: "Returns a <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerPresenceInfo&quot;></xref> object which contains presence information for an available endpoint if it is available; otherwise it is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>peerEndPoint</code> does not contain a valid endpoint."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>peerEndPoint</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This object has been disposed and cannot be used in current peer operations."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "An error occurred while retrieving presence information from the peer."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  id: Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Sends an invitation to a <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> to start a specific <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>."
  remarks: "Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>. This state is created when the Peer Collaboration session begins."
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();
    parameters: []
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref> from the peer that received the invitation."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   An error occurred during the invitation process.      -   The currently executing application is not registered with the Peer Collaboration infrastructure."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  id: Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Sends an invitation to a <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> to start a specific <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>."
  remarks: "Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>. This state is created when the peer collaboration session begins."
  syntax:
    content: public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref> for which the invitation is sent."
    - id: message
      type: System.String
      description: "A message to send to the remote peer along with the application invitation.  The message can be no more than 255 Unicode characters."
    - id: invitationData
      type: System.Byte[]
      description: "A user defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes."
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
      description: "A <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref> from the peer that received the invitation."
  overload: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The application is not registered for collaboration."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code> is larger than 16,384 bytes."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   An error occurred during the invitation process.      -   The currently executing application is not registered with the peer collaboration infrastructure."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  id: InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Begins an asynchronous invitation operation which sends an invitation to a <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> to start a specific <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>."
  remarks: "Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>. This state is created when the peer collaboration session begins."
  syntax:
    content: public abstract void InviteAsync (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "User-defined object to pass to the callback of the asynchronous operation for identification. This required parameter must be unique across all asynchronous invitation operations in progress."
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code> is <xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   An error occurred during the invitation process.      -   The currently executing application is not registered with the collaboration infrastructure."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  id: InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Begins an asynchronous invitation operation which sends an invitation to a <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> to start a specific <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref>."
  remarks: "Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>. This state is created when the peer collaboration session begins."
  syntax:
    content: public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);
    parameters:
    - id: applicationToInvite
      type: System.Net.PeerToPeer.Collaboration.PeerApplication
      description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerApplication&quot;></xref> for which the invitation is sent."
    - id: message
      type: System.String
      description: "A message to send to the remote peer along with the application invitation. The maximum size of this message is 255 Unicode characters."
    - id: invitationData
      type: System.Byte[]
      description: "A user defined data blob to associate with the invitation.  Its size can be no more than 16,384 bytes."
    - id: userToken
      type: System.Object
      description: "User-defined object to pass to the callback of the asynchronous operation for identification. This required parameter must be unique across all asynchronous invitation operations in progress."
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The application is not registered with the collaboration infrastructure."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userToken</code> is <xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>invitationData</code> is larger than 16,384 bytes."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-   An error occurred during the invitation process.      -   The currently executing application is not registered with the collaboration infrastructure."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  id: InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Cancels the invitation that was sent with the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*> method."
  remarks: "Calling this method guarantees the system will cease to wait for a <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> from the peer associated with the InviteAsync request.       Multiple invitations may be outstanding at any given time.  If the InviteAsyncCancel method is called when an asynchronous operation identified by the `userToken` is not in existence, an exception is thrown. The `userToken` object must be provided since it is used to track a specific asynchronous call. This host application-supplied object is unique for each invite request.       When this method is used, the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> event can still be raised, but the Cancelled property on the associated <xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> object will be set to `true.`       Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>."
  syntax:
    content: public void InviteAsyncCancel (object userToken);
    parameters:
    - id: userToken
      type: System.Object
      description: "User defined object to pass to the callback of the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*> operation for identification. This required parameter must be unique across all asynchronous invitation operations in progress."
  overload: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userToken</code> parameter cannot be <xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "An asynchronous invitation is not outstanding."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  id: InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Raised when the invitation process for a remote peer has completed."
  remarks: "The <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> specifies the result of the invitation operation.       Calling this method requires a <xref:System.Security.Permissions.PermissionState> of <xref:System.Security.Permissions.PermissionState>."
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> InviteCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
      description: "To be added."
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object has been disposed."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  id: IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Gets a value specifying if the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> is currently &quot;online&quot;."
  syntax:
    content: public bool IsOnline { get; }
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> is online at any of the endpoints associated with it; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       Unless specified, the default value for this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object has been disposed."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  id: OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Raises the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;></xref> event."
  remarks: "Classes that inherit from this class can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> event is raised."
  syntax:
    content: protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
      description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&quot;></xref> object containing the event data to be passed to delegates associated with the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&quot;></xref> event."
  overload: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  id: PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Gets the <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;></xref> associated with the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>."
  remarks: "When a remote peer is an intermediary for a host peer, the <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> objects contained in <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> associate with the local contacts for the remote peer."
  syntax:
    content: public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }
    return:
      type: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
      description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&quot;></xref> associated with the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>."
  overload: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref> object has been disposed."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  id: SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject*>."
  remarks: "The default set value for this property is `null`, indicating that all event handlers are called on a system thread pool thread.       This property is typically set to a UI element such as a <xref:System.Windows.Forms.Form> instance."
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "Object that implements the <xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;></xref> interface and is used by instances of this type for event handler synchronization on the thread that created it."
  overload: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The calling object has been disposed."
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Populates a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> class instance with the data required to serialize the specified <xref href=&quot;System.Net.PeerToPeer.Collaboration.PeerObject&quot;></xref> instance. A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData*> method."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> to populate with data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The destination for the serialization."
  overload: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  id: ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  langs:
  - csharp
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer.Collaboration
  summary: "Returns a <xref:System.String> representing the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*> associated with the <xref href=&quot;System.Net.PeerToPeer.Collaboration.Peer&quot;></xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String> representing the <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName*>."
  overload: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer(SerializationInfo,StreamingContext)
  nameWithType: Peer.Peer(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Peer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose()
  nameWithType: Peer.Dispose()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose()
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Peer.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals(Peer)
  nameWithType: Peer.Equals(Peer)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Equals(Peer)
- uid: System.Net.PeerToPeer.Collaboration.Peer
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: Peer
  nameWithType: Peer
  fullName: System.Net.PeerToPeer.Collaboration.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects()
  nameWithType: Peer.GetObjects()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects()
- uid: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerObjectCollection
  nameWithType: PeerObjectCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerObjectCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects(Guid)
  nameWithType: Peer.GetObjects(Guid)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetObjects(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo(PeerEndPoint)
  nameWithType: Peer.GetPresenceInfo(PeerEndPoint)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(PeerEndPoint)
- uid: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerPresenceInfo
  nameWithType: PeerPresenceInfo
  fullName: System.Net.PeerToPeer.Collaboration.PeerPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPoint
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPoint
  nameWithType: PeerEndPoint
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPoint
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite()
  nameWithType: Peer.Invite()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite()
- uid: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerInvitationResponse
  nameWithType: PeerInvitationResponse
  fullName: System.Net.PeerToPeer.Collaboration.PeerInvitationResponse
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite(PeerApplication,String,Byte[])
  nameWithType: Peer.Invite(PeerApplication,String,Byte[])
  fullName: System.Net.PeerToPeer.Collaboration.Peer.Invite(PeerApplication,String,Byte[])
- uid: System.Net.PeerToPeer.Collaboration.PeerApplication
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerApplication
  nameWithType: PeerApplication
  fullName: System.Net.PeerToPeer.Collaboration.PeerApplication
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(Object)
  nameWithType: Peer.InviteAsync(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync(PeerApplication,String,Byte[],Object)
  nameWithType: Peer.InviteAsync(PeerApplication,String,Byte[],Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(PeerApplication,String,Byte[],Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel(Object)
  nameWithType: Peer.InviteAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(Object)
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteCompleted
  nameWithType: Peer.InviteCompleted
  fullName: System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<InviteCompletedEventArgs>
  nameWithType: EventHandler<InviteCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
    name: InviteCompletedEventArgs
    nameWithType: InviteCompletedEventArgs
    fullName: InviteCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
  fullName: System.Net.PeerToPeer.Collaboration.Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted(InviteCompletedEventArgs)
  nameWithType: Peer.OnInviteCompleted(InviteCompletedEventArgs)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(InviteCompletedEventArgs)
- uid: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: InviteCompletedEventArgs
  nameWithType: InviteCompletedEventArgs
  fullName: System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
  fullName: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
  parent: System.Net.PeerToPeer.Collaboration
  isExternal: false
  name: PeerEndPointCollection
  nameWithType: PeerEndPointCollection
  fullName: System.Net.PeerToPeer.Collaboration.PeerEndPointCollection
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
  fullName: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.Collaboration.Peer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString()
  nameWithType: Peer.ToString()
  fullName: System.Net.PeerToPeer.Collaboration.Peer.ToString()
- uid: System.Net.PeerToPeer.Collaboration.Peer.#ctor*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Peer
  nameWithType: Peer.Peer
- uid: System.Net.PeerToPeer.Collaboration.Peer.Dispose*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Dispose
  nameWithType: Peer.Dispose
- uid: System.Net.PeerToPeer.Collaboration.Peer.Equals*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Equals
  nameWithType: Peer.Equals
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjectData
  nameWithType: Peer.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetObjects*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetObjects
  nameWithType: Peer.GetObjects
- uid: System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: GetPresenceInfo
  nameWithType: Peer.GetPresenceInfo
- uid: System.Net.PeerToPeer.Collaboration.Peer.Invite*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: Invite
  nameWithType: Peer.Invite
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsync*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsync
  nameWithType: Peer.InviteAsync
- uid: System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: InviteAsyncCancel
  nameWithType: Peer.InviteAsyncCancel
- uid: System.Net.PeerToPeer.Collaboration.Peer.IsOnline*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: IsOnline
  nameWithType: Peer.IsOnline
- uid: System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: OnInviteCompleted
  nameWithType: Peer.OnInviteCompleted
- uid: System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: PeerEndPoints
  nameWithType: Peer.PeerEndPoints
- uid: System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: SynchronizingObject
  nameWithType: Peer.SynchronizingObject
- uid: System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Peer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.Collaboration.Peer.ToString*
  parent: System.Net.PeerToPeer.Collaboration.Peer
  isExternal: false
  name: ToString
  nameWithType: Peer.ToString
