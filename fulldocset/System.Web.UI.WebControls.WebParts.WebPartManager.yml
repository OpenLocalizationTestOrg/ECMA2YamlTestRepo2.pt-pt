### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "Serve como a classe central do conjunto de controlo de peças Web, gerir todas as peças Web controlos, funcionalidade e eventos que ocorrem numa página Web."
  remarks: "O controlo de WebPartManager atua como o Centro de controlo ou concentrador de uma aplicação de peças Web. Tem de existir um – e apenas um – instância de controlo do WebPartManager em cada página que utiliza os controlos de peças Web. Tal como acontece com a maioria dos aspetos das aplicações de peças Web, o controlo de WebPartManager funciona apenas com utilizadores autenticados. Além disso, a sua funcionalidade funciona quase inteiramente com controlos de servidor que residem no zonas de peças Web herdarem da <xref:System.Web.UI.WebControls.WebParts.WebZone>classe.</xref:System.Web.UI.WebControls.WebParts.WebZone> Os controlos de servidor que residem numa página fora destas zonas podem ter muito pouco a funcionalidade de peças Web ou interação com o controlo de WebPartManager.       Como o hub para a funcionalidade de peças Web numa página, o controlo de WebPartManager acarreta os tipos de tarefas descritas na seguinte tabela.      | Categoria da tarefa | O que faz o controlo |   |-------------------|---------------------------|   | Controlos de peças Web de controlo | Mantém um registo dos muitos diferentes tipos de controlos numa página que fornecem funcionalidades de peças Web, incluindo controlos de <xref:System.Web.UI.WebControls.WebParts.WebPart>, ligações, zonas e outros utilizadores. |   | Adicionar e remover controlos de peças Web | Fornece os métodos para adicionar, eliminar e fechar <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos numa página. |   | Administrar ligações | Cria ligações entre controlos e monitoriza as ligações, bem como os processos de adicionar e removê-los. |   | Personalizar as páginas e controlos | Permite aos utilizadores mover os controlos para localizações diferentes numa página e inicia as vistas em que os utilizadores podem editar o aspeto, propriedades e o comportamento de controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Mantém as definições de personalização de utilizador específica em cada página. |   | Ativando ou desativando entre as vistas de outra página | Muda de uma página entre diferentes vistas especializadas da página, para que os utilizadores podem realizar algumas tarefas, tais como alterar o esquema da página ou controlos de edição. |   | Gerar eventos de ciclo de vida de peças Web | Define, gera e permite que os programadores de processar eventos de ciclo de vida dos controlos de peças Web, tal como quando controlos estão a ser adicionados, ligado, movido ou eliminado. |   | Ativar a importação e exportação dos controlos | Exporta os fluxos XML que contém o estado das propriedades de controlos de <xref:System.Web.UI.WebControls.WebParts.WebPart>e permite aos utilizadores importar os ficheiros para sua comodidade no personalizar controlos complexos outras páginas ou sites. |       A classe de WebPartManager tem um grande conjunto de propriedades.</xref:System.Web.UI.WebControls.WebParts.WebPart> Consistente com a função de WebPartManager dos outros controlos de controlo, tem um número de propriedades que fazem referência a coleções de controlos de peças Web ou outros objetos de peças Web especiais. O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>propriedades são todas as coleções utilizadas pelo controlo WebPartManager para o seu controlo e outras tarefas de gestão.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       Outro grupo de propriedades contém personalizáveis avisos que se aplicam em determinados cenários que ocorrem numa aplicação de peças Web. Estes incluem a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>e o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>Propriedades.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       A classe de WebPartManager substitui algumas das propriedades herdadas base, que são utilizadas por vários controlos de servidor Web. Estes incluem a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>Propriedades.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       Por fim, não há um grupo de propriedades útil para aceder ao estado atual da aplicação. A <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>propriedade indica o modo de visualização atual, se uma página está suplemento</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> A <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>propriedade indica se a um controlo é permitido para compor o script do lado do cliente, que é relevante em situações em que os utilizadores poderão ter browsers com funcionalidades diferentes ou tem o scripting ativada desligado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>propriedade é útil para referenciar a uma classe de utilitário que contém as chamadas para um número de métodos de peças Web importantes que são utilizadas para cenários de extensibilidade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Por ocultar as chamadas a estes métodos de uma classe separado (o <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>classe), a classe de WebPartManager proprietário API é simplificada.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>propriedade fornece acesso aos objetos personalização que armazenam as definições de personalização dos utilizadores e manter os dados no armazenamento permanente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>propriedade indica que <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo numa página atualmente selecionado pelo utilizador ou a aplicação.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>propriedade indica se os dados de personalização personalizado num <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo foi alterada.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       O controlo de WebPartManager contém cinco modos de apresentação incorporado ou vistas de uma página Web. Os programadores podem expandir esta funcionalidade, criar os modos de visualização personalizado ao alargar como a <xref:System.Web.UI.WebControls.WebParts.WebZone>classe ou a <xref:System.Web.UI.WebControls.WebParts.ToolZone>classe.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> Os utilizadores podem mudar a uma página para os vários modos de apresentação, desde que o tipo correto de controlos que correspondem a um modo de visualização fornecido estão presentes numa página.      > [!NOTE] > É possível expandir esta funcionalidade para que os utilizadores podem mudar para um modo de visualização personalizado sem ter de uma zona correspondente na página. No entanto, o comportamento predefinido é que os modos de apresentação correspondem às zonas.       Os modos de apresentação padrão são representados por campos públicos na classe WebPartManager. A tabela seguinte resume os campos e os modos de apresentação consultarem. O modo de visualização atual de uma página, conforme indicado acima, é sempre referenciado a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>propriedade e o conjunto de modos de apresentação que é possível numa página específica, dada o tipo de zonas que estão presentes na página, faz o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      | Campo | Apresentar detalhes de modo |   |-----------|--------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| A vista de utilizador normal de uma página Web; a predefinição e modo de apresentação mais comuns. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| A vista na qual os utilizadores possam reorganizar ou eliminar controlos para alterar o esquema de página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| A vista nos quais uma interface de utilizador (IU) edição fica visível; os utilizadores podem editar o aspeto, propriedades e comportamento dos controlos que são visíveis no modo de procura normal. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| A vista no qual um IU de catálogo fica visível; os utilizadores podem adicionar controlos para uma página de catálogos de controlos disponíveis. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| A vista no qual uma IU de ligação fica visível; os utilizadores podem ligar, gerir ou desligar as ligações entre controlos. |       O controlo de WebPartManager também contém um número de eventos que são críticos no ciclo de vida de peças Web páginas e controlos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Estes eventos fornecem controlo programático preciso sobre o comportamento dos controlos de peças Web. A maioria dos métodos dizem respeito diretamente para <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos (ou outros controlos de servidor ou o utilizador que são colocados em <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonas, de modo a que pode ter um comportamento como <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> No entanto, alguns eventos dizem respeito para o estado da página ou ligações na página. A tabela seguinte lista os eventos disponíveis e resume os objetivos.      > [!NOTE] > Em todos os casos na tabela seguinte, a palavra &quot;controlo&quot; refere-se a um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo ou qualquer controlo de servidor que está localizado numa zona e da aplicação com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objeto em tempo de execução.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      | Evento | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>| Ocorre antes de um controlo é adicionado a uma página para verificar se está autorizado. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>| Ocorre depois de todas as ligações numa página tem sido ativadas. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>| Ocorre imediatamente antes do processo de ativação de todas as ligações numa página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>| Ocorre depois do modo de visualização atual de uma página foi alterado. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>| Ocorre imediatamente antes do processo de alteração do modo de apresentação da página. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>| Ocorre depois da seleção de um controlo foi cancelada. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>| Ocorre imediatamente antes do processo de cancelar a seleção de um controlo. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>| Ocorre depois de um controlo foi adicionado a uma zona. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>| Ocorre imediatamente antes do processo de adicionar um controlo a uma zona. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>| Ocorre depois de um controlo ter sido fechado (removido de uma página). |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>| Ocorre imediatamente antes do processo de fecho de um controlo. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>| Ocorre depois de uma instância de um controlo dinâmico (um que foi criada através de programação ou adicionados a partir de um catálogo) foi eliminada permanentemente. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>| Ocorre imediatamente antes do processo de eliminação de um controlo dinâmico. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>| Ocorre depois de um controlo ter sido movida dentro da sua zona ou para outra zona. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>| Ocorre imediatamente antes do processo de mover um controlo. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>| Ocorre depois de dois controlos selecionados para participação numa ligação tem de estabelecer a ligação. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>| Ocorre imediatamente antes do processo de ligar duas controlos. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>| Ocorre depois de tem estado desligados dois controlos ligados. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>| Ocorre imediatamente antes do processo de desligar duas controlos. |       O controlo de WebPartManager tem vários métodos para a gestão de páginas de peças Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Um grande conjunto de métodos, não listados aqui, são métodos cujos nomes ter a forma de On*EventName*. Estes métodos normalmente elevar os respetivos evento associado e fornecem o evento com um processador do tipo <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler> A maioria destes métodos pode ser substituída por programadores que herdarem da classe de WebPartManager. Além disso, os programadores de página podem fornecer processadores personalizados para os eventos associados estes métodos. Por exemplo, na case do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>evento, um programador de página foi possível adicionar um `OnWebPartAdded` atributo para o `<asp:webpartmanager>` elemento na marcação de uma página Web e, em seguida, atribuir um método personalizado de nome para o atributo para fornecer processamento personalizado para o evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> O atributo corresponde do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>método e este padrão básico de funciona para a maior parte dos eventos de peças Web e os respetivos métodos associados de processamento de eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       Além disso, o controlo de WebPartManager tem métodos determinado a tarefa de gestão <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos (e controlos de servidor ou o utilizador utilizado como <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       Outro conjunto de métodos é especializado para ligações. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       Por fim, alguns métodos de WebPartManager focar-se a funcionalidade de personalização. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       Para mais informações sobre outros métodos de WebPartManager que estejam acessíveis através da <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>propriedade, consulte a documentação para a <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>classe.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> classe."
  remarks: "O construtor de WebPartManager inicializa várias variáveis importantes utilizadas pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Uma atribuição que diretamente afeta todas as páginas de peças Web é o facto de que o modo de visualização de página predefinida está definido para procurar o modo (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Faz com que o Active Directory todas as ligações de uma página Web que estão atualmente Inativas."
  remarks: "O método ActivateConnections denomina-se em cada pedido a uma página para ativar as ligações existentes entre <xref:System.Web.UI.WebControls.WebParts.WebPart>e outros controlos de servidor que reside no <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonas.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Em alguns casos, para a instância se existir um conflito nas ligações de que está a ser ativadas, este método por sua vez chama o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>método para terminar a ligação problemática.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Durante o processo de interrupção de ligação de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>o evento é gerado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Normalmente, os programadores podem cancelar este evento, mas nos casos em que este é um conflito entre as ligações não pode ser cancelado, porque o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo tem de resolver o conflito para concluir o processo de ativação de ligações.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Fornece o método programático padrão para adicionar <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos para uma página Web."
  remarks: "O método AddWebPart é utilizado tanto para adicionar novo dinâmico <xref:System.Web.UI.WebControls.WebParts.WebPart>controla a uma página e volte a abrir o estáticos ou dinâmicos controlos que anteriormente tem sido fechados numa página.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando se chama o método para adicionar um novo controlo, na verdade, cria uma cópia do controlo referenciado no `webPart` parâmetro. Um novo ID é gerado para a cópia do controlo, para que os programadores deverá referenciar o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo devolvido do método para obter o novo valor de ID.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando o método é chamado para reabrir um controlo anteriormente fechado, devolve uma referência direta para o controlo referenciada pelo `webPart` parâmetro.      > [!IMPORTANT] > Deve sempre utilizar o método AddWebPart, em vez do <xref:System.Web.UI.ControlCollection.Add%2A>método da coleção de controlos referenciada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>propriedade, adicionar <xref:System.Web.UI.WebControls.WebParts.WebPart>controla programaticamente para a página, porque a utilizar o <xref:System.Web.UI.ControlCollection.Add%2A>método emite uma exceção.</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> Para adicionar um controlo que não é um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo (por outras palavras, um controlo de servidor que irá ser moldado com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo em tempo de execução), deve primeiro de chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>método para criar o controlo e, em seguida, chame o método AddWebPart para adicionar o controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Para uma demonstração desta abordagem, consulte a secção de exemplo."
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (ou controlo de utilizador ou servidor) para ser adicionado a uma página Web ou abrir numa página."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> que `webPart` está a ser adicionado ao."
    - id: zoneIndex
      type: System.Int32
      description: "Um número inteiro que representa a ordinal da posição que `webPart` ocupar no `zone`relativos a outros controlos `zone`."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo que foi adicionado à página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor de <code> zoneIndex </code> é menor que zero."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>método é denominado para determinar se um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor pode ser adicionado a uma página.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "O evento AuthorizeWebPart ocorre sempre que um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo está a ser adicionado a uma página.</xref:System.Web.UI.WebControls.WebParts.WebPart> Existem vários cenários comuns em que um controlo pode ser adicionado a uma página. Para obter uma descrição completa dos seguintes, consulte a secção observações para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Quando um controlo é adicionado, tem de ser verificado para ver se o <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>propriedade foi definida e, se assim for, o controlo com a se está autorizado a ser adicionado à página.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Os programadores podem criar processadores de eventos para o evento de AuthorizeWebPart, para fornecer a filtragem para controlos. Se um controlo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>valor da propriedade não cumpre os critérios de código de processamento de eventos, o controlo não está adicionado à página.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objetos que estão disponíveis para utilizam na criação de ligações de peças Web entre os controlos do servidor."
  remarks: "Esta propriedade utiliza o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>método para criar a coleção.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> Por predefinição, também lê os transformers disponíveis do ficheiro de configuração de aplicação."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> que contém um conjunto de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objetos."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicia o processo de ligar dois <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos."
  remarks: "O método BeginWebPartConnecting existe, de modo a que o processo de que formam ligações entre controlos pode ser efetuado em fases distintas, concedendo aos programadores mais controlo sobre o processo de ligação. O método executa um conjunto de verificações iniciais para garantir que `webPart` está num Estado em que uma ligação legitimamente pode ser formada. Se `webPart` transmite as verificações, em seguida, está definido como o controlo atualmente selecionado (consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>propriedade), e pode continuar o processo de ligação.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo para o qual a ligação está a ser formada."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é o modo de visualização atual na página <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicia o processo de edição de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O método BeginWebPartEditing existe, de modo a que o processo de controlos de edição pode ser efetuado em fases distintas, concedendo aos programadores mais controlo sobre o processo. O método executa um conjunto de verificações iniciais para garantir que `webPart` está num Estado em que pode ser editada. Se `webPart` transmite as verificações, em seguida, está definido como o controlo atualmente selecionado (consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>propriedade), e o processo de edição pode continuar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo a ser editado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é o modo de visualização atual na página <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representa o modo de visualização predefinido para as páginas que contêm os controlos de peças Web. Este campo é só de leitura."
  remarks: "O campo de BrowseDisplayMode referencia um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objeto que é criado e contido o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Porque se trata de um objeto estático, pode fazer referência ao mesmo diretamente através do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe sem necessitar de uma instância do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando uma página que contém peças Web controla cargas primeiro, faz parte de BrowseDisplayMode (modo de procura) por predefinição. Quando os utilizadores simplesmente estão a navegar, tal como fariam numa página Web normal, a página permanece no modo de procura. Se pretenderem que os utilizadores personalizar uma página esquema, controlos, aspeto ou comportamento, tem de trocar a página para um dos modos de apresentação especializadas disponíveis através de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Verifica o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos que irão participar numa ligação para determinar se estão a ser ligado, quando os controlos de consumidor e fornecedor tem interfaces compatíveis e a capacidade para <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objeto não é necessária."
  remarks: "Este método é utilizado para ligar `provider` e `consumer` quando ambos os controlos têm tipos de ponto de ligação de compatível para que um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objeto não é necessária.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Pode querer utilizar este método para verificar que os dois controlos podem ser ligados antes de chamar <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>para criar uma ligação programática.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Esta sobrecarga de utiliza a mesma implementação como as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>sobrecarga de método, com a única exceção a que esta sobrecarga não necessita de um transformador.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo que fornece dados `consumer` quando os controlos estão ligados."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> que permite `provider` participar numa ligação."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo que recebe dados de `provider` quando os controlos estão ligados."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> que age como um método de chamada de retorno por isso que `consumer` podem participar numa ligação."
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se <code> provider </code> e <code> consumer </code> podem ser ligados."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Verifica o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos que irão participar numa ligação para determinar se são capazes de que está a ser ligado e utiliza um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objeto para criar a ligação entre um fornecedor e consumidor incompatível."
  remarks: "Este método é utilizado para ligar `provider` e `consumer` quando ambos os controlos têm tipos de ponto de ligação de incompatível para que um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objeto não é necessário.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Pode querer utilizar este método para verificar que os dois controlos podem ser ligados antes de chamar <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>para criar uma ligação programática.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Esta sobrecarga de utiliza a mesma implementação como as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>sobrecarga de método, com a única exceção a esta sobrecarga de necessita de um transformador.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo que fornece dados `consumer` quando os controlos estão ligados."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> que age como um método de chamada de retorno por isso que `provider` podem participar numa ligação."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo que recebe dados de `provider` quando os controlos estão ligados."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> que age como um método de chamada de retorno por isso que `consumer` podem participar numa ligação."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> que permite que um incompatível `provider` e `consumer` para estabelecer a ligação."
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se <code> provider </code> e <code> consumer </code> possa constituir uma ligação."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representa o modo de visualização utilizado para a adição de controlos do servidor de catálogo de controlos para uma página Web. Este campo é só de leitura."
  remarks: "O campo de CatalogDisplayMode referencia um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objeto que é criado e contido o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Porque se trata de um objeto estático, pode fazer referência ao mesmo diretamente através do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe sem necessitar de uma instância do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando os utilizadores querem adicionar controlos a uma página, se um catálogo de controlos de servidor estiver disponível, podem mudar a página para CatalogDisplayMode (modo de catálogo) e é apresentada a interface de utilizador (IU) do catálogo. A IU de um catálogo de peças Web é fornecida por um <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>zona controlo.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Os programadores de adicionar esta zona para a página no momento da conceção e, em seguida, adicionar controlos de servidor para a zona, para que os utilizadores irão conseguir adicionar esses controlos para as páginas em tempo de execução. Depois do programador tem adicionado estes controlos, modo de catálogo torna-se um modo de visualização suportados na página porque os controlos necessários existem ativar o modo de catálogo.       Quando um utilizador muda de uma página de modo, a zona e os controlos de servidor que foram adicionados ao mesmo ficar visível do catálogo e o utilizador pode seleccionar controlos a partir do catálogo da adicionar à página ou remova os controlos da página. Depois dos controlos foram adicionados para a página, aparecem no modo de procura normal e a página é atualizada."
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Verifica as capacidades do browser que efetua o pedido e o valor do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>propriedade, para determinar se deve compor cliente script</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se deve apresentar o script de cliente."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define um aviso que é apresentado quando um utilizador fecha um controlo que está a agir como um fornecedor para outros controlos numa ligação."
  remarks: "Quando um utilizador fecha um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar, normalmente, não é apresentada nenhuma mensagem.</xref:System.Web.UI.WebControls.WebParts.WebPart> Para obter mais informações sobre o que significa fechar um controlo, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       No entanto, quando um controlo está ligado a outro controlo e está a agir como um fornecedor de dados para o controlo de outro, será apresentada uma mensagem de aviso predefinido quando um utilizador tenta fechar o controlo. A mensagem informa os utilizadores que um controlo de fornecedor está prestes a fechar, que significa que controla ligado a este fornecedor, como consumidores deixará de ter todos os dados para consumir. A propriedade CloseProviderWarning permite aos programadores personalizar a mensagem de aviso é apresentada ao utilizador.       Se um programador de página atribui um valor de cadeia vazia ou nula para esta propriedade, nenhuma caixa de mensagem de aviso será apresentada quando um utilizador fecha um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo que é um fornecedor.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que contém a mensagem de aviso. A predefinição é uma mensagem de cultura específica fornecida pelo .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Fecha uma <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo de forma a que não é composto numa página Web, mas pode ser reaberto."
  remarks: "O método CloseWebPart remove um <xref:System.Web.UI.WebControls.WebParts.WebPart>ou outro servidor de controlo, para que não é composto na página Web que originalmente contido mesmo.</xref:System.Web.UI.WebControls.WebParts.WebPart> O controlo fechado é adicionado a um <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>objeto, que mantém uma referência para o controlo fechado e torna possível para o controlo a ser restaurado para a página.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Um fechado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo continua a aparecer na coleção referenciada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Fechar um controlo é diferente do eliminá-lo. Controlos fechados ainda estão disponíveis para serem restaurados para uma página, mas uma instância do controlo foi eliminado permanentemente é removida e nunca pode ser restaurada. Independentemente um <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlo de servidor estático (declarado na marcação de uma página) ou dinâmico (adicionado à página através de programação ou por um utilizador de um catálogo de peças Web), pode ser fechado e reaberto numa página.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Normalmente, os utilizadores podem fechar um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo clicando o menu de verbos e selecionar o verbo fechar.</xref:System.Web.UI.WebControls.WebParts.WebPart> Também pode ser fechado um controlo por diretamente chamar o método CloseWebPart e passou-a uma referência a `webPart`.       Uma página onde <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos tem sido fechados, se um programador declara um `<asp:catalogzone>` elemento e dentro do mesmo adiciona um `<asp:pagecatalogpart>` elemento, fornece uma interface simples de utilizador (IU) para os utilizadores restaurar fechados controlos para a página no tempo de execução.</xref:System.Web.UI.WebControls.WebParts.WebPart> Os utilizadores podem mudar a página no modo de apresentação do catálogo e os controlos fechados, serão apresentado no catálogo de página. Os utilizadores podem selecionar controlos fechados e adicioná-los regressar à página qualquer posição desejem e, em seguida, os controlos selecionados são restaurados para a página e compostos como normais.       Quando se chama o método CloseWebPart, gera vários eventos: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>(se existirem vários controlos), e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(se não existirem controlos ligados).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Normalmente, os programadores podem cancelar estes eventos, mas em certos casos não é possível cancelá-los. Para obter mais informações, consulte a documentação para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor que está a ser fechado num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representa o modo de visualização utilizado para apresentar uma interface de utilizador especial (IU) para os utilizadores gerir as ligações entre <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos. Este campo é só de leitura."
  remarks: "O campo de ConnectDisplayMode referencia um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objeto que é criado e contido o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Porque se trata de um objeto estático, pode fazer referência ao mesmo diretamente através do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe sem necessitar de uma instância do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando os utilizadores se pretende gerir as ligações entre <xref:System.Web.UI.WebControls.WebParts.WebPart>controla numa página Web, se um <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>zona foi declarada na página, que podem mudar a página para o modo de ConnectDisplayMode.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> O modo de visualização do connect apresenta uma IU especial para gerir ligações, que inclui a capacidade para ligar a ou desligar controlos e editar os detalhes de ligações existentes.       Se pretender fornecer aos utilizadores a capacidade de gerir ligações com a IU fornecida pelo conjunto de controlo de peças Web, tem de declarar um `<asp:connectionszone>` elemento na marcação de uma página. Ao contrário os elementos para outros tipos de <xref:System.Web.UI.WebControls.WebParts.WebZone>zonas, não terá de adicionar quaisquer outras etiquetas neste elemento; basta declarar o elemento por si só.</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para a coleção de todas as ligações atuais numa página Web."
  remarks: "A propriedade de ligações é uma forma para aceder ao conjunto atual de ligações numa página. A própria coleção é só de leitura e os programadores que pretendem manipular uma ligação específica da coleção devem utilizar <xref:System.Web.UI.WebControls.WebParts.WebPartManager>métodos de como <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> que contém um conjunto de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> objetos."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de todas as ligações de peças Web atuais numa página só não estão ligadas, mas também tem sido iniciada ativamente partilhar dados entre os controlos de consumidor e fornecedor envolvidos em cada ligação."
  remarks: "O ciclo de vida de ligações, este evento ocorre depois de uma página conclui o processo de carregamento. Também ocorre após o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>evento, o que indica apenas que o <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlos envolvidos numa ligação específica do servidor tiverem ligado com êxito.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Caso em que existem várias ligações numa página, o método ConnectionsActivated indica que todas as ligações de peças Web válidas numa página agora Active Directory e possam partilhar os dados. Saber que todas as ligações estão ativas, os programadores podem realizar qualquer número de tarefas, incluindo a notificar os utilizadores do Estado de todas as ligações, notificar controlos de consumidor para processar e apresentam dados dos respetivos fornecedores e assim sucessivamente.       Este evento está associado a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>método, o que gera o evento e permite aos programadores criar processadores personalizados para o evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       Os programadores de página podem criar um processador personalizado para o evento adicionando o `OnConnectionsActivated` atributo para o `<asp:webpartmanager>` elemento na página e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de ativação de todas as ligações de peças Web estabelecidas numa página Web."
  remarks: "O ciclo de vida de ligações, este evento ocorre como uma página for a concluir o processo de carregamento, imediatamente antes do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>método é chamado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> É diferente do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>eventos, que envolve uma ligação específica entre <xref:System.Web.UI.WebControls.WebParts.WebPart>ou outros controlos de servidor.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> O evento ConnectionsActivating ocorre quando das ligações possíveis numa página tem sido ligadas e que estão prestes a ser ativado.       O evento ConnectionsActivating está associado a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>método, o que gera o evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Os programadores do controlo que pretendem expandir o tipo de ligações que podem ser adicionados a uma página foi substituir protegida <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>método e ativar mais tipos de ligações.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       Os programadores de página podem criar um processador personalizado para o evento adicionando o `OnConnectionsActivating` atributo para o `<asp:webpartmanager>` elemento na página e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cria uma ligação entre dois <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> controla a utilizar apenas as referências para controlos e os respetivos especificado <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objetos."
  remarks: "Esta sobrecarga de é utilizada para estabelecer a ligação de controlos quando os respetivos pontos de ligação são suficientemente compatíveis que possam estabelecer a ligação sem utilizar um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objeto.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Quando esta sobrecarga do método é chamada, basta passar a chamada para a outra versão do método sobrecarregada e transmite `null` para o parâmetro que requer um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objeto.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       Quando tenta ligar duas controlos programaticamente, pode utilizar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>método uma verificação condicional para determinar se os controlos podem ser ligados diretamente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ligados de controlo que tenha a função de dados de furnishing para outro controlo."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Um método que funciona como um método de chamada de retorno para a ligação. Conforme implementado no conjunto de controlo de peças Web, este é um método público no `provider` que está marcado com um <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> o atributo de metadados."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo que tenha a função de receção de dados a partir de `provider`e, em seguida, processamento ou apresentação-lo."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Um método que estabelece ligação com `providerConnectionPoint` para receber os dados para a ligação. Conforme implementado no conjunto de controlo de peças Web, este é um método público no `consumer` que está marcado com um <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> o atributo de metadados."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> que contém as informações de vários sobre o fornecedor e consumidor necessários para uma ligação."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> coleção do controlo de coleções dinâmicas é só de leitura."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cria uma ligação entre dois <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> controla utilizando as referências para os controlos, as respetivas especificados <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objetos e um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> objeto."
  remarks: "Esta sobrecarga é utilizada para estabelecer a ligação de controlos quando os respetivos pontos de ligação são incompatíveis. A incompatibilidade ocorre quando `consumer` implementa uma interface diferente que `provider` como ponto de ligação. O transformador converte os dados de um tipo que possam ser compreendido pela `consumer`."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> que tenha a função de dados de furnishing para outro controlo ligado."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Um método público no `provider` que está marcado com um <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> atributo de metadados e funciona como um método de chamada de retorno para a ligação."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> que tenha a função de receção de dados a partir de `provider` ou `transformer`e, em seguida, processamento ou apresentação-lo."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Um método público no `consumer` que está marcado com um <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> atributo de metadados e liga-se com `providerConnectionPoint` para receber os dados para a ligação."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> que permite que uma ligação entre dois controlos convertendo os dados da `provider` num formato que `consumer` pode processar."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> que contém as informações sobre o fornecedor, o consumidor e o transformador necessário para uma ligação."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ligações já tem sido ativadas no <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém a coleção de todos os <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>, servidor ou controlos de utilizador que estão contidos num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zonas numa página Web e são geridas pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "A propriedade de controlos não referencia outros controlos que são referenciados pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar, tal como a vários controlos, de zona <xref:System.Web.UI.WebControls.WebParts.EditorPart>ou <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controlos entre outros.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Esta propriedade é utilizada pelo conjunto de controlo de peças Web e na maioria das situações de desenvolvimento não se destina a ser chamado a partir do código. Por este motivo, embora a propriedade é pública, este está oculta IntelliSense. Os programadores que pretendem aceder a coleção de <xref:System.Web.UI.WebControls.WebParts.WebPart>ou outros controlos de servidor geridos pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo deve utilizar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> que contém todos os controlos geridos pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Utilizado pelo controlo de peças Web definido para criar uma cópia de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor para fins de adicionar o controlo a uma página Web."
  remarks: "Não é possível chamar o método CopyWebPart diretamente a partir do seu código. Este método é denominado pelo internamente o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo como parte do processo de adicionar um novo dinâmico <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlo de servidor para uma página.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> O controlo dinâmico é adicionado a uma página através de programação ou através da interface de utilizador (IU), de peças Web por exemplo por um utilizador a adição de um controlo de um catálogo de controlos, por oposição a um controlo estático, o que é declarado diretamente na marcação de uma página.      > [!NOTE] > Pode ser substituído o método de uma classe derivada, se pretendem que os programadores ativar o método processar copiar cenários de controlo adicional. Para obter mais informações, consulte as notas à secção os herdeiros.       Quando é adicionado um novo controlo dinâmico, se for um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, o método de CopyWebPart devolve uma nova instância do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se o controlo a ser adicionado é outro tipo de controlo de servidor (por exemplo, um controlo de utilizador, um controlo personalizado ou um controlo ASP.NET), o controlo vai ter sido encapsulado anteriormente com uma <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objeto pelo conjunto de controlo de peças Web.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Quando o método CopyWebPart encontra um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo, devolve uma nova instância do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo com uma nova instância do controlo subordinado encapsulada dentro do mesmo.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Quando o método CopyWebPart cria uma nova cópia de um controlo para devolver, também repõe os valores de todas as propriedades para os respetivos valores predefinidos. Tenha em atenção que, se pretender manter os valores das propriedades personalizável e tê-los copiados para a nova instância de controlo, deve chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>método bem.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> O passo final levadas a cabo por CopyWebPart método é chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>método para obter um novo ID do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      > [!NOTE] > Porque o método obtém um novo ID de um controlo copiado, não deverá confiar na referência um controlo dinâmico que é adicionado a uma página através de um ID original. Em vez disso, deverá referenciar a nova instância do controlo devolvido pelo método."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor para ser copiado."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> para ser adicionado a uma página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cria um conjunto de transformers especificado no ficheiro de configuração de um Web site e adiciona-o para a coleção de transformers referenciada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "A coleção de transformers especificado no ficheiro de configuração de um Web site."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Devolve o conjunto de todos os controlos que são geridos pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo numa página Web. Esta classe não pode ser herdada."
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> consiste em todas as várias peças Web controlos geridos pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cria o conjunto de todos os modos de apresentação possíveis para uma aplicação de peças Web."
  remarks: "Este método cria a lista de todos os modos de possíveis de apresentação, não apenas os modos de apresentação suportados numa página específica. Para mais informações sobre os modos de apresentação suportados, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Por predefinição, as peças Web do conjunto de controlo cria o seguinte conjunto de apresentar modos para ser utilizada nas páginas de peças Web:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>os programadores podem criar modos de visualização personalizado, com ou sem que acompanha zonas personalizadas que derivam de <xref:System.Web.UI.WebControls.WebParts.WebZone>ou <xref:System.Web.UI.WebControls.WebParts.ToolZone>classes.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Para criar um modo de visualização personalizado, tem de herdar o <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>classe, e para adicionar o seu modo de visualização como um modo suportado numa página, tem de herdar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe e substitua o método CreateDisplayModes.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Quando adicionar modos de apresentação, utilizando o <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>método, deve adicioná-los pela ordem que pretende que sejam apresentados na quaisquer controlos de interface (IU) do utilizador (tais como um <xref:System.Web.UI.WebControls.ListBox>controlo) que fornecem aos utilizadores os modos possíveis apresentar uma página.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> que contém todos os modos de apresentação que são suportados."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor único a servir como um ID para uma ligação dinâmica."
  remarks: "O método CreateDynamicConnectionID gera um valor GUID e converte-o numa cadeia para servir o ID exclusivo de uma ligação. O método é chamado sempre que é criada uma ligação dinâmica."
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que contém um ID exclusivo de uma ligação."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera um ID exclusivo para um dinâmico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "Quando <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos serem adicionados a uma página Web, podem ser estático (o que significa que o controlo está declarado na marcação de página) ou dinâmico (o que significa que são adicionados através de programação).</xref:System.Web.UI.WebControls.WebParts.WebPart> Em qualquer cenário em que o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo está a criar novos controlos dinâmicos para adicionar à página, chama este método para gerar um ID exclusivo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       O método é virtual para que os programadores podem substitui-lo se pretende fornecer uma implementação personalizada para gerar o ID."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "O <xref:System.Type>do controlo para o qual está a ser gerado um ID.</xref:System.Type>"
    return:
      type: System.String
      description: "Uma cadeia que contém o ID exclusivo para um controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cria um controlo especial que é inserido uma página e apresentado para os utilizadores finais, quando uma tentativa para carregar ou criar um dinâmico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo falha por algum motivo."
  remarks: "O método CreateErrorWebPart será chamado sempre que as peças Web controlar as tentativas de conjunto para carregar ou criar uma instância de um dinâmico <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlo de servidor e falhar por algum motivo.</xref:System.Web.UI.WebControls.WebParts.WebPart> O método cria um <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>objeto, atribui uma mensagem de erro e devolve o mesmo.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> O <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>controlo é inserido em vez do controlo que falhou e a mensagem de erro é apresentada na página.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       Não é possível chamar o método CreateErrorWebPart diretamente a partir do seu código. No entanto, pode herdar do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe e expandir o método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Para obter mais informações, consulte as notas para a secção os herdeiros.       Os utilizadores finais podem trabalhar com um <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>controlar numa página muito, tal como fariam um normal <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Para remover a mensagem de erro, podem fechar o controlo ao clicar em Fechar verbo, altura em que o controlo será adicionado a um <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>objeto, tal como qualquer outro controlo fechado.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Se um utilizador final elimina um <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>controlo, o controlo de servidor que falharam ao carregar também será eliminado da página.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "Uma cadeia que é o ID do controlo falhar. Se um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> envolvido na falha, o ID é o ID de controlo de servidor respetivos subordinados."
    - id: originalTypeName
      type: System.String
      description: "A cadeia que é o nome do <xref:System.Type>do controlo com falhas.</xref:System.Type> Se um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> envolvido a falha, o nome de tipo é o tipo de controlo de servidor respetivos subordinados."
    - id: originalPath
      type: System.String
      description: "Uma cadeia que contém o caminho para um controlo de utilizador, se um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> que contém um elemento subordinado controlo de utilizador estiver envolvido na falha."
    - id: genericWebPartID
      type: System.String
      description: "Uma cadeia que devolve o ID de um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>, se esse tipo de controlo foi envolvido na falha ao carregar ou criar um controlo."
    - id: errorMessage
      type: System.String
      description: "Uma cadeia que contém a mensagem de erro a apresentar na página."
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref> que é inserido uma página em vez de um controlo que não foi possível ser carregado ou criado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Devolve um objeto de personalização para conter os dados de personalização do utilizador para a página Web atual."
  remarks: "O método CreatePersonalization devolve um objeto para conter e gerir as definições de personalização do utilizador para a página atual. O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo gere este objeto.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> para conter os dados de personalização do utilizador."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Encapsula num wrapper um controlo de servidor que não é um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlar com um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> objeto, para que o controlo pode ter a funcionalidade de peças Web."
  remarks: "O método CreateWebPart é o mecanismos principal para ativar os controlos de servidor que não são <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos para executar a mesma funcionalidade que um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo e, consequentemente, completamente participar em aplicações de peças Web.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Através deste método, os programadores muito expanda o número de controlos de servidor que podem utilizar uma aplicação de peças Web, porque praticamente qualquer tipo de controlo de servidor – controlos padrão do ASP.NET, controlos de utilizador e controlos personalizados – podem ser utilizados.       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo também utiliza este método em dois outros cenários moldar controlos de servidor com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objeto.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Quando os utilizadores adicionam controlos de servidor para uma página com o <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controlar, se o controlo importado não é um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, o método de CreateWebPart é chamado.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Além disso, quando os controlos de servidor declarados no formato de persistência dentro de um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona numa página Web, CreateWebPart método é denominado de quaisquer controlos que não são <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Quando adicionar um controlo de servidor a uma zona programaticamente, uma abordagem comum é utilizar o método de CreateWebPart moldar o controlo com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>de objeto e, em seguida, chame o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>método para adicionar o controlo para a coleção de todos os <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos na página, que é referenciado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Um controlo de servidor que não é um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> que encapsula num wrapper <code> control </code> e ativa-o para funcionar como um valor true <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define uma mensagem de aviso personalizado apresentada aos utilizadores finais quando eliminar a um controlo."
  remarks: "Quando um utilizador elimina uma <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar, normalmente, é apresentada uma mensagem de aviso de predefinição.</xref:System.Web.UI.WebControls.WebParts.WebPart> Avisa o utilizador que, quando esta instância de um controlo é eliminada, a eliminação é permanente. O Programador de página poderá fornecer aos utilizadores uma forma para adicionar uma nova instância do controlo para a página (tais como através de um catálogo de <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, ou através de algum meio programático), mas a instância atual de um controlo que é eliminado permanentemente for removida.</xref:System.Web.UI.WebControls.WebParts.WebPart> A caixa de diálogo que mostra o aviso inclui um botão para cancelar a eliminação, o utilizador, se assim o desejar.       A propriedade DeleteWarning permite aos programadores definir a mensagem de aviso é apresentada ao utilizador.       Se um programador de página atribui uma cadeia vazia (&quot;&quot;) será apresentado o valor para esta propriedade, nenhuma caixa de diálogo de mensagem de aviso quando um utilizador elimina uma <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > DeleteWarning a propriedade não é apresentada no caso de estática <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos e controlos de servidor.</xref:System.Web.UI.WebControls.WebParts.WebPart> Os controlos estáticos são os controlos de servidor que são declarados dentro de um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona na marcação de uma página Web.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Porque essas controlos são estáticos, estas não podem ser eliminadas, pelo que nunca é apresentada a mensagem de aviso de eliminação nesse caso. Controlos estáticos podem ser fechados por um utilizador, mas um controlo fechado é adicionado ao catálogo de página, a partir da qual pode ser adicionada regressar à página por um utilizador, enquanto que um controlo eliminado nunca pode ser recuperado."
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que contém o texto da mensagem de aviso. O valor predefinido é uma mensagem de aviso localizada."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Remove permanentemente uma instância de dinâmica de uma <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo de uma página Web."
  remarks: "O método DeleteWebPart remove permanentemente o controlo representado pelo `webPart` parâmetro de uma página. Ao contrário de um controlo fechado, que é adicionado à <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controlar e podem ser adicionados regressar à página, nunca pode ser adicionada uma instância do controlo eliminado regressar à página.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > Conforme implementado pelo controlo de peças Web definida, a capacidade dos utilizadores eliminar um dinâmico <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo depende do utilizador e o âmbito de personalização no qual o controlo foi adicionado a uma página.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se o controlo é adicionado quando a página se encontra no âmbito partilhado (por um utilizador com permissões), em seguida, o controlo não é possível eliminar utilizadores individuais quando a página se encontra no âmbito do utilizador.       Apenas os controlos dinâmicos podem ser eliminados. Controlos dinâmicos são adicionados a uma página através de programação ou pelos utilizadores a adição de controlos de um catálogo. Controlos estáticos são adicionados a uma página de forma declarativa no formato de markup ou persistência. Pois as etiquetas declarativas permanentemente na marcação de, controlos estáticos nunca podem ser eliminados, mas pode ser fechados e reabertos."
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo de servidor para ser eliminado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representa o modo de visualização utilizado para alterar o esquema das páginas Web que contém os controlos de peças Web. Este campo é só de leitura."
  remarks: "O campo de DesignDisplayMode referencia um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objeto que é criado e contido o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Porque se trata de um objeto estático, pode fazer referência ao mesmo diretamente através do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe sem necessitar de uma instância do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando uma página que contém peças Web controla cargas primeiro, está a ser <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(modo de procurar) por predefinição.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Quando os utilizadores pretenderem alterar o esquema da página ao mover controlos a diferentes zonas ou dentro de zonas atuais, utilizador tem primeiro de alternar a página para DesignDisplayMode (modo de estrutura). No modo de estrutura, é apresentada a interface de utilizador (IU) para as várias zonas e os utilizadores podem, em seguida, arraste os controlos para alterar o esquema."
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Remove um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou servidor controlar que está a ser fechado ou eliminado de todas as ligações está a participar numa."
  remarks: "O método de DisconnectWebPart é chamado internamente pelo controlo de peças Web definido quando um controlo está fechado numa página ou eliminado a partir de uma página. Neste cenário, o método é chamado para remover o controlo de todas as ligações em que esteja envolvido como um consumidor ou o fornecedor. Se o controlo é removido de qualquer ligação, este método também invoca o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>método para terminar todas as ligações na qual `webPart` foi envolvido.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Quando se chama o método DisconnectWebPart, gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Normalmente, este evento pode ser cancelado, mas nos dois casos não é possível cancelar. Um cenário ocorre durante pedidos para a página, quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>método é chamado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Se houver um conflito entre as ligações existentes, o método DisconnectWebPart será invocado para fechar uma das ligações em conflito e nesta instância do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento não pode ser cancelado, porque o conflito tem de ser resolvido.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       O outro cenário ocorre quando um <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlo de servidor que está atualmente ligado está fechado ou eliminado.</xref:System.Web.UI.WebControls.WebParts.WebPart> Neste caso, devido ao controlo está a ser removido da página, respetivas necessidades de ligação para ser terminada, bem, como, por conseguinte, por predefinição, não é possível cancelar a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventos interromper o processo de terminar uma ligação.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Para obter mais informações, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo que está a ser desligada."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Acarreta terminar o processo de desligar os controlos de servidor que estão ligados numa página Web."
  remarks: "O método DisconnectWebParts acarreta terminar o processo completo de terminar uma ligação entre <xref:System.Web.UI.WebControls.WebParts.WebPart>ou os controlos de servidor, quando passa-se a `connection` parâmetro.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Este método é utilizado para desligar controlos ao colocar um `<asp:connectionszone>` elemento numa página Web, para fornecer uma interface de utilizador (IU) para gerir as ligações. Quando uma página está no modo de apresentação de ligação (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) e existe uma ligação atual, os utilizadores podem clicar num botão que chama o método DisconnectWebParts para terminar a ligação.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       Também pode chamar o método DisconnectWebParts a diretamente a partir do código, se de que pretende desligar controlos através de programação e sem ter de adicionar um `<asp:connectionszone>` elemento a uma página."
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> que representa a ligação entre os controlos do servidor."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>não está contido no <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> ou <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define o modo de visualização de Active Directory para uma página Web que contém os controlos de peças Web."
  remarks: "Uma página que contém os controlos de peças Web está sempre em um de vários modos de apresentação possíveis. Para obter detalhes sobre os modos de apresentação, consulte [página apresentar modos de peças Web](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe cria os modos de apresentação de uma página Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Utilizar a base de <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>classe, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo cria vários objetos de modo de apresentação padrão que podem ser utilizados em páginas que contêm os controlos de peças Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Estes modos de apresentação padrão são descritos no <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>Descrição geral de classe.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo também gere os modos de visualização de páginas que utilizam controlos de peças Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Utilizando a propriedade DisplayMode, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo mantém uma referência para o modo de visualização atual numa página.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Também pode utilizar a propriedade DisplayMode para mudar de uma página em modos diferentes de apresentação. Para obter um exemplo de alterar os modos de apresentar uma página que utiliza os controlos de peças Web, consulte [explicação passo a passo: alterar modos apresentar uma página de peças Web](~/add/includes/ajax-current-ext-md.md).       Como parte da gestão de modo a apresentar, a <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo também fornece eventos e processadores de eventos relacionados com a apresentar os modos, tais como o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>método e o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Estes métodos fornecem um mecanismo para personalizar o comportamento de uma página e, mesmo para adicionar um modo de visualização personalizado."
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> que determina o modo de visualização da página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> está a ser atribuída para a propriedade de objeto <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre após a atual apresentar modo num peças Web página foi alterado."
  remarks: "Modos de apresentação são uma parte integral de aplicações de peças Web. Quando os utilizadores mudar para um modo de visualização diferentes numa página Web, a página será, muitas vezes, execute um aspeto muito diferente, consoante o objetivo do novo modo de apresentação. Depois de um modo de apresentação foi alterada, poderá pretender efetuar determinadas alterações na interface de utilizador (IU), tais como ocultar ou mostrar determinados controlos, alterar o aspeto de elementos de IU selecionados e assim sucessivamente.      > [!NOTE] > Para obter mais informações sobre modos de apresentação, consulte [página apresentar modos de peças Web](~/add/includes/ajax-current-ext-md.md). Para obter mais informações sobre a consumir eventos, consulte [como: consumir eventos numa aplicação Web Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de um utilizador clica um verbo numa página Web que inicia o processo de alteração para o modo de ecrã diferentes."
  remarks: "Modos de apresentação são uma parte integral de aplicações de peças Web. Quando os utilizadores mudar para um modo de visualização diferentes numa página Web, a página será, muitas vezes, execute um aspeto muito diferente, consoante o objetivo do novo modo de apresentação. Depois de um utilizador inicia o processo de alteração para um novo modo de visualização, clicando num verbo, poderá querer efetuar determinadas alterações na interface de utilizador (IU), utilizando o <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>propriedade para determinar que vai ser o novo modo de visualização e, em seguida, alterar vários elementos de IU em conformidade.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> É uma forma útil de efetuar este procedimento para substituir o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>método para personalizar a IU.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      > [!NOTE] > Para obter mais informações sobre modos de apresentação, consulte [página apresentar modos de peças Web](~/add/includes/ajax-current-ext-md.md). Para obter mais informações sobre a consumir eventos, consulte [como: consumir eventos numa aplicação Web Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma coleção só de leitura de todos os modos de apresentação que estão associados a um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "As referências de propriedade de DisplayModes todas associados apresentam modos, contrast com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>propriedade, o que faz referência apenas os modos de apresentação que estão disponíveis (suportado) na página atual.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Dois modos de apresentação fornecido, procurar e conceção, são sempre suportadas numa página. A outra apresentar três modos, editar, catálogo e ligações, são suportadas apenas quando uma página com o tipo correspondente da zona necessário para o trabalho, o modo de apresentação específico. Por exemplo, se a página não contém um <xref:System.Web.UI.WebControls.WebParts.EditorZone>zona, o modo de visualização de edição deve aparecer na coleção referenciada pela propriedade DisplayModes, mas não aparecia na coleção referenciada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> que contém o conjunto de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objetos associados a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém a coleção de todas as ligações dinâmicas que atualmente existe numa página Web."
  remarks: "Ligações de dinâmicas são ligações que são criadas através de programação, como opposed estaticamente para. Ligações estáticas são criadas por declará-los na marcação de uma página de formulários Web. Ligações dinâmicas são formadas programaticamente ou por um utilizador criar uma ligação utilizando a interface de utilizador (UI) de ligação.       A coleção DynamicConnections, embora é só de leitura e não é possível alterar o respetivo conteúdo, fornecem acesso programático para cada objeto de ligação dinâmico.      > [!NOTE] > Para efetuar operações comuns, tais como ligar ou desligar <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, os programadores devem utilizar os métodos públicos no <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe, tal como <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, em vez de tentar modificar objetos de ligação na coleção DynamicConnections diretamente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> que contém referências a todas as ligações dinâmicas numa página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Representa o modo de visualização em que os utilizadores finais podem editar e modificar os controlos do servidor. Este campo é só de leitura."
  remarks: "O campo de EditDisplayMode referencia um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>objeto que é criado e contido o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Porque se trata de um objeto estático, pode fazer referência ao mesmo diretamente através do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe sem necessitar de uma instância do controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando uma página que contém peças Web controla cargas primeiro, está a ser <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(modo de procurar) por predefinição.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Quando os utilizadores querem editar ou modificar um controlo de servidor, utilizador tem primeiro de alternar a página para EditDisplayMode (modo de edição). Segundo, utilizador tem de selecionar um controlo de servidor específico para editar, clicando o verbo de edição no menu de verbos no cabeçalho desse controlo. Depois do controlo está em modo de edição, é apresentada a interface de utilizador (IU) edição para editar o controlo selecionado.       Para ativar o modo de edição numa página, a página tem de conter, pelo menos, um <xref:System.Web.UI.WebControls.WebParts.EditorZone>controla a zona que inclui um ou mais dos editar fornecido, tais como o <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>controlo ou edição de controlos personalizados.</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define um valor que determina se o processamento de scripts do lado do cliente está ativado na página Web que contém um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "A propriedade EnableClientScript fornece uma forma para programadores desativar os scripts de cliente. Poderá desativar o script por motivos de segurança do cliente ou certifique-se de que todos os utilizadores de uma página terão uma experiência de utilizador semelhante, mesmo que utilizam diferentes browsers.       Pode desativar o cliente scripting adicionando um `EnableClientScript` atributo para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>elemento numa página Web, como a seguinte linha de código declarativa: `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />` além disso, os programadores foi possível eliminar esta propriedade ao Herdar do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe e definir o predefinido, valor para `false`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       O conjunto de controlo de peças Web utiliza o script para fornecer alguns do cliente de interface de utilizador (IU) e funcionalidades de personalização do cliente. Se desativar o cliente de script, peças Web controlos continuarão a funcionar, mas algumas funcionalidades estão desativadas. A capacidade de arrastar controlos para diferentes zonas estiver desativada, juntamente com a capacidade para compor verbos num menu pendente verbos na barra de título de um controlo (os verbos em vez disso, são apresentados como hiperligações na barra de título do controlo)."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se o script de cliente pode ser executado na página. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica que a utilização de temas está ativada numa página Web."
  remarks: "O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo substitui a base de <xref:System.Web.UI.Control.EnableTheming%2A>propriedade para se certificar de que devolve sempre um valor `true`.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Isto é feito porque as peças Web do conjunto de controlo requer a utilização de temas para compor as peças Web controla que são controlos subordinados do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo e que formam a interface de utilizador (UI) de uma página Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Por exemplo, temas são utilizados para composição as várias zonas e os controlos que residem em zonas, incluindo vários tipos de controlos de parte (controlos que herdam a <xref:System.Web.UI.WebControls.WebParts.Part>classe), controlos de utilizador, os controlos de servidor ASP.NET e controlos de servidor personalizadas.</xref:System.Web.UI.WebControls.WebParts.Part>       Embora a propriedade EnableTheming substituída é implementada como uma propriedade de leitura/escrita de acordo com a respetiva propriedade base, não é possível definir a propriedade porque propositado deve sempre devolver um valor de `true`. Se tentar definir a propriedade, um <xref:System.NotSupportedException>exceção é emitida.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se temas estão ativados. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Foi efetuada uma tentativa para definir o valor da propriedade."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Conclui o processo de ligar a um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo para outro controlo."
  remarks: "O método EndWebPartConnecting termina o processo de ligar a um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo para outro controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> É homólogo para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       O método EndWebPartConnecting assegura que o objeto de personalização referenciado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>propriedade é modificável, que é necessário porque é propriamente dito que formam uma ligação de um tipo de personalização.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> O método garante que, em seguida, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>o objeto não é `null`e, finalmente, chama o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O controlo referenciado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Conclui o processo de edição de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O método EndWebPartEditing termina o processo de edição de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> É homólogo para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       O método EndWebPartEditing assegura que o objeto de personalização referenciado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>propriedade é modificável, que é necessário porque um controlo de edição é um processo que necessita de alterações de personalização.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> O método garante que, em seguida, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>o objeto não é `null`, para que atualmente selecionado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo pode alterar e, finalmente, aquele invoca o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O controlo referenciado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define o texto de uma mensagem de aviso é apresentado quando um utilizador tenta exportar dados confidenciais do Estado de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "Quando um utilizador tenta exportar dados confidenciais do Estado de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar, se quaisquer dados que está a ser exportados for proveniente de um membro que foi marcado como confidencial no código fonte, será apresentada uma mensagem de aviso para o utilizador na caixa de mensagem, informar de que está a ser exportados dados confidenciais e fornecer uma oportunidade para cancelar a exportação.</xref:System.Web.UI.WebControls.WebParts.WebPart> Os programadores podem marcar dados específicos de um membro como confidenciais definindo a `isSensitive` parâmetro do `[Personalizable]` atributo para `true` no membro. Para obter mais informações sobre este atributo e o parâmetro, consulte a <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>classe.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!IMPORTANT] > Quando utilizar a funcionalidade de exportação de peças Web, os dados confidenciais, potencialmente, foi possível exportar a utilizadores não autorizados. Para obter mais informações sobre como proteger contra esta ameaça, consulte [proteger páginas de peças Web](~/add/includes/ajax-current-ext-md.md).       A mensagem predefinida é apresentada sempre que os utilizadores tentam exportar. No entanto, ao atribuir um valor para a propriedade ExportSensitiveDataWarning, pode fornecer uma mensagem de aviso personalizado."
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que contém a mensagem de aviso. A mensagem predefinida é um valor específico da cultura fornecido pelo .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cria um ficheiro de descrição XML que contém dados de estado e a propriedade de um controlo de servidor."
  remarks: "O método ExportWebPart monta diversos dados de estado e a propriedade de `webPart` para um ficheiro XML. Os dados incluem informações sobre o controlo em si, incluindo a assemblagem, dados de estado e os dados de propriedade. O utilizador que inicia a exportação pode guardar o ficheiro XML ao disco no computador local ou na rede. Outros utilizadores, em seguida, podem importar o ficheiro de descrição para uma página diferente ou Web site e aplicam-se os dados de estado e de propriedade para uma instância diferente do `webPart`. Esta opção fornece um mecanismo de rápido e conveniente para os utilizadores partilham e reutilizar as respetivas definições em controlos de servidor e também fornece aos programadores com um meio para controlar o aspeto e comportamento dos controlos exportados e importados.       As propriedades do `webPart` não são exportadas por predefinição. Para ativar a exportação de uma propriedade, tem de marcá-la com o `[Personalizable]` atributo com o código de origem. Também, opcionalmente, pode marcar uma propriedade exportável como que contêm dados confidenciais, definindo o `isSensitive` parâmetro o `[Personalizable]` atributo para `true`. Por predefinição, `isSensitive` é `false`. Os programadores podem definir o parâmetro `true` para indicar que os dados confidenciais.       Para ativar `webPart` seja exportado, um programador define o <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>valor da propriedade para qualquer <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>(que inclui todas as propriedades de personalizável e confidenciais), ou <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, que exporta tudo, exceto para propriedades confidenciais.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      > [!IMPORTANT] > Permitir que os utilizadores para exportar dados de controlos de e para importar dados para outros controlos, isto pressupõe algumas riscos de segurança. Os programadores devem utilizar a abordagem analisada acima para proteger os dados confidenciais e se quiser evitar o risco de exposição de dados completamente, devem ativar a exportação no `webPart` de todo. Para obter detalhes sobre problemas de segurança de peças Web, consulte [proteger páginas de peças Web](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo a partir da qual os dados serão exportados."
    - id: writer
      type: System.Xml.XmlWriter
      description: "Um <xref:System.Xml.XmlWriter>que escreve os dados exportados do `webPart` para um ficheiro de descrição XML.</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Substituído para impedir que o foco alguma vez definido no <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlar, porque não tem nenhuma interface de utilizador (IU)."
  remarks: "O método de foco substitui a base de <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>método e emite uma exceção se um autor da chamada chama o método.</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> Porque o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo não tem uma IU e nunca é visível para os utilizadores, nunca pode permitir que o foco ser definido em si próprio.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um chamador tenta chamar o método de foco, que não é suportado num controlo que não tem uma IU."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém a coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref> objetos que podem funcionar como pontos de ligação de um servidor de controlam o que está a atuar como um consumidor dentro de uma ligação de peças Web."
  remarks: "Uma ligação de peças Web sempre envolve controlos exatamente dois, um a agir como o fornecedor de dados, o outro agir como o consumidor de dados. Cada controlo tem de ter um ou mais métodos que são definidos como pontos de ligação. No caso de um controlo de consumidor, os respetivos pontos de ligação são <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objetos.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Obter os pontos de ligação de consumidor é um passo necessário para que formam uma ligação de peças Web.       Um consumidor tem de ter sempre o ponto de ligação, pelo menos, um para ser capaz de estabelecer uma ligação. O método GetConsumerConnectionPoints verifica um controlo de consumidor e obtém uma coleção de todos os respetivos pontos de ligação. Se um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo não tem nenhum ponto de ligação, o método devolve uma coleção vazia.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Um controlo de servidor que está a agir como um consumidor numa ligação."
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> que contém todos os pontos de ligação de consumidor."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para a instância atual do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo numa página."
  remarks: "O método GetCurrentWebPartManager é útil em contextos onde pretende obter uma referência a atual <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Um cenário comum, onde este ocorreriam é se estiver a escrever um controlo personalizado que não é possível saber que o ID de durante o desenvolvimento de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo na respetiva página será.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > GetCurrentWebPartManager o método é estático, por isso pode chamá-lo diretamente sem precisar de uma instância de um <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Alguns controlos as peças Web controlam conjunto, tal como <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, ter uma <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>propriedade que pode obter uma referência a atual <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Por conseguinte, ao trabalhar com essas controlos, deve utilizar esta propriedade para obter uma referência.       Se estão a codificação num contexto onde sabe o ID do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo, tais como escrever código inline dentro de uma página Web, é mais simples e eficiente para fazer referência diretamente para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo através da utilização de um ID.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "A página Web que contém uma instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> que referencia a instância atual do controlo numa página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma cadeia contendo o valor para o <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>propriedade de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "Obtém o valor calculado o <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>propriedade `webPart`.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Quando os programadores não atribuem um valor para o <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>propriedade de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, este método produz o valor a apresentar como o título.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> O valor calculado para controlos untitled é composto por um número anexado a uma cadeia, com o número que indica que a sequência de um controlo dentro da atual zona."
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O controlo para o qual o método devolve o valor de <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
    return:
      type: System.String
      description: "Uma cadeia que contém o valor calculado do <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>para <code> webPart </code>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>não se encontra no <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> coleção."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o caminho virtual relativo e a cadeia de consulta que fazem parte do pedido quando um utilizador tenta exportar um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O valor devolvido pelo método GetExportUrl é um caminho virtual relativo para a localização do servidor da página que contém o controlo com o valor da cadeia de consulta anexado o pedido de exportação foi submetido para o servidor de formulários. O método GetExportUrl codifica a cadeia antes de permitir que o pedido ser submetido, para proteger contra ataques de scripts maliciosos.      > [!NOTE] > Para obter mais informações sobre como proteger aplicações de peças Web, consulte [proteger páginas de peças Web](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> que está a ser exportado."
    return:
      type: System.String
      description: "Uma cadeia que contém o caminho virtual relativo e a consulta de cadeia que o pedido para exportar um controlo de formulário em conjunto."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para a instância do <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> controlo que contém um controlo de servidor."
  remarks: "Em geral, existem duas categorias de controlos que os programadores colocar <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonas participar em aplicações de peças Web: <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, que herdam a <xref:System.Web.UI.WebControls.WebParts.WebPart>classe base e outros controlos de servidor, o que podem ser controlos padrão do ASP.NET, controlos personalizados ou controlos de utilizador.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Quando qualquer um destes controlos é efetuada num <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona, que demora a funcionalidade de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> A <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo tem esta funcionalidade inerentemente, mas não os outros tipos de controlos de servidor.</xref:System.Web.UI.WebControls.WebParts.WebPart> Para ativar os outros controlos de servidor agir como <xref:System.Web.UI.WebControls.WebParts.WebPart>controla quando estes são colocados num <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona, ASP.NET encapsula num wrappê-los com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Porque o <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo herda diretamente o <xref:System.Web.UI.WebControls.WebParts.WebPart>classe, fornece respectivos controlos subordinados com funcionalidades de peças Web true.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Muitas vezes em tempo de execução, os programadores de página poderão querer obter uma referência para o <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo que contém um dos controlos de servidor numa zona.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> O método GetGenericWebPart permite-lhes obter uma referência para o <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Um controlo de servidor que existe um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> e da aplicação como um controlo subordinado um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> em tempo de execução."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> que encapsula num wrapper <code> control </code> como um controlo subordinado. O método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <code> control </code> não está contido num <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém a coleção de <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;> </xref> objetos que podem funcionar como pontos de ligação de um servidor de controlam o que está a atuar como um fornecedor de uma ligação de peças Web."
  remarks: "Uma ligação de peças Web sempre envolve controlos exatamente dois, um a agir como o fornecedor de dados, o outro agir como o consumidor de dados. Cada controlo tem de ter um ou mais métodos que são definidos como pontos de ligação. No caso de um controlo de fornecedor, os respetivos pontos de ligação são <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>objetos.</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Um fornecedor tem de ter sempre o ponto de ligação, pelo menos, um para ser capaz de estabelecer uma ligação. O método GetProviderConnectionPoints verifica um controlo de fornecedor e obtém uma coleção de todos os respetivos pontos de ligação. Obter os pontos de ligação de fornecedor é um passo necessário para que formam uma ligação de peças Web."
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Controlo de servidor que está a agir como um fornecedor de uma ligação."
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> que contém todos os pontos de ligação do fornecedor."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Importa um ficheiro de descrição XML que contém dados de estado e a propriedade de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlar e aplica-se os dados para o controlo."
  remarks: "O método ImportWebPart importa um ficheiro de descrição XML que foi criado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>método para um controlo de servidor.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Não é o controlo de servidor real que é importado, mas apenas o ficheiro de descrição que contém os dados de estado e propriedade sobre o controlo. O controlo e a assemblagem referenciada no ficheiro de descrição já devem estar disponíveis no servidor em que um utilizador se tentar importar o ficheiro de descrição.       Para ativar a importação de um controlo, um programador tem de adicionar um <xref:System.Web.UI.WebControls.WebParts.CatalogZone>controlo na página de onde importar será ativado.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> Na zona, um <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controlo tem de ser adicionado.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Este controlo fornece uma caixa de diálogo de ficheiro que permite aos utilizadores procurar e localize o ficheiro de descrição para importar.       Depois de encontra um ficheiro de descrição e começa a importação de um utilizador, o ficheiro de descrição é lido pelo método ImportWebPart. Se existirem erros, e se encontram-se a assemblagem e o controlo, o controlo de servidor é adicionado ao catálogo de dentro de <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controlo e dados de propriedade e o estado de vários especificados no ficheiro de descrição são aplicadas ao controlo.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> O utilizador pode, em seguida, selecione o controlo e adicioná-lo para a página.      > [!IMPORTANT] > Como o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>método, o método ImportWebPart tem algumas potencial relativamente a riscos de segurança.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Porque envolve a importar dados para um Web site, um utilizador mal intencionado pode tentar inserir dados incorretos ou um código de script, mesmo que o ficheiro de descrição é importado. Em seguida, os dados incorretos foi aparecem numa página ou numa base de dados ou o script inserido foi executado. Para obter uma descrição geral dos potenciais riscos associados a importar ficheiros de descrição e formas de evitar os riscos, consulte [proteger páginas de peças Web](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que lê os dados de estado e a propriedade do ficheiro de descrição XML que está a ser importado.</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "A <xref:System.String>que é apresentado ao utilizador se for encontrado um erro durante a importação.</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (ou um controlo de servidor que está moldado por um <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> e, por conseguinte, é tratada como um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>) que é referenciado no ficheiro de descrição XML importado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref> classe, que é utilizado para combinar e separe um conjunto de métodos que, na verdade, são implementadas no <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> classe, mas sobretudo são úteis para programadores do controlo."
  remarks: "A propriedade características expõe as APIs para a chamada para um conjunto de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>métodos que são utilizados principalmente em casos de extensibilidade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       A forma concebida para utilizar estes métodos internos é possam aceder às mesmas através da propriedade características. Porque a propriedade está protegida, apenas pode aceder à mesma e chamar os métodos dentro de uma instância da <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>classe por herdar da <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>      > [!NOTE] > Esta propriedade está oculta IntelliSense no [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]. No entanto, no derivada de um <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe, pode continuar a aceder a propriedade e os seus membros de vários.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>, através do qual um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> pode referenciar os vários métodos que foram separados no <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Acarreta terminar os passos iniciais determinar se um controlo está autorizado a ser adicionado a uma página."
  remarks: "O método de IsAuthorized é o método inicial chamado pelo controlo de peças Web definido para verificar a autorização para um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Aceita `webPart` como um parâmetro e inicia um processo que, fundamentalmente, determina se o controlo será adicionado a uma página. Chame este método a partir do código diretamente quando é necessário determinar se um determinado controlo está autorizado.       Este método acarreta as tarefas inicial de determinar se o controlo herda o <xref:System.Web.UI.WebControls.WebParts.WebPart>classe ou é um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controlar e, se assim for, controlar o tipo de subordinado-contém.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Para concluir a tarefa de autorização, aquele invoca o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>método de sobrecarga.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor que está a ser verificado em termos de autorização."
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se <code> webPart </code> podem ser adicionados a uma página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Acarreta os passos finais determinar se um controlo está autorizado a ser adicionado a uma página."
  remarks: "O método de sobrecarga IsAuthorized acarreta os passos finais determinar se um controlo está autorizado a ser adicionado a uma página. O método garante que `type` é um tipo válido e que `path` tem um valor apenas se o controlo que está a ser verificado é um controlo de utilizador. Em seguida, chama o críticos <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>método, o que gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do controlo a ser verificado para autorização.</xref:System.Type>"
    - id: path
      type: System.String
      description: "O caminho relativo para o ficheiro de origem para o controlo que está a ser autorizado, se o controlo é um controlo de utilizador."
    - id: authorizationFilter
      type: System.String
      description: "Um valor de cadeia arbitrária atribuído para o <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>propriedade de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo, utilizado para autorizar se um controlo pode ser adicionado a uma página.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "Indica se o controlo que está a ser verificado em termos de autorização é um controlo partilhado, o que significa que está visível para muitos ou todos os utilizadores da aplicação e a respetiva <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>valor da propriedade está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se um controlo está autorizado a ser adicionado a uma página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica se foram efetuadas alterações de personalização que afetam os detalhes de personalização de nível de página controlados pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo utiliza a propriedade IsCustomPersonalizationStateDirty internamente para controlar se qualquer um da personalização de nível de página de dados que gere foi alterada.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Os dados de personalização mudam quando os utilizadores realizar várias ações de personalização ao nível da página, tais como adicionar ou remover <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, ligar ou desligar controlos, a alteração do esquema da página ao mover controlos e outras ações.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Os utilizadores também podem executar personalização ao nível do controlo, o que significa efetuam alterações de personalização a um controlo específico, e as alterações afetam apenas esse controlo. Um exemplo seria possível editar o controlo e alterar o texto do título ou a cor de fundo. Personalização de nível de controlo não afeta os dados de personalização de nível de página controlados pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo, e para o valor da propriedade IsCustomPersonalizationStateDirty não é alterado para `true` quando ocorre a personalização de nível de controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Embora o método está protegido e não pode ser acedido diretamente por um autor da chamada, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>propriedade pode ser acedida diretamente pelos chamadores e devolve o valor desta propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se foram efetuadas alterações de personalização. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Cargas de controlam os dados de estado que foi guardados num pedido de página anterior e tem de ser restaurado num pedido subsequente."
  remarks: "LoadControlState método é útil para restaurar dados de propriedade que devem ser persistente entre novas colocações de uma página, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A>propriedade está definida como `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Contém os dados de estado persistente para ser carregado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>Não é um <xref:System.Web.UI.PageStatePersister.ControlState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Armazena os dados de personalização personalizada que foi transmitidos para o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo pelos objetos de personalização a utilizar mais tarde durante o processo de inicialização."
  remarks: "O método LoadCustomPersonalizationState fornece dados de estado guardado no formato de um <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>objeto.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Estes dados, eventualmente, são utilizados para carregar dados de personalização para os controlos de peças Web e efetuar outras tarefas de inicialização.      > [!NOTE] > Este método é denominado por uma sequência de métodos que começa quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>método inicialmente pedidos associada <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>objeto para fornecer dados de personalização para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       Não é possível chamar este método diretamente a partir do seu código. No entanto, pode, chamar diretamente o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, o próprio método chama o método LoadCustomPersonalizationState e devolve os dados de personalização.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> que contém os dados de estado para ser carregado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objeto que permite que apenas <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> permissão e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  remarks: "O <xref:System.Security.PermissionSet>objeto é devolvido por esta propriedade é utilizado durante a importação para anulação da serialização do tipo.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "A <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objeto que permite que apenas <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> permissão e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objeto que permite que apenas <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> permissão e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  remarks: "O <xref:System.Security.PermissionSet>objecto devolvido por esta propriedade é utilizado durante a importação de tudo, exceto o tipo de anulação da serialização.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Obtém um <xref href=&quot;System.Security.PermissionSet&quot;> </xref> objeto que permite que apenas <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> permissão e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> permissão."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Move um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor a partir de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona para outro, ou para uma nova posição dentro da mesma zona."
  remarks: "O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo utiliza o método MoveWebPart mover `webPart` para uma nova localização no mesmo horário ou numa zona diferente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Pode chamar este método diretamente a partir do código, e também é invocada quando existe um utilizador é um controlo movido para uma nova posição utilizar várias opções na interface de utilizador (UI) de peças Web.       Várias condições devem ser cumpridas antes de `webPart` podem ser movidos, e a maioria destes é indicada por itens listadas na secção de exceções deste tópico. Se `webPart` não estava incluída num <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona lugar com, não pode ser movida para uma zona.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Depois das condições tiverem sido cumpridas, ocorre a seguinte sequência de ações mover `webPart`: 1.  O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>método gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`é removido do respetiva da atual zona (se necessário) e adicionados à sua nova zona ou nova posição dentro do respetivo horário atual.      3.  O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>método gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  O `zoneIndex` de cada <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo em zonas de origem e de destino é reposto para refletir o controlo movido.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "O <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor que está a ser movido."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "O destino <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> ao qual `webPart` está a ser movido."
    - id: zoneIndex
      type: System.Int32
      description: "Um número inteiro que indica o índice da `webPart` relativamente de outros controlos `zone`."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>é menor que zero."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;> </xref> eventos e invoca um processador para o evento, se existir."
  remarks: "O método de OnAuthorizeWebPart é chamado <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>método, quando um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo está a ser verificado para autorização ser adicionado a uma página.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Quando se chama o método OnAuthorizeWebPart, gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento, e se existir um método do processador para o evento, invoca o processador.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       O processo de autorização de <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos é uma funcionalidade de peças Web importante.</xref:System.Web.UI.WebControls.WebParts.WebPart> Cada <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlo de servidor que é adicionado a uma zona pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo passa através de um processo de autorização para determinar se o controlo pode ser adicionado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> Por predefinição, o conjunto de controlo de peças Web não fornece quaisquer critérios de filtragem para impedir que os controlos que está a ser adicionados a uma zona. Mas o conjunto de controlo de fornecer os mecanismos de necessários para que os programadores criar os seus próprios critérios de filtragem. Ao utilizar estes mecanismos, pode criar cenários de filtragem personalizados. Por exemplo, pode criar um filtro de modo a que, se for um utilizador numa função de administrador, determinados controlos seriam adicionados a uma zona quando a página ser composta e se o utilizador é uma função de utilizador, esses controlos não seriam adicionados.       Os mecanismos de filtragem de controlos durante o processo de autorização são o <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>propriedade no <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>e métodos de OnAuthorizeWebPart e o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Para criar um cenário de filtragem, existem essencialmente duas tarefas. Em primeiro lugar, pode designar cadeias para o <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>propriedade de cada <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo que pretende filtrar.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Estes valores de cadeia podem ser arbitrários, mas deve contêm os critérios que pretende filtrar. Por exemplo, se pretendesse um determinado controlo para ser adicionado a uma zona apenas se for um administrador utilizador está a visualizar a página, em seguida, pode atribuir um valor de cadeia de `admin` para a propriedade. Em seguida, pode utilizar a funcionalidade de funções ASP.NET e adicionar todos os utilizadores do seu site para várias funções, tais como administrador, o gestor e o utilizador. Quando uma página está a carregar, o código de filtragem iria verificar a função do que um utilizador está a ser, compare-as com o valor do filtro de autorização num controlo a ser verificado e se (por exemplo) o utilizador está a ser uma função de administrador e tinha definido o controlo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>valor `admin`, foi possível adicionar o controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       O segundo passo na criação de um cenário de filtragem é escrever código para verificar o <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>valores de propriedade no <xref:System.Web.UI.WebControls.WebParts.WebPart>controla e determinar se a cada controlo está autorizado antes de ser adicionada à sua zona.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Existem duas opções para onde pretende colocar este código de filtragem. A primeira opção é a opção preferencial para os programadores de página. Pode criar um método para processar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento diretamente com o código de script do servidor de página Web ou um ficheiro de separação do código.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Associar o seu método com o evento adicionando o `OnAuthorizeWebPart` atributo para a etiqueta de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar na página, conforme mostrado no seguinte código de marcação de exemplo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```É tudo o método personalizado-se à verificação de cada <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar para os critérios de filtragem e, em seguida, com base nos resultados, atribuir um valor booleano para o <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>propriedade o <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>objeto para indicar se o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo pode ser adicionado.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> O código na secção de exemplo demonstra como efetuar esta ação.       A segunda opção para onde pretende colocar o seu código filtragem é herdar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe e substituir um método para verificar os critérios de filtro.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Os dois métodos que pode substituir esta tem de fazer o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>método ou o método OnAuthorizeWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> Apesar de cada método funcionarão, na maioria dos casos é preferível para substituir o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>método, porque disponibiliza maior controlo programático sobre o processo de autorização de todo, enquanto que o método OnAuthorizeWebPart apenas uma tarefa específica, que consiste em emitir os eventos e verifique a existência de um processador.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Para obter um exemplo de código de personalizadas <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe que substitui o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>método, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>sobrecarga do método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref> que contém dados de eventos."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;> </xref> eventos para indicar que uma página e os controlos estão carregados e de que serem ativadas ligações na página para iniciar a partilha de dados."
  remarks: "O método OnConnectionsActivated gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>eventos depois de uma página concluiu o processo de carregamento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> O método fornece uma forma para adicionar um processador para o evento.       Os programadores de página podem adicionar um processador personalizado para o evento adicionando um `OnConnectionsActivated` atributo para o `<asp:webpartmanager>` elemento na página e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;> </xref> o evento a indicar que uma página e o respetivos controlos carregou e pode começar o processo de ativação de ligações."
  remarks: "O método OnConnectionsActivating gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>evento, o que fornece aos programadores com um mecanismo para programaticamente personalizar o processo de ativação de ligações.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       Os programadores de página podem adicionar um processador personalizado para o evento adicionando um `OnConnectionsActivating` atributo para o `<asp:webpartmanager>` elemento na página e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref> eventos que indica que o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo concluiu o processo de mudar do modo de apresentação de um para outro numa página Web."
  remarks: "O método OnDisplayModeChanged na respetiva base de dados de forma simplesmente gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref> que contém os dados do evento associados com um modo de apresentação foi alterada."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;> </xref> eventos que indica que o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo está em vias de mudar do modo de apresentação de um para outro numa página Web."
  remarks: "O método OnDisplayModeChanging na respetiva base de dados de forma simplesmente gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "Um <xref:System.EventArgs>que contém dados de eventos associados a um alteração modo de visualização.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> evento, o que é o primeiro evento no <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> ciclo de vida do controlo."
  remarks: "O método &quot; OnInit chama o método base, o que gera o <xref:System.Web.UI.Control.Init>evento para o controlo e, em seguida, ativada vários passos preparatórios, tais como de se certificar de que há apenas uma instância de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar numa página e carregar os dados de personalização.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há outro <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo na página"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> eventos, que ocorre imediatamente antes um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo é composto numa página Web."
  remarks: "O método de OnPreRender chama o método base, o que gera o <xref:System.Web.UI.Control.PreRender>controla de vários scripts de cliente que são necessárias em páginas que contêm as peças Web do evento para o controlo e, em seguida, regista.</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref> eventos, que ocorre após um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo ou foi recentemente selecionado ou limpou sua seleção."
  remarks: "O método OnSelectedWebPartChanged gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>evento, o que é normalmente um ponto no tempo em que um programador pode pretender alterar o aspeto da interface de utilizador (IU).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Por exemplo, quando um novo <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo estiver selecionado, o controlo de peças Web definido alterações a composição do controlo recentemente selecionado.</xref:System.Web.UI.WebControls.WebParts.WebPart> Depois de seleção de um controlo está desmarcada, a composição é devolvida para normal.       Depois de um utilizador seleccionar um determinado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo para editar, o método de OnSelectedWebPartChanged é chamado.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando o utilizador termina a editar o controlo e fecha, com o resultado que a seleção do controlo está desmarcada, o método OnSelectedWebPartChanged seja novamente chamado."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;> </xref> eventos, que ocorre durante o processo de alteração que <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo atualmente selecionado."
  remarks: "O método OnSelectedWebPartChanging gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>eventos, que ocorre durante o processo de alteração que <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo atualmente selecionado.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo utiliza este método e o evento associado, para fornecer uma oportunidade para cancelar um processo no qual o controlo selecionado está a mudar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Por exemplo, o método é chamado dentro de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>método e também dentro de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>método, para fornecer uma forma para cancelar o processo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Se um utilizador clica o verbo Cancelar num controlo que está a ser editado, o controlo já não está selecionado e quaisquer alterações de edição não foram guardadas, porque o método OnSelectedWebPartChanging torna possível cancelar as alterações de edição.      > [!NOTE] > O método denomina-se da mesma forma durante os métodos que começam e terminar o processo de ligar a um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo para outro controlo, para ativar a cancelar o processo.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Os programadores de página podem criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>eventos adicionando o `OnSelectedWebPartChanging` atributo para o `<asp:webpartmanager>` elemento na marcação de página declarativa e atribuir o atributo de nome de um método personalizado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera a base de <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> eventos e remove o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> instância de uma página Web."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Dados do evento associados a remoção do controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;> </xref> eventos, que ocorre após um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo foi adicionado a uma página."
  remarks: "O método de OnWebPartAdded é chamado durante o processo de adicionar um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo (ou outro controlo de servidor que é adicionado a um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona) para uma página.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Os programadores de página podem criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>eventos adicionando o `OnWebPartAdded` atributo para o `asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;> </xref> eventos, que ocorre durante o processo de adicionar um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo (ou um controlo de utilizador ou servidor) para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "O método OnWebPartAdding gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>eventos para indicar que um controlo está em vias de ser adicionada.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> O método também fornece a opção para cancelar o processo de adição. Se o controlo é adicionado com êxito, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>segue de evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Os programadores de página podem fornecer um processador personalizado para o evento associado ao adicionar o `OnWebPartAdding` atributo para o `<asp:webpartmanager>` elemento na página Web e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;> </xref> eventos para assinalar que foi removido um controlo de uma página."
  remarks: "O método OnWebPartClosed gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>eventos para indicar que um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo (ou outro controlo de utilizador ou servidor) foi fechado com êxito numa página.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Para fechar um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo significa removê-lo a partir de uma página, para que não está a ser composto, e também para colocá-lo numa oferta especial que contém o objeto chamado um catálogo de página.</xref:System.Web.UI.WebControls.WebParts.WebPart> Um catálogo de página, que corresponde do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controlar, mantém as referências a fechado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos para cada página.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Se um <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controlo está declarado numa página dentro de um <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zona, os utilizadores podem mudar a página no modo de apresentação do catálogo e voltar a adicionar à página de quaisquer controlos que anteriormente foram fechados.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       O método OnWebPartClosed fornece uma oportunidade para programadores criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Os programadores de página podem adicionar um processador personalizado para o evento adicionando um `OnWebPartClosed` atributo para o `<asp:webpartmanager>` elemento na página e, em seguida, atribuir um nome de método personalizado para o atributo. Uma tarefa útil que um programador pode realizar neste método é apresentar um marcador de posição em vez do controlo fechado, concluir com uma descrição que seria informar os utilizadores sobre como adicionar o controlo regressar à página."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;> </xref> eventos, que ocorre durante o processo de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor que está a ser removido de uma página."
  remarks: "O método OnWebPartClosing gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>eventos para indicar que um controlo está em vias de que está a ser fechado ou removido de uma página.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> O método também fornece a opção para cancelar o processo de fecho. Se o controlo foi removido com êxito da página, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>segue de evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Os programadores de página podem fornecer um processador personalizado para o evento associado ao adicionar o `OnWebPartClosinging` atributo para o `<asp:webpartmanager>` elemento na página Web e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;> </xref> eventos, que ocorre após um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo foi eliminado permanentemente de uma página."
  remarks: "O método de OnWebPartDeleted é chamado durante o processo de eliminação de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo (ou outro controlo de servidor que é adicionado a um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona) de uma página.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Os programadores de página podem criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>eventos adicionando o `OnWebPartDeleted` atributo para o `asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;> </xref> evento, o que indica que um dinâmico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo (ou controlo de utilizador ou de servidor que está contido num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona) está a ser eliminada."
  remarks: "Apenas dinâmica <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos podem ser eliminados e, quando um controlo for eliminado, a instância do controlo permanentemente é removida de uma página e não pode ser restaurada.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dinâmica <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos são aqueles que são adicionados através de programação ou a partir do catálogo de peças Web, por oposição controlos estáticos que são declarados na marcação de uma página Web.</xref:System.Web.UI.WebControls.WebParts.WebPart>       O método OnWebPartDeleting gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>eventos para indicar que um controlo está a ser permanentemente eliminado da sua zona.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> O método também fornece a oportunidade para cancelar o processo de eliminação. Se o controlo é eliminado com êxito da página, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>segue de evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Os programadores de página podem fornecer um processador personalizado para o evento associado ao adicionar o `OnWebPartDeleting` atributo para o `<asp:webpartmanager>` elemento na página Web e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;> </xref> eventos, que ocorre após um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo foi movido para uma localização diferente numa página."
  remarks: "O método OnWebPartMoved gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>eventos no final muito a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>método, que garante que o processo de mover um controlo é concluído antes de qualquer código de eventos de execuções do processador.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>evento é gerado quando um controlo é movido dentro do respetiva da atual zona da ou para outra zona e é irrelevante se o movimento é feito através de programação ou por um utilizador arrastar o controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Os programadores de página podem criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>eventos adicionando o `OnWebPartMoved` atributo para o `asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;> </xref> evento, o que indica que um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor ou o utilizador numa <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona está a ser movido."
  remarks: "O método OnWebPartMoving gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>eventos, que ocorre quando um <xref:System.Web.UI.WebControls.WebParts.WebPart>ou outro controlo de servidor está a ser movido dentro da sua zona ou para outra zona.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> O método também fornece a oportunidade para cancelar o processo de mover. Se a mudança ser concluída com êxito, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>segue de evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Os programadores de página podem fornecer um processador personalizado para o evento associado ao adicionar o `OnWebPartMoving` atributo para o `<asp:webpartmanager>` elemento na página Web e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;> </xref> eventos, que ocorre após foi estabelecida uma ligação entre <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos."
  remarks: "O método OnWebPartsConnected desencadeia o evento correspondente no final muito a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>método, que garante que os passos necessários para ligar duas controlos sejam concluídos antes de qualquer código o processador de eventos é executado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       O método fornece programático controlo sobre o processo de criação de ligações e o evento associado é um ponto de conveniente no qual pretende atualizar a interface de utilizador (IU) ou notificar um utilizador que foi estabelecida uma ligação.       Os programadores de página podem criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>eventos adicionando o `OnWebPartsConnected` atributo para o `asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;> </xref> eventos, que ocorre durante o processo de estabelecer uma ligação entre dois <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlos de servidor ou de utilizador contidos num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "O método OnWebPartsConnecting gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>eventos, que ocorre quando os dois controlos tentam estabelecer uma ligação.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> O método proporciona a oportunidade para cancelar a tentativa de ligação. Se a ligação for bem-sucedida, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>segue de evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Os programadores de página podem fornecer um processador personalizado para o evento associado ao adicionar o `OnWebPartsConnecting` atributo para o `<asp:webpartmanager>` elemento na página Web e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;> </xref> eventos, que ocorre após uma ligação entre <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos terminou."
  remarks: "O método OnWebPartsDisconnected desencadeia o evento correspondente no final muito a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>método, o que acarreta terminar o processo de terminar uma ligação entre dois controlos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       O método fornece programático controlo sobre o processo de terminar uma ligação, para que os programadores podem informar o utilizador, efetuar alterações à interface de utilizador (IU), ou fazer outras alterações à aplicação.       Os programadores de página podem criar um processador personalizado para o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>eventos adicionando o `OnWebPartsDisconnected` atributo para o `asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;> </xref> evento, o que indica que duas <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlos de servidor ou o utilizador num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona estão terminar uma ligação."
  remarks: "O método OnWebPartsDisconnecting gera o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventos, que ocorre quando duas controlos são terminar uma ligação.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> O método proporciona a oportunidade para cancelar o processo de interrupção de ligação. Se a ligação é removida com êxito, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>segue de evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Os programadores de página podem fornecer um processador personalizado para o evento associado ao adicionar o `OnWebPartsDisconnecting` atributo para o `<asp:webpartmanager>` elemento na página Web e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência a um objeto que contém dados de personalização de uma página Web."
  remarks: "A propriedade de personalização fornece uma maneira para aceder a <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>objeto que está associado uma página através de <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Utilizar esta propriedade, pode aceder os vários membros do objeto de personalização. Por exemplo, pode utilizar o <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>método para mudar o âmbito de personalização da página de partilhado para o âmbito do utilizador, ou vice versa.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Também pode encontrar o âmbito de personalização atual da página, se personalização mesmo está ativada na página, o fornecedor está a ser utilizado para os dados de personalização e muito mais.       Tenha em atenção que os dados referenciados pela propriedade personalização são apenas os dados de personalização de nível de página que são controlados pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Os dados de personalização de controlo específicos, tais como os valores das propriedades personalizável na <xref:System.Web.UI.WebControls.WebParts.WebPart>controla, não faz parte da propriedade de personalização.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Para obter mais informações sobre a personalização de peças Web, consulte [descrição geral de personalização de peças Web](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> que contém os dados de personalização."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Permite a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo para emitir o script do lado do cliente que é utilizado para diversas funcionalidades de personalização, tais como arrastar <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos numa página Web."
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Substituído para impedir o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo da composição qualquer conteúdo."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que recebe o conteúdo do controlo ao escrever para a página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Dados de estado de guarda o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlar para os dados podem ser restaurados num pedido futuro à página Web que contém o controlo."
  remarks: "SaveControlState método guarda os dados de estado para propriedades que devem ser persistente entre novas colocações de página, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A>propriedade está definida como `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>conter o controlo guardado do dados de estado.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Guarda os dados de estado de personalização personalizado mantidos pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlar, para que estes dados podem ser recarregados sempre que é recarregar a página."
  remarks: "O método SaveCustomPersonalizationState é essencial no processo de personalização, porque permite que as definições de utilizador personalizado ser armazenada para sessões do browser futuras e aceder a uma página. O método guarda os dados de estado de personalização personalizadas, que incluem itens como o seguinte: dinâmica <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlos de servidor que foram adicionados a uma página ou eliminados a partir de uma página; controlos que tenham sido transferidos numa página; e ligações dinâmicas que foram criadas ou eliminadas.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Não é possível chamar este método diretamente a partir do seu código. No entanto, pode, chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>método, o que se chama este método para guardar os dados de personalização.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> que contém os dados de estado para ser carregado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor que está atualmente selecionado para edição ou para criar uma ligação com outro controlo."
  remarks: "A propriedade SelectedWebPart devolve uma referência a um <xref:System.Web.UI.WebControls.WebParts.WebPart>ou outro controlo de servidor que está atualmente selecionado para edição ou para criar uma ligação com outro controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart>       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo fornece vários métodos útil e eventos para processamento do processo de selecionar um controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>evento ocorre depois de um controlo é selecionado, mas antes de serem efetuadas quaisquer alterações.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Para realizar algumas ações no controlo depois estiver selecionada, substitua o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Por exemplo, poderá alterar o aspeto de um controlo que está selecionado, mas não foi alterado ainda, para realçar visualmente o controlo está selecionado.       O <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>evento ocorre depois do controlo selecionado foi alterado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Para realizar algumas ações no controlo depois de ter sofrido alterações, substituir o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo atualmente selecionado para a edição ou que formam uma ligação."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre após a seleção de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo foi alterado e movido para outro controlo numa página Web."
  remarks: "Este evento pode ser utilizado em conjunto com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>método para alterar a interface de utilizador (UI) de um controlo selecionado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Por exemplo, se o utilizador muda a página para o modo de estrutura (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>) e, em seguida, seleciona um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo com o objetivo arrastando-la para uma nova posição, é comum para alterar a composição do controlo selecionado, por exemplo, alterando a cor do respetivo limite ou em segundo plano enquanto estiver selecionada.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      > [!NOTE] > Para obter mais informações sobre a consumir eventos, consulte [como: consumir eventos numa aplicação Web Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de alteração que <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor é atualmente selecionado numa página Web."
  remarks: "Este evento pode ser utilizado em conjunto com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Os programadores de página, podem criar um processador de eventos no respetivo código adicionando o `OnSelectedWebPartChanging` atributo para o `<asp:webpartmanager>` elemento na página e definindo o valor do atributo como o nome de um método personalizado que irá processar o evento.       Este evento é desencadeado durante o processo de iniciar ou terminar uma ligação entre controlos e quando o início e fim de uma edição de um controlo. Para obter mais informações, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       Normalmente, quando o evento SelectedWebPartChanging é emitido como um resultado direto de ação do utilizador que altera o controlo selecionado, o evento pode ser cancelado. No entanto, é um cenário no qual o evento não pode ser cancelado. Se um <xref:System.Web.UI.WebControls.WebParts.WebPartZone>controlo for eliminado, o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos contém têm todos de ser fechados, caso contrário, seria órfã.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> Neste caso, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar fechar o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, não o utilizador e tem de determinar qual controlo atualmente selecionado e alterar a seleção sem qualquer possibilidade de interrupção, para que possa concluir o processo de limpeza de todos os controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Por conseguinte, por predefinição o SelectedWebPartChanging método não é possível cancelar neste cenário. Para um evento relacionado que pode ser cancelado, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Define um sinalizador que indica que os dados de personalização personalizado para o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo foi alterada."
  remarks: "O método SetPersonalizationDirty define um sinalizador que, fundamentalmente, faz com que os componentes de personalização no controlo de peças Web definido para guardar os dados de personalização atualizado. Para mais informações sobre os cenários que pode fazer com que as alterações dos dados de personalização controlados pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       O método SetPersonalizationDirty não pode ser chamado diretamente a partir do código e não pode ser substituído, porque é utilizada internamente pelo controlo de peças Web definido como parte da funcionalidade de personalização de peças Web."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Define o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>valor da propriedade igual a atualmente selecionado <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "O método de SetSelectedWebPart é chamado durante os processos que começam ou terminar a edição do controlo especificado pelo `webPart` parâmetro e aqueles que começar ou terminar uma ligação que inclui `webPart`.       O início dos processos de ligação e editar, `webPart` é o controlo que foi selecionado para ser editada ou introduza uma ligação.       No final dos processos de ligação e editar, `null` é passado para o método SetSelectedWebPart, o que resulta no controlo da atualmente selecionado já não está a ser selecionado."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor que foi selecionado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém ou define uma cadeia vazia (&quot;&quot;) para que possam ser aplicada sem máscara para o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "A propriedade SkinID substitui o herdados <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>propriedade para impedir o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo, que é um controlo invisível, da utilização das máscaras.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> A implementação da propriedade impede uma skin de que está a ser atribuído ao sempre devolver uma cadeia vazia do `get` acessor e sempre gerar uma exceção se houver uma tentativa para definir um valor `set` acessor."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Uma cadeia vazia que impede o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo de ter uma skin atribuída."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Foi efetuada uma tentativa para definir o valor da propriedade."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para a coleção de todos os <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> objetos numa página Web que estão definidos como ligações estáticas."
  remarks: "A propriedade StaticConnections é utilizada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo para controlar e gerir todas as ligações estáticas numa página.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Uma ligação estática, em contraste com uma ligação dinâmica, não precisa de ser adicionado a uma página sempre que a página ser composta.       A coleção referenciada por esta propriedade contém todas as ligações estáticas que existe na página, se são criados através de programação ou especificados com um `<asp:webpartconnection>` elemento na marcação de página."
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> que contém todas as ligações estáticas na página."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma coleção só de leitura de todos os modos de apresentação que estão disponíveis numa página Web específica."
  remarks: "A propriedade SupportedDisplayModes contém apenas os modos de apresentação, na verdade, disponíveis numa página, fornecida os tipos de controlos de zona presentes na página.      > [!NOTE] > Modos de apresentação podem ser desativados e, quando um modo de visualização está desativado, não está adicionada à coleção SupportedDisplayModes, mesmo quando o tipo correspondente da zona que suporta esse modo de visualização está presente na página.       O modo de procura e modo de estrutura são sempre suportadas. Os modos de apresentação que podem variar forem a edição do catálogo e ligar modos. Cada uma dos seguintes modos de apresentação está associado um determinado tipo de <xref:System.Web.UI.WebControls.WebParts.ToolZone>controlo.</xref:System.Web.UI.WebControls.WebParts.ToolZone> É a presença dessa zona especial escrita numa página Web que faz com que um modo de apresentação específico para ser adicionado à coleção referenciada pela propriedade SupportedDisplayModes. Por exemplo, se uma página Web contém uma <xref:System.Web.UI.WebControls.WebParts.EditorZone>zona, mas não uma <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zona, em seguida, o modo de visualização de edição é um dos modos de suportados nessa página, mas o modo de apresentação do catálogo não é suportado.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      > [!NOTE] > SupportedDisplayModes a propriedade difere de acordo com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>propriedade, o que faz referência a uma coleção que contém todos os modos de apresentação que estão disponíveis para o atual <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar, incluindo os que não são suportadas por uma página específica.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> que contém o conjunto de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> objetos disponíveis numa página Web específica."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que indica se os dados de estado de personalização personalizado gerido pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo foi alterado numa página Web."
  remarks: "A propriedade IPersonalizable.IsDirty fornece uma forma para os chamadores determinar se dados que são geridos pelo Estado de personalização a <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo foi alterada.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Quando os utilizadores personalizar detalhes ao nível da página, por exemplo, alterar o esquema da página, criar ou eliminar ligações e adicionando ou eliminando controlos, os dados de personalização gerido pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar as alterações.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Este é um método pass-through que devolve para os chamadores o valor de protegida <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>propriedade, o que não pode ser acedida diretamente pelos chamadores.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      > [!NOTE] > IPersonalizable.IsDirty a propriedade não indicar se os valores de propriedade personalizável ou propriedades individuais que afetam o aspecto do indivíduo <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, foram alterados.</xref:System.Web.UI.WebControls.WebParts.WebPart> Personalização de nível de controlo é controlada individualmente para cada controlo. A propriedade IPersonalizable.IsDirty só indica se os dados de personalização que é o nível de página e for gerido pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo foi alterada.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       A lista seguinte descreve algumas instâncias comuns de personalização que faria com que a propriedade IPersonalizable.IsDirty devolver um valor de `true`, indicando que que o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo tem alguns dados de personalização alteradas:-Fechar static <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo (ou controlo de utilizador ou servidor) numa página.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -Restaurar static fechado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo de um catálogo de página para uma página.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Mover qualquer controlo dentro do respetiva zona ou para outra zona.      -A adição de um controlo de um catálogo de <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos de servidor ou a adicionar um controlo através de programação.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Criar uma ligação entre dois <xref:System.Web.UI.WebControls.WebParts.WebPart>controla, através de programação ou utilizando a interface de utilizador (UI) de ligação.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -A eliminação de uma ligação entre dois <xref:System.Web.UI.WebControls.WebParts.WebPart>controla, através de programação ou utilizando a IU de ligação.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Para aceder a este valor de propriedade, tem de converter o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>instância de controlo para o <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>interface; pode ler, em seguida, o <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>valor da propriedade.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se os dados de estado de personalização foi alterado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Devolve os dados de estado de personalização personalizado que tem de ser carregado para guardado anteriormente o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "Este método é uma implementação do <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>método, o que fornece uma forma para o controlo de peças Web definido como diretamente acesso protegida <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> Quando este método é denominado, armazena os dados personalizados personalizados que são geridos pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo e que foi guardado anteriormente no arquivo de dados permanente para utilização mais tarde no processo de inicialização.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > Na maioria dos casos, página e o controlo de código de programador não tem de chamar este método, porque é utilizada principalmente pelo controlo de peças Web definido como o mecanismo para obter os dados de personalização."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> que contém os dados de estado para ser carregado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Guarda os dados de estado de personalização personalizada que são geridos pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo."
  remarks: "O método IPersonalizable.Save é uma implementação do <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>método, o que fornece uma forma para o controlo de peças Web definido como diretamente acesso protegida <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> Quando este método é denominado, o que lhe poupa personalizados todos os dados que são geridos pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo para o arquivo de dados permanente configurado para uma aplicação de peças Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > Na maioria dos casos, página e o controlo de código de programador não tem de chamar este método, porque é utilizada principalmente pelo controlo de peças Web definido como o mecanismo para guardar os dados de personalização."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> que contém os dados de estado guardado."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Aplica-se dados de estado de personalização a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo e o método base para ativar o controlo de alterações para os dados de estado de visualização para o controlo de chamadas."
  remarks: "As alterações aos dados de estado de visualização são armazenadas num <xref:System.Web.UI.StateBag>de objeto e pode ser acedida através do controlo <xref:System.Web.UI.Control.ViewState%2A>propriedade.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um valor que permite controlos subordinados seja visível."
  remarks: "O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo substitui a base de <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>propriedade sempre devolver um valor de `true` para a propriedade Visible.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Apesar do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo propriamente dito não estiver visível, a propriedade Visible tem de ser definido como `true` para que todos os respectivos controlos subordinados estão visíveis por predefinição.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Se tentar definir o valor da propriedade visível, sempre gera um erro porque o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo substituiu o comportamento de base da propriedade e impede a atribuir qualquer valor para a propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Esta propriedade não é que podem ser ligada em visual designers, mas que podem ser ligada em tempo de execução. Para obter mais informações, consulte <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Um valor booleano que indica se um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo e respectivos controlos subordinados estão visíveis. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Foi efetuada uma tentativa de atribuir um valor para a propriedade."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de um dinâmico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor que tenha sido adicionado a um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona, para indicar que o controlo foi adicionado com êxito."
  remarks: "O evento WebPartAdded é útil para indicar que um controlo dinâmico (um controlo adicionado através de programação, por oposição a ser declarado na marcação de página) foi adicionado com êxito a uma zona. Em conjunto com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>método, o evento fornece aos programadores uma forma de atualizar a interface de utilizador (IU) ou caso contrário, notificar os utilizadores que um controlo foi adicionado com êxito.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de adicionar um dinâmico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "O evento de WebPartAdding é gerado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>método depois do processo de adicionar um controlo a uma zona foi iniciada.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Este evento fornece uma oportunidade para cancelar o processo antes de terminar. Se o processo de adição for bem sucedido, este evento é seguido de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Os programadores de página podem fornecer processadores personalizados para o evento adicionando o `OnWebPartAdding` atributo para o `<asp:webpartmanager>` elemento na página e atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre quando um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo (ou controlo de utilizador ou servidor) é removido de uma página."
  remarks: "O evento WebPartClosed indica que um controlo ter sido com êxito fechado, por um utilizador ou através de programação. Para fechar um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo significa removê-lo a partir de uma página, para que não está a ser composto, e também para colocá-lo numa oferta especial que contém o objeto chamado um catálogo de página.</xref:System.Web.UI.WebControls.WebParts.WebPart> Um catálogo de página, que corresponde do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controlar, mantém as referências a fechado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos para cada página.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Se um <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controlo está declarado numa página dentro de um <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zona, os utilizadores podem mudar de uma página no modo de apresentação do catálogo e voltar a adicionar a uma página de quaisquer controlos que anteriormente foram fechados.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       O evento WebPartClosed está associado com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>método, o que gera o evento tanto fornece um processador para o mesmo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>       Os programadores de página podem adicionar um processador personalizado para o evento adicionando um `OnWebPartClosed` atributo para o `<asp:webpartmanager>` elemento na página e, em seguida, atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de remoção de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo (ou controlo de utilizador ou servidor) de uma página."
  remarks: "O evento de WebPartClosing é gerado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>método quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo está em vias de fecho de um controlo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Se a remoção do controlo for bem sucedida, este evento é seguido de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Os programadores de página, podem fornecer um processador personalizado para o evento adicionando o `OnWebPartClosed` atributo para o `asp:webpartmanager>` elemento na página e atribuir um nome de método personalizado para o atributo.       Normalmente, quando o evento WebPartClosing é emitido como um resultado direto de fecho de um utilizador um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, o evento pode ser cancelado.</xref:System.Web.UI.WebControls.WebParts.WebPart> No entanto, é um cenário no qual o evento não pode ser cancelado. Se um <xref:System.Web.UI.WebControls.WebParts.WebPartZone>controlo for eliminado, o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos contém têm todos de ser fechados, caso contrário, seria órfã.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> Neste caso, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar fechar o <xref:System.Web.UI.WebControls.WebParts.WebPart>controla, não o utilizador.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo está em vias de chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>método fechar cada controlar e o WebPartClosing o evento é gerado, o evento não é possível cancelar (por predefinição), porque o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>tem de concluir a tarefa de limpeza dos controlos da zona.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor foi eliminado de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "O evento WebPartDeleted é útil para indicar que um controlo dinâmico (um controlo adicionado através de programação, por oposição a ser declarado na marcação de página) foi eliminado com êxito de uma zona. Em conjunto com o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>método, o evento fornece aos programadores uma forma de atualizar a interface de utilizador (IU) ou caso contrário, notificar os utilizadores que um controlo foi eliminado com êxito.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de que pretende eliminar permanentemente uma instância de um dinâmico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "O evento de WebPartDeleting é gerado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>método, durante o processo de eliminação de um controlo dinâmico (um que tenha sido adicionado através de programação ou por um utilizador através da interface de utilizador de peças Web).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> O evento fornece uma oportunidade para cancelar o processo antes de estar concluído. Se o processo de eliminação ser concluído com êxito, este evento é seguido de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Os programadores de página podem fornecer processadores personalizados para o evento adicionando o `OnWebPartDeleting` atributo para o `<asp:webpartmanager>` elemento na página e atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou controlo de servidor foi movido para uma localização diferente numa página Web."
  remarks: "Este evento se aplica a estático (declarado na marcação de uma página Web) e controlos dinâmicos. Está a ser associado a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Porque o evento é desencadeado depois de concluída uma mudança, os programadores podem incluir um processador de eventos para fornecer alguns notificação aos utilizadores, alguns validação ou algumas outras ações. Para adicionar um processador de eventos, pode adicionar um `OnWebPartMoved` atributo para o `<asp:webpartmanager>` elemento numa página e atribuir o nome de um método para o atributo personalizado."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de mover um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou outro controlo de servidor que está contido num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "O evento de WebPartMoving é gerado quando um <xref:System.Web.UI.WebControls.WebParts.WebPart>ou outro controlo de servidor está a ser movido dentro da sua própria zona, ou para outra zona.</xref:System.Web.UI.WebControls.WebParts.WebPart> Isto pode ocorrer quando um utilizador arrasta um controlo, tanto quando há uma mudança programática.       O evento de WebPartMoving é gerado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>método e fornece uma oportunidade para cancelar o processo de mover antes de terminar.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Se a mudança ser concluída e o controlo colocado numa nova posição, este evento é seguido de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Os programadores de página podem criar um processador personalizado para o evento adicionando o `OnWebPartMoving` atributo para o `<asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para todos os <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos controlados pelo <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controlo numa página Web."
  remarks: "A propriedade de peças Web é utilizada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo para controlar todos os <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos que estão incluídos <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonas na página.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Embora a coleção é só de leitura, pode aceder ao individuais <xref:System.Web.UI.WebControls.WebParts.WebPart>controla programaticamente através das coleção e faça alterações contínuas aos mesmos.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > É possível ter um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo colocado numa página fora de um <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zona, o que resulta no controlo não controlado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlam ou referenciada na respetiva coleção de peças Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> No entanto, há pouca motivo para utilizar um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar fora de uma zona, porque, em seguida, perder a sua funcionalidade de peças Web e age como um controlo de servidor normal.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Qualquer tipo de controlo que pode ser colocado numa zona, se um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, um controlo ASP.NET padrão, um controlo de utilizador ou um controlo de servidor personalizado, pode ser tratado como um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo em tempo de execução.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Quando um controlo que não é um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo seja colocado num <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zona, em tempo de execução ASP.NET encapsula num wrapper o controlo com um <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objeto, para que o controlo pode ter um comportamento como um valor true <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Por conseguinte, ao utilizar a propriedade de peças Web, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo pode controlar a qualquer tipo de controlo de servidor, independentemente se deriva da <xref:System.Web.UI.WebControls.WebParts.WebPart>classe.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> que contém referências a um conjunto de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de uma ligação específica tiver sido estabelecida entre <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos (ou controlos de servidor ou o utilizador)."
  remarks: "O evento WebPartsConnected está associado a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> O evento é útil porque depois souber que uma ligação estiver concluída, pode querer informar o utilizador do facto de, ou mesmo alterar a interface de utilizador (IU) da página. Por exemplo, poderá apresentar alguns imagem do gráfico que sugere uma ligação entre dois controlos com êxito ou apresentar uma mensagem breve e, em seguida, altere o modo de visualização de página de volta para procurar modo.       Os programadores de página, podem associar um processador de eventos personalizado com este evento adicionando o `OnWebPartsConnected` atributo para o `<asp:webpartmanager>` elemento na página e atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de criação de uma ligação entre <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlos (ou controlos de servidor ou o utilizador colocadas num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona)."
  remarks: "O evento de WebPartsConnecting é gerado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>método, e indica que o processo de ligação começou (por exemplo, um utilizador tiver selecionado um controlo e clicado um verbo connect), mas ainda não foi concluído.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> O evento fornece uma oportunidade para cancelar uma ligação antes de terminar. Se a ligação for concluída com êxito, este evento é seguido de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Os programadores de página podem adicionar um processador personalizado para o evento adicionando o `OnWebPartsConnecting` atributo para o `<asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre depois de uma ligação entre dois <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou os controlos do servidor foi terminada."
  remarks: "O evento WebPartsDisconnected está associado a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> O evento é útil porque depois souber que uma ligação foi terminada, pode querer informar o utilizador, efetuar algumas ações de limpeza no código ou fazer outras alterações na interface de utilizador (IU).       Os programadores de página, podem associar um processador de eventos personalizado com este evento adicionando o `OnWebPartsDisConnected` atributo para o `<asp:webpartmanager>` elemento na página e atribuir um nome de método personalizado para o atributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ocorre durante o processo de terminar a ligação entre anteriormente ligado <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ou os controlos do servidor."
  remarks: "O evento de WebPartsDisconnecting é gerado pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>método e sinalizar o facto de que um utilizador tiver clicado um verbo desligar, ou o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>método caso contrário, ter sido chamado.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> O evento fornece uma oportunidade para cancelar o processo de terminar uma ligação antes de terminar. Se a ligação é terminada com êxito, este evento é seguido de <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Os programadores de página podem adicionar um processador personalizado para o evento adicionando o `OnWebPartsDisconnecting` atributo para o `<asp:webpartmanager>` elemento e atribuir um nome de método personalizado para o atributo.       Normalmente, quando o evento de WebPartsDisconnecting é gerado como resultado da ação de um utilizador que termina uma ligação direto, o evento pode ser cancelado. No entanto, existem vários cenários em que o evento não pode ser cancelado. É o primeiro cenário, se um <xref:System.Web.UI.WebControls.WebParts.WebPartZone>controlo for eliminado, o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos contém têm todos de ser fechados, caso contrário, seria órfã.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> Neste caso, o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlar fechar o <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos, não o utilizador e também tem de ser capazes de terminar as ligações de quaisquer controlos ligados sem qualquer possibilidade de interrupção, para que possa concluir o processo de limpeza e fechar todos os controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Por conseguinte, por predefinição o WebPartsDisconnecting método não é possível cancelar neste cenário. Para um evento relacionado que pode ser cancelado, consulte o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>eventos.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       O segundo cenário em que não é possível cancelar o evento WebPartsDisconnecting é quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>método é denominado (isto chamado durante cada pedido a uma página, por exemplo) e não existe algum tipo de conflito nas ligações existentes numa página.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Por exemplo, talvez um utilizador liga controlo x y de controlo, mas um utilizador partilhado liga controlo x para controlar o z e ainda controlo x não é permitido para formar várias ligações. Neste caso, as definições de um utilizador individual para a ligação precedência e o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo resolve o conflito ao chamar o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>método inicial e final a ligação entre x e z para o utilizador em particular.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Porque esta interrupção de ligação é essencial para resolver o conflito, por predefinição o WebPartsDisconnecting evento não é possível cancelar neste cenário.       O terceiro cenário em que não é possível cancelar o método WebPartsDisconnecting é quando uma <xref:System.Web.UI.WebControls.WebParts.WebPart>ou controlo de servidor que está atualmente ligado é eliminado ou fechado.</xref:System.Web.UI.WebControls.WebParts.WebPart> Uma vez que o controlo sem dúvida vai ser removido da página, é uma necessidade lógica para remover a ligação. Por conseguinte, quando o <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo invoca o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>método, o que ativar no desencadeia o evento WebPartsDisconnecting, por predefinição, não há nenhum possibilidade de cancelamento do evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência a uma coleção de todos os <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zonas numa página Web."
  remarks: "A propriedade de zonas é utilizada pelo <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controlo para controlar o <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zonas numa página Web.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Tenha em atenção que a propriedade não referencia todos os tipos de zonas; referencia apenas as zonas que derivam de <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>classe, incluindo <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zonas.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Embora a coleção referenciada pela propriedade é só de leitura, pode utilizá-lo para aceder aos objetos individuais na coleção e trabalhar com as mesmas através de programação."
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref> que referencia um conjunto de <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zonas."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
