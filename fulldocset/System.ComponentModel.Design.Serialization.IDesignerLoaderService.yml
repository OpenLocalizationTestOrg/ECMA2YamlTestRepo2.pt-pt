### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  id: IDesignerLoaderService
  children:
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  langs:
  - csharp
  name: IDesignerLoaderService
  nameWithType: IDesignerLoaderService
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  type: Interface
  summary: "Provides an interface that can extend a designer loader to support asynchronous loading of external components."
  remarks: "A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components. This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>. A designer loader does not have to implement this interface if it does not require support for asynchronous loading.       Designer loading using a custom implementation of the IDesignerLoaderService can occur in a variety of ways. Sometimes external components are involved in the loading process. To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed. The IDesignerLoaderService typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining. When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter. To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete. When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host."
  syntax:
    content: public interface IDesignerLoaderService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  id: AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Registers an external component as part of the load process managed by this interface."
  remarks: "Call AddLoadDependency once for each external object participating in the load process. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done."
  syntax:
    content: public void AddLoadDependency ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  id: DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Signals that a dependent load has finished."
  remarks: "This method is called to signal that a dependent loading operation has completed. Call DependentLoadComplete once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.       If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter. If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter."
  syntax:
    content: public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the load of the designer is successful; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if errors prevented the load from finishing."
    - id: errorCollection
      type: System.Collections.ICollection
      description: "A collection of errors that occurred during the load, if any. If no errors occurred, pass either an empty collection or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  id: Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Reloads the design document."
  remarks: "Any object can call this method to request that the loader reload the design document. If the loader supports reloading and complies with the reload, the designer loader can return `true`. Otherwise, it returns `false`, indicating that the reload will not occur. Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.       The caller can display a message to the user if the designer cannot be reloaded."
  syntax:
    content: public bool Reload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the reload request is accepted, or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the loader does not allow the reload."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency
  nameWithType: IDesignerLoaderService.AddLoadDependency
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete
  nameWithType: IDesignerLoaderService.DependentLoadComplete
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload
  nameWithType: IDesignerLoaderService.Reload
