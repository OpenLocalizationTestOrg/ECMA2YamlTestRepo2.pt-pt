### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  id: IDesignerLoaderService
  children:
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  langs:
  - csharp
  name: IDesignerLoaderService
  nameWithType: IDesignerLoaderService
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  type: Interface
  summary: "Fornece uma interface que pode expandir um carregador de estruturador para suportar o carregamento assíncrono da componentes externos."
  remarks: "A <xref:System.ComponentModel.Design.Serialization.DesignerLoader>pode implementar esta interface para gerir a carregar estruturador que envolve componentes externos.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> Esta interface também permite que os componentes externos iniciar um recarregamento da superfície do design chamando <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A> Não tem um carregador de estruturador para implementar esta interface se não requer o suporte para o carregamento assíncrono.       Estruturador de carregar a utilizar uma implementação personalizada a IDesignerLoaderService pode ocorrer numa variedade de formas. Componentes externos, por vezes, envolvidos no processo de carregamento. Para facilitar a carregar com dependências externas, a interface de serviço do carregador de estruturador fornece um mecanismo que determina quando o carregamento estiver concluído e permite que cada parte de carregar para assinalar que foi concluída. O IDesignerLoaderService normalmente determina quando carregar é concluída ao testar um contador que controla o número de dependências de carga restante. Quando tiver concluído a cada parte da carga do, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>denomina-se e a é decrementada serviço o contador.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> Para definir o número de processos de carga dependentes, chamar <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>uma vez para cada processo de carga que chama <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>quando o carregamento estiver concluído.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> Quando o carregamento final está concluído, as chamadas de serviço <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>no anfitrião de carregador.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>"
  syntax:
    content: public interface IDesignerLoaderService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  id: AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Regista um componente externo como parte do processo de carregamento gerido por esta interface."
  remarks: "Chamada AddLoadDependency uma vez para cada objeto externo que participam no processo de carga. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>é chamado quando o trabalho do processo de carregamento é concluído.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>"
  syntax:
    content: public void AddLoadDependency ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  id: DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Sinais que concluiu a uma carga dependente."
  remarks: "Este método é denominado para assinalar que foi concluída uma operação de carregamento dependentes. Chamar DependentLoadComplete uma vez para cada processo que foi registado chamando <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, que já foi concluída.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>       Se a carga dependente for bem sucedida, os conjuntos de autor da chamada de `successful` parâmetro `true` e passa a uma coleção vazia ou `null` para o `errorCollection` parâmetro. Se a carga dependente detetar erros, o autor da chamada define o `successful` parâmetro `false` e passa a uma coleção de exceções que indicar o motivo ou os motivos da falha para o `errorCollection` parâmetro."
  syntax:
    content: public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a carga do designer for bem sucedida; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se erros impediram o carregamento de concluir."
    - id: errorCollection
      type: System.Collections.ICollection
      description: "Uma coleção de erros que ocorreram durante o carregamento, se aplicável. Se não existem erros detetados, passar a uma coleção vazia ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  id: Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  langs:
  - csharp
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Reloads o documento de design."
  remarks: "Qualquer objeto pode chamar este método para pedir que o documento de design de recarregamento de carregador. Se o carregador suporta recarregar e está em conformidade com a carregue novamente, o carregador do estruturador pode devolver `true`. Caso contrário, devolve `false`, indicando que a carregue novamente não irá ocorrer. Os chamadores não é possível dependem recarregar acontecer imediatamente; o carregador do estruturador pode agendar este outros algum tempo ou, pode tentar recarregar em simultâneo.       O autor da chamada pode apresentar uma mensagem ao utilizador se não é possível recarregar o estruturador."
  syntax:
    content: public bool Reload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o pedido de recarregamento é aceite, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o carregador não permite a recarregar."
  overload: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency()
  nameWithType: IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete(Boolean,ICollection)
  nameWithType: IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload()
  nameWithType: IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: AddLoadDependency
  nameWithType: IDesignerLoaderService.AddLoadDependency
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: DependentLoadComplete
  nameWithType: IDesignerLoaderService.DependentLoadComplete
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload*
  parent: System.ComponentModel.Design.Serialization.IDesignerLoaderService
  isExternal: false
  name: Reload
  nameWithType: IDesignerLoaderService.Reload
