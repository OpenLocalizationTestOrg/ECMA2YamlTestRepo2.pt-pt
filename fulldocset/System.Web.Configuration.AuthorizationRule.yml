### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.AuthorizationRule
  id: AuthorizationRule
  children:
  - System.Web.Configuration.AuthorizationRule.#ctor(System.Web.Configuration.AuthorizationRuleAction)
  - System.Web.Configuration.AuthorizationRule.Action
  - System.Web.Configuration.AuthorizationRule.Equals(System.Object)
  - System.Web.Configuration.AuthorizationRule.GetHashCode
  - System.Web.Configuration.AuthorizationRule.IsModified
  - System.Web.Configuration.AuthorizationRule.PostDeserialize
  - System.Web.Configuration.AuthorizationRule.PreSerialize(System.Xml.XmlWriter)
  - System.Web.Configuration.AuthorizationRule.Properties
  - System.Web.Configuration.AuthorizationRule.Reset(System.Configuration.ConfigurationElement)
  - System.Web.Configuration.AuthorizationRule.ResetModified
  - System.Web.Configuration.AuthorizationRule.Roles
  - System.Web.Configuration.AuthorizationRule.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Web.Configuration.AuthorizationRule.SetReadOnly
  - System.Web.Configuration.AuthorizationRule.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Web.Configuration.AuthorizationRule.Users
  - System.Web.Configuration.AuthorizationRule.Verbs
  langs:
  - csharp
  name: AuthorizationRule
  nameWithType: AuthorizationRule
  fullName: System.Web.Configuration.AuthorizationRule
  type: Class
  summary: "A classe de AuthorizationRule permite-lhe aceder e modificar programaticamente o <xref uid=&quot;langword_csharp_authorization&quot; name=&quot;authorization&quot; href=&quot;&quot;> </xref> secção de um ficheiro de configuração. Esta classe não pode ser herdada."
  remarks: "A classe de AuthorizationRule fornece uma forma de aceder e modificar programaticamente o `authorization` secção de um ficheiro de configuração.       Este tipo faz parte de um grupo que inclua o <xref:System.Web.Configuration.AuthorizationSection>, a <xref:System.Web.Configuration.AuthorizationRuleCollection>e o <xref:System.Web.Configuration.AuthorizationRuleAction>tipos.</xref:System.Web.Configuration.AuthorizationRuleAction> </xref:System.Web.Configuration.AuthorizationRuleCollection> </xref:System.Web.Configuration.AuthorizationSection>      > [!NOTE] > O <xref:System.Web.Configuration.AuthorizationSection>pode atualizar as informações de configuração qualquer nível na hierarquia de configuração.</xref:System.Web.Configuration.AuthorizationSection>"
  example:
  - "The following code example demonstrates how to use the AuthorizationRule.  \n  \n> [!NOTE]\n>  If you use the `credentials` section, be sure to follow the guidelines explained at [ASP.NET Authentication](~/add/includes/ajax-current-ext-md.md). For scalability and better security capability, it is recommended that you use an external database to store users' credentials. For more information about building secure ASP.NET applications, search the Microsoft MSDN Web site (msdn.microsoft.com) for \"Securing Your ASP.NET Application\" and \"Building Secure ASP.NET Applications: Authentication, Authorization, and Secure Communication.\"  \n  \n [!code-cs[System.Web.Configuration.Authorization#4](~/add/codesnippet/csharp/t-system.web.configurati_70_1.cs)]\n [!code-vb[System.Web.Configuration.Authorization#4](~/add/codesnippet/visualbasic/t-system.web.configurati_70_1.vb)]  \n  \n [!code-cs[System.Web.Configuration.Authorization#6](~/add/codesnippet/csharp/t-system.web.configurati_70_2.cs)]\n [!code-vb[System.Web.Configuration.Authorization#6](~/add/codesnippet/visualbasic/t-system.web.configurati_70_2.vb)]"
  syntax:
    content: 'public sealed class AuthorizationRule : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.#ctor(System.Web.Configuration.AuthorizationRuleAction)
  id: '#ctor(System.Web.Configuration.AuthorizationRuleAction)'
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: AuthorizationRule(AuthorizationRuleAction)
  nameWithType: AuthorizationRule.AuthorizationRule(AuthorizationRuleAction)
  fullName: System.Web.Configuration.AuthorizationRule.AuthorizationRule(AuthorizationRuleAction)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.Configuration.AuthorizationRule&quot;> </xref> classe utilizando o objeto transmitido."
  remarks: "O construtor de AuthorizationRule não se destina a ser utilizado diretamente a partir do seu código. Denomina-se pelo sistema de configuração do ASP.NET."
  syntax:
    content: public AuthorizationRule (System.Web.Configuration.AuthorizationRuleAction action);
    parameters:
    - id: action
      type: System.Web.Configuration.AuthorizationRuleAction
      description: "O <xref href=&quot;System.Web.Configuration.AuthorizationRule&quot;> </xref> objeto a utilizar para iniciar a nova instância."
  overload: System.Web.Configuration.AuthorizationRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Action
  id: Action
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Action
  nameWithType: AuthorizationRule.Action
  fullName: System.Web.Configuration.AuthorizationRule.Action
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o <xref href=&quot;System.Web.Configuration.AuthorizationRule&quot;> </xref> ação."
  remarks: "No momento de execução do módulo de autorização itera através de `allow` e `deny` elementos até encontrar o acesso a primeira regra que se adequa a um utilizador específico. -Lo, em seguida, concede ou nega o acesso a um recurso de URL, dependendo se está a primeira regra de acesso encontrada `allow` ou `deny`. Por predefinição, é permitido o acesso."
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Web.Configuration.Authorization#6](~/add/codesnippet/csharp/p-system.web.configurati_46_1.cs)]\n [!code-vb[System.Web.Configuration.Authorization#6](~/add/codesnippet/visualbasic/p-system.web.configurati_46_1.vb)]"
  syntax:
    content: public System.Web.Configuration.AuthorizationRuleAction Action { get; set; }
    return:
      type: System.Web.Configuration.AuthorizationRuleAction
      description: "Um do <xref href=&quot;System.Web.Configuration.AuthorizationRuleAction&quot;> </xref> valores."
  overload: System.Web.Configuration.AuthorizationRule.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AuthorizationRule.Equals(Object)
  fullName: System.Web.Configuration.AuthorizationRule.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Determina se o objeto especificado é igual para o objeto atual."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto para a comparação com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os objetos são iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.AuthorizationRule.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.GetHashCode
  id: GetHashCode
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AuthorizationRule.GetHashCode()
  fullName: System.Web.Configuration.AuthorizationRule.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Funciona como uma função de hash para este objeto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um número inteiro que representa o código hash para o objeto atual."
  overload: System.Web.Configuration.AuthorizationRule.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.IsModified
  id: IsModified
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: IsModified()
  nameWithType: AuthorizationRule.IsModified()
  fullName: System.Web.Configuration.AuthorizationRule.IsModified()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Web.Configuration.AuthorizationRule.IsModified*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.PostDeserialize
  id: PostDeserialize
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: AuthorizationRule.PostDeserialize()
  fullName: System.Web.Configuration.AuthorizationRule.PostDeserialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void PostDeserialize ();
    parameters: []
  overload: System.Web.Configuration.AuthorizationRule.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.PreSerialize(System.Xml.XmlWriter)
  id: PreSerialize(System.Xml.XmlWriter)
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: PreSerialize(XmlWriter)
  nameWithType: AuthorizationRule.PreSerialize(XmlWriter)
  fullName: System.Web.Configuration.AuthorizationRule.PreSerialize(XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void PreSerialize (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A adicionar."
  overload: System.Web.Configuration.AuthorizationRule.PreSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Properties
  id: Properties
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Properties
  nameWithType: AuthorizationRule.Properties
  fullName: System.Web.Configuration.AuthorizationRule.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.Web.Configuration.AuthorizationRule.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: AuthorizationRule.Reset(ConfigurationElement)
  fullName: System.Web.Configuration.AuthorizationRule.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "A adicionar."
  overload: System.Web.Configuration.AuthorizationRule.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.ResetModified
  id: ResetModified
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: ResetModified()
  nameWithType: AuthorizationRule.ResetModified()
  fullName: System.Web.Configuration.AuthorizationRule.ResetModified()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void ResetModified ();
    parameters: []
  overload: System.Web.Configuration.AuthorizationRule.ResetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Roles
  id: Roles
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Roles
  nameWithType: AuthorizationRule.Roles
  fullName: System.Web.Configuration.AuthorizationRule.Roles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém as funções associadas o recursos."
  remarks: "A propriedade de funções é uma lista das funções que são concedeu ou negou o acesso ao recurso. Tem de existir pelo menos um valor no <xref:System.Web.Configuration.AuthorizationRule.Users%2A>coleção de propriedade ou a coleção de propriedade de funções ou ambos.</xref:System.Web.Configuration.AuthorizationRule.Users%2A>"
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Web.Configuration.Authorization#6](~/add/codesnippet/csharp/p-system.web.configurati_10_1.cs)]\n [!code-vb[System.Web.Configuration.Authorization#6](~/add/codesnippet/visualbasic/p-system.web.configurati_10_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection Roles { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> coleção que contém as funções cuja autorização tem de ser verificada."
  overload: System.Web.Configuration.AuthorizationRule.Roles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  id: SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: AuthorizationRule.SerializeElement(XmlWriter,Boolean)
  fullName: System.Web.Configuration.AuthorizationRule.SerializeElement(XmlWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override bool SerializeElement (System.Xml.XmlWriter writer, bool serializeCollectionKey);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A adicionar."
    - id: serializeCollectionKey
      type: System.Boolean
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Web.Configuration.AuthorizationRule.SerializeElement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: AuthorizationRule.SetReadOnly()
  fullName: System.Web.Configuration.AuthorizationRule.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Web.Configuration.AuthorizationRule.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  id: Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: AuthorizationRule.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Web.Configuration.AuthorizationRule.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void Unmerge (System.Configuration.ConfigurationElement sourceElement, System.Configuration.ConfigurationElement parentElement, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: sourceElement
      type: System.Configuration.ConfigurationElement
      description: "A adicionar."
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "A adicionar."
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: "A adicionar."
  overload: System.Web.Configuration.AuthorizationRule.Unmerge*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Users
  id: Users
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Users
  nameWithType: AuthorizationRule.Users
  fullName: System.Web.Configuration.AuthorizationRule.Users
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém os utilizadores associados o recursos."
  remarks: "A propriedade de utilizadores é uma lista de utilizadores que são concedeu ou negou o acesso ao recurso. Tem de existir pelo menos um valor na coleção de propriedade os utilizadores ou o <xref:System.Web.Configuration.AuthorizationRule.Roles%2A>coleção de propriedades, ou ambos.</xref:System.Web.Configuration.AuthorizationRule.Roles%2A>"
  example:
  - "The following code example shows how to use this property.  \n  \n [!code-cs[System.Web.Configuration.Authorization#6](~/add/codesnippet/csharp/p-system.web.configurati_392_1.cs)]\n [!code-vb[System.Web.Configuration.Authorization#6](~/add/codesnippet/visualbasic/p-system.web.configurati_392_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection Users { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> coleção que contém os utilizadores cuja autorização tem de ser verificada."
  overload: System.Web.Configuration.AuthorizationRule.Users*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.AuthorizationRule.Verbs
  id: Verbs
  parent: System.Web.Configuration.AuthorizationRule
  langs:
  - csharp
  name: Verbs
  nameWithType: AuthorizationRule.Verbs
  fullName: System.Web.Configuration.AuthorizationRule.Verbs
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém os verbos associados o recursos."
  remarks: "A propriedade de verbos é uma lista separada por vírgulas dos métodos de transmissão de HTTP que são concedeu ou negou o acesso ao recurso."
  example:
  - "The following code example shows how to access this property.  \n  \n [!code-cs[System.Web.Configuration.Authorization#6](~/add/codesnippet/csharp/p-system.web.configurati_264_1.cs)]\n [!code-vb[System.Web.Configuration.Authorization#6](~/add/codesnippet/visualbasic/p-system.web.configurati_264_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection Verbs { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> coleção que contém os verbos cuja autorização tem de ser verificada."
  overload: System.Web.Configuration.AuthorizationRule.Verbs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.AuthorizationRule.#ctor(System.Web.Configuration.AuthorizationRuleAction)
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: AuthorizationRule(AuthorizationRuleAction)
  nameWithType: AuthorizationRule.AuthorizationRule(AuthorizationRuleAction)
  fullName: System.Web.Configuration.AuthorizationRule.AuthorizationRule(AuthorizationRuleAction)
- uid: System.Web.Configuration.AuthorizationRuleAction
  parent: System.Web.Configuration
  isExternal: false
  name: AuthorizationRuleAction
  nameWithType: AuthorizationRuleAction
  fullName: System.Web.Configuration.AuthorizationRuleAction
- uid: System.Web.Configuration.AuthorizationRule.Action
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Action
  nameWithType: AuthorizationRule.Action
  fullName: System.Web.Configuration.AuthorizationRule.Action
- uid: System.Web.Configuration.AuthorizationRule.Equals(System.Object)
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Equals(Object)
  nameWithType: AuthorizationRule.Equals(Object)
  fullName: System.Web.Configuration.AuthorizationRule.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Configuration.AuthorizationRule.GetHashCode
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: GetHashCode()
  nameWithType: AuthorizationRule.GetHashCode()
  fullName: System.Web.Configuration.AuthorizationRule.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.AuthorizationRule.IsModified
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: IsModified()
  nameWithType: AuthorizationRule.IsModified()
  fullName: System.Web.Configuration.AuthorizationRule.IsModified()
- uid: System.Web.Configuration.AuthorizationRule.PostDeserialize
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: PostDeserialize()
  nameWithType: AuthorizationRule.PostDeserialize()
  fullName: System.Web.Configuration.AuthorizationRule.PostDeserialize()
- uid: System.Web.Configuration.AuthorizationRule.PreSerialize(System.Xml.XmlWriter)
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: PreSerialize(XmlWriter)
  nameWithType: AuthorizationRule.PreSerialize(XmlWriter)
  fullName: System.Web.Configuration.AuthorizationRule.PreSerialize(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.Configuration.AuthorizationRule.Properties
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Properties
  nameWithType: AuthorizationRule.Properties
  fullName: System.Web.Configuration.AuthorizationRule.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.AuthorizationRule.Reset(System.Configuration.ConfigurationElement)
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: AuthorizationRule.Reset(ConfigurationElement)
  fullName: System.Web.Configuration.AuthorizationRule.Reset(ConfigurationElement)
- uid: System.Web.Configuration.AuthorizationRule.ResetModified
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: ResetModified()
  nameWithType: AuthorizationRule.ResetModified()
  fullName: System.Web.Configuration.AuthorizationRule.ResetModified()
- uid: System.Web.Configuration.AuthorizationRule.Roles
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Roles
  nameWithType: AuthorizationRule.Roles
  fullName: System.Web.Configuration.AuthorizationRule.Roles
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.Web.Configuration.AuthorizationRule.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: SerializeElement(XmlWriter,Boolean)
  nameWithType: AuthorizationRule.SerializeElement(XmlWriter,Boolean)
  fullName: System.Web.Configuration.AuthorizationRule.SerializeElement(XmlWriter,Boolean)
- uid: System.Web.Configuration.AuthorizationRule.SetReadOnly
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: SetReadOnly()
  nameWithType: AuthorizationRule.SetReadOnly()
  fullName: System.Web.Configuration.AuthorizationRule.SetReadOnly()
- uid: System.Web.Configuration.AuthorizationRule.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  nameWithType: AuthorizationRule.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
  fullName: System.Web.Configuration.AuthorizationRule.Unmerge(ConfigurationElement,ConfigurationElement,ConfigurationSaveMode)
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Web.Configuration.AuthorizationRule.Users
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Users
  nameWithType: AuthorizationRule.Users
  fullName: System.Web.Configuration.AuthorizationRule.Users
- uid: System.Web.Configuration.AuthorizationRule.Verbs
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Verbs
  nameWithType: AuthorizationRule.Verbs
  fullName: System.Web.Configuration.AuthorizationRule.Verbs
- uid: System.Web.Configuration.AuthorizationRule.#ctor*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: AuthorizationRule
  nameWithType: AuthorizationRule.AuthorizationRule
- uid: System.Web.Configuration.AuthorizationRule.Action*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Action
  nameWithType: AuthorizationRule.Action
- uid: System.Web.Configuration.AuthorizationRule.Equals*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Equals
  nameWithType: AuthorizationRule.Equals
- uid: System.Web.Configuration.AuthorizationRule.GetHashCode*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: GetHashCode
  nameWithType: AuthorizationRule.GetHashCode
- uid: System.Web.Configuration.AuthorizationRule.IsModified*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: IsModified
  nameWithType: AuthorizationRule.IsModified
- uid: System.Web.Configuration.AuthorizationRule.PostDeserialize*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: PostDeserialize
  nameWithType: AuthorizationRule.PostDeserialize
- uid: System.Web.Configuration.AuthorizationRule.PreSerialize*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: PreSerialize
  nameWithType: AuthorizationRule.PreSerialize
- uid: System.Web.Configuration.AuthorizationRule.Properties*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Properties
  nameWithType: AuthorizationRule.Properties
- uid: System.Web.Configuration.AuthorizationRule.Reset*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Reset
  nameWithType: AuthorizationRule.Reset
- uid: System.Web.Configuration.AuthorizationRule.ResetModified*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: ResetModified
  nameWithType: AuthorizationRule.ResetModified
- uid: System.Web.Configuration.AuthorizationRule.Roles*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Roles
  nameWithType: AuthorizationRule.Roles
- uid: System.Web.Configuration.AuthorizationRule.SerializeElement*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: SerializeElement
  nameWithType: AuthorizationRule.SerializeElement
- uid: System.Web.Configuration.AuthorizationRule.SetReadOnly*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: SetReadOnly
  nameWithType: AuthorizationRule.SetReadOnly
- uid: System.Web.Configuration.AuthorizationRule.Unmerge*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Unmerge
  nameWithType: AuthorizationRule.Unmerge
- uid: System.Web.Configuration.AuthorizationRule.Users*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Users
  nameWithType: AuthorizationRule.Users
- uid: System.Web.Configuration.AuthorizationRule.Verbs*
  parent: System.Web.Configuration.AuthorizationRule
  isExternal: false
  name: Verbs
  nameWithType: AuthorizationRule.Verbs
