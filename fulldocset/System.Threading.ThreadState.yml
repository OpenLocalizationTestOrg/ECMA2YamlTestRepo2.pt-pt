### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadState
  id: ThreadState
  children:
  - System.Threading.ThreadState.Aborted
  - System.Threading.ThreadState.AbortRequested
  - System.Threading.ThreadState.Background
  - System.Threading.ThreadState.Running
  - System.Threading.ThreadState.Stopped
  - System.Threading.ThreadState.StopRequested
  - System.Threading.ThreadState.Suspended
  - System.Threading.ThreadState.SuspendRequested
  - System.Threading.ThreadState.Unstarted
  - System.Threading.ThreadState.WaitSleepJoin
  langs:
  - csharp
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: "Specifies the execution states of a <xref href=&quot;System.Threading.Thread&quot;></xref>."
  remarks: "The ThreadState enumeration is of interest only in a few debugging scenarios. Your code should never use the thread state to synchronize the activities of threads.       ThreadState defines a set of all possible execution states for threads. Once a thread is created, it is in at least one of the states until it terminates. Threads created within the common language runtime are initially in the `Unstarted` state, while external threads that come into the runtime are already in the `Running` state. An `Unstarted` thread is transitioned into the `Running` state by calling <xref:System.Threading.Thread.Start%2A>. Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the `Aborted` and `Unstarted` states.      > [!IMPORTANT] >  There are two thread state enumerations,ThreadState and <xref:System.Diagnostics.ThreadState?displayProperty=fullName>.       The following table shows the actions that cause a change of state.      |Action|ThreadState|   |------------|-----------------|   |A thread is created within the common language runtime.|Unstarted|   |Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=fullName> method on the new thread, and the call returns.<br /><br /> The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running. There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.|Running|   |The thread calls <xref:System.Threading.Thread.Sleep%2A>|WaitSleepJoin|   |The thread calls <xref:System.Threading.Monitor.Wait%2A> on another object.|WaitSleepJoin|   |The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.|WaitSleepJoin|   |Another thread calls <xref:System.Threading.Thread.Interrupt%2A>|Running|   |Another thread calls <xref:System.Threading.Thread.Suspend%2A>|SuspendRequested|   |The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.|Suspended|   |Another thread calls <xref:System.Threading.Thread.Resume%2A>|Running|   |Another thread calls <xref:System.Threading.Thread.Abort%2A>|AbortRequested|   |The thread responds to a <xref:System.Threading.Thread.Abort%2A> request.|Stopped|   |A thread is terminated.|Stopped|       In addition to the states noted above, there is also the `Background` state, which indicates whether the thread is running in the background or foreground.       A thread can be in more than one state at a given time. For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A>, and another thread calls <xref:System.Threading.Thread.Abort%2A> on the blocked thread, the blocked thread will be in both the `WaitSleepJoin` and the `AbortRequested` states at the same time. In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.       The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName> property of a thread provides the current state of a thread. Applications must use a bitmask to determine whether a thread is running. Since the value for `Running` is zero (0), test whether a thread is running by using C# code such as `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` or Visual Basic code such as `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`."
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ThreadState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Threading.ThreadState.Aborted
  id: Aborted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread state includes AbortRequested and the thread is now dead, but its state has not yet changed to Stopped."
  syntax:
    content: Aborted
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.AbortRequested
  id: AbortRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; method has been invoked on the thread, but the thread has not yet received the pending <xref href=&quot;System.Threading.ThreadAbortException&quot;></xref> that will attempt to terminate it."
  syntax:
    content: AbortRequested
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Background
  id: Background
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName&gt; property."
  syntax:
    content: Background
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Running
  id: Running
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread has been started, it is not blocked, and there is no pending <xref href=&quot;System.Threading.ThreadAbortException&quot;></xref>."
  syntax:
    content: Running
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Stopped
  id: Stopped
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread has stopped."
  syntax:
    content: Stopped
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.StopRequested
  id: StopRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread is being requested to stop. This is for internal use only."
  syntax:
    content: StopRequested
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Suspended
  id: Suspended
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread has been suspended."
  syntax:
    content: Suspended
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.SuspendRequested
  id: SuspendRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread is being requested to suspend."
  syntax:
    content: SuspendRequested
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Unstarted
  id: Unstarted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; method has not been invoked on the thread."
  syntax:
    content: Unstarted
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.WaitSleepJoin
  id: WaitSleepJoin
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "The thread is blocked. This could be the result of calling &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; or &lt;xref:System.Threading.Thread.Join%2A?displayProperty=fullName&gt;, of requesting a lock — for example, by calling &lt;xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName&gt; or &lt;xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName&gt; — or of waiting on a thread synchronization object such as <xref:System.Threading.ManualResetEvent>."
  syntax:
    content: WaitSleepJoin
    return:
      type: System.Threading.ThreadState
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Threading.ThreadState.Aborted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
- uid: System.Threading.ThreadState.AbortRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
- uid: System.Threading.ThreadState.Background
  parent: System.Threading.ThreadState
  isExternal: false
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
- uid: System.Threading.ThreadState.Running
  parent: System.Threading.ThreadState
  isExternal: false
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
- uid: System.Threading.ThreadState.Stopped
  parent: System.Threading.ThreadState
  isExternal: false
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
- uid: System.Threading.ThreadState.StopRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
- uid: System.Threading.ThreadState.Suspended
  parent: System.Threading.ThreadState
  isExternal: false
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
- uid: System.Threading.ThreadState.SuspendRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
- uid: System.Threading.ThreadState.Unstarted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
- uid: System.Threading.ThreadState.WaitSleepJoin
  parent: System.Threading.ThreadState
  isExternal: false
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
