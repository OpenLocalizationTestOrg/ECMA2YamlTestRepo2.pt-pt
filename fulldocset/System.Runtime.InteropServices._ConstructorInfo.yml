### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._ConstructorInfo
  id: _ConstructorInfo
  children:
  - System.Runtime.InteropServices._ConstructorInfo.Attributes
  - System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  - System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  - System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)
  - System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._ConstructorInfo.GetHashCode
  - System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags
  - System.Runtime.InteropServices._ConstructorInfo.GetParameters
  - System.Runtime.InteropServices._ConstructorInfo.GetType
  - System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])
  - System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  - System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  - System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  - System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._ConstructorInfo.IsFamily
  - System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  - System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  - System.Runtime.InteropServices._ConstructorInfo.IsFinal
  - System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  - System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  - System.Runtime.InteropServices._ConstructorInfo.IsPublic
  - System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  - System.Runtime.InteropServices._ConstructorInfo.IsStatic
  - System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  - System.Runtime.InteropServices._ConstructorInfo.MemberType
  - System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  - System.Runtime.InteropServices._ConstructorInfo.Name
  - System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  - System.Runtime.InteropServices._ConstructorInfo.ToString
  langs:
  - csharp
  name: _ConstructorInfo
  nameWithType: _ConstructorInfo
  fullName: System.Runtime.InteropServices._ConstructorInfo
  type: Interface
  summary: "Expõe os membros do públicos o &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; classe para o código não gerido."
  remarks: "Esta interface é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>classe Deteta os atributos de um construtor de classe e fornece acesso aos metadados de construtor.</xref:System.Reflection.ConstructorInfo?displayProperty=fullName>       A interface _ConstructorInfo preserva a ordem vtable o <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>classe membros que podem ser acedidos por objetos de COM não geridos.</xref:System.Reflection.ConstructorInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("E9A19478-9646-3679-9B10-8411AE1FD57D")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.ConstructorInfo))]

      public interface _ConstructorInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _ConstructorInfo.Attributes
  fullName: System.Runtime.InteropServices._ConstructorInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.Attributes*>propriedade.</xref:System.Reflection.MethodBase.Attributes*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.Attributes%2A>propriedade obtém os atributos associados a este método.</xref:System.Reflection.MethodBase.Attributes%2A>"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "Um do <xref:System.Reflection.MethodAttributes>valores.</xref:System.Reflection.MethodAttributes>"
  overload: System.Runtime.InteropServices._ConstructorInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _ConstructorInfo.CallingConvention
  fullName: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.CallingConvention*>propriedade.</xref:System.Reflection.MethodBase.CallingConvention*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.CallingConvention%2A>propriedade obtém um valor que indica as convenções de chamadas este método.</xref:System.Reflection.MethodBase.CallingConvention%2A>"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "O <xref:System.Reflection.CallingConventions>para que este método.</xref:System.Reflection.CallingConventions>"
  overload: System.Runtime.InteropServices._ConstructorInfo.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _ConstructorInfo.DeclaringType
  fullName: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MemberInfo.DeclaringType*>propriedade.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MemberInfo.DeclaringType%2A>propriedade obtém a classe que declara este membro.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>objeto para a classe que declara este membro.</xref:System.Type>"
  overload: System.Runtime.InteropServices._ConstructorInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _ConstructorInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Object.Equals*>método.</xref:System.Object.Equals*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Object.Equals%2A>método determina se o especificada <xref:System.Object>é igual a atual <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>A comparar com a atual <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref:System.Object>é igual a atual <xref:System.Object>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._ConstructorInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MemberInfo.GetCustomAttributes*>método.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>método devolve uma matriz que contém todos os atributos personalizados.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "Especifica se a cadeia de herança este membro para localizar os atributos de pesquisa."
    return:
      type: System.Object[]
      description: "Uma matriz que contém todos os atributos personalizados, ou uma matriz com zero elementos se não existem atributos são definidos."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*>método.</xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>método devolve uma matriz de atributos personalizados identificado por <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "O tipo de atributo para procurar. Apenas os atributos que são pode ser atribuídos a este tipo são devolvidos."
    - id: inherit
      type: System.Boolean
      description: "Especifica se a cadeia de herança este membro para localizar os atributos de pesquisa."
    return:
      type: System.Object[]
      description: "Uma matriz de atributos personalizados aplicadas a este membro, ou uma matriz com zero (0) elementos se não existem atributos foram aplicados."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _ConstructorInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Object.GetHashCode*>método.</xref:System.Object.GetHashCode*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Object.GetHashCode%2A>método funciona como uma função de hash para um determinado tipo.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>é adequado para utilização em estruturas de algoritmos e os dados, como uma tabela hash de hash.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para a instância atual."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Mapeia um conjunto de nomes para um conjunto de identificadores de emissão correspondente."
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido. Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a biblioteca da MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Reservado para utilização futura. Tem de ser IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "No passado a matriz de nomes deve ser mapeado."
    - id: cNames
      type: System.UInt32
      description: "Contagem dos nomes a ser mapeado."
    - id: lcid
      type: System.UInt32
      description: "O contexto de região na qual a interpretar os nomes."
    - id: rgDispId
      type: System.IntPtr
      description: "Matriz alocado de autor da chamada que recebe os IDs correspondentes aos nomes."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _ConstructorInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>Membro.</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>Membro devolve o <xref:System.Reflection.MethodImplAttributes>sinalizadores.</xref:System.Reflection.MethodImplAttributes> </xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "O <xref:System.Reflection.MethodImplAttributes>sinalizadores.</xref:System.Reflection.MethodImplAttributes>"
  overload: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _ConstructorInfo.GetParameters()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.GetParameters*>método.</xref:System.Reflection.MethodBase.GetParameters*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.GetParameters%2A>método obtém os parâmetros do construtor ou método especificado.</xref:System.Reflection.MethodBase.GetParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Uma matriz do tipo <xref:System.Reflection.ParameterInfo>que contém informações que corresponda a assinatura do método (ou construtor) refletidas por esta instância.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._ConstructorInfo.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _ConstructorInfo.GetType()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Object.GetType*>método.</xref:System.Object.GetType*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Object.GetType%2A>método obtém o tipo de instância atual.</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A <xref:System.Type>objeto.</xref:System.Type>"
  overload: System.Runtime.InteropServices._ConstructorInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém as informações de tipo para um objeto, que, em seguida, pode ser utilizado para obter as informações de tipo para uma interface."
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido. Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a biblioteca da MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "As informações de tipo de retorno."
    - id: lcid
      type: System.UInt32
      description: "O identificador de região para obter as informações de tipo."
    - id: ppTInfo
      type: System.IntPtr
      description: "Recebe um ponteiro para o objeto de informações do tipo pedido."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém o número de interfaces de informações de tipo que um objeto fornece (0 ou 1)."
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido. Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a biblioteca da MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Aponta para uma localização que recebe o número de interfaces de informações de tipo fornecido pelo objeto."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece acesso às propriedades e métodos expostos por um objeto."
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido. Para obter mais informações sobre `IDispatch::Invoke`, consulte a biblioteca da MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identifica o membro."
    - id: riid
      type: System.Guid
      description: "Reservado para utilização futura. Tem de ser IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "O contexto de região na qual interpretar argumentos."
    - id: wFlags
      type: System.Int16
      description: "Sinalizadores que descrevem o contexto da chamada."
    - id: pDispParams
      type: System.IntPtr
      description: "Apontador para uma estrutura que contém uma matriz de argumentos, uma matriz de argumento DISPID para os argumentos com nome e contagens para o número de elementos nas matrizes."
    - id: pVarResult
      type: System.IntPtr
      description: "Apontador para a localização onde o resultado é que sejam armazenadas."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Apontador para uma estrutura que contém informações de exceção."
    - id: puArgErr
      type: System.IntPtr
      description: "O índice do primeiro argumento tem um erro."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.Invoke*>método.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.Invoke%2A>método invoca o construtor refletido por esta <xref:System.Reflection.ConstructorInfo>com os argumentos especificados, com as restrições de <xref:System.Reflection.Binder>.</xref:System.Reflection.Binder> especificado</xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "A instância que criou este método."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Um do <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> valores que especifica o tipo de enlace."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> que define um conjunto de propriedades e permite o enlace adesão dos tipos de argumento e invocação dos membros utilizando reflexão. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "Uma matriz do tipo <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> utilizado para fazer corresponder o número, a ordem e o tipo dos parâmetros para este construtor, sob as restrições de `binder`. Se este construtor não necessitar de parâmetros, passa uma matriz com zero elementos, tal como nos parâmetros do objeto [] = novo objeto [0]. Qualquer objeto nesta matriz que não está explicitamente inicializado com um valor irá conter o valor predefinido para esse tipo de objeto. Para elementos de tipo de referência, este valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Para elementos de tipo de valor, este valor for 0, 0.0, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, consoante o tipo de elemento específico."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>utilizados para regular a adesão de tipos.</xref:System.Globalization.CultureInfo> Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a <xref:System.Globalization.CultureInfo>para o thread actual é utilizado.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Uma instância da classe associada este construtor."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_2*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])
  id: Invoke_3(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_3(Object,Object[])
  nameWithType: _ConstructorInfo.Invoke_3(Object,Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.Invoke*>método.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.Invoke%2A>método invoca o método ou construtor representado por este objeto, utilizando os parâmetros especificados.</xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke_3 (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "A instância que criou este método."
    - id: parameters
      type: System.Object[]
      description: "Uma lista de argumentos para o construtor ou método invocado. Esta é uma matriz de objetos com o mesmo número, ordem e tipo como os parâmetros do método ou construtor para ser invocado. Se existirem sem parâmetros, `parameters` deve ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Se o método ou construtor representado por esta instância tem um <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> parâmetro (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> no Visual Basic), não existe nenhum atributo especial é necessário para este parâmetro para invocar o método ou construtor utilizando esta função. Qualquer objeto nesta matriz que não está explicitamente inicializado com um valor irá conter o valor predefinido para esse tipo de objeto. Para elementos de tipo de referência, este valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Para elementos de tipo de valor, este valor for 0, 0.0, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, consoante o tipo de elemento específico."
    return:
      type: System.Object
      description: "Uma instância da classe associada este construtor."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_3*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.ConstructorInfo.Invoke*>método.</xref:System.Reflection.ConstructorInfo.Invoke*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.ConstructorInfo.Invoke%2A>invoca o método do construtor refletido por este <xref:System.Reflection.ConstructorInfo>objeto com os argumentos especificados, com as restrições de especificado <xref:System.Reflection.Binder>objeto.</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.ConstructorInfo.Invoke%2A>"
  syntax:
    content: public object Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Um do <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> valores que especifica o tipo de enlace."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> que define um conjunto de propriedades e permite o enlace adesão dos tipos de argumento e invocação dos membros utilizando reflexão. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "Uma matriz do tipo <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> utilizado para fazer corresponder o número, a ordem e o tipo dos parâmetros para este construtor, sob as restrições de `binder`. Se este construtor não necessitar de parâmetros, passa uma matriz com zero elementos, tal como nos parâmetros do objeto [] = novo objeto [0]. Qualquer objeto nesta matriz que não está explicitamente inicializado com um valor irá conter o valor predefinido para esse tipo de objeto. Para elementos de tipo de referência, este valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Para elementos de tipo de valor, este valor for 0, 0.0, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, consoante o tipo de elemento específico."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>utilizados para regular a adesão de tipos.</xref:System.Globalization.CultureInfo> Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a <xref:System.Globalization.CultureInfo>para o thread actual é utilizado.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Uma instância da classe associada este construtor."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_4*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])
  id: Invoke_5(System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_5(Object[])
  nameWithType: _ConstructorInfo.Invoke_5(Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.ConstructorInfo.Invoke*>método.</xref:System.Reflection.ConstructorInfo.Invoke*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.ConstructorInfo.Invoke%2A>invoca o método do construtor refletido pela instância que tem os parâmetros especificados, fornecendo valores predefinidos para os parâmetros não utilizados.</xref:System.Reflection.ConstructorInfo.Invoke%2A>"
  syntax:
    content: public object Invoke_5 (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Uma matriz de valores que corresponda a número, a ordem e o tipo (sob as restrições do dossier predefinido) dos parâmetros para este construtor. Se este construtor não recebe parâmetros, em seguida, utilize a uma matriz com zero elementos ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, como os parâmetros do objeto [] = novo objeto [0]. Qualquer objeto nesta matriz que não está explicitamente inicializado com um valor irá conter o valor predefinido para esse tipo de objeto. Para elementos de tipo de referência, este valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Para elementos de tipo de valor, este valor for 0, 0.0, ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, consoante o tipo de elemento específico."
    return:
      type: System.Object
      description: "Uma instância da classe associada este construtor."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_5*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _ConstructorInfo.IsAbstract
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsAbstract*>propriedade.</xref:System.Reflection.MethodBase.IsAbstract*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsAbstract%2A>propriedade obtém um valor que indica se o método é abstracto.</xref:System.Reflection.MethodBase.IsAbstract%2A>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o método é abstracto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _ConstructorInfo.IsAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsAssembly*>propriedade.</xref:System.Reflection.MethodBase.IsAssembly*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsAssembly%2A>propriedade obtém um valor que indica se este método pode ser chamado por outras classes na mesma assemblagem.</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método pode ser chamado por outras classes na mesma assemblagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _ConstructorInfo.IsConstructor
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsConstructor*>propriedade.</xref:System.Reflection.MethodBase.IsConstructor*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsConstructor%2A>propriedade obtém um valor que indica se o método é um construtor.</xref:System.Reflection.MethodBase.IsConstructor%2A>"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método é um construtor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _ConstructorInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MemberInfo.IsDefined*>Membro.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MemberInfo.IsDefined%2A>Membro indica se uma ou mais instâncias de `attributeType` é aplicado a este membro.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "O <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> objeto ao qual os atributos personalizados são aplicados."
    - id: inherit
      type: System.Boolean
      description: "Especifica se a cadeia de herança este membro para localizar os atributos de pesquisa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma ou mais instâncias de <code> attributeType </code> é aplicado a este membro; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFamily
  nameWithType: _ConstructorInfo.IsFamily
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsFamily*>propriedade.</xref:System.Reflection.MethodBase.IsFamily*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsFamily%2A>propriedade obtém um valor que indica se o acesso a este método é restringido aos membros de classe e membros das suas classes derivadas.</xref:System.Reflection.MethodBase.IsFamily%2A>"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso para a classe é restringido aos membros da própria classe e para os membros das suas classes derivadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _ConstructorInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>propriedade.</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>propriedade obtém um valor que indica se este método pode ser chamado por classes derivadas, se estiverem na mesma assemblagem.</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso a este método é restringido aos membros da própria classe e para os membros de classes derivadas que estão na mesma assemblagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _ConstructorInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>propriedade.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>propriedade obtém um valor que indica se este método pode ser chamado por classes derivadas, estejam onde estiverem e, por todas as classes na mesma assemblagem.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso a este método é restringido aos membros da própria classe, os membros derivam classes onde quer que são e membros de outras classes na mesma assemblagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFinal
  nameWithType: _ConstructorInfo.IsFinal
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsFinal*>propriedade.</xref:System.Reflection.MethodBase.IsFinal*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsFinal%2A>propriedade obtém um valor que indica se este método é `final`.</xref:System.Reflection.MethodBase.IsFinal%2A>"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método é <xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _ConstructorInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsHideBySig*>propriedade.</xref:System.Reflection.MethodBase.IsHideBySig*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       A <xref:System.Reflection.MethodBase.IsHideBySig%2A>propriedade obtém um valor que indica se apenas um membro do mesmo tipo com exatamente a mesma assinatura está oculto na classe derivada.</xref:System.Reflection.MethodBase.IsHideBySig%2A>"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o membro está oculto pela assinatura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _ConstructorInfo.IsPrivate
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsPrivate*>propriedade.</xref:System.Reflection.MethodBase.IsPrivate*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsPrivate%2A>propriedade obtém um valor que indica se este membro é privado.</xref:System.Reflection.MethodBase.IsPrivate%2A>"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso a este método é restringido aos outros membros da própria; classe caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: _ConstructorInfo.IsPublic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsPublic*>propriedade.</xref:System.Reflection.MethodBase.IsPublic*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsPublic%2A>propriedade obtém um valor que indica se se trata de um método público.</xref:System.Reflection.MethodBase.IsPublic%2A>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método é público; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _ConstructorInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsSpecialName*>propriedade.</xref:System.Reflection.MethodBase.IsSpecialName*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsSpecialName%2A>propriedade obtém um valor que indica se este método tem um nome especial.</xref:System.Reflection.MethodBase.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método tem um nome especial; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsStatic
  nameWithType: _ConstructorInfo.IsStatic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsStatic*>propriedade.</xref:System.Reflection.MethodBase.IsStatic*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsStatic%2A>propriedade obtém um valor que indica se o método é `static`.</xref:System.Reflection.MethodBase.IsStatic%2A>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método é <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _ConstructorInfo.IsVirtual
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.IsVirtual*>propriedade.</xref:System.Reflection.MethodBase.IsVirtual*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.IsVirtual%2A>propriedade obtém um valor que indica se o método é `virtual`.</xref:System.Reflection.MethodBase.IsVirtual%2A>"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este método é <xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _ConstructorInfo.MemberType
  fullName: System.Runtime.InteropServices._ConstructorInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.ConstructorInfo.MemberType*>propriedade.</xref:System.Reflection.ConstructorInfo.MemberType*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.ConstructorInfo.MemberType%2A>propriedade obtém um <xref:System.Reflection.MemberTypes>valor que indica o tipo do membro — método, construtor, eventos e assim sucessivamente.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.ConstructorInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "A <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valor que indica o tipo de membro."
  overload: System.Runtime.InteropServices._ConstructorInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _ConstructorInfo.MethodHandle
  fullName: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MethodBase.MethodHandle*>propriedade.</xref:System.Reflection.MethodBase.MethodHandle*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MethodBase.MethodHandle%2A>propriedade obtém um identificador a representação de metadados interno de um método.</xref:System.Reflection.MethodBase.MethodHandle%2A>"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "A <xref:System.RuntimeMethodHandle>objeto.</xref:System.RuntimeMethodHandle>"
  overload: System.Runtime.InteropServices._ConstructorInfo.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Name
  nameWithType: _ConstructorInfo.Name
  fullName: System.Runtime.InteropServices._ConstructorInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MemberInfo.Name*>propriedade.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       O <xref:System.Reflection.MemberInfo.Name%2A>propriedade obtém o nome do membro atual.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>contendo o nome deste membro.</xref:System.String>"
  overload: System.Runtime.InteropServices._ConstructorInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _ConstructorInfo.ReflectedType
  fullName: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Reflection.MemberInfo.ReflectedType*>propriedade.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido.       A <xref:System.Reflection.MemberInfo.ReflectedType%2A>propriedade obtém o objeto de classe que foi utilizado para obter esta instância do <xref:System.Reflection.MemberInfo>.</xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>objeto através do qual este <xref:System.Reflection.MemberInfo>objeto foi obtido.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._ConstructorInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _ConstructorInfo.ToString()
  fullName: System.Runtime.InteropServices._ConstructorInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos COM acesso de independente da versão para o <xref:System.Object.ToString*>método.</xref:System.Object.ToString*>"
  remarks: "Este método é para acesso por classes geridas a partir do código não gerido e não deve ser chamado a partir do código gerido."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o atual <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._ConstructorInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Attributes
  nameWithType: _ConstructorInfo.Attributes
  fullName: System.Runtime.InteropServices._ConstructorInfo.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _ConstructorInfo.CallingConvention
  fullName: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _ConstructorInfo.DeclaringType
  fullName: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _ConstructorInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _ConstructorInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _ConstructorInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetParameters()
  nameWithType: _ConstructorInfo.GetParameters()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._ConstructorInfo.GetType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetType()
  nameWithType: _ConstructorInfo.GetType()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetType()
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_3(Object,Object[])
  nameWithType: _ConstructorInfo.Invoke_3(Object,Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(Object,Object[])
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_5(Object[])
  nameWithType: _ConstructorInfo.Invoke_5(Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[])
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _ConstructorInfo.IsAbstract
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _ConstructorInfo.IsAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _ConstructorInfo.IsConstructor
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _ConstructorInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamily
  nameWithType: _ConstructorInfo.IsFamily
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamily
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _ConstructorInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _ConstructorInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFinal
  nameWithType: _ConstructorInfo.IsFinal
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFinal
- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _ConstructorInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _ConstructorInfo.IsPrivate
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPublic
  nameWithType: _ConstructorInfo.IsPublic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPublic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _ConstructorInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsStatic
  nameWithType: _ConstructorInfo.IsStatic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsStatic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _ConstructorInfo.IsVirtual
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: _ConstructorInfo.MemberType
  fullName: System.Runtime.InteropServices._ConstructorInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _ConstructorInfo.MethodHandle
  fullName: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._ConstructorInfo.Name
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Name
  nameWithType: _ConstructorInfo.Name
  fullName: System.Runtime.InteropServices._ConstructorInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _ConstructorInfo.ReflectedType
  fullName: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
- uid: System.Runtime.InteropServices._ConstructorInfo.ToString
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ToString()
  nameWithType: _ConstructorInfo.ToString()
  fullName: System.Runtime.InteropServices._ConstructorInfo.ToString()
- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Attributes
  nameWithType: _ConstructorInfo.Attributes
- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _ConstructorInfo.CallingConvention
- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _ConstructorInfo.DeclaringType
- uid: System.Runtime.InteropServices._ConstructorInfo.Equals*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Equals
  nameWithType: _ConstructorInfo.Equals
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _ConstructorInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _ConstructorInfo.GetHashCode
- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _ConstructorInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _ConstructorInfo.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetParameters
  nameWithType: _ConstructorInfo.GetParameters
- uid: System.Runtime.InteropServices._ConstructorInfo.GetType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetType
  nameWithType: _ConstructorInfo.GetType
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _ConstructorInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _ConstructorInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke
  nameWithType: _ConstructorInfo.Invoke
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_2
  nameWithType: _ConstructorInfo.Invoke_2
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_3
  nameWithType: _ConstructorInfo.Invoke_3
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_4
  nameWithType: _ConstructorInfo.Invoke_4
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_5
  nameWithType: _ConstructorInfo.Invoke_5
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _ConstructorInfo.IsAbstract
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _ConstructorInfo.IsAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _ConstructorInfo.IsConstructor
- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsDefined
  nameWithType: _ConstructorInfo.IsDefined
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamily
  nameWithType: _ConstructorInfo.IsFamily
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _ConstructorInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _ConstructorInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFinal
  nameWithType: _ConstructorInfo.IsFinal
- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _ConstructorInfo.IsHideBySig
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _ConstructorInfo.IsPrivate
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPublic
  nameWithType: _ConstructorInfo.IsPublic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _ConstructorInfo.IsSpecialName
- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsStatic
  nameWithType: _ConstructorInfo.IsStatic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _ConstructorInfo.IsVirtual
- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: _ConstructorInfo.MemberType
- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _ConstructorInfo.MethodHandle
- uid: System.Runtime.InteropServices._ConstructorInfo.Name*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Name
  nameWithType: _ConstructorInfo.Name
- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _ConstructorInfo.ReflectedType
- uid: System.Runtime.InteropServices._ConstructorInfo.ToString*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ToString
  nameWithType: _ConstructorInfo.ToString
