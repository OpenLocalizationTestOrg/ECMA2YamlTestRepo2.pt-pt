### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp
  id: FederatedMessageSecurityOverHttp
  children:
  - System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor
  - System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  - System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  - System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
  - System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  langs:
  - csharp
  name: FederatedMessageSecurityOverHttp
  nameWithType: FederatedMessageSecurityOverHttp
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp
  type: Class
  summary: "Configures the message-level security of the <xref uid=&quot;langword_csharp_WSFederationHttpBinding&quot; name=&quot;WSFederationHttpBinding&quot; href=&quot;&quot;></xref> binding."
  remarks: "This class contains properties that provide control over various aspects of the security configuration between the client and the service, including details related to the issuer from which the service expects the client to retrieve a federated credential."
  syntax:
    content: public sealed class FederatedMessageSecurityOverHttp
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor
  id: '#ctor'
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: FederatedMessageSecurityOverHttp()
  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.FederatedMessageSecurityOverHttp&quot;></xref> class."
  syntax:
    content: public FederatedMessageSecurityOverHttp ();
    parameters: []
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms."
  remarks: "The <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> object that is returned contains numerous properties that specify security algorithms to use in specific conditions. It also describes various security capabilities of the service."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#5](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_1_1.vb)]\n [!code-cs[WSFederationHttpSecurity#5](~/add/codesnippet/csharp/p-system.servicemodel.fe_1_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "A <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;></xref>. The default is <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  id: ClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets a collection of the <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;></xref> instances for this binding."
  remarks: "The collection returned by this property is used by the service to specify any required and optional claims which must be in the issued token the client uses to access the service. The service exposes the required claim types in metadata if WSDL publishing is enabled but WCF does not require the issued token contain the specified claim types.  Services wishing to enforce required claim types are present should do using authorization policy.       On federated clients this collection contains the list of required and optional claims which is sent to the security token service in the clientâ€™s request for an issued token."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#11](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_5_1.vb)]\n [!code-cs[WSFederationHttpSecurity#11](~/add/codesnippet/csharp/p-system.servicemodel.fe_5_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement> ClaimTypeRequirements { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.ClaimTypeRequirement}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;></xref>. The default is an empty collection."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  id: EstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: EstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets whether a security context requires being put into place."
  syntax:
    content: public bool EstablishSecurityContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if security context requires placing; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  id: IssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies the type of key to be issued."
  remarks: "Valid values of <xref:System.IdentityModel.Tokens.SecurityKeyType> are <xref:System.IdentityModel.Tokens.SecurityKeyType> and <xref:System.IdentityModel.Tokens.SecurityKeyType>."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#7](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_6_1.vb)]\n [!code-cs[WSFederationHttpSecurity#7](~/add/codesnippet/csharp/p-system.servicemodel.fe_6_1.cs)]"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyType IssuedKeyType { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;></xref>. The default is <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is not a valid <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  id: IssuedTokenType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuedTokenType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies the type of token which should be issued by the security token service."
  remarks: "This property indicates the type of token that the service expects and controls which SecurityTokenAuthenticator is created on the service. On the client it controls the type which is sent to the security token service in the clientâ€™s request for an issued token.       The IssuedTokenType typically takes the form of a URI."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#4](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_2_1.vb)]\n [!code-cs[WSFederationHttpSecurity#4](~/add/codesnippet/csharp/p-system.servicemodel.fe_2_1.cs)]"
  syntax:
    content: public string IssuedTokenType { get; set; }
    return:
      type: System.String
      description: "The type of token to be issued. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, which causes WCF to request a SAML security token from the STS."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  id: IssuerAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuerAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the endpoint address of the security token service that issues credentials for the service."
  remarks: "This address is used as the endpoint for the security token service that issues credentials for the service. Services expose the issuer address in metadata if WSDL is enabled but make no other use of it. Clients use the issuer address to communicate with the security token service. If the IssuerAddress is null clients may fall back to using the security token service specified via the LocalIssuerAddress and LocalIssuerBinding properties on IssuedTokenClientCredential.       Setting this value to `null` or the WS-AddressingIdentity anonymous URI on the client causes CardSpace to activate if ClientCredentials.SupportInteractive is true under certain circumstances."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_3_1.vb)]\n [!code-cs[WSFederationHttpSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.fe_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress IssuerAddress { get; set; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "The <xref:System.ServiceModel.EndpointAddress> of the security token service."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  id: IssuerBinding
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuerBinding
  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*>."
  remarks: "This property is used to specify the binding that is used by the client between the client and the security token service when obtaining credentials for the service.       Note that this property does not need to be populated on the service, since it is only consumed by the client."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#9](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_4_1.vb)]\n [!code-cs[WSFederationHttpSecurity#9](~/add/codesnippet/csharp/p-system.servicemodel.fe_4_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.Binding IssuerBinding { get; set; }
    return:
      type: System.ServiceModel.Channels.Binding
      description: "The <xref:System.ServiceModel.Channels.Binding> to be used by the client when communicating with the security token service."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  id: IssuerMetadataAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuerMetadataAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the endpoint address for communicating with the security token service out of band."
  remarks: "This address is used as the endpoint for the security token service that issues credentials for the service out of band."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#10](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_0_1.vb)]\n [!code-cs[WSFederationHttpSecurity#10](~/add/codesnippet/csharp/p-system.servicemodel.fe_0_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress IssuerMetadataAddress { get; set; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "The <xref:System.ServiceModel.Channels.Binding> to be used when communicating with the security token service out of band."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  id: NegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: NegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies whether a message level SSL negotiation is done to obtain the serviceâ€™s certificate."
  remarks: "This property indicates whether the service certificate is negotiated automatically between the client and the service. If this property is `true`, then such negotiation occurs. If this property is `false`, then the service certificate must be specified at the client before communication with the service can occur.       Services must always specify a certificate.       If this property is true, the message level SSL negotiation for the service certificate occurs before the security token service specified via the IssuerAddress and IssuerBinding properties (or LocalIssuerAddress and LocalIssuerBinding properties) is requested to issue a security token."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#6](~/add/codesnippet/visualbasic/a9c91759-1874-4a3e-b7d4-_1.vb)]\n [!code-cs[WSFederationHttpSecurity#6](~/add/codesnippet/csharp/a9c91759-1874-4a3e-b7d4-_1.cs)]"
  syntax:
    content: public bool NegotiateServiceCredential { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the service certificate is negotiated; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the service certificate is available out of band. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  id: ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized."
  syntax:
    content: public bool ShouldSerializeAlgorithmSuite ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the algorithm suite should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
  id: ShouldSerializeClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeClaimTypeRequirements()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns that any existing claim type requirements can be serialized."
  syntax:
    content: public bool ShouldSerializeClaimTypeRequirements ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there are requirements to serialize; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
  id: ShouldSerializeEstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeEstablishSecurityContext()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns an indication whether the security context is not the default and therefore should be serialized."
  syntax:
    content: public bool ShouldSerializeEstablishSecurityContext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the context should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
  id: ShouldSerializeIssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeIssuedKeyType()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns an indication whether the issued key type is not the default and therefore should be serialized."
  syntax:
    content: public bool ShouldSerializeIssuedKeyType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the type should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  id: ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized."
  syntax:
    content: public bool ShouldSerializeNegotiateServiceCredential ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the process should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
  id: ShouldSerializeTokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeTokenRequestParameters()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns an indication that any existing token request parameters can be serialized."
  syntax:
    content: public bool ShouldSerializeTokenRequestParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there are parameters to be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  id: TokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: TokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token."
  remarks: "The collection returned by this property can be used to specify additional XML elements to be sent in the message body to the security token service when requesting a token."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlElement> TokenRequestParameters { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=&quot;System.Xml.XmlElement&quot;></xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: FederatedMessageSecurityOverHttp()
  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.ClaimTypeRequirement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ClaimTypeRequirement>
  nameWithType: Collection<ClaimTypeRequirement>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
    name: ClaimTypeRequirement
    nameWithType: ClaimTypeRequirement
    fullName: ClaimTypeRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: EstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
- uid: System.IdentityModel.Tokens.SecurityKeyType
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedTokenType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerBinding
  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerMetadataAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClaimTypeRequirements()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeEstablishSecurityContext()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeIssuedKeyType()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeTokenRequestParameters()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: TokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XmlElement>
  nameWithType: Collection<XmlElement>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlElement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.XmlElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlElement
    name: XmlElement
    nameWithType: XmlElement
    fullName: XmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: FederatedMessageSecurityOverHttp
  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: EstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedTokenType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerBinding
  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerMetadataAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeEstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeIssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeTokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: TokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters
