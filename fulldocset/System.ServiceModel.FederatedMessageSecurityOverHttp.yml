### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp
  id: FederatedMessageSecurityOverHttp
  children:
  - System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor
  - System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  - System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  - System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  - System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  - System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
  - System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  langs:
  - csharp
  name: FederatedMessageSecurityOverHttp
  nameWithType: FederatedMessageSecurityOverHttp
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp
  type: Class
  summary: "Configura a segurança ao nível da mensagem do <xref uid=&quot;langword_csharp_WSFederationHttpBinding&quot; name=&quot;WSFederationHttpBinding&quot; href=&quot;&quot;> </xref> enlace."
  remarks: "Esta classe contém as propriedades que permitem controlar diferentes aspetos da configuração de segurança entre o cliente e o serviço, incluindo detalhes relacionados com o emissor a partir do qual o serviço espera que o cliente para obter uma credencial federada."
  syntax:
    content: public sealed class FederatedMessageSecurityOverHttp
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor
  id: '#ctor'
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: FederatedMessageSecurityOverHttp()
  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.FederatedMessageSecurityOverHttp&quot;> </xref> classe."
  syntax:
    content: public FederatedMessageSecurityOverHttp ();
    parameters: []
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  id: AlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: AlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém e define o conjunto de algoritmos que especifica a encriptação de mensagens e os algoritmos de chave de moldagem."
  remarks: "O <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>objeto que é devolvido contém várias propriedades que especificam os algoritmos de segurança para utilizar em condições específicas.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite> Também descreve diversas capacidades de segurança do serviço."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#5](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_1_1.vb)]\n [!code-cs[WSFederationHttpSecurity#5](~/add/codesnippet/csharp/p-system.servicemodel.fe_1_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "A <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;></xref>. A predefinição é <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  id: ClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém uma coleção do <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref> instâncias para este enlace."
  remarks: "A coleção devolvida por esta propriedade é utilizada pelo serviço para especificar as afirmações obrigatórios e opcionais que têm de ser o token emitido, que o cliente utiliza para aceder ao serviço. O serviço expõe os tipos de afirmações necessários nos metadados, se a publicação de WSDL está ativada, mas WCF não requer o token emitido contêm os tipos de afirmação especificado.  Serviços novidade para impor a afirmação necessária existem tipos devem efetuar através da política de autorização.       Nos clientes federados esta coleção contém a lista de afirmações necessárias e opcionais que é enviada para o serviço de token de segurança no pedido do cliente para um token emitido."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#11](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_5_1.vb)]\n [!code-cs[WSFederationHttpSecurity#11](~/add/codesnippet/csharp/p-system.servicemodel.fe_5_1.cs)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement> ClaimTypeRequirements { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.ClaimTypeRequirement}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; do tipo <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref>. A predefinição é uma coleção vazia."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  id: EstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: EstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define se necessita de um contexto de segurança que está a ser colocados em vigor."
  syntax:
    content: public bool EstablishSecurityContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se precisar de contexto de segurança colocar; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  id: IssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica o tipo de chave ao ser emitido."
  remarks: "Valores válidos são <xref:System.IdentityModel.Tokens.SecurityKeyType> <xref:System.IdentityModel.Tokens.SecurityKeyType>e <xref:System.IdentityModel.Tokens.SecurityKeyType>.</xref:System.IdentityModel.Tokens.SecurityKeyType> </xref:System.IdentityModel.Tokens.SecurityKeyType> </xref:System.IdentityModel.Tokens.SecurityKeyType>"
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#7](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_6_1.vb)]\n [!code-cs[WSFederationHttpSecurity#7](~/add/codesnippet/csharp/p-system.servicemodel.fe_6_1.cs)]"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyType IssuedKeyType { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;></xref>. A predefinição é <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  id: IssuedTokenType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuedTokenType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica o tipo de token que deve ser emitido pelo serviço de token de segurança."
  remarks: "Esta propriedade indica o tipo de token que o serviço de espera e controlos que SecurityTokenAuthenticator que é criado no serviço. No cliente controla o tipo de quais é enviado para o serviço de token de segurança no pedido do cliente para um token emitido.       O IssuedTokenType demora, normalmente, a forma de um URI."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#4](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_2_1.vb)]\n [!code-cs[WSFederationHttpSecurity#4](~/add/codesnippet/csharp/p-system.servicemodel.fe_2_1.cs)]"
  syntax:
    content: public string IssuedTokenType { get; set; }
    return:
      type: System.String
      description: "O tipo de token ao ser emitido. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que faz com que o WCF pedir um token de segurança SAML de STS."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  id: IssuerAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuerAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o endereço de ponto final do serviço de token de segurança que emite credenciais do serviço."
  remarks: "Este endereço é utilizado como o ponto final para o serviço de token de segurança que emite credenciais do serviço. Serviços expõem o endereço de emissor nos metadados se WSDL estiver ativada, mas sem utilizar outros do mesmo. Os clientes utilizam o endereço de emissor para comunicar com o serviço de token de segurança. Se o IssuerAddress for nulo os clientes podem reverter para utilizar o serviço de token de segurança especificado através de propriedades de LocalIssuerAddress e LocalIssuerBinding na IssuedTokenClientCredential.       Definir este valor como `null` ou o URI anónimo de WS-AddressingIdentity no cliente faz com que o CardSpace ativar se ClientCredentials.SupportInteractive é verdadeira em determinadas circunstâncias."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_3_1.vb)]\n [!code-cs[WSFederationHttpSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.fe_3_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress IssuerAddress { get; set; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "O <xref:System.ServiceModel.EndpointAddress>do serviço de token de segurança.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  id: IssuerBinding
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuerBinding
  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o enlace a ser utilizado pelo cliente ao comunicar com o serviço de token de segurança cujo endereço do ponto final é igual a <xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*>.</xref:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*>"
  remarks: "Esta propriedade é utilizada para especificar o enlace utilizado pelo cliente entre o cliente e o serviço de token de segurança para a obtenção de credenciais para o serviço.       Tenha em atenção que esta propriedade não tem de ser preenchido no serviço, uma vez que apenas é consumido pelo cliente."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#9](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_4_1.vb)]\n [!code-cs[WSFederationHttpSecurity#9](~/add/codesnippet/csharp/p-system.servicemodel.fe_4_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.Binding IssuerBinding { get; set; }
    return:
      type: System.ServiceModel.Channels.Binding
      description: "O <xref:System.ServiceModel.Channels.Binding>a ser utilizado pelo cliente ao comunicar com o serviço de token de segurança.</xref:System.ServiceModel.Channels.Binding>"
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  id: IssuerMetadataAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: IssuerMetadataAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o endereço de ponto final para comunicar com o serviço de token de segurança fora de banda."
  remarks: "Este endereço é utilizado como o ponto final para o serviço de token de segurança que emite credenciais do serviço fora de banda."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#10](~/add/codesnippet/visualbasic/p-system.servicemodel.fe_0_1.vb)]\n [!code-cs[WSFederationHttpSecurity#10](~/add/codesnippet/csharp/p-system.servicemodel.fe_0_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress IssuerMetadataAddress { get; set; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "O <xref:System.ServiceModel.Channels.Binding>a utilizar ao comunicar com o serviço de token de segurança fora de banda.</xref:System.ServiceModel.Channels.Binding>"
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  id: NegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: NegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica se o nível de mensagem de negociação de SSL é efetuado ao obter o certificado do serviço."
  remarks: "Esta propriedade indica se o certificado de serviço é negociado automaticamente entre o cliente e o serviço. Se esta propriedade é `true`, em seguida, essa negociação ocorre. Se esta propriedade é `false`, em seguida, durante o qual o certificado de serviço tem de ser especificado no cliente antes de comunicar com o serviço pode ocorrer.       Serviços de sempre tem de especificar um certificado.       Se esta propriedade for verdadeira, a negociação de SSL ao nível da mensagem para o certificado de serviço ocorre antes do serviço de token de segurança especificado através de IssuerAddress e IssuerBinding propriedades (ou propriedades LocalIssuerAddress e LocalIssuerBinding) é pedido para emitir um token de segurança."
  example:
  - "The following code shows how to access this property from the binding, and set it.  \n  \n [!code-vb[WSFederationHttpSecurity#6](~/add/codesnippet/visualbasic/a9c91759-1874-4a3e-b7d4-_1.vb)]\n [!code-cs[WSFederationHttpSecurity#6](~/add/codesnippet/csharp/a9c91759-1874-4a3e-b7d4-_1.cs)]"
  syntax:
    content: public bool NegotiateServiceCredential { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o certificado de serviço é negociado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o certificado de serviço fora de banda disponível. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  id: ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve se o conjunto de algoritmos para ser utilizado para proteger mensagens ao nível do SOAP deverá ser serializado."
  syntax:
    content: public bool ShouldSerializeAlgorithmSuite ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o conjunto de algoritmos deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
  id: ShouldSerializeClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeClaimTypeRequirements()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve o que podem ser serializados quaisquer requisitos de tipo de afirmação existente."
  syntax:
    content: public bool ShouldSerializeClaimTypeRequirements ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se existem requisitos de serialização; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
  id: ShouldSerializeEstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeEstablishSecurityContext()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve uma indicação se o contexto de segurança não é a predefinição e, por conseguinte, deverá ser serializado."
  syntax:
    content: public bool ShouldSerializeEstablishSecurityContext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o contexto deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
  id: ShouldSerializeIssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeIssuedKeyType()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve uma indicação se o tipo de chave emitido não é a predefinição e, por conseguinte, deverá ser serializado."
  syntax:
    content: public bool ShouldSerializeIssuedKeyType ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  id: ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve uma indicação se o processo de negociar as credenciais de serviço não é o processo predefinido e, por conseguinte, deverá ser serializado."
  syntax:
    content: public bool ShouldSerializeNegotiateServiceCredential ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o processo deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
  id: ShouldSerializeTokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: ShouldSerializeTokenRequestParameters()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve uma indicação de que nenhum token existente pedido parâmetros pode ser serializada."
  syntax:
    content: public bool ShouldSerializeTokenRequestParameters ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se existirem parâmetros para ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  id: TokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  langs:
  - csharp
  name: TokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém uma coleção de elementos XML para serem enviados no corpo da mensagem para o serviço de token de segurança quando pedir um token."
  remarks: "A coleção devolvida por esta propriedade pode ser utilizada para especificar os elementos XML adicionais para serem enviados no corpo da mensagem para o serviço de token de segurança quando pedir um token."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlElement> TokenRequestParameters { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; do tipo <xref href=&quot;System.Xml.XmlElement&quot;> </xref>."
  overload: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: FederatedMessageSecurityOverHttp()
  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.ClaimTypeRequirement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ClaimTypeRequirement>
  nameWithType: Collection<ClaimTypeRequirement>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Security.Tokens.ClaimTypeRequirement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
    name: ClaimTypeRequirement
    nameWithType: ClaimTypeRequirement
    fullName: ClaimTypeRequirement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: EstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType
- uid: System.IdentityModel.Tokens.SecurityKeyType
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedTokenType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerBinding
  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerMetadataAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClaimTypeRequirements()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeEstablishSecurityContext()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeIssuedKeyType()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeTokenRequestParameters()
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters()
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: TokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters
  fullName: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters
- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlElement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XmlElement>
  nameWithType: Collection<XmlElement>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlElement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.XmlElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlElement
    name: XmlElement
    nameWithType: XmlElement
    fullName: XmlElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: FederatedMessageSecurityOverHttp
  nameWithType: FederatedMessageSecurityOverHttp.FederatedMessageSecurityOverHttp
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: AlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.AlgorithmSuite
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ClaimTypeRequirements
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: EstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.EstablishSecurityContext
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedKeyType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuedTokenType
  nameWithType: FederatedMessageSecurityOverHttp.IssuedTokenType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerBinding
  nameWithType: FederatedMessageSecurityOverHttp.IssuerBinding
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: IssuerMetadataAddress
  nameWithType: FederatedMessageSecurityOverHttp.IssuerMetadataAddress
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: NegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.NegotiateServiceCredential
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeAlgorithmSuite
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeClaimTypeRequirements
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeEstablishSecurityContext
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeIssuedKeyType
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeNegotiateServiceCredential
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: ShouldSerializeTokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters
- uid: System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters*
  parent: System.ServiceModel.FederatedMessageSecurityOverHttp
  isExternal: false
  name: TokenRequestParameters
  nameWithType: FederatedMessageSecurityOverHttp.TokenRequestParameters
