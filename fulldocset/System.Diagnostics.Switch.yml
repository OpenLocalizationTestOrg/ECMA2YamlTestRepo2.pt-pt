### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Switch
  id: Switch
  children:
  - System.Diagnostics.Switch.#ctor(System.String,System.String)
  - System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.OnValueChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  langs:
  - csharp
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
  type: Class
  summary: "Fornece uma classe base abstracta para criar novos depuração e rastreio comutadores."
  remarks: "Um comutador fornece um mecanismo eficiente para controlar a saída de rastreio e depuração em tempo de execução com as definições externas. A classe de comutador implementa o comportamento predefinido para comutadores, permitindo-lhe alterar o nível de comutador em tempo de execução.       Esta classe é a classe base para o <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch>e <xref:System.Diagnostics.TraceSwitch>classes.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.BooleanSwitch> Estes comutadores satisfazem a maioria de depuração e rastreio necessidades. Para obter mais informações sobre os parâmetros de rastreio, consulte [comutadores de rastreio](~/add/includes/ajax-current-ext-md.md).       Tem de ativar o rastreio ou depuração para utilizar um comutador. A seguinte sintaxe é específico do compilador. Se utilizar em compiladores que não sejam c# ou Visual Basic, consulte a documentação para o compilador.      -Para ativar a depuração em c#, adicione o `/d:DEBUG` sinalizador para a linha de comandos do compilador ao compilar o código, ou pode adicionar `#define DEBUG` na parte superior do seu ficheiro. No Visual Basic, adicione o `/d:DEBUG=True` sinalizador para a linha de comandos do compilador.      -Para ativar o rastreio utilizar em c#, adicione o `/d:TRACE` sinalizador para a linha de comandos do compilador ao compilar o código ou adicionar `#define TRACE` na parte superior do seu ficheiro. No Visual Basic, adicione o `/d:TRACE=True` sinalizador para a linha de comandos do compilador.       Para definir o nível do seu comutador, edite o ficheiro de configuração que corresponda ao nome da sua aplicação. Dentro deste ficheiro, pode adicionar um comutador e defina o respetivo valor, remova um comutador ou limpar todos os comutadores anteriormente definidos pela aplicação. O ficheiro de configuração deve ser formatado semelhante ao seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;true&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` esta secção de configuração de exemplo define um <xref:System.Diagnostics.BooleanSwitch>com o <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade definida como `mySwitch` e <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>valor definido para `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> </xref:System.Diagnostics.BooleanSwitch> Na sua aplicação, pode utilizar o valor do parâmetro configurado através da criação de um <xref:System.Diagnostics.BooleanSwitch>com o mesmo nome, como mostrado no exemplo de código seguinte.</xref:System.Diagnostics.BooleanSwitch>       [!code-cpp[Exemplo de comutador clássico&#4;](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_1.cpp)][!code-cs[comutador clássico exemplo&#4;  ](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_1.cs)]"
  example:
  - "The following example shows how to define a new Switch class with four levels of tracing that can be used to trace a call stack. You can use the switch to instrument your application to log each time the method is entered or exited.  \n  \n The first example creates the enumeration used to set the level of the switch.  \n  \n [!code-cpp[Classic Switch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_2.cpp)]\n [!code-cs[Classic Switch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_2.cs)]\n [!code-vb[Classic Switch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_2.vb)]  \n  \n The following example creates the new switch. The code implements a `Level` property to set the value of the new switch. `Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch. This example also implements two assessor properties to get the assigned value of the switch.  \n  \n [!code-cpp[Classic Switch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_3.cpp)]\n [!code-cs[Classic Switch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_3.cs)]\n [!code-vb[Classic Switch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_3.vb)]  \n  \n The following example creates a new switch in `Main`. It creates a new switch and assigns it a value. Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.  \n  \n [!code-cpp[Classic Switch Example#3](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_4.cpp)]\n [!code-cs[Classic Switch Example#3](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_4.cs)]\n [!code-vb[Classic Switch Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_4.vb)]"
  syntax:
    content: public abstract class Switch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> classe."
  remarks: "Quando cria um novo <xref:System.Diagnostics.Switch>objeto, o valor da `displayName` parâmetro é utilizado para localizar as definições de comutador inicial.</xref:System.Diagnostics.Switch> O valor predefinido é uma cadeia vazia (&quot;&quot;).       No ficheiro de configuração XML, pode adicionar um comutador e defina o respetivo valor, remova um comutador ou limpar todos os comutadores anteriormente definidos pela aplicação. As alterações dinâmica para o ficheiro de configuração não são detetadas enquanto a aplicação está a executar. Tem de parar e reiniciar uma aplicação antes das alterações ao ficheiro de configuração em vigor. O ficheiro de configuração deve ser formatado semelhante ao seguinte exemplo:```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;10&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: protected Switch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome do comutador."
    - id: description
      type: System.String
      description: "A descrição para o comutador."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> classe, especificando o nome a apresentar, a descrição e o valor predefinido para o comutador."
  remarks: "O `displayName` parâmetro é utilizado para definir o valor da <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade e o `description` parâmetro está a utilizar para definir o valor da <xref:System.Diagnostics.Switch.Description%2A>propriedade.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> O `defaultSwitchValue` parâmetro é o valor para o comutador se o <xref:System.Diagnostics.Switch.Value%2A>propriedade não está definida por código ou o atributo de ficheiro de configuração.</xref:System.Diagnostics.Switch.Value%2A> Consulte o <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>sobrecarga para obter informações adicionais.</xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: protected Switch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome do comutador."
    - id: description
      type: System.String
      description: "A descrição do comutador."
    - id: defaultSwitchValue
      type: System.String
      description: "O valor predefinido para o comutador."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Attributes
  id: Attributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os atributos de comutador personalizadas definidos no ficheiro de configuração de aplicação."
  remarks: "A propriedade de atributos identifica os atributos personalizados referenciados no ficheiro de configuração da aplicação. Não são enumerados atributos personalizados não referenciados. Classes que herdam a <xref:System.Diagnostics.Switch>classe pode adicionar atributos personalizados ao substituir o <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>método e devolver uma matriz de cadeia de nomes de atributo personalizado.</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> </xref:System.Diagnostics.Switch>"
  example:
  - "The following code sample shows how to display the unrecognized attributes for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#15](~/add/codesnippet/csharp/p-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#15](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> que contém os atributos personalizados sensível para o comutador de rastreio."
  overload: System.Diagnostics.Switch.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Description
  id: Description
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém uma descrição do comutador."
  remarks: "Esta propriedade deve indicar a função do comutador; Por exemplo, &quot;permite o rastreio para um componente de observador de diretório.&quot; O valor é definido pelo `descriptor` parâmetro o <xref:System.Diagnostics.Switch.%23ctor%2A>construtor.</xref:System.Diagnostics.Switch.%23ctor%2A>"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A descrição do comutador. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Diagnostics.Switch.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.DisplayName
  id: DisplayName
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um nome utilizado para identificar o comutador."
  remarks: 'Quando cria um novo <xref:System.Diagnostics.Switch>objeto, o DisplayName localiza as definições de comutador inicial.</xref:System.Diagnostics.Switch> Para obter mais informações, consulte o <xref:System.Diagnostics.Switch.%23ctor%2A>construtor e [como: criar, inicializar e configurar o rastreio comutadores](~/add/includes/ajax-current-ext-md.md) na documentação do Visual Studio.</xref:System.Diagnostics.Switch.%23ctor%2A>'
  example:
  - "The following code example displays the display name for the switch in use by a trace source.  This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.  \n  \n [!code-cs[System.Diagnostics.TraceSource#10](~/add/codesnippet/csharp/p-system.diagnostics.swi_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#10](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_0_1.vb)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "O nome utilizado para identificar o comutador. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Diagnostics.Switch.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém os atributos personalizados suportados pelo comutador."
  remarks: "Devolve a implementação predefinida para o método GetSupportedAttributes `null`. Se um comutador é adicionado num ficheiro de configuração e os atributos personalizados especificados que não estão incluídas na matriz da cadeia devolvida pelo GetSupportedAttributes, um <xref:System.Configuration.ConfigurationException>é acionada quando o comutador está carregado.</xref:System.Configuration.ConfigurationException>"
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#34](~/add/codesnippet/csharp/m-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#34](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de cadeia que contém os nomes dos atributos personalizados suportados por comutador, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não existe nenhum atributos personalizados são suportados."
  overload: System.Diagnostics.Switch.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Invocada quando o <xref:System.Diagnostics.Switch.SwitchSetting*>propriedade é alterada.</xref:System.Diagnostics.Switch.SwitchSetting*>"
  remarks: "OnSwitchSettingChanged é invocado pela primeira vez um comutador lê o <xref:System.Diagnostics.Switch.SwitchSetting%2A>valor no ficheiro de configuração e é invocado novamente sempre que o valor do comutador é alterado.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected virtual void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Invocada quando o <xref:System.Diagnostics.Switch.Value*>propriedade é alterada.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "A implementação predefinida analisa o novo valor da <xref:System.Diagnostics.Switch.Value%2A>propriedade para um valor de número inteiro que utiliza para definir o <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.Value%2A>"
  syntax:
    content: protected virtual void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.SwitchSetting
  id: SwitchSetting
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define a definição atual para este comutador."
  syntax:
    content: protected int SwitchSetting { get; set; }
    return:
      type: System.Int32
      description: "A definição atual para este comutador. A predefinição é zero."
  overload: System.Diagnostics.Switch.SwitchSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Value
  id: Value
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o valor do comutador."
  remarks: "O <xref:System.Diagnostics.Switch.OnValueChanged%2A>método é chamado quando o valor da propriedade Value é alterado.</xref:System.Diagnostics.Switch.OnValueChanged%2A> O <xref:System.Diagnostics.Switch.OnValueChanged%2A>método analisa o valor desta propriedade e converte-o para um valor de número inteiro, que é utilizado para definir o <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.OnValueChanged%2A>"
  syntax:
    content: protected string Value { get; set; }
    return:
      type: System.String
      description: "Uma cadeia representando o valor do comutador."
  overload: System.Diagnostics.Switch.Value*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - o valor não consistir apenas um sinal negativo opcional seguido por uma sequência de dígitos vão de 0 a 9.       - ou - o valor representa um número inferior a <xref:System.Int32.MinValue>ou maior do que <xref:System.Int32.MaxValue>.</xref:System.Int32.MaxValue> </xref:System.Int32.MinValue>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
- uid: System.Diagnostics.Switch.Attributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.#ctor*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch
  nameWithType: Switch.Switch
- uid: System.Diagnostics.Switch.Attributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
- uid: System.Diagnostics.Switch.Description*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
- uid: System.Diagnostics.Switch.DisplayName*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: Switch.GetSupportedAttributes
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: Switch.OnSwitchSettingChanged
- uid: System.Diagnostics.Switch.OnValueChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged
  nameWithType: Switch.OnValueChanged
- uid: System.Diagnostics.Switch.SwitchSetting*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
