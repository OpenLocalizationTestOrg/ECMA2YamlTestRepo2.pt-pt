### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.RemoteArgument
  id: RemoteArgument
  children:
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Array)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Char)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Double)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Single)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.String)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.ArrayValue
  - System.AddIn.Contract.RemoteArgument.BooleanValue
  - System.AddIn.Contract.RemoteArgument.ByteValue
  - System.AddIn.Contract.RemoteArgument.CharValue
  - System.AddIn.Contract.RemoteArgument.ContractValue
  - System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)
  - System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)
  - System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  - System.AddIn.Contract.RemoteArgument.DateTimeValue
  - System.AddIn.Contract.RemoteArgument.DBNullValue
  - System.AddIn.Contract.RemoteArgument.DecimalValue
  - System.AddIn.Contract.RemoteArgument.DoubleValue
  - System.AddIn.Contract.RemoteArgument.Int16Value
  - System.AddIn.Contract.RemoteArgument.Int32Value
  - System.AddIn.Contract.RemoteArgument.Int64Value
  - System.AddIn.Contract.RemoteArgument.IsByRef
  - System.AddIn.Contract.RemoteArgument.MissingValue
  - System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  - System.AddIn.Contract.RemoteArgument.SByteValue
  - System.AddIn.Contract.RemoteArgument.SingleValue
  - System.AddIn.Contract.RemoteArgument.StringValue
  - System.AddIn.Contract.RemoteArgument.TypeCode
  - System.AddIn.Contract.RemoteArgument.UInt16Value
  - System.AddIn.Contract.RemoteArgument.UInt32Value
  - System.AddIn.Contract.RemoteArgument.UInt64Value
  langs:
  - csharp
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
  type: Struct
  summary: "Represents an instance of a type that can be passed across process and application domain boundaries."
  remarks: "Use the RemoteArgument structure to pass arguments of types that are not determined until run time across process and application domain boundaries. The purpose of RemoteArgument is similar to that of the `VARIANT` type in COM.       You can use RemoteArgument to pass the following types and values as remote arguments:      -   <xref:System.Type.Missing?displayProperty=fullName>.      -   <xref:System.AddIn.Contract.IContract>.      -   Intrinsic data types.      -   Arrays that contain elements of intrinsic data types.       An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>.       RemoteArgument provides constructors for each of the types that it supports. You can also use the <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> methods to create RemoteArgument objects. The <xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A> methods automatically call the appropriate <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor for your argument type.       If you create a RemoteArgument using the default parameterless constructor, the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property is set to the value <xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName> and the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property is set to the value <xref:System.TypeCode?displayProperty=fullName>."
  syntax:
    content: public struct RemoteArgument
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)
  id: '#ctor(System.AddIn.Contract.IContract)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(IContract)
  nameWithType: RemoteArgument.RemoteArgument(IContract)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.IContract value);
    parameters:
    - id: value
      type: System.AddIn.Contract.IContract
      description: "An <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array)
  id: '#ctor(System.Array)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Array)
  nameWithType: RemoteArgument.RemoteArgument(Array)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Array> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to the type code of the array element type, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (Array array);
    parameters:
    - id: array
      type: System.Array
      description: "An <xref:System.Array> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The array element type is not a base type (that is, the <xref:System.Type.GetTypeCode*> method for the array element type returns &lt;xref:System.TypeCode?displayProperty=fullName&gt;)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Boolean> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "A <xref:System.Boolean> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Byte)
  nameWithType: RemoteArgument.RemoteArgument(Byte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Byte> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "A <xref:System.Byte> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char)
  id: '#ctor(System.Char)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Char)
  nameWithType: RemoteArgument.RemoteArgument(Char)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Char> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (char value);
    parameters:
    - id: value
      type: System.Char
      description: "A <xref:System.Char> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DateTime)
  nameWithType: RemoteArgument.RemoteArgument(DateTime)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.DateTime> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)
  id: '#ctor(System.DBNull)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DBNull)
  nameWithType: RemoteArgument.RemoteArgument(DBNull)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref href=&quot;System.DBNull&quot;></xref> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (DBNull value);
    parameters:
    - id: value
      type: System.DBNull
      description: "A <xref href=&quot;System.DBNull&quot;></xref> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Decimal)
  nameWithType: RemoteArgument.RemoteArgument(Decimal)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Decimal> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "A <xref:System.Decimal> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Double)
  nameWithType: RemoteArgument.RemoteArgument(Double)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Double> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (double value);
    parameters:
    - id: value
      type: System.Double
      description: "A <xref:System.Double> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int16)
  nameWithType: RemoteArgument.RemoteArgument(Int16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Int16> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (short value);
    parameters:
    - id: value
      type: System.Int16
      description: "An <xref:System.Int16> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int32)
  nameWithType: RemoteArgument.RemoteArgument(Int32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Int32> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "An <xref:System.Int32> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int64)
  nameWithType: RemoteArgument.RemoteArgument(Int64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Int64> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "An <xref:System.Int64> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)
  id: '#ctor(System.SByte)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(SByte)
  nameWithType: RemoteArgument.RemoteArgument(SByte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.SByte> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (sbyte value);
    parameters:
    - id: value
      type: System.SByte
      description: "An <xref:System.SByte> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Single)
  nameWithType: RemoteArgument.RemoteArgument(Single)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Single> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (float value);
    parameters:
    - id: value
      type: System.Single
      description: "A <xref:System.Single> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(String)
  nameWithType: RemoteArgument.RemoteArgument(String)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.String> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (string value);
    parameters:
    - id: value
      type: System.String
      description: "A <xref:System.String> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)
  id: '#ctor(System.UInt16)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt16)
  nameWithType: RemoteArgument.RemoteArgument(UInt16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.UInt16> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (ushort value);
    parameters:
    - id: value
      type: System.UInt16
      description: "A <xref:System.UInt16> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt32)
  nameWithType: RemoteArgument.RemoteArgument(UInt32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.UInt32> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "A <xref:System.UInt32> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt64)
  nameWithType: RemoteArgument.RemoteArgument(UInt64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.UInt64> argument."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to `false`."
  syntax:
    content: public RemoteArgument (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "A <xref:System.UInt64> argument that can be passed across process or application domain boundaries."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)
  id: '#ctor(System.AddIn.Contract.IContract,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(IContract,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(IContract,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.IContract value, bool isByRef);
    parameters:
    - id: value
      type: System.AddIn.Contract.IContract
      description: "An <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)
  id: '#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(RemoteArgumentKind,TypeCode)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class using the specified <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> and <xref:System.TypeCode> for an argument that is not passed by reference."
  remarks: "This constructor assigns the default value of the data type specified by the `typeCode` parameter to the <xref:System.AddIn.Contract.RemoteArgument>.       An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>."
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode);
    parameters:
    - id: remoteArgKind
      type: System.AddIn.Contract.RemoteArgumentKind
      description: "One of the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> values that indicates whether the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents an intrinsic type, an array of intrinsic types, an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>, or the &lt;xref:System.Type.Missing?displayProperty=fullName&gt; value."
    - id: typeCode
      type: System.TypeCode
      description: "A <xref:System.TypeCode> that specifies the base type of the remote argument."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> or <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref>, and <code>typeCode</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; or &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       -or-       <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> and <code>typeCode</code> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       -or-       <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> and <code>typeCode</code> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)
  id: '#ctor(System.Array,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Array,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Array,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Array> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to the type code of the array element type, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (Array array, bool isByRef);
    parameters:
    - id: array
      type: System.Array
      description: "An <xref:System.Array> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `array` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The array element type is not a base type (that is, the <xref:System.Type.GetTypeCode*> method returns &lt;xref:System.TypeCode?displayProperty=fullName&gt; for the array element type)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Boolean,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Boolean> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (bool value, bool isByRef);
    parameters:
    - id: value
      type: System.Boolean
      description: "A <xref:System.Boolean> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)
  id: '#ctor(System.Byte,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Byte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Byte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Byte> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (byte value, bool isByRef);
    parameters:
    - id: value
      type: System.Byte
      description: "A <xref:System.Byte> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)
  id: '#ctor(System.Char,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Char,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Char,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Char> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (char value, bool isByRef);
    parameters:
    - id: value
      type: System.Char
      description: "A <xref:System.Char> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)
  id: '#ctor(System.DateTime,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DateTime,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DateTime,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.DateTime> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (DateTime value, bool isByRef);
    parameters:
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)
  id: '#ctor(System.DBNull,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(DBNull,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DBNull,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref href=&quot;System.DBNull&quot;></xref> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (DBNull value, bool isByRef);
    parameters:
    - id: value
      type: System.DBNull
      description: "A <xref href=&quot;System.DBNull&quot;></xref> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)
  id: '#ctor(System.Decimal,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Decimal,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Decimal,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Decimal> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (decimal value, bool isByRef);
    parameters:
    - id: value
      type: System.Decimal
      description: "A <xref:System.Decimal> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)
  id: '#ctor(System.Double,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Double,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Double,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Double> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (double value, bool isByRef);
    parameters:
    - id: value
      type: System.Double
      description: "A <xref:System.Double> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)
  id: '#ctor(System.Int16,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Int16> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (short value, bool isByRef);
    parameters:
    - id: value
      type: System.Int16
      description: "An <xref:System.Int16> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Int32> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (int value, bool isByRef);
    parameters:
    - id: value
      type: System.Int32
      description: "An <xref:System.Int32> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)
  id: '#ctor(System.Int64,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Int64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.Int64> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (long value, bool isByRef);
    parameters:
    - id: value
      type: System.Int64
      description: "An <xref:System.Int64> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)
  id: '#ctor(System.SByte,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(SByte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(SByte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents an <xref:System.SByte> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (sbyte value, bool isByRef);
    parameters:
    - id: value
      type: System.SByte
      description: "An <xref:System.SByte> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)
  id: '#ctor(System.Single,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(Single,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Single,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.Single> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (float value, bool isByRef);
    parameters:
    - id: value
      type: System.Single
      description: "A <xref:System.Single> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(String,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(String,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.String> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (string value, bool isByRef);
    parameters:
    - id: value
      type: System.String
      description: "A <xref:System.String> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)
  id: '#ctor(System.UInt16,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.UInt16> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (ushort value, bool isByRef);
    parameters:
    - id: value
      type: System.UInt16
      description: "A <xref:System.UInt16> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)
  id: '#ctor(System.UInt32,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.UInt32> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (uint value, bool isByRef);
    parameters:
    - id: value
      type: System.UInt32
      description: "A <xref:System.UInt32> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)
  id: '#ctor(System.UInt64,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(UInt64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class that represents a <xref:System.UInt64> argument that can be passed by reference."
  remarks: "This constructor sets the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property to <xref:System.AddIn.Contract.RemoteArgumentKind>, the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property to <xref:System.TypeCode?displayProperty=fullName>, and the <xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A> property to the value of the `isByRef` parameter."
  syntax:
    content: public RemoteArgument (ulong value, bool isByRef);
    parameters:
    - id: value
      type: System.UInt64
      description: "A <xref:System.UInt64> argument that can be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if `value` is an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)
  id: '#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)'
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  type: Constructor
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Initializes a new instance of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> class using the specified <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> and <xref:System.TypeCode> for an argument that can be passed by reference."
  remarks: "This constructor assigns the default value of the data type specified by the `typeCode` parameter to the <xref:System.AddIn.Contract.RemoteArgument>.       An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>."
  syntax:
    content: public RemoteArgument (System.AddIn.Contract.RemoteArgumentKind remoteArgKind, TypeCode typeCode, bool isByRef);
    parameters:
    - id: remoteArgKind
      type: System.AddIn.Contract.RemoteArgumentKind
      description: "One of the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> values that indicates whether the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents an intrinsic type, an array of intrinsic types, an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>, or the &lt;xref:System.Type.Missing?displayProperty=fullName&gt; value."
    - id: typeCode
      type: System.TypeCode
      description: "A <xref:System.TypeCode> that specifies the base type of the remote argument."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the remote argument is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> or <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref>, and <code>typeCode</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; or &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       -or-       <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> and <code>typeCode</code> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;.       -or-       <code>remoteArgKind</code> is <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> and <code>typeCode</code> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>remoteArgKind</code> is not a valid <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.ArrayValue
  id: ArrayValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: ArrayValue
  nameWithType: RemoteArgument.ArrayValue
  fullName: System.AddIn.Contract.RemoteArgument.ArrayValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Array> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public Array ArrayValue { get; set; }
    return:
      type: System.Array
      description: "The <xref:System.Array> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.ArrayValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.BooleanValue
  id: BooleanValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: BooleanValue
  nameWithType: RemoteArgument.BooleanValue
  fullName: System.AddIn.Contract.RemoteArgument.BooleanValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Boolean> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public bool BooleanValue { get; set; }
    return:
      type: System.Boolean
      description: "The <xref:System.Boolean> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.BooleanValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.ByteValue
  id: ByteValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: ByteValue
  nameWithType: RemoteArgument.ByteValue
  fullName: System.AddIn.Contract.RemoteArgument.ByteValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Byte> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public byte ByteValue { get; set; }
    return:
      type: System.Byte
      description: "The <xref:System.Byte> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.ByteValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CharValue
  id: CharValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CharValue
  nameWithType: RemoteArgument.CharValue
  fullName: System.AddIn.Contract.RemoteArgument.CharValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Char> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public char CharValue { get; set; }
    return:
      type: System.Char
      description: "The <xref:System.Char> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref:System.Char.MinValue> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.CharValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.ContractValue
  id: ContractValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: ContractValue
  nameWithType: RemoteArgument.ContractValue
  fullName: System.AddIn.Contract.RemoteArgument.ContractValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public System.AddIn.Contract.IContract ContractValue { get; set; }
    return:
      type: System.AddIn.Contract.IContract
      description: "The <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.ContractValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)
  id: CreateRemoteArgument(System.Object)
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CreateRemoteArgument(Object)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Creates a <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> for an argument that is not passed by reference."
  remarks: "This method calls the <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor that applies to the type of the `value` parameter."
  syntax:
    content: public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The argument that will be passed across process or application domain boundaries."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "A <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> that represents the specified argument."
  overload: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <code>value</code> is not an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>.       -or-       The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <code>value</code> is not set to &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.       -or-       <code>value</code> does not implement the <xref:System.IConvertible> interface and <code>value</code> is not an <xref:System.Array>.       -or-       <code>value</code> is an <xref:System.Array> that contains elements with a <xref:System.TypeCode> value of &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)
  id: CreateRemoteArgument(System.Object,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CreateRemoteArgument(Object,Boolean)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Creates a <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> for an argument that can be passed by reference."
  remarks: "This method calls the <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor that applies to the type of the `value` parameter."
  syntax:
    content: public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef);
    parameters:
    - id: value
      type: System.Object
      description: "The argument that will be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to pass the `value` argument by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "A <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> that represents the specified argument."
  overload: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <code>value</code> is not an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>.       -or-       The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <code>value</code> is not set to &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.       -or-       <code>value</code> does not implement the <xref:System.IConvertible> interface and <code>value</code> is not an <xref:System.Array>.       -or-       <code>value</code> is an <xref:System.Array> that contains elements with a <xref:System.TypeCode> value of &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  id: CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: CreateRemoteArgument(Object,Boolean,TypeCode)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Creates a <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> for an argument that has the specified type code and that can be passed by reference."
  remarks: "This method calls the <xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A> constructor that applies to the type of the `value` parameter.       You cannot use this method to create a <xref:System.AddIn.Contract.RemoteArgument> that represents a `null` array that contains elements of intrinsic data types. An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>."
  syntax:
    content: public static System.AddIn.Contract.RemoteArgument CreateRemoteArgument (object value, bool isByRef, TypeCode typeCodeToUse);
    parameters:
    - id: value
      type: System.Object
      description: "The argument that will be passed across process or application domain boundaries."
    - id: isByRef
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to pass the argument by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: typeCodeToUse
      type: System.TypeCode
      description: "A <xref:System.TypeCode> that indicates the type code of `value`, if `value` is not an <xref:System.Array>. Otherwise, a <xref:System.TypeCode> that indicates the type code of the elements in `value`."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "A <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> that represents the specified argument."
  overload: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt;, <code>value</code> is not an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>, and <code>value</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.TypeCode> of <code>value</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <code>value</code> is not &lt;xref:System.Reflection.Missing.Value?displayProperty=fullName&gt;.       -or-       <code>value</code> does not implement the <xref:System.IConvertible> interface, <code>value</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, and <code>value</code> is not an <xref:System.Array>.       -or-       <code>value</code> is an <xref:System.Array> that contains elements with a <xref:System.TypeCode> value of &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.TypeCode> of <code>value</code> is not &lt;xref:System.TypeCode?displayProperty=fullName&gt; and <code>typeCodeToUse</code> is &lt;xref:System.TypeCode?displayProperty=fullName&gt;."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>typeCodeToUse</code> does not specify a valid <xref:System.TypeCode> value."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DateTimeValue
  id: DateTimeValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DateTimeValue
  nameWithType: RemoteArgument.DateTimeValue
  fullName: System.AddIn.Contract.RemoteArgument.DateTimeValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.DateTime> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public DateTime DateTimeValue { get; set; }
    return:
      type: System.DateTime
      description: "The <xref:System.DateTime> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref:System.DateTime.MinValue> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.DateTimeValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DBNullValue
  id: DBNullValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DBNullValue
  nameWithType: RemoteArgument.DBNullValue
  fullName: System.AddIn.Contract.RemoteArgument.DBNullValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref href=&quot;System.DBNull&quot;></xref> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public DBNull DBNullValue { get; set; }
    return:
      type: System.DBNull
      description: "The <xref href=&quot;System.DBNull&quot;></xref> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.DBNullValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DecimalValue
  id: DecimalValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DecimalValue
  nameWithType: RemoteArgument.DecimalValue
  fullName: System.AddIn.Contract.RemoteArgument.DecimalValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Decimal> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public decimal DecimalValue { get; set; }
    return:
      type: System.Decimal
      description: "The <xref:System.Decimal> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.DecimalValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.DoubleValue
  id: DoubleValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: DoubleValue
  nameWithType: RemoteArgument.DoubleValue
  fullName: System.AddIn.Contract.RemoteArgument.DoubleValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Double> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public double DoubleValue { get; set; }
    return:
      type: System.Double
      description: "The <xref:System.Double> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0.0 if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.DoubleValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.Int16Value
  id: Int16Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: Int16Value
  nameWithType: RemoteArgument.Int16Value
  fullName: System.AddIn.Contract.RemoteArgument.Int16Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Int16> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public short Int16Value { get; set; }
    return:
      type: System.Int16
      description: "The <xref:System.Int16> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.Int16Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.Int32Value
  id: Int32Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: Int32Value
  nameWithType: RemoteArgument.Int32Value
  fullName: System.AddIn.Contract.RemoteArgument.Int32Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Int32> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public int Int32Value { get; set; }
    return:
      type: System.Int32
      description: "The <xref:System.Int32> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.Int32Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.Int64Value
  id: Int64Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: Int64Value
  nameWithType: RemoteArgument.Int64Value
  fullName: System.AddIn.Contract.RemoteArgument.Int64Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Int64> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public long Int64Value { get; set; }
    return:
      type: System.Int64
      description: "The <xref:System.Int64> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.Int64Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.IsByRef
  id: IsByRef
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: IsByRef
  nameWithType: RemoteArgument.IsByRef
  fullName: System.AddIn.Contract.RemoteArgument.IsByRef
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets a value that indicates whether the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents an argument that is passed by reference."
  syntax:
    content: public bool IsByRef { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents an argument that is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.RemoteArgument.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.MissingValue
  id: MissingValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: MissingValue
  nameWithType: RemoteArgument.MissingValue
  fullName: System.AddIn.Contract.RemoteArgument.MissingValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets the <xref:System.Type.Missing> value."
  syntax:
    content: public System.Reflection.Missing MissingValue { get; }
    return:
      type: System.Reflection.Missing
      description: "The <xref:System.Type.Missing> value."
  overload: System.AddIn.Contract.RemoteArgument.MissingValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       This property value is retrieved while the <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  id: RemoteArgumentKind
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: RemoteArgumentKind
  nameWithType: RemoteArgument.RemoteArgumentKind
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets a <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> that indicates the kind of argument that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  remarks: "An intrinsic data type is a primitive data type (that is, the <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property of the type is `true`) or a <xref:System.String>, <xref:System.Decimal>, <xref:System.DateTime>, or <xref:System.DBNull>."
  syntax:
    content: public System.AddIn.Contract.RemoteArgumentKind RemoteArgumentKind { get; }
    return:
      type: System.AddIn.Contract.RemoteArgumentKind
      description: "One of the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> values that indicates whether the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents an intrinsic type, an array of intrinsic types, an <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>, or the &lt;xref:System.Type.Missing?displayProperty=fullName&gt; value."
  overload: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.SByteValue
  id: SByteValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: SByteValue
  nameWithType: RemoteArgument.SByteValue
  fullName: System.AddIn.Contract.RemoteArgument.SByteValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.SByte> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public sbyte SByteValue { get; set; }
    return:
      type: System.SByte
      description: "The <xref:System.SByte> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.SByteValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.SingleValue
  id: SingleValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: SingleValue
  nameWithType: RemoteArgument.SingleValue
  fullName: System.AddIn.Contract.RemoteArgument.SingleValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.Single> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public float SingleValue { get; set; }
    return:
      type: System.Single
      description: "The <xref:System.Single> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0.0 if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.SingleValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.StringValue
  id: StringValue
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: StringValue
  nameWithType: RemoteArgument.StringValue
  fullName: System.AddIn.Contract.RemoteArgument.StringValue
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.String> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public string StringValue { get; set; }
    return:
      type: System.String
      description: "The <xref:System.String> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.StringValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.TypeCode
  id: TypeCode
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: TypeCode
  nameWithType: RemoteArgument.TypeCode
  fullName: System.AddIn.Contract.RemoteArgument.TypeCode
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets a <xref:System.TypeCode> that indicates the base type of the argument that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public TypeCode TypeCode { get; }
    return:
      type: System.TypeCode
      description: "A <xref:System.TypeCode> that indicates the base type of the argument that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  overload: System.AddIn.Contract.RemoteArgument.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.UInt16Value
  id: UInt16Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: UInt16Value
  nameWithType: RemoteArgument.UInt16Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt16Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.UInt16> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public ushort UInt16Value { get; set; }
    return:
      type: System.UInt16
      description: "The <xref:System.UInt16> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.UInt16Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.UInt32Value
  id: UInt32Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: UInt32Value
  nameWithType: RemoteArgument.UInt32Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt32Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.UInt32> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public uint UInt32Value { get; set; }
    return:
      type: System.UInt32
      description: "The <xref:System.UInt32> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.UInt32Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.RemoteArgument.UInt64Value
  id: UInt64Value
  parent: System.AddIn.Contract.RemoteArgument
  langs:
  - csharp
  name: UInt64Value
  nameWithType: RemoteArgument.UInt64Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt64Value
  type: Property
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Gets or sets the <xref:System.UInt64> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents."
  syntax:
    content: public ulong UInt64Value { get; set; }
    return:
      type: System.UInt64
      description: "The <xref:System.UInt64> that the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> represents; 0 (zero) if the value of the <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;></xref> has not yet been specified."
  overload: System.AddIn.Contract.RemoteArgument.UInt64Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*> property is not set to the <xref href=&quot;System.AddIn.Contract.RemoteArgumentKind&quot;></xref> value.       -or-       The <xref:System.AddIn.Contract.RemoteArgument.TypeCode*> property is not set to the &lt;xref:System.TypeCode?displayProperty=fullName&gt; value.       -or-       This property is set while the <xref:System.AddIn.Contract.RemoteArgument.IsByRef*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(IContract)
  nameWithType: RemoteArgument.RemoteArgument(IContract)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract)
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Array)
  nameWithType: RemoteArgument.RemoteArgument(Array)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Byte)
  nameWithType: RemoteArgument.RemoteArgument(Byte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Char)
  nameWithType: RemoteArgument.RemoteArgument(Char)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DateTime)
  nameWithType: RemoteArgument.RemoteArgument(DateTime)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DBNull)
  nameWithType: RemoteArgument.RemoteArgument(DBNull)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull)
- uid: System.DBNull
  parent: System
  isExternal: false
  name: DBNull
  nameWithType: DBNull
  fullName: System.DBNull
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Decimal)
  nameWithType: RemoteArgument.RemoteArgument(Decimal)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Double)
  nameWithType: RemoteArgument.RemoteArgument(Double)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int16)
  nameWithType: RemoteArgument.RemoteArgument(Int16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int32)
  nameWithType: RemoteArgument.RemoteArgument(Int32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int64)
  nameWithType: RemoteArgument.RemoteArgument(Int64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(SByte)
  nameWithType: RemoteArgument.RemoteArgument(SByte)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Single)
  nameWithType: RemoteArgument.RemoteArgument(Single)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(String)
  nameWithType: RemoteArgument.RemoteArgument(String)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt16)
  nameWithType: RemoteArgument.RemoteArgument(UInt16)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt32)
  nameWithType: RemoteArgument.RemoteArgument(UInt32)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt64)
  nameWithType: RemoteArgument.RemoteArgument(UInt64)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.IContract,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(IContract,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(IContract,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(IContract,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(RemoteArgumentKind,TypeCode)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode)
- uid: System.AddIn.Contract.RemoteArgumentKind
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgumentKind
  nameWithType: RemoteArgumentKind
  fullName: System.AddIn.Contract.RemoteArgumentKind
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Array,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Array,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Array,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Array,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Boolean,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Boolean,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Boolean,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Boolean,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Byte,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Byte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Byte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Byte,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Char,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Char,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Char,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Char,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DateTime,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DateTime,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DateTime,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DateTime,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.DBNull,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(DBNull,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(DBNull,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(DBNull,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Decimal,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Decimal,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Decimal,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Decimal,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Double,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Double,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Double,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Double,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int16,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int16,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int32,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int32,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Int64,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Int64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Int64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Int64,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.SByte,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(SByte,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(SByte,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(SByte,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.Single,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(Single,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(Single,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(Single,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.String,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(String,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(String,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(String,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt16,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt16,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt16,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt16,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt32,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt32,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt32,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt32,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.UInt64,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(UInt64,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(UInt64,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(UInt64,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.#ctor(System.AddIn.Contract.RemoteArgumentKind,System.TypeCode,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  nameWithType: RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgument(RemoteArgumentKind,TypeCode,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.ArrayValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ArrayValue
  nameWithType: RemoteArgument.ArrayValue
  fullName: System.AddIn.Contract.RemoteArgument.ArrayValue
- uid: System.AddIn.Contract.RemoteArgument.BooleanValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: BooleanValue
  nameWithType: RemoteArgument.BooleanValue
  fullName: System.AddIn.Contract.RemoteArgument.BooleanValue
- uid: System.AddIn.Contract.RemoteArgument.ByteValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ByteValue
  nameWithType: RemoteArgument.ByteValue
  fullName: System.AddIn.Contract.RemoteArgument.ByteValue
- uid: System.AddIn.Contract.RemoteArgument.CharValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CharValue
  nameWithType: RemoteArgument.CharValue
  fullName: System.AddIn.Contract.RemoteArgument.CharValue
- uid: System.AddIn.Contract.RemoteArgument.ContractValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ContractValue
  nameWithType: RemoteArgument.ContractValue
  fullName: System.AddIn.Contract.RemoteArgument.ContractValue
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument(Object)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument(Object,Boolean)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean)
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(System.Object,System.Boolean,System.TypeCode)
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument(Object,Boolean,TypeCode)
  nameWithType: RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
  fullName: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument(Object,Boolean,TypeCode)
- uid: System.AddIn.Contract.RemoteArgument.DateTimeValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DateTimeValue
  nameWithType: RemoteArgument.DateTimeValue
  fullName: System.AddIn.Contract.RemoteArgument.DateTimeValue
- uid: System.AddIn.Contract.RemoteArgument.DBNullValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DBNullValue
  nameWithType: RemoteArgument.DBNullValue
  fullName: System.AddIn.Contract.RemoteArgument.DBNullValue
- uid: System.AddIn.Contract.RemoteArgument.DecimalValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DecimalValue
  nameWithType: RemoteArgument.DecimalValue
  fullName: System.AddIn.Contract.RemoteArgument.DecimalValue
- uid: System.AddIn.Contract.RemoteArgument.DoubleValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DoubleValue
  nameWithType: RemoteArgument.DoubleValue
  fullName: System.AddIn.Contract.RemoteArgument.DoubleValue
- uid: System.AddIn.Contract.RemoteArgument.Int16Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int16Value
  nameWithType: RemoteArgument.Int16Value
  fullName: System.AddIn.Contract.RemoteArgument.Int16Value
- uid: System.AddIn.Contract.RemoteArgument.Int32Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int32Value
  nameWithType: RemoteArgument.Int32Value
  fullName: System.AddIn.Contract.RemoteArgument.Int32Value
- uid: System.AddIn.Contract.RemoteArgument.Int64Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int64Value
  nameWithType: RemoteArgument.Int64Value
  fullName: System.AddIn.Contract.RemoteArgument.Int64Value
- uid: System.AddIn.Contract.RemoteArgument.IsByRef
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: IsByRef
  nameWithType: RemoteArgument.IsByRef
  fullName: System.AddIn.Contract.RemoteArgument.IsByRef
- uid: System.AddIn.Contract.RemoteArgument.MissingValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: MissingValue
  nameWithType: RemoteArgument.MissingValue
  fullName: System.AddIn.Contract.RemoteArgument.MissingValue
- uid: System.Reflection.Missing
  parent: System.Reflection
  isExternal: true
  name: Missing
  nameWithType: Missing
  fullName: System.Reflection.Missing
- uid: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgumentKind
  nameWithType: RemoteArgument.RemoteArgumentKind
  fullName: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind
- uid: System.AddIn.Contract.RemoteArgument.SByteValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SByteValue
  nameWithType: RemoteArgument.SByteValue
  fullName: System.AddIn.Contract.RemoteArgument.SByteValue
- uid: System.AddIn.Contract.RemoteArgument.SingleValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SingleValue
  nameWithType: RemoteArgument.SingleValue
  fullName: System.AddIn.Contract.RemoteArgument.SingleValue
- uid: System.AddIn.Contract.RemoteArgument.StringValue
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: StringValue
  nameWithType: RemoteArgument.StringValue
  fullName: System.AddIn.Contract.RemoteArgument.StringValue
- uid: System.AddIn.Contract.RemoteArgument.TypeCode
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: TypeCode
  nameWithType: RemoteArgument.TypeCode
  fullName: System.AddIn.Contract.RemoteArgument.TypeCode
- uid: System.AddIn.Contract.RemoteArgument.UInt16Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt16Value
  nameWithType: RemoteArgument.UInt16Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt16Value
- uid: System.AddIn.Contract.RemoteArgument.UInt32Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt32Value
  nameWithType: RemoteArgument.UInt32Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt32Value
- uid: System.AddIn.Contract.RemoteArgument.UInt64Value
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt64Value
  nameWithType: RemoteArgument.UInt64Value
  fullName: System.AddIn.Contract.RemoteArgument.UInt64Value
- uid: System.AddIn.Contract.RemoteArgument.#ctor*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument.RemoteArgument
- uid: System.AddIn.Contract.RemoteArgument.ArrayValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ArrayValue
  nameWithType: RemoteArgument.ArrayValue
- uid: System.AddIn.Contract.RemoteArgument.BooleanValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: BooleanValue
  nameWithType: RemoteArgument.BooleanValue
- uid: System.AddIn.Contract.RemoteArgument.ByteValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ByteValue
  nameWithType: RemoteArgument.ByteValue
- uid: System.AddIn.Contract.RemoteArgument.CharValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CharValue
  nameWithType: RemoteArgument.CharValue
- uid: System.AddIn.Contract.RemoteArgument.ContractValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: ContractValue
  nameWithType: RemoteArgument.ContractValue
- uid: System.AddIn.Contract.RemoteArgument.CreateRemoteArgument*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: CreateRemoteArgument
  nameWithType: RemoteArgument.CreateRemoteArgument
- uid: System.AddIn.Contract.RemoteArgument.DateTimeValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DateTimeValue
  nameWithType: RemoteArgument.DateTimeValue
- uid: System.AddIn.Contract.RemoteArgument.DBNullValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DBNullValue
  nameWithType: RemoteArgument.DBNullValue
- uid: System.AddIn.Contract.RemoteArgument.DecimalValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DecimalValue
  nameWithType: RemoteArgument.DecimalValue
- uid: System.AddIn.Contract.RemoteArgument.DoubleValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: DoubleValue
  nameWithType: RemoteArgument.DoubleValue
- uid: System.AddIn.Contract.RemoteArgument.Int16Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int16Value
  nameWithType: RemoteArgument.Int16Value
- uid: System.AddIn.Contract.RemoteArgument.Int32Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int32Value
  nameWithType: RemoteArgument.Int32Value
- uid: System.AddIn.Contract.RemoteArgument.Int64Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: Int64Value
  nameWithType: RemoteArgument.Int64Value
- uid: System.AddIn.Contract.RemoteArgument.IsByRef*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: IsByRef
  nameWithType: RemoteArgument.IsByRef
- uid: System.AddIn.Contract.RemoteArgument.MissingValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: MissingValue
  nameWithType: RemoteArgument.MissingValue
- uid: System.AddIn.Contract.RemoteArgument.RemoteArgumentKind*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: RemoteArgumentKind
  nameWithType: RemoteArgument.RemoteArgumentKind
- uid: System.AddIn.Contract.RemoteArgument.SByteValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SByteValue
  nameWithType: RemoteArgument.SByteValue
- uid: System.AddIn.Contract.RemoteArgument.SingleValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: SingleValue
  nameWithType: RemoteArgument.SingleValue
- uid: System.AddIn.Contract.RemoteArgument.StringValue*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: StringValue
  nameWithType: RemoteArgument.StringValue
- uid: System.AddIn.Contract.RemoteArgument.TypeCode*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: TypeCode
  nameWithType: RemoteArgument.TypeCode
- uid: System.AddIn.Contract.RemoteArgument.UInt16Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt16Value
  nameWithType: RemoteArgument.UInt16Value
- uid: System.AddIn.Contract.RemoteArgument.UInt32Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt32Value
  nameWithType: RemoteArgument.UInt32Value
- uid: System.AddIn.Contract.RemoteArgument.UInt64Value*
  parent: System.AddIn.Contract.RemoteArgument
  isExternal: false
  name: UInt64Value
  nameWithType: RemoteArgument.UInt64Value
