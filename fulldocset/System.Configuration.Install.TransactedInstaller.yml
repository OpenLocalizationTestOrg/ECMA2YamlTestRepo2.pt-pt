### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.TransactedInstaller
  id: TransactedInstaller
  children:
  - System.Configuration.Install.TransactedInstaller.#ctor
  - System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)
  - System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)
  langs:
  - csharp
  name: TransactedInstaller
  nameWithType: TransactedInstaller
  fullName: System.Configuration.Install.TransactedInstaller
  type: Class
  summary: "Defines an installer that either succeeds completely or fails and leaves the computer in its initial state."
  remarks: "To run installers in a transaction, add them to the <xref:System.Configuration.Install.Installer.Installers%2A> property of this TransactedInstaller instance."
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> and <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> methods of the TransactedInstaller class.  \n  \n This example provides an implementation similar to that of [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md). It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assembly's options are used if there is a previous assembly in the list. If either the \"/u\" or \"/uninstall\" option is specified, the assemblies are uninstalled. If the \"/?\" or \"/help\" option is provided, the help information is displayed to the console.  \n  \n [!code-cpp[TransactedInstaller#1](~/add/codesnippet/cpp/t-system.configuration.i_8_1.cpp)]\n [!code-vb[TransactedInstaller#1](~/add/codesnippet/visualbasic/t-system.configuration.i_8_1.vb)]\n [!code-cs[TransactedInstaller#1](~/add/codesnippet/csharp/t-system.configuration.i_8_1.cs)]"
  syntax:
    content: 'public class TransactedInstaller : System.Configuration.Install.Installer'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.HelpText
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Configuration.Install.TransactedInstaller.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.TransactedInstaller
  langs:
  - csharp
  name: TransactedInstaller()
  nameWithType: TransactedInstaller.TransactedInstaller()
  fullName: System.Configuration.Install.TransactedInstaller.TransactedInstaller()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.Install.TransactedInstaller&quot;></xref> class."
  syntax:
    content: public TransactedInstaller ();
    parameters: []
  overload: System.Configuration.Install.TransactedInstaller.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.Configuration.Install.TransactedInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: TransactedInstaller.Install(IDictionary)
  fullName: System.Configuration.Install.TransactedInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Performs the installation."
  remarks: "This method calls the Install method of each installer contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property of this instance. The <xref:System.Collections.IDictionary> object referenced by the `savedState` parameter is updated to reflect the status of the installation after the contained installers have run. If all the Install methods succeed, the <xref:System.Configuration.Install.Installer.Commit%2A> method is called. Otherwise, the <xref:System.Configuration.Install.Installer.Rollback%2A> method is called for each installer."
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, Install and <xref:System.Configuration.Install.TransactedInstaller.Uninstall%2A> methods of the <xref:System.Configuration.Install.TransactedInstaller> class.  \n  \n This example provides an implementation similar to that of InstallUtil.exe. It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assemblies options are taken if there is a previous assembly in the list. If the '/u' or '/uninstall' option is specified then the assemblies are uninstalled. If the '/?' or '/help' option is provided then the help information is printed to the console.  \n  \n [!code-cpp[TransactedInstaller#1](~/add/codesnippet/cpp/4da9ed08-6dc0-426b-afe8-_1.cpp)]\n [!code-vb[TransactedInstaller#1](~/add/codesnippet/visualbasic/4da9ed08-6dc0-426b-afe8-_1.vb)]\n [!code-cs[TransactedInstaller#1](~/add/codesnippet/csharp/4da9ed08-6dc0-426b-afe8-_1.cs)]"
  syntax:
    content: public override void Install (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> in which this method saves information needed to perform a commit, rollback, or uninstall operation."
  overload: System.Configuration.Install.TransactedInstaller.Install*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>savedState</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "The installation failed, and is being rolled back."
  platform:
  - net462
- uid: System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)
  id: Uninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.TransactedInstaller
  langs:
  - csharp
  name: Uninstall(IDictionary)
  nameWithType: TransactedInstaller.Uninstall(IDictionary)
  fullName: System.Configuration.Install.TransactedInstaller.Uninstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Removes an installation."
  remarks: "Call this method to remove a previously completed installation. This Uninstall method calls the <xref:System.Configuration.Install.Installer.Uninstall%2A> method of each installer in the <xref:System.Configuration.Install.Installer.Installers%2A> property to uninstall any resources set during installation. Any exceptions during uninstallation are ignored.      > [!NOTE] >  Although the <xref:System.Configuration.Install.Installer.Install%2A> and <xref:System.Configuration.Install.Installer.Commit%2A> methods save the state of the computer after the installations, the file containing the <xref:System.Collections.IDictionary> from the `savedState` parameter might have been deleted at some point after the installation was complete. If the file is deleted, the `savedState` parameter is `null`."
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.TransactedInstaller.%23ctor%2A>, <xref:System.Configuration.Install.TransactedInstaller.Install%2A> and Uninstall methods of the <xref:System.Configuration.Install.TransactedInstaller> class.  \n  \n This example provides an implementation similar to that of [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md). It installs assemblies with the options preceding that particular assembly. If an option is not specified for an assembly, the previous assembly's options are used if there is a previous assembly in the list. If either the \"/u\" or \"/uninstall\" option is specified, the assemblies are uninstalled. If the \"/?\" or \"/help\" option is provided, the help information is displayed to the console.  \n  \n [!code-cpp[TransactedInstaller#1](~/add/codesnippet/cpp/cbb5706c-5d1b-4a61-92b9-_1.cpp)]\n [!code-vb[TransactedInstaller#1](~/add/codesnippet/visualbasic/cbb5706c-5d1b-4a61-92b9-_1.vb)]\n [!code-cs[TransactedInstaller#1](~/add/codesnippet/csharp/cbb5706c-5d1b-4a61-92b9-_1.cs)]"
  syntax:
    content: public override void Uninstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> that contains the state of the computer after the installation completed."
  overload: System.Configuration.Install.TransactedInstaller.Uninstall*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Install.Installer
  isExternal: false
  name: System.Configuration.Install.Installer
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.Install.TransactedInstaller.#ctor
  parent: System.Configuration.Install.TransactedInstaller
  isExternal: false
  name: TransactedInstaller()
  nameWithType: TransactedInstaller.TransactedInstaller()
  fullName: System.Configuration.Install.TransactedInstaller.TransactedInstaller()
- uid: System.Configuration.Install.TransactedInstaller.Install(System.Collections.IDictionary)
  parent: System.Configuration.Install.TransactedInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: TransactedInstaller.Install(IDictionary)
  fullName: System.Configuration.Install.TransactedInstaller.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.TransactedInstaller.Uninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.TransactedInstaller
  isExternal: false
  name: Uninstall(IDictionary)
  nameWithType: TransactedInstaller.Uninstall(IDictionary)
  fullName: System.Configuration.Install.TransactedInstaller.Uninstall(IDictionary)
- uid: System.Configuration.Install.TransactedInstaller.#ctor*
  parent: System.Configuration.Install.TransactedInstaller
  isExternal: false
  name: TransactedInstaller
  nameWithType: TransactedInstaller.TransactedInstaller
- uid: System.Configuration.Install.TransactedInstaller.Install*
  parent: System.Configuration.Install.TransactedInstaller
  isExternal: false
  name: Install
  nameWithType: TransactedInstaller.Install
- uid: System.Configuration.Install.TransactedInstaller.Uninstall*
  parent: System.Configuration.Install.TransactedInstaller
  isExternal: false
  name: Uninstall
  nameWithType: TransactedInstaller.Uninstall
