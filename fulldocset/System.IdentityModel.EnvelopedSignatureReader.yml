### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.EnvelopedSignatureReader
  id: EnvelopedSignatureReader
  children:
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  - System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  - System.IdentityModel.EnvelopedSignatureReader.Read
  - System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  - System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  langs:
  - csharp
  name: EnvelopedSignatureReader
  nameWithType: EnvelopedSignatureReader
  fullName: System.IdentityModel.EnvelopedSignatureReader
  type: Class
  summary: "Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature. The signature is automatically validated when the last element of the envelope is read. This class cannot be inherited."
  syntax:
    content: 'public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader'
  inheritance:
  - System.Xml.XmlDictionaryReader
  - System.IdentityModel.DelegatingXmlDictionaryReader
  implements: []
  inheritedMembers:
  - System.IdentityModel.DelegatingXmlDictionaryReader.AttributeCount
  - System.IdentityModel.DelegatingXmlDictionaryReader.BaseURI
  - System.IdentityModel.DelegatingXmlDictionaryReader.Close
  - System.IdentityModel.DelegatingXmlDictionaryReader.Depth
  - System.IdentityModel.DelegatingXmlDictionaryReader.EOF
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.GetAttribute(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.HasValue
  - System.IdentityModel.DelegatingXmlDictionaryReader.InitializeInnerReader(System.Xml.XmlDictionaryReader)
  - System.IdentityModel.DelegatingXmlDictionaryReader.InnerReader
  - System.IdentityModel.DelegatingXmlDictionaryReader.IsDefault
  - System.IdentityModel.DelegatingXmlDictionaryReader.IsEmptyElement
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.Item(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.LocalName
  - System.IdentityModel.DelegatingXmlDictionaryReader.LookupNamespace(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToAttribute(System.String,System.String)
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToElement
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToFirstAttribute
  - System.IdentityModel.DelegatingXmlDictionaryReader.MoveToNextAttribute
  - System.IdentityModel.DelegatingXmlDictionaryReader.Name
  - System.IdentityModel.DelegatingXmlDictionaryReader.NamespaceURI
  - System.IdentityModel.DelegatingXmlDictionaryReader.NameTable
  - System.IdentityModel.DelegatingXmlDictionaryReader.NodeType
  - System.IdentityModel.DelegatingXmlDictionaryReader.Prefix
  - System.IdentityModel.DelegatingXmlDictionaryReader.QuoteChar
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadAttributeValue
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadContentAsUniqueId
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadState
  - System.IdentityModel.DelegatingXmlDictionaryReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.IdentityModel.DelegatingXmlDictionaryReader.ResolveEntity
  - System.IdentityModel.DelegatingXmlDictionaryReader.Value
  - System.IdentityModel.DelegatingXmlDictionaryReader.ValueType
  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlLang
  - System.IdentityModel.DelegatingXmlDictionaryReader.XmlSpace
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;></xref> class by using the specified reader and security token serializer."
  remarks: "The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |`signingTokenResolver`|`null`|   |`requireSignature`|`true`|   |`automaticallyReadSignature`|`true`|   |`resolveIntrinsicSigningKeys`|`true`|"
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A reader that is pointing to the enveloped signed XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "The token serializer to be used to deserialize the <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> of the signature."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;></xref> class by using the specified reader, security token serializer, and token resolver."
  remarks: "The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=fullName> constructor is invoked with the following additional parameters:      |Parameter Name|Value|   |--------------------|-----------|   |`requireSignature`|`true`|   |`automaticallyReadSignature`|`true`|   |`resolveIntrinsicSigningKeys`|`true`|"
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A reader that is pointing to the enveloped signed XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "The token serializer to be used to deserialize the <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> of the signature."
    - id: signingTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "The token resolver to be used to resolve the signing token. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> specifies that a default security token resolver should be used."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.EnvelopedSignatureReader&quot;></xref> class by using the specified reader, security token serializer, token resolver, and behavior."
  syntax:
    content: public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A reader that is pointing to the enveloped signed XML."
    - id: securityTokenSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "The token serializer to be used to deserialize the <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> of the signature."
    - id: signingTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "The token resolver to be used to resolve the signing token. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> specifies that a default security token resolver should be used."
    - id: requireSignature
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the signature is required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: automaticallyReadSignature
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the signature should be read; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: resolveIntrinsicSigningKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if intrinsic signing keys should be resolved; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "To be added."
  overload: System.IdentityModel.EnvelopedSignatureReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.Read
  id: Read
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: Read()
  nameWithType: EnvelopedSignatureReader.Read()
  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Reads the next node from the stream."
  remarks: "Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor. If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor."
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the next node was read successfully; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if there are no more nodes."
  overload: System.IdentityModel.EnvelopedSignatureReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated."
  syntax:
    content: public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "The signing credentials."
  overload: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  id: TryReadSignature
  parent: System.IdentityModel.EnvelopedSignatureReader
  langs:
  - csharp
  name: TryReadSignature()
  nameWithType: EnvelopedSignatureReader.TryReadSignature()
  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Reads the signature if the reader is currently positioned at a <xref uid=&quot;langword_csharp_&lt;Signature&gt;&quot; name=&quot;&lt;Signature&gt;&quot; href=&quot;&quot;></xref> element."
  remarks: "If the reader is currently positioned on a `<Signature>` element, invokes the <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>method to read the signature."
  syntax:
    content: public bool TryReadSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the signature was successfully read; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.DelegatingXmlDictionaryReader
  isExternal: false
  name: System.IdentityModel.DelegatingXmlDictionaryReader
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.EnvelopedSignatureReader(XmlReader,SecurityTokenSerializer,SecurityTokenResolver,Boolean,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EnvelopedSignatureReader.Dispose(Boolean)
  fullName: System.IdentityModel.EnvelopedSignatureReader.Dispose(Boolean)
- uid: System.IdentityModel.EnvelopedSignatureReader.Read
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Read()
  nameWithType: EnvelopedSignatureReader.Read()
  fullName: System.IdentityModel.EnvelopedSignatureReader.Read()
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
  fullName: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: TryReadSignature()
  nameWithType: EnvelopedSignatureReader.TryReadSignature()
  fullName: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature()
- uid: System.IdentityModel.EnvelopedSignatureReader.#ctor*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: EnvelopedSignatureReader
  nameWithType: EnvelopedSignatureReader.EnvelopedSignatureReader
- uid: System.IdentityModel.EnvelopedSignatureReader.Dispose*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Dispose
  nameWithType: EnvelopedSignatureReader.Dispose
- uid: System.IdentityModel.EnvelopedSignatureReader.Read*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: Read
  nameWithType: EnvelopedSignatureReader.Read
- uid: System.IdentityModel.EnvelopedSignatureReader.SigningCredentials*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: SigningCredentials
  nameWithType: EnvelopedSignatureReader.SigningCredentials
- uid: System.IdentityModel.EnvelopedSignatureReader.TryReadSignature*
  parent: System.IdentityModel.EnvelopedSignatureReader
  isExternal: false
  name: TryReadSignature
  nameWithType: EnvelopedSignatureReader.TryReadSignature
