### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.TransactionMessageProperty
  id: TransactionMessageProperty
  children:
  - System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  langs:
  - csharp
  name: TransactionMessageProperty
  nameWithType: TransactionMessageProperty
  fullName: System.ServiceModel.Channels.TransactionMessageProperty
  type: Class
  summary: "Allows a custom channel, which uses a proprietary transaction flow mechanism, to inject its transaction into the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] framework. This class cannot be inherited."
  remarks: "This class allows third-party channel developers who use a proprietary transaction flow mechanism for their channel, to introduce their transaction into the ServiceModel framework. The transaction is then used when executing the service method. This mechanism cannot be used in conjunction with the <xref:System.ServiceModel.TransactionFlowAttribute>."
  syntax:
    content: public sealed class TransactionMessageProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  id: Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Sets the transaction that will be used when executing the service method."
  remarks: "A custom incoming channel (which is part of a serviceâ€™s channel stack) can call this method to add a <xref:System.ServiceModel.Channels.TransactionMessageProperty>, containing the `transaction` parameter, to the `Properties` collection of the `message` parameter. This prompts the infrastructure to create a <xref:System.Transactions.TransactionScope> instance using the transaction passed in, before calling the service method requested in the incoming message. The service method must have the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property set to `true`."
  syntax:
    content: public static void Set (System.Transactions.Transaction transaction, System.ServiceModel.Channels.Message message);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "The transaction that will be used when executing the service method."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The incoming message that results in calling the service method."
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  exceptions:
  - type: System.ServiceModel.FaultException
    commentId: T:System.ServiceModel.FaultException
    description: "The property has already been set on <code>message</code>."
  - type: System.Transactions.TransactionException
    commentId: T:System.Transactions.TransactionException
    description: "<code>transaction</code> needs to be unmarshaled, and that operation fails."
  platform:
  - net462
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  id: Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  langs:
  - csharp
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets the transaction that will be used when executing the service method."
  syntax:
    content: public System.Transactions.Transaction Transaction { get; }
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;></xref> instance that will be used when executing the service method."
  overload: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.FaultException
  isExternal: true
  name: System.ServiceModel.FaultException
- uid: System.Transactions.TransactionException
  parent: System.Transactions
  isExternal: false
  name: TransactionException
  nameWithType: TransactionException
  fullName: System.Transactions.TransactionException
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set(Transaction,Message)
  nameWithType: TransactionMessageProperty.Set(Transaction,Message)
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Set(Transaction,Message)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
  fullName: System.ServiceModel.Channels.TransactionMessageProperty.Transaction
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Set*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Set
  nameWithType: TransactionMessageProperty.Set
- uid: System.ServiceModel.Channels.TransactionMessageProperty.Transaction*
  parent: System.ServiceModel.Channels.TransactionMessageProperty
  isExternal: false
  name: Transaction
  nameWithType: TransactionMessageProperty.Transaction
