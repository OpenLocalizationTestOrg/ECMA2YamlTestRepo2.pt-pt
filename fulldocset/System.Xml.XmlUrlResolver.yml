### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlUrlResolver
  id: XmlUrlResolver
  children:
  - System.Xml.XmlUrlResolver.#ctor
  - System.Xml.XmlUrlResolver.CachePolicy
  - System.Xml.XmlUrlResolver.Credentials
  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.Proxy
  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver
  fullName: System.Xml.XmlUrlResolver
  type: Class
  summary: "Resolves external XML resources named by a Uniform Resource Identifier (URI)."
  remarks: "XmlUrlResolver is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas. It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.       XmlUrlResolver is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest> class.      > [!IMPORTANT] >  XmlUrlResolver objects can contain sensitive information such as user credentials. You should be careful when you cache XmlUrlResolver objects and should not pass XmlUrlResolver objects to an untrusted component.      ## Resolving DTDs    If an XML reader (<xref:System.Xml.XmlReader>) is reading an XML file that contains an external DTD, it calls the <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> method to get a stream representation of the DTD. If the URI of the DTD is a relative URI, the XML reader calls the <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> method and returns an absolute URI for the given `relativeUri` and `baseURi` parameters. If the XmlUrlResolver doesn&quot;t know how to resolve the URI, it returns `null`.       The <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method uses the information in the <xref:System.Xml.XmlUrlResolver.Credentials%2A> property as appropriate to gain access to the resource. There is no `get` accessor to this property for security reasons. When overwriting <xref:System.Xml.XmlResolver>, **GetEntity** is the method that utilizes the credential information in the **Credentials** property.       Resolving all other XML resources is very similar to resolving DTDs. <xref:System.Xml.XmlResolver> negotiates the connection with the external resource and returns a <xref:System.IO.Stream> representation of the content. The object that is making the call to <xref:System.Xml.XmlResolver> interprets the stream.      ## Extending the XmlUrlResolver class    The default behavior of the XmlUrlResolver class is to resolve an XML data resource from its source, not from cache. In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource&quot;s server. The performance gains here must be weighed against the need for up-to-date content.       The following example extends XmlUrlResolver and builds a new class, `XmlCachingResolver`, to retrieve resources from the cache. This is done by overriding the <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> property and the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method.       [!code-vb[XmlCachingResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)]  [!code-cs[XmlCachingResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs)]       The caching behavior of the `XmlCachingResolver` class is implemented in the `GetEntity` method. This is done by creating new <xref:System.Net.WebRequest> and <xref:System.Net.Cache.HttpRequestCachePolicy> objects. The <xref:System.Net.Cache.HttpRequestCachePolicy> object is created using the <xref:System.Net.Cache.HttpRequestCacheLevel> member of the <xref:System.Net.Cache.HttpRequestCacheLevel> enumeration.       The <xref:System.Net.WebRequest.CachePolicy%2A> property of the <xref:System.Net.WebRequest> object is set with the <xref:System.Net.Cache.HttpRequestCachePolicy> object.       An instance of the `XmlCachingResolver` class is created with the `Boolean``enableHttpCaching`. When this value is set to `true`, the instance resolves a resource from the default cache if possible. When `enableHttpCaching` is set to `false`, the instance uses the default behavior and resolves resources from their source.      > [!NOTE] >  This example leverages the extensibility of the XML classes in the .NET Framework. Other classes can be extended and customized to suit the needs of a particular application."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> that uses an XmlUrlResolver with default credentials.  \n  \n [!code-vb[XmlResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_2.vb)]\n [!code-cs[XmlResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_2.cs)]"
  syntax:
    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.XmlUrlResolver&quot;></xref> class."
  syntax:
    content: public XmlUrlResolver ();
    parameters: []
  overload: System.Xml.XmlUrlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.CachePolicy
  id: CachePolicy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the cache policy for the underlying <xref:System.Net.WebRequest> object."
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "The cache policy for the underlying web request."
  overload: System.Xml.XmlUrlResolver.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Sets credentials used to authenticate web requests."
  remarks: "If the virtual directory does not require authentication, this property does not need to be set. Otherwise, the credentials of the user must be supplied.       You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.       The following C# code shows how to set the Credentials property to a credential cache.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \n  \n [!code-vb[XmlResolver_Samples#2](~/add/codesnippet/visualbasic/p-system.xml.xmlurlresol_1.vb)]\n [!code-cs[XmlResolver_Samples#2](~/add/codesnippet/csharp/p-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "The credentials to be used to authenticate web requests. If this property is not set, the value defaults to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; that is, the <xref uid=&quot;langword_csharp_XmlUrlResolver&quot; name=&quot;XmlUrlResolver&quot; href=&quot;&quot;></xref> has no user credentials."
  overload: System.Xml.XmlUrlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Maps a URI to an object that contains the actual resource."
  remarks: "This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.       For the asynchronous version of this method, see <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.      > [!IMPORTANT] >  Your application can mitigate memory denial of service threats to the GetEntity method by implementing IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> to limit the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method."
  example:
  - "The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \n  \n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlurlresol_1.vb)]\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/cpp/m-system.xml.xmlurlresol_1.cpp)]\n [!code-cs[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/csharp/m-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>."
    - id: role
      type: System.String
      description: "Currently not used."
    - id: ofObjectToReturn
      type: System.Type
      description: "The type of object to return. The current implementation only returns <xref:System.IO.Stream> objects."
    return:
      type: System.Object
      description: "A stream object or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if a type other than stream is specified."
  overload: System.Xml.XmlUrlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code> is neither <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> nor a <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;></xref> type."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "The specified URI is not an absolute URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "There is a runtime error (for example, an interrupted server connection)."
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynchronously maps a URI to an object that contains the actual resource."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "The URI returned from <xref:System.Xml.XmlResolver.ResolveUri*>."
    - id: role
      type: System.String
      description: "Currently not used."
    - id: ofObjectToReturn
      type: System.Type
      description: "The type of object to return. The current implementation only returns <xref:System.IO.Stream> objects."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "A stream object or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if a type other than stream is specified."
  overload: System.Xml.XmlUrlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Proxy
  id: Proxy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the network proxy for the underlying <xref:System.Net.WebRequest> object."
  syntax:
    content: public System.Net.IWebProxy Proxy { set; }
    return:
      type: System.Net.IWebProxy
      description: "The <xref:System.Net.IWebProxy> to use to access the Internet resource."
  overload: System.Xml.XmlUrlResolver.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Resolves the absolute URI from the base and relative URIs."
  remarks: "The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "The base URI used to resolve the relative URI."
    - id: relativeUri
      type: System.String
      description: "The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the `baseUri` value. If relative, it combines with the `baseUri` to make an absolute URI."
    return:
      type: System.Uri
      description: "The absolute URI, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the relative URI cannot be resolved."
  overload: System.Xml.XmlUrlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>relativeUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.XmlUrlResolver.#ctor
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
- uid: System.Xml.XmlUrlResolver.CachePolicy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlUrlResolver.Proxy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlUrlResolver.#ctor*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver.XmlUrlResolver
- uid: System.Xml.XmlUrlResolver.CachePolicy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
- uid: System.Xml.XmlUrlResolver.GetEntity*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlUrlResolver.GetEntity
- uid: System.Xml.XmlUrlResolver.GetEntityAsync*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlUrlResolver.GetEntityAsync
- uid: System.Xml.XmlUrlResolver.Proxy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
- uid: System.Xml.XmlUrlResolver.ResolveUri*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlUrlResolver.ResolveUri
