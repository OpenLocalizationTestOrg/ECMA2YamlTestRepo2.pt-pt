### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlUrlResolver
  id: XmlUrlResolver
  children:
  - System.Xml.XmlUrlResolver.#ctor
  - System.Xml.XmlUrlResolver.CachePolicy
  - System.Xml.XmlUrlResolver.Credentials
  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.Proxy
  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver
  fullName: System.Xml.XmlUrlResolver
  type: Class
  summary: "Resolve recursos externos de XML com o nome por um Uniform Resource Identifier (URI)."
  remarks: "XmlUrlResolver é utilizado para resolver externos XML recursos, tais como entidades, definições de tipo de documento (DTDs) ou de esquemas. Também é utilizado para processo incluem e importar elementos encontrados nas folhas de estilos de idiomas de folha de estilos extensível (XSL) ou esquemas de idioma (XSD) de definição de esquema XML.       XmlUrlResolver é o resolvedor predefinido para todas as classes no <xref:System.Xml>espaço de nomes.</xref:System.Xml> Suporta o `file://` e `http://` protocolos e pedidos da <xref:System.Net.WebRequest>classe.</xref:System.Net.WebRequest>      > [!IMPORTANT] > XmlUrlResolver objetos podem conter informações confidenciais, tais como as credenciais do utilizador. Deve ter cuidado quando XmlUrlResolver objetos da cache e não deverá passar XmlUrlResolver objetos para um componente não fidedigno.      ## Resolver DTDs se um leitor de XML (<xref:System.Xml.XmlReader>) está a ler um ficheiro XML que contém um DTD externo, aquele invoca o <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName>método para obter uma representação de fluxo do DTD.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Se o URI do DTD é um URI relativo, chama o leitor de XML a <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName>método e devolve um URI absoluto para a determinada `relativeUri` e `baseURi` parâmetros.</xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> Se o XmlUrlResolver não sabe como resolver o URI, devolve `null`.       O <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>método utiliza as informações de <xref:System.Xml.XmlUrlResolver.Credentials%2A>propriedade conforme adequado para obter acesso ao recurso.</xref:System.Xml.XmlUrlResolver.Credentials%2A> </xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> Não existe nenhum `get` acessor para esta propriedade por motivos de segurança. Quando substituir <xref:System.Xml.XmlResolver>, **GetEntity** é o método que utiliza as informações de credenciais no **credenciais** propriedade.</xref:System.Xml.XmlResolver>       Resolver todos os outros recursos XML é muito semelhante à DTDs de resolução. <xref:System.Xml.XmlResolver>negoceia a ligação com o recurso externa e devolve um <xref:System.IO.Stream>representação do conteúdo.</xref:System.IO.Stream></xref:System.Xml.XmlResolver> O objeto que está a efetuar a chamada para <xref:System.Xml.XmlResolver>interpreta o fluxo.</xref:System.Xml.XmlResolver>      ## Expandir a classe de XmlUrlResolver o comportamento predefinido da classe XmlUrlResolver é para resolver um recurso de dados XML a partir da respetiva origem, não a partir da cache. Em alguns casos, resolver um recurso de dados da cache pode melhorar o desempenho de uma aplicação ao guardar uma viagem servidor o recurso de dados. Os ganhos de desempenho aqui tem de ser weighed contra a necessidade de conteúdo atualizado.       O exemplo seguinte expande XmlUrlResolver e cria uma nova classe, `XmlCachingResolver`, para obter recursos da cache. Isto é feito através da substituição de <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>propriedade e o <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>método.</xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>       [!code-vb[XmlCachingResolver_ex n. º&1;](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)][!code-cs[XmlCachingResolver_ex n. º&1;](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs) ] o comportamento da colocação em cache o `XmlCachingResolver` classe está implementada a `GetEntity` método.   Isto é feito através da criação de novos <xref:System.Net.WebRequest>e <xref:System.Net.Cache.HttpRequestCachePolicy>objetos.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> O <xref:System.Net.Cache.HttpRequestCachePolicy>objeto é criado utilizando o <xref:System.Net.Cache.HttpRequestCacheLevel>Membro o <xref:System.Net.Cache.HttpRequestCacheLevel>enumeração.</xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCachePolicy>       O <xref:System.Net.WebRequest.CachePolicy%2A>propriedade o <xref:System.Net.WebRequest>objeto está definido com o <xref:System.Net.Cache.HttpRequestCachePolicy>objeto.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A>       Uma instância do `XmlCachingResolver` classe é criada com o `Boolean``enableHttpCaching`. Quando este valor é definido como `true`, a instância resolve um recurso da cache de predefinição se possível. Quando `enableHttpCaching` está definido como `false`, a instância utiliza o comportamento predefinido e resolve os recursos da sua origem.      > [!NOTE] > Este exemplo utiliza a extensibilidade das classes XML no .NET Framework. Outras classes podem ser expandidos e personalizadas para necessidades de uma aplicação específica."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> that uses an XmlUrlResolver with default credentials.  \n  \n [!code-vb[XmlResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_2.vb)]\n [!code-cs[XmlResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_2.cs)]"
  syntax:
    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> classe."
  syntax:
    content: public XmlUrlResolver ();
    parameters: []
  overload: System.Xml.XmlUrlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.CachePolicy
  id: CachePolicy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define a política de cache para subjacentes <xref:System.Net.WebRequest>objeto.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "A política de cache para o pedido web subjacente."
  overload: System.Xml.XmlUrlResolver.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Define as credenciais utilizadas para autenticar pedidos web."
  remarks: "Se o diretório virtual não necessitar de autenticação, esta propriedade não tem de ser definida. Caso contrário, é necessário fornecer as credenciais do utilizador.       Pode associar credenciais diferentes URIs diferente e adicione-a uma cache. Em seguida, pode utilizar as credenciais para verificar a autenticação para diferentes URIs, independentemente da origem original do XML.       O código do c# seguinte mostra como definir a propriedade de credenciais para uma cache de credenciais.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \n  \n [!code-vb[XmlResolver_Samples#2](~/add/codesnippet/visualbasic/p-system.xml.xmlurlresol_1.vb)]\n [!code-cs[XmlResolver_Samples#2](~/add/codesnippet/csharp/p-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "As credenciais para ser utilizado para autenticar pedidos web. Se esta propriedade não for definida, o valor será assumida a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; ou seja, o <xref uid=&quot;langword_csharp_XmlUrlResolver&quot; name=&quot;XmlUrlResolver&quot; href=&quot;&quot;> </xref> tenha sem credenciais de utilizador."
  overload: System.Xml.XmlUrlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Mapeia um URI para um objeto que contém o recurso real."
  remarks: "Este método é utilizado quando o autor da chamada pretende mapear um URI indicado como um objeto que contém o recurso que representa o URI.       Para a versão assíncrona deste método, consulte <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > A aplicação pode mitigar memória denial-of-ameaças de serviço para o método GetEntity através da implementação de IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> para limitar o número de bytes lidos.</xref:System.Runtime.InteropServices.ComTypes.IStream> Isto ajuda a proteger contra situações em que tenta transmitir um fluxo de bytes infinito para o método de GetEntity código malicioso."
  example:
  - "The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \n  \n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlurlresol_1.vb)]\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/cpp/m-system.xml.xmlurlresol_1.cpp)]\n [!code-cs[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/csharp/m-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI devolvido de <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não utilizado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto para devolver. A implementação atual só devolve <xref:System.IO.Stream>objetos.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Um objeto de fluxo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for especificado um tipo diferente de fluxo."
  overload: System.Xml.XmlUrlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>é nenhum dos dois <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nem um <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> tipo."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O URI especificado não é um URI absoluto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Não há um erro de tempo de execução (por exemplo, uma ligação ao servidor interrompido)."
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "No modo assíncrono mapeia um URI para um objeto que contém o recurso real."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "O URI devolvido de <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Atualmente não utilizado."
    - id: ofObjectToReturn
      type: System.Type
      description: "O tipo de objeto para devolver. A implementação atual só devolve <xref:System.IO.Stream>objetos.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Um objeto de fluxo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for especificado um tipo diferente de fluxo."
  overload: System.Xml.XmlUrlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Proxy
  id: Proxy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define o proxy de rede para subjacentes <xref:System.Net.WebRequest>objeto.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.IWebProxy Proxy { set; }
    return:
      type: System.Net.IWebProxy
      description: "O <xref:System.Net.IWebProxy>a utilizar para aceder ao recurso de Internet.</xref:System.Net.IWebProxy>"
  overload: System.Xml.XmlUrlResolver.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Resolve o URI absoluto de URIs de base e relativo."
  remarks: "O URI absoluto pode ser utilizado como o URI base para todos os pedidos subsequentes para entidades que relativa a este URI."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "O URI base utilizado para resolver o URI relativo."
    - id: relativeUri
      type: System.String
      description: "O URI para resolver. O URI pode ser absoluto ou relativo. Se absoluto, este valor eficazmente substitui o `baseUri` valor. Se relativo, combina com o `baseUri` para tornar um URI absoluto."
    return:
      type: System.Uri
      description: "O URI absoluto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o URI relativo não é possível resolver."
  overload: System.Xml.XmlUrlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>relativeUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.XmlUrlResolver.#ctor
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
- uid: System.Xml.XmlUrlResolver.CachePolicy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlUrlResolver.Proxy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlUrlResolver.#ctor*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver.XmlUrlResolver
- uid: System.Xml.XmlUrlResolver.CachePolicy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
- uid: System.Xml.XmlUrlResolver.GetEntity*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlUrlResolver.GetEntity
- uid: System.Xml.XmlUrlResolver.GetEntityAsync*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlUrlResolver.GetEntityAsync
- uid: System.Xml.XmlUrlResolver.Proxy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
- uid: System.Xml.XmlUrlResolver.ResolveUri*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlUrlResolver.ResolveUri
