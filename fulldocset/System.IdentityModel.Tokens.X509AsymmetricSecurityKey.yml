### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  id: X509AsymmetricSecurityKey
  children:
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  langs:
  - csharp
  name: X509AsymmetricSecurityKey
  nameWithType: X509AsymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  type: Class
  summary: "Representa uma chave assimétrica para certificados x.&509;."
  syntax:
    content: 'public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKey
  - System.IdentityModel.Tokens.AsymmetricSecurityKey
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: X509AsymmetricSecurityKey(X509Certificate2)
  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.X509AsymmetricSecurityKey&quot;> </xref> classe utilizando o certificado x.&509; especificado."
  syntax:
    content: public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que representa o certificado x.&509;."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  id: DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: DecryptKey(String,Byte[])
  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Desencriptar a chave encriptada especificada utilizando o algoritmo de encriptação especificado."
  remarks: "Utilize o <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>ou <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>campos para especificar o algoritmo.</xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> </xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>"
  syntax:
    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo criptográfico para desencriptar a chave."
    - id: keyData
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém a chave encriptada.</xref:System.Byte>"
    return:
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém a chave desencriptada.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O certificado x.&509; especificado no construtor não tem uma chave privada.       - ou - x.&509; do certificado tem uma chave privada, mas não foi gerado utilizando o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo.       - ou - x.&509; do certificado tem uma chave privada, foi gerado utilizando o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo, mas o <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*>propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm*>       - ou - <code> algorithm </code> parâmetro não é suportado. Os algoritmos suportados são <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&quot;> </xref> e <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  id: EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: EncryptKey(String,Byte[])
  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Encripta a chave encriptada especificada utilizando o algoritmo de encriptação especificado."
  remarks: "Utilize o <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>ou <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>campos para especificar o algoritmo.</xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> </xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>"
  syntax:
    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo criptográfico para encriptar a chave."
    - id: keyData
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém a chave para encriptar.</xref:System.Byte>"
    return:
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém a chave encriptada.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O certificado x.&509; especificado no construtor tem uma chave pública que não foi gerada utilizando o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmo.       - ou - <code> algorithm </code> parâmetro não é suportado. Os algoritmos suportados são <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&quot;> </xref> e <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  id: GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetAsymmetricAlgorithm(String,Boolean)
  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém os algoritmos criptográficos assimétricos especificado."
  remarks: "Utilize o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>campos para especificar o `algorithm` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> </xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> </xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>"
  syntax:
    content: public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo assimétrico a criar."
    - id: privateKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando uma chave privada é necessário para criar o algoritmo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Um <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> que representa os algoritmos criptográficos assimétricos especificado."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>privateKey</code>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e o certificado x.&509; especificado no construtor não tem uma chave privada.       - ou - <code>algorithm</code> é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref> e a chave pública ou privada do certificado x.&509; especificado no construtor não é do tipo <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>.       - ou - <code>algorithm</code> é <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref> ou <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref> e a chave pública ou privada do certificado x.&509; especificado no construtor não é do tipo <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>.       - ou - <code>algorithm</code> não é suportada. The supported algorithms are <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;></xref>, <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&quot;></xref>, <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&quot;></xref>, <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;></xref>, and <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  id: GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetHashAlgorithmForSignature(String)
  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um algoritmo criptográfico que gera um hash para uma assinatura digital."
  remarks: "Utilize o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>campos para especificar o `algorithm` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>"
  syntax:
    content: public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo de hash."
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> que gera hashes para assinaturas digitais."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>algorithm</code>Não é suportada. Os algoritmos suportados são <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref>, e <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  id: GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetSignatureDeformatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o algoritmo de Desativação formatador de assinatura digital."
  remarks: "Utilize o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>campos para especificar o `algorithm` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>"
  syntax:
    content: public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo de Desativação formatador para a assinatura digital obter uma instância de."
    return:
      type: System.Security.Cryptography.AsymmetricSignatureDeformatter
      description: "Um <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;> </xref> que representa o algoritmo de Desativação formatador para a assinatura digital."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>algorithm</code>é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref> e a chave pública do certificado x.&509; especificado no construtor não é do tipo <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>.       - ou - <code>algorithm</code> é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref> ou <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref> e a chave pública do certificado x.&509; especificado no construtor não é do tipo <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>.       - ou - <code>algorithm</code> não é suportada. Os algoritmos suportados são <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref>, e <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  id: GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetSignatureFormatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o algoritmo de formatador de assinatura digital."
  remarks: "Utilize o <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>campos para especificar o `algorithm` parâmetro.</xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>"
  syntax:
    content: public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo de formatador para a assinatura digital obter uma instância de."
    return:
      type: System.Security.Cryptography.AsymmetricSignatureFormatter
      description: "Um <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureDeformatter&quot;> </xref> que representa o algoritmo de formatador para a assinatura digital."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O certificado x.&509; especificado no construtor não tem uma chave privada.       - ou - <code> algorithm </code> é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref> e a chave privada do certificado x.&509; especificado no construtor não é do tipo <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>.       - ou - <code> algorithm </code> é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref> ou <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref> e a chave privada do certificado x.&509; especificado no construtor não é do tipo <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>.       - ou - <code> algorithm </code> não é suportada. Os algoritmos suportados são <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref>, e <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  id: HasPrivateKey
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: HasPrivateKey()
  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se a chave privada é uma disponível."
  syntax:
    content: public override bool HasPrivateKey ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando estiver disponível; a chave privada caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  id: IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: IsAsymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se o algoritmo especificado utiliza chaves assimétricas."
  syntax:
    content: public override bool IsAsymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo criptográfico."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when the specified algorithm is <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap&quot;></xref>, or <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  id: IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: IsSupportedAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se o algoritmo especificado é suportado por esta classe."
  remarks: "O método IsSupportedAlgorithm devolve `true` quando uma das seguintes opções for verdadeira: - `algorithm` é o parâmetro <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>e a chave pública do certificado x.&509; especificado no construtor é do tipo <xref:System.Security.Cryptography.DSA>.</xref:System.Security.Cryptography.DSA> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>      -O `algorithm` parâmetro é <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url>ou <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature>e a chave pública do certificado x.&509; especificado no construtor do tipo <xref:System.Security.Cryptography.RSA>.</xref:System.Security.Cryptography.RSA> </xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> </xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> </xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>"
  syntax:
    content: public override bool IsSupportedAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo criptográfico."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando o algoritmo especificado é <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&quot;> </xref>, <xref href=&quot;System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&quot;> </xref>, ou <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&quot;> </xref> e a chave pública é do tipo correcto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Consulte as observações para obter mais detalhes."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  id: IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: IsSymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se o algoritmo especificado utiliza chaves simétricas."
  syntax:
    content: public override bool IsSymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "O algoritmo criptográfico."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when the specified algorithm is <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap&quot;></xref>, or <xref href=&quot;System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  id: KeySize
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: KeySize
  nameWithType: X509AsymmetricSecurityKey.KeySize
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém o tamanho, em bits e da chave pública associado ao certificado x.&509;."
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: "O tamanho, em bits e da chave pública associado ao certificado x.&509;."
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey
  isExternal: false
  name: System.IdentityModel.Tokens.AsymmetricSecurityKey
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: X509AsymmetricSecurityKey(X509Certificate2)
  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: DecryptKey(String,Byte[])
  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: EncryptKey(String,Byte[])
  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(String,Byte[])
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm(String,Boolean)
  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String,Boolean)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature(String)
  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureDeformatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureFormatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: HasPrivateKey()
  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey()
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsAsymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSupportedAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: KeySize
  nameWithType: X509AsymmetricSecurityKey.KeySize
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: X509AsymmetricSecurityKey
  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: DecryptKey
  nameWithType: X509AsymmetricSecurityKey.DecryptKey
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: EncryptKey
  nameWithType: X509AsymmetricSecurityKey.EncryptKey
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm
  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature
  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureDeformatter
  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureFormatter
  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsAsymmetricAlgorithm
  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSupportedAlgorithm
  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSymmetricAlgorithm
  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: KeySize
  nameWithType: X509AsymmetricSecurityKey.KeySize
