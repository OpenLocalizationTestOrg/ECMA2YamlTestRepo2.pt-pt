### YamlMime:ManagedReference
items:
- uid: System.Net.Http.MultipartContent
  id: MultipartContent
  children:
  - System.Net.Http.MultipartContent.#ctor
  - System.Net.Http.MultipartContent.#ctor(System.String)
  - System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  - System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  - System.Net.Http.MultipartContent.Dispose(System.Boolean)
  - System.Net.Http.MultipartContent.GetEnumerator
  - System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: MultipartContent
  nameWithType: MultipartContent
  fullName: System.Net.Http.MultipartContent
  type: Class
  summary: "Fornece uma coleção de <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objetos obterem serializados utilizando o multipart / * especificação do tipo de conteúdo."
  syntax:
    content: 'public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements:
  - System.Collections.Generic.IEnumerable<System.Net.Http.HttpContent>
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor
  id: '#ctor'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> classe."
  syntax:
    content: public MultipartContent ();
    parameters: []
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> classe."
  syntax:
    content: public MultipartContent (string subtype);
    parameters:
    - id: subtype
      type: System.String
      description: "O subtipo do conteúdo com várias partes."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> subtype </code> foi <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou contém apenas carateres de espaço em branco."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Cria uma nova instância do <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> classe."
  syntax:
    content: public MultipartContent (string subtype, string boundary);
    parameters:
    - id: subtype
      type: System.String
      description: "O subtipo do conteúdo com várias partes."
    - id: boundary
      type: System.String
      description: "A cadeia de limites para o conteúdo com várias partes."
  overload: System.Net.Http.MultipartContent.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> subtype </code> foi <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia.       O <code> boundary </code> foi <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou contém apenas carateres de espaço em branco.       - ou - <code> boundary </code> termina com um caráter de espaço."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O comprimento do <code> boundary </code> foi superior a 70."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  id: Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Adicionar conteúdo HTTP com várias partes para uma coleção de <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objetos obterem serializados utilizando o multipart / * especificação do tipo de conteúdo."
  syntax:
    content: public virtual void Add (System.Net.Http.HttpContent content);
    parameters:
    - id: content
      type: System.Net.Http.HttpContent
      description: "O conteúdo HTTP para adicionar à coleção."
  overload: System.Net.Http.MultipartContent.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Net.Http.MultipartContent&quot;> </xref> e opcionalmente disposes dos recursos geridos."
  remarks: "Este método é denominado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`. Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.Net.Http.MultipartContent>referências.</xref:System.Net.Http.MultipartContent></xref:System.Object.Finalize%2A> Este método invoca o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> às versões apenas não gerido recursos."
  overload: System.Net.Http.MultipartContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Devolve um enumerador que itera através da coleção de <xref href=&quot;System.Net.Http.HttpContent&quot;> </xref> objetos obterem serializados utilizando o multipart / * especificação do tipo de conteúdo..."
  remarks: "A instrução de foreach da linguagem c# (para cada um em Visual Basic) oculta a complexidade dos enumeradores. Por conseguinte, foreach é recomendável utilizar em vez de manipular diretamente o enumerador.       Enumeradores podem ser utilizados para ler os dados da coleção, mas não pode ser utilizados para modificar a colecção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento da coleção."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
      description: "Um objeto que pode ser utilizado para iterar através da coleção."
  overload: System.Net.Http.MultipartContent.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Serializar o conteúdo com várias partes de HTTP para um fluxo como uma operação assíncrona."
  remarks: "Não irá impedir que esta operação. O devolvido <xref:System.Threading.Tasks.Task%601>objeto será concluída após todo o conteúdo tenha sido serializado no fluxo de destino.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de destino."
    - id: context
      type: System.Net.TransportContext
      description: "Informações sobre o transporte (por exemplo o token de enlace de canal). Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A implementação de explícita a <xref:System.Net.Http.MultipartContent.GetEnumerator*>método.</xref:System.Net.Http.MultipartContent.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um objeto que pode ser utilizado para iterar através da coleção."
  overload: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Determina se o conteúdo de várias partes de HTTP tem um comprimento válido em bytes."
  remarks: "O método TryComputeLength proporciona a capacidade para calcular o comprimento do conteúdo de conteúdo com várias partes de HTTP. Isto é útil para tipos de conteúdo que são possível calcular facilmente o comprimento do conteúdo. Se o comprimento do conteúdo não é possível ou dispendioso (precisaria a memória intermédia o conteúdo todo onde a serialização deverá ser caro ou exigir que o sistema para atribuir uma grande quantidade de memória do sistema) de informática, este método pode devolver `false`. Se este método devolve `false`, isto implica que partes de transferência seja necessária ou o conteúdo deve obter colocado na memória intermédia antes de a ser enviados para o servidor."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "Comprimento do conteúdo HHTP em bytes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> length </code> é um comprimento válido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.MultipartContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.MultipartContent.#ctor
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent()
  nameWithType: MultipartContent.MultipartContent()
  fullName: System.Net.Http.MultipartContent.MultipartContent()
- uid: System.Net.Http.MultipartContent.#ctor(System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String)
  nameWithType: MultipartContent.MultipartContent(String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.MultipartContent.#ctor(System.String,System.String)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent(String,String)
  nameWithType: MultipartContent.MultipartContent(String,String)
  fullName: System.Net.Http.MultipartContent.MultipartContent(String,String)
- uid: System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add(HttpContent)
  nameWithType: MultipartContent.Add(HttpContent)
  fullName: System.Net.Http.MultipartContent.Add(HttpContent)
- uid: System.Net.Http.MultipartContent.Dispose(System.Boolean)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MultipartContent.Dispose(Boolean)
  fullName: System.Net.Http.MultipartContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.MultipartContent.GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator()
  nameWithType: MultipartContent.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Net.Http.HttpContent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<HttpContent>
  nameWithType: IEnumerator<HttpContent>
  fullName: System.Collections.Generic.IEnumerator<System.Net.Http.HttpContent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Net.Http.HttpContent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpContent
    name: HttpContent
    nameWithType: HttpContent
    fullName: HttpContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.MultipartContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.MultipartContent.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: MultipartContent.TryComputeLength(Int64)
  fullName: System.Net.Http.MultipartContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.MultipartContent.#ctor*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: MultipartContent
  nameWithType: MultipartContent.MultipartContent
- uid: System.Net.Http.MultipartContent.Add*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Add
  nameWithType: MultipartContent.Add
- uid: System.Net.Http.MultipartContent.Dispose*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: Dispose
  nameWithType: MultipartContent.Dispose
- uid: System.Net.Http.MultipartContent.GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: GetEnumerator
  nameWithType: MultipartContent.GetEnumerator
- uid: System.Net.Http.MultipartContent.SerializeToStreamAsync*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: MultipartContent.SerializeToStreamAsync
- uid: System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: MultipartContent.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.MultipartContent.TryComputeLength*
  parent: System.Net.Http.MultipartContent
  isExternal: false
  name: TryComputeLength
  nameWithType: MultipartContent.TryComputeLength
