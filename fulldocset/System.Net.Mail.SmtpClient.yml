### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.SmtpClient
  id: SmtpClient
  children:
  - System.Net.Mail.SmtpClient.#ctor
  - System.Net.Mail.SmtpClient.#ctor(System.String)
  - System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  - System.Net.Mail.SmtpClient.ClientCertificates
  - System.Net.Mail.SmtpClient.Credentials
  - System.Net.Mail.SmtpClient.DeliveryFormat
  - System.Net.Mail.SmtpClient.DeliveryMethod
  - System.Net.Mail.SmtpClient.Dispose
  - System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  - System.Net.Mail.SmtpClient.EnableSsl
  - System.Net.Mail.SmtpClient.Host
  - System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Net.Mail.SmtpClient.PickupDirectoryLocation
  - System.Net.Mail.SmtpClient.Port
  - System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  - System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  - System.Net.Mail.SmtpClient.SendAsyncCancel
  - System.Net.Mail.SmtpClient.SendCompleted
  - System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.ServicePoint
  - System.Net.Mail.SmtpClient.TargetName
  - System.Net.Mail.SmtpClient.Timeout
  - System.Net.Mail.SmtpClient.UseDefaultCredentials
  langs:
  - csharp
  name: SmtpClient
  nameWithType: SmtpClient
  fullName: System.Net.Mail.SmtpClient
  type: Class
  summary: "Allows applications to send e-mail by using the Simple Mail Transfer Protocol (SMTP)."
  remarks: "The SmtpClient class is used to send e-mail to an SMTP server for delivery. The SMTP protocol is defined in RFC 2821, which is available at [http://www.ietf.org](http://www.ietf.org/).  \n  \n The classes shown in the following table are used to construct e-mail messages that can be sent using SmtpClient.  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|<xref:System.Net.Mail.Attachment>|Represents file attachments. This class allows you to attach files, streams, or text to an e-mail message.|  \n|<xref:System.Net.Mail.MailAddress>|Represents the e-mail address of the sender and recipients.|  \n|<xref:System.Net.Mail.MailMessage>|Represents an e-mail message.|  \n  \n To construct and send an e-mail message by using SmtpClient, you must specify the following information:  \n  \n-   The SMTP host server that you use to send e-mail. See the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties.  \n  \n-   Credentials for authentication, if required by the SMTP server. See the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.  \n  \n-   The e-mail address of the sender. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `from` parameter. Also see the <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName> property.  \n  \n-   The e-mail address or addresses of the recipients. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `recipient` parameter. Also see the <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName> property.  \n  \n-   The message content. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `body` parameter. Also see the <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=fullName> property.  \n  \n To include an attachment with an e-mail message, first create the attachment by using the <xref:System.Net.Mail.Attachment> class, and then add it to the message by using the <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=fullName> property. Depending on the e-mail reader used by the recipients and the file type of the attachment, some recipients might not be able to read the attachment. For clients that cannot display the attachment in its original form, you can specify alternate views by using the <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=fullName> property.  \n  \n You can use the application or machine configuration files to specify default host, port, and credentials values for all SmtpClient objects. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n To send the e-mail message and block while waiting for the e-mail to be transmitted to the SMTP server, use one of the synchronous <xref:System.Net.Mail.SmtpClient.Send%2A> methods. To allow your program's main thread to continue executing while the e-mail is transmitted, use one of the asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods. The <xref:System.Net.Mail.SmtpClient.SendCompleted> event is raised when a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation completes. To receive this event, you must add a <xref:System.Net.Mail.SendCompletedEventHandler> delegate to <xref:System.Net.Mail.SmtpClient.SendCompleted>. The <xref:System.Net.Mail.SendCompletedEventHandler> delegate must reference a callback method that handles notification of <xref:System.Net.Mail.SmtpClient.SendCompleted> events. To cancel an asynchronous e-mail transmission, use the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.  \n  \n> [!NOTE]\n>  If there is an e-mail transmission in progress and you call <xref:System.Net.Mail.SmtpClient.SendAsync%2A> or <xref:System.Net.Mail.SmtpClient.Send%2A> again, you will receive an <xref:System.InvalidOperationException>.  \n  \n The connection established by the current instance of the SmtpClient class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server. This is particularly useful when authentication or encryption are used establish a connection to the SMTP server. The process of authenticating and establishing a TLS session can be expensive operations. A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance. There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts. Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established. It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.  \n  \n The SmtpClient class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server. An application may re-use the same SmtpClient object to send many different emails to the same SMTP server and to many different SMTP servers. As a result, there is no way to determine when an application is finished using the SmtpClient object and it should be cleaned up.  \n  \n When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send. This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.  \n  \n The SmtpClient class has no `Finalize` method, so an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.  \n  \n Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the SmtpClient. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the SmtpClient in an unusable state. After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the SmtpClient so the garbage collector can reclaim the memory that the SmtpClient was occupying."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/t-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/t-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/t-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: 'public class SmtpClient : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor
  id: '#ctor'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> class by using configuration file settings."
  remarks: "This constructor initializes the <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, and <xref:System.Net.Mail.SmtpClient.Port%2A> properties for the new <xref:System.Net.Mail.SmtpClient> by using the settings in the application or machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  example:
  - "The following code example demonstrates sending an e-mail message.  \n  \n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_4_1.cs)]  \n  \n For an example of the \\<mailSettings> node in the application or machine configuration file, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  syntax:
    content: public SmtpClient ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> class that sends e-mail by using the specified SMTP server."
  remarks: "The `host` parameter is used to initialize the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> property. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties are initialized by using the settings in the application or machine configuration files. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_1_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public SmtpClient (string host);
    parameters:
    - id: host
      type: System.String
      description: "A <xref:System.String> that contains the name or IP address of the host computer used for SMTP transactions."
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> class that sends e-mail by using the specified SMTP server and port."
  remarks: "The `host` and `port` parameters set the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties, respectively. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files. If `port` is zero, <xref:System.Net.Mail.SmtpClient.Port%2A> is initialized using the settings in the application or machine configuration files. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> property is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public SmtpClient (string host, int port);
    parameters:
    - id: host
      type: System.String
      description: "A <xref:System.String> that contains the name or IP address of the host used for SMTP transactions."
    - id: port
      type: System.Int32
      description: "An <xref:System.Int32> greater than zero that contains the port to be used on `host`."
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>port</code> cannot be less than zero."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Specify which certificates should be used to establish the Secure Sockets Layer (SSL) connection."
  remarks: "Client certificates are, by default, optional; however, the server configuration might require that the client present a valid certificate as part of the initial connection negotiation.      > [!NOTE] >  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of ClientCertificates (if there is one), or tries to reuse an anonymous sessions if ClientCertificates is empty."
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_3_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;></xref>, holding one or more client certificates. The default value is derived from the mail configuration attributes in a configuration file."
  overload: System.Net.Mail.SmtpClient.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Credentials
  id: Credentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the credentials used to authenticate the sender."
  remarks: "Some SMTP servers require that the client be authenticated before the server will send e-mail on its behalf. To use your default network credentials, you can set the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> to `true` instead of setting this property. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false,` then the value set in the Credentials property will be used for the credentials when connecting to the server. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false` and the Credentials property has not been set, then mail is sent to the server anonymously.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using the Credentials property, this information overrides the configuration file settings.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates setting the credentials used to send an e-mail.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public System.Net.ICredentialsByHost Credentials { get; set; }
    return:
      type: System.Net.ICredentialsByHost
      description: "An <xref:System.Net.ICredentialsByHost> that represents the credentials to use for authentication; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no credentials have been specified."
  overload: System.Net.Mail.SmtpClient.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "You cannot change the value of this property when an email is being sent."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  id: DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the delivery format used by <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> to send e-mail."
  syntax:
    content: public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryFormat
      description: "Returns <xref href=&quot;System.Net.Mail.SmtpDeliveryFormat&quot;></xref>.       The delivery format used by <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref>."
  overload: System.Net.Mail.SmtpClient.DeliveryFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  id: DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Specifies how outgoing email messages will be handled."
  remarks: "Delivery methods include:      -   An SMTP server.      -   Moving the email into the pickup directory for IIS, which then delivers the message.      -   Moving the email to a directory specified by <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> for later delivery by another application.       The default value for this property can also be set in a machine or application configuration file. Any changes made to the <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A> property override the configuration file settings."
  syntax:
    content: public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryMethod
      description: "An <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> that indicates how email messages are delivered."
  overload: System.Net.Mail.SmtpClient.DeliveryMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose
  id: Dispose
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, and releases all resources used by the current instance of the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> class."
  remarks: "The connection established by the current instance of the <xref:System.Net.Mail.SmtpClient> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server. This is particularly useful when authentication or encryption are used establish a connection to the SMTP server. The process of authenticating and establishing a TLS session can be expensive operations. A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance. There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts. Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established. It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.       The <xref:System.Net.Mail.SmtpClient> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server. An application may re-use the same <xref:System.Net.Mail.SmtpClient> object to send many different emails to the same SMTP server and to many different SMTP servers. As a result, there is no way to determine when an application is finished using the <xref:System.Net.Mail.SmtpClient> object and it should be cleaned up.       When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send. This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.       Calling the Dispose method on a <xref:System.Net.Mail.SmtpClient> object that is executing an asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation will cancel the send operation as though the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method had been called.       The <xref:System.Net.Mail.SmtpClient> class has no `Finalize` method. So an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources.       The Dispose method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection. The Dispose method also releases the unmanaged resources used by the underlying <xref:System.Net.Sockets.Socket>.       Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the <xref:System.Net.Mail.SmtpClient>. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the <xref:System.Net.Mail.SmtpClient> in an unusable state. After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the <xref:System.Net.Mail.SmtpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Mail.SmtpClient> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call <xref:System.Net.Mail.SmtpClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Mail.SmtpClient>. Otherwise, the resources it is using will not be freed so the garbage collector can reclaim the memory."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends a QUIT message to the SMTP server, gracefully ends the TCP connection, releases all resources used by the current instance of the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> class, and optionally disposes of the managed resources."
  remarks: "The connection established by the current instance of the <xref:System.Net.Mail.SmtpClient> class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server. This is particularly useful when authentication or encryption are used establish a connection to the SMTP server. The process of authenticating and establishing a TLS session can be expensive operations. A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance. There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts. Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established. It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.       The <xref:System.Net.Mail.SmtpClient> class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server. An application may re-use the same <xref:System.Net.Mail.SmtpClient> object to send many different emails to the same SMTP server and to many different SMTP servers. As a result, there is no way to determine when an application is finished using the <xref:System.Net.Mail.SmtpClient> object and it should be cleaned up.       When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send. This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.       Calling the Dispose method on a <xref:System.Net.Mail.SmtpClient> object that is executing an asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation will cancel the send operation as though the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method had been called.       The <xref:System.Net.Mail.SmtpClient> class has no `Finalize` method. So an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources.       The Dispose method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection. The Dispose method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.       Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the <xref:System.Net.Mail.SmtpClient>. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the <xref:System.Net.Mail.SmtpClient> in an unusable state. After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the <xref:System.Net.Mail.SmtpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Mail.SmtpClient> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call <xref:System.Net.Mail.SmtpClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Mail.SmtpClient>. Otherwise, the resources it is using will not be freed so the garbage collector can reclaim the memory."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to releases only unmanaged resources."
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.EnableSsl
  id: EnableSsl
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Specify whether the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> uses Secure Sockets Layer (SSL) to encrypt the connection."
  remarks: "The EnableSsl property specifies whether SSL is used to access the specified SMTP mail server.       The default value for this property can also be set in a machine or application configuration file. Any changes made to the EnableSsl property override the configuration file settings.       The <xref:System.Net.Mail.SmtpClient> class only supports the SMTP Service Extension for Secure SMTP over Transport Layer Security as defined in RFC 3207. In this mode, the SMTP session begins on an unencrypted channel, then a STARTTLS command is issued by the client to the server to switch to secure communication using SSL. See RFC 3207 published by the Internet Engineering Task Force (IETF) for more information.       An alternate connection method is where an SSL session is established up front before any protocol commands are sent. This connection method is sometimes called SMTP/SSL, SMTP over SSL, or SMTPS and by default uses port 465. This alternate connection method using SSL is not currently supported.       You can use <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> to specify which client certificates should be used to establish the SSL connection. The <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> allows you to reject the certificate provided by the SMTP server. The <xref:System.Net.ServicePointManager.SecurityProtocol%2A> property allows you to specify the version of the SSL protocol to use.      > [!NOTE] >  If the EnableSsl property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>."
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> uses SSL; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Mail.SmtpClient.EnableSsl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Host
  id: Host
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the name or IP address of the host used for SMTP transactions."
  remarks: "The value of the Host property can also be set using constructors or the application or machine configuration file. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If information is specified using this property, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String> that contains the name or IP address of the computer to use for SMTP transactions."
  overload: System.Net.Mail.SmtpClient.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value specified for a set operation is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value specified for a set operation is equal to &lt;xref:System.String?displayProperty=fullName&gt; (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "You cannot change the value of this property when an email is being sent."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Raises the <xref href=&quot;System.Net.Mail.SmtpClient.SendCompleted&quot;></xref> event."
  remarks: "Classes that inherit from the <xref:System.Net.Mail.SmtpClient> class can override the OnSendCompleted method to perform additional tasks when the <xref:System.Net.Mail.SmtpClient.SendCompleted> event occurs.       OnSendCompleted also allows derived classes to handle <xref:System.Net.Mail.SmtpClient.SendCompleted> without attaching a delegate. This is the preferred technique for handling <xref:System.Net.Mail.SmtpClient.SendCompleted> in a derived class."
  syntax:
    content: protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "An <xref:System.ComponentModel.AsyncCompletedEventArgs> that contains event data."
  overload: System.Net.Mail.SmtpClient.OnSendCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  id: PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the folder where applications save mail messages to be processed by the local SMTP server."
  remarks: "Mail messages in the pickup directory are automatically sent by a local SMTP server (if present), such as IIS.       The default value for this property can also be set in a machine or application configuration file. Any changes made to the PickupDirectoryLocation property override the configuration file settings."
  syntax:
    content: public string PickupDirectoryLocation { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String> that specifies the pickup directory for mail messages."
  overload: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Port
  id: Port
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the port used for SMTP transactions."
  remarks: "The value of the Port property can also be set using constructors or the application or machine configuration file. For more information about using configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using this property, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_5_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_5_1.cs)]"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "An <xref:System.Int32> that contains the port number on the SMTP host. The default value is 25."
  overload: System.Net.Mail.SmtpClient.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value specified for a set operation is less than or equal to zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "You cannot change the value of this property when an email is being sent."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  id: Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends the specified message to an SMTP server for delivery."
  remarks: "This method blocks while the e-mail is transmitted. You can specify a time-out value using the <xref:System.Net.Mail.SmtpClient.Timeout%2A> property to ensure that the method returns after a specified amount of time elapses.       Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties must be set either through the configuration files by setting the relevant properties, or by passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.       You cannot call this method if there is a message being sent asynchronously.       If the SMTP host requires credentials, you must set them before calling this method. To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> properties.       If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed. The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.       When sending e-mail using <xref:System.Net.Mail.SmtpClient.Send%2A> to multiple recipients and the SMTP server accepts some recipients as valid and rejects others, <xref:System.Net.Mail.SmtpClient.Send%2A> sends e-mail to the accepted recipients and then a <xref:System.Net.Mail.SmtpFailedRecipientsException> is thrown. The exception will contain a listing of the recipients that were rejected.      > [!NOTE] >  If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>."
  example:
  - "The following code example demonstrates using this method.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public void Send (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "A <xref href=&quot;System.Net.Mail.MailMessage&quot;></xref> that contains the message to send."
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> has a <xref:System.Net.Mail.SmtpClient.SendAsync*> call in progress.       -or-       &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt; is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       There are no recipients specified in &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, and &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt; properties.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is equal to the empty string (&quot;&quot;).       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Port*> is zero, a negative number, or greater than 65,535."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This object has been disposed."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "The connection to the SMTP server failed.       -or-       Authentication failed.       -or-       The operation timed out.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command."
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "The <code>message</code> could not be delivered to one or more of the recipients in &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, or &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  id: Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends the specified e-mail message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using <xref:System.String> objects."
  remarks: "This method blocks while the e-mail is transmitted. You can specify a time-out value using the <xref:System.Net.Mail.SmtpClient.Timeout%2A> property to ensure that the method returns after a specified amount of time elapses.       Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties must be set either through the configuration files by setting the relevant properties, or by passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.       You cannot call this method if there is a message being sent asynchronously.       If the SMTP host requires credentials, you must set them before calling this method. To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> properties.       If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed. The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.       When sending e-mail using <xref:System.Net.Mail.SmtpClient.Send%2A> to multiple recipients and the SMTP server accepts some recipients as valid and rejects others, <xref:System.Net.Mail.SmtpClient.Send%2A> sends e-mail to the accepted recipients and then a <xref:System.Net.Mail.SmtpFailedRecipientsException> is thrown. The exception will contain a listing of the recipients that were rejected.      > [!NOTE] >  If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>."
  syntax:
    content: public void Send (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "A <xref:System.String> that contains the address information of the message sender."
    - id: recipients
      type: System.String
      description: "A <xref:System.String> that contains the addresses that the message is sent to."
    - id: subject
      type: System.String
      description: "A <xref:System.String> that contains the subject line for the message."
    - id: body
      type: System.String
      description: "A <xref:System.String> that contains the message body."
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code> is <xref:System.String>.       -or-       <code>recipients</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> has a <xref:System.Net.Mail.SmtpClient.SendAsync*> call in progress.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is equal to the empty string (&quot;&quot;).       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Port*> is zero, a negative number, or greater than 65,535."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This object has been disposed."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "The connection to the SMTP server failed.       -or-       Authentication failed.       -or-       The operation timed out.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command."
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "The message could not be delivered to one or more of the recipients in <code>recipients</code>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  id: SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends the specified e-mail message to an SMTP server for delivery. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes."
  remarks: "To receive notification when the e-mail has been sent or the operation has been canceled, add an event handler to the <xref:System.Net.Mail.SmtpClient.SendCompleted> event. You can cancel a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation by calling the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.       After calling <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, you must wait for the e-mail transmission to complete before attempting to send another e-mail message using <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.       Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> must be set through the configuration files by setting the relevant properties, or by passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.       If the SMTP host requires credentials, you must set them before calling this method. To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> properties.       If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed. The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.       When sending e-mail using <xref:System.Net.Mail.SmtpClient.SendAsync%2A> to multiple recipients, if the SMTP server accepts some recipients as valid and rejects others, a <xref:System.Net.Mail.SmtpException> is thrown with a <xref:System.NullReferenceException> for the inner exception. If this occurs, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> fails to send e-mail to any of the recipients.       Your application can detect a server certificate validation error by examining the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property passed into the <xref:System.Net.Mail.SendCompletedEventHandler> delegate.       The <xref:System.Net.Mail.SmtpClient.Timeout%2A> property does not have any effect on a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> call.       To send mail and block while it is transmitted to the SMTP server, use one of the <xref:System.Net.Mail.SmtpClient.Send%2A> methods.      > [!NOTE] >  If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/92b04d2f-ebb5-4da9-8cad-_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/92b04d2f-ebb5-4da9-8cad-_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/92b04d2f-ebb5-4da9-8cad-_1.vb)]"
  syntax:
    content: public void SendAsync (System.Net.Mail.MailMessage message, object userToken);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "A <xref href=&quot;System.Net.Mail.MailMessage&quot;></xref> that contains the message to send."
    - id: userToken
      type: System.Object
      description: "A user-defined object that is passed to the method invoked when the asynchronous operation completes."
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt; is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> has a <xref:System.Net.Mail.SmtpClient.SendAsync*> call in progress.       -or-       There are no recipients specified in &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, and &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt; properties.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is equal to the empty string (&quot;&quot;).       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Port*> is zero, a negative number, or greater than 65,535."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This object has been disposed."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "The connection to the SMTP server failed.       -or-       Authentication failed.       -or-       The operation timed out.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.       -or-       The <code>message</code> could not be delivered to one or more of the recipients in &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, or &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  id: SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends an e-mail message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using <xref:System.String> objects. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes."
  remarks: "To receive notification when the e-mail has been sent or the operation has been canceled, add an event handler to the <xref:System.Net.Mail.SmtpClient.SendCompleted> event. You can cancel a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation by calling the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.       After calling <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, you must wait for the e-mail transmission to complete before attempting to send another e-mail message using <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.       Before calling this method, the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties must be set either through the configuration files or by setting the properties or passing this information into the <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> constructor.       If the SMTP host requires credentials, you must set them before calling this method. To specify credentials, use the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> or <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.       If you receive an <xref:System.Net.Mail.SmtpException> exception, check the <xref:System.Net.Mail.SmtpException.StatusCode%2A> property to find the reason the operation failed. The <xref:System.Net.Mail.SmtpException> can also contain an inner exception that indicates the reason the operation failed.       When sending e-mail using <xref:System.Net.Mail.SmtpClient.SendAsync%2A> to multiple recipients, if the SMTP server accepts some recipients as valid and rejects others, a <xref:System.Net.Mail.SmtpException> is thrown with a <xref:System.NullReferenceException> for the inner exception. If this occurs, <xref:System.Net.Mail.SmtpClient.SendAsync%2A> fails to send e-mail to any of the recipients.       Your application can detect a server certificate validation error by examining the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property passed into the <xref:System.Net.Mail.SendCompletedEventHandler> delegate.       The <xref:System.Net.Mail.SmtpClient.Timeout%2A> property does not have any effect on a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> call.       To send mail and block while it is transmitted to the SMTP server, use one of the <xref:System.Net.Mail.SmtpClient.Send%2A> methods.      > [!NOTE] >  If the <xref:System.Net.Mail.SmtpClient.EnableSsl%2A> property is set to `true`, and the SMTP mail server does not advertise STARTTLS in the response to the EHLO command, then a call to the <xref:System.Net.Mail.SmtpClient.Send%2A> or <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods will throw an <xref:System.Net.Mail.SmtpException>."
  syntax:
    content: public void SendAsync (string from, string recipients, string subject, string body, object userToken);
    parameters:
    - id: from
      type: System.String
      description: "A <xref:System.String> that contains the address information of the message sender."
    - id: recipients
      type: System.String
      description: "A <xref:System.String> that contains the address that the message is sent to."
    - id: subject
      type: System.String
      description: "A <xref:System.String> that contains the subject line for the message."
    - id: body
      type: System.String
      description: "A <xref:System.String> that contains the message body."
    - id: userToken
      type: System.Object
      description: "A user-defined object that is passed to the method invoked when the asynchronous operation completes."
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipient</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code> is <xref:System.String>.       -or-       <code>recipient</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This <xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref> has a <xref:System.Net.Mail.SmtpClient.SendAsync*> call in progress.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Host*> is equal to the empty string (&quot;&quot;).       -or-       <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <xref:System.Net.Mail.SmtpClient.Port*> is zero, a negative number, or greater than 65,535."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This object has been disposed."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "The connection to the SMTP server failed.       -or-       Authentication failed.       -or-       The operation timed out.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <xref:System.Net.Mail.SmtpClient.DeliveryMethod*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       -or-       <xref:System.Net.Mail.SmtpClient.EnableSsl*> is set to <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref> but the SMTP mail server did not advertise STARTTLS in the response to the EHLO command.       -or-       The message could not be delivered to one or more of the recipients in <code>recipients</code>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Cancels an asynchronous operation to send an e-mail message."
  remarks: "Use the SendAsyncCancel method to cancel a pending <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation. If there is mail waiting to be sent, this method releases resources used to store the mail. If there is no mail waiting to be sent, this method does nothing."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously. The user has the option to cancel the mail if it has not been sent.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_3_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_3_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/m-system.net.mail.smtpcl_3_1.vb)]"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.SendAsyncCancel*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "This object has been disposed."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendCompleted
  id: SendCompleted
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Occurs when an asynchronous e-mail send operation completes."
  remarks: "The SendCompleted event is raised each time an e-mail message is sent asynchronously when the send operation completes. To send an e-mail message asynchronously, use the <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods.       <xref:System.Net.Mail.SendCompletedEventHandler> is the delegate for SendCompleted. The <xref:System.ComponentModel.AsyncCompletedEventArgs> class provides the event handler with event data."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/e-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/e-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/e-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: public event System.Net.Mail.SendCompletedEventHandler SendCompleted;
    return:
      type: System.Net.Mail.SendCompletedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  id: SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends the specified message to an SMTP server for delivery as an asynchronous operation."
  remarks: "This operation will not block. The returned <xref:System.Threading.Tasks.Task>> object will complete once the message has been sent."
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "A <xref href=&quot;System.Net.Mail.MailMessage&quot;></xref> that contains the message to send."
    return:
      type: System.Threading.Tasks.Task
      description: "Returns <xref:System.Threading.Tasks.Task>.       The task object representing the asynchronous operation."
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  id: SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Sends the specified message to an SMTP server for delivery as an asynchronous operation. . The message sender, recipients, subject, and message body are specified using <xref:System.String> objects."
  remarks: "This operation will not block. The returned <xref:System.Threading.Tasks.Task>> object will complete once the message has been sent."
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "A <xref:System.String> that contains the address information of the message sender."
    - id: recipients
      type: System.String
      description: "A <xref:System.String> that contains the addresses that the message is sent to."
    - id: subject
      type: System.String
      description: "A <xref:System.String> that contains the subject line for the message."
    - id: body
      type: System.String
      description: "A <xref:System.String> that contains the message body."
    return:
      type: System.Threading.Tasks.Task
      description: "Returns <xref:System.Threading.Tasks.Task>.       The task object representing the asynchronous operation."
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code> is <xref:System.String.Empty>.       -or-       <code>recipients</code> is <xref:System.String.Empty>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ServicePoint
  id: ServicePoint
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets the network connection used to transmit the e-mail message."
  remarks: "The settings for the ServicePoint property are created using defaults specified in the application or machine configuration files and the <xref:System.Net.ServicePointManager> class."
  example:
  - "The following code example demonstrates accessing the ServicePoint property.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_7_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_7_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;></xref> that connects to the <xref:System.Net.Mail.SmtpClient.Host*> property used for SMTP."
  overload: System.Net.Mail.SmtpClient.ServicePoint*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.Mail.SmtpClient.Host*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or the empty string (&quot;&quot;).       -or-       <xref:System.Net.Mail.SmtpClient.Port*> is zero."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.TargetName
  id: TargetName
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the Service Provider Name (SPN) to use for authentication when using extended protection."
  remarks: "The TargetName property is used with integrated Windows authentication when an application is using extended protection. The <xref:System.Net.Mail.SmtpClient> can then provide extended protection to ensure that credential challenge responses contain service specific information (a SPN) and, if necessary, channel specific information (a channel binding token or CBT). With this information in the credential exchanges, services are able to better protect against malicious use of credential challenge responses that might have been improperly obtained.       The default value for this property can also be set in a machine or application configuration file. Any changes made to the TargetName property override the configuration file settings."
  syntax:
    content: public string TargetName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String> that specifies the SPN to use for extended protection. The default value for this SPN is of the form &quot;SMTPSVC/&lt;host&gt;&quot; where &lt;host&gt; is the hostname of the SMTP mail server."
  overload: System.Net.Mail.SmtpClient.TargetName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Timeout
  id: Timeout
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets a value that specifies the amount of time after which a synchronous <xref:System.Net.Mail.SmtpClient.Send*> call times out."
  remarks: "By default, calls to the <xref:System.Net.Mail.SmtpClient.Send%2A> method block until the operation completes. If you set the Timeout property to a positive value, and a <xref:System.Net.Mail.SmtpClient.Send%2A> operation cannot complete in the allotted time, the <xref:System.Net.Mail.SmtpClient> class throws an <xref:System.Net.Mail.SmtpException> exception.       To send a message and continue executing in the application thread, use the <xref:System.Net.Mail.SmtpClient.SendAsync%2A> method."
  example:
  - "The following code example demonstrates getting and setting the time-out value.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_6_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_6_1.cs)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "An <xref:System.Int32> that specifies the time-out value in milliseconds. The default value is 100,000 (100 seconds)."
  overload: System.Net.Mail.SmtpClient.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value specified for a set operation was less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "You cannot change the value of this property when an email is being sent."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets a <xref:System.Boolean> value that controls whether the <xref:System.Net.CredentialCache.DefaultCredentials*> are sent with requests."
  remarks: "Some SMTP servers require that the client be authenticated before the server sends e-mail on its behalf. Set this property to `true` when this <xref:System.Net.Mail.SmtpClient> object should, if requested by the server, authenticate using the default credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If the UseDefaultCredentials property is set to `false,` then the value set in the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property will be used for the credentials when connecting to the server. If the UseDefaultCredentials property is set to `false` and the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property has not been set, then mail is sent to the server anonymously.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_4_1.cs)]"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the default credentials are used; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "You cannot change the value of this property when an e-mail is being sent."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Mail.SmtpException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpException
  nameWithType: SmtpException
  fullName: System.Net.Mail.SmtpException
- uid: System.Net.Mail.SmtpFailedRecipientsException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpFailedRecipientsException
  nameWithType: SmtpFailedRecipientsException
  fullName: System.Net.Mail.SmtpFailedRecipientsException
- uid: System.Net.Mail.SmtpClient.#ctor
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Mail.SmtpClient.Credentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
- uid: System.Net.ICredentialsByHost
  parent: System.Net
  isExternal: true
  name: ICredentialsByHost
  nameWithType: ICredentialsByHost
  fullName: System.Net.ICredentialsByHost
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpDeliveryFormat
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryFormat
  nameWithType: SmtpDeliveryFormat
  fullName: System.Net.Mail.SmtpDeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpDeliveryMethod
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryMethod
  nameWithType: SmtpDeliveryMethod
  fullName: System.Net.Mail.SmtpDeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mail.SmtpClient.EnableSsl
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
- uid: System.Net.Mail.MailMessage
  parent: System.Net.Mail
  isExternal: false
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
- uid: System.Net.Mail.SmtpClient.SendCompleted
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
- uid: System.Net.Mail.SendCompletedEventHandler
  parent: System.Net.Mail
  isExternal: false
  name: SendCompletedEventHandler
  nameWithType: SendCompletedEventHandler
  fullName: System.Net.Mail.SendCompletedEventHandler
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.ServicePoint
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
- uid: System.Net.Mail.SmtpClient.#ctor*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient
  nameWithType: SmtpClient.SmtpClient
- uid: System.Net.Mail.SmtpClient.ClientCertificates*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
- uid: System.Net.Mail.SmtpClient.Credentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
- uid: System.Net.Mail.SmtpClient.DeliveryFormat*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose
  nameWithType: SmtpClient.Dispose
- uid: System.Net.Mail.SmtpClient.EnableSsl*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted
  nameWithType: SmtpClient.OnSendCompleted
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send
  nameWithType: SmtpClient.Send
- uid: System.Net.Mail.SmtpClient.SendAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync
  nameWithType: SmtpClient.SendAsync
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel
  nameWithType: SmtpClient.SendAsyncCancel
- uid: System.Net.Mail.SmtpClient.SendMailAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync
  nameWithType: SmtpClient.SendMailAsync
- uid: System.Net.Mail.SmtpClient.ServicePoint*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
