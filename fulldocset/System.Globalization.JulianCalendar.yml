### YamlMime:ManagedReference
items:
- uid: System.Globalization.JulianCalendar
  id: JulianCalendar
  children:
  - System.Globalization.JulianCalendar.#ctor
  - System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.JulianCalendar.AlgorithmType
  - System.Globalization.JulianCalendar.Eras
  - System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetEra(System.DateTime)
  - System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetMonth(System.DateTime)
  - System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetYear(System.DateTime)
  - System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.JulianEra
  - System.Globalization.JulianCalendar.MaxSupportedDateTime
  - System.Globalization.JulianCalendar.MinSupportedDateTime
  - System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.JulianCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: JulianCalendar
  nameWithType: JulianCalendar
  fullName: System.Globalization.JulianCalendar
  type: Class
  summary: "Representa o calendário juliano."
  remarks: "Em 45 A.C., Júlio César ordenados uma reforma de calendário, o que provocou o calendário chamado do calendário juliano. Calendário juliano é a predecessora do calendário gregoriano.      > [!NOTE] > Para obter informações sobre como utilizar o <xref:System.Globalization.HebrewCalendar>e o outro calendário classes no .NET Framework, consulte a classe [a trabalhar com calendários](~/add/includes/ajax-current-ext-md.md).</xref:System.Globalization.HebrewCalendar>       A classe JulianCalendar reconhece apenas a ARA actual.       Ao contrário do calendário gregoriano, o calendário juliano define um ano bissexto como um ano que é equitativamente divisível por quatro sem excepções. Por conseguinte, o calendário é incorrecto num dia anos 128. Comum ano tem 365 dias e um ano bissexto tem 366 dias.       Tal como o calendário gregoriano, o calendário juliano tem 12 meses com 28 a 31 dias: (31 dias) de Janeiro, Fevereiro (28 ou 29 dias), (31 dias) de Março, Abril (30 dias), (31 dias) de Maio, Junho (30 dias), Julho (31 dias), Agosto (31 dias), Setembro (30 dias), Outubro de (31 dias), Novembro (30 dias) e Dezembro (31 dias). Fevereiro tem 29 dias durante os anos bissextos e 28 durante anos comuns.       A data 1 de Janeiro de 2001 D.C. no calendário Gregoriano é equivalente ao dia 19 de Dezembro de 2000 D.C. no calendário juliano.       Actualmente, o JulianCalendar não é utilizada por qualquer uma das culturas suportadas pelo <xref:System.Globalization.CultureInfo>energética</xref:System.Globalization.CultureInfo> Por conseguinte, a classe JulianCalendar pode ser utilizada apenas para calcular as datas no calendário juliano.       Cada <xref:System.Globalization.CultureInfo>objecto suporta um conjunto de calendários.</xref:System.Globalization.CultureInfo> O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade devolve o calendário predefinido para a cultura bem como a <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade devolve uma matriz que contenha todos os calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário utilizado por um <xref:System.Globalization.CultureInfo>a aplicação deve definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class JulianCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: JulianCalendar()
  nameWithType: JulianCalendar.JulianCalendar()
  fullName: System.Globalization.JulianCalendar.JulianCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classe."
  syntax:
    content: public JulianCalendar ();
    parameters: []
  overload: System.Globalization.JulianCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: JulianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>Isto é o número especificado de meses para fora do <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  remarks: "A parte do dia do resultante <xref:System.DateTime>é afectada se o dia resultante não for um dia do mês do ano resultante resultante válido.</xref:System.DateTime> É alterado para o último dia válido no mês do ano resultante resultante. A parte do ano de resultante <xref:System.DateTime>é afectada se o mês resultante está fora do ano do <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Esta implementação suporta apenas a ARA actual. Por conseguinte, <xref:System.ArgumentException>é gerada se o ano resultante está fora da ARA do <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia da resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       Por exemplo, se o mês especificado é o mês de Outubro, o que tem 31 dias, o dia especificado é 31. º dia desse mês e o valor de `months` o parâmetro é 6, o ano resultante é um mais do que o ano especificado, o mês resultante é Abril e o dia resultante é o dia 30, o que é o último dia em Abril.       Se o valor de `months` parâmetro for negativo, resultante <xref:System.DateTime>é anterior a <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retorno <xref:System.DateTime>sempre o valor é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Pode preservar o <xref:System.DateTime.Kind%2A>propriedade da `time` parâmetro chamando o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como demonstrado no seguinte exemplo.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.j_20_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.j_20_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_20_2.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_20_2.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_20_2.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual pretende adicionar meses.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "O número de meses a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número de meses especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  overload: System.Globalization.JulianCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>é inferior a-120000.       - ou - <code>months</code> é superior a 120000."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: JulianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>Isto é o número especificado de anos fora do <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  remarks: "A parte do dia do resultante <xref:System.DateTime>é afectada se o dia resultante não for um dia do mês do ano resultante resultante válido.</xref:System.DateTime> É alterado para o último dia válido no mês do ano resultante resultante. A parte do mês da resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Esta implementação suporta apenas a ARA actual. Por conseguinte, <xref:System.ArgumentException>é gerada se o ano resultante está fora da ARA do <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia da resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       Por exemplo, Fevereiro tem 28 dias, excepto durante anos bissextos, quando tiver 29 dias. Se a data especificada é o dia 29 de Fevereiro de um ano bissexto e o valor de `years` é 1, a data resultante é o dia 28 de Fevereiro do ano seguinte.       Se `years` for negativo, a resultante <xref:System.DateTime>é anterior a <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retorno <xref:System.DateTime>sempre o valor é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Pode preservar o <xref:System.DateTime.Kind%2A>propriedade da `time` parâmetro chamando o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como demonstrado no seguinte exemplo.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.j_19_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.j_19_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_19_2.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_19_2.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_19_2.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual pretende adicionar anos.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "O número de anos a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta de adicionar o número especificado de anos para o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  overload: System.Globalization.JulianCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: JulianCalendar.AlgorithmType
  fullName: System.Globalization.JulianCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um valor que indica se o calendário actual for baseada na solar, lunar baseado ou uma combinação de ambos."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.j_6_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.j_6_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Devolve sempre <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.Eras
  id: Eras
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: JulianCalendar.Eras
  fullName: System.Globalization.JulianCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a lista de eras na <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref>."
  remarks: "O <xref:System.Globalization.JulianCalendar>classe reconhece apenas a actual ARA.</xref:System.Globalization.JulianCalendar> Esta propriedade devolve sempre uma matriz com apenas um elemento."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz de números inteiros que representa os eras na <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: JulianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia do mês no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_8_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_8_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_8_1.cs)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>para ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro de 1 a 31 que representa o dia do mês em <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: JulianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia da semana no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O <xref:System.DayOfWeek>os valores são Domingo, segunda-feira, Terça-feira, quarta-feira, Quinta-feira, sexta-feira e Sábado.</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_6_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_6_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_6_1.cs)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>para ler.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "A <xref:System.DayOfWeek>valor representa o dia da semana no <code> time </code>.</xref:System.DayOfWeek>"
  overload: System.Globalization.JulianCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: JulianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia do ano no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "Dia do ano é definido como o número de dias entre o primeiro dia do ano. Por exemplo, GetDayOfYear para o primeiro dia do primeiro mês devolve 1 e GetDayOfYear para o último dia do último mês devolve o número total de dias no ano em questão. O total é o mesmo valor que devolvido pelo <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>.</xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_0_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_0_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_0_1.cs)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>para ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro de 1 a 366, que representa o dia do ano em <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de dias do mês especificado durante o ano especificado na ARA especificado."
  remarks: "Este método devolve 28 ou 29 de Fevereiro (`month` = 2), consoante se `year` é um ano bissexto."
  example:
  - "The following example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/44fd8236-349c-466d-b6f3-_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/44fd8236-349c-466d-b6f3-_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/44fd8236-349c-466d-b6f3-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro de 1 a 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Int32
      description: "O número de dias do mês especificado durante o ano especificado na ARA especificado."
  overload: System.Globalization.JulianCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo suportado pelo calendário.       - ou - <code>year</code> está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de dias do ano especificado na ARA especificada."
  remarks: "Este método devolve 365 ou 366, dependendo se `year` é um ano bissexto."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JulianCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_11_1.cs)]\n [!code-cpp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_11_1.cpp)]\n [!code-vb[System.Globalization.JulianCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_11_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Int32
      description: "O número de dias no ano especificado na ARA especificado."
  overload: System.Globalization.JulianCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo suportado pelo calendário.       - ou - <code>year</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: JulianCalendar.GetEra(DateTime)
  fullName: System.Globalization.JulianCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve a ARA no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O <xref:System.Globalization.JulianCalendar>classe reconhece apenas a actual ARA.</xref:System.Globalization.JulianCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_1_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_1_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_1_1.cs)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>para ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa a ARA na <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JulianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcula o bissexto mês para um ano especificado e a avaliação dos riscos ambientais."
  remarks: "No calendário que suporte o conceito de um mês bissextos, mês o bissexto pode ocorrer, após um determinado mês ou qualquer mês do ano. Por exemplo, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método devolve um número entre 1 e 13. o que indica o mês associado a uma data especificada.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se existir um mês bissexto entre os oitavo e nono meses do ano, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método retorna 8 para o oitavo mês, 9 para o bissexto oitavo mês e 10 para o nono mês.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Int32
      description: "Um número inteiro positivo que indica o bissexto mês no ano especificado e avaliação dos riscos ambientais. Em alternativa, este método devolve zero se o calendário não suporta o bissexto mês ou se <code> year </code> e <code> era </code> não especificar um ano bissexto."
  overload: System.Globalization.JulianCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: JulianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o mês no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_15_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_15_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_15_1.cs)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>para ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro de 1 a 12 que representa o mês em <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de meses do ano especificado na ARA especificada."
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_7_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_7_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_7_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Int32
      description: "O número de meses do ano especificado na ARA especificado."
  overload: System.Globalization.JulianCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo suportado pelo calendário.       - ou - <code>year</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: JulianCalendar.GetYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o ano no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_12_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_12_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_12_1.cs)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>para ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa o ano em <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se a data especificada na ARA especificada é um dia bissexto."
  remarks: "Ao contrário do calendário gregoriano, o calendário juliano define um ano bissexto como um ano que é equitativamente divisível por quatro sem excepções. Por conseguinte, o calendário é incorrecto num dia anos 128. Por exemplo, o ano 1999 não era um ano bissexto, mas foi o ano 2000. Comum ano tem 365 dias e um ano bissexto tem 366 dias.       Um dia de bissexto for um dia que ocorre apenas num ano bissexto. No calendário juliano, o dia 29 de Fevereiro é o único dia bissexto."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JulianCalendar.IsLeapDay#1](~/add/codesnippet/csharp/dc155d8f-dfc5-4b2c-b5d1-_1.cs)]\n [!code-cpp[System.Globalization.JulianCalendar.IsLeapDay#1](~/add/codesnippet/cpp/dc155d8f-dfc5-4b2c-b5d1-_1.cpp)]\n [!code-vb[System.Globalization.JulianCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/dc155d8f-dfc5-4b2c-b5d1-_1.vb)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro de 1 a 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um número inteiro de 1 a 31 que representa o dia."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dia especificado for um dia bissexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>day</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o mês especificado durante o ano especificado na ARA especificado é um mês bissexto."
  remarks: "Ao contrário do calendário gregoriano, o calendário juliano define um ano bissexto como um ano que é equitativamente divisível por quatro sem excepções. Por conseguinte, o calendário é incorrecto num dia anos 128. Por exemplo, o ano 1999 não era um ano bissexto, mas foi o ano 2000. Comum ano tem 365 dias e um ano bissexto tem 366 dias.       Um mês bissexto é um mês inteiro que ocorre apenas num ano bissexto. Calendário juliano não tem o bissexto meses."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-vb[System.Globalization.JulianCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/ba7f2b6b-4831-427c-a7c2-_1.vb)]\n [!code-cs[System.Globalization.JulianCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/ba7f2b6b-4831-427c-a7c2-_1.cs)]\n [!code-cpp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/ba7f2b6b-4831-427c-a7c2-_1.cpp)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro de 1 a 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Boolean
      description: "Este método devolve sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a menos que substituídos por uma classe derivada."
  overload: System.Globalization.JulianCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: JulianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o ano especificado na ARA especificado é um ano bissexto."
  remarks: "Ao contrário do calendário gregoriano, o calendário juliano define um ano bissexto como um ano que é equitativamente divisível por quatro sem excepções. Por conseguinte, o calendário é incorrecto num dia anos 128. Por exemplo, o ano 1999 não era um ano bissexto, mas foi o ano 2000. Comum ano tem 365 dias e um ano bissexto tem 366 dias."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.JulianCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.j_3_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.j_3_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_3_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ano especificado é um ano bissexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.JulianEra
  id: JulianEra
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: JulianEra
  nameWithType: JulianCalendar.JulianEra
  fullName: System.Globalization.JulianCalendar.JulianEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Representa a ARA actual. Este campo é constante."
  remarks: "O <xref:System.Globalization.JulianCalendar>classe reconhece apenas a actual ARA.</xref:System.Globalization.JulianCalendar> Este campo devolve sempre 1."
  syntax:
    content: public static readonly int JulianEra;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: JulianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a mais recente data e hora suportados pela <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classes."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_2_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_2_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_2_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A mais recente data e hora suportados pela <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classe, que é equivalente ao último momento 31 de Dezembro de 9999 D.C. no calendário gregoriano."
  overload: System.Globalization.JulianCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: JulianCalendar.MinSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a primeira data e hora suportados pela <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classes."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_3_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_3_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_3_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A primeira data e hora suportados pela <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classe, que é equivalente ao instante inicial do dia 1 de Janeiro, 0001 D.C. no calendário gregoriano."
  overload: System.Globalization.JulianCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>está definido como a data e hora especificada na ARA especificada.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro de 1 a 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um número inteiro de 1 a 31 que representa o dia."
    - id: hour
      type: System.Int32
      description: "Um número inteiro de 0 a 23 que representa a hora."
    - id: minute
      type: System.Int32
      description: "Um número inteiro de 0 a 59 que representa o minuto."
    - id: second
      type: System.Int32
      description: "Um número inteiro de 0 a 59 que representa o segundo."
    - id: millisecond
      type: System.Int32
      description: "Um número inteiro de 0 a 999 que representa o milissegundo."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa a ARA."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>está definido como a data e hora especificada na actual ARA.</xref:System.DateTime>"
  overload: System.Globalization.JulianCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>day</code> está fora do intervalo suportado pelo calendário.       - ou - <code>hour</code> é inferior a zero ou superior a 23.       - ou - <code>minute</code> é inferior a zero ou superior a 59.       - ou - <code>second</code> é inferior a zero ou superior a 59.       - ou - <code>millisecond</code> é inferior a zero ou superior a 999.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: JulianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JulianCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte o ano especificado para um ano de quatro dígitos utilizando a <xref:System.Globalization.JulianCalendar.TwoDigitYearMax*>propriedade para determinar o século adequado.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>é o último ano no intervalo de 100 anos que pode ser representado por um ano de dois dígitos.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> O século é determinado pelo localizar a ocorrência única de especificado `year` desse intervalo de 100 anos. Por exemplo, se <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>estiver definido para 2029, o intervalo de 100 anos é de 1930 a 2029.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> Por conseguinte, um valor de 2 dígitos de 30 é interpretado como de 1930, enquanto que um valor de 2 dígitos de 29 é interpretado como 2029.       ToFourDigitYear suporta um ano de dois dígitos ou de um ano de quatro dígitos. Passar um valor de ano de dois dígitos (inferior a 100) faz com que o método converter o valor para um valor de quatro dígitos de acordo com o <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>valor que representa o século adequado.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> Se o pedido indicar um valor de ano com quatro dígitos que esteja dentro do intervalo de calendário suportado para ToFourDigitYear, o método devolve o valor real de entrada. Se o pedido indicar um valor de quatro dígitos que está fora do intervalo de calendário suportado ou se fornecerá um valor negativo, o método lança uma excepção."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Inteiro de dois algarismos ou quatro dígitos que representa o ano para converter."
    return:
      type: System.Int32
      description: "Um número inteiro que contém a representação de quatro dígitos de <code> year </code>."
  overload: System.Globalization.JulianCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: JulianCalendar.TwoDigitYearMax
  fullName: System.Globalization.JulianCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  remarks: "Esta propriedade permite um ano de 2 dígitos ser correctamente traduzido para um ano com 4 dígitos. Por exemplo, se esta propriedade estiver definida para 2029, o intervalo de 100 anos é de 1930 a 2029. Por conseguinte, um valor de 2 dígitos de 30 é interpretado como de 1930, enquanto que um valor de 2 dígitos de 29 é interpretado como 2029.       O <xref:System.Globalization.JulianCalendar>classe não detecta alterações nas definições do sistema.</xref:System.Globalization.JulianCalendar>       A aplicação pode definir este valor para 99 para indicar que 2 dígitos devem ser tomadas literalmente. Por exemplo, se esta propriedade estiver definida para 99, o intervalo de 100 anos é de 0 (não um valor válido para a maior parte dos calendários) a 99. Por conseguinte, um valor de 2 dígitos de 30 é interpretado como 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "O último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  overload: System.Globalization.JulianCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado numa operação de conjunto é inferior a 99.       - ou - o valor especificado numa operação de conjunto é superior a <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Numa operação de conjunto, a instância actual é só de leitura."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.JulianCalendar.#ctor
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: JulianCalendar()
  nameWithType: JulianCalendar.JulianCalendar()
  fullName: System.Globalization.JulianCalendar.JulianCalendar()
- uid: System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: JulianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: JulianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.JulianCalendar.AlgorithmType
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JulianCalendar.AlgorithmType
  fullName: System.Globalization.JulianCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.JulianCalendar.Eras
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: Eras
  nameWithType: JulianCalendar.Eras
  fullName: System.Globalization.JulianCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: JulianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: JulianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: JulianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetEra(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: JulianCalendar.GetEra(DateTime)
  fullName: System.Globalization.JulianCalendar.GetEra(DateTime)
- uid: System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JulianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: JulianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetMonth(DateTime)
- uid: System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: JulianCalendar.GetYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetYear(DateTime)
- uid: System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: JulianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.JulianCalendar.JulianEra
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: JulianEra
  nameWithType: JulianCalendar.JulianEra
  fullName: System.Globalization.JulianCalendar.JulianEra
- uid: System.Globalization.JulianCalendar.MaxSupportedDateTime
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JulianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MaxSupportedDateTime
- uid: System.Globalization.JulianCalendar.MinSupportedDateTime
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JulianCalendar.MinSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MinSupportedDateTime
- uid: System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: JulianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JulianCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.JulianCalendar.TwoDigitYearMax
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JulianCalendar.TwoDigitYearMax
  fullName: System.Globalization.JulianCalendar.TwoDigitYearMax
- uid: System.Globalization.JulianCalendar.#ctor*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: JulianCalendar
  nameWithType: JulianCalendar.JulianCalendar
- uid: System.Globalization.JulianCalendar.AddMonths*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddMonths
  nameWithType: JulianCalendar.AddMonths
- uid: System.Globalization.JulianCalendar.AddYears*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddYears
  nameWithType: JulianCalendar.AddYears
- uid: System.Globalization.JulianCalendar.AlgorithmType*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JulianCalendar.AlgorithmType
- uid: System.Globalization.JulianCalendar.Eras*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: Eras
  nameWithType: JulianCalendar.Eras
- uid: System.Globalization.JulianCalendar.GetDayOfMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: JulianCalendar.GetDayOfMonth
- uid: System.Globalization.JulianCalendar.GetDayOfWeek*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: JulianCalendar.GetDayOfWeek
- uid: System.Globalization.JulianCalendar.GetDayOfYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: JulianCalendar.GetDayOfYear
- uid: System.Globalization.JulianCalendar.GetDaysInMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: JulianCalendar.GetDaysInMonth
- uid: System.Globalization.JulianCalendar.GetDaysInYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: JulianCalendar.GetDaysInYear
- uid: System.Globalization.JulianCalendar.GetEra*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetEra
  nameWithType: JulianCalendar.GetEra
- uid: System.Globalization.JulianCalendar.GetLeapMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: JulianCalendar.GetLeapMonth
- uid: System.Globalization.JulianCalendar.GetMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonth
  nameWithType: JulianCalendar.GetMonth
- uid: System.Globalization.JulianCalendar.GetMonthsInYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: JulianCalendar.GetMonthsInYear
- uid: System.Globalization.JulianCalendar.GetYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetYear
  nameWithType: JulianCalendar.GetYear
- uid: System.Globalization.JulianCalendar.IsLeapDay*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: JulianCalendar.IsLeapDay
- uid: System.Globalization.JulianCalendar.IsLeapMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: JulianCalendar.IsLeapMonth
- uid: System.Globalization.JulianCalendar.IsLeapYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: JulianCalendar.IsLeapYear
- uid: System.Globalization.JulianCalendar.MaxSupportedDateTime*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JulianCalendar.MaxSupportedDateTime
- uid: System.Globalization.JulianCalendar.MinSupportedDateTime*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JulianCalendar.MinSupportedDateTime
- uid: System.Globalization.JulianCalendar.ToDateTime*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: JulianCalendar.ToDateTime
- uid: System.Globalization.JulianCalendar.ToFourDigitYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: JulianCalendar.ToFourDigitYear
- uid: System.Globalization.JulianCalendar.TwoDigitYearMax*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JulianCalendar.TwoDigitYearMax
