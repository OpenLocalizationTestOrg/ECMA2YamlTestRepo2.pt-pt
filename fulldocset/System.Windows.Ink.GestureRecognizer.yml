### YamlMime:ManagedReference
items:
- uid: System.Windows.Ink.GestureRecognizer
  id: GestureRecognizer
  children:
  - System.Windows.Ink.GestureRecognizer.#ctor
  - System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  - System.Windows.Ink.GestureRecognizer.Dispose
  - System.Windows.Ink.GestureRecognizer.GetEnabledGestures
  - System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  - System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)
  - System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  langs:
  - csharp
  name: GestureRecognizer
  nameWithType: GestureRecognizer
  fullName: System.Windows.Ink.GestureRecognizer
  type: Class
  summary: "Reconhece gestos de tinta digital."
  remarks: "Um GestureRecognizer identifica um gesto de tinta digital. Pode definir GestureRecognizer para reconhecer todas ou um subconjunto de gestos de aplicação. Para definir o GestureRecognizer para reconhecer um subconjunto dos gestos disponíveis, transmita um <xref:System.Windows.Ink.ApplicationGesture>matriz para o construtor ou utilize o <xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A>método.</xref:System.Windows.Ink.GestureRecognizer.SetEnabledGestures%2A> </xref:System.Windows.Ink.ApplicationGesture> Para determinar se um <xref:System.Windows.Ink.StrokeCollection>contém um gesto, chamada o <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A>método.</xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> </xref:System.Windows.Ink.StrokeCollection>      <a name=&quot;xamlTextUsage_GestureRecognizer&quot;></a># # XAML texto utilização não é possível utilizar esta classe no [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example demonstrates how to determine whether a <xref:System.Windows.Ink.Stroke> is a <xref:System.Windows.Ink.ApplicationGesture> gesture.  \n  \n [!code-vb[GestureControl#8](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#8)]\n [!code-cs[GestureControl#8](~/add/codesnippet/csharp/GestureControl/Gesture.cs#8)]"
  syntax:
    content: 'public sealed class GestureRecognizer : System.Windows.DependencyObject, IDisposable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.#ctor
  id: '#ctor'
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: GestureRecognizer()
  nameWithType: GestureRecognizer.GestureRecognizer()
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> classe."
  remarks: "Quando é criado com este construtor, o <xref:System.Windows.Ink.GestureRecognizer>reconhece todos os gestos de aplicação.</xref:System.Windows.Ink.GestureRecognizer>"
  syntax:
    content: public GestureRecognizer ();
    parameters: []
  overload: System.Windows.Ink.GestureRecognizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})'
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: GestureRecognizer(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> classe."
  remarks: "Utilize o construtor de GestureRecognizer para criar um <xref:System.Windows.Ink.GestureRecognizer>reconhece que um subconjunto de gestos a aplicação.</xref:System.Windows.Ink.GestureRecognizer>"
  example:
  - "The following example demonstrates how to create a <xref:System.Windows.Ink.GestureRecognizer> that recognizes only the <xref:System.Windows.Ink.ApplicationGesture>, <xref:System.Windows.Ink.ApplicationGesture>, and <xref:System.Windows.Ink.ApplicationGesture> gestures.  \n  \n [!code-vb[GestureControl#4](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#4)]\n [!code-cs[GestureControl#4](~/add/codesnippet/csharp/GestureControl/Gesture.cs#4)]"
  syntax:
    content: public GestureRecognizer (System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture> enabledApplicationGestures);
    parameters:
    - id: enabledApplicationGestures
      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
      description: "Uma matriz do tipo <xref href=&quot;System.Windows.Ink.ApplicationGesture&quot;> </xref> que especifica os gestos de aplicação a <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> reconhecerá."
  overload: System.Windows.Ink.GestureRecognizer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.Dispose
  id: Dispose
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: Dispose()
  nameWithType: GestureRecognizer.Dispose()
  fullName: System.Windows.Ink.GestureRecognizer.Dispose()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref>."
  remarks: "É possível chamar Dispose quando acabar de utilizar <xref:System.Windows.Ink.GestureRecognizer>.</xref:System.Windows.Ink.GestureRecognizer> O método de Dispose deixa o <xref:System.Windows.Ink.GestureRecognizer>num Estado não utilizável.</xref:System.Windows.Ink.GestureRecognizer> Por conseguinte, depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.Windows.Ink.GestureRecognizer>para que o recoletor de lixo pode reclame a memória que a <xref:System.Windows.Ink.GestureRecognizer>foi occupying.</xref:System.Windows.Ink.GestureRecognizer> </xref:System.Windows.Ink.GestureRecognizer>      > [!NOTE] > Sempre chamada eliminar antes de libertar a última referência <xref:System.Windows.Ink.GestureRecognizer>.</xref:System.Windows.Ink.GestureRecognizer> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Windows.Ink.GestureRecognizer>do objeto `Finalize` método.</xref:System.Windows.Ink.GestureRecognizer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Ink.GestureRecognizer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.GetEnabledGestures
  id: GetEnabledGestures
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: GetEnabledGestures()
  nameWithType: GestureRecognizer.GetEnabledGestures()
  fullName: System.Windows.Ink.GestureRecognizer.GetEnabledGestures()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Obtém os gestos que os <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> reconhece."
  remarks: ''
  example:
  - "The following example demonstrates how to get the application gestures that a <xref:System.Windows.Ink.GestureRecognizer> recognizes.  \n  \n [!code-vb[GestureControl#6](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#6)]\n [!code-cs[GestureControl#6](~/add/codesnippet/csharp/GestureControl/Gesture.cs#6)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture> GetEnabledGestures ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}
      description: "Uma matriz do tipo <xref href=&quot;System.Windows.Ink.ApplicationGesture&quot;> </xref> que contenha gestos o <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> está definido para reconhecer."
  overload: System.Windows.Ink.GestureRecognizer.GetEnabledGestures*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  id: IsRecognizerAvailable
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: IsRecognizerAvailable
  nameWithType: GestureRecognizer.IsRecognizerAvailable
  fullName: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Obtém um valor boleano que indica se o reconhecedor gesto está disponível no sistema do utilizador."
  remarks: ''
  example:
  - "The following example demonstrates how to determine whether the gesture recognizer is available before calling the <xref:System.Windows.Ink.GestureRecognizer.Recognize%2A> method.  \n  \n [!code-vb[GestureControl#8](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#8)]\n [!code-cs[GestureControl#8](~/add/codesnippet/csharp/GestureControl/Gesture.cs#8)]"
  syntax:
    content: public bool IsRecognizerAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o componente de reconhecimento estiver disponível. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)
  id: Recognize(System.Windows.Ink.StrokeCollection)
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: Recognize(StrokeCollection)
  nameWithType: GestureRecognizer.Recognize(StrokeCollection)
  fullName: System.Windows.Ink.GestureRecognizer.Recognize(StrokeCollection)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Procura gestos especificado no <xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref>."
  remarks: "A matriz devolvida pelo método Recognize está ordenada pelo <xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=fullName>propriedade.</xref:System.Windows.Ink.GestureRecognitionResult.RecognitionConfidence%2A?displayProperty=fullName> Por exemplo, Recognize pode devolver uma matriz de <xref:System.Windows.Ink.GestureRecognitionResult>com os seguintes valores: | Índice | ApplicationGesture | RecognitionConfidence |   |-----------|------------------------|---------------------------|   |&0; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|   |&1; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|   |&2; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|   |&3; | <xref:System.Windows.Ink.ApplicationGesture>| <xref:System.Windows.Ink.RecognitionConfidence>|       Isto significa que o <xref:System.Windows.Ink.GestureRecognizer>reconhece que é muito provável que o <xref:System.Windows.Ink.Stroke>é uma marca de verificação, relativamente provável que o <xref:System.Windows.Ink.Stroke>não um gesto de e provavelmente não em todas as que o <xref:System.Windows.Ink.Stroke>é um curlicue ou um duplo curlicue.</xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.GestureRecognizer> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> </xref:System.Windows.Ink.GestureRecognitionResult>      > [!NOTE] > Reconhece o método pode devolver uma matriz com <xref:System.Windows.Ink.ApplicationGesture>num superior <xref:System.Windows.Ink.RecognitionConfidence>que outros gestos de aplicação.</xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.ApplicationGesture> Isto significa que é mais provável que <xref:System.Windows.Ink.Stroke>é não gesto, por oposição a um gesto de que tem um inferior <xref:System.Windows.Ink.RecognitionConfidence>.</xref:System.Windows.Ink.RecognitionConfidence> </xref:System.Windows.Ink.Stroke>"
  example:
  - "The following example demonstrates how to determine whether a <xref:System.Windows.Ink.Stroke> is a <xref:System.Windows.Ink.ApplicationGesture> gesture.  \n  \n [!code-vb[GestureControl#8](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#8)]\n [!code-cs[GestureControl#8](~/add/codesnippet/csharp/GestureControl/Gesture.cs#8)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult> Recognize (System.Windows.Ink.StrokeCollection strokes);
    parameters:
    - id: strokes
      type: System.Windows.Ink.StrokeCollection
      description: "O <xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref> para procurar gestos."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.GestureRecognitionResult}
      description: "Uma matriz do tipo <xref href=&quot;System.Windows.Ink.GestureRecognitionResult&quot;> </xref> que contém a aplicação gestos que os <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> reconhecido."
  overload: System.Windows.Ink.GestureRecognizer.Recognize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  id: SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Ink.GestureRecognizer
  langs:
  - csharp
  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Define os gestos de aplicação que o <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> reconhece."
  remarks: ''
  example:
  - "The following example demonstrates how to create a <xref:System.Windows.Ink.GestureRecognizer> that recognizes only the <xref:System.Windows.Ink.ApplicationGesture>, <xref:System.Windows.Ink.ApplicationGesture>, and <xref:System.Windows.Ink.ApplicationGesture> gestures.  \n  \n [!code-vb[GestureControl#5](~/add/codesnippet/visualbasic/GestureControl/Gesture.vb#5)]\n [!code-cs[GestureControl#5](~/add/codesnippet/csharp/GestureControl/Gesture.cs#5)]"
  syntax:
    content: public void SetEnabledGestures (System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture> applicationGestures);
    parameters:
    - id: applicationGestures
      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
      description: "Uma matriz do tipo <xref href=&quot;System.Windows.Ink.ApplicationGesture&quot;> </xref> que especifica os gestos de aplicação que quer o <xref href=&quot;System.Windows.Ink.GestureRecognizer&quot;> </xref> para reconhecer."
  overload: System.Windows.Ink.GestureRecognizer.SetEnabledGestures*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.Ink.GestureRecognizer.#ctor
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GestureRecognizer()
  nameWithType: GestureRecognizer.GestureRecognizer()
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer()
- uid: System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GestureRecognizer(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.GestureRecognizer(IEnumerable<ApplicationGesture>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ApplicationGesture>
  nameWithType: IEnumerable<ApplicationGesture>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.ApplicationGesture>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Ink.ApplicationGesture>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.ApplicationGesture
    name: ApplicationGesture
    nameWithType: ApplicationGesture
    fullName: ApplicationGesture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Ink.GestureRecognizer.Dispose
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Dispose()
  nameWithType: GestureRecognizer.Dispose()
  fullName: System.Windows.Ink.GestureRecognizer.Dispose()
- uid: System.Windows.Ink.GestureRecognizer.GetEnabledGestures
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GetEnabledGestures()
  nameWithType: GestureRecognizer.GetEnabledGestures()
  fullName: System.Windows.Ink.GestureRecognizer.GetEnabledGestures()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.ApplicationGesture}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ApplicationGesture>
  nameWithType: ReadOnlyCollection<ApplicationGesture>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Ink.ApplicationGesture>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.ApplicationGesture
    name: ApplicationGesture
    nameWithType: ApplicationGesture
    fullName: ApplicationGesture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: IsRecognizerAvailable
  nameWithType: GestureRecognizer.IsRecognizerAvailable
  fullName: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Recognize(StrokeCollection)
  nameWithType: GestureRecognizer.Recognize(StrokeCollection)
  fullName: System.Windows.Ink.GestureRecognizer.Recognize(StrokeCollection)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.GestureRecognitionResult}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<GestureRecognitionResult>
  nameWithType: ReadOnlyCollection<GestureRecognitionResult>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Ink.GestureRecognitionResult
    name: GestureRecognitionResult
    nameWithType: GestureRecognitionResult
    fullName: GestureRecognitionResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Ink.StrokeCollection
  parent: System.Windows.Ink
  isExternal: false
  name: StrokeCollection
  nameWithType: StrokeCollection
  fullName: System.Windows.Ink.StrokeCollection
- uid: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: SetEnabledGestures(IEnumerable<ApplicationGesture>)
  nameWithType: GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
  fullName: System.Windows.Ink.GestureRecognizer.SetEnabledGestures(IEnumerable<ApplicationGesture>)
- uid: System.Windows.Ink.GestureRecognizer.#ctor*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GestureRecognizer
  nameWithType: GestureRecognizer.GestureRecognizer
- uid: System.Windows.Ink.GestureRecognizer.Dispose*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Dispose
  nameWithType: GestureRecognizer.Dispose
- uid: System.Windows.Ink.GestureRecognizer.GetEnabledGestures*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: GetEnabledGestures
  nameWithType: GestureRecognizer.GetEnabledGestures
- uid: System.Windows.Ink.GestureRecognizer.IsRecognizerAvailable*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: IsRecognizerAvailable
  nameWithType: GestureRecognizer.IsRecognizerAvailable
- uid: System.Windows.Ink.GestureRecognizer.Recognize*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: Recognize
  nameWithType: GestureRecognizer.Recognize
- uid: System.Windows.Ink.GestureRecognizer.SetEnabledGestures*
  parent: System.Windows.Ink.GestureRecognizer
  isExternal: false
  name: SetEnabledGestures
  nameWithType: GestureRecognizer.SetEnabledGestures
