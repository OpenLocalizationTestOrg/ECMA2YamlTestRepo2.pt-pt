### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "Fornece um serviço de escuta simple que direciona o registo de saída para o ficheiro."
  remarks: "A classe de FileLogTraceListener fornece capacidades de manutenção automática para arquivar os ficheiros de registo, conforme necessário, numa base diária ou por aplicação. Esta funcionalidade de arquivo automática ajuda a reduzir as responsabilidades de manutenção de programadores e administradores.       Uma instância de FileLogTraceListener pode ser adicionada para o <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>ou <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>coleções para redirecionamento de saída de registo para um ficheiro de texto.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> As instâncias desta classe também podem ser adicionadas a `My.Application.Log` ou `My.Log` (para aplicações Web) no [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] aplicações. Para obter mais informações, consulte [explicação passo a passo: alterar My.Application.Log escreve informações onde](~/add/includes/ajax-current-ext-md.md) `.` são as principais funcionalidades desta classe: 1.  *A funcionalidade arquivo*. Os ficheiros de registo gerados por esta classe são denominados, de acordo com o nome de base e a data, juntamente com um número para distinguir o ficheiro de registo de versões sucessivas do registo. São criados novos ficheiros de registo de forma como necessário.           O formulário explícito do nome do ficheiro é `baseName`[-`dateStamp`] [-`version`]. log, em que: - `baseName` parte é o nome do registo fundamentais, especificado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          -O `dateStamp` parte tem o formato &quot;Aaaa-MM-DD&quot;, e ele é apresentado quando <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          -Se necessitar de mais do que um ficheiro de registo com o mesmo `baseName` e `dateStamp`, a `version` parte de um positivos `Integer`, é adicionada ao nome do ficheiro.      2.  *Várias instâncias de classe*. Se uma instância da classe FileLogTraceListener escreve num ficheiro que está a ser utilizado:-a classe as partilhas de ficheiro que está a ser utilizado por outra instância da classe FileLogTraceListener no mesmo processo.          -Classe cria um novo ficheiro de registo utilizando o seguinte nome disponível se o ficheiro está a ser utilizado por outro processo.      3.  *Segurança de thread*. A classe de FileLogTraceListener é seguros para threads. Isto permite-lhe em segurança escrever mensagens no registo de vários threads sem utilizar as bloqueios.       **Localização do ficheiro de registo** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>propriedade demora um <xref:Microsoft.VisualBasic.Logging.LogFileLocation>enumeração para especificar um dos diretórios de típicos para escrever o ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -Para escrever o registo para outra localização, defina o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>propriedade para essa localização.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **Nome de ficheiro de registo** -o nome de base para o ficheiro de registo é especificado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -O nome de ficheiro de registo atual pode ser lida a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Porque deriva de várias outras propriedades e o estado atual dos registos no sistema de ficheiros.       **Iniciar manutenção** -uma frequência mínima para a criação de novos ficheiros de registo é determinada pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Quando o valor é <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>, é criado um novo ficheiro de registo pelo menos uma vez cada dia ou semana e um carimbo de data está incorporado no <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nome.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -O tamanho máximo (em bytes) do ficheiro de registo é determinado pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Se este tamanho excede o tamanho de ficheiro de registo, escritas no registo de mensagens adicionais são rejeitados e, consoante o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriedade, é emitida uma exceção.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>propriedade determina a quantidade de espaço livre (em bytes) tem de estar disponível.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Isto ajuda a garantir que a classe de FileLogTraceListener não irá consumir todo o espaço em disco disponível. Utilize o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriedade para especificar o comportamento do registo de escreve quando existirem menos de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>bytes livres.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **Definições de saída do ficheiro de registo** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>propriedade especifica se o fluxo subjacente deve ser descarregado automaticamente após cada operação de escrita para o ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      -O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>propriedade especifica se pretende acrescentar mensagens para o ficheiro de registo atual, se permitido ou escrevê-las para um novo ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      -O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>propriedade especifica a cadeia a utilizar para delimiting os campos dentro de uma mensagem de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      -O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>propriedade especifica a codificação a utilizar quando criar um novo ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **Saída do ficheiro de registo** - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>e <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>métodos escreverem mensagens no ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Verifique estes métodos de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>propriedade, juntamente com quaisquer registos existentes com o mesmo nome de base para determinar se deve ser criado um novo registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      -O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>método esvaziamentos da quaisquer mensagens actualmente na memória intermédia de saída para o ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      -O <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>método fecha o ficheiro de registo para que possa ser utilizado por outros processos.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **Ativar a saída** tem de ativar o rastreio ou utilizar um serviço de escuta de rastreio de depuração. A seguinte sintaxe é específico do compilador. Se utilizar em compiladores que não sejam c# ou [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], consulte a documentação para o compilador.      -Para ativar a depuração em c#, adicione o `/d:DEBUG` sinalizador para a linha de comandos do compilador ao compilar o código, ou pode adicionar `#define DEBUG` na parte superior do seu ficheiro. No [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], adicione o `/d:DEBUG=True` sinalizador para a linha de comandos do compilador.      -Para ativar o rastreio em c#, adicione o `/d:TRACE` sinalizador para a linha de comandos do compilador ao compilar o código ou adicionar `#define TRACE` na parte superior do seu ficheiro. No [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], adicione o `/d:TRACE=True` sinalizador para a linha de comandos do compilador.       Para definir o nível do seu serviço de escuta, edite o ficheiro de configuração para a sua aplicação. Dentro deste ficheiro, pode adicionar um serviço de escuta, defina o respetivo tipo e definir os respetivos parâmetros, remover um serviço de escuta ou limpar todos os serviços de escuta anteriormente definidos pela aplicação. O ficheiro de configuração deve ser formatado semelhante ao seguinte exemplo.       Para este exemplo ser executada, tem de fornecer o nome de assemblagem totalmente qualificado. Para obter informações sobre como obter o nome de assemblagem completamente qualificado, consulte [os nomes de assemblagem](~/add/includes/ajax-current-ext-md.md).      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> classe com o nome predefinido."
  remarks: "Este método define o nome de instância do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe FileLogTraceListener.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Pode aceder ao nome de instância através de <xref:System.Diagnostics.TraceListener.Name%2A>propriedade.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> classe com o nome fornecido."
  remarks: "Este método define o nome de instância do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>de classe para `name`.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Pode aceder a considerar-se o nome da instância de <xref:System.Diagnostics.TraceListener.Name%2A>propriedade.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O nome do objeto de instância."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Determina se deve acrescentar a saída para o ficheiro atual ou gravá-lo para um novo ficheiro."
  remarks: "Quando a propriedade de acréscimo é `False`, o resultado é escrito para um novo ficheiro. Quando a propriedade é `True`, o resultado é acrescentado ao ficheiro atual, a menos que:-o ficheiro de saída está bloqueado por outro processo. Nesta situação, é criado um novo ficheiro de registo com um número de versão que está incorporado no <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nome.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -O tamanho atual do ficheiro é maior que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>propriedade permite.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Nesta situação, as mensagens adicionais são rejeitados e, consoante o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriedade, é emitida uma exceção.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -O nome do ficheiro existente está desatualizado, de acordo com a agenda de criação de registo especificada pelo <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Nesta situação, é criado um novo ficheiro de registo e o carimbo de data está incorporado no <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nome.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, com <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> que indica que o resultado é acrescentado ao ficheiro atual, e <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> que indica que o resultado é escrito para um novo ficheiro. A predefinição para esta propriedade é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Indica se é ou não a escrita no fluxo de ficheiros de registo esvaziamentos da memória intermédia."
  remarks: "O `False` definição para a propriedade AutoFlush fornece o melhor desempenho para a maioria das aplicações, porque é mais eficiente para escrever várias mensagens para o ficheiro de registo de uma só vez. Pode utilizar o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>memória intermédia de saída do método para esvaziar todas as mensagens atualmente no ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Também pode utilizar o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>método, o que implicitamente esvaziamentos da sequência antes de fechar o ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, com <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> que indica que o fluxo é descarregado após cada operação de escrita; caso contrário, as entradas de registo são colocado na memória intermédia e escritas de forma mais eficiente. A predefinição para esta propriedade é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define o nome de base para os ficheiros de registo, que é utilizado para criar o nome completo do ficheiro de registo."
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O nome de base para os ficheiros de registo. A predefinição é o nome da aplicação produto."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Fecha o fluxo subjacente para o ficheiro de registo atual e liberta os recursos associados com o fluxo actual."
  remarks: "Não é necessário chamar o método fechar explicitamente, porque o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe gere o steam subjacente.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define o diretório de ficheiros de registo quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>propriedade está definida como <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "Quando a propriedade CustomLocation é definida, também define a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>propriedade <xref:Microsoft.VisualBasic.Logging.LogFileLocation>.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>       A propriedade CustomLocation irá gerar uma exceção se o diretório não pode ser resolvido."
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, que é o nome do diretório do ficheiro de registo. A definição predefinida para esta propriedade é do diretório do utilizador para dados de aplicação."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define o delimitador utilizado para delimitar os campos dentro de uma mensagem de registo."
  remarks: "A propriedade delimitador permite-lhe alterar o delimitador de predefinição."
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, que é o delimitador utilizado para os campos dentro de uma mensagem de registo. A definição predefinida para esta propriedade é o caráter de SEPARADOR."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Determina o que fazer quando escrever no ficheiro de registo e há menos espaço livre em disco disponível à especificada a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "Quando a propriedade DiskSpaceExhaustedBehavior está definida como <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, as mensagens de registo são automaticamente eliminadas se não existir espaço suficiente em disco reservado.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> Este é o comportamento predefinido e impede a aplicações simples de falhar se o disco obtém demasiado completo.       Mais robustas aplicações podem definir a propriedade de DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>e adicione `Try...Catch` blocos em torno de todo o código que escreve no registo.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. Determina o que fazer quando tentar escrever no registo de ficheiros e há menos espaço livre em disco disponível à especificada a <> </> *> propriedade, ou se o tamanho de ficheiro de registo é maior que o <> </> *> permite que a propriedade. O valor predefinido é <xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Fecha o fluxo subjacente e opcionalmente liberta os recursos geridos."
  remarks: "Quando o `disposing` parâmetro é `True`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>referências.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Este método invoca o `Dispose` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>liberta recursos geridos e; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> versões unmanaged apenas recursos."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define a codificação a utilizar quando criar um novo ficheiro de registo."
  remarks: "Quando acrescentar texto para um ficheiro de registo existente, a codificação para esse ficheiro é utilizada em vez da codificação especificado pela propriedade codificação."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, que é a codificação a utilizar quando criar um novo ficheiro de registo.</xref:System.Text.Encoding> O valor predefinido desta propriedade é <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Esvaziamentos do fluxo subjacente que escreve no ficheiro de registo atual."
  remarks: "Utilize o método de remoção para escrever buffer todos os dados para o ficheiro de registo atual."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém o nome completo do ficheiro de registo atual."
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, que é o nome completo do ficheiro de registo atual."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém os atributos de configuração XML personalizados suportados pelo serviço de escuta de rastreio."
  remarks: "Os atributos personalizados <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>podem ser utilizados no ficheiro XML de configuração para controlar o comportamento de uma ocorrência da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>classe.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Utilizar qualquer outro atributo faz com que uma exceção de configuração."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>matriz que contém os atributos de configuração XML reconhecidos por este serviço de escuta."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Indica se é ou não o nome do anfitrião da máquina de registo deve ser incluído na saída."
  remarks: "Utilize a propriedade para configurar o comportamento do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>e <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>métodos.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Utilizar <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o identificador de anfitrião deve ser incluído; caso contrário, utilize <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define a localização para os ficheiros de registo."
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>, que é a localização para o ficheiro de registo. O valor predefinido é <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Determina qual data para incluir os nomes dos ficheiros de registo."
  remarks: "Atribua um do <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>valores de enumeração para a propriedade LogFileCreationSchedule para especificar que data para incluir os nomes dos ficheiros de registo.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       O formato da data é aaaa-MM-DD. Para obter mais informações sobre o formato do nome do ficheiro de registo, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      | **LogFileCreationSchedule valor**|**data no nome do ficheiro de registo**|   |---------------------------------------|-----------------------------------|   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Incluir a data atual no nome do ficheiro de registo. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Não incluir a data no nome do ficheiro de registo. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Incluir o primeiro dia da semana atual no nome do ficheiro de registo.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> A semana começa no Sábado. |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. Isto indica que data para incluir os nomes de ficheiro de registo. O valor predefinido é <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define o tamanho máximo permitido de ficheiro de registo, em bytes."
  remarks: "Utilize esta propriedade para se certificar de que os ficheiros de registo não aumente demasiado grandes.       Se o registo de tamanho de ficheiro (em bytes) é maior do que o valor desta propriedade, em seguida, quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>tentativas de classe para escrever uma mensagem para registo, a mensagem é rejeitada e a falha é automática ou uma exceção é emitida dependendo do valor da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Caso contrário, a mensagem é escrito no registo, se a quantidade de espaço livre em disco (em bytes) é inferior ao <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Este é o tamanho máximo permitido-ficheiro de registo, em bytes. O valor predefinido é 5000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Quando esta propriedade está definida para um valor inferior a 1000."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Obtém ou define a quantidade de espaço livre em disco, em bytes, necessário antes das mensagens podem ser escritas para o ficheiro de registo."
  remarks: "Utilize esta propriedade para se certificar de que os ficheiros de registo não completamente preencher o disco.       Se a quantidade de disco livre espaço (em bytes) é menor que o valor desta propriedade, em seguida, quando o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>tentativas de classe para escrever uma mensagem para registo, a mensagem é rejeitada e a falha é automática ou uma exceção é emitida dependendo do valor da <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriedade.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Caso contrário, a mensagem é escrita no registo, se o tamanho do ficheiro de registo (em bytes) for superior a <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Esta é a quantidade de espaço livre em disco necessário. O valor predefinido é 10000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Quando esta propriedade está definida como um valor inferior a 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Escreve informações de rastreio, um objeto de dados e informações de evento para o ficheiro de saída ou fluxo."
  remarks: "Este método: 1.  Formata as informações de contexto e dados de saída.      2.  Cria um novo ficheiro de registo, se necessário.      3.  Escreve as informações para o ficheiro de registo.       Para obter mais informações sobre a criação de novos ficheiros de registo, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       A tabela seguinte lista os campos de saída na ordem aparecem. Os campos são delimitados pela cadeia de que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>propriedade especifica e seguido de um terminador de linha.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**condição de saída**|**Descrição**|   |---------------|--------------------------|---------------------|   | `source`| Sempre | O valor de `name`. |   | `severity`| Sempre | O nome de valor de enumeração de `eventType`. |   | `id`| Sempre | A representação de cadeia de `id`. |   | `message`| Sempre | A representação de cadeia de `data`. |   | `callStack`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.DateTime%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ProcessID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ThreadID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `HostName`| Quando a propriedade de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>é `True`. | O nome do computador. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> processar o ID de objeto que contém o atual, ID de thread e informações de rastreio da pilha."
    - id: source
      type: System.String
      description: "Nome da origem de rastreio que invocar este método."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Um do <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores de enumeração."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: data
      type: System.Object
      description: "Os dados de rastreio para emitir."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Escritas de rastreio informações, uma matriz de objetos de dados e informações de evento para o ficheiro de saída ou fluxo."
  remarks: "Este método: 1.  Formata as informações de contexto e dados de saída, 2.  Cria um novo registo de ficheiro, se necessário, 3.  Escreve as informações para o ficheiro de registo.       Para obter mais informações sobre a criação de novos ficheiros de registo, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Esta tabela lista os campos de saída na ordem aparecem. Os campos são delimitados pela cadeia de que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>propriedade especifica e seguido de um terminador de linha.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**condição de saída**|**Descrição**|   |---------------|--------------------------|---------------------|   | `source`| Sempre | O valor de `name`. |   | `severity`| Sempre | O nome de valor de enumeração de `eventType`. |   | `id`| Sempre | A representação de cadeia de `id`. |   | `message`| Sempre | A cadeia constituídas pela representação de cadeia de cada elemento `data`, cada separados por <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>. |   | `callStack`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.DateTime%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> A cultura invariável é utilizada para a conversão de string. |   | `ProcessID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ThreadID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `HostName`| Quando a propriedade de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>é `True`. | O nome do computador. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> processar o ID de objeto que contém o atual, ID de thread e informações de rastreio da pilha."
    - id: source
      type: System.String
      description: "O nome da origem de rastreio que invocar este método."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Um do <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores de enumeração."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: data
      type: System.Object[]
      description: "Uma matriz de objetos para emitir como dados."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Escritas de rastreio informações, a informações de mensagem e eventos para o ficheiro de saída ou fluxo."
  remarks: "Este método: 1.  Formata as informações de contexto e dados de saída.      2.  Cria um novo ficheiro de registo, se necessário.      3.  Escreve as informações para o ficheiro de registo.       Para obter mais informações sobre a criação de novos ficheiros de registo, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Esta tabela lista os campos de saída pela ordem em que aparecem. Os campos são delimitados pela cadeia de que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>propriedade especifica e seguido de um terminador de linha.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**condição de saída**|**Descrição**|   |---------------|--------------------------|---------------------|   | `source`| Sempre. | O valor de `name`. |   | `severity`| Sempre. | O nome de valor de enumeração de `eventType`. |   | `id`| Sempre. | A representação de cadeia de `id`. |   | `message`| Sempre. | O valor de `message`. |   | `callStack`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.DateTime%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ProcessID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ThreadID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `HostName`| Quando a propriedade de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>é `True`. | O nome do computador. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> processar o ID de objeto que contém o atual, ID de thread e informações de rastreio da pilha."
    - id: source
      type: System.String
      description: "Nome da origem de rastreio que invocar este método."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Um do <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores de enumeração."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: message
      type: System.String
      description: "Uma mensagem para escrita."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Escritas de rastreio informações, uma matriz de objetos e informações de evento para o ficheiro de saída ou fluxo formatada."
  remarks: "Este método: 1.  Formata as informações de contexto e dados de saída.      2.  Cria um novo um novo ficheiro de registo, se necessário.      3.  Escreve as informações para o ficheiro de registo.       Para obter mais informações sobre a criação de novo ficheiro de registo, consulte <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Esta tabela lista os campos de saída pela ordem em que aparecem. Os campos são delimitados pela cadeia de que o <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>propriedade especifica e seguido por um terminador de linha.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Campo**|**condição de saída**|**Descrição**|   |---------------|--------------------------|---------------------|   | `source`| Sempre | O valor de `name`. |   | `severity`| Sempre | O nome de valor de enumeração de `eventType`. |   | `id`| Sempre | A representação de cadeia de `id`. |   | `message`| Sempre | Os dados no `args` formatado com o `format` cadeia e utilizando a cultura invariável para conversões de cadeia. |   | `callStack`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.DateTime%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ProcessID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `ThreadID`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A propriedade <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Quando o sinalizador de <xref:System.Diagnostics.TraceOptions>está definido na propriedade <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | A representação de cadeia do <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>propriedade `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> A cultura invariável é utilizada para a conversão de string. |   | `HostName`| Quando a propriedade de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>é `True`. | O nome do computador. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> processar o ID de objeto que contém o atual, ID de thread e informações de rastreio da pilha."
    - id: source
      type: System.String
      description: "Nome da origem de rastreio que invocar este método."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Um do <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores de enumeração."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: format
      type: System.String
      description: "Uma cadeia de formato contém zero ou mais itens de formato, que correspondem a objetos no `args` matriz."
    - id: args
      type: System.Object[]
      description: "Um <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> matriz que contenha zero ou mais objetos para formatar."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Escreve uma mensagem verbatim disco, sem quaisquer informações de contexto adicional."
  remarks: "O método de escrita escreve uma mensagem específica para o ficheiro de registo, sem quaisquer informações de contexto adicional.       Utilize um do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>métodos para incluir as informações de contexto no resultado do registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A mensagem personalizada de escrita."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Escreve uma mensagem verbatim disco, seguido de terminador de linha atual, sem quaisquer informações de contexto adicional."
  remarks: "O método WriteLine escreve uma mensagem específica para o ficheiro de registo, sem quaisquer informações de contexto adicional.       Utilize um do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>métodos para incluir as informações de contexto no resultado do registo.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A mensagem personalizada de escrita."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
