### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.PeerNode
  id: PeerNode
  children:
  - System.ServiceModel.PeerNode.IsOnline
  - System.ServiceModel.PeerNode.MessagePropagationFilter
  - System.ServiceModel.PeerNode.Offline
  - System.ServiceModel.PeerNode.Online
  - System.ServiceModel.PeerNode.Port
  - System.ServiceModel.PeerNode.RefreshConnection
  - System.ServiceModel.PeerNode.ToString
  langs:
  - csharp
  name: PeerNode
  nameWithType: PeerNode
  fullName: System.ServiceModel.PeerNode
  type: Class
  summary: "Defines the instance of of a peer node used by an application participating in a specific peer mesh."
  remarks: "A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.       If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.       If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding."
  syntax:
    content: 'public sealed class PeerNode : System.ServiceModel.IOnlineStatus'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.IOnlineStatus
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.IsOnline
  id: IsOnline
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: IsOnline
  nameWithType: PeerNode.IsOnline
  fullName: System.ServiceModel.PeerNode.IsOnline
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh."
  remarks: "&quot;Online&quot; indicates that a peer node has available neighbor nodes. &quot;Offline&quot; indicates that a peer node has no available neighbors."
  syntax:
    content: public bool IsOnline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the peer node is online; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.PeerNode.IsOnline*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.MessagePropagationFilter
  id: MessagePropagationFilter
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: MessagePropagationFilter
  nameWithType: PeerNode.MessagePropagationFilter
  fullName: System.ServiceModel.PeerNode.MessagePropagationFilter
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets and sets a custom filter for messages received over the peer channel."
  remarks: "The message filter must be a derived type and should be recast to that type to use any custom features defined on it."
  syntax:
    content: public System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter { get; set; }
    return:
      type: System.ServiceModel.PeerMessagePropagationFilter
      description: "<xref href=&quot;System.ServiceModel.PeerMessagePropagationFilter&quot;></xref> that contains a custom message filter."
  overload: System.ServiceModel.PeerNode.MessagePropagationFilter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No channel is open for listening."
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.Offline
  id: Offline
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: Offline
  nameWithType: PeerNode.Offline
  fullName: System.ServiceModel.PeerNode.Offline
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Signals when the peer node goes offline from the peer mesh."
  remarks: "An offline peer node has no neighbor nodes within the peer mesh to which it can connect."
  syntax:
    content: public event EventHandler Offline;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.Online
  id: Online
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: Online
  nameWithType: PeerNode.Online
  fullName: System.ServiceModel.PeerNode.Online
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Signals when a peer node comes online within the peer mesh."
  remarks: "An online peer node has at least one neighbor node within the peer mesh to which it is connected."
  syntax:
    content: public event EventHandler Online;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.Port
  id: Port
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: Port
  nameWithType: PeerNode.Port
  fullName: System.ServiceModel.PeerNode.Port
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets the network port on which the peer node is listening."
  syntax:
    content: public int Port { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32> that specifies the network port on which the peer node is listening."
  overload: System.ServiceModel.PeerNode.Port*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No channel is open for listening."
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.RefreshConnection
  id: RefreshConnection
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: RefreshConnection()
  nameWithType: PeerNode.RefreshConnection()
  fullName: System.ServiceModel.PeerNode.RefreshConnection()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Refreshes the connection with the peer mesh."
  syntax:
    content: public void RefreshConnection ();
    parameters: []
  overload: System.ServiceModel.PeerNode.RefreshConnection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No channel is open for listening."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The refresh operation timed out."
  - type: System.ServiceModel.CommunicationException
    commentId: T:System.ServiceModel.CommunicationException
    description: "A network error occurred during the refresh attempt."
  - type: System.ServiceModel.CommunicationObjectAbortedException
    commentId: T:System.ServiceModel.CommunicationObjectAbortedException
    description: "The connection aborted during the refresh attempt."
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "The connection faulted during the refresh attempt."
  platform:
  - net462
- uid: System.ServiceModel.PeerNode.ToString
  id: ToString
  parent: System.ServiceModel.PeerNode
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerNode.ToString()
  fullName: System.ServiceModel.PeerNode.ToString()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Provides a string representation of a peer node."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.String> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type."
  overload: System.ServiceModel.PeerNode.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ServiceModel.CommunicationException
  isExternal: true
  name: System.ServiceModel.CommunicationException
- uid: System.ServiceModel.CommunicationObjectAbortedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectAbortedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.PeerNode.IsOnline
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: IsOnline
  nameWithType: PeerNode.IsOnline
  fullName: System.ServiceModel.PeerNode.IsOnline
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.PeerNode.MessagePropagationFilter
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: MessagePropagationFilter
  nameWithType: PeerNode.MessagePropagationFilter
  fullName: System.ServiceModel.PeerNode.MessagePropagationFilter
- uid: System.ServiceModel.PeerMessagePropagationFilter
  parent: System.ServiceModel
  isExternal: false
  name: PeerMessagePropagationFilter
  nameWithType: PeerMessagePropagationFilter
  fullName: System.ServiceModel.PeerMessagePropagationFilter
- uid: System.ServiceModel.PeerNode.Offline
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: Offline
  nameWithType: PeerNode.Offline
  fullName: System.ServiceModel.PeerNode.Offline
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ServiceModel.PeerNode.Online
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: Online
  nameWithType: PeerNode.Online
  fullName: System.ServiceModel.PeerNode.Online
- uid: System.ServiceModel.PeerNode.Port
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: Port
  nameWithType: PeerNode.Port
  fullName: System.ServiceModel.PeerNode.Port
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.PeerNode.RefreshConnection
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: RefreshConnection()
  nameWithType: PeerNode.RefreshConnection()
  fullName: System.ServiceModel.PeerNode.RefreshConnection()
- uid: System.ServiceModel.PeerNode.ToString
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: ToString()
  nameWithType: PeerNode.ToString()
  fullName: System.ServiceModel.PeerNode.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.PeerNode.IsOnline*
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: IsOnline
  nameWithType: PeerNode.IsOnline
- uid: System.ServiceModel.PeerNode.MessagePropagationFilter*
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: MessagePropagationFilter
  nameWithType: PeerNode.MessagePropagationFilter
- uid: System.ServiceModel.PeerNode.Port*
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: Port
  nameWithType: PeerNode.Port
- uid: System.ServiceModel.PeerNode.RefreshConnection*
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: RefreshConnection
  nameWithType: PeerNode.RefreshConnection
- uid: System.ServiceModel.PeerNode.ToString*
  parent: System.ServiceModel.PeerNode
  isExternal: false
  name: ToString
  nameWithType: PeerNode.ToString
