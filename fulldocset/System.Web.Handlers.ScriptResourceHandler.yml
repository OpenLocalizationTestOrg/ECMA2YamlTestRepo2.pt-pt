### YamlMime:ManagedReference
items:
- uid: System.Web.Handlers.ScriptResourceHandler
  id: ScriptResourceHandler
  children:
  - System.Web.Handlers.ScriptResourceHandler.#ctor
  - System.Web.Handlers.ScriptResourceHandler.IsReusable
  - System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  - System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  - System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: ScriptResourceHandler
  nameWithType: ScriptResourceHandler
  fullName: System.Web.Handlers.ScriptResourceHandler
  type: Class
  summary: "Provides an HTTP handler for processing requests for script files that are embedded as resources in an assembly. This class cannot be inherited."
  remarks: "The ScriptResourceHandler class processes all requests for embedded script files that are referenced through the <xref:System.Web.UI.ScriptManager> class. The ScriptResourceHandler object retrieves the embedded script library and any localized resources for the script library. If the <xref:System.Web.UI.ScriptReference.NotifyScriptLoaded%2A> property is set to `true`, the ScriptResourceHandler object adds a call at the end of the script file to the  method of the  object.       By default, the ScriptResourceHandler class compresses and caches embedded script files for Internet Explorer 7. You can turn compression and caching off through the <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A> and <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A> properties of the <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection> class. You set these properties in the Web.config file.      > [!NOTE] >  You can turn compression on for earlier versions of Internet Explorer by creating an alias for Internet Explorer 7 in the  section of the Web.config file. You then programmatically set the value of the <xref:System.Web.UI.Page.ClientTarget%2A> property to that alias. However, we do not recommend this approach because it will cause a decrease in performance and it introduces a high risk of errors.       The default Web.config file for AJAX-enabled ASP.NET Web applications adds the ScriptResourceHandler as a handler. You can manually add the handler to your application by including the following element in the Web.config file:      ```   <httpHandlers>     <add verb=&quot;GET,HEAD&quot; path=&quot;ScriptResource.axd&quot;        type=&quot;System.Web.Handlers.ScriptResourceHandler,        System.Web.Extensions, Version=1.0.61025.0, Culture=neutral,        PublicKeyToken=31bf3856ad364e35&quot; validate=&quot;false&quot; />   </httpHandlers>   ```"
  syntax:
    content: 'public class ScriptResourceHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor
  id: '#ctor'
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: ScriptResourceHandler()
  nameWithType: ScriptResourceHandler.ScriptResourceHandler()
  fullName: System.Web.Handlers.ScriptResourceHandler.ScriptResourceHandler()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Handlers.ScriptResourceHandler&quot;></xref> class."
  syntax:
    content: public ScriptResourceHandler ();
    parameters: []
  overload: System.Web.Handlers.ScriptResourceHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable
  id: IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "When overridden in a derived class, gets a value that indicates whether another request can use the instance of the class."
  syntax:
    content: protected virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.Handlers.ScriptResourceHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "When overridden in a derived class, processes HTTP Web requests for a script file that is embedded as a resource in an assembly."
  syntax:
    content: protected virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "An <xref href=&quot;System.Web.HttpContext&quot;></xref> object that provides references to the intrinsic server objects (for example, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>) that are used to service HTTP requests."
  overload: System.Web.Handlers.ScriptResourceHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  id: System#Web#IHttpHandler#IsReusable
  isEii: true
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "Gets a value that indicates whether another request can use the <xref href=&quot;System.Web.IHttpHandler&quot;></xref> instance."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.Handlers.ScriptResourceHandler> instance is cast to an <xref:System.Web.IHttpHandler> interface."
  syntax:
    content: bool System.Web.IHttpHandler.IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  id: System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  isEii: true
  parent: System.Web.Handlers.ScriptResourceHandler
  langs:
  - csharp
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Handlers
  summary: "Processes HTTP Web requests for a script file that is embedded as a resource in an assembly."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.Handlers.ScriptResourceHandler> instance is cast to an <xref:System.Web.IHttpHandler> interface."
  syntax:
    content: void IHttpHandler.ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "An <xref href=&quot;System.Web.HttpContext&quot;></xref> object that provides references to the intrinsic server objects (for example, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;></xref>) that are used to service HTTP requests."
  overload: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The type names for the debug and release versions of the embedded script do not match."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ScriptResourceHandler()
  nameWithType: ScriptResourceHandler.ScriptResourceHandler()
  fullName: System.Web.Handlers.ScriptResourceHandler.ScriptResourceHandler()
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.Handlers.ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.Handlers.ScriptResourceHandler.#ctor*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ScriptResourceHandler
  nameWithType: ScriptResourceHandler.ScriptResourceHandler
- uid: System.Web.Handlers.ScriptResourceHandler.IsReusable*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: IsReusable
  nameWithType: ScriptResourceHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.ProcessRequest*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: ScriptResourceHandler.ProcessRequest
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.IsReusable
- uid: System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest*
  parent: System.Web.Handlers.ScriptResourceHandler
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest
  nameWithType: ScriptResourceHandler.System.Web.IHttpHandler.ProcessRequest
