### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "O <xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref> módulo contém os procedimentos utilizados para executar operações financeiras."
  remarks: "Este módulo suporta os membros de biblioteca de tempo de execução Visual Basic que efetuar cálculos financeiros como valores presentes e do futuros, depreciação, taxas de retorno e pagamentos e taxas de interesse."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a depreciação de um ativo durante um período de tempo específico utilizando o método de balanceamento dupla ou algum outro método que especificar."
  remarks: "O método de balanceamento dupla calcula depreciação a uma taxa na melhoria. Depreciação é mais elevada no primeiro período e diminui em períodos sucessivos.       O `Life` e `Period` argumentos tem de ser expresso em unidades das mesmas. Por exemplo, se `Life` é dado em meses, `Period` também deve ser dada em meses. Todos os argumentos devem ser números positivos.       O `DDB` função utiliza a seguinte fórmula depreciação para um determinado período de calcular: depreciação / período = ((Cost – Salvage) * fator) / vida"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o custo inicial do elemento."
    - id: Salvage
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o valor do elemento no fim da sua vida útil."
    - id: Life
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o período de vida útil do elemento."
    - id: Period
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o período de para o recurso depreciação é calculada."
    - id: Factor
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificando a taxa a que o equilíbrio recusar. Se for omitido, é assumido 2 (method dupla)."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a depreciação de um ativo durante um período de tempo específico utilizando o método de balanceamento dupla ou algum outro método que especificar."
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando o valor futuro de uma anuidade com base em pagamentos periódicos, fixos e numa taxa de juros fixa."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuadas ao longo do tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       O `Rate` e `NPer` argumentos tem de ser calculados com períodos de pagamento expressados em unidades das mesmas. Por exemplo, se `Rate` é calculado com meses, `NPer` também deve ser calculado utilizando meses.       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos."
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar a taxa de juros por período. Por exemplo, se obter uma loan carro a uma taxa de percentagem (APR) anuais de 10 por cento e efetuar pagamentos mensais, a taxa por período é 0.1/12 ou 0.0083."
    - id: NPer
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o número total de períodos de pagamento na anuidade. Por exemplo, se fizer pagamentos mensais no loan carro quatro anos, o seu loan tem um total de 4 x 12 (ou 48) períodos de pagamento."
    - id: Pmt
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificando o pagamento para tornar cada período. Pagamentos normalmente contém principal e o interesse que não alteram ao longo da vida da anuidade."
    - id: PV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o valor atual líquido (ou lump soma) de uma série de pagamentos futuras. Por exemplo, quando borrow dinheiro comprar um carro, a quantidade de loan é o valor para o lender dos pagamentos carro mensal que irá tomar. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> se pagamentos devidos no fim do período de pagamento, ou <xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;> </xref> se pagamentos devidos no início do período de. Se for omitido, <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> presume-se."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando o valor futuro de uma anuidade com base em pagamentos periódicos, fixos e numa taxa de juros fixa."
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar o pagamento dos juros para um determinado período de uma anuidade com base em pagamentos periódicos, fixos e numa taxa de juros fixa."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuadas ao longo do tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       O `Rate` e `NPer` argumentos tem de ser calculados com períodos de pagamento expressados em unidades das mesmas. Por exemplo, se `Rate` é calculado com meses, `NPer` também deve ser calculado utilizando meses.       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos."
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar a taxa de juros por período. Por exemplo, se obter uma loan carro a uma taxa de percentagem (APR) anuais de 10 por cento e efetuar pagamentos mensais, a taxa por período é 0.1/12 ou 0.0083."
    - id: Per
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o período de pagamento no intervalo de 1 a `NPer`."
    - id: NPer
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o número total de períodos de pagamento na anuidade. Por exemplo, se fizer pagamentos mensais no loan carro quatro anos, o seu loan tem um total de 4 x 12 (ou 48) períodos de pagamento."
    - id: PV
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar presente valor ou hoje, o valor de uma série de pagamentos futuros ou recibos. Por exemplo, quando borrow dinheiro comprar um carro, a quantidade de loan é o valor para o lender dos pagamentos carro mensal que irá tomar."
    - id: FV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especificar valor futuro ou saldo monetários que pretende depois fez o pagamento final. Por exemplo, o valor futuro de uma loan é $0, uma vez que é o respetivo valor após o final pagamento. No entanto, se pretender guardar $ 50 000 mais 18 anos para as educação do menor, $ 50 000 é o valor futuro. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser `DueDate.EndOfPeriod` se pagamentos devidos no fim do período de pagamento, ou `DueDate.BegOfPeriod` se pagamentos devidos no início do período de. Se for omitido, `DueDate.EndOfPeriod` presume-se."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar o pagamento dos juros para um determinado período de uma anuidade com base em pagamentos periódicos, fixos e numa taxa de juros fixa."
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a taxa interna de rentabilidade de uma série de fluxos monetários periódicos (pagamentos e recebimentos)."
  remarks: "A taxa interna de rentabilidade é a taxa de juros recebida para um investimento consiste em pagamentos e recebimentos que ocorrem em intervalos regulares.       O `IRR` função utiliza a ordem dos valores na matriz para interpretar a ordem de pagamentos e recebimentos. Lembre-se de que introduza o seu pagamento e valores de receção na sequência correta. O fluxo de caixa para cada período não tem de ser corrigidos, como é para uma anuidade.       `IRR`é calculado através da iteração. Iniciando com o valor de `Guess`, `IRR` percorre o cálculo até o resultado é preciso para dentro 0.00001 percentagem. Se `IRR` não é possível localizar um resultado após 20 tenta, falhar."
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Necessário. Matriz de <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar valores de fluxo de caixa. A matriz tem de conter pelo menos um valor negativo (um pagamento) e um valor positivo (um recibo)."
    - id: Guess
      type: System.Double
      description: "Opcional. Especificar valor, fazer a estimativa de objeto será devolvido por <xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>. Se for omitido, `Guess` é 0.1 (10 por cento)."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a taxa interna de rentabilidade de uma série de fluxos monetários periódicos (pagamentos e recebimentos)."
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Os valores de argumento de matriz são inválidos ou <code> Guess </code> &lt;= -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a taxa modificada interna de rentabilidade de uma série de fluxos monetários periódicos (pagamentos e recebimentos)."
  remarks: "A modificação taxa interna de rentabilidade é a taxa interna de rentabilidade quando pagamentos e recebimentos são financed com taxas diferentes. O `MIRR` função tem em consideração os dois o custo de avaliar o investimento (`FinanceRate`) e a taxa de juros recebida reinvestment de monetários (`ReinvestRate`).       O `FinanceRate` e `ReinvestRatearguments` são percentagens expressadas como valores decimais. Por exemplo, 12 percentagem é expresso como 0.12.       O `MIRR` função utiliza a ordem dos valores na matriz para interpretar a ordem de pagamentos e recebimentos. Lembre-se de que introduza o seu pagamento e valores de receção na sequência correta."
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Necessário. Matriz de <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar valores de fluxo de caixa. A matriz tem de conter pelo menos um valor negativo (um pagamento) e um valor positivo (um recibo)."
    - id: FinanceRate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar a taxa de juros paga como o custo de financing."
    - id: ReinvestRate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar a taxa de juros recebida ganhos de reinvestment monetários."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a taxa modificada interna de rentabilidade de uma série de fluxos monetários periódicos (pagamentos e recebimentos)."
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "Ocorreu uma divisão por zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Especifica o número de períodos para uma anuidade com base em pagamentos periódicos fixos e numa taxa de juros fixa."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuado através de um período de tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos."
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar a taxa de juros por período. Por exemplo, se obter uma loan carro a uma taxa de percentagem (APR) anuais de 10 por cento e efetuar pagamentos mensais, a taxa por período é 0.1/12 ou 0.0083."
    - id: Pmt
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificando o pagamento para tornar cada período. Pagamentos normalmente contém principal e o interesse que não alteram ao longo da vida da anuidade."
    - id: PV
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar presente valor ou hoje, o valor de uma série de pagamentos futuros ou recibos. Por exemplo, quando borrow dinheiro comprar um carro, a quantidade de loan é o valor para o lender dos pagamentos carro mensal que irá tomar."
    - id: FV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especificar valor futuro ou saldo monetários que pretende depois de efetuar o pagamento final. Por exemplo, o valor futuro de uma loan é $0, uma vez que é o respetivo valor após o final pagamento. No entanto, se pretender guardar $ 50 000 mais 18 anos para as educação do menor, $ 50 000 é o valor futuro. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser `DueDate.EndOfPeriod` se pagamentos devidos no fim do período de pagamento, ou `DueDate.BegOfPeriod` se pagamentos devidos no início do período de. Se for omitido, `DueDate.EndOfPeriod` presume-se."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Especifica o número de períodos para uma anuidade com base em pagamentos periódicos fixos e numa taxa de juros fixa."
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar o valor atual líquido de um investimento com base numa série de fluxos monetários periódicos (pagamentos e recebimentos) e numa taxa de desconto."
  remarks: "O valor atual líquido de um investimento é o valor atual de uma série de pagamentos e recebimentos futura.       O `NPV` função utiliza a ordem dos valores na matriz para interpretar a ordem de pagamentos e recebimentos. Lembre-se de que introduza o seu pagamento e valores de receção na sequência correta.       O `NPV` investimento começa durante um período antes da data do primeiro valor de fluxo de caixa e termina com o último valor de fluxo de caixa na matriz.       O cálculo de valor presente net baseia-se no futuros fluxos monetários. Se o fluxo de caixa primeiro ocorrer no início do período de primeiro, o primeiro valor tem de ser adicionado para o valor devolvido pelo `NPV` e não pode ser incluído nos valores de fluxo de caixa de `ValueArray`.       O `NPV` função é semelhante a `PV` função (valor presente), exceto que a `PV` função permite fluxos monetários iniciar no final ou o início de um período. Ao contrário da variável `NPV` valores de fluxo de caixa, `PV` fluxos monetários têm de ser corrigidos em todo o investimento."
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar a taxa de desconto sobre o comprimento do período de, expresso como um valor decimal."
    - id: ValueArray
      type: System.Double[]
      description: "Necessário. Matriz de <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar valores de fluxo de caixa. A matriz tem de conter pelo menos um valor negativo (um pagamento) e um valor positivo (um recibo)."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar o valor atual líquido de um investimento com base numa série de fluxos monetários periódicos (pagamentos e recebimentos) e numa taxa de desconto."
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando o pagamento para uma anuidade com base em pagamentos periódicos, fixos e numa taxa de juros fixa."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuadas durante um período de tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       O `Rate` e `NPer` argumentos tem de ser calculados com períodos de pagamento expressados em unidades das mesmas. Por exemplo, se `Rate` é calculado com meses, `NPer` também deve ser calculado utilizando meses.       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos."
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica a taxa de juros por período. Por exemplo, se obter uma loan carro a uma taxa de percentagem (APR) anuais de 10 por cento e efetuar pagamentos mensais, a taxa por período é 0.1/12 ou 0.0083."
    - id: NPer
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o número total de períodos de pagamento de anuidade. Por exemplo, se fizer pagamentos mensais no loan carro quatro anos, o seu loan tem um total de 4 × 12 (ou 48) períodos de pagamento."
    - id: PV
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o valor presente (ou soma lump) que é de uma série de pagamentos a liquidar no futuro, mas agora. Por exemplo, quando borrow dinheiro comprar um carro, a quantidade de loan é o valor para o lender dos pagamentos carro mensal que irá tomar."
    - id: FV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especificar valor futuro ou saldo monetários que pretende depois de efetuar o pagamento final. Por exemplo, o valor futuro de uma loan é $0, uma vez que é o respetivo valor após o final pagamento. No entanto, se pretender guardar $ 50 000 durante anos 18 para educação do menor, $ 50 000 é o valor futuro. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser `DueDate.EndOfPeriod` se pagamentos devidos no fim do período de pagamento, ou `DueDate.BegOfPeriod` se pagamentos devidos no início do período de. Se for omitido, `DueDate.EndOfPeriod` presume-se."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando o pagamento para uma anuidade com base em pagamentos periódicos, fixos e numa taxa de juros fixa."
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando o pagamento principal para um determinado período de uma anuidade com base em pagamentos periódicos fixos e numa taxa de juros fixa."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuado através de um período de tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       O `Rate` e `NPer` argumentos tem de ser calculados com períodos de pagamento expressados em unidades das mesmas. Por exemplo, se `Rate` é calculado com meses, `NPer` também deve ser calculado utilizando meses.       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos."
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica a taxa de juros por período. Por exemplo, se obter uma loan carro a uma taxa de percentagem (APR) anuais de 10 por cento e efetuar pagamentos mensais, a taxa por período é 0.1/12 ou 0.0083."
    - id: Per
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o período de pagamento no intervalo de 1 a `NPer`."
    - id: NPer
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o número total de períodos de pagamento de anuidade. Por exemplo, se fizer pagamentos mensais no loan carro quatro anos, o seu loan tem um total de 4 x 12 (ou 48) períodos de pagamento."
    - id: PV
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o valor atual de uma série de pagamentos futuros ou recibos. Por exemplo, quando borrow dinheiro comprar um carro, a quantidade de loan é o valor para o lender dos pagamentos carro mensal que irá tomar."
    - id: FV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especificar valor futuro ou saldo monetários que pretende depois de efetuar o pagamento final. Por exemplo, o valor futuro de uma loan é $0, uma vez que é o respetivo valor após o final pagamento. No entanto, se pretender guardar $ 50 000 mais 18 anos para as educação do menor, $ 50 000 é o valor futuro. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser `DueDate.EndOfPeriod` se pagamentos devidos no fim do período de pagamento, ou `DueDate.BegOfPeriod` se pagamentos devidos no início do período de. Se for omitido, `DueDate.EndOfPeriod` presume-se."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando o pagamento principal para um determinado período de uma anuidade com base em pagamentos periódicos fixos e numa taxa de juros fixa."
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar o valor atual líquido de uma anuidade com base em pagamentos periódicos, fixos a liquidar no futuro e numa taxa de juros fixa."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuado através de um período de tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       O `Rate` e `NPer` argumentos tem de ser calculados com períodos de pagamento expressados em unidades das mesmas. Por exemplo, se `Rate` é calculado com meses, `NPer` também deve ser calculado utilizando meses.       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos."
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica a taxa de juros por período. Por exemplo, se obter uma loan carro a uma taxa de percentagem (APR) anuais de 10 por cento e efetuar pagamentos mensais, a taxa por período é 0.1/12 ou 0.0083."
    - id: NPer
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o número total de períodos de pagamento de anuidade. Por exemplo, se fizer pagamentos mensais no loan carro quatro anos, o seu loan tem períodos de pagamento 4 x 12 (ou 48)."
    - id: Pmt
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o pagamento para tornar cada período. Pagamentos normalmente contém principal e o interesse que não é alterado durante a vigência da anuidade."
    - id: FV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o equilíbrio de valor ou monetários futuro que pretende depois de efetuar o pagamento final. Por exemplo, o valor futuro de uma loan é $0, uma vez que é o respetivo valor após o final pagamento. No entanto, se pretender guardar $ 50 000 mais 18 anos para as educação do menor, $ 50 000 é o valor futuro. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser `DueDate.EndOfPeriod` se pagamentos devidos no fim do período de pagamento, ou `DueDate.BegOfPeriod` se pagamentos devidos no início do período de. Se for omitido, `DueDate.EndOfPeriod` presume-se."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificar o valor atual líquido de uma anuidade com base em pagamentos periódicos, fixos a liquidar no futuro e numa taxa de juros fixa."
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a taxa de juros por período para uma anuidade."
  remarks: "Uma anuidade é uma série de pagamentos fixos monetários efetuado através de um período de tempo. Uma anuidade pode ser um loan (por exemplo, um mortgage doméstica) ou um investimento (por exemplo, um plano de reduções mensal).       Para todos os argumentos, monetários pagamento (por exemplo, depósitos para poupanças) é representado pelo números negativos; monetários recebido (por exemplo, o dividendo verificações) é representado por números positivos.       `Rate`é calculado através da iteração. Iniciando com o valor de `Guess`, `Rate` percorre o cálculo até o resultado é preciso para dentro 0.00001 percentagem. Se `Rate` não é possível localizar um resultado após 20 tenta, falhar. Se o seu estimado é de 10 por cento e `Rate` falha, tente um valor diferente para `Guess`."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o número total de períodos de pagamento de anuidade. Por exemplo, se fizer pagamentos mensais no loan carro quatro anos, o seu loan tem um total de 4 * 12 (ou 48) períodos de pagamento."
    - id: Pmt
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o pagamento para tornar cada período. Pagamentos normalmente contém principal e o interesse que não alteram ao longo da vida da anuidade."
    - id: PV
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o presente valor ou hoje, o valor de uma série de pagamentos futuros ou recibos. Por exemplo, quando borrow dinheiro comprar um carro, a quantidade de loan é o valor para o lender dos pagamentos carro mensal que irá tomar."
    - id: FV
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o equilíbrio de valor ou monetários futuro que pretende depois de efetuar o pagamento final. Por exemplo, o valor futuro de uma loan é $0, uma vez que é o respetivo valor após o final pagamento. No entanto, se pretender guardar $ 50 000 mais 18 anos para as educação do menor, $ 50 000 é o valor futuro. Se for omitido, é assumido 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Opcional. Objeto do tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> que especifica quando são devidos pagamentos. Este argumento deve ser `DueDate.EndOfPeriod` se pagamentos devidos no fim do período de pagamento, ou `DueDate.BegOfPeriod` se pagamentos devidos no início do período de. Se for omitido, `DueDate.EndOfPeriod` presume-se."
    - id: Guess
      type: System.Double
      description: "Opcional. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especificar valor calcula é devolvido pelo <xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>. Se for omitido, `Guess` é 0.1 (10 por cento)."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a taxa de juros por período para uma anuidade."
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a depreciação de valor de um ativo durante um único período."
  remarks: "O período de depreciação tem de ser expressos na mesma unidade como o `Life` argumento. Todos os argumentos devem ser números positivos."
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o custo inicial do elemento."
    - id: Salvage
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o valor do elemento no fim da sua vida útil."
    - id: Life
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificação de comprimento da vida útil do elemento."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a depreciação de valor de um ativo durante um único período."
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a depreciação de dígitos de soma dos anos de um ativo durante um período especificado."
  remarks: "O `Life` e `Period` argumentos tem de ser expresso em unidades das mesmas. Por exemplo, se `Life` é dado em meses, `Period` também deve ser dada em meses. Todos os argumentos devem ser números positivos."
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o custo inicial do elemento."
    - id: Salvage
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o valor do elemento no fim da sua vida útil."
    - id: Life
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Especifica o comprimento da vida útil do elemento."
    - id: Period
      type: System.Double
      description: "Necessário. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>especificar o período de para o recurso depreciação é calculada."
    return:
      type: System.Double
      description: "Devolve um <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> especificando a depreciação de dígitos de soma dos anos de um ativo durante um período especificado."
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
