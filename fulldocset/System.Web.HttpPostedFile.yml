### YamlMime:ManagedReference
items:
- uid: System.Web.HttpPostedFile
  id: HttpPostedFile
  children:
  - System.Web.HttpPostedFile.ContentLength
  - System.Web.HttpPostedFile.ContentType
  - System.Web.HttpPostedFile.FileName
  - System.Web.HttpPostedFile.InputStream
  - System.Web.HttpPostedFile.SaveAs(System.String)
  langs:
  - csharp
  name: HttpPostedFile
  nameWithType: HttpPostedFile
  fullName: System.Web.HttpPostedFile
  type: Class
  summary: "Provides access to individual files that have been uploaded by a client."
  remarks: "The <xref:System.Web.HttpFileCollection> class provides access to all the files that are uploaded from a client as a file collection. The HttpPostedFile class provides properties and methods to get information about an individual file and to read and save the file.       The <xref:System.Web.UI.HtmlControls.HtmlInputFile> control can be used to select and upload files from a client.       Files are uploaded in MIME multipart/form-data format. By default, all requests, including form fields and uploaded files, larger than 256 KB are buffered to disk, rather than held in server memory.       You can specify the maximum allowable request size by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> property or by setting the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file. The default is 4 MB.       The amount of data that is buffered in server memory for a request, which includes file uploads, can be specified by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> property or by setting the `requestLengthDiskThreshold` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.       By adjusting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> and <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> properties, you can fine tune the performance of your server. Additionally, you should consider setting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> to prevent denial of service attacks caused by users posting large files to the server.       Server resources that are allocated to buffer the uploaded file will be destroyed when the request ends. To save a durable copy of the file, use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method."
  syntax:
    content: public sealed class HttpPostedFile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.ContentLength
  id: ContentLength
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: ContentLength
  nameWithType: HttpPostedFile.ContentLength
  fullName: System.Web.HttpPostedFile.ContentLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the size of an uploaded file, in bytes."
  syntax:
    content: public int ContentLength { get; }
    return:
      type: System.Int32
      description: "The file length, in bytes."
  overload: System.Web.HttpPostedFile.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.ContentType
  id: ContentType
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpPostedFile.ContentType
  fullName: System.Web.HttpPostedFile.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the MIME content type of a file sent by a client."
  remarks: ''
  example:
  - "The following code example shows how to loop through all the files in the uploaded file collection and take action when the MIME type of a file is `US-ASCII`.  \n  \n [!code-cs[Classic HttpPostedFile.ContentType Example#1](~/add/codesnippet/csharp/p-system.web.httppostedf_1_1.cs)]\n [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/add/codesnippet/visualbasic/p-system.web.httppostedf_1_1.vb)]"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "The MIME content type of the uploaded file."
  overload: System.Web.HttpPostedFile.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.FileName
  id: FileName
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: FileName
  nameWithType: HttpPostedFile.FileName
  fullName: System.Web.HttpPostedFile.FileName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets the fully qualified name of the file on the client."
  remarks: ''
  example:
  - "The following code example demonstrates how to assign the name of an uploaded file (the first file in the file collection) to a string variable.  \n  \n [!code-cs[Classic HttpPostedFile.FileName Example#1](~/add/codesnippet/csharp/p-system.web.httppostedf_2_1.cs)]\n [!code-vb[Classic HttpPostedFile.FileName Example#1](~/add/codesnippet/visualbasic/p-system.web.httppostedf_2_1.vb)]"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "The name of the client&quot;s file, including the directory path."
  overload: System.Web.HttpPostedFile.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.InputStream
  id: InputStream
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpPostedFile.InputStream
  fullName: System.Web.HttpPostedFile.InputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gets a <xref:System.IO.Stream> object that points to an uploaded file to prepare for reading the contents of the file."
  remarks: ''
  example:
  - "The following code example shows how to read the contents of the first file in the client's file collection into a byte array, and then copy the byte array to a string.  \n  \n [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/add/codesnippet/visualbasic/p-system.web.httppostedf_0_1.vb)]\n [!code-cs[Classic HttpPostedFile.InputStream Example#1](~/add/codesnippet/csharp/p-system.web.httppostedf_0_1.cs)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> pointing to a file."
  overload: System.Web.HttpPostedFile.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.SaveAs(System.String)
  id: SaveAs(System.String)
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: SaveAs(String)
  nameWithType: HttpPostedFile.SaveAs(String)
  fullName: System.Web.HttpPostedFile.SaveAs(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Saves the contents of an uploaded file."
  remarks: "The maximum size allowed for a request, which includes uploaded files, is 4 MB, by default. Maximum request size can be specified in the Machine.config or Web.config file in the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element. The maximum request size for a specific page can be specified using the [location Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) element in a Web.config file."
  example:
  - "The following code example demonstrates how to save all the files that are uploaded by the client to the C:\\TempFiles folder on the Web server's local disk.  \n  \n [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/add/codesnippet/visualbasic/m-system.web.httppostedf_1.vb)]\n [!code-cs[Classic HttpPostedFile.SaveAs Example#1](~/add/codesnippet/csharp/m-system.web.httppostedf_1.cs)]"
  syntax:
    content: public void SaveAs (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "The name of the saved file."
  overload: System.Web.HttpPostedFile.SaveAs*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*> property of the <xref href=&quot;System.Web.Configuration.HttpRuntimeSection&quot;></xref> object is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, but <code>filename</code> is not an absolute path."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpPostedFile.ContentLength
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentLength
  nameWithType: HttpPostedFile.ContentLength
  fullName: System.Web.HttpPostedFile.ContentLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpPostedFile.ContentType
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentType
  nameWithType: HttpPostedFile.ContentType
  fullName: System.Web.HttpPostedFile.ContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpPostedFile.FileName
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: FileName
  nameWithType: HttpPostedFile.FileName
  fullName: System.Web.HttpPostedFile.FileName
- uid: System.Web.HttpPostedFile.InputStream
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: InputStream
  nameWithType: HttpPostedFile.InputStream
  fullName: System.Web.HttpPostedFile.InputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpPostedFile.SaveAs(System.String)
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: SaveAs(String)
  nameWithType: HttpPostedFile.SaveAs(String)
  fullName: System.Web.HttpPostedFile.SaveAs(String)
- uid: System.Web.HttpPostedFile.ContentLength*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentLength
  nameWithType: HttpPostedFile.ContentLength
- uid: System.Web.HttpPostedFile.ContentType*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentType
  nameWithType: HttpPostedFile.ContentType
- uid: System.Web.HttpPostedFile.FileName*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: FileName
  nameWithType: HttpPostedFile.FileName
- uid: System.Web.HttpPostedFile.InputStream*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: InputStream
  nameWithType: HttpPostedFile.InputStream
- uid: System.Web.HttpPostedFile.SaveAs*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: SaveAs
  nameWithType: HttpPostedFile.SaveAs
