### YamlMime:ManagedReference
items:
- uid: System.Web.HttpPostedFile
  id: HttpPostedFile
  children:
  - System.Web.HttpPostedFile.ContentLength
  - System.Web.HttpPostedFile.ContentType
  - System.Web.HttpPostedFile.FileName
  - System.Web.HttpPostedFile.InputStream
  - System.Web.HttpPostedFile.SaveAs(System.String)
  langs:
  - csharp
  name: HttpPostedFile
  nameWithType: HttpPostedFile
  fullName: System.Web.HttpPostedFile
  type: Class
  summary: "Fornece acesso a ficheiros individuais que tiverem sido carregados por um cliente."
  remarks: "O <xref:System.Web.HttpFileCollection>classe fornece acesso a todos os ficheiros que são carregados a partir de um cliente como uma coleção de ficheiros.</xref:System.Web.HttpFileCollection> A classe de HttpPostedFile fornece as propriedades e métodos para obter informações sobre um ficheiro individual e para ler e guardar o ficheiro.       O <xref:System.Web.UI.HtmlControls.HtmlInputFile>controlo pode ser utilizado para selecionar e carregar ficheiros de um cliente.</xref:System.Web.UI.HtmlControls.HtmlInputFile>       Os ficheiros são carregados no formato de multipart /-dados do formulário MIME. Por predefinição, todos os pedidos, incluindo os campos do formulário e carregar ficheiros, com mais de 256 KB são colocado na memória intermédia para o disco, em vez de contido na memória de servidor.       Pode especificar o tamanho máximo de pedido permitido acedendo a <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>propriedade ou definindo o `maxRequestLength` atributo o [httpRuntime elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento no ficheiro Machine. config ou Web. config.</xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> A predefinição é 4 MB.       A quantidade de dados é colocado na memória intermédia na memória de servidor para um pedido, que inclui os carregamentos de ficheiros, pode ser especificada ao aceder a <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>propriedade ou definindo o `requestLengthDiskThreshold` atributo do [httpRuntime elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento no ficheiro Machine. config ou Web. config.</xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>       Ao ajustar o <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>e <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>Propriedades, pode ajustar o desempenho do seu servidor.</xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> </xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> Além disso, deve considerar a definição de <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>para impedir ataques denial of service causado por utilizadores publicar ficheiros grandes para o servidor.</xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>       Quando o pedido termina de recursos do servidor que estão atribuídos à memória intermédia o ficheiro carregado irão ser destruídos. Para guardar uma cópia do ficheiro durável, utilize o <xref:System.Web.HttpPostedFile.SaveAs%2A>método.</xref:System.Web.HttpPostedFile.SaveAs%2A>"
  syntax:
    content: public sealed class HttpPostedFile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.ContentLength
  id: ContentLength
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: ContentLength
  nameWithType: HttpPostedFile.ContentLength
  fullName: System.Web.HttpPostedFile.ContentLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o tamanho de um ficheiro carregado, em bytes."
  syntax:
    content: public int ContentLength { get; }
    return:
      type: System.Int32
      description: "O comprimento do ficheiro, em bytes."
  overload: System.Web.HttpPostedFile.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.ContentType
  id: ContentType
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpPostedFile.ContentType
  fullName: System.Web.HttpPostedFile.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o tipo de conteúdo de MIME de um ficheiro enviado por um cliente."
  remarks: ''
  example:
  - "The following code example shows how to loop through all the files in the uploaded file collection and take action when the MIME type of a file is `US-ASCII`.  \n  \n [!code-cs[Classic HttpPostedFile.ContentType Example#1](~/add/codesnippet/csharp/p-system.web.httppostedf_1_1.cs)]\n [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/add/codesnippet/visualbasic/p-system.web.httppostedf_1_1.vb)]"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "O tipo de conteúdo MIME do ficheiro carregado."
  overload: System.Web.HttpPostedFile.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.FileName
  id: FileName
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: FileName
  nameWithType: HttpPostedFile.FileName
  fullName: System.Web.HttpPostedFile.FileName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o nome completamente qualificado do ficheiro no cliente."
  remarks: ''
  example:
  - "The following code example demonstrates how to assign the name of an uploaded file (the first file in the file collection) to a string variable.  \n  \n [!code-cs[Classic HttpPostedFile.FileName Example#1](~/add/codesnippet/csharp/p-system.web.httppostedf_2_1.cs)]\n [!code-vb[Classic HttpPostedFile.FileName Example#1](~/add/codesnippet/visualbasic/p-system.web.httppostedf_2_1.vb)]"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "O nome do ficheiro do cliente, incluindo o caminho do diretório."
  overload: System.Web.HttpPostedFile.FileName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.InputStream
  id: InputStream
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpPostedFile.InputStream
  fullName: System.Web.HttpPostedFile.InputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref:System.IO.Stream>objeto que aponta para um ficheiro foi carregado para o preparar para ler o conteúdo do ficheiro.</xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following code example shows how to read the contents of the first file in the client's file collection into a byte array, and then copy the byte array to a string.  \n  \n [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/add/codesnippet/visualbasic/p-system.web.httppostedf_0_1.vb)]\n [!code-cs[Classic HttpPostedFile.InputStream Example#1](~/add/codesnippet/csharp/p-system.web.httppostedf_0_1.cs)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>apontar para um ficheiro.</xref:System.IO.Stream>"
  overload: System.Web.HttpPostedFile.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpPostedFile.SaveAs(System.String)
  id: SaveAs(System.String)
  parent: System.Web.HttpPostedFile
  langs:
  - csharp
  name: SaveAs(String)
  nameWithType: HttpPostedFile.SaveAs(String)
  fullName: System.Web.HttpPostedFile.SaveAs(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Guarda o conteúdo de um ficheiro carregado."
  remarks: "O tamanho máximo permitido para um pedido, que inclui os ficheiros carregados, é de 4 MB, por predefinição. Tamanho máximo do pedido pode ser especificado no ficheiro Machine. config ou Web. config no `maxRequestLength` atributo o [httpRuntime elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento. O tamanho máximo de pedidos para uma página específica pode ser especificado utilizando o [localização elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) elemento num ficheiro Web. config."
  example:
  - "The following code example demonstrates how to save all the files that are uploaded by the client to the C:\\TempFiles folder on the Web server's local disk.  \n  \n [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/add/codesnippet/visualbasic/m-system.web.httppostedf_1.vb)]\n [!code-cs[Classic HttpPostedFile.SaveAs Example#1](~/add/codesnippet/csharp/m-system.web.httppostedf_1.cs)]"
  syntax:
    content: public void SaveAs (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "O nome do ficheiro guardado."
  overload: System.Web.HttpPostedFile.SaveAs*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>propriedade o <xref href=&quot;System.Web.Configuration.HttpRuntimeSection&quot;> </xref> objeto está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, mas <code> filename </code> não é um caminho absoluto.</xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpPostedFile.ContentLength
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentLength
  nameWithType: HttpPostedFile.ContentLength
  fullName: System.Web.HttpPostedFile.ContentLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpPostedFile.ContentType
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentType
  nameWithType: HttpPostedFile.ContentType
  fullName: System.Web.HttpPostedFile.ContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpPostedFile.FileName
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: FileName
  nameWithType: HttpPostedFile.FileName
  fullName: System.Web.HttpPostedFile.FileName
- uid: System.Web.HttpPostedFile.InputStream
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: InputStream
  nameWithType: HttpPostedFile.InputStream
  fullName: System.Web.HttpPostedFile.InputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpPostedFile.SaveAs(System.String)
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: SaveAs(String)
  nameWithType: HttpPostedFile.SaveAs(String)
  fullName: System.Web.HttpPostedFile.SaveAs(String)
- uid: System.Web.HttpPostedFile.ContentLength*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentLength
  nameWithType: HttpPostedFile.ContentLength
- uid: System.Web.HttpPostedFile.ContentType*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: ContentType
  nameWithType: HttpPostedFile.ContentType
- uid: System.Web.HttpPostedFile.FileName*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: FileName
  nameWithType: HttpPostedFile.FileName
- uid: System.Web.HttpPostedFile.InputStream*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: InputStream
  nameWithType: HttpPostedFile.InputStream
- uid: System.Web.HttpPostedFile.SaveAs*
  parent: System.Web.HttpPostedFile
  isExternal: false
  name: SaveAs
  nameWithType: HttpPostedFile.SaveAs
