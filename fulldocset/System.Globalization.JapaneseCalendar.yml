### YamlMime:ManagedReference
items:
- uid: System.Globalization.JapaneseCalendar
  id: JapaneseCalendar
  children:
  - System.Globalization.JapaneseCalendar.#ctor
  - System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AlgorithmType
  - System.Globalization.JapaneseCalendar.Eras
  - System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  - System.Globalization.JapaneseCalendar.MinSupportedDateTime
  - System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.JapaneseCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar
  fullName: System.Globalization.JapaneseCalendar
  type: Class
  summary: "Representa o calendário japonês."
  remarks: "Calendário japonês, que também é conhecido como calendário Wareki, funciona exatamente como calendário gregoriano, exceto se o ano e era são diferentes.      > [!NOTE] > Para obter informações sobre como utilizar a classe de JapaneseCalendar e outras classes do calendário no .NET Framework, consulte [trabalhar com calendários](~/add/includes/ajax-current-ext-md.md).       O calendário japonês reconhece um era para Reinado cada emperor. O era atual é o era Heisei, que teve início no ano de calendário gregoriano 1989. O nome era é geralmente apresentado antes do ano. Por exemplo, o ano de calendário gregoriano 2001 é o ano de calendário japonês Heisei 13. Tenha em atenção que o primeiro ano de um era é chamada &quot;Gannen.&quot; Por conseguinte, o ano de calendário gregoriano 1989 foi o ano de calendário Heisei Gannen japonês.       Esta classe atribui números para os eras da seguinte forma: | Valor de GetEra | Nome de era | Era abreviatura | Datas de gregoriana |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 de Janeiro de 1989 para apresentar |   | 3 | 昭和 (Showa) | 昭 (S, s) | 25 de Dezembro de 1926 a 7 de Janeiro de 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 de Julho de 1912 a 24 de Dezembro de 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | 8 de Setembro de 1868 para 29 de Julho de 1912 |       Esta classe processa as datas de 8 de Setembro no ano Meiji 1 (calendário gregoriano, 8 de Setembro de 1868). Embora o calendário japonês foi mudou de um calendário lunar para um calendário solar no ano Meiji 6 (1873 do calendário gregoriano), esta implementação é baseada no calendário solar só.       Corresponder bissexto anos num calendário de japonês para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias.       O calendário japonês tem 12 meses com 28 a 31 dias: | Valor de GetMonth | Mês | Inglês | Dias de anos comuns | Dias de anos bissexto |   |--------------------|-----------|-------------|--------------------------|------------------------|   | 1 | 1月 (Ichigatsu) | Janeiro | 31 | 31 |   | 2 | 2月 (Nigatsu) | Fevereiro | 28 | 29 |   | 3 | 3月 (Sangatsu) | Março | 31 | 31 |   | 4 | 4月 (Shigatsu) | Abril | 30 | 30 |   | 5 | 5月 (Gogatsu) | Pode | 31 | 31 |   | 6 | 6月 (Rokugatsu) | Junho | 30 | 30 |   | 7 | 7月 (Shichigatsu) | Julho | 31 | 31 |   | 8 | 8月 (Hachigatsu) | Agosto | 31 | 31 |   | 9 | 9月 (Kugatsu) | Setembro | 30 | 30 |   | 10 | 10月 (Juugatsu) | Outubro | 31 | 31 |   | 11 | 11月 (Juuichigatsu) | Novembro | 30 | 30 |   | 12 | 12月 (Juunigatsu) | Dezembro | 31 | 31 |       Nigatsu, que é equivalente para o mês de calendário gregoriano de Fevereiro, tem 29 dias durante anos bissexto e 28 durante anos comuns.       A data 1 de Janeiro de 2001 A.D. no calendário Gregoriano é equivalente ao primeiro dia do Ichigatsu no Heisei 13 ano num calendário de japonês.       Se a aplicação estiver a utilizar a classe de JapaneseCalendar <xref:System.DateTime.Parse%2A?displayProperty=fullName>reconhece as abreviaturas era à frente do ano.</xref:System.DateTime.Parse%2A?displayProperty=fullName> A abreviatura é a abreviatura alfabeto latino sensível do caráter ou a abreviatura de Kanji caráter.       Cada <xref:System.Globalization.CultureInfo>objeto suporta um conjunto de calendários.</xref:System.Globalization.CultureInfo> O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade devolve o calendário predefinido para a cultura e o <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade devolve uma matriz que contém todos os seus calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário utilizado por um <xref:System.Globalization.CultureInfo>a aplicação deve definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>para um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class JapaneseCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> classe."
  syntax:
    content: public JapaneseCalendar ();
    parameters: []
  overload: System.Globalization.JapaneseCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Não é possível inicializar um <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objeto devido a falta de informações de cultura."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>que é o número de meses na direção oposta ao especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Este é alterado para o último dia válido no mês do ano resultante resultante. O ano parte resultante <xref:System.DateTime>é afetado se o mês resultante está fora do ano de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> A parte era resultante <xref:System.DateTime>é afetado se o ano resultante está fora do era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       Por exemplo, se o mês especificado for Juugatsu (Outubro), que tem 31 dias, o dia especificado é o dia 31 desse mês, e `months` 6, o ano resultante é um mais do que o especificado ano, mês resultante é Shigatsu (Abril) e o dia resultante é o dia 30th, que é o último dia no Shigatsu (Abril).       Se `months` é negativo, resultante <xref:System.DateTime>é anterior ao <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de devolvido <xref:System.DateTime>sempre o valor for igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Pode manter o <xref:System.DateTime.Kind%2A>propriedade o `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como o seguinte exemplo mostra.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.j_17_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.j_17_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_17_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_17_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_17_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual pretende adicionar meses.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "O número de meses a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número de meses para especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>é menor que-120000.       - ou - <code>months</code> é superior ao 120000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>que é o número de anos na direção oposta ao especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Este é alterado para o último dia válido no mês do ano resultante resultante. A parte do mês de resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> A parte era resultante <xref:System.DateTime>é afetado se o ano resultante está fora do era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       Por exemplo, Nigatsu (Fevereiro) tem 28 dias, exceto durante anos bissexto quando tiver 29 dias. Se a data especificada tem o dia 29th do Nigatsu (Fevereiro) um ano bissexto e o valor da `years` é 1, a data resultante será o dia 28th Nigatsu (Fevereiro) no ano seguinte.       Se `years` é negativo, resultante <xref:System.DateTime>é anterior ao <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de devolvido <xref:System.DateTime>sempre o valor for igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Pode manter o <xref:System.DateTime.Kind%2A>propriedade o `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como o seguinte exemplo mostra.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.j_14_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.j_14_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_14_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_14_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_14_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual pretende adicionar anos.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "O número de anos a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de anos para <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>está fora do intervalo suportado do <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo.       - ou - <code>years</code> é menor-10,000 ou superior a 10.000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um valor que indica se o calendário atual é solar baseia, lunar baseado, ou uma combinação de ambos."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Devolve sempre <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.Eras
  id: Eras
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a lista de eras no <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  remarks: "O calendário japonês reconhece um era para Reinado cada emperor. O era atual é o era Heisei, que teve início no ano de calendário gregoriano 1989. O nome era é geralmente apresentado antes do ano. Por exemplo, o ano de calendário gregoriano 2001 é o ano de calendário japonês Heisei 13. Tenha em atenção que o primeiro ano de um era é chamada &quot;Gannen.&quot; Por conseguinte, o ano de calendário gregoriano 1989 foi o ano de calendário Heisei Gannen japonês.       Esta classe atribui números para os eras da seguinte forma: | Valor de GetEra | Nome de era | Era abreviatura | Datas de gregoriana |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 de Janeiro de 1989 para apresentar |   | 3 | 昭和 (Showa) | 昭 (S, s) | 25 de Dezembro de 1926 a 7 de Janeiro de 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 de Julho de 1912 a 24 de Dezembro de 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | 8 de Setembro de 1868 para 29 de Julho de 1912 |       Esta classe processa as datas de 8 de Setembro no ano Meiji 1 (1 de Janeiro de 1868 do calendário gregoriano). Embora o calendário japonês foi mudou de um calendário lunar para um calendário solar no ano Meiji 6 (1873 do calendário gregoriano), esta implementação é baseada no calendário solar só.      > [!NOTE] > Eras adicionais devem ser adicionados no futuro, aplicações poderão encontrar mais do que o esperado quatro eras para o calendário japonês. As aplicações devem ser testadas para garantir que continuam a funcionar no evento; consulte [Era processar para o calendário japonês](http://go.microsoft.com/fwlink/p/?LinkId=239618)."
  example:
  - "The following example displays the values contained in the Eras property.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/csharp/p-system.globalization.j_4_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/visualbasic/p-system.globalization.j_4_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/cpp/p-system.globalization.j_4_1.cpp)]"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz de números inteiros que representa os eras no <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia do mês especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_13_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_13_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_13_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro entre 1 e 31 que representa o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia da semana no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "Os valores de <xref:System.DayOfWeek>são os seguintes: | Valor de DayOfWeek | que indica |   |---------------------|---------------------|   | Domingo | 日曜日 (Nichiyoubi) |   | Segunda | 月曜日 (Getsuyoubi) |   | Terça-feira | 火曜日 (Kayoubi) |   | Quarta-feira | 水曜日 (Suiyoubi) |   | Quinta-feira | 木曜日 (Mokuyoubi) |   | Sexta-feira | 金曜日 (Kinyoubi) |   | Sábado | 土曜日 (Doyoubi) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_9_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_9_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_9_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Um <xref:System.DayOfWeek>valor que representa o dia da semana no <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DayOfWeek>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia do ano <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O dia do ano é definido como o número de dias do primeiro dia do ano. Por exemplo, GetDayOfYear para o primeiro dia do mês primeiro devolve 1 e GetDayOfYear para o último dia do mês passado devolve o número total de dias em que ano, o que é o mesmo valor que foi devolvido pelo <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_5_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro entre 1 e 366 que representa o dia do ano <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de dias no mês especificado no ano especificado era o especificado."
  remarks: "Por exemplo, este método devolve 28 ou 29 Nigatsu (Fevereiro, `month` = 2), consoante se `year` é um ano bissexto."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/50a0d95d-a5e5-49bd-9864-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/50a0d95d-a5e5-49bd-9864-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/50a0d95d-a5e5-49bd-9864-_1.cs)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Int32
      description: "O número de dias no mês especificado no ano especificado era o especificado."
  overload: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de dias no ano especificado era o especificado."
  remarks: "Por exemplo, este método devolve 365 ou 366, consoante esteja `year` é um ano bissexto."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_4_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_4_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_4_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Int32
      description: "O número de dias no ano especificado era o especificado."
  overload: System.Globalization.JapaneseCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o era <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O calendário japonês reconhece um era para Reinado cada emperor. O era atual é o era Heisei, que teve início no ano de calendário gregoriano 1989. O nome era é geralmente apresentado antes do ano. Por exemplo, o ano de calendário gregoriano 2001 é o ano de calendário japonês Heisei 13. Tenha em atenção que o primeiro ano de um era é chamada &quot;Gannen.&quot; Por conseguinte, o ano de calendário gregoriano 1989 foi o ano de calendário Heisei Gannen japonês.       Esta classe atribui números para os eras da seguinte forma: | Valor de GetEra | Nome de era | Era abreviatura | Datas de gregoriana |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Heisei) | 平 (H, h) | 8 de Janeiro de 1989 para apresentar |   | 3 | 昭和 (Showa) | 昭 (S, s) | 25 de Dezembro de 1926 a 7 de Janeiro de 1989 |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 de Julho de 1912 a 24 de Dezembro de 1926 |   | 1 | 明治 (Meiji) | 明 (M, m) | 8 de Setembro de 1868 para 29 de Julho de 1912 |       Normalmente, o <xref:System.Globalization.JapaneseCalendar>classe suporta datas 8 de Setembro do ano 1 Meiji (8 de Setembro de 1868 do calendário gregoriano), que é o valor da <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>propriedade.</xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> </xref:System.Globalization.JapaneseCalendar> No entanto, o método GetEra com êxito devolve era para datas de 1 de Janeiro através 7 de Setembro no ano Meiji 1 (1 de Janeiro de 1868 através do 7 de Setembro de 1868 no calendário gregoriano). Para as datas anteriores ao 1 de Janeiro de 1868 no calendário gregoriano, o método emite um <xref:System.ArgumentOutOfRangeException>exceção.</xref:System.ArgumentOutOfRangeException>"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_10_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_10_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_10_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa o era no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcula o mês de bissexto durante um ano especificado e era."
  remarks: "Calendário que suporta a noção de um mês bissexto, mês bissexto pode ocorrer depois de um determinado mês ou após qualquer mês de um ano. Por exemplo, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método devolve um número entre 1 e 13 que indica o mês associado uma data especificada.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se existir um mês bissexto entre os meses oitavo e ninth do ano, a <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método devolve 8 para o mês oitavo 9 para o bissexto oitavo mês e 10 para o mês ninth.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um ano."
    - id: era
      type: System.Int32
      description: "Um era."
    return:
      type: System.Int32
      description: "O valor devolvido é sempre 0 porque o <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo não suporta a noção de um mês bissexto."
  overload: System.Globalization.JapaneseCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ou <code>era</code> está fora do intervalo suportado pelo <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o mês especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_18_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_18_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_18_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês especificado <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de meses no ano especificado era o especificado."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/0687c0ba-842c-4e70-872b-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/0687c0ba-842c-4e70-872b-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/0687c0ba-842c-4e70-872b-_1.cpp)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Int32
      description: "O valor devolvido é sempre 12."
  overload: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve a semana do ano que inclui a data especificada <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Este método pode ser utilizado para determinar o número de semanas no ano definindo a `time` parâmetro para o último dia do ano.       O <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>propriedade contém valores específicos da cultura que podem ser utilizados para o `rule` e `firstDayOfWeek` parâmetros.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       A <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>contém o predefinido, <xref:System.DayOfWeek>valor que representa o primeiro dia da semana para um idioma específico, utilizando o calendário especificado na <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       A <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>contém o predefinido, <xref:System.Globalization.CalendarWeekRule>valor que define uma semana do calendário para um idioma específico, utilizando o calendário especificado na <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Por exemplo, no <xref:System.Globalization.GregorianCalendar>, a <xref:System.Globalization.Calendar.GetWeekOfYear%2A>método para 1 de Janeiro devolve 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/ef15d25f-af8b-4734-b15e-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/ef15d25f-af8b-4734-b15e-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/ef15d25f-af8b-4734-b15e-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "Um do <xref:System.Globalization.CalendarWeekRule>valores que define uma semana do calendário.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "Um do <xref:System.DayOfWeek>valores que representa o primeiro dia da semana.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "Um número inteiro com base em 1 que representa a semana do ano que inclui a data no <code> time </code> parâmetro."
  overload: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>ou <code>firstDayOfWeek</code> está fora do intervalo suportado pelo calendário.       - ou - <code>rule</code> não é um <xref:System.Globalization.CalendarWeekRule> valor."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o ano no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_16_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_16_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_16_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa o ano <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.JapaneseCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se a data especificada no era especificado é um dia bissexto."
  remarks: "Corresponder bissexto anos num calendário de japonês para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias.       Um dia bissexto é um dia em que ocorre apenas num ano bissexto. Por exemplo, o dia 29th da Nigatsu (Fevereiro) é apenas dia bissexto."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/csharp/98bd79da-f987-41c7-8e4e-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/98bd79da-f987-41c7-8e4e-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/cpp/98bd79da-f987-41c7-8e4e-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um número inteiro entre 1 e 31 que representa o dia."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o dia especificado é um dia bissexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>day</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o mês especificado no ano especificado o especificado era um mês bissexto."
  remarks: "Corresponder bissexto anos num calendário de japonês para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias.       Um mês bissexto é um mês completo que ocorre apenas num ano bissexto. O calendário de japonês não tem qualquer meses bissexto."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/6e9c4cc5-e550-476d-bf72-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/6e9c4cc5-e550-476d-bf72-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/6e9c4cc5-e550-476d-bf72-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Boolean
      description: "Este método devolve sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a menos que substituída por uma classe derivada."
  overload: System.Globalization.JapaneseCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o ano especificado o especificado era um ano bissexto."
  remarks: "Corresponder bissexto anos num calendário de japonês para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.j_2_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.j_2_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_2_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o ano especificado é um ano bissexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora suportada pela atual mais recente <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_0_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_0_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A data e hora suportado pelo mais recente do <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo, que é equivalente à última momento do 31 de Dezembro de 9999 E.C. no calendário gregoriano."
  overload: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a primeira data e hora suportada pela atual <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> objeto."
  remarks: "A data mais recente suportada pelo <xref:System.Globalization.JapaneseCalendar>classe é 8 de Setembro de 1868 E.C., no ano primeiro do era Meiji.</xref:System.Globalization.JapaneseCalendar> Normalmente, a data e hora operações que utilizam o <xref:System.Globalization.JapaneseCalendar>classe throw um <xref:System.ArgumentOutOfRangeException>excepção datas antes desta data.</xref:System.ArgumentOutOfRangeException> </xref:System.Globalization.JapaneseCalendar> No entanto, alguns membros, tais como o <xref:System.Globalization.JapaneseCalendar.GetEra%2A>método, suporta datas de 1 de Janeiro de 1868 através 7 de Setembro no ano Meiji 1.</xref:System.Globalization.JapaneseCalendar.GetEra%2A>"
  example:
  - "The following example gets the earliest and latest dates supported by the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_1_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_1_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A data e hora suportado pelo mais antigo a <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> tipo, que é equivalente ao primeiro momento do 8 de Setembro de 1868 e. c. no calendário gregoriano."
  overload: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>que está definido para a data e hora especificadas no especificado era.</xref:System.DateTime>"
  remarks: "O método ToDateTime é útil porque pode converter qualquer data no calendário atual para uma data do calendário gregoriano. A data gregoriana pode, subsequentemente, ser utilizada, por exemplo, para comparar as datas nos calendários diferentes ou crie uma data equivalente num calendário de específico."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um número inteiro entre 1 e 31 que representa o dia."
    - id: hour
      type: System.Int32
      description: "Um número inteiro entre 0 e 23 que representa a hora."
    - id: minute
      type: System.Int32
      description: "Um número inteiro entre 0 e 59 que representa o minuto."
    - id: second
      type: System.Int32
      description: "Um número inteiro entre 0 e 59 que representa o segundo."
    - id: millisecond
      type: System.Int32
      description: "Um número inteiro entre 0 e 999 que representa o milissegundo."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que está definido para a data e hora especificadas no era atual.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>day</code> está fora do intervalo suportado pelo calendário.       - ou - <code>hour</code> é menor que zero ou superior a 23.       - ou - <code>minute</code> é menor que zero ou superior a 59.       - ou - <code>second</code> é menor que zero ou superior a 59.       - ou - <code>millisecond</code> é menor que zero ou superior a 999.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte o ano especificado para um ano de quatro dígitos utilizando o <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>propriedade para determinar o século adequado.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>"
  remarks: "Este método implementa <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>       Porque o ano num calendário de japonês é, normalmente, menos de quatro dígitos, esta implementação sempre devolve o valor da `year` parâmetro.       ToFourDigitYear suporta um ano de dois dígitos ou um ano de quatro dígitos. No entanto, um ano válido geralmente é representado como dois dígitos (inferior a 100). Transmissão de um valor de ano dois dígitos faz com que o método para converter o valor para um valor de quatro dígitos de acordo com o <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>representando o século adequado.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> Se a aplicação fornece um valor de quatro dígitos, ou se fornece zero ou um valor negativo, ToFourDigitYear emite uma exceção."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro (normalmente, dois dígitos) que representa o ano converter."
    return:
      type: System.Int32
      description: "Um número inteiro que contém a representação com quatro dígitos de <code> year </code>."
  overload: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o último ano de um intervalo de 100 anos que pode ser representado por um ano dígito 2."
  remarks: "Esta propriedade implementa <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>       Uma vez que o ano num calendário de japonês é, normalmente, menos de quatro dígitos, esta implementação devolve 99 por predefinição e não afeta o valor de retorno de <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "O último ano de um intervalo de 100 anos que pode ser representado por um ano dígito 2."
  overload: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado numa operação conjunto é inferior a 99.       - ou - o valor especificado numa operação conjunto é superior ao 8011 (ou <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma operação de definição, a instância atual é só de leitura."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.JapaneseCalendar.#ctor
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
- uid: System.Globalization.JapaneseCalendar.#ctor*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar.JapaneseCalendar
- uid: System.Globalization.JapaneseCalendar.AddMonths*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths
  nameWithType: JapaneseCalendar.AddMonths
- uid: System.Globalization.JapaneseCalendar.AddYears*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears
  nameWithType: JapaneseCalendar.AddYears
- uid: System.Globalization.JapaneseCalendar.AlgorithmType*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: JapaneseCalendar.GetDayOfMonth
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: JapaneseCalendar.GetDayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: JapaneseCalendar.GetDayOfYear
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: JapaneseCalendar.GetDaysInMonth
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: JapaneseCalendar.GetDaysInYear
- uid: System.Globalization.JapaneseCalendar.GetEra*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra
  nameWithType: JapaneseCalendar.GetEra
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: JapaneseCalendar.GetLeapMonth
- uid: System.Globalization.JapaneseCalendar.GetMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth
  nameWithType: JapaneseCalendar.GetMonth
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: JapaneseCalendar.GetMonthsInYear
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: JapaneseCalendar.GetWeekOfYear
- uid: System.Globalization.JapaneseCalendar.GetYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear
  nameWithType: JapaneseCalendar.GetYear
- uid: System.Globalization.JapaneseCalendar.IsLeapDay*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: JapaneseCalendar.IsLeapDay
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: JapaneseCalendar.IsLeapMonth
- uid: System.Globalization.JapaneseCalendar.IsLeapYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: JapaneseCalendar.IsLeapYear
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: JapaneseCalendar.ToDateTime
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: JapaneseCalendar.ToFourDigitYear
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
