### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.HttpRequestCachePolicy
  id: HttpRequestCachePolicy
  children:
  - System.Net.Cache.HttpRequestCachePolicy.#ctor
  - System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)
  - System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)
  - System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)
  - System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)
  - System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)
  - System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate
  - System.Net.Cache.HttpRequestCachePolicy.Level
  - System.Net.Cache.HttpRequestCachePolicy.MaxAge
  - System.Net.Cache.HttpRequestCachePolicy.MaxStale
  - System.Net.Cache.HttpRequestCachePolicy.MinFresh
  - System.Net.Cache.HttpRequestCachePolicy.ToString
  langs:
  - csharp
  name: HttpRequestCachePolicy
  nameWithType: HttpRequestCachePolicy
  fullName: System.Net.Cache.HttpRequestCachePolicy
  type: Class
  summary: "Defines an application&quot;s caching requirements for resources obtained by using &lt;xref:System.Net.HttpWebRequest&gt; objects."
  remarks: "You can specify a default cache policy for your application by using the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property or the application or machine configuration files. For more information, see [\\<requestCaching> Element (Network Settings)](../Topic/%3CrequestCaching%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n You can specify the cache policy for an individual request by using the <xref:System.Net.WebRequest.CachePolicy%2A> property.  \n  \n Caching for Web services is not supported."
  example:
  - "The following code example creates a default cache policy for the application domain, and overrides it for a request.  \n  \n [!code-cpp[NclSimpleCache#2](~/add/codesnippet/CPP/t-system.net.cache.httpr_0_1.cpp)]\n [!code-cs[NclSimpleCache#2](~/add/codesnippet/CSharp/t-system.net.cache.httpr_0_1.cs)]"
  syntax:
    content: 'public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy'
  inheritance:
  - System.Object
  - System.Net.Cache.RequestCachePolicy
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor
  id: '#ctor'
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: HttpRequestCachePolicy()
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy()
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot;></see> class."
  remarks: "This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>."
  example:
  - "The following code example demonstrates setting the cache policy using this constructor.  \n  \n [!code-cpp[NclSimpleCache#11](~/add/codesnippet/CPP/m-system.net.cache.httpr_2_1.cpp)]\n [!code-cs[NclSimpleCache#11](~/add/codesnippet/CSharp/m-system.net.cache.httpr_2_1.cs)]"
  syntax:
    content: public HttpRequestCachePolicy ();
    parameters: []
  overload: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: HttpRequestCachePolicy(DateTime)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(DateTime)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(DateTime)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot;></see> class using the specified cache synchronization date."
  remarks: "The cache synchronization date allows you to specify an absolute date when cached contents must be revalidated. If the cache entry was last revalidated prior to the cache synchronization date, revalidation with the server occurs. If the cache entry was revalidated after the cache synchronization date and there are no server revalidation requirements that make the cached entry invalid, the entry from the cache is used. If the cache synchronization date is set to a future date, the entry is revalidated every time it is requested, until the cache synchronization date passes.       This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>. The <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> property is initialized to `cacheSyncDate`."
  example:
  - "The following code example demonstrates creating a cache policy based on a cache synchronization date.  \n  \n [!code-cpp[NclSimpleCache#3](~/add/codesnippet/CPP/m-system.net.cache.httpr_0_1.cpp)]\n [!code-cs[NclSimpleCache#3](~/add/codesnippet/CSharp/m-system.net.cache.httpr_0_1.cs)]"
  syntax:
    content: public HttpRequestCachePolicy (DateTime cacheSyncDate);
    parameters:
    - id: cacheSyncDate
      type: System.DateTime
      description: "A <xref:System.DateTime> object that specifies the time when resources stored in the cache must be revalidated."
  overload: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)
  id: '#ctor(System.Net.Cache.HttpRequestCacheLevel)'
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: HttpRequestCachePolicy(HttpRequestCacheLevel)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpRequestCacheLevel)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpRequestCacheLevel)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot;></see> class using the specified cache policy."
  remarks: "This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to `level`.       The <xref:System.Net.Cache.HttpRequestCacheLevel> value controls whether caching is enabled, and when the cache can be used. For additional information, see the <xref:System.Net.Cache.HttpRequestCacheLevel> documentation."
  example:
  - "The following code example demonstrates creating a cache policy that allows resources found in the cache to be used from the cache.  \n  \n [!code-cpp[NclSimpleCache#12](~/add/codesnippet/CPP/ace4fbc2-5589-4718-95d4-_1.cpp)]\n [!code-cs[NclSimpleCache#12](~/add/codesnippet/CSharp/ace4fbc2-5589-4718-95d4-_1.cs)]"
  syntax:
    content: public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);
    parameters:
    - id: level
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "An  value."
  overload: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)
  id: '#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)'
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot;></see> class using the specified age control and time values."
  remarks: "The `cacheAgeControl` value defines the meaning of the `ageOrFreshOrStale` parameter value and is used to set the associated property. For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `ageOrFreshOrStale` parameter.       This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>."
  example:
  - "The following code example demonstrates creating a cache policy based on minimum freshness.  \n  \n [!code-cpp[NclSimpleCache#5](~/add/codesnippet/CPP/d2b33c1a-bd41-4048-9414-_1.cpp)]\n [!code-cs[NclSimpleCache#5](~/add/codesnippet/CSharp/d2b33c1a-bd41-4048-9414-_1.cs)]"
  syntax:
    content: public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);
    parameters:
    - id: cacheAgeControl
      type: System.Net.Cache.HttpCacheAgeControl
      description: 'One of the following  enumeration values: , , or .'
    - id: ageOrFreshOrStale
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that specifies an amount of time. See the Remarks section for more information."
  overload: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value specified for the cacheAgeControl parameter cannot be used with this constructor."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)'
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot;></see> class using the specified maximum age, age control value, and time value."
  remarks: "The `cacheAgeControl` value is used to interpret the meaning of the `freshOrStale` parameter value and set the associated property. For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `freshOrStale` parameter. When you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is set using the value of the `maxAge` parameter and the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set using the value of the `freshOrStale` parameter.       Note that unless you specify <xref:System.Net.Cache.HttpCacheAgeControl> or <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is not set.       This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>."
  example:
  - "The following code example demonstrates creating a cache policy based on minimum freshness and maximum age.  \n  \n [!code-cpp[NclSimpleCache#9](~/add/codesnippet/CPP/8f8f9eae-9699-4ddf-806f-_1.cpp)]\n [!code-cs[NclSimpleCache#9](~/add/codesnippet/CSharp/8f8f9eae-9699-4ddf-806f-_1.cs)]"
  syntax:
    content: public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);
    parameters:
    - id: cacheAgeControl
      type: System.Net.Cache.HttpCacheAgeControl
      description: "An  value."
    - id: maxAge
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that specifies the maximum age for resources."
    - id: freshOrStale
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that specifies an amount of time. See the Remarks section for more information."
  overload: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value specified for the cacheAgeControl parameter is not valid."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)
  id: '#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)'
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan,DateTime)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan,DateTime)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan,DateTime)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Cache.HttpRequestCachePolicy&quot;></see> class using the specified maximum age, age control value, time value, and cache synchronization date."
  remarks: "The `cacheAgeControl` value is used to interpret the meaning of the `freshOrStale` parameter value and set the associated property. For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `freshOrStale` parameter. When you specify <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is set using the value of the `maxAge` parameter and the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set using the value of the `freshOrStale` parameter.       Note that unless you specify <xref:System.Net.Cache.HttpCacheAgeControl> or <xref:System.Net.Cache.HttpCacheAgeControl>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is not set.       This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> property to `cacheSyncDate`, and initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel>."
  example:
  - "The following code example demonstrates creating a cache policy based on minimum freshness, maximum age, and a cache synchronization date.  \n  \n [!code-cpp[NclSimpleCache#10](~/add/codesnippet/CPP/8c4c0cd0-8840-4c00-bae5-_1.cpp)]\n [!code-cs[NclSimpleCache#10](~/add/codesnippet/CSharp/8c4c0cd0-8840-4c00-bae5-_1.cs)]"
  syntax:
    content: public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);
    parameters:
    - id: cacheAgeControl
      type: System.Net.Cache.HttpCacheAgeControl
      description: "An  value."
    - id: maxAge
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that specifies the maximum age for resources."
    - id: freshOrStale
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that specifies an amount of time. See the Remarks section for more information."
    - id: cacheSyncDate
      type: System.DateTime
      description: "A <xref:System.DateTime> object that specifies the time when resources stored in the cache must be revalidated."
  overload: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate
  id: CacheSyncDate
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: CacheSyncDate
  nameWithType: HttpRequestCachePolicy.CacheSyncDate
  fullName: System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Gets the cache synchronization date for this instance."
  remarks: "The cache synchronization date allows you to specify an absolute date when cached contents must be revalidated. If the cache entry was last revalidated prior to the cache synchronization date, revalidation with the server occurs. If the cache entry was revalidated after the cache synchronization date and there are no server revalidation requirements that make the cached entry invalid, the entry from the cache is used. If the cache synchronization date is set to a future date, the entry is revalidated every time it is requested, until the cache synchronization date passes."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[NclSimpleCache#3](~/add/codesnippet/CPP/p-system.net.cache.httpr_4_1.cpp)]\n [!code-cs[NclSimpleCache#3](~/add/codesnippet/CSharp/p-system.net.cache.httpr_4_1.cs)]"
  syntax:
    content: public DateTime CacheSyncDate { get; }
    return:
      type: System.DateTime
      description: "A &lt;xref:System.DateTime&gt; value set to the date specified when this instance was created. If no date was specified, this property&quot;s value is &lt;xref:System.DateTime&gt;."
  overload: System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.Level
  id: Level
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: Level
  nameWithType: HttpRequestCachePolicy.Level
  fullName: System.Net.Cache.HttpRequestCachePolicy.Level
  type: Property
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Gets the <see cref=&quot;T:System.Net.Cache.HttpRequestCacheLevel&quot;></see> value that was specified when this instance was created."
  remarks: "Applications typically use <xref:System.Net.Cache.HttpRequestCacheLevel> as their cache policy level. The <xref:System.Net.WebRequest.CachePolicy%2A> property, if not `null`, determines the cache policy in effect for a request. The default policy for the application domain can be set using the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property or by settings in the machine or application configuration files. For more information, see [\\<requestCaching> Element (Network Settings)](../Topic/%3CrequestCaching%3E%20Element%20\\(Network%20Settings\\).md)."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSimpleCache#11](~/add/codesnippet/CPP/p-system.net.cache.httpr_2_1.cpp)]\n [!code-cs[NclSimpleCache#11](~/add/codesnippet/CSharp/p-system.net.cache.httpr_2_1.cs)]"
  syntax:
    content: public System.Net.Cache.HttpRequestCacheLevel Level { get; }
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A <see cref=&quot;T:System.Net.Cache.HttpRequestCacheLevel&quot;></see> value that specifies the cache behavior for resources that were obtained using &lt;xref:System.Net.HttpWebRequest&gt; objects."
  overload: System.Net.Cache.HttpRequestCachePolicy.Level*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.MaxAge
  id: MaxAge
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: MaxAge
  nameWithType: HttpRequestCachePolicy.MaxAge
  fullName: System.Net.Cache.HttpRequestCachePolicy.MaxAge
  type: Property
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Gets the maximum age permitted for a resource returned from the cache."
  remarks: "If the cached copy of the resource is older than the specified time value, the resource must be revalidated. The value for this property is specified when the instance is constructed."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSimpleCache#7](~/add/codesnippet/CPP/p-system.net.cache.httpr_1_1.cpp)]\n [!code-cs[NclSimpleCache#7](~/add/codesnippet/CSharp/p-system.net.cache.httpr_1_1.cs)]"
  syntax:
    content: public TimeSpan MaxAge { get; }
    return:
      type: System.TimeSpan
      description: "A &lt;xref:System.TimeSpan&gt; value that is set to the maximum age value specified when this instance was created. If no date was specified, this property&quot;s value is &lt;xref:System.DateTime.MinValue&gt;."
  overload: System.Net.Cache.HttpRequestCachePolicy.MaxAge*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.MaxStale
  id: MaxStale
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: MaxStale
  nameWithType: HttpRequestCachePolicy.MaxStale
  fullName: System.Net.Cache.HttpRequestCachePolicy.MaxStale
  type: Property
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Gets the maximum staleness value that is permitted for a resource returned from the cache."
  remarks: "This property specifies the amount of time after content expiration during which the cached copy of the resource is acceptable. The value for this property is specified when the instance is constructed."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSimpleCache#6](~/add/codesnippet/CPP/p-system.net.cache.httpr_3_1.cpp)]\n [!code-cs[NclSimpleCache#6](~/add/codesnippet/CSharp/p-system.net.cache.httpr_3_1.cs)]"
  syntax:
    content: public TimeSpan MaxStale { get; }
    return:
      type: System.TimeSpan
      description: "A &lt;xref:System.TimeSpan&gt; value that is set to the maximum staleness value specified when this instance was created. If no date was specified, this property&quot;s value is &lt;xref:System.DateTime.MinValue&gt;."
  overload: System.Net.Cache.HttpRequestCachePolicy.MaxStale*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.MinFresh
  id: MinFresh
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: MinFresh
  nameWithType: HttpRequestCachePolicy.MinFresh
  fullName: System.Net.Cache.HttpRequestCachePolicy.MinFresh
  type: Property
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Gets the minimum freshness that is permitted for a resource returned from the cache."
  remarks: "This value specifies the amount of time before content expiration, during which the cached copy of the resource is acceptable. The value for this property is specified when the instance is constructed."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSimpleCache#5](~/add/codesnippet/CPP/p-system.net.cache.httpr_0_1.cpp)]\n [!code-cs[NclSimpleCache#5](~/add/codesnippet/CSharp/p-system.net.cache.httpr_0_1.cs)]"
  syntax:
    content: public TimeSpan MinFresh { get; }
    return:
      type: System.TimeSpan
      description: "A &lt;xref:System.TimeSpan&gt; value that specifies the minimum freshness specified when this instance was created. If no date was specified, this property&quot;s value is &lt;xref:System.DateTime.MinValue&gt;."
  overload: System.Net.Cache.HttpRequestCachePolicy.MinFresh*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Cache.HttpRequestCachePolicy.ToString
  id: ToString
  parent: System.Net.Cache.HttpRequestCachePolicy
  langs:
  - csharp
  name: ToString()
  nameWithType: HttpRequestCachePolicy.ToString()
  fullName: System.Net.Cache.HttpRequestCachePolicy.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Returns a string representation of this instance."
  remarks: "The string contains a label that identifies the property, followed by a colon (&quot;:&quot;) and the value. Properties are separated by a single space."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSimpleCache#1](~/add/codesnippet/CPP/m-system.net.cache.httpr_1_1.cpp)]\n [!code-cs[NclSimpleCache#1](~/add/codesnippet/CSharp/m-system.net.cache.httpr_1_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Net.Cache.HttpRequestCachePolicy.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Net.Cache.RequestCachePolicy
  isExternal: false
  name: System.Net.Cache.RequestCachePolicy
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy()
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy()
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy()
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy(DateTime)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(DateTime)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy(HttpRequestCacheLevel)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpRequestCacheLevel)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpRequestCacheLevel)
- uid: System.Net.Cache.HttpRequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan)
- uid: System.Net.Cache.HttpCacheAgeControl
  parent: System.Net.Cache
  isExternal: false
  name: HttpCacheAgeControl
  nameWithType: HttpCacheAgeControl
  fullName: System.Net.Cache.HttpCacheAgeControl
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan)
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan,DateTime)
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan,DateTime)
  fullName: System.Net.Cache.HttpRequestCachePolicy.HttpRequestCachePolicy(HttpCacheAgeControl,TimeSpan,TimeSpan,DateTime)
- uid: System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: CacheSyncDate
  nameWithType: HttpRequestCachePolicy.CacheSyncDate
  fullName: System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate
- uid: System.Net.Cache.HttpRequestCachePolicy.Level
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: Level
  nameWithType: HttpRequestCachePolicy.Level
  fullName: System.Net.Cache.HttpRequestCachePolicy.Level
- uid: System.Net.Cache.HttpRequestCachePolicy.MaxAge
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: MaxAge
  nameWithType: HttpRequestCachePolicy.MaxAge
  fullName: System.Net.Cache.HttpRequestCachePolicy.MaxAge
- uid: System.Net.Cache.HttpRequestCachePolicy.MaxStale
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: MaxStale
  nameWithType: HttpRequestCachePolicy.MaxStale
  fullName: System.Net.Cache.HttpRequestCachePolicy.MaxStale
- uid: System.Net.Cache.HttpRequestCachePolicy.MinFresh
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: MinFresh
  nameWithType: HttpRequestCachePolicy.MinFresh
  fullName: System.Net.Cache.HttpRequestCachePolicy.MinFresh
- uid: System.Net.Cache.HttpRequestCachePolicy.ToString
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: ToString()
  nameWithType: HttpRequestCachePolicy.ToString()
  fullName: System.Net.Cache.HttpRequestCachePolicy.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Cache.HttpRequestCachePolicy.#ctor*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: HttpRequestCachePolicy
  nameWithType: HttpRequestCachePolicy.HttpRequestCachePolicy
- uid: System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: CacheSyncDate
  nameWithType: HttpRequestCachePolicy.CacheSyncDate
- uid: System.Net.Cache.HttpRequestCachePolicy.Level*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: Level
  nameWithType: HttpRequestCachePolicy.Level
- uid: System.Net.Cache.HttpRequestCachePolicy.MaxAge*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: MaxAge
  nameWithType: HttpRequestCachePolicy.MaxAge
- uid: System.Net.Cache.HttpRequestCachePolicy.MaxStale*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: MaxStale
  nameWithType: HttpRequestCachePolicy.MaxStale
- uid: System.Net.Cache.HttpRequestCachePolicy.MinFresh*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: MinFresh
  nameWithType: HttpRequestCachePolicy.MinFresh
- uid: System.Net.Cache.HttpRequestCachePolicy.ToString*
  parent: System.Net.Cache.HttpRequestCachePolicy
  isExternal: false
  name: ToString
  nameWithType: HttpRequestCachePolicy.ToString
