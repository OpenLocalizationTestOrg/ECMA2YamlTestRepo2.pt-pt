### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceBehaviorAttribute
  id: ServiceBehaviorAttribute
  children:
  - System.ServiceModel.ServiceBehaviorAttribute.#ctor
  - System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  - System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  - System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  - System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  - System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  - System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  - System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  - System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  - System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  - System.ServiceModel.ServiceBehaviorAttribute.Name
  - System.ServiceModel.ServiceBehaviorAttribute.Namespace
  - System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  - System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  langs:
  - csharp
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute
  fullName: System.ServiceModel.ServiceBehaviorAttribute
  type: Class
  summary: "Specifies the internal execution behavior of a service contract implementation."
  remarks: "Apply the ServiceBehaviorAttribute attribute to a service implementation to specify service-wide execution behavior. (To specify execution behavior at the method level, use the <xref:System.ServiceModel.OperationBehaviorAttribute> attribute.) This attribute can be applied only to service implementations. For working examples, see the [Service Behaviors Samples](http://msdn.microsoft.com/en-us/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7).       ServiceBehaviorAttribute properties are a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model feature that enables common features that developers otherwise have to implement. For more information about these and other behaviors, see [Specifying Service Run-Time Behavior](~/add/includes/ajax-current-ext-md.md). For more information about the underlying runtime properties that some of the following properties set, see [Extending ServiceHost and the Service Model Layer](~/add/includes/ajax-current-ext-md.md).      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> property specifies the type of filter that the dispatcher system uses to locate the endpoint that handles requests.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> property automatically closes the session when the channel is closed and the service has finished processing any remaining messages.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> property controls the internal threading model, enabling support for reentrant or multithreaded services.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> property is used to declare a name for use in the `name` attribute of the `<service>` element in a configuration file.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> property enables the run time to ignore extra serialization information that is not required to process the message.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> property specifies whether unhandled exceptions in a service are returned as SOAP faults. This is for debugging purposes only.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property specifies whether and when services and their service objects are to be recycled during an exchange with a client.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> property to limit on the number of items in an object graph that are serialized.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> and <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> properties control the name and namespace for the WSDL expression of the service element.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property specifies whether the service object is recycled when a transaction completes.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> property specifies whether outstanding transactions are completed when the session closes.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> property specifies the transaction isolation level that the contract supports.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> property specifies the time period within which a transaction must complete or it aborts.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> property indicates whether to synchronize inbound method calls with the user interface thread automatically.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> property informs the system whether it should confirm that SOAP headers marked as `MustUnderstand` have, in fact, been understood.       The <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> property can also be set using an application configuration file. For details, see <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>."
  example:
  - "The following code example demonstrates the ServiceBehaviorAttribute properties. The `BehaviorService` class uses the ServiceBehaviorAttribute attribute to indicate that:  \n  \n-   The service object is recycled when the transaction completes.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.ServiceBehaviorAttribute&quot;></xref> class."
  remarks: "The default values for the <xref:System.ServiceModel.ServiceBehaviorAttribute> are:      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> is set to <xref:System.ServiceModel.AddressFilterMode>.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A> property is `true`.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> is set to <xref:System.ServiceModel.ConcurrencyMode>.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A> property is the namespace-qualified name of the type without the assembly information.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A> property is `false`.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A> property is set to 64KB.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A> property is the name of the service type, without namespace or assembly information.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> property is &quot;http://tempuri.org&quot;.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property is `true`.      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> is `false`.      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is `true`.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A> property is `false`.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> property is <xref:System.Transactions.IsolationLevel>.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> property is set to <xref:System.TimeSpan.Zero>.      -   The <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A> property is `true`."
  syntax:
    content: public ServiceBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  id: AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;></xref> that is used by the dispatcher to route incoming messages to the correct endpoint."
  syntax:
    content: public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }
    return:
      type: System.ServiceModel.AddressFilterMode
      description: "The <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;></xref> object that is used by the dispatcher to route incoming messages to the correct endpoint."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is not one of the <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;></xref> values."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  id: AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies whether to automatically close a session when a client closes an output session."
  remarks: "By default when a client closes an output session and the service has finished processing any remaining messages the server closes the session. Setting AutomaticSessionShutdown to `false` prevents the server from automatically closing the session and enables custom control of session lifetimes."
  syntax:
    content: public bool AutomaticSessionShutdown { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if services automatically close a session when the client closes an output session; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  id: ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets whether a service supports one thread, multiple threads, or reentrant calls."
  remarks: "This property indicates whether an instance of a service can handle one thread or multiple threads that execute concurrently, and if single-threaded, whether reentrancy is supported.      > [!NOTE] >  The ConcurrencyMode property interacts with some other settings. For example, if the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value is set to <xref:System.ServiceModel.InstanceContextMode> the result is that your service can only process one message at a time unless you also set the ConcurrencyMode value to <xref:System.ServiceModel.ConcurrencyMode>. This property also produces behavior in combination with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property. For details, see [Sessions, Instancing, and Concurrency](~/add/includes/ajax-current-ext-md.md).       Setting <xref:System.ServiceModel.ConcurrencyMode> to <xref:System.ServiceModel.ConcurrencyMode> instructs the system to restrict instances of the service to one thread of execution at a time, which frees you from dealing with threading issues. A value of <xref:System.ServiceModel.ConcurrencyMode> means that service objects can be executed by multiple threads at any one time. In this case, you must ensure thread safety.       <xref:System.ServiceModel.ConcurrencyMode> also restricts access to a single thread at a time; while the operation is processing, no other message can enter the operation. If during the operation a call to another service leaves, the current message loses the lock on the operation, which is free to process other messages. When the service call out returns, the lock is reestablished and the original message can continue processing to its conclusion or until another call out of the operation occurs.      > [!IMPORTANT] >  Even though <xref:System.ServiceModel.ConcurrencyMode> restricts instances of the service to one thread of execution at a time, you must also set <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> to 1 to guarantee no out-of-order messages.   >    >  Also, it is your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts. Note that the service instance is unlocked only by calling another service over a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] channel. In this case, the called service can reenter the first service via a callback. If the first service is not reentrant, the sequence of calls results in a deadlock. For details, see <xref:System.ServiceModel.ConcurrencyMode>.       During any outbound call from a processing operation, data not local to the operation can be modified. (Local state data is guaranteed to be valid when the original message resumes processing.) As a result, before your outbound call you must ensure that non-local data is valid for other incoming calls and revalidate non-local data after the outbound call returns.       The following pseudo-code illustrates the required pattern for successful reentrant support.      ```c#   public void MyMethod()   {     this.SomeNonLocalDataState;     // Here you need to clean nonlocal state for other users     OutboundProxy proxy = new OutboundProxy();     int returnValue = proxy.CallOutOfOperation();     // Ensure that this.SomeNonLocalDataState is valid for continued use.     this.ModifyNonLocalState;     return returnValue;   }      ```       Using the Begin/End asynchronous call pattern for an outbound call when the ConcurrencyMode is <xref:System.ServiceModel.ConcurrencyMode> triggers an exception. Asynchronous outbound calls require an operation in which ConcurrencyMode is <xref:System.ServiceModel.ConcurrencyMode>, in which case you must handle synchronization issues.       Generally, if a message arrives for an instance that violates its concurrency mode, the message waits until the instance is available, or until it times out.       In addition, if the <xref:System.ServiceModel.ConcurrencyMode> is set to <xref:System.ServiceModel.ConcurrencyMode> and a reentrant call is blocked while waiting for the instance to be freed, the system detects the deadlock and throws an exception.      > [!NOTE] >  A <xref:System.InvalidOperationException> is thrown at runtime if <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> is `true` when the ConcurrencyMode property is set to <xref:System.ServiceModel.ConcurrencyMode>.       Note that you must explicitly set <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to true and you set ConcurrencyMode to <xref:System.ServiceModel.ConcurrencyMode>. Otherwise a validation exception is thrown because the default value of <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> is `true`.       There is an interaction of the ConcurrencyMode and other properties that can alter runtime behavior. For a complete description of these interactions, see [Sessions, Instancing, and Concurrency](../Topic/Sessions,%20Instancing,%20and%20Concurrency.md)."
  example:
  - "The following code example demonstrates the different between using <xref:System.ServiceModel.ConcurrencyMode>, <xref:System.ServiceModel.ConcurrencyMode>, and <xref:System.ServiceModel.ConcurrencyMode>. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "One of the <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;></xref> values; the default is <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is not one of the <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;></xref> values."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  id: ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the value used to locate the service element in an application configuration file."
  remarks: "Use this value to specify a particular service in the configuration file."
  syntax:
    content: public string ConfigurationName { get; set; }
    return:
      type: System.String
      description: "The value to locate in the configuration file. The default value is the fully qualified type name without assembly information."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is an empty string."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that indicates whether the service ordered dispatch is ensured."
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the service ordered dispatch is ensured; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  id: GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Retrieves an object that implements the service and that is used as the singleton instance of the service, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no singleton instance."
  remarks: "A non-`null` value provides the service instance to which all messages addressed to the service will be dispatched."
  syntax:
    content: public object GetWellKnownSingleton ();
    parameters: []
    return:
      type: System.Object
      description: "An implementation of the service. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that specifies whether to send unknown serialization data onto the wire."
  remarks: "If a type implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type. For example, if a type `Person` has members `FirstName` and `LastName`, and an element called `PhoneNumber` comes in, it is stored. When later serializing the type, `PhoneNumber` will be re-emitted. The problem is that the schema for `Person` exported by that service only has `FirstName` and `LastName`, so [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] generates a schema-invalid instance! If strict schema compliance is important, you can set IgnoreExtensionDataObject to `true` to turn this re-emitting behavior off.  \n  \n Regardless IgnoreExtensionDataObject setting, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] always processes known data (both in and out) and does not throw exceptions when extra data comes in. You can also set this property using the [\\&lt;dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) element in an application configuration file."
  example:
  - "The following example shows the use of IgnoreExtensionDataObject and an implementation of <xref:System.Runtime.Serialization.IExtensibleDataObject>. In this sample, with IgnoreExtensionDataObject set to `false`, the extra data that the client knows about is round-tripped back to the client.  \n  \n [!code-cs[DCAContainerNoValidation#1](~/add/codesnippet/csharp/dcacontainernovalidation.client/services.cs#1)]"
  syntax:
    content: public bool IgnoreExtensionDataObject { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if unknown serialization data is never sent; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a &lt;xref:System.ServiceModel.FaultException%601?displayProperty=fullName&gt; of type &lt;xref:System.ServiceModel.ExceptionDetail?displayProperty=fullName&gt; and sent as a fault message. Set this to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> only during development to troubleshoot a service."
  remarks: "Set IncludeExceptionDetailInFaults to `true` to enable exception information to flow to clients for debugging purposes. This property requires a binding that supports either request-response or duplex messaging.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications, methods that implement service operations communicate error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults. For more information, see [Specifying and Handling Faults in Contracts and Services](~/add/includes/ajax-current-ext-md.md).  \n  \n During development, you may want your service to also send other exceptions back to the client to assist you in debugging. This is a development-only feature and should not be employed in deployed services.  \n  \n To facilitate debugging development, set the IncludeExceptionDetailInFaults to `true` either in code or using an application configuration file.  \n  \n When enabled, the service automatically returns safer exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException%601> objects of type <xref:System.ServiceModel.ExceptionDetail>.  \n  \n> [!IMPORTANT]\n>  Setting IncludeExceptionDetailInFaultsto `true` enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.ServiceModel.ExceptionDetail>. Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.  \n  \n Setting this property to `true` can also be done using an application configuration file and the [\\&lt;serviceDebug\\&gt;](../Topic/%3CserviceDebug%3E.md) element, as the following code example shows.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if unhandled exceptions are to be returned as SOAP faults; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  id: InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the value that indicates when new service objects are created."
  remarks: "Use the <xref:System.ServiceModel.InstanceContextMode> property to specify when new service objects are created. Because the service object is not directly connected to the communicating channel, the lifetime of the service objects is independent of the lifetime of the channel between a client and the service application. The default value, <xref:System.ServiceModel.InstanceContextMode>, instructs the service application to create a new service object when a new communication session is established between a client and the service application. Subsequent calls in the same session are handled by the same object.       <xref:System.ServiceModel.InstanceContextMode> indicates that each service object handles requests from one client channel.      > [!NOTE] >  The InstanceContextMode property interacts with some other settings. For example, if the InstanceContextMode value is set to <xref:System.ServiceModel.InstanceContextMode> the result is that your service can only process one message at a time unless you also set the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> value to <xref:System.ServiceModel.ConcurrencyMode>. This property also produces behavior in combination with the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> property. For details, see [Sessions, Instancing, and Concurrency](~/add/includes/ajax-current-ext-md.md).       For singleton lifetime behavior (for example, if the host application calls the <xref:System.ServiceModel.ServiceHost.%23ctor%2A> constructor and passes an object to use as the service), the service class must set InstanceContextMode to `Single`, or an exception is thrown at run time."
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "One of the <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;></xref> values; the default value is <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is not one of the <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;></xref> values."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the maximum number of items allowed in a serialized object."
  remarks: "Use the MaxItemsInObjectGraph property set a limit on the number of items in an object graph that are serialized. You can also set this property using the [\\&lt;dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) element in an application configuration file."
  syntax:
    content: public int MaxItemsInObjectGraph { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of items allowed in an object. The default is 65536 bytes (64KB)."
  overload: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  id: Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the value of the name attribute in the service element in Web Services Description Language (WSDL)."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The value of the name attribute in the <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;></xref> element when exported."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  id: Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the value of the target namespace for the service in Web Services Description Language (WSDL)."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "The value of the <xref uid=&quot;langword_csharp_targetNamespace&quot; name=&quot;targetNamespace&quot; href=&quot;&quot;></xref> attribute for the <xref uid=&quot;langword_csharp_&lt;wsdl:definitions&gt;&quot; name=&quot;&lt;wsdl:definitions&gt;&quot; href=&quot;&quot;></xref> element that contains the <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  id: ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that specifies whether the service object is released when the current transaction completes."
  remarks: "Note that you must explicitly set ReleaseServiceInstanceOnTransactionComplete to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode>. Otherwise a validation exception is thrown because the default value of ReleaseServiceInstanceOnTransactionComplete is `true`.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were `false`."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the service object is to be released; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  id: SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies an object that implements the service and that is used as the singleton instance of the service."
  remarks: "This provides the service instance to which all messages addressed to the service will be dispatched.       If SetWellKnownSingleton is set to a non-`null` value, then the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> must be set to <xref:System.ServiceModel.InstanceContextMode> or an <xref:System.InvalidOperationException> is thrown."
  syntax:
    content: public void SetWellKnownSingleton (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The singleton instance of the service."
  overload: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value set is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  id: ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns a value that indicates whether the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*> property has changed from its default value and should be serialized."
  syntax:
    content: public bool ShouldSerializeConfigurationName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*> property value should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  id: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns a value that indicates whether the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*> property has changed from its default value and should be serialized."
  syntax:
    content: public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*> property value should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  id: ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns a value that indicates whether the <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*> property has changed from its default value and should be serialized."
  syntax:
    content: public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*> property value should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  id: ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns a value that indicates whether the <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*> property has changed from its default value and should be serialized."
  syntax:
    content: public bool ShouldSerializeTransactionIsolationLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*> property value should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  id: ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Returns a value that indicates whether the <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*> property has changed from its default value and should be serialized."
  syntax:
    content: public bool ShouldSerializeTransactionTimeout ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*> property value should be serialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Passes custom data objects to the bindings that support the behavior properties."
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "The service description."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "The service host."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "The service endpoints."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "The data objects needed by bindings to support the behavior."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Customizes the service run time to support the behavior properties."
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "The service description."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "The service host."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Confirms that the service description and service host are capable of supporting the behavior."
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "The service description."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "The service host."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  id: TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that specifies whether pending transactions are completed when the current session closes without error."
  syntax:
    content: public bool TransactionAutoCompleteOnSessionClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if pending transactions are to be completed when the current session closes without error; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies the transaction isolation level for new transactions created inside the service, and incoming transactions flowed from a client."
  remarks: "The isolation level in which your transaction runs determines how data is treated when changes are made in other transactions and how long your transaction must hold locks to protect against these changes. For example, the default value, <xref:System.Transactions.IsolationLevel>, specifies that no updating or inserting can occur until the transaction is complete.       This property can also be used to restrict the isolation level of incoming transactions flowed from a client."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "A <xref href=&quot;System.Transactions.IsolationLevel&quot;></xref> value that specifies the transaction isolation level. The default is <xref href=&quot;System.Transactions.IsolationLevel&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is not one of the <xref href=&quot;System.Transactions.IsolationLevel&quot;></xref> values."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets the period within which a transaction must complete."
  remarks: "This value sets the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName> property. You can also set this property using the [\\&lt;serviceTimeouts\\&gt;](../Topic/%3CserviceTimeouts%3E.md) element in an application configuration file."
  example:
  - "The following configuration file specifies a transaction timeout period of three minutes.  \n  \n [!code-cs[SBA.TransactionTimeout#2](~/add/codesnippet/csharp/sba.transactiontimeout.client/services.cs#2)]\n [!code-vb[SBA.TransactionTimeout#2](~/add/codesnippet/visualbasic/sba.transactiontimeout.client/services.vb#2)]"
  syntax:
    content: public string TransactionTimeout { get; set; }
    return:
      type: System.String
      description: "A <xref:System.TimeSpan> object that represents the time within which transactions must complete or be automatically aborted."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value is less than &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt; or greater than &lt;xref:System.TimeSpan.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  id: UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution."
  remarks: "Use this property to provide the user interface thread affinity that some applications require. For example, a Windows Forms application may be registered as a singleton service object. In this case, all calls into the service must run on the Windows Forms thread. The default case, in which UseSynchronizationContext is set to `true`, synchronizes all calls to the service to run on the thread captured from the <xref:System.Threading.SynchronizationContext?displayProperty=fullName>."
  syntax:
    content: public bool UseSynchronizationContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all calls to the service must run on the thread specified by the <xref:System.Threading.SynchronizationContext>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  id: ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a value that specifies whether the system or the application enforces SOAP <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;></xref> header processing."
  remarks: "Use the ValidateMustUnderstand property to turn off the enforced validation of arriving message headers. In normal execution, message headers are compared against the <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> property to confirm that arriving headers are explicitly handled by the service. Set this to `false` to disable this checking. When set to `false`, the application must check for headers marked with MustUnderstand=&quot;true&quot; and return a fault if one or more of them were not understood. This is useful when the application is supposed to accept any incoming SOAP messages (for example, when using typed or untyped messages) and perform custom header processing."
  syntax:
    content: public bool ValidateMustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the system is to perform SOAP header <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;></xref> processing; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, which indicates that the application performs this processing. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.AddressFilterMode
  parent: System.ServiceModel
  isExternal: false
  name: AddressFilterMode
  nameWithType: AddressFilterMode
  fullName: System.ServiceModel.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
