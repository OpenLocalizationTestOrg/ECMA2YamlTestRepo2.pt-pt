### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceBehaviorAttribute
  id: ServiceBehaviorAttribute
  children:
  - System.ServiceModel.ServiceBehaviorAttribute.#ctor
  - System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  - System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  - System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  - System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  - System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  - System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  - System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  - System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  - System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  - System.ServiceModel.ServiceBehaviorAttribute.Name
  - System.ServiceModel.ServiceBehaviorAttribute.Namespace
  - System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  - System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  langs:
  - csharp
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute
  fullName: System.ServiceModel.ServiceBehaviorAttribute
  type: Class
  summary: "Especifica o comportamento de execução interna de uma implementação de contrato de serviço."
  remarks: "Aplique o atributo de ServiceBehaviorAttribute para uma implementação de serviço para especificar o comportamento de execução transversais ao serviço. (Para especificar o comportamento de execução ao nível do método, utilize o <xref:System.ServiceModel.OperationBehaviorAttribute>atributos.)</xref:System.ServiceModel.OperationBehaviorAttribute> Este atributo só pode ser aplicado implementações de serviço. Para obter exemplos de trabalho, consulte o [Service comportamentos Samples](http://msdn.microsoft.com/en-us/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7).       Propriedades de ServiceBehaviorAttribute são um [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programação funcionalidade de modelo que permite funcionalidades comuns que os programadores; caso contrário, têm de implementar. Para obter mais informações sobre estas e outros comportamentos, consulte [especificando comportamento de tempo de execução do serviço](~/add/includes/ajax-current-ext-md.md). Para obter mais informações sobre as propriedades de runtime subjacente que alguns do seguinte conjunto de propriedades, consulte [ServiceHost expandir e a camada de modelo de serviço](~/add/includes/ajax-current-ext-md.md).      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>propriedade especifica o tipo de filtro que o sistema de emissor utiliza para localizar o ponto final que processa os pedidos.</xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>propriedade automaticamente fecha a sessão quando o canal está fechado e o serviço terminou de processar as mensagens restantes.</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>propriedade controla o modelo de thread interno, ativar o suporte para serviços reentrantes ou multithread.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>propriedade é utilizada para declarar um nome para utilização no `name` atributo o `<service>` elemento num ficheiro de configuração.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>propriedade permite que o tempo de execução ignorar as informações de serialização adicionais que não é necessária para processar a mensagem.</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>propriedade especifica se as exceções não processadas num serviço são devolvidas como falhas SOAP.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> Isto destina-se apenas a fins de depuração.      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>propriedade especifica se e quando os serviços e os objetos de serviço estão a ser reciclado durante uma troca com um cliente.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>propriedade para limitar o número de itens num gráfico de objeto que são serializadas.</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>e <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>Propriedades controlam o nome e o espaço de nomes para a expressão de WSDL do elemento de serviço.</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A> </xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>propriedade especifica se o objeto de serviço é reciclado quando uma transação for concluída.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>propriedade especifica se as transações pendentes são concluídas quando fecha a sessão.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>propriedade especifica o nível de isolamento de transação que suporta o contrato.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>propriedade especifica o período de tempo no qual uma transação tem de concluir ou -interrompe.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>propriedade indica se pretende sincronizar automaticamente chamadas de método de entrada com o thread de interface de utilizador.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>propriedade informa o sistema se deve confirmar que os cabeçalhos SOAP marcada como `MustUnderstand` tiver, na verdade, foi compreendida.</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>       O <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>propriedade também pode ser definida utilizando um ficheiro de configuração de aplicação.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> Para obter mais informações, consulte <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>.</xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>"
  example:
  - "The following code example demonstrates the ServiceBehaviorAttribute properties. The `BehaviorService` class uses the ServiceBehaviorAttribute attribute to indicate that:  \n  \n-   The service object is recycled when the transaction completes.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.ServiceBehaviorAttribute&quot;> </xref> classe."
  remarks: "Os valores predefinidos para o <xref:System.ServiceModel.ServiceBehaviorAttribute>são:- <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>está definido como <xref:System.ServiceModel.AddressFilterMode>.</xref:System.ServiceModel.AddressFilterMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> </xref:System.ServiceModel.ServiceBehaviorAttribute>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>propriedade é `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>está definido como <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>propriedade é o nome qualificado de espaço de nomes de tipo sem as informações de assemblagem.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>propriedade é `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>propriedade está definida como 64KB.</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>propriedade é o nome do tipo de serviço sem informações de espaço de nomes ou de assemblagem.</xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>propriedade é &quot;http://tempuri.org&quot;.</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>propriedade é `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> is `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>propriedade é `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>propriedade é <xref:System.Transactions.IsolationLevel>.</xref:System.Transactions.IsolationLevel> </xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>      -A <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>propriedade está definida como <xref:System.TimeSpan.Zero>.</xref:System.TimeSpan.Zero> </xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      -O <xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>propriedade é `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>"
  syntax:
    content: public ServiceBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  id: AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> que é utilizado pelo distribuidor para encaminhar mensagens a receber para o ponto final correto."
  syntax:
    content: public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }
    return:
      type: System.ServiceModel.AddressFilterMode
      description: "O <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> objeto que é utilizado pelo distribuidor para encaminhar mensagens a receber para o ponto final correto."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  id: AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica se pretende fechar automaticamente uma sessão quando um cliente fecha uma sessão de saída."
  remarks: "Por predefinição quando um cliente fecha uma sessão de saída e o serviço terminou de processar as mensagens restantes servidor fecha a sessão. Definição AutomaticSessionShutdown `false` impede que o servidor automaticamente fechar a sessão e permite um controlo personalizado de durações de sessão."
  syntax:
    content: public bool AutomaticSessionShutdown { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os serviços de fechar automaticamente uma sessão quando o cliente fecha uma sessão de saída; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  id: ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define se um serviço suporta um thread, vários threads ou chamadas reentrantes."
  remarks: "Esta propriedade indica se uma instância de um serviço pode processar um thread ou de vários threads em simultâneo a executar e, se for single-threaded, se reentrancy é suportada.      > [!NOTE] > ConcurrencyMode a propriedade interage com algumas outras definições. Por exemplo, se o <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>valor é definido para <xref:System.ServiceModel.InstanceContextMode>o resultado é que o seu serviço só pode processar uma mensagem num momento, a menos que também definir o valor de ConcurrencyMode para <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> Esta propriedade produz também o comportamento em combinação com o <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> Para obter mais informações, consulte [sessões, Instancing e simultaneidade](~/add/includes/ajax-current-ext-md.md).       Definição <xref:System.ServiceModel.ConcurrencyMode>para <xref:System.ServiceModel.ConcurrencyMode>dá instruções ao sistema para restringir as instâncias do serviço para um thread de execução de cada vez, libertando-o de lidar com problemas de threading.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode> Um valor de <xref:System.ServiceModel.ConcurrencyMode>significa que os objetos do serviço pode ser executada por vários threads ao mesmo tempo.</xref:System.ServiceModel.ConcurrencyMode> Neste caso, tem de garantir a segurança de thread.       <xref:System.ServiceModel.ConcurrencyMode>também restringe o acesso a um único thread em vez; enquanto está a processar a operação, não existem outras mensagens podem introduzir a operação.</xref:System.ServiceModel.ConcurrencyMode> Se durante a operação deixa uma chamada para outro serviço, a mensagem atual perde o bloqueio da operação, que é gratuito processar mensagens de outras. Quando chamar o serviço devolve, o bloqueio é restabelecer e mensagem original pode continuar a processar a respetiva conclusão ou até que ocorra a outra chamada fora da operação.      > [!IMPORTANT] > Apesar <xref:System.ServiceModel.ConcurrencyMode>restringe instâncias do serviço para um thread de execução de cada vez, também tem de definir <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>como 1 para garantir não mensagens fora de ordem.</xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> </xref:System.ServiceModel.ConcurrencyMode>   >> Além disso, é da responsabilidade do cliente para deixar o estado do objeto consistente antes callouts e tem de confirmar que os dados locais da operação são válidos após callouts. Tenha em atenção que a instância de serviço está desbloqueada apenas ao chamar outro serviço através de um [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] canal. Neste caso, o serviço de chamada pode reintroduzir o primeiro serviço através de uma chamada de retorno. Se não for reentrante o primeiro serviço, a sequência de chamadas origina um impasse. Para obter mais informações, consulte <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode>       Durante a chamada qualquer saída de uma operação de processamento, podem ser modificados dados não locais para a operação. (Os dados de estado local são garantidos para ser válida quando o processamento de retoma de mensagem original.) Como resultado, antes da chamada de saída tem de garantir que os dados de local não é válidos para outras chamadas recebidas e revalidate não local dados após a chamada de saída.       O pseudo-código de seguinte ilustra o padrão requerido para suporte reentrante efetuada com êxito.      ```c#   public void MyMethod()   {     this.SomeNonLocalDataState;     // Here you need to clean nonlocal state for other users     OutboundProxy proxy = new OutboundProxy();     int returnValue = proxy.CallOutOfOperation();     // Ensure that this.SomeNonLocalDataState is valid for continued use.     this.ModifyNonLocalState;     return returnValue;   }      ```Utilizar o padrão de chamada assíncrona de início/fim para uma chamada de saída quando o ConcurrencyMode <xref:System.ServiceModel.ConcurrencyMode>aciona uma exceção.</xref:System.ServiceModel.ConcurrencyMode> Chamadas assíncronas de saída necessitam de uma operação na qual se ConcurrencyMode <xref:System.ServiceModel.ConcurrencyMode>, caso em que deve processar problemas de sincronização.</xref:System.ServiceModel.ConcurrencyMode>       Geralmente, se chegar uma mensagem para uma instância que viola o modo simultâneo do garbage, a mensagem tem de aguardar até que a instância está disponível, ou até atingir o tempo limite.       Além disso, se o <xref:System.ServiceModel.ConcurrencyMode>está definido como <xref:System.ServiceModel.ConcurrencyMode>e chamada reentrante é bloqueada ao aguardar que a instância a ser libertado, o sistema Deteta o bloqueio e emite uma exceção.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>      > [!NOTE] > A <xref:System.InvalidOperationException>é emitida no tempo de execução se <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>é `true` quando a propriedade ConcurrencyMode está definida como <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> </xref:System.InvalidOperationException>       Tenha em atenção que tem de definir explicitamente <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>para `false` se houver uma operação com <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName>definido como true e defina o ConcurrencyMode como <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> Caso contrário, é emitida uma exceção de validação porque o valor predefinido de <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>é `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>       Há uma interação do ConcurrencyMode e outras propriedades que é podem alterar o comportamento em runtime. Para obter uma descrição completa destas interações, consulte [sessões, Instancing e simultaneidade](../Topic/Sessions,%20Instancing,%20and%20Concurrency.md)."
  example:
  - "The following code example demonstrates the different between using <xref:System.ServiceModel.ConcurrencyMode>, <xref:System.ServiceModel.ConcurrencyMode>, and <xref:System.ServiceModel.ConcurrencyMode>. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Um do <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref> valores; a predefinição é <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  id: ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor utilizado para localizar o elemento de serviço no ficheiro de configuração da aplicação."
  remarks: "Utilize este valor para especificar um serviço específico no ficheiro de configuração."
  syntax:
    content: public string ConfigurationName { get; set; }
    return:
      type: System.String
      description: "O valor a localizar no ficheiro de configuração. O valor predefinido é o nome de tipo totalmente qualificado sem informações de assemblagem."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor é nulo."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor é uma cadeia vazia."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que indica se o serviço ordenadas emissão é certificar-se."
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o serviço ordenadas distribuição estão a certificar-se; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  id: GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém um objeto que implementa o serviço e que é utilizado como a instância singleton do serviço, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma instância singleton."
  remarks: "Um não -`null` valor fornece a instância de serviço para o qual todas as mensagens direcionadas para o serviço irão emitir."
  syntax:
    content: public object GetWellKnownSingleton ();
    parameters: []
    return:
      type: System.Object
      description: "Uma implementação do serviço. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se pretende enviar dados de serialização desconhecidos para a rede."
  remarks: "If a type implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type. For example, if a type `Person` has members `FirstName` and `LastName`, and an element called `PhoneNumber` comes in, it is stored. When later serializing the type, `PhoneNumber` will be re-emitted. The problem is that the schema for `Person` exported by that service only has `FirstName` and `LastName`, so [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] generates a schema-invalid instance! If strict schema compliance is important, you can set IgnoreExtensionDataObject to `true` to turn this re-emitting behavior off.  \n  \n Regardless IgnoreExtensionDataObject setting, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] always processes known data (both in and out) and does not throw exceptions when extra data comes in. You can also set this property using the [\\&lt;dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) element in an application configuration file."
  example:
  - "The following example shows the use of IgnoreExtensionDataObject and an implementation of <xref:System.Runtime.Serialization.IExtensibleDataObject>. In this sample, with IgnoreExtensionDataObject set to `false`, the extra data that the client knows about is round-tripped back to the client.  \n  \n [!code-cs[DCAContainerNoValidation#1](~/add/codesnippet/csharp/dcacontainernovalidation.client/services.cs#1)]"
  syntax:
    content: public bool IgnoreExtensionDataObject { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se nunca são enviados dados de serialização desconhecidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica que as exceções de execução não processada gerais são para serem convertidos num &lt;xref:System.ServiceModel.FaultException%601?displayProperty=fullName&gt; do tipo &lt;xref:System.ServiceModel.ExceptionDetail?displayProperty=fullName&gt; e enviado como uma mensagem de falha. Defina esta opção para <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> apenas durante o desenvolvimento para um serviço de resolução de problemas."
  remarks: "Set IncludeExceptionDetailInFaults to `true` to enable exception information to flow to clients for debugging purposes. This property requires a binding that supports either request-response or duplex messaging.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications, methods that implement service operations communicate error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults. For more information, see [Specifying and Handling Faults in Contracts and Services](~/add/includes/ajax-current-ext-md.md).  \n  \n During development, you may want your service to also send other exceptions back to the client to assist you in debugging. This is a development-only feature and should not be employed in deployed services.  \n  \n To facilitate debugging development, set the IncludeExceptionDetailInFaults to `true` either in code or using an application configuration file.  \n  \n When enabled, the service automatically returns safer exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException%601> objects of type <xref:System.ServiceModel.ExceptionDetail>.  \n  \n> [!IMPORTANT]\n>  Setting IncludeExceptionDetailInFaultsto `true` enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.ServiceModel.ExceptionDetail>. Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.  \n  \n Setting this property to `true` can also be done using an application configuration file and the [\\&lt;serviceDebug\\&gt;](../Topic/%3CserviceDebug%3E.md) element, as the following code example shows.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as exceções não processadas estão a ser devolvido como falhas SOAP; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  id: InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor que indica quando forem criados novos objetos de serviço."
  remarks: "Utilize o <xref:System.ServiceModel.InstanceContextMode>propriedade para especificar quando forem criados novos objetos de serviço.</xref:System.ServiceModel.InstanceContextMode> Porque o objeto de serviço não está ligado diretamente para o canal de comunicação, a duração dos objetos de serviço é independente da duração do canal entre um cliente e a aplicação de serviço. O valor predefinido, <xref:System.ServiceModel.InstanceContextMode>, instrui a aplicação de serviço para criar um novo objeto de serviço que é estabelecida uma nova sessão de comunicação entre um cliente e a aplicação de serviço.</xref:System.ServiceModel.InstanceContextMode> As chamadas subsequentes na mesma sessão são processadas pelo mesmo objeto.       <xref:System.ServiceModel.InstanceContextMode>Indica se cada objeto de serviço processa os pedidos de canal de um cliente.</xref:System.ServiceModel.InstanceContextMode>      > [!NOTE] > O InstanceContextMode propriedade interage com algumas outras definições. Por exemplo, se o valor de InstanceContextMode está definido para <xref:System.ServiceModel.InstanceContextMode>o resultado é que o seu serviço pode apenas processo uma mensagem numa altura, exceto se também a definir o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>valor para <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> </xref:System.ServiceModel.InstanceContextMode> Esta propriedade produz também o comportamento em combinação com o <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName> Para obter mais informações, consulte [sessões, Instancing e simultaneidade](~/add/includes/ajax-current-ext-md.md).       Para o comportamento de duração singleton (por exemplo, se a aplicação anfitriã chama o <xref:System.ServiceModel.ServiceHost.%23ctor%2A>construtor e transmite um objecto para utilizar como o serviço), a classe de serviço tem de definir InstanceContextMode `Single`, ou é emitida uma exceção no tempo de execução.</xref:System.ServiceModel.ServiceHost.%23ctor%2A>"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "Um do <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref> valores; o valor predefinido é <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o número máximo de itens permitidos num objecto serializado."
  remarks: "Utilize o MaxItemsInObjectGraph propriedade definir um limite no número de itens num gráfico de objeto que são serializados. Também pode definir esta propriedade utilizando o [ \\&lt; dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) elemento no ficheiro de configuração da aplicação."
  syntax:
    content: public int MaxItemsInObjectGraph { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de itens permitidos num objeto. A predefinição é 65536 bytes (64KB)."
  overload: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  id: Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor do atributo name no elemento de serviço na Web Services Description Language (WSDL)."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O valor do atributo name no <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref> elemento durante a exportação."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  id: Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o valor do espaço de nomes de destino para o serviço na Web Services Description Language (WSDL)."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "O valor da <xref uid=&quot;langword_csharp_targetNamespace&quot; name=&quot;targetNamespace&quot; href=&quot;&quot;> </xref> atributo para o <xref uid=&quot;langword_csharp_&lt;wsdl:definitions&gt;&quot; name=&quot;&lt;wsdl:definitions&gt;&quot; href=&quot;&quot;> </xref> elemento que contém o <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  id: ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se o objeto de serviço é lançado quando concluir a transação atual."
  remarks: "Note that you must explicitly set ReleaseServiceInstanceOnTransactionComplete to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode>. Otherwise a validation exception is thrown because the default value of ReleaseServiceInstanceOnTransactionComplete is `true`.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were `false`."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto de serviço está a ser libertado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  id: SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica um objeto que implementa o serviço e que é utilizado como a instância singleton do serviço."
  remarks: "Isto fornece a instância de serviço para o qual todas as mensagens direcionadas para o serviço irão emitir.       Se SetWellKnownSingleton estiver definido como um não -`null` valor, em seguida, a <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>deve ser definido como <xref:System.ServiceModel.InstanceContextMode>ou um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.ServiceModel.InstanceContextMode> </xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>"
  syntax:
    content: public void SetWellKnownSingleton (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A instância singleton do serviço."
  overload: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O conjunto de valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  id: ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>propriedade foi alterado de valor predefinido e devem ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>"
  syntax:
    content: public bool ShouldSerializeConfigurationName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>valor da propriedade deve ser serializada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  id: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>propriedade foi alterado de valor predefinido e devem ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>"
  syntax:
    content: public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>valor da propriedade deve ser serializada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  id: ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>propriedade foi alterado de valor predefinido e devem ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>"
  syntax:
    content: public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>valor da propriedade deve ser serializada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  id: ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>propriedade foi alterado de valor predefinido e devem ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>"
  syntax:
    content: public bool ShouldSerializeTransactionIsolationLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>valor da propriedade deve ser serializada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  id: ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Devolve um valor que indica se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>propriedade foi alterado de valor predefinido e devem ser serializada.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>"
  syntax:
    content: public bool ShouldSerializeTransactionTimeout ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>valor da propriedade deve ser serializada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Transmite os objetos de dados personalizada para os enlaces que suportam as propriedades de comportamento."
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O anfitrião do serviço."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "Os pontos finais de serviço."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Os objetos de dados necessários para enlaces para suportar o comportamento."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Customizes o serviço de tempo para suportar as propriedades de comportamento de execução."
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O anfitrião do serviço."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Confirma se a descrição de serviço e o anfitrião do serviço são capazes de suportar o comportamento."
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O anfitrião do serviço."
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  id: TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se transacções pendentes são concluídas quando fecha a sessão atual sem erros."
  syntax:
    content: public bool TransactionAutoCompleteOnSessionClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se transacções pendentes são concluídas quando fecha a sessão atual sem erro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica o nível de isolamento de transação para novas transações criadas dentro de serviço e as transações de entrada em fluxo a partir de um cliente."
  remarks: "O nível de isolamento em que executa a transação determina a forma como os dados são tratados quando são efetuadas alterações em outras transações e o tempo durante o qual a transação tem contenham bloqueios para proteger contra estas alterações. Por exemplo, o valor predefinido, <xref:System.Transactions.IsolationLevel>, especifica que não atualizar ou inserir pode ocorrer até que a transação está concluída.</xref:System.Transactions.IsolationLevel>       Também é possível utilizar esta propriedade para restringir o isolamento de nível de transações de entrada em fluxo a partir de um cliente."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "A <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> valor que especifica o nível de isolamento da transação. A predefinição é <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor não é um do <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref> valores."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define o período no qual uma transação tem de concluir."
  remarks: "Este valor define o <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName> Também pode definir esta propriedade utilizando o [ \\&lt; serviceTimeouts\\&gt;](../Topic/%3CserviceTimeouts%3E.md) elemento no ficheiro de configuração da aplicação."
  example:
  - "The following configuration file specifies a transaction timeout period of three minutes.  \n  \n [!code-cs[SBA.TransactionTimeout#2](~/add/codesnippet/csharp/sba.transactiontimeout.client/services.cs#2)]\n [!code-vb[SBA.TransactionTimeout#2](~/add/codesnippet/visualbasic/sba.transactiontimeout.client/services.vb#2)]"
  syntax:
    content: public string TransactionTimeout { get; set; }
    return:
      type: System.String
      description: "A <xref:System.TimeSpan>objeto que representa o tempo no qual transações tem de concluir ou automaticamente fosse abortadas.</xref:System.TimeSpan>"
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor é nulo."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor é menor que &lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt; ou superior a &lt;xref:System.TimeSpan.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  id: UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se pretende utilizar o contexto de sincronização atual para escolher o thread de execução."
  remarks: "Utilize esta propriedade para fornecer a afinidade de threads de interface de utilizador que algumas aplicações necessitam. Por exemplo, uma aplicação do Windows Forms pode ser registada como um objeto de serviço singleton. Neste caso, todas as chamadas para o serviço tem de executar o thread de Windows Forms. As maiúsculas e minúsculas do predefinido, na qual UseSynchronizationContext está definido como `true`, sincroniza todas as chamadas para o serviço para executar no thread capturado <xref:System.Threading.SynchronizationContext?displayProperty=fullName>.</xref:System.Threading.SynchronizationContext?displayProperty=fullName>"
  syntax:
    content: public bool UseSynchronizationContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se todas as chamadas para o serviço tem de executar no thread especificado pelo <xref:System.Threading.SynchronizationContext>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Threading.SynchronizationContext> O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  id: ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um valor que especifica se o sistema ou a aplicação impõe SOAP <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;> </xref> processamento de cabeçalho."
  remarks: "Utilize a propriedade ValidateMustUnderstand para desativar a validação de cabeçalhos de mensagens atrasada imposta. Na execução normal, os cabeçalhos de mensagens são comparados ao <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A>propriedade para confirmar que os cabeçalhos atrasados explicitamente são processados pelo serviço.</xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> Defina esta opção para `false` para desativar esta verificação. Quando definido como `false`, a aplicação tem de verificar para cabeçalhos marcados com MustUnderstand = &quot;true&quot; e devolver uma falha se um ou mais dos mesmos não foram compreendido. Isto é útil quando a aplicação deve aceitar quaisquer mensagens recebidas SOAP (por exemplo, quando utilizar escreveu ou mensagens sem tipo) e efetuar o processamento de cabeçalho personalizado."
  syntax:
    content: public bool ValidateMustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o sistema consiste em efetuar o cabeçalho SOAP <xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;> </xref> processamento; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, que indica que a aplicação executa este processamento. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.AddressFilterMode
  parent: System.ServiceModel
  isExternal: false
  name: AddressFilterMode
  nameWithType: AddressFilterMode
  fullName: System.ServiceModel.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
