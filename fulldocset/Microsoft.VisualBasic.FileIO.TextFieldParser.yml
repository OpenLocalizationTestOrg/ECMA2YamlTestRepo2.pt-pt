### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  id: TextFieldParser
  children:
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Close
  - Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  - Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize
  - Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  - Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  - Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd
  - Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])
  - Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])
  - Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  - Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  langs:
  - csharp
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
  type: Class
  summary: "Fornece métodos e propriedades para analisar texto estruturado ficheiros."
  remarks: "O `TextFieldParser` objeto fornece métodos e propriedades para analisar estruturados ficheiros de texto. Ao analisar um ficheiro de texto com o `TextFieldParser` é semelhante à iterating através de um ficheiro de texto, enquanto o `ReadFields` método para extrair os campos de texto é semelhante ao dividir as cadeias.       O `TextFieldParser` pode analisar dois tipos de ficheiros: delimitados ou de largura fixa. Algumas propriedades, tais como `Delimiters` e `HasFieldsEnclosedInQuotes` são apenas significativo quando trabalhar com ficheiros delimitados, enquanto o `FieldWidths` propriedade é significativa apenas quando trabalhar com ficheiros de largura fixa.       A tabela seguinte lista os exemplos de tarefas que envolvem o `Microsoft.VisualBasic.FileIO.TextFieldParser` objeto.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com vários formatos | [Como: ler a partir de ficheiros de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example parses through a tab-delimited text file, `Bigfile`.  \n  \n [!code-vb[VbVbalrTextFieldParser#17](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._9_1.vb)]"
  syntax:
    content: 'public class TextFieldParser : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream)
  nameWithType: TextFieldParser.TextFieldParser(Stream)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto para analisar o ficheiro ou fluxo que é representado pelo `stream` parâmetro."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> O fluxo para ser analisada."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>não pode ser lida."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(TextReader)
  nameWithType: TextFieldParser.TextFieldParser(TextReader)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(TextReader)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto para analisar o ficheiro ou fluxo que é representado pelo `reader` parâmetro."
  syntax:
    content: public TextFieldParser (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "<xref:System.IO.TextReader>.</xref:System.IO.TextReader> O <xref:System.IO.TextReader>fluxo para ser analisada.</xref:System.IO.TextReader>"
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(String)
  nameWithType: TextFieldParser.TextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto ao analisar o ficheiro especificado pelo `path` parâmetro."
  syntax:
    content: public TextFieldParser (string path);
    parameters:
    - id: path
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O caminho completo do ficheiro para ser analisada."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma cadeia vazia."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto para analisar o ficheiro ou fluxo que é representado pelo `stream` parâmetro.      > [!CAUTION] > Quando compilar um conjunto de carateres com uma definição de cultural específica e obter os mesmos carateres com uma definição de cultural diferentes, os carateres poderão não estar interpretable e pode provocar uma exceção ao ser emitida."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> O fluxo para ser analisada."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> O codificação a utilizar se a codificação de caráter não é determinado a partir do ficheiro. Predefinição é <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>defaultEncoding</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>não pode ser lida."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)
  id: '#ctor(System.String,System.Text.Encoding)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(String,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto ao analisar o ficheiro especificado pelo `path` parâmetro.      > [!CAUTION] > Quando compilar um conjunto de carateres com uma definição de cultural específica e obter os mesmos carateres com uma definição de cultural diferentes, os carateres poderão não estar interpretable e pode provocar uma exceção ao ser emitida."
  syntax:
    content: public TextFieldParser (string path, System.Text.Encoding defaultEncoding);
    parameters:
    - id: path
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O caminho completo do ficheiro para ser analisada."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> O codificação a utilizar se a codificação de caráter não é determinado a partir do ficheiro. Predefinição é <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma cadeia vazia ou <code>defaultEncoding</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto para analisar o ficheiro ou fluxo que é representado pelo `stream` parâmetro.       Se o `detectEncoding` parâmetro é `True`, este construtor tenta detetar a codificação observando os três primeiros bytes do ficheiro ou fluxo. -Reconhece automaticamente UTF-8, little endian Unicode e big endian texto Unicode se o ficheiro for iniciado com as marcas de ordem de bytes adequado. Caso contrário, a codificação especificada por `defaultEncoding` é utilizado.      > [!CAUTION] > Quando compilar um conjunto de carateres com uma definição de cultural específica e obter os mesmos carateres com uma definição de cultural diferentes, os carateres poderão não estar interpretable e pode provocar uma exceção ao ser emitida."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> O fluxo para ser analisada."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> O codificação a utilizar se a codificação de caráter não é determinado a partir do ficheiro. Predefinição é <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
    - id: detectEncoding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Indica se devem ser procure de marcas de ordem de bytes no início do ficheiro. Predefinição é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>defaultEncoding</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>não pode ser lida."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.String,System.Text.Encoding,System.Boolean)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(String,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding,Boolean)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto ao analisar o ficheiro especificado pelo `path` parâmetro.       Se o `detectEncoding` parâmetro é `True`, este construtor tenta detetar a codificação observando os três primeiros bytes do ficheiro ou fluxo. -Reconhece automaticamente UTF-8, little endian Unicode e big endian texto Unicode se o ficheiro for iniciado com as marcas de ordem de bytes adequado. Caso contrário, a codificação especificada por `defaultEncoding` é utilizado.      > [!CAUTION] > Quando compilar um conjunto de carateres com uma definição de cultural específica e obter os mesmos carateres com uma definição de cultural diferentes, os carateres poderão não estar interpretable e pode provocar uma exceção ao ser emitida."
  syntax:
    content: public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);
    parameters:
    - id: path
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. O caminho completo do ficheiro para ser analisada."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> O codificação a utilizar se a codificação de caráter não é determinado a partir do ficheiro. Predefinição é <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
    - id: detectEncoding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Indica se devem ser procure de marcas de ordem de bytes no início do ficheiro. Predefinição é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma cadeia vazia ou <code>defaultEncoding</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream,Encoding,Boolean,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Cria uma nova `TextFieldParser` objeto para analisar o ficheiro ou fluxo que é representado pelo `stream` parâmetro.       Se o `detectEncoding` parâmetro é `True`, este construtor tenta detetar a codificação observando os três primeiros bytes do ficheiro ou fluxo. -Reconhece automaticamente UTF-8, little endian Unicode e big endian texto Unicode se o ficheiro for iniciado com as marcas de ordem de bytes adequado. Caso contrário, a codificação especificada por `defaultEncoding` é utilizado.      > [!CAUTION] > Quando compilar um conjunto de carateres com uma definição de cultural específica e obter os mesmos carateres com uma definição de cultural diferentes, os carateres poderão não estar interpretable e pode provocar uma exceção ao ser emitida."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> O fluxo para ser analisada."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> O codificação a utilizar se a codificação de caráter não é determinado a partir do ficheiro. Predefinição é <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
    - id: detectEncoding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Indica se devem ser procure de marcas de ordem de bytes no início do ficheiro. Predefinição é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Indica se devem ser deixe `stream` quando abrir o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto está fechado. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>defaultEncoding</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>não pode ser lida."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close
  id: Close
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Close()
  nameWithType: TextFieldParser.Close()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Fecha atual <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto."
  remarks: ''
  example:
  - "This example closes the `TextFieldParser``FileReader`.  \n  \n [!code-vb[VbVbalrTextFieldParser#14](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._27_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  id: CommentTokens
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: CommentTokens
  nameWithType: TextFieldParser.CommentTokens
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Define os tokens de comentário. Um token de comentário é uma cadeia que, quando colocado no início de uma linha, indica que a linha é um comentário e deve ser ignorada pelo parser."
  remarks: "Este é um membro avançado; Não mostrar em IntelliSense, exceto se clicar no **todos os** separador.       Tokens de comentário de comprimento zero são ignorados."
  example:
  - "This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.  \n  \n [!code-vb[VbVbalrTextFieldParser#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._69_1.vb)]"
  syntax:
    content: public string[] CommentTokens { get; set; }
    return:
      type: System.String[]
      description: "Uma matriz de cadeia que contém todos os o comentário tokens para o <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um token de comentário inclui o espaço em branco."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  id: Delimiters
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Delimiters
  nameWithType: TextFieldParser.Delimiters
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Define os delimitadores para um ficheiro de texto."
  remarks: "Esta propriedade é significativa apenas se o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>propriedade está definida como `FieldType.Delimited`.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>       Definir os delimitadores para um ficheiro de texto, também pode ser conseguido com a <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A>método.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `Delimiters` propriedade.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).  \n  \n [!code-vb[VbVbalrTextFieldParser#9](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._88_1.vb)]"
  syntax:
    content: public string[] Delimiters { get; set; }
    return:
      type: System.String[]
      description: "Uma matriz de cadeia que contém todos os delimitadores de campo para a <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um valor de delimitador está definido como um caráter de nova linha, uma cadeia vazia, ou <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose
  id: Dispose
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Dispose()
  nameWithType: TextFieldParser.Dispose()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Liberta os recursos utilizados pelo <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextFieldParser.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Liberta os recursos utilizados pelo <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Valor booleano. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>liberta recursos geridos e; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> versões unmanaged apenas recursos."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  id: EndOfData
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: EndOfData
  nameWithType: TextFieldParser.EndOfData
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se não houver nenhuma não vazio, não comentário linhas entre a posição do cursor atual e o fim do ficheiro."
  remarks: "Esta propriedade pode ser utilizada durante a leitura de ficheiros para determinar a extremidade dos dados a ser lidos.       A tabela seguinte lista os exemplos de tarefas que envolvem o `EndOfData` propriedade.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.  \n  \n [!code-vb[VbVbalrTextFieldParser#6](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._28_1.vb)]"
  syntax:
    content: public bool EndOfData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se não houver nenhuma mais dados para ler; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  id: ErrorLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ErrorLine
  nameWithType: TextFieldParser.ErrorLine
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve a linha que provocou o mais recente <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> exceção."
  remarks: "Se não <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>tem sido emitidas exceções, é devolvida uma cadeia vazia.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException>       O <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A>propriedade pode ser utilizada para apresentar o número da linha que provocou a exceção.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A>       A tabela seguinte lista os exemplos de tarefas que envolvem o `ErrorLine` propriedade.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.  \n  \n [!code-vb[VbVbalrTextFieldParser#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._53_1.vb)]"
  syntax:
    content: public string ErrorLine { get; }
    return:
      type: System.String
      description: "A linha que provocou o mais recente <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> exceção."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  id: ErrorLineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ErrorLineNumber
  nameWithType: TextFieldParser.ErrorLineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve o número da linha que provocou o mais recente <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> exceção."
  remarks: "Se não <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>tem sido emitidas exceções, -1 é devolvido.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException>       O <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A>propriedade pode ser utilizada para apresentar o número da linha que provocou a exceção.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> E os comentários de linhas em branco não são ignorados ao determinar o número de linha.       A tabela seguinte lista os exemplos de tarefas que envolvem o `ErrorLineNumber` propriedade.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.  \n  \n [!code-vb[VbVbalrTextFieldParser#3](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._11_1.vb)]"
  syntax:
    content: public long ErrorLineNumber { get; }
    return:
      type: System.Int64
      description: "O número da linha que provocou o mais recente <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> exceção."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  id: FieldWidths
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: FieldWidths
  nameWithType: TextFieldParser.FieldWidths
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Indica a largura de cada coluna no ficheiro de texto a ser analisado."
  remarks: "Esta propriedade é significativa apenas se o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>propriedade está definida como `FieldType.FixedWidth`.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> Se a entrada último na matriz é menor ou igual a zero, o campo é prestado da largura de variável.       O <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A>método também pode ser utilizado para definir larguras de campo.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A>       A tabela seguinte lista os exemplos de tarefas que envolvem o `FieldWidths` propriedade.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width  \n  \n [!code-vb[VbVbalrTextFieldParser#16](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._92_1.vb)]"
  syntax:
    content: public int[] FieldWidths { get; set; }
    return:
      type: System.Int32[]
      description: "Uma matriz de número inteiro que contém a largura de cada coluna no ficheiro de texto que está a ser analisado."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um valor de largura em nenhuma localização que não seja a última entrada da matriz é menor ou igual a zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize
  id: Finalize
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Finalize()
  nameWithType: TextFieldParser.Finalize()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Permite a <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> o objeto a tentativa de libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~TextFieldParser ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  id: HasFieldsEnclosedInQuotes
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: HasFieldsEnclosedInQuotes
  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Indica se campos estão entre aspas quando um ficheiro delimitado está a ser analisado."
  remarks: "Este é um membro avançado; Não mostrar em IntelliSense, exceto se clicar no **todos os** separador.       Se a propriedade é `True`, o parser de parte do princípio de que os campos são entre aspas (&quot;&quot;) e pode conter endings de linha.       Se um campo está entre aspas, por exemplo, `abc, &quot;field2a,field2b&quot;, field3` e esta propriedade é `True`, em seguida, todo o texto entre aspas vai ser devolvido como é; este exemplo devolvam `abc|field2a,field2b|field3`. Definição desta propriedade como `False` iria tornar este exemplo retorno `abc|&quot;field2a|field2b&quot;|field3`."
  example:
  - "This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.  \n  \n [!code-vb[VbVbalrTextFieldParser#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._33_1.vb)]"
  syntax:
    content: public bool HasFieldsEnclosedInQuotes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os campos são entre aspas; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  id: LineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: LineNumber
  nameWithType: TextFieldParser.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve o número de linha atual ou devolve -1 se não existem mais carateres estão disponíveis no fluxo."
  remarks: "Este é um membro avançado; Não mostrar em IntelliSense, exceto se clicar no **todos os** separador.       E os comentários de linhas em branco não são ignorados ao determinar o número de linha."
  example:
  - "This example searches for the name \"Jones\" in the text file and reports what line(s) it occurs on.  \n  \n [!code-vb[VbVbalrTextFieldParser#11](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._89_1.vb)]"
  syntax:
    content: public long LineNumber { get; }
    return:
      type: System.Int64
      description: "O número de linha atual."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)
  id: PeekChars(System.Int32)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: PeekChars(Int32)
  nameWithType: TextFieldParser.PeekChars(Int32)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Lê o número especificado de carateres sem avançar o cursor."
  remarks: "O `numberOfChars` valor tem de ser inferior ao número total de carateres na linha. Se não, é a cadeia devolvida pela `PeekChars` será truncado para o comprimento da linha.       Linhas em branco são ignoradas.       Fim de linha carateres não são devolvidos.       O `PeekChars` método não efetua nenhuma análise; um caráter final da linha dentro de um campo delimitado é interpretado como de fim real da linha.       A tabela seguinte lista os exemplos de tarefas que envolvem o `PeekChars` método.      | Para | Consulte |   |--------|---------|   | Determinar o formato de um campo antes de a análise | [Como: ler a partir de ficheiros de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.  \n  \n [!code-vb[VbVbalrTextFieldParser#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._48_1.vb)]"
  syntax:
    content: public string PeekChars (int numberOfChars);
    parameters:
    - id: numberOfChars
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;></xref>. Número de carateres a ler. Necessário."
    return:
      type: System.String
      description: "Ler uma cadeia que contém o número especificado de carateres."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>numberOfChars</code>é menor que 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields
  id: ReadFields
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ReadFields()
  nameWithType: TextFieldParser.ReadFields()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Lê todos os campos na linha atual, devolve-os como uma matriz de cadeias e avança o cursor para a linha seguinte, que contém os dados."
  remarks: "Para permitir que os utilizadores analisar ficheiros de texto em vários formatos, o `ReadFields` método examina os valores de `TextFieldType`, `Delimiters`, e `FieldWidths`, se forem especificadas, sempre que é chamado. Os utilizadores precisam configurar corretamente o `TextFieldType` e `FieldWidths` ou `Delimiters` propriedades, conforme apropriado. Se `TextFieldType` está definido como `Delimited`, e `Delimiters` não está definida ou se `TextFieldType` está definido como `FixedWidth` e `FieldWidths`, é emitida uma exceção.       Se `ReadFields` encontra linhas em branco, são ignorados e é devolvida a seguinte linha de não em branco.       Se o `ReadFields` método não é possível analisar a linha atual, emite uma exceção e mover para a linha seguinte. Isto permite que a aplicação tentar novamente a analisar a linha.       A tabela seguinte lista os exemplos de tarefas que envolvem o `ReadFields` método.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`. The example writes the fields to `Testfile.txt`.  \n  \n [!code-vb[VbVbalrTextFieldParser#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._242_1.vb)]"
  syntax:
    content: public string[] ReadFields ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de cadeias que contém valores de campo para a linha atual."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*
  exceptions:
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Um campo não pode ser analisado utilizando o formato especificado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine
  id: ReadLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ReadLine()
  nameWithType: TextFieldParser.ReadLine()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve a linha atual como uma cadeia e avança o cursor para a linha seguinte."
  remarks: "O `ReadLine` método não efetua nenhuma análise; um caráter final da linha dentro de um campo delimitado é interpretado como de fim real da linha.       `Nothing`é devolvido se for atingido o fim do ficheiro."
  example:
  - "This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.  \n  \n [!code-vb[VbVbalrTextFieldParser#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._138_1.vb)]  \n  \n If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.  \n  \n This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line."
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "A linha atual do ficheiro ou fluxo."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd
  id: ReadToEnd
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ReadToEnd()
  nameWithType: TextFieldParser.ReadToEnd()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Lê o resto do ficheiro de texto e devolve-la como uma cadeia."
  remarks: "Este é um membro avançado; Não mostrar em IntelliSense, exceto se clicar no **todos os** separador.       Se houver mais nada de leitura porque foi atingido o fim do ficheiro, `Nothing` é devolvido.       O `ReadToEnd` método ignora as linhas em branco e comentários."
  example:
  - "This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.  \n  \n [!code-vb[VbVbalrTextFieldParser#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._200_1.vb)]  \n  \n If `Testfile.txt` does not exist, it is created by the `WriteAllText` method."
  syntax:
    content: public string ReadToEnd ();
    parameters: []
    return:
      type: System.String
      description: "O texto restantes do ficheiro ou fluxo."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])
  id: SetDelimiters(System.String[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: SetDelimiters(String[])
  nameWithType: TextFieldParser.SetDelimiters(String[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Define os delimitadores para o leitor aos valores especificados e define o tipo de campo <xref uid=&quot;langword_csharp_Delimited&quot; name=&quot;Delimited&quot; href=&quot;&quot;> </xref>."
  remarks: "O conteúdo existente do `Delimiters` propriedade são eliminados quando este método está definido.       Este método proporciona uma forma de definir delimitadores sem criar uma matriz.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `SetDelimiters` método.      | Para | Consulte |   |--------|---------|   | Analisar um ficheiro de texto | [Analisar ficheiros de texto com o objeto o TextFieldParser](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a text field parser and defines the delimiter as `vbTab`.  \n  \n [!code-vb[VbVbalrTextFieldParser#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._239_1.vb)]  \n  \n Replace the path `C:\\logs\\test.log` with the path and name of the file you wish to parse."
  syntax:
    content: public void SetDelimiters (string[] delimiters);
    parameters:
    - id: delimiters
      type: System.String[]
      description: "A matriz do tipo <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um delimitador é comprimento zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])
  id: SetFieldWidths(System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: SetFieldWidths(Int32[])
  nameWithType: TextFieldParser.SetFieldWidths(Int32[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Define os delimitadores para o leitor aos valores especificados."
  remarks: "O conteúdo existente do `Delimiters` propriedade são eliminados quando isto estiver definido.       Este método proporciona uma forma de definir delimitadores sem criar uma matriz.       A tabela seguinte apresenta uma lista de exemplo de tarefas que envolvem o `SetFieldWidths` método.      | Para | Consulte |   |--------|---------|   | Analisar um ficheiro de texto. | [Analisar ficheiros de texto com o objeto o TextFieldParser](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a text-field parser and defines the field width as `5`.  \n  \n [!code-vb[VbVbalrTextFieldParser#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._56_1.vb)]  \n  \n Replace the path `C:\\logs\\test.log` with the path and name of the file you wish to parse.  \n  \n The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.  \n  \n [!code-vb[VbVbalrTextFieldParser#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._56_2.vb)]  \n  \n Replace the path `C:\\logs\\test.log` with the path and name of the file you wish to parse."
  syntax:
    content: public void SetFieldWidths (int[] fieldWidths);
    parameters:
    - id: fieldWidths
      type: System.Int32[]
      description: "Array of <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  id: TextFieldType
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldType
  nameWithType: TextFieldParser.TextFieldType
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Indica se o ficheiro para ser analisada é delimitado ou de largura fixa."
  remarks: "O valor predefinido desta propriedade é delimitado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `TextFieldType` propriedade.      | Para | Consulte |   |--------|---------|   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com vários formatos | [Como: ler a partir de ficheiros de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.  \n  \n [!code-vb[VbVbalrTextFieldParser#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._100_1.vb)]  \n  \n This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.  \n  \n [!code-vb[VbVbalrTextFieldParser#20](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._100_2.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }
    return:
      type: Microsoft.VisualBasic.FileIO.FieldType
      description: "Um valor de TextFieldType que indica se o ficheiro para ser analisada é delimitado ou de largura fixa."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  id: TrimWhiteSpace
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TrimWhiteSpace
  nameWithType: TextFieldParser.TrimWhiteSpace
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Indica se espaços em branco à esquerda e à direita devem ser recortados dos valores de campo."
  remarks: "O valor predefinido para esta propriedade é `True`."
  example:
  - "This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.  \n  \n [!code-vb[VbVbalrTextFieldParser#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._12_1.vb)]"
  syntax:
    content: public bool TrimWhiteSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o espaço em branco à direita e à esquerda devem ser recortadas dos valores de campo; caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream)
  nameWithType: TextFieldParser.TextFieldParser(Stream)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(TextReader)
  nameWithType: TextFieldParser.TextFieldParser(TextReader)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(String)
  nameWithType: TextFieldParser.TextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(String,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(String,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding,Boolean)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream,Encoding,Boolean,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Close()
  nameWithType: TextFieldParser.Close()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Close()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: CommentTokens
  nameWithType: TextFieldParser.CommentTokens
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Delimiters
  nameWithType: TextFieldParser.Delimiters
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Dispose()
  nameWithType: TextFieldParser.Dispose()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextFieldParser.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(Boolean)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: EndOfData
  nameWithType: TextFieldParser.EndOfData
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLine
  nameWithType: TextFieldParser.ErrorLine
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLineNumber
  nameWithType: TextFieldParser.ErrorLineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: FieldWidths
  nameWithType: TextFieldParser.FieldWidths
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Finalize()
  nameWithType: TextFieldParser.Finalize()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: HasFieldsEnclosedInQuotes
  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: LineNumber
  nameWithType: TextFieldParser.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: PeekChars(Int32)
  nameWithType: TextFieldParser.PeekChars(Int32)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadFields()
  nameWithType: TextFieldParser.ReadFields()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadLine()
  nameWithType: TextFieldParser.ReadLine()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadToEnd()
  nameWithType: TextFieldParser.ReadToEnd()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetDelimiters(String[])
  nameWithType: TextFieldParser.SetDelimiters(String[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(String[])
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetFieldWidths(Int32[])
  nameWithType: TextFieldParser.SetFieldWidths(Int32[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(Int32[])
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldType
  nameWithType: TextFieldParser.TextFieldType
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
- uid: Microsoft.VisualBasic.FileIO.FieldType
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: FieldType
  nameWithType: FieldType
  fullName: Microsoft.VisualBasic.FileIO.FieldType
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TrimWhiteSpace
  nameWithType: TextFieldParser.TrimWhiteSpace
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Close
  nameWithType: TextFieldParser.Close
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: CommentTokens
  nameWithType: TextFieldParser.CommentTokens
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Delimiters
  nameWithType: TextFieldParser.Delimiters
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Dispose
  nameWithType: TextFieldParser.Dispose
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: EndOfData
  nameWithType: TextFieldParser.EndOfData
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLine
  nameWithType: TextFieldParser.ErrorLine
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLineNumber
  nameWithType: TextFieldParser.ErrorLineNumber
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: FieldWidths
  nameWithType: TextFieldParser.FieldWidths
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Finalize
  nameWithType: TextFieldParser.Finalize
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: HasFieldsEnclosedInQuotes
  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: LineNumber
  nameWithType: TextFieldParser.LineNumber
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: PeekChars
  nameWithType: TextFieldParser.PeekChars
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadFields
  nameWithType: TextFieldParser.ReadFields
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadLine
  nameWithType: TextFieldParser.ReadLine
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadToEnd
  nameWithType: TextFieldParser.ReadToEnd
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetDelimiters
  nameWithType: TextFieldParser.SetDelimiters
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetFieldWidths
  nameWithType: TextFieldParser.SetFieldWidths
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldType
  nameWithType: TextFieldParser.TextFieldType
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TrimWhiteSpace
  nameWithType: TextFieldParser.TrimWhiteSpace
