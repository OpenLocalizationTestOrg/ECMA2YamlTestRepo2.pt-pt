### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection
  id: TimerEventSubscriptionCollection
  children:
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  - System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  langs:
  - csharp
  name: TimerEventSubscriptionCollection
  nameWithType: TimerEventSubscriptionCollection
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection
  type: Class
  summary: "Represents an ordered list of <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> objects."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       A TimerEventSubscriptionCollection represents the queue of <xref:System.Workflow.Runtime.TimerEventSubscription> objects associated with a workflow instance and provides methods to manage this queue. Subscriptions are ordered in the queue based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values; those with smaller <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values are positioned before those with larger <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A> values. You can use the methods provided by this class to manage the collection of active timer event subscriptions exposed by <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty> for each workflow instance. You can use <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Add%2A> or <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%2A> to add or remove subscriptions from the timer queue. Whenever the first element in the timer queue changes, the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is called to cancel the timer event that was previously at the beginning of the queue and schedule the new timer event."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class TimerEventSubscriptionCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)
  id: Add(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Add(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Add(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(TimerEventSubscription)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Adds a <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> to the timer queue."
  remarks: "Adds the <xref:System.Workflow.Runtime.TimerEventSubscription> to the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the new subscription is added at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event that was previously at the beginning of the queue and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule the new timer event. Add locks the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> before adding the new subscription and is, therefore, thread safe."
  syntax:
    content: public void Add (System.Workflow.Runtime.TimerEventSubscription item);
    parameters:
    - id: item
      type: System.Workflow.Runtime.TimerEventSubscription
      description: "The <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> to add to the timer queue."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TimerEventSubscriptionCollection.CopyTo(Array,Int32)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Copies the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref> elements to an existing one-dimensional <xref:System.Array>, starting at the specified array index."
  remarks: "CopyTo is thread safe."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The one-dimensional <xref:System.Array> that is the destination of the elements copied from the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref>. The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  id: Count
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Count
  nameWithType: TimerEventSubscriptionCollection.Count
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Gets the number of <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> objects in the timer queue."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> objects in the queue."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TimerEventSubscriptionCollection.GetEnumerator()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Returns an enumerator that iterates through the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref>."
  remarks: "Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined. The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure. To guarantee thread safety during enumeration, you can lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A>."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref>."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TimerEventSubscriptionCollection.IsSynchronized
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Gets a value that indicates whether the access to the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref> is synchronized (thread safe)."
  remarks: "Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> indicating that access to the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref> is synchronized (thread safe)."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek
  id: Peek
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Peek()
  nameWithType: TimerEventSubscriptionCollection.Peek()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Returns the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> at the beginning of the timer queue without removing it."
  remarks: "Peek is thread safe."
  syntax:
    content: public System.Workflow.Runtime.TimerEventSubscription Peek ();
    parameters: []
    return:
      type: System.Workflow.Runtime.TimerEventSubscription
      description: "The <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> at the beginning of the timer queue or a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic) if the timer queue is empty."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)
  id: Remove(System.Guid)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Remove(Guid)
  nameWithType: TimerEventSubscriptionCollection.Remove(Guid)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Removes the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> that has the specified subscription id from the timer queue."
  remarks: "Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> with the specified subscription id from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. Remove is thread safe."
  syntax:
    content: public void Remove (Guid timerSubscriptionId);
    parameters:
    - id: timerSubscriptionId
      type: System.Guid
      description: "The <xref:System.Guid> of the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> to remove."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)
  id: Remove(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: Remove(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Removes the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> from the timer queue."
  remarks: "Removes the <xref:System.Workflow.Runtime.TimerEventSubscription> from the timer queue. Subscriptions in the queue are positioned based on their <xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt%2A?displayProperty=fullName> values; those with smaller values are positioned in front of those with larger values. If the subscription removed was the subscription at the beginning of the queue, <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A?displayProperty=fullName> is called to cancel the timer event associated with this subscription and <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule%28System.Threading.WaitCallback%2CSystem.Guid%2CSystem.DateTime%2CSystem.Guid%29?displayProperty=fullName> is called to schedule a timer event for the subscription that is now at the beginning of the queue. <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove%28System.Guid%29> is thread safe."
  syntax:
    content: public void Remove (System.Workflow.Runtime.TimerEventSubscription item);
    parameters:
    - id: item
      type: System.Workflow.Runtime.TimerEventSubscription
      description: "The <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> to remove from the timer queue."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  id: SyncRoot
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TimerEventSubscriptionCollection.SyncRoot
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Gets an object that can be used to synchronize access to the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref>."
  remarks: "SyncRoot returns an object, which can be used to synchronize access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection>.       Access to the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> is synchronized; however, enumerating through a collection is intrinsically not a thread safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the <xref:System.Workflow.Runtime.TimerEventSubscriptionCollection> during the entire enumeration by using SyncRoot or catch the exceptions resulting from changes made by other threads."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object used to synchronize access to the <xref href=&quot;System.Workflow.Runtime.TimerEventSubscriptionCollection&quot;></xref>."
  overload: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  id: TimerCollectionProperty
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  langs:
  - csharp
  name: TimerCollectionProperty
  nameWithType: TimerEventSubscriptionCollection.TimerCollectionProperty
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  type: Field
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Timer queue associated with a workflow instance. This queue contains time ordered <xref href=&quot;System.Workflow.Runtime.TimerEventSubscription&quot;></xref> objects for a workflow."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty TimerCollectionProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Add(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Add(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add(TimerEventSubscription)
- uid: System.Workflow.Runtime.TimerEventSubscription
  parent: System.Workflow.Runtime
  isExternal: false
  name: TimerEventSubscription
  nameWithType: TimerEventSubscription
  fullName: System.Workflow.Runtime.TimerEventSubscription
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(System.Array,System.Int32)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TimerEventSubscriptionCollection.CopyTo(Array,Int32)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Count
  nameWithType: TimerEventSubscriptionCollection.Count
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TimerEventSubscriptionCollection.GetEnumerator()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TimerEventSubscriptionCollection.IsSynchronized
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Peek()
  nameWithType: TimerEventSubscriptionCollection.Peek()
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek()
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Guid)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Remove(Guid)
  nameWithType: TimerEventSubscriptionCollection.Remove(Guid)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(System.Workflow.Runtime.TimerEventSubscription)
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Remove(TimerEventSubscription)
  nameWithType: TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove(TimerEventSubscription)
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TimerEventSubscriptionCollection.SyncRoot
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: TimerCollectionProperty
  nameWithType: TimerEventSubscriptionCollection.TimerCollectionProperty
  fullName: System.Workflow.Runtime.TimerEventSubscriptionCollection.TimerCollectionProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Add*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Add
  nameWithType: TimerEventSubscriptionCollection.Add
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.CopyTo*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: CopyTo
  nameWithType: TimerEventSubscriptionCollection.CopyTo
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Count*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Count
  nameWithType: TimerEventSubscriptionCollection.Count
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.GetEnumerator*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TimerEventSubscriptionCollection.GetEnumerator
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.IsSynchronized*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TimerEventSubscriptionCollection.IsSynchronized
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Peek*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Peek
  nameWithType: TimerEventSubscriptionCollection.Peek
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.Remove*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: Remove
  nameWithType: TimerEventSubscriptionCollection.Remove
- uid: System.Workflow.Runtime.TimerEventSubscriptionCollection.SyncRoot*
  parent: System.Workflow.Runtime.TimerEventSubscriptionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TimerEventSubscriptionCollection.SyncRoot
