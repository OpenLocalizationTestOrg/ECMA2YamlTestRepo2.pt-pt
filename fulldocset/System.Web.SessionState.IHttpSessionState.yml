### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IHttpSessionState
  id: IHttpSessionState
  children:
  - System.Web.SessionState.IHttpSessionState.Abandon
  - System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.IHttpSessionState.Clear
  - System.Web.SessionState.IHttpSessionState.CodePage
  - System.Web.SessionState.IHttpSessionState.CookieMode
  - System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.IHttpSessionState.Count
  - System.Web.SessionState.IHttpSessionState.GetEnumerator
  - System.Web.SessionState.IHttpSessionState.IsCookieless
  - System.Web.SessionState.IHttpSessionState.IsNewSession
  - System.Web.SessionState.IHttpSessionState.IsReadOnly
  - System.Web.SessionState.IHttpSessionState.IsSynchronized
  - System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  - System.Web.SessionState.IHttpSessionState.Item(System.String)
  - System.Web.SessionState.IHttpSessionState.Keys
  - System.Web.SessionState.IHttpSessionState.LCID
  - System.Web.SessionState.IHttpSessionState.Mode
  - System.Web.SessionState.IHttpSessionState.Remove(System.String)
  - System.Web.SessionState.IHttpSessionState.RemoveAll
  - System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.IHttpSessionState.SessionID
  - System.Web.SessionState.IHttpSessionState.StaticObjects
  - System.Web.SessionState.IHttpSessionState.SyncRoot
  - System.Web.SessionState.IHttpSessionState.Timeout
  langs:
  - csharp
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
  type: Interface
  summary: "Defines the contract to implement a custom session-state container."
  remarks: "A session-state container provides access to the session-state values and related information for the current session. Session information included in a session-state container is exposed to application code through the <xref:System.Web.SessionState.HttpSessionState> class using the <xref:System.Web.HttpContext.Session%2A> property. The <xref:System.Web.SessionState.HttpSessionState> class is a wrapper class for a session-state container.       The ASP.NET implementation of a session-state container is the <xref:System.Web.SessionState.HttpSessionStateContainer> class. At the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> creates and populates an <xref:System.Web.SessionState.HttpSessionStateContainer> object and assigns it to the current <xref:System.Web.HttpContext>. At the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, the <xref:System.Web.SessionState.SessionStateModule> retrieves the <xref:System.Web.SessionState.HttpSessionStateContainer> object from the current <xref:System.Web.HttpContext> and performs any required session work, such as writing the session values to the session store, or abandoning the session. If the request is abruptly terminated, such as through a redirect, the <xref:System.Web.SessionState.SessionStateModule> performs the same cleanup by calling the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method.       To create a custom session-state container, create a class that implements the IHttpSessionState interface. If you are creating your own custom session-state container, you must also replace the <xref:System.Web.SessionState.SessionStateModule> with your own custom module. Your custom module will create an instance of your custom session-state container and add it to the current <xref:System.Web.HttpContext> using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method. An example of a custom session-state module is included in the <xref:System.Web.SessionState.SessionStateUtility> class overview."
  example:
  - "The following code example implements the IHttpSessionState interface to create a new session-state container class named `MySessionState`.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/csharp/t-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public interface IHttpSessionState
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ends the current session."
  remarks: "The Abandon method is used to clear out session data and raise the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application."
  example:
  - "The following code example implements the Abandon method of the <xref:System.Web.SessionState.IHttpSessionState> interface. The code example duplicates the behavior of the <xref:System.Web.SessionState.HttpSessionStateContainer> class in that it adds an <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property that is set to `true` when the Abandon method is called. The <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is checked by the session-state module during the <xref:System.Web.HttpApplication.ReleaseRequestState> event to determine whether the session has been abandoned, and the session-state module clears out session data and executes the **Session_OnEnd** event.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/csharp/m-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Adds a new item to the session-state collection."
  remarks: ''
  example:
  - "The following code example implements the Add method of the <xref:System.Web.SessionState.IHttpSessionState> interface to add a new item value to the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/csharp/m-system.web.sessionstat_8_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/visualbasic/m-system.web.sessionstat_8_1.vb)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the item to add to the session-state collection."
    - id: value
      type: System.Object
      description: "The value of the item to add to the session-state collection."
  overload: System.Web.SessionState.IHttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Clears all values from the session-state item collection."
  remarks: "Clear performs the same function as <xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>."
  example:
  - "The following code example implements the Clear method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets the code-page identifier for the current session."
  remarks: "A character set (code page) is used to interpret multi-byte character data, determining character value, and therefore sort order. Code-page settings apply only to multi-byte character data, not to Unicode character data.       This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Text.Encoding.CodePage%2A> property of the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead."
  example:
  - "The following code example implements the CodePage property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the encoding for the current response.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_22_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_22_1.vb)]"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "The code-page identifier for the current session."
  overload: System.Web.SessionState.IHttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value that indicates whether the application is configured for cookieless sessions."
  remarks: "The CookieMode property returns a <xref:System.Web.HttpCookieMode> enumeration value that is based on the value of the `cookieless` attribute of the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> configuration element. If the `cookieless` attribute is set to `true`, then the CookieMode property returns <xref:System.Web.HttpCookieMode>; otherwise, the CookieMode property returns <xref:System.Web.HttpCookieMode>."
  example:
  - "The following code example sets the `cookieless` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element to `true` in the Web.config file to change the CookieMode property. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState  \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "One of the <xref href=&quot;System.Web.HttpCookieMode&quot;></xref> values that indicate whether the application is configured for cookieless sessions. The default is <xref href=&quot;System.Web.HttpCookieMode&quot;></xref>."
  overload: System.Web.SessionState.IHttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Copies the collection of session-state item values to a one-dimensional array, starting at the specified index in the array."
  remarks: ''
  example:
  - "The following code example implements the CopyTo method of the <xref:System.Web.SessionState.IHttpSessionState> interface to copy session-state item values to an array.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/csharp/m-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/visualbasic/m-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The <xref:System.Array> that receives the session values."
    - id: index
      type: System.Int32
      description: "The index in `array` where copying starts."
  overload: System.Web.SessionState.IHttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets the number of items in the session-state item collection."
  remarks: ''
  example:
  - "The following code example implements the Count property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the number of items in the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/csharp/p-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/visualbasic/p-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the session-state item collection."
  overload: System.Web.SessionState.IHttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Returns an enumerator that can be used to read all the session-state item values in the current session."
  remarks: ''
  example:
  - "The following code example implements the GetEnumerator method of the <xref:System.Web.SessionState.IHttpSessionState> interface to return an enumerator for the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/csharp/m-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/visualbasic/m-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can iterate through the values in the session-state item collection."
  overload: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie."
  remarks: "For information on cookieless sessions, see [Session Identifiers](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example implements the IsCookieless property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/csharp/p-system.web.sessionstat_7_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/visualbasic/p-system.web.sessionstat_7_1.vb)]"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session is embedded in the URL; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the session was created with the current request."
  remarks: ''
  example:
  - "The following code example implements the IsNewSession property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/csharp/p-system.web.sessionstat_19_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_19_1.vb)]"
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session was created with the current request; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the session is read-only."
  remarks: "Session state is set to read-only by setting the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> page attribute to `ReadOnly`."
  example:
  - "The following code example implements the IsReadOnly property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the value of an internal variable that was set in the constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/csharp/p-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/visualbasic/p-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe)."
  remarks: ''
  example:
  - "The following code example implements the IsSynchronized property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/csharp/p-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/visualbasic/p-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to the collection is synchronized (thread safe); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets a session-state item value by numerical index."
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Web.SessionState.IHttpSessionState.Item%2A> property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by numeric index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/csharp/p-system.web.sessionstat_23_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/visualbasic/p-system.web.sessionstat_23_1.vb)]"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The numerical index of the session-state item value."
    return:
      type: System.Object
      description: "The session-state item value specified in the <code>index</code> parameter."
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets a session-state item value by name."
  remarks: ''
  example:
  - "The following code example implements the Item property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by its key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/csharp/p-system.web.sessionstat_16_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/visualbasic/p-system.web.sessionstat_16_1.vb)]"
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "The key name of the session-state item value."
    return:
      type: System.Object
      description: "The session-state item value specified in the <code>name</code> parameter."
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a collection of the keys for all values stored in the session-state item collection."
  remarks: ''
  example:
  - "The following code example implements the Keys property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return a collection of session-state item key names from the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/csharp/p-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/visualbasic/p-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session-item keys."
  overload: System.Web.SessionState.IHttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets the locale identifier (LCID) of the current session."
  remarks: "This `LCID` property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.       ASP.NET does not store the locale identifier in session state. The LCID property calls the <xref:System.Globalization.CultureInfo.LCID%2A> to get and set the identifier."
  example:
  - "The following code example implements the LCID property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the locale identifier for the current page.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session."
  overload: System.Web.SessionState.IHttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets the current session-state mode."
  remarks: "For information on different session-state modes, see [Session-State Modes](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example implements the Mode property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/csharp/p-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "One of the <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref> values."
  overload: System.Web.SessionState.IHttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Deletes an item from the session-state item collection."
  remarks: ''
  example:
  - "The following code example implements the Remove method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the session-state item collection by key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/csharp/m-system.web.sessionstat_18_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/visualbasic/m-system.web.sessionstat_18_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the item to delete from the session-state item collection."
  overload: System.Web.SessionState.IHttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Clears all values from the session-state item collection."
  remarks: "RemoveAll performs the same function as <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>."
  example:
  - "The following code example implements the RemoveAll method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Deletes an item at a specified index from the session-state item collection."
  remarks: ''
  example:
  - "The following code example implements the RemoveAt method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the internal session-state item collection by numerical index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/csharp/m-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/visualbasic/m-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the item to remove from the session-state collection."
  overload: System.Web.SessionState.IHttpSessionState.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets the unique session identifier for the session."
  remarks: ''
  example:
  - "The following code example implements the SessionID property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/csharp/p-system.web.sessionstat_20_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_20_1.vb)]"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "The session ID."
  overload: System.Web.SessionState.IHttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a collection of objects declared by <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;></xref> tags within the ASP.NET application file Global.asax."
  remarks: '`StaticObjects` is provided for compatibility with earlier versions of ASP.'
  example:
  - "The following code example implements the StaticObjects property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/csharp/p-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/visualbasic/p-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "An <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;></xref> containing objects declared in the Global.asax file."
  overload: System.Web.SessionState.IHttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets an object that can be used to synchronize access to the collection of session-state values."
  remarks: ''
  example:
  - "The following code example implements the SyncRoot property to return a copy of the current object that implements the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/csharp/p-system.web.sessionstat_2_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/visualbasic/p-system.web.sessionstat_2_1.vb)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.Web.SessionState.IHttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets and sets the time-out period (in minutes) allowed between requests before the session-state provider terminates the session."
  remarks: ''
  example:
  - "The following code example implements the Timeout property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the session timeout value that is stored in an internal variable created in the class constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/csharp/p-system.web.sessionstat_6_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_6_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "The time-out period, in minutes."
  overload: System.Web.SessionState.IHttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.IHttpSessionState.Clear
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.IHttpSessionState.Count
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
- uid: System.Web.SessionState.IHttpSessionState.Keys
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.IHttpSessionState.LCID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
- uid: System.Web.SessionState.IHttpSessionState.Abandon*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: IHttpSessionState.Abandon
- uid: System.Web.SessionState.IHttpSessionState.Add*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add
  nameWithType: IHttpSessionState.Add
- uid: System.Web.SessionState.IHttpSessionState.Clear*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear
  nameWithType: IHttpSessionState.Clear
- uid: System.Web.SessionState.IHttpSessionState.CodePage*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
- uid: System.Web.SessionState.IHttpSessionState.CookieMode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: IHttpSessionState.CopyTo
- uid: System.Web.SessionState.IHttpSessionState.Count*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: IHttpSessionState.GetEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item
  nameWithType: IHttpSessionState.Item
- uid: System.Web.SessionState.IHttpSessionState.Keys*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
- uid: System.Web.SessionState.IHttpSessionState.LCID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
- uid: System.Web.SessionState.IHttpSessionState.Remove*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove
  nameWithType: IHttpSessionState.Remove
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: IHttpSessionState.RemoveAll
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: IHttpSessionState.RemoveAt
- uid: System.Web.SessionState.IHttpSessionState.SessionID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
