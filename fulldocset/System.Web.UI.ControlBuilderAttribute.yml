### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlBuilderAttribute
  id: ControlBuilderAttribute
  children:
  - System.Web.UI.ControlBuilderAttribute.#ctor(System.Type)
  - System.Web.UI.ControlBuilderAttribute.BuilderType
  - System.Web.UI.ControlBuilderAttribute.Default
  - System.Web.UI.ControlBuilderAttribute.Equals(System.Object)
  - System.Web.UI.ControlBuilderAttribute.GetHashCode
  - System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute
  langs:
  - csharp
  name: ControlBuilderAttribute
  nameWithType: ControlBuilderAttribute
  fullName: System.Web.UI.ControlBuilderAttribute
  type: Class
  summary: "Especifica um <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> classe para a criação de um controlo personalizado no parser de ASP.NET. Esta classe não pode ser herdada."
  remarks: "Este atributo especifica o construtor <xref:System.Type>a ser utilizado para criar um controlo personalizado, como mostrado no seguinte código: ```   [ControlBuilderAttribute(typeof(ControlBuilderType))]   ``` </xref:System.Type>"
  example:
  - "The following code example creates a customized selection list that is used to display a message based on the `SelectedIndex` and the `Message` values defined at run time. The following command line is used to build the executable.  \n  \n```vb#  \nvbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_MyControlBuilderAtt.dll ControlBuilderAtt.vb  \n```  \n  \n```c#  \ncsc /t:library /out:myWebAppPath/Bin/cs_MyControlBuilderAtt.dll ControlBuilderAtt.cs  \n```  \n  \n [!code-cs[SystemWebUI_ControlBuilderAttribute_2#1](~/add/codesnippet/csharp/t-system.web.ui.controlb_0_1.cs)]\n [!code-vb[SystemWebUI_ControlBuilderAttribute_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlb_0_1.vb)]  \n  \n The following example uses the custom control defined above. In particular, it assigns the `SelectedIndex` and `Message` values at run time to determine the message to be rendered. Notice that the values shown in the `Register` directive reflect the previous command line.  \n  \n```vb#  \n<%@ Register TagPrefix=\"custom\" Assembly=\"myControlBuilderAtt\" Namespace=\"CustomControls\" %>  \n <h4>Using ControlBuilderAttribute Class<h4>  \n <form runat=\"server\">  \n  <custom:MyVB_CustomParse SelectedIndex=\"3\" runat=server>  \n  <customitem Message=\"Visual Basic version. Item One selected\"/>  \n  <customitem Message=\"Visual Basic version. Item Two selected\"/>  \n  <customitem Message=\"Visual Basic version. Item Three selected\"/>  \n  <customitem Message=\"Visual Basic version. Item Four selected\"/>  \n  </custom:MyVB_CustomParse>  \n </form>  \n```  \n  \n```c#  \n<%@ Register TagPrefix=\"custom\" Assembly=\"myControlBuilderAtt\" Namespace=\"CustomControls\" %>  \n <h4>Using ControlBuilderAttribute Class<h4>  \n <form runat=\"server\">  \n  <custom:MyCS_CustomParse SelectedIndex=\"2\" runat=server>  \n  <customitem Message=\"C# version. Item One selected\"/>  \n  <customitem Message=\"C# version. Item Two selected\"/>  \n  <customitem Message=\"C# version. Item Three selected\"/>  \n  <customitem Message=\"C# version. Item Four selected\"/>  \n  </custom:MyCS_CustomParse>  \n </form>  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlBuilderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilderAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Web.UI.ControlBuilderAttribute
  langs:
  - csharp
  name: ControlBuilderAttribute(Type)
  nameWithType: ControlBuilderAttribute.ControlBuilderAttribute(Type)
  fullName: System.Web.UI.ControlBuilderAttribute.ControlBuilderAttribute(Type)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Especifica o construtor de controlo para um controlo personalizado."
  remarks: "A associação do tipo de construtor de controlo a um controlo personalizado é obtida pela anterior a classe de construtor de controlo personalizado com a seguinte definição do atributo:```   [ControlBuilderAttribute(typeof(controlbuildertype))]   ```"
  syntax:
    content: public ControlBuilderAttribute (Type builderType);
    parameters:
    - id: builderType
      type: System.Type
      description: "O tipo de construtor de controlo"
  overload: System.Web.UI.ControlBuilderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilderAttribute.BuilderType
  id: BuilderType
  parent: System.Web.UI.ControlBuilderAttribute
  langs:
  - csharp
  name: BuilderType
  nameWithType: ControlBuilderAttribute.BuilderType
  fullName: System.Web.UI.ControlBuilderAttribute.BuilderType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref:System.Type>do controlo associado com o atributo.</xref:System.Type> Esta propriedade é só de leitura."
  remarks: ''
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#5](~/add/codesnippet/csharp/p-system.web.ui.controlb_2_1.cs)]
     [!code-vb[ControlBuilderSamples_1#5](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_2_1.vb)]
  syntax:
    content: public Type BuilderType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do controlo associado com o atributo.</xref:System.Type>"
  overload: System.Web.UI.ControlBuilderAttribute.BuilderType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilderAttribute.Default
  id: Default
  parent: System.Web.UI.ControlBuilderAttribute
  langs:
  - csharp
  name: Default
  nameWithType: ControlBuilderAttribute.Default
  fullName: System.Web.UI.ControlBuilderAttribute.Default
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Especifica a nova <xref href=&quot;System.Web.UI.ControlBuilderAttribute&quot;> </xref> objeto. Por predefinição, o novo objeto é definido como nulo. Este campo é só de leitura."
  syntax:
    content: public static readonly System.Web.UI.ControlBuilderAttribute Default;
    return:
      type: System.Web.UI.ControlBuilderAttribute
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilderAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlBuilderAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlBuilderAttribute.Equals(Object)
  fullName: System.Web.UI.ControlBuilderAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se atual <xref href=&quot;System.Web.UI.ControlBuilderAttribute&quot;> </xref> é idêntico para o objeto especificado."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um objeto para comparar a atual <xref href=&quot;System.Web.UI.ControlBuilderAttribute&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>obj</code> is a <xref href=&quot;System.Web.UI.ControlBuilderAttribute&quot;></xref> and is identical to the current <xref href=&quot;System.Web.UI.ControlBuilderAttribute&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.ControlBuilderAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilderAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlBuilderAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlBuilderAttribute.GetHashCode()
  fullName: System.Web.UI.ControlBuilderAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve o indicativo de hash do <xref href=&quot;System.Web.UI.ControlBuilderAttribute&quot;> </xref> objeto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um inteiro sinal de 32 bits que representa o código hash; caso contrário, 0, se o <xref:System.Web.UI.ControlBuilderAttribute.BuilderType*>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.ControlBuilderAttribute.BuilderType*>"
  overload: System.Web.UI.ControlBuilderAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.Web.UI.ControlBuilderAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: ControlBuilderAttribute.IsDefaultAttribute()
  fullName: System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o construtor de controlo atual é a predefinição."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o construtor de controlo atual é a predefinição."
  overload: System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlBuilderAttribute.#ctor(System.Type)
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: ControlBuilderAttribute(Type)
  nameWithType: ControlBuilderAttribute.ControlBuilderAttribute(Type)
  fullName: System.Web.UI.ControlBuilderAttribute.ControlBuilderAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlBuilderAttribute.BuilderType
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: BuilderType
  nameWithType: ControlBuilderAttribute.BuilderType
  fullName: System.Web.UI.ControlBuilderAttribute.BuilderType
- uid: System.Web.UI.ControlBuilderAttribute.Default
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: Default
  nameWithType: ControlBuilderAttribute.Default
  fullName: System.Web.UI.ControlBuilderAttribute.Default
- uid: System.Web.UI.ControlBuilderAttribute
  parent: System.Web.UI
  isExternal: false
  name: ControlBuilderAttribute
  nameWithType: ControlBuilderAttribute
  fullName: System.Web.UI.ControlBuilderAttribute
- uid: System.Web.UI.ControlBuilderAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlBuilderAttribute.Equals(Object)
  fullName: System.Web.UI.ControlBuilderAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlBuilderAttribute.GetHashCode
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlBuilderAttribute.GetHashCode()
  fullName: System.Web.UI.ControlBuilderAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: ControlBuilderAttribute.IsDefaultAttribute()
  fullName: System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute()
- uid: System.Web.UI.ControlBuilderAttribute.#ctor*
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: ControlBuilderAttribute
  nameWithType: ControlBuilderAttribute.ControlBuilderAttribute
- uid: System.Web.UI.ControlBuilderAttribute.BuilderType*
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: BuilderType
  nameWithType: ControlBuilderAttribute.BuilderType
- uid: System.Web.UI.ControlBuilderAttribute.Equals*
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlBuilderAttribute.Equals
- uid: System.Web.UI.ControlBuilderAttribute.GetHashCode*
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlBuilderAttribute.GetHashCode
- uid: System.Web.UI.ControlBuilderAttribute.IsDefaultAttribute*
  parent: System.Web.UI.ControlBuilderAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: ControlBuilderAttribute.IsDefaultAttribute
