### YamlMime:ManagedReference
items:
- uid: System.EntryPointNotFoundException
  id: EntryPointNotFoundException
  children:
  - System.EntryPointNotFoundException.#ctor
  - System.EntryPointNotFoundException.#ctor(System.String)
  - System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException
  fullName: System.EntryPointNotFoundException
  type: Class
  summary: "A exceção é acionada quando uma tentativa para carregar uma classe falhar devido à ausência de um método de entrada."
  remarks: "Quando o language runtime não é possível carregar uma assemblagem porque não é possível identificar o ponto de entrada a assemblagem, é emitida uma exceção de EntryPointNotFoundException.  Esta exceção pode ser emitida com as seguintes condições:-o language runtime não é possível localizar um ponto de entrada de aplicação (normalmente, um `Main` método) numa assemblagem executável. O ponto de entrada da aplicação tem de ser um global ou `static` método sem parâmetros ou uma matriz de cadeia que o respectivo parâmetro único. O ponto de entrada pode devolver `void`, ou pode devolver um <xref:System.Int32>ou <xref:System.UInt32>código de saída.</xref:System.UInt32> </xref:System.Int32> Uma assemblagem de aplicação não é possível definir mais do que um ponto de entrada.      -A chamada para uma função de uma DLL do Windows não pode ser resolvida porque não é possível localizar a função. No exemplo seguinte, é emitida uma exceção de EntryPointNotFoundException porque User32.dll não inclui uma função com o nome `GetMyNumber`.           [!code-cs[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)][!code-vb[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb) ] -não é possível resolver a chamada para uma função de uma DLL do Windows porque o nome utilizado na chamada de método não corresponde um nome encontrado na assemblagem.       Frequentemente, isto ocorre porque o <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>campo está implícita ou explicitamente definido como `true`, o método chamado inclui um ou mais parâmetros de cadeia e tem um ANSI e uma versão de Unicode e o nome utilizado na chamada de método não corresponde ao nome de nesta versão ANSI ou Unicode.</xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName> O exemplo seguinte fornece uma ilustração através da tentativa de chamar o Windows `MessageBox` funcionar em User32.dll. Porque a primeira definição de método especifica <xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>para empacotamento de referências de cadeia, o idioma comum procura para a versão de caráter ao nível da função, `MessageBoxW`, em vez do nome utilizado na chamada de método, `MessageBox`.</xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>  A segunda definição de método corrige o problema ao chamar o `MessageBoxW` em vez do `MessageBox` função.           [!code-vb[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)][!code-cs[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs) ] -está a tentar chamar uma função numa biblioteca de ligação dinâmica pelo respetivo nome simple, em vez de nome do respetivo decorated.       Normalmente, o compilador de C++ gera um nome decorated para funções DLL. Por exemplo, o seguinte código C++ define uma função com o nome `Double` numa biblioteca com o nome TestDll.dll.           [!code-cpp[System.EntryPointNotFoundException.Class#6](~/add/codesnippet/cpp/testdll/testdll.cpp#6) ] quando o código no exemplo seguinte tenta chamar a função, é emitida uma exceção de EntryPointNotFoundException porque o `Double` não é possível localizar a função.           [!code-cs[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)][!code-vb[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb) ] no entanto, se a função é chamada utilizando o respetivo nome decorated (neste caso, `?Double@@YAHH@Z`), a chamada de função for bem sucedida, tal como mostra o exemplo seguinte.                 [!code-cs[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)][!code-vb[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb) ] pode encontrar os nomes de funções exportados por uma DLL com um utilitário como Dumpbin.exe decorated.            -Está a tentar chamar um método numa assemblagem gerida como se fosse uma biblioteca de ligação dinâmica não gerido. Para ver isto em ação, compile o seguinte exemplo para uma assemblagem com o nome StringUtilities.dll.           [!code-cs[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)][!code-vb[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb) ] , em seguida, compilar e executar o exemplo seguinte, que tenta chamar a `StringUtilities.SayGoodMorning` método na biblioteca de ligação dinâmica StringUtilities.dll como se fosse o código não gerido.       O resultado é uma exceção de EntryPointNotFoundException.           [!code-cs[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)][!code-vb[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb) ] para eliminar a exceção, adicione uma referência para a assemblagem gerida e acesso a `StringUtilities.SayGoodMorning` método tal como acederia a qualquer outro método no código gerido, como sucede o exemplo seguinte.                 [!code-cs[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)][!code-vb[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb) ] -está a tentar chamar um método numa DLL COM como se fosse uma DLL do Windows.       Para aceder a uma DLL COM, selecione o **Adicionar referência** opção no Visual Studio para adicionar uma referência para o projeto e, em seguida, selecione a biblioteca de tipos do **COM** separador.       Para obter uma lista de valores de propriedade inicial para uma instância de EntryPointNotFoundException, consulte o <xref:System.EntryPointNotFoundException.%23ctor%2A>construtores.</xref:System.EntryPointNotFoundException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EntryPointNotFoundException : TypeLoadException
  inheritance:
  - System.TypeLoadException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor
  id: '#ctor'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe."
  remarks: "Este construtor inicializa a <xref:System.Exception.Message%2A>propriedade da instância do novo a uma mensagem fornecido pelo sistema que descreve o erro, como &quot;Não foi possível localizar ponto de entrada.&quot;</xref:System.Exception.Message%2A> Esta mensagem tem em consideração o idioma atual do sistema.       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Uma referência nula (`Nothing` no Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| A cadeia de mensagem de erro localizado. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException ();
    parameters: []
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe com uma mensagem de erro especificado."
  remarks: "O conteúdo de `message` se destina a ser compreendidos pela entidade humans. O autor da chamada deste construtor não é necessária para se certificar de que esta cadeia tem foram localizada da cultura atual do sistema.       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Uma referência nula (`Nothing` no Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| A cadeia de mensagem de erro. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explique a razão para a exceção."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe com dados serializados."
  remarks: "Este construtor é chamado durante a desserialização para reconstitute o objeto de exceção transmitido através de uma transmissão em fluxo."
  syntax:
    content: protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto que contém os dados de objecto serializado."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "As nível contextual das informações sobre a origem ou destino."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe com uma mensagem de erro especificado e uma referência a exceção interna que é a causa desta exceção."
  remarks: "Uma exceção que é acionada como um resultado direto de uma exceção anterior deve incluir uma referência a exceção anterior no <xref:System.Exception.InnerException%2A>propriedade.</xref:System.Exception.InnerException%2A> O <xref:System.Exception.InnerException%2A>propriedade devolve o mesmo valor que é transmitido no construtor ou uma referência nula (`Nothing` no Visual Basic) se o <xref:System.Exception.InnerException%2A>propriedade não fornecer o valor da exceção interna para o construtor.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| A referência a exceção interna. |   | <xref:System.TypeLoadException.Message%2A>| A cadeia de mensagem de erro. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explique a razão para a exceção."
    - id: inner
      type: System.Exception
      description: "A exceção é a causa da exceção atual. Se o `inner` parâmetro não é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic), a exceção atual num <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> bloco que processa a exceção interna."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: false
  name: System.TypeLoadException
- uid: System.EntryPointNotFoundException.#ctor
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.EntryPointNotFoundException.#ctor*
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException
