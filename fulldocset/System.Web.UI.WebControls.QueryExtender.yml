### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.QueryExtender
  id: QueryExtender
  children:
  - System.Web.UI.WebControls.QueryExtender.#ctor
  - System.Web.UI.WebControls.QueryExtender.DataSource
  - System.Web.UI.WebControls.QueryExtender.Expressions
  - System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.QueryExtender.SaveViewState
  - System.Web.UI.WebControls.QueryExtender.TargetControlID
  - System.Web.UI.WebControls.QueryExtender.TrackViewState
  langs:
  - csharp
  name: QueryExtender
  nameWithType: QueryExtender
  fullName: System.Web.UI.WebControls.QueryExtender
  type: Class
  summary: "Enables data from a data source to be filtered without an explicit <xref uid=&quot;langword_csharp_Where&quot; name=&quot;Where&quot; href=&quot;&quot;></xref> clause in the data source."
  remarks: "In this topic:      -   [Introduction](#Introduction)      -   [Background](#background)      -   [Filter Options](#filter_options)      -   [Tasks](#Tasks)      -   [Declarative Syntax](#declarative_syntax)      <a name=&quot;Introduction&quot;></a>    ## Introduction    The QueryExtender control is used to create filters for data that is retrieved from a data source, without using an explicit `Where` clause in the data source. The QueryExtender control can be used to specify filtering by using declarative syntax.      <a name=&quot;background&quot;></a>    ## Background    Filtering excludes data from a data source by displaying only the records that meet specified criteria. Filtering enables you to present different views of the data that is in a data set without affecting the data in the data set.       Filtering typically requires that you create a `Where` clause to apply to the command that queries the data source. However, the `Where` property of the data source control might not expose the full functionality that is available. For example, the QueryExtender control enables you to query a table by searching for strings at the beginning, end or anywhere in .data field.       To expose the full functionality that is available in LINQ and to make filtering data easier, [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] provides the QueryExtender control. The QueryExtender control has the following benefits:      -   It provides a richer filtering experience than writing a `Where` clause. For example, you can search a Products table for Boolean values by using the <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> filter without writing a query.      -   It lets you specify filters by using the same syntax for the <xref:System.Web.UI.WebControls.LinqDataSource> and <xref:System.Web.UI.WebControls.EntityDataSource> controls and for any other data source controls that you might use.      -   It can be used with <xref:System.Web.UI.WebControls.LinqDataSource> control, with a <xref:System.Web.UI.WebControls.EntityDataSource> control, or with third-party data sources.      <a name=&quot;filter_options&quot;></a>    ## Filter Options    The QueryExtender control supports a variety of options that you can use to filter data. The control lets you search strings, search numeric values in a specified range, and compare a property value in a table to a specified value. The control also lets you sort the data and provide custom queries.       These options are provided as LINQ expressions in the QueryExtender control. The QueryExtender control also supports expressions that are specific to [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] Dynamic Data applications.       The following table lists the options that you can use to filter data in the QueryExtender control.      |Expression|Description|   |----------------|-----------------|   |<xref:System.Web.DynamicData.ControlFilterExpression>|(Dynamic Data only) Builds a database query by using the data key that is selected in a source data-bound control.<br /><br /> For information about how to use this filter option, see [How to: Filter Table Rows Using Values from a Parent Table in Dynamic Data](http://msdn.microsoft.com/en-us/a5566986-7c30-4e71-b4a4-81cd16095749).|   |<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|Specifies a user-defined expression for a data source. The custom LINQ expression can be invoked in an event handler.|   |<xref:System.Web.DynamicData.DynamicFilterExpression>|(Dynamic Data only) Builds a database query by using the specified <xref:System.Web.DynamicData.DynamicFilter> control.<br /><br /> For information about how to use this filter option, see [How to: Filter Table Rows Using Foreign Key in Dynamic Data](http://msdn.microsoft.com/en-us/b774e56a-a5b9-41b7-b114-699313ef2056).|   |<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|Specifies a user-defined LINQ expression for a data source. The expression is invoked in a method.|   |<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|Applies a sort expression to an <xref:System.Linq.IQueryable> data source object. After you apply the <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> value, you can apply additional sort operations by specifying a <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> value.|   |<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|Compares the properties the data field and property values that are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.|   |<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|Determines whether a value is greater than or less than a specified value, or whether a value is between two values.|   |<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|Compares values in a field or fields to a specified string value.|       You can use these QueryExtender options individually or you can combine them to provide complex filtering in a Web page. For more information, see [QueryExtender Web Server Control Overview](~/add/includes/ajax-current-ext-md.md). [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f)      <a name=&quot;Tasks&quot;></a>    ## Tasks    The following table lists tasks that show how to use the QueryExtender control to filter data.      |Document|Task|   |--------------|----------|   |[Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f)|Shows how to use the filter options that the QueryExtender control provides.|      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:QueryExtender        EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBiding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;UnLoad event hadler&quot;       Runat=&quot;server&quot;       TargetControlID=&quot;string&quot;       Visible=&quot;True|False&quot;   >           <asp:ControlFilterExpression                ControlD=&quot;string&quot;               Column=&quot;string&quot;>            </asp:ControlFilterExpression>           <asp:DynamicFilterExpression               ControlD=&quot;string&quot;           </asp:DynamicFilterExpression>           <asp:CustomExpression=&quot;string&quot;               OnQuerying=&quot;OnQerying event handler&quot;>           </asp:CustomExpression>           <asp:OrderByExpression=&quot;string&quot;               DataField=&quot;string&quot;               Direction=&quot;string&quot;>               <asp:ThenByExpression                    DataField=&quot;string&quot;                    Direction=&quot;string&quot;               </asp:ThenBy>           </asp:OrderByExpression>           <asp:PropertyExpression=&quot;string&quot;>                   <!-- child controls -->           </asp:PropertyExpression           >           <asp:RangeExpression=&quot;integer&quot;               Datafield=&quot;string&quot;               MaxType=&quot;Exclusive|Inclusive|None&quot;               MinType=&quot;Exclusive|Inclusive|None&quot;>                   <!--child controls-->           </asp:RangeExpression>           <asp:SearchExpression=&quot;string&quot;               ComparisonType=&quot;CurrentCulture|CurrentCultureIgnoreCase|                   InavariantCulture|InvariantCultureIgnoreCase|                   Ordinal|OrdinalIgnoreCase&quot;               DataField=&quot;string&quot;               SearchType=&quot;Contains|EndsWith|StartsWith&quot;>                   <!--child controls-->           </asp:SearchExpression>   </asp:QueryExtender>   ```"
  example:
  - "The following example shows how to use the QueryExtender control to provide a search function in a Web page. The QueryExtender control uses the text that is entered in the `TextBoxSearch` control to search for contents in the ProductName and Supplier.CompanyName columns of a Products table in the data that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.Expressions.SearchExpression> object is used to perform the search. The <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> property specifies the data fields to search. The <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> property specifies the type of search to perform. The <xref:System.Web.UI.WebControls.ControlParameter> element specifies the control that contains the text to use for the search. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:LinqDataSource ID=\"dataSource\" runat=\"server\"   \n    TableName=\"Products\">  \n</asp:LinqDataSource>  \n<asp:QueryExtender TargetControlID=\"dataSource\" runat=\"server\">  \n  <asp:SearchExpression DataFields=\"ProductName, Supplier.CompanyName\"   \n        SearchType=\"StartsWith\">  \n    <asp:ControlParameter ControlID=\"TextBoxSearch\" />  \n  </asp:SearchExpression>  \n</asp:QueryExtender>  \n```  \n  \n The following example shows how to use the QueryExtender control to search a Web page for values in a specified range. The QueryExtender control uses the values that are entered in the `TextBoxFrom` and `TextBoxTo` controls to search for values in the ProductName and Supplier.CompanyName columns of a Products table in the data that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.ControlParameter> element specifies the text box controls that contain the minimum and maximum values to use for searching the range. The <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> and <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> properties specify that the minimum and maximum values must be included in the data that is returned. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:LinqDataSource ID=\"dataSource\" runat=\"server\"   \n    TableName=\"Products\">  \n</asp:LinqDataSource>  \n<asp:QueryExtender TargetControlID=\"dataSource\" runat=\"server\">  \n  <asp:RangeExpression DataField=\"UnitPrice\" MinType=\"Inclusive\"   \n        MaxType=\"Inclusive\">  \n    <asp:ControlParameter ControlID=\"TextBoxFrom\" />  \n    <asp:ControlParameter ControlID=\"TexBoxTo\" />  \n  </asp:RangeExpression>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TargetControlID")]

      [System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true, "Expressions")]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))]

      public class QueryExtender : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: QueryExtender()
  nameWithType: QueryExtender.QueryExtender()
  fullName: System.Web.UI.WebControls.QueryExtender.QueryExtender()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> Class."
  syntax:
    content: public QueryExtender ();
    parameters: []
  overload: System.Web.UI.WebControls.QueryExtender.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: DataSource
  nameWithType: QueryExtender.DataSource
  fullName: System.Web.UI.WebControls.QueryExtender.DataSource
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets the data source control (<xref href=&quot;System.Web.UI.IDataSource&quot;></xref> object) to use for the query."
  remarks: "The <xref:System.Web.UI.WebControls.QueryExtender> control supports the <xref:System.Web.UI.WebControls.LinqDataSource> and <xref:System.Web.UI.WebControls.EntityDataSource> controls."
  syntax:
    content: public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }
    return:
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "The data source control to use for the query."
  overload: System.Web.UI.WebControls.QueryExtender.DataSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The DataSource property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.Expressions
  id: Expressions
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: Expressions
  nameWithType: QueryExtender.Expressions
  fullName: System.Web.UI.WebControls.QueryExtender.Expressions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets the collection of expressions that are applied to the <xref href=&quot;System.Web.UI.IDataSource&quot;></xref> control."
  syntax:
    content: public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }
    return:
      type: System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection
      description: "The collection of expressions that are applied to the data source control."
  overload: System.Web.UI.WebControls.QueryExtender.Expressions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: QueryExtender.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.QueryExtender.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Loads the state of the values in the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control that must be persisted."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "An object that represents the state of the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control."
  overload: System.Web.UI.WebControls.QueryExtender.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: QueryExtender.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.QueryExtender.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Occurs when a new instance of the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> class is initialized."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "The event data."
  overload: System.Web.UI.WebControls.QueryExtender.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: QueryExtender.SaveViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.SaveViewState()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Saves the current view state of the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "An object that contains the saved state of the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control."
  overload: System.Web.UI.WebControls.QueryExtender.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.TargetControlID
  id: TargetControlID
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: TargetControlID
  nameWithType: QueryExtender.TargetControlID
  fullName: System.Web.UI.WebControls.QueryExtender.TargetControlID
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the ID of the <xref href=&quot;System.Web.UI.IDataSource&quot;></xref> control to use for the query."
  syntax:
    content: public virtual string TargetControlID { get; set; }
    return:
      type: System.String
      description: "The ID of the data source control to use for the query."
  overload: System.Web.UI.WebControls.QueryExtender.TargetControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryExtender.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.QueryExtender
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: QueryExtender.TrackViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.TrackViewState()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Tracks view-state changes of the <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;></xref> control so that the changes can be stored in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object for the control."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.QueryExtender.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.QueryExtender.#ctor
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: QueryExtender()
  nameWithType: QueryExtender.QueryExtender()
  fullName: System.Web.UI.WebControls.QueryExtender.QueryExtender()
- uid: System.Web.UI.WebControls.QueryExtender.DataSource
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: DataSource
  nameWithType: QueryExtender.DataSource
  fullName: System.Web.UI.WebControls.QueryExtender.DataSource
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.UI.WebControls.QueryExtender.Expressions
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: Expressions
  nameWithType: QueryExtender.Expressions
  fullName: System.Web.UI.WebControls.QueryExtender.Expressions
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: DataSourceExpressionCollection
  nameWithType: DataSourceExpressionCollection
  fullName: System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection
- uid: System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: QueryExtender.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.QueryExtender.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: QueryExtender.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.QueryExtender.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.QueryExtender.SaveViewState
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: SaveViewState()
  nameWithType: QueryExtender.SaveViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.SaveViewState()
- uid: System.Web.UI.WebControls.QueryExtender.TargetControlID
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TargetControlID
  nameWithType: QueryExtender.TargetControlID
  fullName: System.Web.UI.WebControls.QueryExtender.TargetControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.QueryExtender.TrackViewState
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TrackViewState()
  nameWithType: QueryExtender.TrackViewState()
  fullName: System.Web.UI.WebControls.QueryExtender.TrackViewState()
- uid: System.Web.UI.WebControls.QueryExtender.#ctor*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: QueryExtender
  nameWithType: QueryExtender.QueryExtender
- uid: System.Web.UI.WebControls.QueryExtender.DataSource*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: DataSource
  nameWithType: QueryExtender.DataSource
- uid: System.Web.UI.WebControls.QueryExtender.Expressions*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: Expressions
  nameWithType: QueryExtender.Expressions
- uid: System.Web.UI.WebControls.QueryExtender.LoadViewState*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: LoadViewState
  nameWithType: QueryExtender.LoadViewState
- uid: System.Web.UI.WebControls.QueryExtender.OnInit*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: OnInit
  nameWithType: QueryExtender.OnInit
- uid: System.Web.UI.WebControls.QueryExtender.SaveViewState*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: SaveViewState
  nameWithType: QueryExtender.SaveViewState
- uid: System.Web.UI.WebControls.QueryExtender.TargetControlID*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TargetControlID
  nameWithType: QueryExtender.TargetControlID
- uid: System.Web.UI.WebControls.QueryExtender.TrackViewState*
  parent: System.Web.UI.WebControls.QueryExtender
  isExternal: false
  name: TrackViewState
  nameWithType: QueryExtender.TrackViewState
