### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngProvider
  id: CngProvider
  children:
  - System.Security.Cryptography.CngProvider.#ctor(System.String)
  - System.Security.Cryptography.CngProvider.Equals(System.Object)
  - System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngProvider.GetHashCode
  - System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  - System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  - System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngProvider.Provider
  - System.Security.Cryptography.CngProvider.ToString
  langs:
  - csharp
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
  type: Class
  summary: "Encapsula o nome de um fornecedor de armazenamento de chaves (KSP) para utilização com objetos de Cryptography Next Generation (CNG)."
  remarks: "A classe de CngProvider é uma classe de utilitário. É composto pelas propriedades estáticas, os métodos de comparação e privado, mantidos internamente cadeia que especifica um fornecedor de armazenamento de chaves.       As propriedades estáticas devolverem objetos CngProvider. Cadeia de cada objeto interno é inicializada para o nome do fornecedor que corresponde ao nome da propriedade estático.       Também pode utilizar esta classe para criar objetos para os tipos de fornecedor que não são abrangidos pelas propriedades estáticas.       Várias classes CNG (tais como <xref:System.Security.Cryptography.CngKey>) aceitar CngProvider objetos através de um `provider` parâmetro.</xref:System.Security.Cryptography.CngKey> Quando a classe recebe o objeto de CngProvider, obtém o nome do fornecedor incorporados ao chamar o objeto <xref:System.Security.Cryptography.CngProvider.Provider%2A>propriedade.</xref:System.Security.Cryptography.CngProvider.Provider%2A>       Por conseguinte, CngProvider serve como uma enumeração de fornecedores bem conhecidos. Permite-lhe identificar um fornecedor através de um valor de tipo seguro em vez de uma cadeia."
  syntax:
    content: 'public sealed class CngProvider : IEquatable<System.Security.Cryptography.CngProvider>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngProvider>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: CngProvider(String)
  nameWithType: CngProvider.CngProvider(String)
  fullName: System.Security.Cryptography.CngProvider.CngProvider(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> classe."
  remarks: "Instâncias do <xref:System.Security.Cryptography.CngProvider>classe manter internamente o nome de fornecedor especificado pelo `provider` parâmetro.</xref:System.Security.Cryptography.CngProvider>       O objetivo principal deste construtor é fornecer um método para criar <xref:System.Security.Cryptography.CngProvider>objetos para KSPs que não são representados pelas propriedades estáticas da <xref:System.Security.Cryptography.CngProvider>classe.</xref:System.Security.Cryptography.CngProvider> </xref:System.Security.Cryptography.CngProvider> Esta capacidade permite futuro [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] versões, service packs e programadores de terceiros para adicionar novos fornecedores, que podem ser acedidos, tal como os fornecedores que estão atualmente disponíveis."
  syntax:
    content: public CngProvider (string provider);
    parameters:
    - id: provider
      type: System.String
      description: "O nome do fornecedor de armazenamento de chaves (KSP) ao inicializar."
  overload: System.Security.Cryptography.CngProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>provider</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> provider </code> comprimento do parâmetro é 0 (zero)."
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngProvider.Equals(Object)
  fullName: System.Security.Cryptography.CngProvider.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Compara o objeto especificado para o atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um objeto a ser comparada ao atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> obj </code> parâmetro é uma <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> que especifica o mesmo provider(KSP) de armazenamento de chaves como o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)
  id: Equals(System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: Equals(CngProvider)
  nameWithType: CngProvider.Equals(CngProvider)
  fullName: System.Security.Cryptography.CngProvider.Equals(CngProvider)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Compara especificado <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngProvider other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto a ser comparada ao atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> other </code> parâmetro especifica o mesmo fornecedor de armazenamento de chaves (KSP) como o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngProvider.GetHashCode()
  fullName: System.Security.Cryptography.CngProvider.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Gera um valor de hash para o nome do fornecedor de armazenamento de chaves (KSP) que está incorporado atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O valor de hash do nome do KSP incorporado."
  overload: System.Security.Cryptography.CngProvider.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  id: MicrosoftSmartCardKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: MicrosoftSmartCardKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém um <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto que especifica o fornecedor de armazenamento de chaves de Smart Card de Microsoft."
  syntax:
    content: public static System.Security.Cryptography.CngProvider MicrosoftSmartCardKeyStorageProvider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto que especifica o fornecedor de armazenamento de chaves de Smart Card de Microsoft."
  overload: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  id: MicrosoftSoftwareKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: MicrosoftSoftwareKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém um <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objeto que especifica o Microsoft Software Key Storage Provider."
  syntax:
    content: public static System.Security.Cryptography.CngProvider MicrosoftSoftwareKeyStorageProvider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto que especifica o Microsoft Software Key Storage Provider."
  overload: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  id: op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: op_Equality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Equality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Equality(CngProvider,CngProvider)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determina se dois <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> objetos especificar o mesmo fornecedor de armazenamento de chaves (KSP)."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngProvider left, System.Security.Cryptography.CngProvider right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto que especifica um KSP."
    - id: right
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto segundo, a ser comparada ao objeto de que é identificado pelo `left` parâmetro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois objetos representam a mesma KSP; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  id: op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: op_Inequality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Inequality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Inequality(CngProvider,CngProvider)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Determina se dois <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> os objetos não representar o mesmo fornecedor de armazenamento de chaves (KSP)."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngProvider left, System.Security.Cryptography.CngProvider right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto que especifica um KSP."
    - id: right
      type: System.Security.Cryptography.CngProvider
      description: "Um objeto segundo, a ser comparada ao objeto de que é identificado pelo `left` parâmetro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois objetos não representam a mesma KSP; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngProvider.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.Provider
  id: Provider
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: Provider
  nameWithType: CngProvider.Provider
  fullName: System.Security.Cryptography.CngProvider.Provider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém o nome do fornecedor de armazenamento de chaves (KSP) de que o atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> Especifica o objeto."
  syntax:
    content: public string Provider { get; }
    return:
      type: System.String
      description: "O nome KSP incorporado."
  overload: System.Security.Cryptography.CngProvider.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngProvider.ToString
  id: ToString
  parent: System.Security.Cryptography.CngProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: CngProvider.ToString()
  fullName: System.Security.Cryptography.CngProvider.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Obtém o nome do fornecedor de armazenamento de chaves (KSP) de que o atual <xref href=&quot;System.Security.Cryptography.CngProvider&quot;> </xref> Especifica o objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O nome KSP incorporado."
  overload: System.Security.Cryptography.CngProvider.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngProvider.#ctor(System.String)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: CngProvider(String)
  nameWithType: CngProvider.CngProvider(String)
  fullName: System.Security.Cryptography.CngProvider.CngProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider.Equals(System.Object)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Equals(Object)
  nameWithType: CngProvider.Equals(Object)
  fullName: System.Security.Cryptography.CngProvider.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngProvider.Equals(System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Equals(CngProvider)
  nameWithType: CngProvider.Equals(CngProvider)
  fullName: System.Security.Cryptography.CngProvider.Equals(CngProvider)
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngProvider.GetHashCode
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: GetHashCode()
  nameWithType: CngProvider.GetHashCode()
  fullName: System.Security.Cryptography.CngProvider.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSmartCardKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSoftwareKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider
  fullName: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.op_Equality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Equality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Equality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Equality(CngProvider,CngProvider)
- uid: System.Security.Cryptography.CngProvider.op_Inequality(System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Inequality(CngProvider,CngProvider)
  nameWithType: CngProvider.op_Inequality(CngProvider,CngProvider)
  fullName: System.Security.Cryptography.CngProvider.op_Inequality(CngProvider,CngProvider)
- uid: System.Security.Cryptography.CngProvider.Provider
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Provider
  nameWithType: CngProvider.Provider
  fullName: System.Security.Cryptography.CngProvider.Provider
- uid: System.Security.Cryptography.CngProvider.ToString
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: ToString()
  nameWithType: CngProvider.ToString()
  fullName: System.Security.Cryptography.CngProvider.ToString()
- uid: System.Security.Cryptography.CngProvider.#ctor*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider.CngProvider
- uid: System.Security.Cryptography.CngProvider.Equals*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Equals
  nameWithType: CngProvider.Equals
- uid: System.Security.Cryptography.CngProvider.GetHashCode*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: GetHashCode
  nameWithType: CngProvider.GetHashCode
- uid: System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSmartCardKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSmartCardKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: MicrosoftSoftwareKeyStorageProvider
  nameWithType: CngProvider.MicrosoftSoftwareKeyStorageProvider
- uid: System.Security.Cryptography.CngProvider.op_Equality*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Equality
  nameWithType: CngProvider.op_Equality
- uid: System.Security.Cryptography.CngProvider.op_Inequality*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: op_Inequality
  nameWithType: CngProvider.op_Inequality
- uid: System.Security.Cryptography.CngProvider.Provider*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: Provider
  nameWithType: CngProvider.Provider
- uid: System.Security.Cryptography.CngProvider.ToString*
  parent: System.Security.Cryptography.CngProvider
  isExternal: false
  name: ToString
  nameWithType: CngProvider.ToString
