### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeParameter
  id: CodeTypeParameter
  children:
  - System.CodeDom.CodeTypeParameter.#ctor
  - System.CodeDom.CodeTypeParameter.#ctor(System.String)
  - System.CodeDom.CodeTypeParameter.Constraints
  - System.CodeDom.CodeTypeParameter.CustomAttributes
  - System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  - System.CodeDom.CodeTypeParameter.Name
  langs:
  - csharp
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter
  fullName: System.CodeDom.CodeTypeParameter
  type: Class
  summary: "Represents a type parameter of a generic type or method."
  remarks: "The CodeTypeParameter class represents a type parameter in the declaration of a generic type or method.       A generic type or method declaration contains one or more unspecified types known as type parameters. A type parameter name stands for the type within the body of the generic declaration. For example, the generic declaration for the <xref:System.Collections.Generic.List%601> class contains the type parameter `T`.       For more information on generics, see [Generics in the .NET Framework Class Library](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the use of the CodeTypeParameter class to create a CodeDOM graph to generate an application containing generics code.  \n  \n [!code-vb[System.CodeDom.Generics.1#1](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_8_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#1](~/add/codesnippet/csharp/t-system.codedom.codetyp_8_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeParameter : System.CodeDom.CodeObject
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: CodeTypeParameter()
  nameWithType: CodeTypeParameter.CodeTypeParameter()
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeTypeParameter&quot;></xref> class."
  remarks: "If you use this constructor, you should set the <xref:System.CodeDom.CodeTypeParameter.Name%2A> property."
  syntax:
    content: public CodeTypeParameter ();
    parameters: []
  overload: System.CodeDom.CodeTypeParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: CodeTypeParameter(String)
  nameWithType: CodeTypeParameter.CodeTypeParameter(String)
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeTypeParameter&quot;></xref> class with the specified type parameter name."
  remarks: ''
  example:
  - "The following code example shows the use of CodeTypeParameter constructor to add a type parameter.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#10](~/add/codesnippet/visualbasic/m-system.codedom.codetyp_4_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#10](~/add/codesnippet/csharp/m-system.codedom.codetyp_4_1.cs)]"
  syntax:
    content: public CodeTypeParameter (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the type parameter."
  overload: System.CodeDom.CodeTypeParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.Constraints
  id: Constraints
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: Constraints
  nameWithType: CodeTypeParameter.Constraints
  fullName: System.CodeDom.CodeTypeParameter.Constraints
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets the constraints for the type parameter."
  remarks: "A constraint specifies the type that the type parameter must derive from or implement."
  example:
  - "The following code example shows the use of the Constraints property to add a new constraint.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#4](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_1_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#4](~/add/codesnippet/csharp/p-system.codedom.codetyp_1_1.cs)]"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection Constraints { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;></xref> object that contains the constraints for the type parameter."
  overload: System.CodeDom.CodeTypeParameter.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.CustomAttributes
  id: CustomAttributes
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: CustomAttributes
  nameWithType: CodeTypeParameter.CustomAttributes
  fullName: System.CodeDom.CodeTypeParameter.CustomAttributes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets the custom attributes of the type parameter."
  remarks: "This property can be used to add metadata attributes to the declaration of the type parameter.      > [!CAUTION] >  This property is `null` by default and should be checked before referencing."
  example:
  - "The following code example shows the use of the CustomAttributes property to add a new custom attribute.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#5](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_3_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#5](~/add/codesnippet/csharp/p-system.codedom.codetyp_3_1.cs)]"
  syntax:
    content: public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; }
    return:
      type: System.CodeDom.CodeAttributeDeclarationCollection
      description: "A <xref href=&quot;System.CodeDom.CodeAttributeDeclarationCollection&quot;></xref> that indicates the custom attributes of the type parameter. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.CodeTypeParameter.CustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  id: HasConstructorConstraint
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: HasConstructorConstraint
  nameWithType: CodeTypeParameter.HasConstructorConstraint
  fullName: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets a value indicating whether the type parameter has a constructor constraint."
  remarks: "A constructor constraint indicates to the compiler that the type parameter exposes a default public constructor (a public constructor with no parameters)."
  example:
  - "The following code example shows the use of the HasConstructorConstraint property in determining if the type parameter has a constructor constraint.  This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDom.Generics.1#3](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_0_1.vb)]\n [!code-cs[System.CodeDom.Generics.1#3](~/add/codesnippet/csharp/p-system.codedom.codetyp_0_1.cs)]"
  syntax:
    content: public bool HasConstructorConstraint { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the type parameter has a constructor constraint; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.CodeTypeParameter.HasConstructorConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeParameter.Name
  id: Name
  parent: System.CodeDom.CodeTypeParameter
  langs:
  - csharp
  name: Name
  nameWithType: CodeTypeParameter.Name
  fullName: System.CodeDom.CodeTypeParameter.Name
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the name of the type parameter."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the type parameter. The default is an empty string (&quot;&quot;)."
  overload: System.CodeDom.CodeTypeParameter.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeObject
  isExternal: false
  name: System.CodeDom.CodeObject
- uid: System.CodeDom.CodeTypeParameter.#ctor
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CodeTypeParameter()
  nameWithType: CodeTypeParameter.CodeTypeParameter()
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter()
- uid: System.CodeDom.CodeTypeParameter.#ctor(System.String)
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CodeTypeParameter(String)
  nameWithType: CodeTypeParameter.CodeTypeParameter(String)
  fullName: System.CodeDom.CodeTypeParameter.CodeTypeParameter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeParameter.Constraints
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Constraints
  nameWithType: CodeTypeParameter.Constraints
  fullName: System.CodeDom.CodeTypeParameter.Constraints
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeParameter.CustomAttributes
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CustomAttributes
  nameWithType: CodeTypeParameter.CustomAttributes
  fullName: System.CodeDom.CodeTypeParameter.CustomAttributes
- uid: System.CodeDom.CodeAttributeDeclarationCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeAttributeDeclarationCollection
  nameWithType: CodeAttributeDeclarationCollection
  fullName: System.CodeDom.CodeAttributeDeclarationCollection
- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: HasConstructorConstraint
  nameWithType: CodeTypeParameter.HasConstructorConstraint
  fullName: System.CodeDom.CodeTypeParameter.HasConstructorConstraint
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeTypeParameter.Name
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Name
  nameWithType: CodeTypeParameter.Name
  fullName: System.CodeDom.CodeTypeParameter.Name
- uid: System.CodeDom.CodeTypeParameter.#ctor*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter.CodeTypeParameter
- uid: System.CodeDom.CodeTypeParameter.Constraints*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Constraints
  nameWithType: CodeTypeParameter.Constraints
- uid: System.CodeDom.CodeTypeParameter.CustomAttributes*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: CustomAttributes
  nameWithType: CodeTypeParameter.CustomAttributes
- uid: System.CodeDom.CodeTypeParameter.HasConstructorConstraint*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: HasConstructorConstraint
  nameWithType: CodeTypeParameter.HasConstructorConstraint
- uid: System.CodeDom.CodeTypeParameter.Name*
  parent: System.CodeDom.CodeTypeParameter
  isExternal: false
  name: Name
  nameWithType: CodeTypeParameter.Name
