### YamlMime:ManagedReference
items:
- uid: System.IO.Log.LogRecord
  id: LogRecord
  children:
  - System.IO.Log.LogRecord.#ctor
  - System.IO.Log.LogRecord.Data
  - System.IO.Log.LogRecord.Dispose
  - System.IO.Log.LogRecord.Previous
  - System.IO.Log.LogRecord.SequenceNumber
  - System.IO.Log.LogRecord.User
  langs:
  - csharp
  name: LogRecord
  nameWithType: LogRecord
  fullName: System.IO.Log.LogRecord
  type: Class
  summary: "Representa um registo que tenha sido acrescentado a uma sequência."
  syntax:
    content: 'public abstract class LogRecord : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.LogRecord.#ctor
  id: '#ctor'
  parent: System.IO.Log.LogRecord
  langs:
  - csharp
  name: LogRecord()
  nameWithType: LogRecord.LogRecord()
  fullName: System.IO.Log.LogRecord.LogRecord()
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Log.LogRecord&quot;> </xref> classe."
  syntax:
    content: protected LogRecord ();
    parameters: []
  overload: System.IO.Log.LogRecord.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecord.Data
  id: Data
  parent: System.IO.Log.LogRecord
  langs:
  - csharp
  name: Data
  nameWithType: LogRecord.Data
  fullName: System.IO.Log.LogRecord.Data
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Quando substituí-lo de uma classe derivada, obtém um fluxo que contém os dados de registo."
  syntax:
    content: public abstract System.IO.Stream Data { get; }
    return:
      type: System.IO.Stream
      description: "Um fluxo que contém os dados de registo."
  overload: System.IO.Log.LogRecord.Data*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.IO.Log.LogRecord&quot;> </xref> foi eliminado do."
  platform:
  - net462
- uid: System.IO.Log.LogRecord.Dispose
  id: Dispose
  parent: System.IO.Log.LogRecord
  langs:
  - csharp
  name: Dispose()
  nameWithType: LogRecord.Dispose()
  fullName: System.IO.Log.LogRecord.Dispose()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.IO.Log.LogRecord&quot;> </xref>."
  remarks: "Deve chamar este método quando acabar de utilizar o <xref:System.IO.Log.LogRecord>instância.</xref:System.IO.Log.LogRecord> O método de Dispose deixa o <xref:System.IO.Log.LogRecord>instância num Estado não utilizável.</xref:System.IO.Log.LogRecord> Depois de chamar este método, tem de libertar todas as referências para o <xref:System.IO.Log.LogRecord>instância, para que o recoletor de lixo pode reclame a memória que a <xref:System.IO.Log.LogRecord>instância foi occupying.</xref:System.IO.Log.LogRecord> </xref:System.IO.Log.LogRecord>      > [!NOTE] > Sempre chamada Dispose antes de libertar uma última referência para o <xref:System.IO.Log.LogRecord>instância.</xref:System.IO.Log.LogRecord> Caso contrário, os recursos que está a utilizar não podem ser libertados até que as chamadas de recoletor de lixo a <xref:System.IO.Log.LogRecord>da instância `Finalize` método.</xref:System.IO.Log.LogRecord>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.IO.Log.LogRecord.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecord.Previous
  id: Previous
  parent: System.IO.Log.LogRecord
  langs:
  - csharp
  name: Previous
  nameWithType: LogRecord.Previous
  fullName: System.IO.Log.LogRecord.Previous
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Quando substituí-lo de uma classe derivada, obtém o número de sequência do registo anterior."
  remarks: "O valor desta propriedade é o número de sequência fornecido como o `previousUndoRecord` parâmetro o <xref:System.IO.Log.IRecordSequence.Append%2A>método.</xref:System.IO.Log.IRecordSequence.Append%2A> Para além da sua utilização na enumeração, este número de sequência é tratado como opaco pela sequência de registo."
  syntax:
    content: public abstract System.IO.Log.SequenceNumber Previous { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do registo anterior."
  overload: System.IO.Log.LogRecord.Previous*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecord.SequenceNumber
  id: SequenceNumber
  parent: System.IO.Log.LogRecord
  langs:
  - csharp
  name: SequenceNumber
  nameWithType: LogRecord.SequenceNumber
  fullName: System.IO.Log.LogRecord.SequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Quando substituí-lo de uma classe derivada, obtém o número de sequência deste registo."
  syntax:
    content: public abstract System.IO.Log.SequenceNumber SequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência deste registo."
  overload: System.IO.Log.LogRecord.SequenceNumber*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.LogRecord.User
  id: User
  parent: System.IO.Log.LogRecord
  langs:
  - csharp
  name: User
  nameWithType: LogRecord.User
  fullName: System.IO.Log.LogRecord.User
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Quando substituí-lo de uma classe derivada, obtém o número de sequência de registo seguinte."
  remarks: "O valor desta propriedade é o número de sequência fornecido como o `nextUndoRecord` parâmetro o <xref:System.IO.Log.IRecordSequence.Append%2A>método.</xref:System.IO.Log.IRecordSequence.Append%2A> Para além da sua utilização na enumeração, este número de sequência é tratado como opaco pela sequência de registo."
  syntax:
    content: public abstract System.IO.Log.SequenceNumber User { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte da cadeia especificado para um utilizador."
  overload: System.IO.Log.LogRecord.User*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Log.LogRecord.#ctor
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: LogRecord()
  nameWithType: LogRecord.LogRecord()
  fullName: System.IO.Log.LogRecord.LogRecord()
- uid: System.IO.Log.LogRecord.Data
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: Data
  nameWithType: LogRecord.Data
  fullName: System.IO.Log.LogRecord.Data
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Log.LogRecord.Dispose
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: Dispose()
  nameWithType: LogRecord.Dispose()
  fullName: System.IO.Log.LogRecord.Dispose()
- uid: System.IO.Log.LogRecord.Previous
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: Previous
  nameWithType: LogRecord.Previous
  fullName: System.IO.Log.LogRecord.Previous
- uid: System.IO.Log.SequenceNumber
  parent: System.IO.Log
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
- uid: System.IO.Log.LogRecord.SequenceNumber
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: SequenceNumber
  nameWithType: LogRecord.SequenceNumber
  fullName: System.IO.Log.LogRecord.SequenceNumber
- uid: System.IO.Log.LogRecord.User
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: User
  nameWithType: LogRecord.User
  fullName: System.IO.Log.LogRecord.User
- uid: System.IO.Log.LogRecord.#ctor*
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: LogRecord
  nameWithType: LogRecord.LogRecord
- uid: System.IO.Log.LogRecord.Data*
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: Data
  nameWithType: LogRecord.Data
- uid: System.IO.Log.LogRecord.Dispose*
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: Dispose
  nameWithType: LogRecord.Dispose
- uid: System.IO.Log.LogRecord.Previous*
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: Previous
  nameWithType: LogRecord.Previous
- uid: System.IO.Log.LogRecord.SequenceNumber*
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: SequenceNumber
  nameWithType: LogRecord.SequenceNumber
- uid: System.IO.Log.LogRecord.User*
  parent: System.IO.Log.LogRecord
  isExternal: false
  name: User
  nameWithType: LogRecord.User
