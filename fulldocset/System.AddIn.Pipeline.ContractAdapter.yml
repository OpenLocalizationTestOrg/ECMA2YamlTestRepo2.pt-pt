### YamlMime:ManagedReference
items:
- uid: System.AddIn.Pipeline.ContractAdapter
  id: ContractAdapter
  children:
  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  - System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  - System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)
  langs:
  - csharp
  name: ContractAdapter
  nameWithType: ContractAdapter
  fullName: System.AddIn.Pipeline.ContractAdapter
  type: Class
  summary: "Provides methods for sharing and readapting add-ins."
  remarks: "You can use this class to share an add-in with another host that does not have the same pipeline to that add-in (particularly, another host that does not have the same host view of the add-in).       If you need to adapt an activated add-in from its host view to the contract, use the <xref:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter%2A> method.       If you have an instance of the contract and need to convert it to the host view, use the <xref:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter%2A> method."
  syntax:
    content: public static class ContractAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  parent: System.AddIn.Pipeline.ContractAdapter
  langs:
  - csharp
  name: ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, System.AddIn.Hosting.PipelineStoreLocation location);
    parameters:
    - id: contract
      type: System.AddIn.Pipeline.ContractHandle
      description: "To be added."
    - id: location
      type: System.AddIn.Hosting.PipelineStoreLocation
      description: "To be added."
    return:
      type: TView
      description: "To be added."
  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  id: ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  parent: System.AddIn.Pipeline.ContractAdapter
  langs:
  - csharp
  name: ContractToViewAdapter(ContractHandle,String)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,String)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,String)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public static TView ContractToViewAdapter<TView> (System.AddIn.Pipeline.ContractHandle contract, string pipelineRoot);
    parameters:
    - id: contract
      type: System.AddIn.Pipeline.ContractHandle
      description: "To be added."
    - id: pipelineRoot
      type: System.String
      description: "To be added."
    return:
      type: TView
      description: "To be added."
  overload: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)
  id: ViewToContractAdapter(System.Object)
  parent: System.AddIn.Pipeline.ContractAdapter
  langs:
  - csharp
  name: ViewToContractAdapter(Object)
  nameWithType: ContractAdapter.ViewToContractAdapter(Object)
  fullName: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  summary: "Gets the handle to the contract for a provided host view of an add-in."
  remarks: "In this scenario, the source entity (a host) has an add-in that wants to be shared by a destination entity (another host).       Use this method to obtain the handle to the contract that was instantiated for the source entity by the add-in system."
  syntax:
    content: public static System.AddIn.Pipeline.ContractHandle ViewToContractAdapter (object view);
    parameters:
    - id: view
      type: System.Object
      description: "The host view of an add-in activated by the system from the current application domain."
    return:
      type: System.AddIn.Pipeline.ContractHandle
      description: "A handle to the contract."
  overload: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>view</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,PipelineStoreLocation)
- uid: TView
  isExternal: true
  name: TView
  nameWithType: TView
  fullName: TView
- uid: System.AddIn.Pipeline.ContractHandle
  parent: System.AddIn.Pipeline
  isExternal: false
  name: ContractHandle
  nameWithType: ContractHandle
  fullName: System.AddIn.Pipeline.ContractHandle
- uid: System.AddIn.Hosting.PipelineStoreLocation
  parent: System.AddIn.Hosting
  isExternal: false
  name: PipelineStoreLocation
  nameWithType: PipelineStoreLocation
  fullName: System.AddIn.Hosting.PipelineStoreLocation
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ContractToViewAdapter(ContractHandle,String)
  nameWithType: ContractAdapter.ContractToViewAdapter(ContractHandle,String)
  fullName: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter(ContractHandle,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ViewToContractAdapter(Object)
  nameWithType: ContractAdapter.ViewToContractAdapter(Object)
  fullName: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(Object)
- uid: System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter<TView>*
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ContractToViewAdapter<TView>
  nameWithType: ContractAdapter.ContractToViewAdapter<TView>
- uid: System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter*
  parent: System.AddIn.Pipeline.ContractAdapter
  isExternal: false
  name: ViewToContractAdapter
  nameWithType: ContractAdapter.ViewToContractAdapter
