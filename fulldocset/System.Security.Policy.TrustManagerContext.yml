### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.TrustManagerContext
  id: TrustManagerContext
  children:
  - System.Security.Policy.TrustManagerContext.#ctor
  - System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  - System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  - System.Security.Policy.TrustManagerContext.KeepAlive
  - System.Security.Policy.TrustManagerContext.NoPrompt
  - System.Security.Policy.TrustManagerContext.Persist
  - System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  - System.Security.Policy.TrustManagerContext.UIContext
  langs:
  - csharp
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
  type: Class
  summary: "Representa o contexto para o Gestor de fidedignidade a ter em consideração quando efetuar a decisão de executar uma aplicação e, ao configurar a segurança num novo <xref href=&quot;System.AppDomain&quot;> </xref> para executar uma aplicação."
  remarks: "Para obter uma lista de valores de propriedade inicial para uma instância da classe TrustManagerContext, consulte o <xref:System.Security.Policy.TrustManagerContext.%23ctor>construtor.</xref:System.Security.Policy.TrustManagerContext.%23ctor>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TrustManagerContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.#ctor
  id: '#ctor'
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: TrustManagerContext()
  nameWithType: TrustManagerContext.TrustManagerContext()
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> classe."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial para uma nova instância de <xref:System.Security.Policy.TrustManagerContext>classe.</xref:System.Security.Policy.TrustManagerContext>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>| `false`|   | <xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A>| `false`|   | <xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A>| `false`|   | <xref:System.Security.Policy.TrustManagerContext.Persist%2A>| `true`|   | <xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A>| `null`|   | <xref:System.Security.Policy.TrustManagerContext.UIContext%2A>| <xref:System.Security.Policy.TrustManagerUIContext>|</xref:System.Security.Policy.TrustManagerUIContext></xref:System.Security.Policy.TrustManagerContext.UIContext%2A></xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A></xref:System.Security.Policy.TrustManagerContext.Persist%2A></xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A></xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A></xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>"
  syntax:
    content: public TrustManagerContext ();
    parameters: []
  overload: System.Security.Policy.TrustManagerContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  id: '#ctor(System.Security.Policy.TrustManagerUIContext)'
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: TrustManagerContext(TrustManagerUIContext)
  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> classe utilizando especificado <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref> objeto."
  remarks: "Este construtor inicializa as propriedades para as mesmas definições que o construtor predefinido, com a exceção a <xref:System.Security.Policy.TrustManagerContext.UIContext%2A>propriedade, que está definida para o valor que é transmitido suplemento</xref:System.Security.Policy.TrustManagerContext.UIContext%2A>"
  syntax:
    content: public TrustManagerContext (System.Security.Policy.TrustManagerUIContext uiContext);
    parameters:
    - id: uiContext
      type: System.Security.Policy.TrustManagerUIContext
      description: "Um do <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref> valores que especifica o tipo de interface de utilizador do Gestor de fidedignidade para utilizar."
  overload: System.Security.Policy.TrustManagerContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  id: IgnorePersistedDecision
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define um valor que indica se o Gestor de segurança da aplicação deve ignorar quaisquer decisões persistentes e chamar a confiança manager."
  remarks: "Se `true`, a <xref:System.Security.Policy.ApplicationSecurityManager>ignora persistentes decisões para a aplicação e chama a confiança gestor.</xref:System.Security.Policy.ApplicationSecurityManager> Se `false`, a <xref:System.Security.Policy.ApplicationSecurityManager>utiliza em cache as decisões, se disponível.</xref:System.Security.Policy.ApplicationSecurityManager>"
  syntax:
    content: public virtual bool IgnorePersistedDecision { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para chamar a confiança manager; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.KeepAlive
  id: KeepAlive
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: System.Security.Policy.TrustManagerContext.KeepAlive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define um valor que indica se o Gestor de fidedignidade deve colocar em cache estado para esta aplicação, para facilitar a pedidos futuros para determinar a fidedignidade da aplicação."
  remarks: "Este sinalizador está definido como `true` se o anfitrião pode chamar a confiança manager várias vezes para tomar decisões de confiança para esta aplicação. Se `true`, o Gestor de fidedignidade deve colocar em cache qualquer Estado que pode melhorar a velocidade de chamadas futuras para o <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>método.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> Esta propriedade está definida como `false` se o anfitrião não espera chamar a confiança manager novamente <xref:System.AppDomain>.</xref:System.AppDomain> atual"
  syntax:
    content: public virtual bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para dados de estado de cache; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.NoPrompt
  id: NoPrompt
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: System.Security.Policy.TrustManagerContext.NoPrompt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define um valor que indica se o Gestor de fidedignidade deve pedir ao utilizador para tomar decisões de confiança."
  remarks: "Se `false`, o Gestor de fidedignidade determina a caixa de diálogo de utilizador adequada para obter uma decisão de confiança."
  syntax:
    content: public virtual bool NoPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Não pedir ao utilizador; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para solicitar ao utilizador. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.NoPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.Persist
  id: Persist
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: System.Security.Policy.TrustManagerContext.Persist
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define um valor que indica se a resposta do utilizador para a caixa de diálogo de consentimento deve ser persistente."
  remarks: "Esta propriedade é `true` se deve ser persistente resposta do utilizador para a caixa de diálogo de consentimento para evitar ainda mais a pedir ao utilizador com cada novo pedido de ativação. Esta propriedade é `false` se a resposta do utilizador não deve ser persistente."
  syntax:
    content: public virtual bool Persist { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para dados de estado de cache; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  id: PreviousApplicationIdentity
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define a identidade da identidade da aplicação anterior."
  syntax:
    content: public virtual ApplicationIdentity PreviousApplicationIdentity { get; set; }
    return:
      type: System.ApplicationIdentity
      description: "Um <xref href=&quot;System.ApplicationIdentity&quot;> </xref> objeto que representa anterior <xref href=&quot;System.ApplicationIdentity&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.UIContext
  id: UIContext
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: System.Security.Policy.TrustManagerContext.UIContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém ou define o tipo de interface de utilizador que deve apresentar o Gestor de fidedignidade."
  remarks: "Deve fornecer UIContext propriedade destina-se a recomendamos a interface de utilizador do Gestor de fidedignidade para a decisão de confiança. Um Gestor de fidedignidade pode optar por utilizar uma interface diferente."
  syntax:
    content: public virtual System.Security.Policy.TrustManagerUIContext UIContext { get; set; }
    return:
      type: System.Security.Policy.TrustManagerUIContext
      description: "Um do <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref> valores. A predefinição é <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.UIContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.TrustManagerContext.#ctor
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext()
  nameWithType: TrustManagerContext.TrustManagerContext()
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext()
- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext(TrustManagerUIContext)
  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
- uid: System.Security.Policy.TrustManagerUIContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerUIContext
  nameWithType: TrustManagerUIContext
  fullName: System.Security.Policy.TrustManagerUIContext
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.TrustManagerContext.KeepAlive
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: System.Security.Policy.TrustManagerContext.KeepAlive
- uid: System.Security.Policy.TrustManagerContext.NoPrompt
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: System.Security.Policy.TrustManagerContext.NoPrompt
- uid: System.Security.Policy.TrustManagerContext.Persist
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: System.Security.Policy.TrustManagerContext.Persist
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.TrustManagerContext.UIContext
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: System.Security.Policy.TrustManagerContext.UIContext
- uid: System.Security.Policy.TrustManagerContext.#ctor*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext.TrustManagerContext
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
- uid: System.Security.Policy.TrustManagerContext.KeepAlive*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
- uid: System.Security.Policy.TrustManagerContext.NoPrompt*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
- uid: System.Security.Policy.TrustManagerContext.Persist*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: Persist
  nameWithType: TrustManagerContext.Persist
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
- uid: System.Security.Policy.TrustManagerContext.UIContext*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
