### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogPermission
  id: EventLogPermission
  children:
  - System.Diagnostics.EventLogPermission.#ctor
  - System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  - System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  - System.Diagnostics.EventLogPermission.PermissionEntries
  langs:
  - csharp
  name: EventLogPermission
  nameWithType: EventLogPermission
  fullName: System.Diagnostics.EventLogPermission
  type: Class
  summary: "Controls code access permissions for event logging."
  remarks: "Do not grant EventLogPermission to partially trusted code. The ability to read and write the event log enables code to perform actions such as issuing event log messages in the name of another application.      > [!NOTE] >  If the event source that is specified by the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=fullName> property for the event log does not exist, a new event source is created. To create an event source in Windows Vista and later versions of Windows, or Windows Server 2003, you must have administrative privileges.   >    >  The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.   >    >  Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator."
  syntax:
    content: 'public sealed class EventLogPermission : System.Security.Permissions.ResourcePermissionBase'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Security.Permissions.ResourcePermissionBase
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.Any
  - System.Security.Permissions.ResourcePermissionBase.Clear
  - System.Security.Permissions.ResourcePermissionBase.Copy
  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  - System.Security.Permissions.ResourcePermissionBase.Local
  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.TagNames
  - System.Security.Permissions.ResourcePermissionBase.ToXml
  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission()
  nameWithType: EventLogPermission.EventLogPermission()
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.EventLogPermission&quot;></xref> class."
  syntax:
    content: public EventLogPermission ();
    parameters: []
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  id: '#ctor(System.Diagnostics.EventLogPermissionEntry[])'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(EventLogPermissionEntry[])
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.EventLogPermission&quot;></xref> class with the specified permission entries."
  syntax:
    content: public EventLogPermission (System.Diagnostics.EventLogPermissionEntry[] permissionAccessEntries);
    parameters:
    - id: permissionAccessEntries
      type: System.Diagnostics.EventLogPermissionEntry[]
      description: "An array of  objects that represent permission entries. The <xref:System.Diagnostics.EventLogPermission.PermissionEntries*> property is set to this value."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>permissionAccessEntries</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(PermissionState)
  nameWithType: EventLogPermission.EventLogPermission(PermissionState)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.EventLogPermission&quot;></xref> class with the specified permission state."
  syntax:
    content: public EventLogPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "One of the enumeration values that specifies the permission state (full access or no access to resources)."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>state</code> parameter is not a valid value of <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  id: '#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(EventLogPermissionAccess,String)
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.EventLogPermission&quot;></xref> class with the specified access levels and the name of the computer to use."
  syntax:
    content: public EventLogPermission (System.Diagnostics.EventLogPermissionAccess permissionAccess, string machineName);
    parameters:
    - id: permissionAccess
      type: System.Diagnostics.EventLogPermissionAccess
      description: "One of the enumeration values that specifies an access level."
    - id: machineName
      type: System.String
      description: "The name of the computer on which to read or write events."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.PermissionEntries
  id: PermissionEntries
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
  fullName: System.Diagnostics.EventLogPermission.PermissionEntries
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets the collection of permission entries for this permissions request."
  syntax:
    content: public System.Diagnostics.EventLogPermissionEntryCollection PermissionEntries { get; }
    return:
      type: System.Diagnostics.EventLogPermissionEntryCollection
      description: "A collection that contains the permission entries for this permissions request."
  overload: System.Diagnostics.EventLogPermission.PermissionEntries*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: System.Security.Permissions.ResourcePermissionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.EventLogPermission.#ctor
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission()
  nameWithType: EventLogPermission.EventLogPermission()
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission()
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(EventLogPermissionEntry[])
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
- uid: System.Diagnostics.EventLogPermissionEntry[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionEntry
  nameWithType: EventLogPermissionEntry
  fullName: System.Diagnostics.EventLogPermissionEntry[]
  spec.csharp:
  - uid: System.Diagnostics.EventLogPermissionEntry
    name: EventLogPermissionEntry
    nameWithType: EventLogPermissionEntry
    fullName: EventLogPermissionEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(PermissionState)
  nameWithType: EventLogPermission.EventLogPermission(PermissionState)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(EventLogPermissionAccess,String)
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
- uid: System.Diagnostics.EventLogPermissionAccess
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionAccess
  nameWithType: EventLogPermissionAccess
  fullName: System.Diagnostics.EventLogPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogPermission.PermissionEntries
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
  fullName: System.Diagnostics.EventLogPermission.PermissionEntries
- uid: System.Diagnostics.EventLogPermissionEntryCollection
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionEntryCollection
  nameWithType: EventLogPermissionEntryCollection
  fullName: System.Diagnostics.EventLogPermissionEntryCollection
- uid: System.Diagnostics.EventLogPermission.#ctor*
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission
  nameWithType: EventLogPermission.EventLogPermission
- uid: System.Diagnostics.EventLogPermission.PermissionEntries*
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
