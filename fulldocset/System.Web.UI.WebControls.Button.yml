### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "Apresenta um controlo de botão de push na página Web."
  remarks: "Neste tópico:- [introdução](#Introduction)      -   [eventos de servidor e comportamento de nova colocação do botão](#ButtonPostbackBehaviorandServerEvents)      -   [processamento de eventos de botão no Script de cliente](#HandlingButtonEventsinClientScript)      -   [botão controlos e validação](#ButtonControlsAndValidation)      -   [botões em controlos de dados](#ButtonsInDataControls)      -   [enlace de dados para os controlos](#BindingDataToTheControls)      -   [utilizando os botões com controlos de UpdatePanel](#UsingButtonsWithUpdatePanelControls)      -   [sintaxe declarativa](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> # # introdução utilize o controlo de botão para criar um botão de push na página Web que permite aos utilizadores publicar uma página para o servidor.       O controlo é acionado um evento no código de servidor que pode processar responder para a nova colocação. Pode também levantar um evento no script de cliente que pode processar antes da página é publicada ou que pode executar e, em seguida, cancelar a submissão da página.      > [!NOTE] > ASP.NET inclui vários tipos de controlos de botão, cada um dos quais é apresentada a forma diferente em páginas Web. São o controlo de botão, o que é apresentada como um botão de push; o <xref:System.Web.UI.WebControls.LinkButton>controlo, que é apresentada como uma ligação; e o <xref:System.Web.UI.WebControls.ImageButton>controlo, que é apresentada como uma imagem; e o <xref:System.Web.UI.WebControls.ImageMap>controlo, o que lhe permite criar um gráfico que tenha hotspots que os utilizadores podem clicar.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> Por predefinição, todos os controlos de botão submeter a página quando clicado. Também pode utilizar o <xref:System.Web.UI.HtmlControls.HtmlButton>e <xref:System.Web.UI.HtmlControls.HtmlInputButton>controlos para criar botões na página programáveis no código do servidor.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> Para obter detalhes sobre as diferenças entre os controlos de servidor Web e HTML, consulte [descrição geral de controlos do ASP.NET Web Server](~/add/includes/ajax-current-ext-md.md).       Por predefinição, um controlo de botão é um botão para submeter. Um botão para submeter não tem um nome de comando (especificada pelo <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade) associados com o botão e simplesmente a página Web de volta para o servidor de mensagens.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Pode fornecer um processador de eventos para o <xref:System.Web.UI.WebControls.Button.Click>eventos para controlar programaticamente as ações executadas quando clica no botão para submeter.</xref:System.Web.UI.WebControls.Button.Click>       Um botão de comando tem um nome de comando associado ao botão, tais como `Sort`, definindo o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Isto permite-lhe criar botão vários controlos numa página Web e determinar programaticamente o controlo de botão é clicado. Também pode utilizar o <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade com um botão de comando para fornecer informações adicionais sobre o comando para efetuar, tais como `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Pode fornecer um processador de eventos para o <xref:System.Web.UI.WebControls.Button.Command>eventos para controlar programaticamente as ações executadas quando o botão de comando é clicado.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a># # Comportamento de nova colocação do botão de e servidor eventos quando um utilizador clica em qualquer botão de controlo de servidor Web, a página é enviada para o servidor. Isto faz com que a página Web a serem processados e quaisquer eventos pendentes gerado no código baseado no servidor. Quando tiver concluído a todos os página e a processamentos de controlo, a página compõe-se o browser novamente.       Os botões podem aumentar os seus próprios <xref:System.Web.UI.WebControls.Button.Click>eventos ou <xref:System.Web.UI.WebControls.Button.Command>evento, o que pode processar utilizando código baseado no servidor.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> Isto é diferente de eventos no tradicionais páginas HTML ou num cliente baseado na Web Apps, onde um botão `onclick` evento é processado pelo utilizando JavaScript é executado no cliente. Para obter mais informações, consulte [modelo de evento de controlo de servidor formulários Web ASP.NET](~/add/includes/ajax-current-ext-md.md).       Quando os utilizadores clicarem um controlo de botão, a página é publicada novamente para o servidor. Por predefinição, a página é publicada novamente a próprio, pode configurar os botões para publicar a página para outra página atual. Isto pode ser útil para criar formulários multi página. Para obter mais informações, consulte [entre página Publicar em formulários Web ASP.NET](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a># # Processar eventos de botão de controlos de botão de Script de cliente pode gerar eventos de servidor e eventos de cliente. Eventos do servidor ocorrerem depois de nova colocação e estes são processadas com o código do lado do servidor que escrever para a página. Eventos de cliente são processados no script de cliente, normalmente ECMAScript (JavaScript) e são gerados antes da página é submetida. Ao adicionar eventos do lado do cliente para controlos de botão ASP.NET, pode efetuar tarefas, como de apresentação de caixas de diálogo de confirmação antes de submeter a página e potencialmente cancelar a submissão. Para obter mais informações, consulte [Script de cliente no ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md) e [como: responder a eventos de controlo do botão Web Server no Script de cliente](~/add/includes/ajax-current-ext-md.md).       Poderá também o controlo de botão para também utilizar o script de cliente para executar a nova colocação (em vez de basta efetuar uma operação de HTTP POST). Isto pode ser útil se pretender manipular programaticamente a nova colocação como ligá-la a outros elementos na página. Pode definir o controlo de botão <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade `true` fazer com que o controlo de botão utilizar o script de cliente baseada em nova colocação.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a># # Botão de e controlos de validação se uma página contém os controlos de validação do ASP.NET, por predefinição, ao clicar num controlo de botão faz com que o controlo de validação efetuar a verificação. Se a validação do lado do cliente estiver ativada para um controlo de validação, a página não é submetida se falhou uma verificação de validação.       A tabela seguinte descreve as propriedades suportadas pelos controlos do botão que lhe permite controlar o processo de validação de forma mais precisa.      | Propriedade | Descrição |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| Especifica se clicar no botão também efetua uma verificação de validação.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Defina esta propriedade como `false` para impedir que uma verificação de validação. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| Permite-lhe especificar que validações na página são denominadas quando o botão é clicado.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Se não existem grupos de validação são estabelecidos, um clique no botão chama todas as validações que estão na página. |       Para obter mais informações, consulte [a validar a intervenção do utilizador no ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;ButtonsInDataControls&quot;></a># # Botões em controlos de servidor Web de botão de controlos de dados são frequentemente utilizados em controlos de dados, tal como no <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, e <xref:System.Web.UI.WebControls.Repeater>controlos de lista.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> Nesses casos, normalmente não responder diretamente para o botão clique evento. Em vez disso, um botão num controlo de dados gera um evento que é específico para o controlo de dados. Por exemplo, no <xref:System.Web.UI.WebControls.DataList>controlo, um botão poderá aumentar o <xref:System.Web.UI.WebControls.DataList>do controlo <xref:System.Web.UI.WebControls.DataList.ItemCommand>eventos em vez de gerar o controlo de botão <xref:System.Web.UI.WebControls.Button.Click>eventos.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       Porque os controlos vinculados a dados lista podem conter muitos botões, pode definir o botão <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade para especificar um valor para passar como parte do evento.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Em seguida, pode testar para este argumento ver o botão foi clicado.      <a name=&quot;BindingDataToTheControls&quot;></a># # Enlace de dados para os controlos que é possível vincular os controlos de servidor de Web do botão para uma origem de dados para controlar as definições de propriedade dinamicamente. Por exemplo, pode definir um botão <xref:System.Web.UI.WebControls.Button.Text%2A>propriedade utilizando o enlace de dados.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a># # Utilizando botões com a composição de controlos de UpdatePanel parcial-página torna possível atualizar as partes de uma página sem uma nova colocação. <xref:System.Web.UI.UpdatePanel>controlos permitem-lhe marcar partes da página que participam numa composição de página parcial.</xref:System.Web.UI.UpdatePanel> Por predefinição, o comportamento dos controlos dentro de um <xref:System.Web.UI.UpdatePanel>controlo, incluindo controlos de botão, consiste em efetuar uma nova colocação assíncrona em vez de uma nova colocação.</xref:System.Web.UI.UpdatePanel> Isto atualiza apenas o conteúdo a <xref:System.Web.UI.UpdatePanel>controlar de que a nova colocação origina.</xref:System.Web.UI.UpdatePanel>       Para além do cenário de um controlo de botão está dentro de um <xref:System.Web.UI.UpdatePanel>controlo, pode utilizar os controlos com o botão <xref:System.Web.UI.UpdatePanel>controlos nos seguintes cenários:-definir um controlo de botão que está fora um <xref:System.Web.UI.UpdatePanel>controlar como um <xref:System.Web.UI.AsyncPostBackTrigger>controlo para esse painel.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Quando o botão é clicado, executa um postback assíncrono e atualiza o conteúdo do painel.      -Definir um controlo de botão está dentro de um <xref:System.Web.UI.UpdatePanel>controlar como um <xref:System.Web.UI.PostBackTrigger>para o painel.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> Quando o botão é clicado, efetua uma nova colocação apesar de estar no interior de um <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>       Para obter mais informações sobre a página parcial composição e utilizar <xref:System.Web.UI.UpdatePanel>controlos, consulte [descrição geral do controlo UpdatePanel](~/add/includes/ajax-current-ext-md.md) e [descrição geral de composição de página parcial](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a># # Sintaxe declarativa```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> classe."
  remarks: "Utilize este construtor para criar e inicializar uma nova instância de <xref:System.Web.UI.WebControls.Button>classe.</xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona os atributos do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo de fluxo de saída para composição no cliente."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que contém o fluxo de saída a compor no cliente."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se a validação é executada quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é clicado."
  remarks: "Por predefinição, é efetuada a validação da página quando um <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> Validação da página determina se os controlos de entrada associados a um controlo de validação na página de que passaram todas as regras de validação especificadas pelo controlo de validação.       Pode especificar ou determinar se a validação é executada no cliente e no servidor quando um <xref:System.Web.UI.WebControls.Button>controlo é clicado utilizando a propriedade CausesValidation.</xref:System.Web.UI.WebControls.Button> Para evitar a validação de que está a ser efetuada, defina a propriedade CausesValidation `false`.      > [!NOTE] > Deve definir a propriedade CausesValidation para `false` quando estiver a utilizar o <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>propriedade publicar novamente para uma página diferente.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Deve verificar explicitamente a validação ao publicar novamente para uma página diferente. Por exemplo, consulte a secção observações o <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>propriedade.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       Esta propriedade normalmente está definida como `false` para um `reset` ou `clear` botão para impedir a validação de que está a ser executada quando o botão é clicado.       Quando o valor da propriedade CausesValidation é definido como `true`, também pode utilizar o <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>propriedade para especificar o nome do grupo de validação para o qual o <xref:System.Web.UI.WebControls.Button>controlo aciona a validação.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a validação é efetuada quando a <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é clicado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é clicado."
  remarks: "O evento de clique é gerado quando o <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> Este evento é usado normalmente quando nenhum nome de comando está associado a <xref:System.Web.UI.WebControls.Button>controlo (por exemplo, com um botão para submeter).</xref:System.Web.UI.WebControls.Button>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é clicado."
  remarks: "O comando o evento é gerado quando o <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> Este evento é normalmente utilizado quando um nome de comando, tal como `Sort`, está associado a <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> Isto permite-lhe criar vários <xref:System.Web.UI.WebControls.Button>controlos de uma Web e da página programaticamente determinar qual <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > O comando. o evento é gerado através da hierarquia de controlo sob a forma do `BubbleEvent`.       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um parâmetro opcional transmitido para o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> eventos juntamente com o <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> associados"
  remarks: "Utilize a propriedade CommandArgument para especificar um parâmetro que compliments o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > Embora, pode definir a propriedade de CommandArgument por si só, é normalmente apenas quando utilizado o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade seja também definida.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       A propriedade de CommandArgument complementa o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade, permitindo-lhe fornecer informações adicionais sobre o comando para executar.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Por exemplo, se definir o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade `Sort` e a propriedade CommandArgument `Ascending`, especifique um comando para ordenar por ordem ascendente.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "Um parâmetro opcional transmitido para o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> eventos juntamente com o <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> associados O valor predefinido é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do comando associado a <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é transmitido para o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> eventos."
  remarks: "Se tiver múltiplos <xref:System.Web.UI.WebControls.Button>controlos numa página Web, utilize a propriedade de CommandName para especificar ou a determinar o nome do comando associado a cada <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> Pode definir a propriedade CommandName com qualquer cadeia que identifica o comando para executar. Através de programação, em seguida, pode determinar o nome do comando do <xref:System.Web.UI.WebControls.Button>controlar e executar as ações adequadas.</xref:System.Web.UI.WebControls.Button>       Informações adicionais sobre o comando, tal como `Ascending`, pode ser especificado utilizando o <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "O nome do comando do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo. O valor predefinido é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objeto que representa o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> comportamento de nova colocação do controlo."
  remarks: "O método GetPostBackOptions cria um <xref:System.Web.UI.PostBackOptions>objeto que representa o <xref:System.Web.UI.WebControls.Button>comportamento de nova colocação do controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> O <xref:System.Web.UI.PostBackOptions>objeto normalmente é então passado para o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>método, o que é utilizado para obter uma referência a uma função de script do lado do cliente que, quando foi invocado, faz com que o servidor após regressar à página.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       Este método é utilizado principalmente pelos programadores de controlo, quando expandir a <xref:System.Web.UI.WebControls.Button>classe.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> que representa o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> comportamento de nova colocação do controlo."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.Button.Click>evento é desencadeado quando o <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> Este evento é usado normalmente quando nenhum nome de comando está associado a <xref:System.Web.UI.WebControls.Button>controlo (por exemplo, com um botão para submeter).</xref:System.Web.UI.WebControls.Button>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnClick também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados de eventos."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o script do lado do cliente que executa quando um <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> do controlo <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> o evento é gerado."
  remarks: "Utilize a propriedade OnClientClick para especificar o script do lado do cliente adicional que executa quando um <xref:System.Web.UI.WebControls.Button>do controlo <xref:System.Web.UI.WebControls.Button.Click>o evento é gerado.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> O script que especificar para esta propriedade é composta no <xref:System.Web.UI.WebControls.Button>do controlo `OnClick` atributo, além do controlo predefinidas script do lado do cliente</xref:System.Web.UI.WebControls.Button>       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "O script do lado do cliente que executa quando um <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> do controlo <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> o evento é gerado."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo."
  remarks: "O <xref:System.Web.UI.WebControls.Button.Command>evento é desencadeado quando o <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> Este evento é normalmente utilizado quando um nome de comando, tal como `Sort`, está associado a <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> Isto permite-lhe criar vários <xref:System.Web.UI.WebControls.Button>controlos de uma Web e da página programaticamente determinar qual <xref:System.Web.UI.WebControls.Button>controlo é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > O <xref:System.Web.UI.WebControls.Button.Command>o evento é gerado através da hierarquia de controlo sob a forma do `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       Gerar um evento invoca o processador de eventos através de um delegado. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnCommand também permite que as classes derivadas processar o evento sem anexar um delegado. Este é a preferido técnica para processar o evento de uma classe derivada."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "Os dados de eventos."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o botão tem sido clicado antes da composição no cliente."
  remarks: "O método OnPreRender é utilizado principalmente pelos programadores de controlo ao efectuar a derivação de uma classe personalizada a partir de <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados de eventos."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o URL da página de colocação de atual página quando a <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é clicado."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "O URL da página Web de colocação de atual página quando a <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo é clicado. O valor predefinido é uma cadeia vazia (&quot;&quot;), que faz com que a página de colocação em si."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Desencadeia eventos para o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlar quando mensagens para o servidor."
  remarks: "Este evento é utilizado internamente pelo <xref:System.Web.UI.WebControls.Button>controlo, quando se clica, para emitir um <xref:System.Web.UI.WebControls.Button.Click>evento e, se definidas, um <xref:System.Web.UI.WebControls.Button.Command>eventos.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento para o evento."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Compõe o conteúdo do controlo para o escritor especificado."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que representa o fluxo de saída para compor HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Desencadeia eventos para o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlar quando mensagens para o servidor."
  remarks: "Este evento é utilizado internamente pelo <xref:System.Web.UI.WebControls.Button>controlo, quando se clica, para emitir um <xref:System.Web.UI.WebControls.Button.Click>evento e, se definidas, um <xref:System.Web.UI.WebControls.Button.Command>eventos.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento para o evento."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a legenda do texto apresentada no <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo."
  remarks: "Utilize a propriedade de texto para especificar ou a determinar a legenda para apresentar o <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button>       O valor desta propriedade, se estiver definida, podem ser guardados automaticamente para um ficheiro de recursos utilizando uma ferramenta estruturador. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "A legenda do texto apresentada no <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo. O valor predefinido é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo utiliza o cliente browser submeter mecanismo ou o mecanismo de nova colocação do ASP.NET."
  remarks: "Utilize a propriedade UseSubmitBehavior para especificar se um <xref:System.Web.UI.WebControls.Button>controlo utiliza o cliente browser submeter mecanismo ou o mecanismo de nova colocação do ASP.NET.</xref:System.Web.UI.WebControls.Button> Por predefinição, o valor desta propriedade é `true`, que provocou a <xref:System.Web.UI.WebControls.Button>mecanismo de envio de controlo para utilizar o browser.</xref:System.Web.UI.WebControls.Button> Se especificar `false`, a estrutura de página do ASP.NET adiciona o script do lado do cliente para a página de publicação do formulário para o servidor.       Quando a propriedade de UseSubmitBehavior é `false`, os programadores do controlo podem utilizar o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método para devolver o cliente voltar a colocar eventos para <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> A cadeia devolvida pelo <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método contém o texto da chamada de função do lado do cliente e pode ser inserido um processador de eventos do lado do cliente.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controlo utiliza o browser cliente submeter mecanismo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o grupo de controlos para o qual o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo aciona a validação quando mensagens no servidor."
  remarks: "Grupos de validação permitem-lhe atribuir controlos de validação numa página a uma categoria específica. Cada grupo de validação possa ser validado independentemente outros grupos de validação na página. Utilize a propriedade de ValidationGroup para especificar o nome do grupo de validação para o qual o <xref:System.Web.UI.WebControls.Button>controlo aciona a validação quando mensagens no servidor.</xref:System.Web.UI.WebControls.Button>       Esta propriedade tem um efeito apenas quando o valor da <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>propriedade está definida como `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Quando especificar um valor para a propriedade ValidationGroup, só a validação controla que fazem parte do grupo especificado são validados quando o <xref:System.Web.UI.WebControls.Button>mensagens do controlo para o servidor.</xref:System.Web.UI.WebControls.Button> Se não especificar um valor para esta propriedade e o <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>propriedade está definida como `true`, todos os controlos de validação na página que não estão atribuídos a um grupo de validação são validados quando o controlo de mensagens para o servidor.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       Esta propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [temas ASP.NET e das máscaras de](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "O grupo de controlos para o qual o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlo aciona a validação quando mensagens no servidor. O valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
