### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.EventToken
  id: EventToken
  children:
  - System.Reflection.Emit.EventToken.Empty
  - System.Reflection.Emit.EventToken.Equals(System.Object)
  - System.Reflection.Emit.EventToken.Equals(System.Reflection.Emit.EventToken)
  - System.Reflection.Emit.EventToken.GetHashCode
  - System.Reflection.Emit.EventToken.op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  - System.Reflection.Emit.EventToken.op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  - System.Reflection.Emit.EventToken.Token
  langs:
  - csharp
  name: EventToken
  nameWithType: EventToken
  fullName: System.Reflection.Emit.EventToken
  type: Struct
  summary: "Represents the <xref uid=&quot;langword_csharp_Token&quot; name=&quot;Token&quot; href=&quot;&quot;></xref> returned by the metadata to represent an event."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct EventToken
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Empty
  id: Empty
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Empty
  nameWithType: EventToken.Empty
  fullName: System.Reflection.Emit.EventToken.Empty
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "The default <xref uid=&quot;langword_csharp_EventToken&quot; name=&quot;EventToken&quot; href=&quot;&quot;></xref> with <xref:System.Reflection.Emit.EventToken.Token*> value 0."
  syntax:
    content: public static readonly System.Reflection.Emit.EventToken Empty;
    return:
      type: System.Reflection.Emit.EventToken
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EventToken.Equals(Object)
  fullName: System.Reflection.Emit.EventToken.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Checks if the given object is an instance of <xref uid=&quot;langword_csharp_EventToken&quot; name=&quot;EventToken&quot; href=&quot;&quot;></xref> and is equal to this instance."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to be compared with this instance."
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>obj</code> is an instance of <xref uid=&quot;langword_csharp_EventToken&quot; name=&quot;EventToken&quot; href=&quot;&quot;></xref> and equals the current instance; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.EventToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Equals(System.Reflection.Emit.EventToken)
  id: Equals(System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Equals(EventToken)
  nameWithType: EventToken.Equals(EventToken)
  fullName: System.Reflection.Emit.EventToken.Equals(EventToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Indicates whether the current instance is equal to the specified <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref>."
  syntax:
    content: public bool Equals (System.Reflection.Emit.EventToken obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.EventToken
      description: "The <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> to compare to the current instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value of <code>obj</code> is equal to the value of the current instance; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.EventToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EventToken.GetHashCode()
  fullName: System.Reflection.Emit.EventToken.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Generates the hash code for this event."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Returns the hash code for this instance."
  overload: System.Reflection.Emit.EventToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  id: op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: op_Equality(EventToken,EventToken)
  nameWithType: EventToken.op_Equality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Equality(EventToken,EventToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Indicates whether two <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> structures are equal."
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.EventToken a, System.Reflection.Emit.EventToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.EventToken
      description: "The <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> to compare to `b`."
    - id: b
      type: System.Reflection.Emit.EventToken
      description: "The <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> to compare to `a`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.EventToken.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  id: op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: op_Inequality(EventToken,EventToken)
  nameWithType: EventToken.op_Inequality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Inequality(EventToken,EventToken)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Indicates whether two <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> structures are not equal."
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.EventToken a, System.Reflection.Emit.EventToken b);
    parameters:
    - id: a
      type: System.Reflection.Emit.EventToken
      description: "The <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> to compare to `b`."
    - id: b
      type: System.Reflection.Emit.EventToken
      description: "The <xref href=&quot;System.Reflection.Emit.EventToken&quot;></xref> to compare to `a`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.Emit.EventToken.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.EventToken.Token
  id: Token
  parent: System.Reflection.Emit.EventToken
  langs:
  - csharp
  name: Token
  nameWithType: EventToken.Token
  fullName: System.Reflection.Emit.EventToken.Token
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Retrieves the metadata token for this event."
  syntax:
    content: public int Token { get; }
    return:
      type: System.Int32
      description: "Read-only. Retrieves the metadata token for this event."
  overload: System.Reflection.Emit.EventToken.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.EventToken.Empty
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Empty
  nameWithType: EventToken.Empty
  fullName: System.Reflection.Emit.EventToken.Empty
- uid: System.Reflection.Emit.EventToken
  parent: System.Reflection.Emit
  isExternal: false
  name: EventToken
  nameWithType: EventToken
  fullName: System.Reflection.Emit.EventToken
- uid: System.Reflection.Emit.EventToken.Equals(System.Object)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Equals(Object)
  nameWithType: EventToken.Equals(Object)
  fullName: System.Reflection.Emit.EventToken.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.EventToken.Equals(System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Equals(EventToken)
  nameWithType: EventToken.Equals(EventToken)
  fullName: System.Reflection.Emit.EventToken.Equals(EventToken)
- uid: System.Reflection.Emit.EventToken.GetHashCode
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: GetHashCode()
  nameWithType: EventToken.GetHashCode()
  fullName: System.Reflection.Emit.EventToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.EventToken.op_Equality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Equality(EventToken,EventToken)
  nameWithType: EventToken.op_Equality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Equality(EventToken,EventToken)
- uid: System.Reflection.Emit.EventToken.op_Inequality(System.Reflection.Emit.EventToken,System.Reflection.Emit.EventToken)
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Inequality(EventToken,EventToken)
  nameWithType: EventToken.op_Inequality(EventToken,EventToken)
  fullName: System.Reflection.Emit.EventToken.op_Inequality(EventToken,EventToken)
- uid: System.Reflection.Emit.EventToken.Token
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Token
  nameWithType: EventToken.Token
  fullName: System.Reflection.Emit.EventToken.Token
- uid: System.Reflection.Emit.EventToken.Equals*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Equals
  nameWithType: EventToken.Equals
- uid: System.Reflection.Emit.EventToken.GetHashCode*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: GetHashCode
  nameWithType: EventToken.GetHashCode
- uid: System.Reflection.Emit.EventToken.op_Equality*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Equality
  nameWithType: EventToken.op_Equality
- uid: System.Reflection.Emit.EventToken.op_Inequality*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: op_Inequality
  nameWithType: EventToken.op_Inequality
- uid: System.Reflection.Emit.EventToken.Token*
  parent: System.Reflection.Emit.EventToken
  isExternal: false
  name: Token
  nameWithType: EventToken.Token
