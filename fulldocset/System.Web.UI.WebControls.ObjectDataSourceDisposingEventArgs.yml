### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  id: ObjectDataSourceDisposingEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&quot;> </xref> eventos do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo."
  remarks: "A classe de ObjectDataSourceDisposingEventArgs é utilizada no <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>método para fornecer acesso para a instância de objecto de negócio após as operações de dados que estão a utilizar o <xref:System.Web.UI.WebControls.ObjectDataSource>objeto de controlo e comerciais são executadas, mas antes das empresas e o objeto é destruído.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> O objecto de negócio é acedido utilizando o <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> Ao adicionar um delegado para processar o <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>evento, podem aceder a quaisquer membros expostos publicamente o objecto de negócio para realizar qualquer trabalho final ou limpar correr</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>       O <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>método não é chamado <xref:System.Web.UI.WebControls.ObjectDataSource>controlar, se o método que executa operações de dados for uma `static` método.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Nenhuma instância de objecto de negócio é criada quando o método é estático.       O <xref:System.Web.UI.WebControls.ObjectDataSource>controlo expõe muitos eventos que pode processar para trabalhar com o objecto de negócio subjacentes a horas variadas no respetivo ciclo de vida.</xref:System.Web.UI.WebControls.ObjectDataSource> A tabela seguinte lista os eventos e associada <xref:System.EventArgs>classes e os delegados do processador de eventos.</xref:System.EventArgs>      | Evento | EventArgs | EventHandler |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Ocorre imediatamente antes de é criada a instância do objecto de negócio. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Ocorre imediatamente depois de criar a instância do objecto de negócio. | <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Ocorre antes dos dados são obtidos. | <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> Ocorre antes de uma insert, update ou de operação de eliminação é efetuada. | <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> Ocorre depois dos dados são obtidos. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Ocorrer após a inserção, atualização ou eliminação operação for concluída. | <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Ocorre antes de um objecto de negócio é destruído. | ObjectDataSourceDisposingEventArgs | <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the ObjectDataSourceDisposingEventArgs object is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> classe utilizando o objeto especificado."
  syntax:
    content: public ObjectDataSourceDisposingEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "O objecto de negócio com o qual o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> interage para efetuar operações de dados."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um objecto que representa o objecto de negócio com o qual o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlo executa operações de dados."
  remarks: "Se os métodos de operação de dados (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) são os métodos de instância, uma instância do negócio objeto é criado antes do método é executado.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Pode impedir o objecto de negócio que está a ser criada para cada chamada por guardar o objeto na propriedade ObjectInstance no <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>processador de eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> No subsequentes <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>eventos, pode obter o objeto de negócio do <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: public object ObjectInstance { get; }
    return:
      type: System.Object
      description: "O objecto de negócio a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> utiliza para operações de dados; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é passado para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
