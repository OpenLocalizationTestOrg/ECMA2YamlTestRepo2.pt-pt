### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.DataAttribute
  id: DataAttribute
  children:
  - System.Data.Linq.Mapping.DataAttribute.#ctor
  - System.Data.Linq.Mapping.DataAttribute.Name
  - System.Data.Linq.Mapping.DataAttribute.Storage
  langs:
  - csharp
  name: DataAttribute
  nameWithType: DataAttribute
  fullName: System.Data.Linq.Mapping.DataAttribute
  type: Class
  summary: "Provides members to describe attributes of data in columns."
  syntax:
    content: 'public abstract class DataAttribute : Attribute'
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DataAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.DataAttribute
  langs:
  - csharp
  name: DataAttribute()
  nameWithType: DataAttribute.DataAttribute()
  fullName: System.Data.Linq.Mapping.DataAttribute.DataAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Linq.Mapping.DataAttribute&quot;></xref> class."
  syntax:
    content: protected DataAttribute ();
    parameters: []
  overload: System.Data.Linq.Mapping.DataAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DataAttribute.Name
  id: Name
  parent: System.Data.Linq.Mapping.DataAttribute
  langs:
  - csharp
  name: Name
  nameWithType: DataAttribute.Name
  fullName: System.Data.Linq.Mapping.DataAttribute.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets or sets the name of a column."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name."
  overload: System.Data.Linq.Mapping.DataAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.DataAttribute.Storage
  id: Storage
  parent: System.Data.Linq.Mapping.DataAttribute
  langs:
  - csharp
  name: Storage
  nameWithType: DataAttribute.Storage
  fullName: System.Data.Linq.Mapping.DataAttribute.Storage
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Gets or sets a private storage field to hold the value from a column."
  remarks: "Storage property values are case sensitive. For example, ensure that values used in the attribute for the Storage property match the case for the corresponding property names used elsewhere in the code. This applies to all .NET programming languages, even those which are not typically case sensitive, including [!INCLUDE[vb_current_short](~/add/includes/vb-current-short-md.md)]."
  example:
  - "```vb#  \n<Column(Storage:=_CustomerID)> _  \nPublic CustomerID As String   \n```  \n  \n```c#  \n[Column(Storage=\"_CustomerID\")]  \npublic string CustomerID  \n{  \n}  \n```"
  syntax:
    content: public string Storage { get; set; }
    return:
      type: System.String
      description: "The name of the storage field."
  overload: System.Data.Linq.Mapping.DataAttribute.Storage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.DataAttribute.#ctor
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: DataAttribute()
  nameWithType: DataAttribute.DataAttribute()
  fullName: System.Data.Linq.Mapping.DataAttribute.DataAttribute()
- uid: System.Data.Linq.Mapping.DataAttribute.Name
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Name
  nameWithType: DataAttribute.Name
  fullName: System.Data.Linq.Mapping.DataAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.DataAttribute.Storage
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Storage
  nameWithType: DataAttribute.Storage
  fullName: System.Data.Linq.Mapping.DataAttribute.Storage
- uid: System.Data.Linq.Mapping.DataAttribute.#ctor*
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: DataAttribute
  nameWithType: DataAttribute.DataAttribute
- uid: System.Data.Linq.Mapping.DataAttribute.Name*
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Name
  nameWithType: DataAttribute.Name
- uid: System.Data.Linq.Mapping.DataAttribute.Storage*
  parent: System.Data.Linq.Mapping.DataAttribute
  isExternal: false
  name: Storage
  nameWithType: DataAttribute.Storage
