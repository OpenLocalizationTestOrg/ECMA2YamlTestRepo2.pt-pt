### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.FragmentState
  id: FragmentState
  children:
  - System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])
  - System.Speech.Synthesis.TtsEngine.FragmentState.Action
  - System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  - System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  - System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)
  - System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  - System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode
  - System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  - System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  - System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  - System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  - System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  - System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  langs:
  - csharp
  name: FragmentState
  nameWithType: FragmentState
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState
  type: Struct
  syntax:
    content: >-
      [System.ComponentModel.ImmutableObject(true)]

      public struct FragmentState : IEquatable<System.Speech.Synthesis.TtsEngine.FragmentState>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Speech.Synthesis.TtsEngine.FragmentState>
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])
  id: '#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])'
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  nameWithType: FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);
    parameters:
    - id: action
      type: System.Speech.Synthesis.TtsEngine.TtsEngineAction
      description: "To be added."
    - id: langId
      type: System.Int32
      description: "To be added."
    - id: emphasis
      type: System.Int32
      description: "To be added."
    - id: duration
      type: System.Int32
      description: "To be added."
    - id: sayAs
      type: System.Speech.Synthesis.TtsEngine.SayAs
      description: "To be added."
    - id: prosody
      type: System.Speech.Synthesis.TtsEngine.Prosody
      description: "To be added."
    - id: phonemes
      type: System.Char[]
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action
  id: Action
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Action
  nameWithType: FragmentState.Action
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Action
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }
    return:
      type: System.Speech.Synthesis.TtsEngine.TtsEngineAction
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  id: Duration
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Duration
  nameWithType: FragmentState.Duration
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public int Duration { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  id: Emphasis
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Emphasis
  nameWithType: FragmentState.Emphasis
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public int Emphasis { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FragmentState.Equals(Object)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  id: Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Equals(FragmentState)
  nameWithType: FragmentState.Equals(FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(FragmentState)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);
    parameters:
    - id: other
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode
  id: GetHashCode
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FragmentState.GetHashCode()
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  id: LangId
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: LangId
  nameWithType: FragmentState.LangId
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public int LangId { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.LangId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  id: op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: op_Equality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Equality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(FragmentState,FragmentState)
  type: Operator
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public static bool op_Equality (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);
    parameters:
    - id: state1
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "To be added."
    - id: state2
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  id: op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: op_Inequality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Inequality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(FragmentState,FragmentState)
  type: Operator
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public static bool op_Inequality (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);
    parameters:
    - id: state1
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "To be added."
    - id: state2
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  id: Phoneme
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Phoneme
  nameWithType: FragmentState.Phoneme
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public char[] Phoneme { get; }
    return:
      type: System.Char[]
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  id: Prosody
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Prosody
  nameWithType: FragmentState.Prosody
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }
    return:
      type: System.Speech.Synthesis.TtsEngine.Prosody
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  id: SayAs
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: SayAs
  nameWithType: FragmentState.SayAs
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }
    return:
      type: System.Speech.Synthesis.TtsEngine.SayAs
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  nameWithType: FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineAction
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: TtsEngineAction
  nameWithType: TtsEngineAction
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineAction
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.TtsEngine.SayAs
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: SayAs
  nameWithType: SayAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs
- uid: System.Speech.Synthesis.TtsEngine.Prosody
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: Prosody
  nameWithType: Prosody
  fullName: System.Speech.Synthesis.TtsEngine.Prosody
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Action
  nameWithType: FragmentState.Action
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Action
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Duration
  nameWithType: FragmentState.Duration
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Emphasis
  nameWithType: FragmentState.Emphasis
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Equals(Object)
  nameWithType: FragmentState.Equals(Object)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Equals(FragmentState)
  nameWithType: FragmentState.Equals(FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(FragmentState)
- uid: System.Speech.Synthesis.TtsEngine.FragmentState
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: FragmentState
  nameWithType: FragmentState
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: GetHashCode()
  nameWithType: FragmentState.GetHashCode()
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode()
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: LangId
  nameWithType: FragmentState.LangId
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Equality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Equality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(FragmentState,FragmentState)
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Inequality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Inequality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(FragmentState,FragmentState)
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Phoneme
  nameWithType: FragmentState.Phoneme
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Prosody
  nameWithType: FragmentState.Prosody
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: SayAs
  nameWithType: FragmentState.SayAs
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: FragmentState
  nameWithType: FragmentState.FragmentState
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Action
  nameWithType: FragmentState.Action
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Duration
  nameWithType: FragmentState.Duration
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Emphasis
  nameWithType: FragmentState.Emphasis
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Equals
  nameWithType: FragmentState.Equals
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: GetHashCode
  nameWithType: FragmentState.GetHashCode
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: LangId
  nameWithType: FragmentState.LangId
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Equality
  nameWithType: FragmentState.op_Equality
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Inequality
  nameWithType: FragmentState.op_Inequality
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Phoneme
  nameWithType: FragmentState.Phoneme
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Prosody
  nameWithType: FragmentState.Prosody
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: SayAs
  nameWithType: FragmentState.SayAs
