### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.TtsEngine.FragmentState
  id: FragmentState
  children:
  - System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])
  - System.Speech.Synthesis.TtsEngine.FragmentState.Action
  - System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  - System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  - System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)
  - System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  - System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode
  - System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  - System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  - System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  - System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  - System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  - System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  langs:
  - csharp
  name: FragmentState
  nameWithType: FragmentState
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState
  type: Struct
  summary: "Provides detailed information about a <xref uid=&quot;langword_csharp_TextFragment&quot; name=&quot;TextFragment&quot; href=&quot;&quot;></xref>."
  remarks: "FragmentState instances are obtained from the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> on <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects.       The information in FragmentState is obtained by parsing the attributes decorating speech text in the Synthesize Speech Markup Language (SSML) used as an input to a synthesis engine.       A FragmentState object can exist for any synthesizer action request as specified by its <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property. However, the meaning of its members may change for different actions. For more information on synthesize actions, see <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> for more information about specifying synthesizer actions.      -   Specification and control of the quality of the spoken output is largely handled through the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis%2A>, and <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Duration%2A>      -   Phonetic, language, and linguist structure information is available through <xref:System.Speech.Synthesis.TtsEngine.FragmentState.LangId%2A>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme%2A>, and <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A>."
  syntax:
    content: >-
      [System.ComponentModel.ImmutableObject(true)]

      public struct FragmentState : IEquatable<System.Speech.Synthesis.TtsEngine.FragmentState>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Speech.Synthesis.TtsEngine.FragmentState>
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])
  id: '#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])'
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  nameWithType: FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  syntax:
    content: public FragmentState (System.Speech.Synthesis.TtsEngine.TtsEngineAction action, int langId, int emphasis, int duration, System.Speech.Synthesis.TtsEngine.SayAs sayAs, System.Speech.Synthesis.TtsEngine.Prosody prosody, char[] phonemes);
    parameters:
    - id: action
      type: System.Speech.Synthesis.TtsEngine.TtsEngineAction
      description: "A member of the  enumeration that specifies a speech synthesis action."
    - id: langId
      type: System.Int32
      description: "The id of the language being used. Corresponds to the XML `xml:lang` attribute."
    - id: emphasis
      type: System.Int32
      description: "The emphasis to be applied to speech output or pauses."
    - id: duration
      type: System.Int32
      description: "The time allotted to speak the text of the ."
    - id: sayAs
      type: System.Speech.Synthesis.TtsEngine.SayAs
      description: "A member of the  class, indicating the type of text of the  and the level of detail required for accurate rendering of the contained text.       Corresponds to the `"
    - id: prosody
      type: System.Speech.Synthesis.TtsEngine.Prosody
      description: "To be added."
    - id: phonemes
      type: System.Char[]
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action
  id: Action
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Action
  nameWithType: FragmentState.Action
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Action
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns the requested speech synthesizer action."
  syntax:
    content: public System.Speech.Synthesis.TtsEngine.TtsEngineAction Action { get; }
    return:
      type: System.Speech.Synthesis.TtsEngine.TtsEngineAction
      description: "A member of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TtsEngineAction&quot;></see> indicating the speech synthesis action requested by SSML input."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Action*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  id: Duration
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Duration
  nameWithType: FragmentState.Duration
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns the desired time for rendering a <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see>"
  syntax:
    content: public int Duration { get; }
    return:
      type: System.Int32
      description: "Returns an <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;></xref> containing a value in millisecond of the desired time for rendering a <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see>."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Duration*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  id: Emphasis
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Emphasis
  nameWithType: FragmentState.Emphasis
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns instructions on how to emphasize a <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see>."
  remarks: "The interpretation of the value returned by Emphasis depends on the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> value returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the current <xref:System.Speech.Synthesis.TtsEngine.FragmentState>.      1.  If the value of <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>          -   If Emphasis is positive, the value returned should be interpreted as the length of the silence in milliseconds.          -   If Emphasis is negative, the value returned should be interpreted as a member of the <xref:System.Speech.Synthesis.TtsEngine.EmphasisBreak>.           Emphasis information returned by Emphasis when the property <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> corresponds to the attributes of the `<break>` element of SSML input to a speech synthesizer engine.      2.  For all other values of <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>, the Emphasis values should be interpreted as being of <xref:System.Speech.Synthesis.TtsEngine.EmphasisWord>.           Emphasis information returned by Emphasis for spoken words corresponds to the attributes of the `<emphasis>` element of SSML input to a speech synthesizer engine."
  syntax:
    content: public int Emphasis { get; }
    return:
      type: System.Int32
      description: "Returns an <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;></xref> value indicating how to emphasize a <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see>."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FragmentState.Equals(Object)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Determines if a given object is an instance <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see> equal to the current instance of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see>."
  remarks: "The method return false if the [Object](http://msdn.microsoft.com/library/vstudio/system.object\\(v=vs.110\\).aspx) provided by the `obj` argument cannot be cast to <xref:System.Speech.Synthesis.TtsEngine.TextFragment>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: 'An object that can be cast to an instance of '
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  id: Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Equals(FragmentState)
  nameWithType: FragmentState.Equals(FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(FragmentState)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Determines if a given instance of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see> is equal to the current instance of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see>."
  syntax:
    content: public bool Equals (System.Speech.Synthesis.TtsEngine.FragmentState other);
    parameters:
    - id: other
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "An instance of  that"
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode
  id: GetHashCode
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FragmentState.GetHashCode()
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns the hash code for this instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  id: LangId
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: LangId
  nameWithType: FragmentState.LangId
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns the language supported by the current <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see>."
  remarks: "The value of LangId are those used with the Windows Speech API (SAPI) and are generated from the &quot;`xml:lang`&quot; attribute on SSML input to a speech synthesizer engine."
  syntax:
    content: public int LangId { get; }
    return:
      type: System.Int32
      description: "Returns an <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;></xref> containing an identifier for the language used by the current <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see>."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.LangId*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  id: op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: op_Equality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Equality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(FragmentState,FragmentState)
  type: Operator
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Determines if two instances of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see> describes the same <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see> state."
  syntax:
    content: public static bool op_Equality (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);
    parameters:
    - id: state1
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "An instance of  whose described state is compared against the instance of  provided by the `state2` argument."
    - id: state2
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "An instance of  whose described state is compared against the instance of  provided by the `state1` argument."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  id: op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: op_Inequality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Inequality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(FragmentState,FragmentState)
  type: Operator
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Determines if two instances of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.FragmentState&quot;></see> describes the different <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see> state."
  syntax:
    content: public static bool op_Inequality (System.Speech.Synthesis.TtsEngine.FragmentState state1, System.Speech.Synthesis.TtsEngine.FragmentState state2);
    parameters:
    - id: state1
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "An instance of  whose described state is compared against the instance of  provided by the `state2` argument."
    - id: state2
      type: System.Speech.Synthesis.TtsEngine.FragmentState
      description: "An instance of  whose described state is compared against the instance of  provided by the `state1` argument."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  id: Phoneme
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Phoneme
  nameWithType: FragmentState.Phoneme
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns phonetic information for a <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.TextFragment&quot;></see>"
  remarks: "The information returned by the Phoneme property corresponds to the `<phoneme>` XML tag of SSML input to a synthesis engine.       The array of `char` objects returned by Phoneme property expresses pronunciation using the International Phonetic Alphabet (IPA)."
  syntax:
    content: public char[] Phoneme { get; }
    return:
      type: System.Char[]
      description: "To be added."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  id: Prosody
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: Prosody
  nameWithType: FragmentState.Prosody
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns detailed information about the pitch, speaking rate, and volume of speech output."
  remarks: "The information returned by <xref:System.Speech.Synthesis.TtsEngine.Prosody> corresponds to the `<prosody>` XML tag in the SSML specification"
  syntax:
    content: public System.Speech.Synthesis.TtsEngine.Prosody Prosody { get; }
    return:
      type: System.Speech.Synthesis.TtsEngine.Prosody
      description: "Returns a valid instance of <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.Prosody&quot;></see> containing the pitch, speaking rate, and volume settings, and changes to those setting, for speech output."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  id: SayAs
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  langs:
  - csharp
  name: SayAs
  nameWithType: FragmentState.SayAs
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis.TtsEngine
  summary: "Returns information about the context for the generation of speech from text.."
  remarks: "The information returned by SayAs corresponds to the `<say-as>` tag and its attributes in the SSML specification, and can specify:      -   The content type (such as currency, date, or address) or language construct represented by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> property of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.      -   Optional formatting information to handle the content type represented by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> property of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, for example, a date syntax.      -   The detail to be used in generating speech from the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> property of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, for example, whether to explicitly render punctuation."
  syntax:
    content: public System.Speech.Synthesis.TtsEngine.SayAs SayAs { get; }
    return:
      type: System.Speech.Synthesis.TtsEngine.SayAs
      description: "Returns a value <see cref=&quot;T:System.Speech.Synthesis.TtsEngine.SayAs&quot;></see> instance if the SSML used by a speech synthesis engine contains detailed information about the context to be used to generate speech, otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  nameWithType: FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.FragmentState(TtsEngineAction,Int32,Int32,Int32,SayAs,Prosody,Char[])
- uid: System.Speech.Synthesis.TtsEngine.TtsEngineAction
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: TtsEngineAction
  nameWithType: TtsEngineAction
  fullName: System.Speech.Synthesis.TtsEngine.TtsEngineAction
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Synthesis.TtsEngine.SayAs
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: SayAs
  nameWithType: SayAs
  fullName: System.Speech.Synthesis.TtsEngine.SayAs
- uid: System.Speech.Synthesis.TtsEngine.Prosody
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: Prosody
  nameWithType: Prosody
  fullName: System.Speech.Synthesis.TtsEngine.Prosody
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Action
  nameWithType: FragmentState.Action
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Action
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Duration
  nameWithType: FragmentState.Duration
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Duration
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Emphasis
  nameWithType: FragmentState.Emphasis
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Equals(Object)
  nameWithType: FragmentState.Equals(Object)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Equals(FragmentState)
  nameWithType: FragmentState.Equals(FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Equals(FragmentState)
- uid: System.Speech.Synthesis.TtsEngine.FragmentState
  parent: System.Speech.Synthesis.TtsEngine
  isExternal: false
  name: FragmentState
  nameWithType: FragmentState
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: GetHashCode()
  nameWithType: FragmentState.GetHashCode()
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode()
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: LangId
  nameWithType: FragmentState.LangId
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.LangId
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Equality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Equality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(FragmentState,FragmentState)
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Inequality(FragmentState,FragmentState)
  nameWithType: FragmentState.op_Inequality(FragmentState,FragmentState)
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(FragmentState,FragmentState)
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Phoneme
  nameWithType: FragmentState.Phoneme
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Prosody
  nameWithType: FragmentState.Prosody
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: SayAs
  nameWithType: FragmentState.SayAs
  fullName: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.#ctor*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: FragmentState
  nameWithType: FragmentState.FragmentState
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Action*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Action
  nameWithType: FragmentState.Action
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Duration*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Duration
  nameWithType: FragmentState.Duration
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Emphasis
  nameWithType: FragmentState.Emphasis
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Equals*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Equals
  nameWithType: FragmentState.Equals
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: GetHashCode
  nameWithType: FragmentState.GetHashCode
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.LangId*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: LangId
  nameWithType: FragmentState.LangId
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Equality
  nameWithType: FragmentState.op_Equality
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: op_Inequality
  nameWithType: FragmentState.op_Inequality
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Phoneme
  nameWithType: FragmentState.Phoneme
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.Prosody*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: Prosody
  nameWithType: FragmentState.Prosody
- uid: System.Speech.Synthesis.TtsEngine.FragmentState.SayAs*
  parent: System.Speech.Synthesis.TtsEngine.FragmentState
  isExternal: false
  name: SayAs
  nameWithType: FragmentState.SayAs
