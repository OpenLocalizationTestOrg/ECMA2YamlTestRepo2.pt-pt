### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.LdapConnection
  id: LdapConnection
  children:
  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)
  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)
  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)
  - System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)
  - System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)
  - System.DirectoryServices.Protocols.LdapConnection.AuthType
  - System.DirectoryServices.Protocols.LdapConnection.AutoBind
  - System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  - System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  - System.DirectoryServices.Protocols.LdapConnection.Bind
  - System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)
  - System.DirectoryServices.Protocols.LdapConnection.Credential
  - System.DirectoryServices.Protocols.LdapConnection.Dispose
  - System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)
  - System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)
  - System.DirectoryServices.Protocols.LdapConnection.Finalize
  - System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)
  - System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  - System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)
  - System.DirectoryServices.Protocols.LdapConnection.SessionOptions
  - System.DirectoryServices.Protocols.LdapConnection.Timeout
  langs:
  - csharp
  name: LdapConnection
  nameWithType: LdapConnection
  fullName: System.DirectoryServices.Protocols.LdapConnection
  type: Class
  summary: "The LdapConnection class creates a TCP/IP or UDP LDAP connection to Microsoft Active Directory Domain Services or an LDAP server."
  remarks: "If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the LdapConnection object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored."
  syntax:
    content: 'public class LdapConnection : System.DirectoryServices.Protocols.DirectoryConnection, IDisposable'
  inheritance:
  - System.Object
  - System.DirectoryServices.Protocols.DirectoryConnection
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  - System.DirectoryServices.Protocols.DirectoryConnection.Directory
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)
  id: '#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)'
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: LdapConnection(LdapDirectoryIdentifier)
  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The LdapConnection constructor creates an instance of the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> class using the specified directory identifier. The logon credentials and the Negotiate Authentication are used to connect to the LDAP server."
  syntax:
    content: public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier);
    parameters:
    - id: identifier
      type: System.DirectoryServices.Protocols.LdapDirectoryIdentifier
      description: "An <xref href=&quot;System.DirectoryServices.Protocols.LdapDirectoryIdentifier&quot;></xref> object that specifies the server."
  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*
  exceptions:
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "Thrown if it fails to create a connection block or fails to open a connection to server."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: LdapConnection(String)
  nameWithType: LdapConnection.LdapConnection(String)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The LdapConnection constructor creates an instance of the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> class using the specified server."
  syntax:
    content: public LdapConnection (string server);
    parameters:
    - id: server
      type: System.String
      description: "A string specifying the server  which can be a domain name, LDAP server name or dotted strings representing the IP address of the LDAP server. Optionally, this parameter may also include a port number, separated from the right end of the string by a colon (:)."
  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*
  exceptions:
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "Thrown if it fails to create a connection block or fails to open a connection to server."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)
  id: '#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)'
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential)
  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The LdapConnection constructor creates an instance of the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> class using the specified directory identifier and network credentials. Negotiate Authentication is used."
  syntax:
    content: public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential);
    parameters:
    - id: identifier
      type: System.DirectoryServices.Protocols.LdapDirectoryIdentifier
      description: "An <xref href=&quot;System.DirectoryServices.Protocols.LdapDirectoryIdentifier&quot;></xref> object that specifies the server."
    - id: credential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential> object that specifies the credentials to use."
  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*
  exceptions:
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "Thrown if it fails to create a connection block or fails to open a connection to server."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)
  id: '#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)'
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)
  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The LdapConnection constructor creates an instance of the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> class using the specified directory identifier, network credentials, and authentication type."
  syntax:
    content: public LdapConnection (System.DirectoryServices.Protocols.LdapDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);
    parameters:
    - id: identifier
      type: System.DirectoryServices.Protocols.LdapDirectoryIdentifier
      description: "An <xref href=&quot;System.DirectoryServices.Protocols.LdapDirectoryIdentifier&quot;></xref> object that specifies the server."
    - id: credential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential> object that specifies the credentials to use."
    - id: authType
      type: System.DirectoryServices.Protocols.AuthType
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.AuthType&quot;></xref> values that specifies the type of authentication to use."
  overload: System.DirectoryServices.Protocols.LdapConnection.#ctor*
  exceptions:
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "Thrown if it fails to create a connection block or fails to open a connection to server."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Thrown when <code>authType</code> is out of range."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Thrown when <code>authType</code> is specified as Anonymous but <code>credential</code> specified credentials."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)
  id: Abort(System.IAsyncResult)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Abort(IAsyncResult)
  nameWithType: LdapConnection.Abort(IAsyncResult)
  fullName: System.DirectoryServices.Protocols.LdapConnection.Abort(IAsyncResult)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Abort method cancels the asynchronous request."
  syntax:
    content: public void Abort (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> object that references the asynchronous request."
  overload: System.DirectoryServices.Protocols.LdapConnection.Abort*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Thrown if <code>asyncResult</code> was not returned by the corresponding call to <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*>"
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.AuthType
  id: AuthType
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: AuthType
  nameWithType: LdapConnection.AuthType
  fullName: System.DirectoryServices.Protocols.LdapConnection.AuthType
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The AuthType property contains the supported authentication types."
  syntax:
    content: public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }
    return:
      type: System.DirectoryServices.Protocols.AuthType
      description: "A supported authentication type."
  overload: System.DirectoryServices.Protocols.LdapConnection.AuthType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Thrown when <code>authType</code> is out of range."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.AutoBind
  id: AutoBind
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: AutoBind
  nameWithType: LdapConnection.AutoBind
  fullName: System.DirectoryServices.Protocols.LdapConnection.AutoBind
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The AutoBind property specifies whether an automatic bind is allowed."
  syntax:
    content: public bool AutoBind { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the automatic bind is allowed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.DirectoryServices.Protocols.LdapConnection.AutoBind*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  id: BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)
  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)
  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The BeginSendRequest method sends data asynchronously to the server."
  syntax:
    content: public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);
    parameters:
    - id: request
      type: System.DirectoryServices.Protocols.DirectoryRequest
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;></xref> object."
    - id: partialMode
      type: System.DirectoryServices.Protocols.PartialResultProcessing
      description: "A value from <xref href=&quot;System.DirectoryServices.Protocols.PartialResultProcessing&quot;></xref> enumeration that specifies the level of partial result to return."
    - id: callback
      type: System.AsyncCallback
      description: "The <xref:System.AsyncCallback> function."
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that contains the state data for this request."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> object that references the asynchronous send."
  overload: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Partial results are not supported."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A callback function must be specified if <code>partialMode</code> is equal to <xref href=&quot;System.DirectoryServices.Protocols.PartialResultProcessing&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  id: BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)
  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)
  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The BeginSendRequest method sends data asynchronously to the server."
  syntax:
    content: public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout, System.DirectoryServices.Protocols.PartialResultProcessing partialMode, AsyncCallback callback, object state);
    parameters:
    - id: request
      type: System.DirectoryServices.Protocols.DirectoryRequest
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;></xref> object."
    - id: requestTimeout
      type: System.TimeSpan
      description: "The time, in seconds, until the request times out."
    - id: partialMode
      type: System.DirectoryServices.Protocols.PartialResultProcessing
      description: "A value from <xref href=&quot;System.DirectoryServices.Protocols.PartialResultProcessing&quot;></xref> enumeration that specifies the level of partial result to return."
    - id: callback
      type: System.AsyncCallback
      description: "The <xref:System.AsyncCallback> function."
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that contains the state data for this request."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> object that references the asynchronous send."
  overload: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Partial results are not supported."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A callback function must be specified if <code>partialMode</code> is equal to <xref href=&quot;System.DirectoryServices.Protocols.PartialResultProcessing&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Bind
  id: Bind
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Bind()
  nameWithType: LdapConnection.Bind()
  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind()
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Bind method sends an LDAP bind using the current credentials."
  syntax:
    content: public void Bind ();
    parameters: []
  overload: System.DirectoryServices.Protocols.LdapConnection.Bind*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object handle is not valid."
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "The error code returned by LDAP does not map to one of the <xref href=&quot;System.DirectoryServices.Protocols.ResultCode&quot;></xref> enumeration error codes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Either the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*> property specifies more than one client certificate to send for authentication, or the <xref:System.DirectoryServices.Protocols.LdapConnection.AuthType*> property is Anonymous and one or more credentials are supplied."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)
  id: Bind(System.Net.NetworkCredential)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Bind(NetworkCredential)
  nameWithType: LdapConnection.Bind(NetworkCredential)
  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind(NetworkCredential)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Bind method sends an LDAP bind using the specified <xref:System.Net.NetworkCredential>."
  syntax:
    content: public void Bind (System.Net.NetworkCredential newCredential);
    parameters:
    - id: newCredential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential> object that specifies the credentials to use."
  overload: System.DirectoryServices.Protocols.LdapConnection.Bind*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object handle is not valid."
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "The error code returned by LDAP does not map to a <xref href=&quot;System.DirectoryServices.Protocols.ResultCode&quot;></xref> enumeration error code."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Either the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*> property specifies more than one client certificate to send for authentication, or the <xref:System.DirectoryServices.Protocols.LdapConnection.AuthType*> property is Anonymous and one or more credentials are supplied."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Credential
  id: Credential
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Credential
  nameWithType: LdapConnection.Credential
  fullName: System.DirectoryServices.Protocols.LdapConnection.Credential
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Credential property contains the network credentials for the object."
  syntax:
    content: public override System.Net.NetworkCredential Credential { set; }
    return:
      type: System.Net.NetworkCredential
      description: "The network credentials for the object."
  overload: System.DirectoryServices.Protocols.LdapConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose
  id: Dispose
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Dispose()
  nameWithType: LdapConnection.Dispose()
  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Dispose method closes and releases the LDAP handle."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.Protocols.LdapConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: LdapConnection.Dispose(Boolean)
  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Dispose method closes the connection and optionally releases the LDAP handle."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handle is released when the connection is closed or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the connection is closed without releasing the handle."
  overload: System.DirectoryServices.Protocols.LdapConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)
  id: EndSendRequest(System.IAsyncResult)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: EndSendRequest(IAsyncResult)
  nameWithType: LdapConnection.EndSendRequest(IAsyncResult)
  fullName: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The EndSendRequest method completes an asynchronous request."
  syntax:
    content: public System.DirectoryServices.Protocols.DirectoryResponse EndSendRequest (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "An <xref:System.IAsyncResult> object that contains state data for this request."
    return:
      type: System.DirectoryServices.Protocols.DirectoryResponse
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object that contains the results of the request."
  overload: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Thrown if the object is already disposed.  The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code> does not match the <code>asyncResult</code> returned in the <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*> call."
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "The error code returned by LDAP does not map to a  <xref href=&quot;System.DirectoryServices.Protocols.ResultCode&quot;></xref> enumeration error code."
  - type: System.DirectoryServices.Protocols.DirectoryOperationException
    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException
    description: "Thrown if the server returned a <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object with an error."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Finalize
  id: Finalize
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Finalize()
  nameWithType: LdapConnection.Finalize()
  fullName: System.DirectoryServices.Protocols.LdapConnection.Finalize()
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Finalize method allows an <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> object to attempt to free resources and perform other cleanup operations before the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> object is reclaimed by garbage collection."
  syntax:
    content: ~LdapConnection ();
    parameters: []
  overload: System.DirectoryServices.Protocols.LdapConnection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)
  id: GetPartialResults(System.IAsyncResult)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: GetPartialResults(IAsyncResult)
  nameWithType: LdapConnection.GetPartialResults(IAsyncResult)
  fullName: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(IAsyncResult)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The GetPartialResults method retrieves partial results of an asynchronous operation."
  syntax:
    content: public System.DirectoryServices.Protocols.PartialResultsCollection GetPartialResults (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "An <xref:System.IAsyncResult> object that contains state data for this request."
    return:
      type: System.DirectoryServices.Protocols.PartialResultsCollection
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.PartialResultsCollection&quot;></xref> object that contains the partial results."
  overload: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object is already disposed. The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code> does not match the <code>asyncResult</code> returned in the <xref:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*> call."
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "The error code returned by LDAP does not map to a  <xref href=&quot;System.DirectoryServices.Protocols.ResultCode&quot;></xref> enumeration error code."
  - type: System.DirectoryServices.Protocols.DirectoryOperationException
    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException
    description: "Thrown if the server returned a <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object with an error."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: SendRequest(DirectoryRequest)
  nameWithType: LdapConnection.SendRequest(DirectoryRequest)
  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The SendRequest method sends a single <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;></xref> as an LDAP v3 operation."
  syntax:
    content: public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);
    parameters:
    - id: request
      type: System.DirectoryServices.Protocols.DirectoryRequest
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;></xref> object that contains the request."
    return:
      type: System.DirectoryServices.Protocols.DirectoryResponse
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object that contains the response from the server."
  overload: System.DirectoryServices.Protocols.LdapConnection.SendRequest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object is already disposed. The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Request is of type DsmlAuthRequest."
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "The error code returned by LDAP does not map to a <xref href=&quot;System.DirectoryServices.Protocols.ResultCode&quot;></xref> enumeration error code."
  - type: System.DirectoryServices.Protocols.DirectoryOperationException
    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException
    description: "Thrown if the server returned a <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object with an error."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)
  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: SendRequest(DirectoryRequest,TimeSpan)
  nameWithType: LdapConnection.SendRequest(DirectoryRequest,TimeSpan)
  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest,TimeSpan)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The SendRequest method sends a single <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;></xref> as an LDAP v3 operation."
  syntax:
    content: public System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request, TimeSpan requestTimeout);
    parameters:
    - id: request
      type: System.DirectoryServices.Protocols.DirectoryRequest
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;></xref> object that contains the request."
    - id: requestTimeout
      type: System.TimeSpan
      description: "The length of time, in seconds, until the request times out."
    return:
      type: System.DirectoryServices.Protocols.DirectoryResponse
      description: "A <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object that contains the response from the server."
  overload: System.DirectoryServices.Protocols.LdapConnection.SendRequest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The object is already disposed. The object handle is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Request is of type DsmlAuthRequest."
  - type: System.DirectoryServices.Protocols.LdapException
    commentId: T:System.DirectoryServices.Protocols.LdapException
    description: "The error code returned by LDAP does not map to a  the <xref href=&quot;System.DirectoryServices.Protocols.ResultCode&quot;></xref> enumeration error code."
  - type: System.DirectoryServices.Protocols.DirectoryOperationException
    commentId: T:System.DirectoryServices.Protocols.DirectoryOperationException
    description: "Thrown if the server returned a <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;></xref> object with an error."
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.SessionOptions
  id: SessionOptions
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: SessionOptions
  nameWithType: LdapConnection.SessionOptions
  fullName: System.DirectoryServices.Protocols.LdapConnection.SessionOptions
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The SessionOptions property contains an <xref href=&quot;System.DirectoryServices.Protocols.LdapSessionOptions&quot;></xref> object that specifies the session options."
  remarks: "If the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property on the <xref:System.DirectoryServices.Protocols.LdapConnection> object and <xref:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate%2A> property on the <xref:System.DirectoryServices.Protocols.LdapSessionOptions> object are both set, the certificate specified in the <xref:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates%2A> property is ignored."
  syntax:
    content: public System.DirectoryServices.Protocols.LdapSessionOptions SessionOptions { get; }
    return:
      type: System.DirectoryServices.Protocols.LdapSessionOptions
      description: "An <xref href=&quot;System.DirectoryServices.Protocols.LdapSessionOptions&quot;></xref> object that specifies the session options."
  overload: System.DirectoryServices.Protocols.LdapConnection.SessionOptions*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.LdapConnection.Timeout
  id: Timeout
  parent: System.DirectoryServices.Protocols.LdapConnection
  langs:
  - csharp
  name: Timeout
  nameWithType: LdapConnection.Timeout
  fullName: System.DirectoryServices.Protocols.LdapConnection.Timeout
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "The Timeout property contains the length of time, in seconds, before the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> times out."
  syntax:
    content: public override TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The length of time, in seconds, before the <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;></xref> times out."
  overload: System.DirectoryServices.Protocols.LdapConnection.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: System.DirectoryServices.Protocols.DirectoryConnection
- uid: System.DirectoryServices.Protocols.LdapException
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: LdapException
  nameWithType: LdapException
  fullName: System.DirectoryServices.Protocols.LdapException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.Protocols.DirectoryOperationException
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryOperationException
  nameWithType: DirectoryOperationException
  fullName: System.DirectoryServices.Protocols.DirectoryOperationException
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: LdapConnection(LdapDirectoryIdentifier)
  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier)
- uid: System.DirectoryServices.Protocols.LdapDirectoryIdentifier
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: LdapDirectoryIdentifier
  nameWithType: LdapDirectoryIdentifier
  fullName: System.DirectoryServices.Protocols.LdapDirectoryIdentifier
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: LdapConnection(String)
  nameWithType: LdapConnection.LdapConnection(String)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential)
  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)
  nameWithType: LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)
  fullName: System.DirectoryServices.Protocols.LdapConnection.LdapConnection(LdapDirectoryIdentifier,NetworkCredential,AuthType)
- uid: System.DirectoryServices.Protocols.AuthType
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: AuthType
  nameWithType: AuthType
  fullName: System.DirectoryServices.Protocols.AuthType
- uid: System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Abort(IAsyncResult)
  nameWithType: LdapConnection.Abort(IAsyncResult)
  fullName: System.DirectoryServices.Protocols.LdapConnection.Abort(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.DirectoryServices.Protocols.LdapConnection.AuthType
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: AuthType
  nameWithType: LdapConnection.AuthType
  fullName: System.DirectoryServices.Protocols.LdapConnection.AuthType
- uid: System.DirectoryServices.Protocols.LdapConnection.AutoBind
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: AutoBind
  nameWithType: LdapConnection.AutoBind
  fullName: System.DirectoryServices.Protocols.LdapConnection.AutoBind
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)
  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)
  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,PartialResultProcessing,AsyncCallback,Object)
- uid: System.DirectoryServices.Protocols.DirectoryRequest
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryRequest
  nameWithType: DirectoryRequest
  fullName: System.DirectoryServices.Protocols.DirectoryRequest
- uid: System.DirectoryServices.Protocols.PartialResultProcessing
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: PartialResultProcessing
  nameWithType: PartialResultProcessing
  fullName: System.DirectoryServices.Protocols.PartialResultProcessing
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)
  nameWithType: LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)
  fullName: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(DirectoryRequest,TimeSpan,PartialResultProcessing,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.Protocols.LdapConnection.Bind
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Bind()
  nameWithType: LdapConnection.Bind()
  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind()
- uid: System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Bind(NetworkCredential)
  nameWithType: LdapConnection.Bind(NetworkCredential)
  fullName: System.DirectoryServices.Protocols.LdapConnection.Bind(NetworkCredential)
- uid: System.DirectoryServices.Protocols.LdapConnection.Credential
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Credential
  nameWithType: LdapConnection.Credential
  fullName: System.DirectoryServices.Protocols.LdapConnection.Credential
- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Dispose()
  nameWithType: LdapConnection.Dispose()
  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose()
- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: LdapConnection.Dispose(Boolean)
  fullName: System.DirectoryServices.Protocols.LdapConnection.Dispose(Boolean)
- uid: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: EndSendRequest(IAsyncResult)
  nameWithType: LdapConnection.EndSendRequest(IAsyncResult)
  fullName: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(IAsyncResult)
- uid: System.DirectoryServices.Protocols.DirectoryResponse
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryResponse
  nameWithType: DirectoryResponse
  fullName: System.DirectoryServices.Protocols.DirectoryResponse
- uid: System.DirectoryServices.Protocols.LdapConnection.Finalize
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Finalize()
  nameWithType: LdapConnection.Finalize()
  fullName: System.DirectoryServices.Protocols.LdapConnection.Finalize()
- uid: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: GetPartialResults(IAsyncResult)
  nameWithType: LdapConnection.GetPartialResults(IAsyncResult)
  fullName: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(IAsyncResult)
- uid: System.DirectoryServices.Protocols.PartialResultsCollection
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: PartialResultsCollection
  nameWithType: PartialResultsCollection
  fullName: System.DirectoryServices.Protocols.PartialResultsCollection
- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: SendRequest(DirectoryRequest)
  nameWithType: LdapConnection.SendRequest(DirectoryRequest)
  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest)
- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: SendRequest(DirectoryRequest,TimeSpan)
  nameWithType: LdapConnection.SendRequest(DirectoryRequest,TimeSpan)
  fullName: System.DirectoryServices.Protocols.LdapConnection.SendRequest(DirectoryRequest,TimeSpan)
- uid: System.DirectoryServices.Protocols.LdapConnection.SessionOptions
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: SessionOptions
  nameWithType: LdapConnection.SessionOptions
  fullName: System.DirectoryServices.Protocols.LdapConnection.SessionOptions
- uid: System.DirectoryServices.Protocols.LdapSessionOptions
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: LdapSessionOptions
  nameWithType: LdapSessionOptions
  fullName: System.DirectoryServices.Protocols.LdapSessionOptions
- uid: System.DirectoryServices.Protocols.LdapConnection.Timeout
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Timeout
  nameWithType: LdapConnection.Timeout
  fullName: System.DirectoryServices.Protocols.LdapConnection.Timeout
- uid: System.DirectoryServices.Protocols.LdapConnection.#ctor*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: LdapConnection
  nameWithType: LdapConnection.LdapConnection
- uid: System.DirectoryServices.Protocols.LdapConnection.Abort*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Abort
  nameWithType: LdapConnection.Abort
- uid: System.DirectoryServices.Protocols.LdapConnection.AuthType*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: AuthType
  nameWithType: LdapConnection.AuthType
- uid: System.DirectoryServices.Protocols.LdapConnection.AutoBind*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: AutoBind
  nameWithType: LdapConnection.AutoBind
- uid: System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: BeginSendRequest
  nameWithType: LdapConnection.BeginSendRequest
- uid: System.DirectoryServices.Protocols.LdapConnection.Bind*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Bind
  nameWithType: LdapConnection.Bind
- uid: System.DirectoryServices.Protocols.LdapConnection.Credential*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Credential
  nameWithType: LdapConnection.Credential
- uid: System.DirectoryServices.Protocols.LdapConnection.Dispose*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Dispose
  nameWithType: LdapConnection.Dispose
- uid: System.DirectoryServices.Protocols.LdapConnection.EndSendRequest*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: EndSendRequest
  nameWithType: LdapConnection.EndSendRequest
- uid: System.DirectoryServices.Protocols.LdapConnection.Finalize*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Finalize
  nameWithType: LdapConnection.Finalize
- uid: System.DirectoryServices.Protocols.LdapConnection.GetPartialResults*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: GetPartialResults
  nameWithType: LdapConnection.GetPartialResults
- uid: System.DirectoryServices.Protocols.LdapConnection.SendRequest*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: SendRequest
  nameWithType: LdapConnection.SendRequest
- uid: System.DirectoryServices.Protocols.LdapConnection.SessionOptions*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: SessionOptions
  nameWithType: LdapConnection.SessionOptions
- uid: System.DirectoryServices.Protocols.LdapConnection.Timeout*
  parent: System.DirectoryServices.Protocols.LdapConnection
  isExternal: false
  name: Timeout
  nameWithType: LdapConnection.Timeout
