### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection
  id: SortedDictionary`2.KeyCollection
  children:
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.Count
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: SortedDictionary<TKey,TValue>+KeyCollection
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2))]

      public sealed class SortedDictionary<TKey,TValue>.KeyCollection : System.Collections.Generic.ICollection<TKey>, System.Collections.Generic.IEnumerable<TKey>, System.Collections.Generic.IReadOnlyCollection<TKey>, System.Collections.ICollection
    typeParameters:
    - id: TKey
      description: "To be added."
    - id: TValue
      description: "To be added."
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<TKey>
  - System.Collections.Generic.IEnumerable<TKey>
  - System.Collections.Generic.IReadOnlyCollection<TKey>
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.SortedDictionary{`0,`1})'
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: SortedDictionary(SortedDictionary<TKey,TValue>)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.SortedDictionary(SortedDictionary<TKey,TValue>)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.SortedDictionary(SortedDictionary<TKey,TValue>)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: public KeyCollection (System.Collections.Generic.SortedDictionary<TKey,TValue> dictionary);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.SortedDictionary{TKey,TValue}
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: CopyTo(TKey[],Int32)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.CopyTo(TKey[],Int32)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.CopyTo(TKey[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (TKey[] array, int index);
    parameters:
    - id: array
      type: TKey[]
      description: "To be added."
    - id: index
      type: System.Int32
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Count
  id: Count
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: Count
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.Count
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.GetEnumerator()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.SortedDictionary<TKey,TValue>.KeyCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)
  id: System#Collections#Generic#ICollection{TKey}#Add(`0)
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(TKey)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<TKey>.Add (TKey item);
    parameters:
    - id: item
      type: TKey
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear
  id: System#Collections#Generic#ICollection{TKey}#Clear
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<TKey>.Clear ();
    parameters: []
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)
  id: System#Collections#Generic#ICollection{TKey}#Contains(`0)
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(TKey)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection<TKey>.Contains (TKey item);
    parameters:
    - id: item
      type: TKey
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly
  id: System#Collections#Generic#ICollection{TKey}#IsReadOnly
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.Generic.ICollection<TKey>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)
  id: System#Collections#Generic#ICollection{TKey}#Remove(`0)
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(TKey)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection<TKey>.Remove (TKey item);
    parameters:
    - id: item
      type: TKey
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{TKey}#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.Generic.IEnumerator<TKey> IEnumerable<TKey>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TKey}
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable<TKey>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "To be added."
    - id: index
      type: System.Int32
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: SortedDictionary(SortedDictionary<TKey,TValue>)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.SortedDictionary(SortedDictionary<TKey,TValue>)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.SortedDictionary(SortedDictionary<TKey,TValue>)
- uid: System.Collections.Generic.SortedDictionary{TKey,TValue}
  parent: System.Collections.Generic
  isExternal: true
  name: SortedDictionary<TKey,TValue>
  nameWithType: SortedDictionary<TKey,TValue>
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>
  spec.csharp:
  - uid: System.Collections.Generic.SortedDictionary`2
    name: SortedDictionary
    nameWithType: SortedDictionary
    fullName: SortedDictionary<TKey,TValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: CopyTo(TKey[],Int32)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.CopyTo(TKey[],Int32)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.CopyTo(TKey[],Int32)
- uid: TKey[]
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey[]
  spec.csharp:
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Count
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: Count
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.Count
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.Count
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.GetEnumerator()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.GetEnumerator()
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  name: SortedDictionary<TKey,TValue>+KeyCollection+Enumerator
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection+Enumerator
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection+Enumerator
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(TKey)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection()
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(TKey)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection(TKey)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection(TKey)
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{TKey}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<TKey>
  nameWithType: IEnumerator<TKey>
  fullName: System.Collections.Generic.IEnumerator<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<TKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: SortedDictionary<TKey,TValue>+KeyCollection
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.SortedDictionary<TKey,TValue>+KeyCollection
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: CopyTo
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.CopyTo
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.Count*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: Count
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.Count
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.GetEnumerator
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Add*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<TKey>.Add
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection<TKey>.Add
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Clear*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<TKey>.Clear
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection<TKey>.Clear
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Contains*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<TKey>.Contains
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection<TKey>.Contains
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#IsReadOnly*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<TKey>.IsReadOnly
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection<TKey>.IsReadOnly
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection<TKey>#Remove*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<TKey>.Remove
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.ICollection<TKey>.Remove
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable<TKey>#GetEnumerator*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<TKey>.GetEnumerator
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.Generic.IEnumerable<TKey>.GetEnumerator
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.CopyTo
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Generic.SortedDictionary`2.KeyCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SortedDictionary<TKey,TValue>+KeyCollection.System.Collections.IEnumerable.GetEnumerator
