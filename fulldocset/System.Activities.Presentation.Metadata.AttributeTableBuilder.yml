### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder
  id: AttributeTableBuilder
  children:
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  - System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  langs:
  - csharp
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder
  type: Class
  summary: "Cria e preenche um <xref href=&quot;System.Activities.Presentation.Metadata.AttributeTable&quot;> </xref> que é utilizado pelo <xref href=&quot;System.Activities.Presentation.Metadata.MetadataStore&quot;> </xref> para fornecer a pesquisa de atributos e o registo."
  remarks: "Utilize <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, e <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A>para preencher o construtor de, em seguida, chame <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>adquirir um <xref:System.Activities.Presentation.Metadata.AttributeTable>que contém a coleção de atributos pretendida.</xref:System.Activities.Presentation.Metadata.AttributeTable> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> </xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public class AttributeTableBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AttributeTableBuilder()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Cria uma nova instância do <xref href=&quot;System.Activities.Presentation.Metadata.AttributeTableBuilder&quot;> </xref> classe."
  syntax:
    content: public AttributeTableBuilder ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  id: AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCallback(Type,AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Especifica uma chamada de retorno que irão ser invocada quando necessitar de metadados para o tipo especificado."
  remarks: "Na primeira vez um <xref:System.Activities.Presentation.Metadata.AttributeTable>devolvido pelo <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>está a ser consultado para atributos de `type`, `callback` denomina-se de fornecer as informações de metadados.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> </xref:System.Activities.Presentation.Metadata.AttributeTable>"
  syntax:
    content: public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo para o qual a chamada de retorno fornecerá metadados."
    - id: callback
      type: System.Activities.Presentation.Metadata.AttributeCallback
      description: "O método de chamada de retorno."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Adiciona o conteúdo dos atributos fornecidos a este construtor."
  remarks: "Se um conflitos de atributo com outro atributo já incluído no construtor, o atributo último adicionado substitui atributos anteriores.       Ao criar uma tabela de atributos de grandes dimensões, utilizar <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>diferir o trabalho de criação de atributos até que forem necessárias.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de atributos de nível de classe para adicionar."
    - id: attributes
      type: System.Attribute[]
      description: "Os atributos que são adicionados para o construtor."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Adiciona o conteúdo dos atributos fornecidos a este construtor."
  remarks: "Se um conflitos de atributo com outro atributo já incluído no construtor, o atributo último adicionado substitui atributos anteriores.       Ao criar uma tabela de atributos de grandes dimensões, utilizar <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>diferir o trabalho de criação de atributos até que forem necessárias.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "O tipo que contém o membro identificado por `descriptor`."
    - id: descriptor
      type: System.ComponentModel.MemberDescriptor
      description: "As informações de evento ou de propriedade que são adicionados os atributos a."
    - id: attributes
      type: System.Attribute[]
      description: "Os atributos que são adicionados para o construtor."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,MemberInfo,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Adiciona o conteúdo dos atributos fornecidos a este construtor."
  remarks: "Se um conflitos de atributo com outro atributo já incluído no construtor, o atributo último adicionado substitui atributos anteriores.       Ao criar uma tabela de atributos de grandes dimensões, utilizar <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>diferir o trabalho de criação de atributos até que forem necessárias.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "O tipo que contém o membro identificado por `member`."
    - id: member
      type: System.Reflection.MemberInfo
      description: "As informações de evento ou de propriedade que são adicionados os atributos a."
    - id: attributes
      type: System.Attribute[]
      description: "Os atributos que são adicionados para o construtor."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>member</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,String,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Adiciona o conteúdo dos atributos fornecidos a este construtor."
  remarks: "Se um conflitos de atributo com outro atributo já incluído no construtor, o atributo último adicionado substitui atributos anteriores.       Ao criar uma tabela de atributos de grandes dimensões, utilizar <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>diferir o trabalho de criação de atributos até que forem necessárias.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, string memberName, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "O tipo que contém o membro identificado por `memberName`."
    - id: memberName
      type: System.String
      description: "O nome das informações de evento ou de propriedade que são adicionados os atributos a."
    - id: attributes
      type: System.Attribute[]
      description: "Os atributos que são adicionados para o construtor."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  id: AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddCustomAttributes(Type,DependencyProperty,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Adiciona o conteúdo dos atributos fornecidos a este construtor."
  remarks: "Se um conflitos de atributo com outro atributo já incluído no construtor, o atributo último adicionado substitui atributos anteriores.       Ao criar uma tabela de atributos de grandes dimensões, utilizar <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>diferir o trabalho de criação de atributos até que forem necessárias.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>"
  syntax:
    content: public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, Attribute[] attributes);
    parameters:
    - id: ownerType
      type: System.Type
      description: "O tipo que contém a dependência identificada por `dp`."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Uma propriedade de dependência para adicionar atributos."
    - id: attributes
      type: System.Attribute[]
      description: "Os atributos que são adicionados para o construtor."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ownerType</code>, <code>dp</code> or <code>attributes</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  id: AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(AttributeTable)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Adiciona o conteúdo da tabela atributo fornecido a este construtor."
  remarks: "Se um conflitos de atributo com outro atributo já incluído no construtor, o atributo último adicionado substitui atributos anteriores."
  syntax:
    content: public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);
    parameters:
    - id: table
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: "A tabela de atributo de origem."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>table</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  id: CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Cria uma tabela do atributo que contém todas as definições de atributo fornecidas através de <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*>chamadas.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*>"
  remarks: "A tabela é um instantâneo do estado atual do construtor de atributo; atributos adicionados pelo subsequentes <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>chamadas não estão incluídas na tabela.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>       Se os métodos de chamada de retorno foram utilizados para declarar atributos, os métodos não serão avaliados durante CreateTable. Em vez disso, a tabela irá conter essas chamadas de retorno e será avaliada-os conforme necessário."
  syntax:
    content: public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();
    parameters: []
    return:
      type: System.Activities.Presentation.Metadata.AttributeTable
      description: "Um <xref href=&quot;System.Activities.Presentation.Metadata.AttributeTable&quot;> </xref> que podem ser transmitidos para o arquivo de metadados."
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  id: ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  langs:
  - csharp
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Metadata
  summary: "Verifica se a tabela de atributo que está a ser criada contém informações de atributo válido."
  remarks: "Algumas substituições de <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>não é possível validar a que os valores transmitidos para os respetivos parâmetros representam membros válidos em classes.</xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> ValidateTable verifica se a todas as informações de atributo personalizado corresponde aos membros reais. Este método pode demorar muito tempo a concluir e não é recomendado, a menos que a validação é necessária explicitamente."
  syntax:
    content: public void ValidateTable ();
    parameters: []
  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  exceptions:
  - type: System.Activities.Presentation.Metadata.AttributeTableValidationException
    commentId: T:System.Activities.Presentation.Metadata.AttributeTableValidationException
    description: "o estado da tabela é inválido."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Activities.Presentation.Metadata.AttributeTableValidationException
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTableValidationException
  nameWithType: AttributeTableValidationException
  fullName: System.Activities.Presentation.Metadata.AttributeTableValidationException
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder()
  nameWithType: AttributeTableBuilder.AttributeTableBuilder()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AttributeTableBuilder()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback(Type,AttributeCallback)
  nameWithType: AttributeTableBuilder.AddCallback(Type,AttributeCallback)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(Type,AttributeCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Metadata.AttributeCallback
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeCallback
  nameWithType: AttributeCallback
  fullName: System.Activities.Presentation.Metadata.AttributeCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberDescriptor,Attribute[])
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,MemberInfo,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,MemberInfo,Attribute[])
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,String,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes(Type,DependencyProperty,Attribute[])
  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(Type,DependencyProperty,Attribute[])
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable(AttributeTable)
  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(AttributeTable)
- uid: System.Activities.Presentation.Metadata.AttributeTable
  parent: System.Activities.Presentation.Metadata
  isExternal: false
  name: AttributeTable
  nameWithType: AttributeTable
  fullName: System.Activities.Presentation.Metadata.AttributeTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable()
  nameWithType: AttributeTableBuilder.CreateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable()
  nameWithType: AttributeTableBuilder.ValidateTable()
  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable()
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AttributeTableBuilder
  nameWithType: AttributeTableBuilder.AttributeTableBuilder
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCallback
  nameWithType: AttributeTableBuilder.AddCallback
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddCustomAttributes
  nameWithType: AttributeTableBuilder.AddCustomAttributes
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: AddTable
  nameWithType: AttributeTableBuilder.AddTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: CreateTable
  nameWithType: AttributeTableBuilder.CreateTable
- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*
  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder
  isExternal: false
  name: ValidateTable
  nameWithType: AttributeTableBuilder.ValidateTable
