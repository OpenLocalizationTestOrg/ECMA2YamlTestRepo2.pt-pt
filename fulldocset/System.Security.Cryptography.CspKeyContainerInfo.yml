### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CspKeyContainerInfo
  id: CspKeyContainerInfo
  children:
  - System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.CspKeyContainerInfo.Accessible
  - System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  - System.Security.Cryptography.CspKeyContainerInfo.Exportable
  - System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  - System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  - System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  - System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  - System.Security.Cryptography.CspKeyContainerInfo.Protected
  - System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  - System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  - System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  - System.Security.Cryptography.CspKeyContainerInfo.Removable
  - System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  langs:
  - csharp
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
  type: Class
  summary: "Fornece informações adicionais sobre um par de chaves criptográficas. Esta classe não pode ser herdada."
  remarks: "Utilize esta classe para obter informações adicionais sobre um par de chaves, tais como o nome do contentor de chaves ou o número de chave.       Nos casos em que uma chave aleatória é gerada pelo <xref:System.Security.Cryptography.RSACryptoServiceProvider>ou <xref:System.Security.Cryptography.DSACryptoServiceProvider>, um contentor de chaves não será criado até chamar um método que utiliza a chave.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider>  Algumas propriedades da classe CspKeyContainerInfo irão gerar um <xref:System.Security.Cryptography.CryptographicException>se não tiver sido criado um contentor de chaves.</xref:System.Security.Cryptography.CryptographicException>"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/t-system.security.crypto_30_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/t-system.security.crypto_30_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/t-system.security.crypto_30_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CspKeyContainerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: CspKeyContainerInfo(CspParameters)
  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> classe utilizando os parâmetros especificados."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/fb266140-c04f-42c1-9655-_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/fb266140-c04f-42c1-9655-_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/fb266140-c04f-42c1-9655-_1.cs)]"
  syntax:
    content: public CspKeyContainerInfo (System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "A <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> objeto que fornece informações sobre a chave."
  overload: System.Security.Cryptography.CspKeyContainerInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible
  id: Accessible
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Accessible
  nameWithType: CspKeyContainerInfo.Accessible
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Accessible
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se uma chave de um contentor de chaves é acessível."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_38_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_38_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_38_1.cs)]"
  syntax:
    content: public bool Accessible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave é acessível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.Accessible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O tipo de chave não é suportado."
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  id: CryptoKeySecurity
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: CryptoKeySecurity
  nameWithType: CspKeyContainerInfo.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> que representa direitos de acesso e auditoria regras para um contentor de objeto."
  remarks: "Utilize o <xref:System.Security.Cryptography.CspKeyContainerInfo>propriedade ao obter o <xref:System.Security.AccessControl.CryptoKeySecurity>apresenta uma lista de objetos que gere a criação de controlo de acesso discricionário (DACL) e (SACLS) das listas de controlo de acesso do sistema para um contentor.</xref:System.Security.AccessControl.CryptoKeySecurity> </xref:System.Security.Cryptography.CspKeyContainerInfo>"
  syntax:
    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; }
    return:
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "A <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> que representa direitos de acesso e auditoria regras para um contentor de objeto."
  overload: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O tipo de chave não é suportado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível localizar o fornecedor de serviços de criptografia.       - ou - não foi encontrado o contentor de chaves."
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable
  id: Exportable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Exportable
  nameWithType: CspKeyContainerInfo.Exportable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Exportable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se uma chave pode ser exportada a partir de um contentor de chave."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_104_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_104_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_104_1.cs)]"
  syntax:
    content: public bool Exportable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave pode ser exportada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.Exportable*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O tipo de chave não é suportado."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não é possível localizar o fornecedor de serviços de criptografia.       - ou - não foi encontrado o contentor de chaves."
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  id: HardwareDevice
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: HardwareDevice
  nameWithType: CspKeyContainerInfo.HardwareDevice
  fullName: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se uma chave é uma chave de hardware."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_90_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_90_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_90_1.cs)]"
  syntax:
    content: public bool HardwareDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave é uma chave de hardware; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não é possível localizar o fornecedor de serviços de criptografia."
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: CspKeyContainerInfo.KeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome de contentor de chaves."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_56_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_56_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_56_1.cs)]"
  syntax:
    content: public string KeyContainerName { get; }
    return:
      type: System.String
      description: "O nome do contentor de chaves."
  overload: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  id: KeyNumber
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: KeyNumber
  nameWithType: CspKeyContainerInfo.KeyNumber
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que descreve se foi criada uma chave assimétrica como uma chave de assinatura ou uma chave de troca."
  remarks: "O valor da propriedade KeyNumber é derivado do <xref:System.Security.Cryptography.CspParameters.KeyNumber>campo a <xref:System.Security.Cryptography.CspParameters>objeto que foi utilizado para inicializar o <xref:System.Security.Cryptography.CspKeyContainerInfo>objeto.</xref:System.Security.Cryptography.CspKeyContainerInfo> </xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspParameters.KeyNumber>       Uma chave de troca é um par de chaves assimétricas utilizado para encriptar as chaves de sessão para que possam ser em segurança armazenadas e trocados com outros utilizadores.  O <xref:System.Security.Cryptography.KeyNumber>valor Especifica uma chave de troca.</xref:System.Security.Cryptography.KeyNumber>  Este valor corresponde do `AT_KEYEXCHANGE` valor utilizado de não gerido Microsoft criptográficos API (CAPI).       Uma chave de assinatura é um par de chaves assimétricas utilizado para autenticação de mensagens (assinadas digitalmente) ou os ficheiros.  O <xref:System.Security.Cryptography.KeyNumber>valor Especifica uma chave de assinatura.</xref:System.Security.Cryptography.KeyNumber>  Este valor corresponde do `AT_SIGNATURE` valor utilizado na CAPI."
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_23_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_23_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_23_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.KeyNumber KeyNumber { get; }
    return:
      type: System.Security.Cryptography.KeyNumber
      description: "Um do <xref href=&quot;System.Security.Cryptography.KeyNumber&quot;> </xref> valores que descreve se foi criada uma chave assimétrica como uma chave de assinatura ou uma chave de troca."
  overload: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  id: MachineKeyStore
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: MachineKeyStore
  nameWithType: CspKeyContainerInfo.MachineKeyStore
  fullName: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se uma chave é de uma chave de computador definida."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_45_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_45_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_45_1.cs)]"
  syntax:
    content: public bool MachineKeyStore { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave do conjunto de chaves de máquina; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected
  id: Protected
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Protected
  nameWithType: CspKeyContainerInfo.Protected
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Protected
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se um par de chaves está protegido."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_108_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_108_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_108_1.cs)]"
  syntax:
    content: public bool Protected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o par de chaves está protegido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.Protected*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O tipo de chave não é suportado."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não é possível localizar o fornecedor de serviços de criptografia.       - ou - não foi encontrado o contentor de chaves."
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  id: ProviderName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: ProviderName
  nameWithType: CspKeyContainerInfo.ProviderName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém o nome do fornecedor de uma chave."
  remarks: "Esta propriedade especifica o fornecedor de serviços de criptografia que criou a chave."
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_34_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_34_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_34_1.cs)]"
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: "O nome do fornecedor."
  overload: System.Security.Cryptography.CspKeyContainerInfo.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  id: ProviderType
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: ProviderType
  nameWithType: CspKeyContainerInfo.ProviderType
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém o tipo de fornecedor de uma chave."
  remarks: "Os valores válidos são determinados pelo fornecedor de serviços de criptografia utilizado para criar a chave. Fornecedores de serviços de criptografia, geralmente, são organizados em grupos ou famílias, cada um dos quais tem o seu próprio conjunto de formatos de dados e processos. Duas famílias que utilizam o mesmo algoritmo, tais como a cifra bloco RC2, utilizam, frequentemente, esquemas de preenchimento diferentes, comprimentos de chave diferentes e modos de predefinido diferente."
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_81_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_81_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_81_1.cs)]"
  syntax:
    content: public int ProviderType { get; }
    return:
      type: System.Int32
      description: "O tipo de fornecedor. A predefinição é 1."
  overload: System.Security.Cryptography.CspKeyContainerInfo.ProviderType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  id: RandomlyGenerated
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: RandomlyGenerated
  nameWithType: CspKeyContainerInfo.RandomlyGenerated
  fullName: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se um contentor de chaves aleatoriamente foi gerado por uma classe de criptografia gerido."
  remarks: "Normalmente, quando é criado um contentor de chaves gerado aleatoriamente, o contentor de chaves com o nome &quot;CLR {`guid value`}.&quot;"
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_29_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_29_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_29_1.cs)]"
  syntax:
    content: public bool RandomlyGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o contentor de chaves foi gerado aleatoriamente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable
  id: Removable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: Removable
  nameWithType: CspKeyContainerInfo.Removable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Removable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um valor que indica se uma chave pode ser removida de um contentor de chaves."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_5_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_5_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_5_1.cs)]"
  syntax:
    content: public bool Removable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave for amovível; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CspKeyContainerInfo.Removable*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "O fornecedor de serviços de criptografia (CSP) não foi encontrado."
  platform:
  - net462
- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  id: UniqueKeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  langs:
  - csharp
  name: UniqueKeyContainerName
  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém um nome de contentor de chaves exclusivo."
  remarks: ''
  example:
  - "The following code example creates a key container and retrieves information about that container.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_88_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_88_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_88_1.cs)]"
  syntax:
    content: public string UniqueKeyContainerName { get; }
    return:
      type: System.String
      description: "O nome do contentor de chave exclusivo."
  overload: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O tipo de chave não é suportado."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não é possível localizar o fornecedor de serviços de criptografia.       - ou - não foi encontrado o contentor de chaves."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CspKeyContainerInfo(CspParameters)
  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CspKeyContainerInfo(CspParameters)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Accessible
  nameWithType: CspKeyContainerInfo.Accessible
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Accessible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspKeyContainerInfo.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity
- uid: System.Security.AccessControl.CryptoKeySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CryptoKeySecurity
  fullName: System.Security.AccessControl.CryptoKeySecurity
- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Exportable
  nameWithType: CspKeyContainerInfo.Exportable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Exportable
- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: HardwareDevice
  nameWithType: CspKeyContainerInfo.HardwareDevice
  fullName: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyContainerName
  nameWithType: CspKeyContainerInfo.KeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyNumber
  nameWithType: CspKeyContainerInfo.KeyNumber
  fullName: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber
- uid: System.Security.Cryptography.KeyNumber
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyNumber
  nameWithType: KeyNumber
  fullName: System.Security.Cryptography.KeyNumber
- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: MachineKeyStore
  nameWithType: CspKeyContainerInfo.MachineKeyStore
  fullName: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore
- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Protected
  nameWithType: CspKeyContainerInfo.Protected
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Protected
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderName
  nameWithType: CspKeyContainerInfo.ProviderName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderName
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderType
  nameWithType: CspKeyContainerInfo.ProviderType
  fullName: System.Security.Cryptography.CspKeyContainerInfo.ProviderType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: RandomlyGenerated
  nameWithType: CspKeyContainerInfo.RandomlyGenerated
  fullName: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated
- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Removable
  nameWithType: CspKeyContainerInfo.Removable
  fullName: System.Security.Cryptography.CspKeyContainerInfo.Removable
- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: UniqueKeyContainerName
  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName
  fullName: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName
- uid: System.Security.Cryptography.CspKeyContainerInfo.#ctor*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo.CspKeyContainerInfo
- uid: System.Security.Cryptography.CspKeyContainerInfo.Accessible*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Accessible
  nameWithType: CspKeyContainerInfo.Accessible
- uid: System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspKeyContainerInfo.CryptoKeySecurity
- uid: System.Security.Cryptography.CspKeyContainerInfo.Exportable*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Exportable
  nameWithType: CspKeyContainerInfo.Exportable
- uid: System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: HardwareDevice
  nameWithType: CspKeyContainerInfo.HardwareDevice
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyContainerName
  nameWithType: CspKeyContainerInfo.KeyContainerName
- uid: System.Security.Cryptography.CspKeyContainerInfo.KeyNumber*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: KeyNumber
  nameWithType: CspKeyContainerInfo.KeyNumber
- uid: System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: MachineKeyStore
  nameWithType: CspKeyContainerInfo.MachineKeyStore
- uid: System.Security.Cryptography.CspKeyContainerInfo.Protected*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Protected
  nameWithType: CspKeyContainerInfo.Protected
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderName*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderName
  nameWithType: CspKeyContainerInfo.ProviderName
- uid: System.Security.Cryptography.CspKeyContainerInfo.ProviderType*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: ProviderType
  nameWithType: CspKeyContainerInfo.ProviderType
- uid: System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: RandomlyGenerated
  nameWithType: CspKeyContainerInfo.RandomlyGenerated
- uid: System.Security.Cryptography.CspKeyContainerInfo.Removable*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: Removable
  nameWithType: CspKeyContainerInfo.Removable
- uid: System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName*
  parent: System.Security.Cryptography.CspKeyContainerInfo
  isExternal: false
  name: UniqueKeyContainerName
  nameWithType: CspKeyContainerInfo.UniqueKeyContainerName
