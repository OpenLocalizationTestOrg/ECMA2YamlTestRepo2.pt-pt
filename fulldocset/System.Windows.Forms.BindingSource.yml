### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.BindingSource
  id: BindingSource
  children:
  - System.Windows.Forms.BindingSource.#ctor
  - System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)
  - System.Windows.Forms.BindingSource.Add(System.Object)
  - System.Windows.Forms.BindingSource.AddingNew
  - System.Windows.Forms.BindingSource.AddNew
  - System.Windows.Forms.BindingSource.AllowEdit
  - System.Windows.Forms.BindingSource.AllowNew
  - System.Windows.Forms.BindingSource.AllowRemove
  - System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  - System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.Windows.Forms.BindingSource.BindingComplete
  - System.Windows.Forms.BindingSource.CancelEdit
  - System.Windows.Forms.BindingSource.Clear
  - System.Windows.Forms.BindingSource.Contains(System.Object)
  - System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.BindingSource.Count
  - System.Windows.Forms.BindingSource.CurrencyManager
  - System.Windows.Forms.BindingSource.Current
  - System.Windows.Forms.BindingSource.CurrentChanged
  - System.Windows.Forms.BindingSource.CurrentItemChanged
  - System.Windows.Forms.BindingSource.DataError
  - System.Windows.Forms.BindingSource.DataMember
  - System.Windows.Forms.BindingSource.DataMemberChanged
  - System.Windows.Forms.BindingSource.DataSource
  - System.Windows.Forms.BindingSource.DataSourceChanged
  - System.Windows.Forms.BindingSource.Dispose(System.Boolean)
  - System.Windows.Forms.BindingSource.EndEdit
  - System.Windows.Forms.BindingSource.Filter
  - System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.Windows.Forms.BindingSource.Find(System.String,System.Object)
  - System.Windows.Forms.BindingSource.GetEnumerator
  - System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)
  - System.Windows.Forms.BindingSource.IndexOf(System.Object)
  - System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)
  - System.Windows.Forms.BindingSource.IsBindingSuspended
  - System.Windows.Forms.BindingSource.IsFixedSize
  - System.Windows.Forms.BindingSource.IsReadOnly
  - System.Windows.Forms.BindingSource.IsSorted
  - System.Windows.Forms.BindingSource.IsSynchronized
  - System.Windows.Forms.BindingSource.Item(System.Int32)
  - System.Windows.Forms.BindingSource.List
  - System.Windows.Forms.BindingSource.ListChanged
  - System.Windows.Forms.BindingSource.MoveFirst
  - System.Windows.Forms.BindingSource.MoveLast
  - System.Windows.Forms.BindingSource.MoveNext
  - System.Windows.Forms.BindingSource.MovePrevious
  - System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)
  - System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  - System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)
  - System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)
  - System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)
  - System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)
  - System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)
  - System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  - System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)
  - System.Windows.Forms.BindingSource.Position
  - System.Windows.Forms.BindingSource.PositionChanged
  - System.Windows.Forms.BindingSource.RaiseListChangedEvents
  - System.Windows.Forms.BindingSource.Remove(System.Object)
  - System.Windows.Forms.BindingSource.RemoveAt(System.Int32)
  - System.Windows.Forms.BindingSource.RemoveCurrent
  - System.Windows.Forms.BindingSource.RemoveFilter
  - System.Windows.Forms.BindingSource.RemoveSort
  - System.Windows.Forms.BindingSource.ResetAllowNew
  - System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)
  - System.Windows.Forms.BindingSource.ResetCurrentItem
  - System.Windows.Forms.BindingSource.ResetItem(System.Int32)
  - System.Windows.Forms.BindingSource.ResumeBinding
  - System.Windows.Forms.BindingSource.Sort
  - System.Windows.Forms.BindingSource.SortDescriptions
  - System.Windows.Forms.BindingSource.SortDirection
  - System.Windows.Forms.BindingSource.SortProperty
  - System.Windows.Forms.BindingSource.SupportsAdvancedSorting
  - System.Windows.Forms.BindingSource.SupportsChangeNotification
  - System.Windows.Forms.BindingSource.SupportsFiltering
  - System.Windows.Forms.BindingSource.SupportsSearching
  - System.Windows.Forms.BindingSource.SupportsSorting
  - System.Windows.Forms.BindingSource.SuspendBinding
  - System.Windows.Forms.BindingSource.SyncRoot
  - System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)
  - System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)
  - System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized
  langs:
  - csharp
  name: BindingSource
  nameWithType: BindingSource
  fullName: System.Windows.Forms.BindingSource
  type: Class
  summary: "Encapsulates the data source for a form."
  remarks: "The BindingSource component serves many purposes. First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources. This is accomplished by attaching the BindingSource component to your data source using the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property. For complex binding scenarios you can optionally set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a specific column or list in the data source. You then bind controls to the BindingSource. All further interaction with the data is accomplished with calls to the BindingSource component. For examples on how the BindingSource can simplify the binding process, see [How to: Bind Windows Forms Controls to DBNull Database Values](~/add/includes/ajax-current-ext-md.md) and [How to: Handle Errors and Exceptions that Occur with Databinding](~/add/includes/ajax-current-ext-md.md). Navigation and updating of the data source is accomplished through methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveLast%2A>, and <xref:System.Windows.Forms.BindingSource.Remove%2A>. Operations such as sorting and filtering are handled through the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties. For more information on using sorting and filtering with the BindingSource, see [How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component](~/add/includes/ajax-current-ext-md.md).       In addition, the BindingSource component can act as a strongly typed data source. Typically the type of the underlying data source is fixed through one of the following mechanisms:      -   Use the <xref:System.Windows.Forms.BindingSource.Add%2A> method to add an item to the BindingSource component.      -   Set the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property to a list, single object, or type.       Both of these mechanisms create a strongly-typed list. For more information on how to use the BindingSource to bind to a type, see [How to: Bind a Windows Forms Control to a Type](~/add/includes/ajax-current-ext-md.md). You can also use the BindingSource to bind your controls to a factory object. For more information on how to do this, see [How to: Bind a Windows Forms Control to a Factory Object](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Because a BindingSource handles both simple and complex data sources, terminology is problematic. Within this class documentation, the term *list* refers to a data collection within the hosted data source, and *item* denotes a single element. When discussing functionality associated with complex data sources, the equivalent terms *table* and *row* are used.       BindingSource provides members for accessing the underlying data. The current item can be retrieved through the <xref:System.Windows.Forms.BindingSource.Current%2A> property, and the entire list can be retrieved through the <xref:System.Windows.Forms.BindingSource.List%2A> property. Editing operations are supported on the current item through <xref:System.Windows.Forms.BindingSource.Current%2A> and the <xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A>, <xref:System.Windows.Forms.BindingSource.EndEdit%2A>, <xref:System.Windows.Forms.BindingSource.CancelEdit%2A> and <xref:System.Windows.Forms.BindingSource.Add%2A> and <xref:System.Windows.Forms.BindingSource.AddNew%2A> methods. Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <xref:System.Windows.Forms.BindingSource.CurrentItemChanged> and <xref:System.Windows.Forms.BindingSource.DataSourceChanged>, that allow for customization.       Data sources that are bound to a BindingSource component can also be navigated and managed with the <xref:System.Windows.Forms.BindingNavigator> class, which provides a VCR-like user interface (UI) for navigating items within a list. Although <xref:System.Windows.Forms.BindingNavigator> can be bound to any data source, it was designed to integrate with a BindingSource component through its <xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=fullName> property.       The default property for the BindingSource class is <xref:System.Windows.Forms.BindingSource.DataSource%2A>. The default event is <xref:System.Windows.Forms.BindingSource.CurrentChanged>.      > [!CAUTION] >  Many of the members of the BindingSource class operate on the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and simply refer their operation to the underlying list. Therefore, when the BindingSource is bound to a custom implementation of <xref:System.Collections.IList>, the exact behavior of these members may differ from the behavior described in the class documentation. For example, the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method calls <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName>. The BindingSource documentation describes the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method with the understanding that the <xref:System.Collections.IList.RemoveAt%2A> method for the underlying <xref:System.Collections.IList> is correctly implemented."
  example:
  - "The following code example demonstrates a <xref:System.Windows.Forms.ListBox> bound to a BindingSource. The BindingSource is bound to a <xref:System.ComponentModel.BindingList%601> that contains a list of fonts.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/add/codesnippet/csharp/t-system.windows.forms.b_10_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#0](~/add/codesnippet/visualbasic/t-system.windows.forms.b_10_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")]

      [System.ComponentModel.DefaultEvent("CurrentChanged")]

      [System.ComponentModel.DefaultProperty("DataSource")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.BindingSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class BindingSource : System.ComponentModel.Component, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ICancelAddNew, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList, System.Windows.Forms.ICurrencyManagerProvider
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Collections.IList
  - System.ComponentModel.IBindingListView
  - System.ComponentModel.ICancelAddNew
  - System.ComponentModel.ISupportInitializeNotification
  - System.ComponentModel.ITypedList
  - System.Windows.Forms.ICurrencyManagerProvider
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: BindingSource()
  nameWithType: BindingSource.BindingSource()
  fullName: System.Windows.Forms.BindingSource.BindingSource()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> class to the default property values."
  remarks: "The following table shows the default <xref:System.Windows.Forms.BindingSource> property values initialized by this constructor.      |Property|Default value|   |--------------|-------------------|   |<xref:System.Windows.Forms.BindingSource.DataSource%2A>|`null`|   |<xref:System.Windows.Forms.BindingSource.DataMember%2A>|<xref:System.String.Empty>|   |<xref:System.Windows.Forms.BindingSource.Sort%2A>|`null`|   |<xref:System.Windows.Forms.BindingSource.Filter%2A>|`null`|   |<xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A>|`true`|"
  syntax:
    content: public BindingSource ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: BindingSource(IContainer)
  nameWithType: BindingSource.BindingSource(IContainer)
  fullName: System.Windows.Forms.BindingSource.BindingSource(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> class and adds the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> to the specified container."
  remarks: "This constructor calls the default constructor, and then adds the current <xref:System.Windows.Forms.BindingSource> to the specified container. It is not typically used by the solutions programmer, but instead by authors of design-time environments."
  syntax:
    content: public BindingSource (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "The <xref href=&quot;System.ComponentModel.IContainer&quot;></xref> to add the current <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> to."
  overload: System.Windows.Forms.BindingSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)
  id: '#ctor(System.Object,System.String)'
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: BindingSource(Object,String)
  nameWithType: BindingSource.BindingSource(Object,String)
  fullName: System.Windows.Forms.BindingSource.BindingSource(Object,String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> class with the specified data source and data member."
  syntax:
    content: public BindingSource (object dataSource, string dataMember);
    parameters:
    - id: dataSource
      type: System.Object
      description: "The data source for the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
    - id: dataMember
      type: System.String
      description: "The specific column or list name within the data source to bind to."
  overload: System.Windows.Forms.BindingSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Add(System.Object)
  id: Add(System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Add(Object)
  nameWithType: BindingSource.Add(Object)
  fullName: System.Windows.Forms.BindingSource.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds an existing item to the internal list."
  remarks: "The Add method refers the call to the underlying list&quot;s `Add` method.       The internal list must contain homogenous types. If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property has not already been set, then the first object added to the list defines the type for the list.       This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  example:
  - "The following code example how to use the Add method. To run this example, paste the code into a Windows Form, and call the `PopulateBindingSourceWithFonts` method from the form's constructor.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/add/codesnippet/visualbasic/m-system.windows.forms.b_7_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMethods#6](~/add/codesnippet/csharp/m-system.windows.forms.b_7_1.cs)]"
  syntax:
    content: public virtual int Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "An <xref:System.Object> to be added to the internal list."
    return:
      type: System.Int32
      description: "The zero-based index at which <code>value</code> was added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property."
  overload: System.Windows.Forms.BindingSource.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>value</code> differs in type from the existing items in the underlying list."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.AddingNew
  id: AddingNew
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: AddingNew
  nameWithType: BindingSource.AddingNew
  fullName: System.Windows.Forms.BindingSource.AddingNew
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs before an item is added to the underlying list."
  remarks: "The AddingNew event occurs before a new object is added to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property. This event is fired after the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method is called, but before the new item is created and added to the underlying list. By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <xref:System.Windows.Forms.BindingSource> class. This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=fullName> parameter to the new item. The new object created in the AddingNew event must be of the same type as the type contained in the list or an exception will occur. You cannot set the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property when bound to a <xref:System.Data.DataView> or <xref:System.Data.DataTable> because you cannot add a new <xref:System.Data.DataRowView> to the list.       For more information about supplying custom new item functionality, see the <xref:System.Windows.Forms.BindingSource.AddNew%2A> method. For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control. New items are added to the list by the AddingNew event handler. This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataConnector.AddingNew#8](~/add/codesnippet/csharp/e-system.windows.forms.b_13_1.cs)]\n [!code-vb[System.Windows.Forms.DataConnector.AddingNew#8](~/add/codesnippet/visualbasic/e-system.windows.forms.b_13_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#8](~/add/codesnippet/cpp/e-system.windows.forms.b_13_1.cpp)]"
  syntax:
    content: public event System.ComponentModel.AddingNewEventHandler AddingNew;
    return:
      type: System.ComponentModel.AddingNewEventHandler
      description: "To be added."
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ComponentModel.AddingNewEventArgs.NewObject*> is not the same type as the type contained in the list."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.AddNew
  id: AddNew
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: AddNew()
  nameWithType: BindingSource.AddNew()
  fullName: System.Windows.Forms.BindingSource.AddNew()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds a new item to the underlying list."
  remarks: "The AddNew method adds a new item to the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property. This method sets up the following series of actions:      1.  The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method is automatically called to commit any pending edit operations.      2.  The <xref:System.Windows.Forms.BindingSource.AddingNew> event is automatically raised. This event can be programmatically handled to construct the new item. This is accomplished in the event handler by setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs?displayProperty=fullName> parameter to the new item. The new object created in the <xref:System.Windows.Forms.BindingSource.AddingNew> event must be of the same type as the type contained in the list or an exception will occur.           If the <xref:System.Windows.Forms.BindingSource.AddingNew> event is not handled, and the underlying list is an <xref:System.ComponentModel.IBindingList>, then the request is passed to the list&quot;s <xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=fullName> method. If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the item is automatically created through its public default constructor. In either case, the new item is added to the end of the list.      3.  The new item is added immediately to the internal list unless the data source implements the <xref:System.ComponentModel.IEditableObject> interface. In this case, the new item is not committed until an explicit call to <xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A> is made or until a new list operation is initiated. Before it is committed, the new item can be rolled back by calling <xref:System.Windows.Forms.BindingSource.CancelEdit%2A>, in which case the new item is discarded.       This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  example:
  - "The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control. New items are added to the list by the <xref:System.Windows.Forms.BindingSource.AddingNew> event handler. This code example is part of a larger example provided in [How to: Customize Item Addition with the Windows Forms BindingSource](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataConnector.AddingNew#7](~/add/codesnippet/csharp/m-system.windows.forms.b_1_1.cs)]\n [!code-vb[System.Windows.Forms.DataConnector.AddingNew#7](~/add/codesnippet/visualbasic/m-system.windows.forms.b_1_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnector.AddingNew#7](~/add/codesnippet/cpp/m-system.windows.forms.b_1_1.cpp)]"
  syntax:
    content: public virtual object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "The <xref:System.Object> that was created and added to the list."
  overload: System.Windows.Forms.BindingSource.AddNew*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Windows.Forms.BindingSource.AllowNew*> property is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       A public default constructor could not be found for the current item type."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.AllowEdit
  id: AllowEdit
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: AllowEdit
  nameWithType: BindingSource.AllowEdit
  fullName: System.Windows.Forms.BindingSource.AllowEdit
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether items in the underlying list can be edited."
  remarks: "The AllowEdit property is typically used by other components to determine if editing of items in the list is allowed."
  syntax:
    content: public virtual bool AllowEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate list items can be edited; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.AllowNew
  id: AllowNew
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: AllowNew
  nameWithType: BindingSource.AllowNew
  fullName: System.Windows.Forms.BindingSource.AllowNew
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the <xref:System.Windows.Forms.BindingSource.AddNew*> method can be used to add items to the list."
  remarks: "The default value for the AllowNew property depends on the underlying data source type. If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, this property will delegate to the underlying list. Otherwise, this property will return `false` if the underlying list has any of the following characteristics:      -   It has a fixed size, as determined by the <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName> property.      -   It is read-only, as determined by the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> property.      -   The item&quot;s type does not have a default constructor.      > [!NOTE] >  Once the value of this property is set, the getter no longer refers the call to the underlying list. Instead, it simply returns the value that was previously set until the <xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A> method is called.       Setting this property raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName> set to <xref:System.ComponentModel.ListChangedType?displayProperty=fullName>.       If you set the AllowNew property to `true` and the underlying list type does not have a default constructor, you must handle the <xref:System.Windows.Forms.BindingSource.AddingNew> event and create the appropriate type."
  example:
  - "The following code example demonstrates using the AllowNew property of the <xref:System.Windows.Forms.BindingSource> component to permit the user to add new items to the <xref:System.Windows.Forms.BindingSource> component's underlying list. Setting this property to `true` causes the bound <xref:System.Windows.Forms.DataGridView> control to display its row for new records.  \n  \n [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/add/codesnippet/cpp/p-system.windows.forms.b_36_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/add/codesnippet/csharp/p-system.windows.forms.b_36_1.cs)]\n [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#6](~/add/codesnippet/visualbasic/p-system.windows.forms.b_36_1.vb)]"
  syntax:
    content: public virtual bool AllowNew { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.Windows.Forms.BindingSource.AddNew*> can be used to add items to the list; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.AllowNew*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This property is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> when the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property has a fixed size or is read-only."
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: "The property is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the <xref href=&quot;System.Windows.Forms.BindingSource.AddingNew&quot;></xref> event is not handled when the underlying list type does not have a default constructor."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.AllowRemove
  id: AllowRemove
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: AllowRemove
  nameWithType: BindingSource.AllowRemove
  fullName: System.Windows.Forms.BindingSource.AllowRemove
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether items can be removed from the underlying list."
  remarks: "The AllowRemove property is typically used by other components to determine if editing of items in the list is allowed."
  syntax:
    content: public virtual bool AllowRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate list items can be removed from the list; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  id: ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ApplySort(ListSortDescriptionCollection)
  nameWithType: BindingSource.ApplySort(ListSortDescriptionCollection)
  fullName: System.Windows.Forms.BindingSource.ApplySort(ListSortDescriptionCollection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sorts the data source with the specified sort descriptions."
  remarks: "<xref:System.ComponentModel.IBindingListView> implements multi-column sorting as a set of property descriptor-direction pairs."
  syntax:
    content: public virtual void ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);
    parameters:
    - id: sorts
      type: System.ComponentModel.ListSortDescriptionCollection
      description: "A <xref href=&quot;System.ComponentModel.ListSortDescriptionCollection&quot;></xref> containing the sort descriptions to apply to the data source."
  overload: System.Windows.Forms.BindingSource.ApplySort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The data source is not an <xref href=&quot;System.ComponentModel.IBindingListView&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: BindingSource.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.Windows.Forms.BindingSource.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sorts the data source using the specified property descriptor and sort direction."
  remarks: "The <xref:System.ComponentModel.IBindingList> implements single column sorting using a <xref:System.ComponentModel.PropertyDescriptor> to indicate a property to sort by and a <xref:System.ComponentModel.ListSortDirection> indicating whether the property contents should be sorted in ascending or descending order."
  syntax:
    content: public virtual void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection sort);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> that describes the property by which to sort the data source."
    - id: sort
      type: System.ComponentModel.ListSortDirection
      description: "A <xref href=&quot;System.ComponentModel.ListSortDirection&quot;></xref> indicating how the list should be sorted."
  overload: System.Windows.Forms.BindingSource.ApplySort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The data source is not an <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.BindingComplete
  id: BindingComplete
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: BindingComplete
  nameWithType: BindingSource.BindingComplete
  fullName: System.Windows.Forms.BindingSource.BindingComplete
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when all the clients have been bound to this <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  remarks: "The BindingComplete event occurs after all the clients, typically controls, have been bound to the current <xref:System.Windows.Forms.BindingSource>. The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates handling the BindingComplete event. To run this code, paste it into an empty code file.  \n  \n [!code-cs[System.Windows.Forms.DataConnectorBindingComplete#3](~/add/codesnippet/csharp/e-system.windows.forms.b_12_1.cs)]\n [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/add/codesnippet/cpp/e-system.windows.forms.b_12_1.cpp)]\n [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/add/codesnippet/visualbasic/e-system.windows.forms.b_12_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;
    return:
      type: System.Windows.Forms.BindingCompleteEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.CancelEdit
  id: CancelEdit
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingSource.CancelEdit()
  fullName: System.Windows.Forms.BindingSource.CancelEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cancels the current edit operation."
  remarks: "This method discards modifications to data since the last save or load operation if both of the following conditions are met:      -   The data source implements the <xref:System.ComponentModel.IEditableObject> interface.      -   The <xref:System.Windows.Forms.BindingSource.EndEdit%2A> method has not been called yet.       This method calls the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method of the underlying <xref:System.Windows.Forms.CurrencyManager>, and is scoped to row-level changes."
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Clear
  id: Clear
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Clear()
  nameWithType: BindingSource.Clear()
  fullName: System.Windows.Forms.BindingSource.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes all elements from the list."
  remarks: "The Clear method removes all elements from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property and sets the <xref:System.Windows.Forms.BindingSource.Count%2A> property to zero.       This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: BindingSource.Contains(Object)
  fullName: System.Windows.Forms.BindingSource.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determines whether an object is an item in the list."
  remarks: "Although the implementation is dependent on the underlying list&quot;s `Contains` method, typically the following characteristics apply:      -   <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.      -   The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.      -   The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method."
  syntax:
    content: public virtual bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to locate in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property. The value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>value</code> parameter is found in the <xref:System.Windows.Forms.BindingSource.List*>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: BindingSource.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Copies the contents of the <xref:System.Windows.Forms.BindingSource.List*> to the specified array, starting at the specified index value."
  remarks: "You can use this method to combine items from multiple sources into a single array."
  syntax:
    content: public virtual void CopyTo (Array arr, int index);
    parameters:
    - id: arr
      type: System.Array
      description: "The destination array."
    - id: index
      type: System.Int32
      description: "The index in the destination array at which to start the copy operation."
  overload: System.Windows.Forms.BindingSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Count
  id: Count
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Count
  nameWithType: BindingSource.Count
  fullName: System.Windows.Forms.BindingSource.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the total number of items in the underlying list, taking the current <xref:System.Windows.Forms.BindingSource.Filter*> value into consideration."
  remarks: "The Count property gets the number of items in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property as modified by the value of the <xref:System.Windows.Forms.BindingSource.Filter%2A> property."
  example:
  - "The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and Count members. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`. Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`. Visual Basic users will need to add a reference to System.Data.dll.  \n  \n [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/add/codesnippet/visualbasic/p-system.windows.forms.b_6_1.vb)]\n [!code-cs[System.Windows.Forms.DataConnectorFilterAndSort#2](~/add/codesnippet/csharp/p-system.windows.forms.b_6_1.cs)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "The total number of filtered items in the underlying list."
  overload: System.Windows.Forms.BindingSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.CurrencyManager
  id: CurrencyManager
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: CurrencyManager
  nameWithType: BindingSource.CurrencyManager
  fullName: System.Windows.Forms.BindingSource.CurrencyManager
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the currency manager associated with this <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  remarks: "If you want to access the currency manager for another binding to the same data member use the <xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A> method."
  syntax:
    content: public virtual System.Windows.Forms.CurrencyManager CurrencyManager { get; }
    return:
      type: System.Windows.Forms.CurrencyManager
      description: "The <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;></xref> associated with this <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.CurrencyManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Current
  id: Current
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Current
  nameWithType: BindingSource.Current
  fullName: System.Windows.Forms.BindingSource.Current
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the current item in the list."
  remarks: "Use the Current property to access the current item, but use the <xref:System.Windows.Forms.BindingSource.List%2A> property to get the entire list. To determine the type of the current object, use the <xref:System.Object.GetType%2A>, or <xref:System.Object.ToString%2A> methods.       To change the current item, set the <xref:System.Windows.Forms.BindingSource.Position%2A> property to a new integral value, or use one of the navigation methods such as <xref:System.Windows.Forms.BindingSource.MoveNext%2A>."
  example:
  - "The following code example demonstrates the Current property. To run this example, paste the code into a form and call the `PopulateBindingSourceWithFonts` method from the form's <xref:System.Windows.Forms.Form.Load> event handling method.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMethods#6](~/add/codesnippet/visualbasic/p-system.windows.forms.b_35_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMethods#6](~/add/codesnippet/csharp/p-system.windows.forms.b_35_1.cs)]"
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the current item in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the list has no items."
  overload: System.Windows.Forms.BindingSource.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.CurrentChanged
  id: CurrentChanged
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: CurrentChanged
  nameWithType: BindingSource.CurrentChanged
  fullName: System.Windows.Forms.BindingSource.CurrentChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the currently bound item changes."
  remarks: "The CurrentChanged event is raised whenever the <xref:System.Windows.Forms.BindingSource.Current%2A> property changes for any of the following reasons:      -   The current position of the <xref:System.Windows.Forms.BindingSource.List%2A> changes.      -   The <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change.      -   The membership of the underlying <xref:System.Windows.Forms.BindingSource.List%2A> changes, which causes <xref:System.Windows.Forms.BindingSource.Position%2A> to refer to a different item. Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.      -   The underlying list is refreshed by a new sorting or filtering operation.       When this event is triggered, the <xref:System.Windows.Forms.BindingSource.Current%2A> property will already contain its new value.       CurrentChanged is the default event for the <xref:System.Windows.Forms.BindingSource> class.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler CurrentChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.CurrentItemChanged
  id: CurrentItemChanged
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: CurrentItemChanged
  nameWithType: BindingSource.CurrentItemChanged
  fullName: System.Windows.Forms.BindingSource.CurrentItemChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a property value of the <xref:System.Windows.Forms.BindingSource.Current*> property has changed."
  remarks: "The CurrentItemChanged event is raised in response to all of the circumstances that raise the <xref:System.Windows.Forms.BindingSource.CurrentChanged> event. Additionally, CurrentItemChanged is also fired whenever the value of one of the properties of <xref:System.Windows.Forms.BindingSource.Current%2A> is changed.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler CurrentItemChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.DataError
  id: DataError
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: DataError
  nameWithType: BindingSource.DataError
  fullName: System.Windows.Forms.BindingSource.DataError
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a currency-related exception is silently handled by the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  remarks: "This event is informational and reports CLS-compliant exceptions only. To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;
    return:
      type: System.Windows.Forms.BindingManagerDataErrorEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.DataMember
  id: DataMember
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: DataMember
  nameWithType: BindingSource.DataMember
  fullName: System.Windows.Forms.BindingSource.DataMember
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the specific list in the data source to which the connector currently binds to."
  remarks: "If the <xref:System.Windows.Forms.BindingSource.DataSource%2A> contains multiple lists (or tables) of data, you should set the DataMember property to the name of one of the sources.       Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataMemberChanged> event"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "The name of a list (or row) in the <xref:System.Windows.Forms.BindingSource.DataSource*>. The default is an empty string (&quot;&quot;)."
  overload: System.Windows.Forms.BindingSource.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.DataMemberChanged
  id: DataMemberChanged
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: DataMemberChanged
  nameWithType: BindingSource.DataMemberChanged
  fullName: System.Windows.Forms.BindingSource.DataMemberChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.BindingSource.DataMember*> property value has changed."
  remarks: "The DataMemberChanged event occurs after the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property changes.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler DataMemberChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.DataSource
  id: DataSource
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: DataSource
  nameWithType: BindingSource.DataSource
  fullName: System.Windows.Forms.BindingSource.DataSource
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the data source that the connector binds to."
  remarks: "The DataSource property can be set to a number of data sources, including types, objects, and lists of types. The resulting data source will be exposed as a list. The following table shows some of the common data sources and the resulting list evaluation.      |DataSource property|List results|   |-------------------------|------------------|   |`null`|An empty <xref:System.ComponentModel.IBindingList> of objects. Adding an item sets the list to the type of the added item.|   |`null` with <xref:System.Windows.Forms.BindingSource.DataMember%2A> set|Not supported, raises <xref:System.ArgumentException>.|   |Non-list type or object of type &quot;T&quot;|Empty <xref:System.ComponentModel.IBindingList> of type &quot;T&quot;.|   |Array instance|<xref:System.ComponentModel.IBindingList> containing the array elements.|   |<xref:System.Collections.IEnumerable> instance|An <xref:System.ComponentModel.IBindingList> containing the <xref:System.Collections.IEnumerable> items.|   |List instance containing type &quot;T&quot;|<xref:System.ComponentModel.IBindingList> instance containing type &quot;T&quot;.|       In addition, DataSource can be set to other list types such as <xref:System.ComponentModel.IListSource> and <xref:System.ComponentModel.ITypedList> and the <xref:System.Windows.Forms.BindingSource> will handle them appropriately. In this case, the type contained in the list should have a default constructor.       When setting a data source, if the supplied reference contains more than one list or table, you must set the <xref:System.Windows.Forms.BindingSource.DataMember%2A> property to a string that specifies the list to bind to. Setting this property raises the <xref:System.Windows.Forms.BindingSource.DataSourceChanged> event.      > [!NOTE] >  If you make any changes to the DataSource property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.       The DataSource property is the default property for the <xref:System.Windows.Forms.BindingSource> class."
  example:
  - "The following code example assigns a list of customers to the DataSource of a <xref:System.Windows.Forms.BindingSource> component. This code example is part of a larger example provided at [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataConnector.ResetItem#6](~/add/codesnippet/visualbasic/p-system.windows.forms.b_12_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#6](~/add/codesnippet/cpp/p-system.windows.forms.b_12_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnector.ResetItem#6](~/add/codesnippet/csharp/p-system.windows.forms.b_12_1.cs)]"
  syntax:
    content: public object DataSource { get; set; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that acts as a data source. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: BindingSource.DataSourceChanged
  fullName: System.Windows.Forms.BindingSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.BindingSource.DataSource*> property value has changed."
  remarks: "The DataSourceChanged event occurs after the <xref:System.Windows.Forms.BindingSource.DataSource%2A> property changes.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: BindingSource.Dispose(Boolean)
  fullName: System.Windows.Forms.BindingSource.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> and optionally releases the managed resources."
  remarks: "This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.BindingSource> references. This method invokes the `Dispose` method of each referenced object."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Windows.Forms.BindingSource.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.EndEdit
  id: EndEdit
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: EndEdit()
  nameWithType: BindingSource.EndEdit()
  fullName: System.Windows.Forms.BindingSource.EndEdit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Applies pending changes to the underlying data source."
  remarks: "When the EndEdit method is called, all pending changes are applied to the underlying data source.       This method has no effect unless the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface. If the objects do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes to the data are copied to the underlying data source immediately after each change.       This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.EndEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Filter
  id: Filter
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Filter
  nameWithType: BindingSource.Filter
  fullName: System.Windows.Forms.BindingSource.Filter
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the expression used to filter which rows are viewed."
  remarks: "Typically used in complex data-binding scenarios, the Filter property allows you to view a subset of the <xref:System.Windows.Forms.BindingSource.DataSource%2A>. Only underlying lists that implement the <xref:System.ComponentModel.IBindingListView> interface support filtering.       When Filter is not `null`, the <xref:System.Windows.Forms.BindingSource> passes this property to the underlying list. If you set this property during object initialization, the call will be deferred until after initialization is complete.       To form a filter value, specify the name of a column followed by an operator and a value to filter on. The accepted filter syntax depends on the underlying data source. If the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, you can specify Boolean expressions using the syntax documented for the <xref:System.Data.DataColumn.Expression%2A?displayProperty=fullName> property.       The value of the Filter property affects the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property. Additionally, the Filter value will persist when the data source changes. To stop filtering the <xref:System.Windows.Forms.BindingSource.DataSource%2A>, call the <xref:System.Windows.Forms.BindingSource.RemoveFilter%2A> method."
  example:
  - "The following example shows how to use the Filter property with a <xref:System.Data.DataView>. To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFilter` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method. Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMethods#3](~/add/codesnippet/visualbasic/p-system.windows.forms.b_33_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMethods#3](~/add/codesnippet/csharp/p-system.windows.forms.b_33_1.cs)]"
  syntax:
    content: public virtual string Filter { get; set; }
    return:
      type: System.String
      description: "A string that specifies how rows are to be filtered. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Find(PropertyDescriptor,Object)
  nameWithType: BindingSource.Find(PropertyDescriptor,Object)
  fullName: System.Windows.Forms.BindingSource.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Searches for the index of the item that has the given property descriptor."
  remarks: "This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the `prop` parameter equals the value of the `key` parameter       This method simply refers the request to the underlying list&quot;s <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName> method. For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=fullName> method. The behavior of <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list."
  example:
  - "The following code example demonstrates how to use the Find method. For the complete example see the class overview topic.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/add/codesnippet/csharp/26133989-bf70-40db-a7a1-_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/add/codesnippet/visualbasic/26133989-bf70-40db-a7a1-_1.vb)]"
  syntax:
    content: public virtual int Find (System.ComponentModel.PropertyDescriptor prop, object key);
    parameters:
    - id: prop
      type: System.ComponentModel.PropertyDescriptor
      description: "The <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> to search for."
    - id: key
      type: System.Object
      description: "The value of `prop` to match."
    return:
      type: System.Int32
      description: "The zero-based index of the item that has the given value for <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.Find*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list is not of type <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Find(System.String,System.Object)
  id: Find(System.String,System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Find(String,Object)
  nameWithType: BindingSource.Find(String,Object)
  fullName: System.Windows.Forms.BindingSource.Find(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the index of the item in the list with the specified property name and value."
  remarks: "The Find method can only be used when the underlying list is an <xref:System.ComponentModel.IBindingList> with searching implemented. This method simply refers the request to the underlying list&quot;s <xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName> method. For example, if the underlying data source is a <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, or <xref:System.Data.DataView>, this method converts `propertyName` to a <xref:System.ComponentModel.PropertyDescriptor> and calls the <xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A> method. The behavior of <xref:System.Windows.Forms.BindingSource.Find%2A>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.       The property name comparison is case-insensitive."
  example:
  - "The following example shows how to use the Find method with a <xref:System.Data.DataView>. To run this example, paste the code into a Windows Form and call `PopulateDataViewAndFind` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method. Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMethods#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_12_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMethods#1](~/add/codesnippet/csharp/m-system.windows.forms.b_12_1.cs)]"
  syntax:
    content: public int Find (string propertyName, object key);
    parameters:
    - id: propertyName
      type: System.String
      description: "The name of the property to search for."
    - id: key
      type: System.Object
      description: "The value of the item with the specified `propertyName` to find."
    return:
      type: System.Int32
      description: "The zero-based index of the item with the specified property name and value."
  overload: System.Windows.Forms.BindingSource.Find*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The underlying list is not a <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref> with searching functionality implemented."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyName</code> does not match a property in the list."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: BindingSource.GetEnumerator()
  fullName: System.Windows.Forms.BindingSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves an enumerator for the <xref:System.Windows.Forms.BindingSource.List*>."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref:System.Windows.Forms.BindingSource.List*>."
  overload: System.Windows.Forms.BindingSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: BindingSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Windows.Forms.BindingSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves an array of <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> objects representing the bindable properties of the data source list type."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "An array of <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> objects to find in the list as bindable."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "An array of <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> objects that represents the properties on this list type used to bind data."
  overload: System.Windows.Forms.BindingSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: BindingSource.GetListName(PropertyDescriptor[])
  fullName: System.Windows.Forms.BindingSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the name of the list supplying data for the binding."
  syntax:
    content: public virtual string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "An array of <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> objects to find in the list as bindable."
    return:
      type: System.String
      description: "The name of the list supplying the data for binding."
  overload: System.Windows.Forms.BindingSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)
  id: GetRelatedCurrencyManager(System.String)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: GetRelatedCurrencyManager(String)
  nameWithType: BindingSource.GetRelatedCurrencyManager(String)
  fullName: System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the related currency manager for the specified data member."
  remarks: "If `dataMember` is `null` or an empty string (&quot;&quot;), GetRelatedCurrencyManager returns the main currency manager; otherwise, it checks for another <xref:System.Windows.Forms.BindingSource> bound to the specified data member and returns its currency manager."
  syntax:
    content: public virtual System.Windows.Forms.CurrencyManager GetRelatedCurrencyManager (string dataMember);
    parameters:
    - id: dataMember
      type: System.String
      description: "The name of column or list, within the data source to retrieve the currency manager for."
    return:
      type: System.Windows.Forms.CurrencyManager
      description: "The related <xref href=&quot;System.Windows.Forms.CurrencyManager&quot;></xref> for the specified data member."
  overload: System.Windows.Forms.BindingSource.GetRelatedCurrencyManager*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: BindingSource.IndexOf(Object)
  fullName: System.Windows.Forms.BindingSource.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Searches for the specified object and returns the index of the first occurrence within the entire list."
  remarks: "Although the implementation is dependent on the underlying list&quot;s `IndexOf` method, typically the following characteristics apply:      -   The <xref:System.Windows.Forms.BindingSource.List%2A> is searched starting at the first element and ending at the last element.      -   The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property.      -   The underlying method determines equality by calling the <xref:System.Object.Equals%2A> method."
  syntax:
    content: public virtual int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to locate in the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property. The value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "The zero-based index of the first occurrence of the <code>value</code> parameter; otherwise, -1 if <code>value</code> is not in the list."
  overload: System.Windows.Forms.BindingSource.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: BindingSource.Insert(Int32,Object)
  fullName: System.Windows.Forms.BindingSource.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inserts an item into the list at the specified index."
  remarks: "This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  syntax:
    content: public virtual void Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which `value` should be inserted."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to insert. The value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero or greater than <xref:System.Windows.Forms.BindingSource.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The list is read-only or has a fixed size."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.IsBindingSuspended
  id: IsBindingSuspended
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: IsBindingSuspended
  nameWithType: BindingSource.IsBindingSuspended
  fullName: System.Windows.Forms.BindingSource.IsBindingSuspended
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the list binding is suspended."
  syntax:
    content: public bool IsBindingSuspended { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the binding is suspended; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.IsBindingSuspended*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.IsFixedSize
  id: IsFixedSize
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: BindingSource.IsFixedSize
  fullName: System.Windows.Forms.BindingSource.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the underlying list has a fixed size."
  remarks: "If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements."
  syntax:
    content: public virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the underlying list has a fixed size; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: BindingSource.IsReadOnly
  fullName: System.Windows.Forms.BindingSource.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the underlying list is read-only."
  remarks: "A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.IsSorted
  id: IsSorted
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: IsSorted
  nameWithType: BindingSource.IsSorted
  fullName: System.Windows.Forms.BindingSource.IsSorted
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the items in the underlying list are sorted."
  remarks: "IsSorted always returns `false` if the list is not an <xref:System.ComponentModel.IBindingList>."
  syntax:
    content: public virtual bool IsSorted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list is an <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref> and is sorted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.IsSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: BindingSource.IsSynchronized
  fullName: System.Windows.Forms.BindingSource.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether access to the collection is synchronized (thread safe)."
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the list is synchronized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BindingSource.Item(Int32)
  fullName: System.Windows.Forms.BindingSource.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the list element at the specified index."
  remarks: "The Item property represents the indexer for this class. It accepts `null` as a valid value and allows duplicate items within the list.       Setting a value will raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  syntax:
    content: public virtual object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to retrieve."
    return:
      type: System.Object
      description: "The element at the specified index."
  overload: System.Windows.Forms.BindingSource.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero or is equal to or greater than <xref:System.Windows.Forms.BindingSource.Count*>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.List
  id: List
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: List
  nameWithType: BindingSource.List
  fullName: System.Windows.Forms.BindingSource.List
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the list that the connector is bound to."
  remarks: "The <xref:System.Windows.Forms.BindingSource> class uniformly handles different data sources. Ideally the List property should be set to a general <xref:System.Collections.IList>. However, sometimes it may be necessary to cast this property to a more specific type. The following table shows the underlying list type, which depends on the type or value of the data source.      |Data source type|Underlying list description|   |----------------------|---------------------------------|   |<xref:System.Windows.Forms.BindingSource.DataSource%2A> and <xref:System.Windows.Forms.BindingSource.DataMember%2A> are `null`|An empty <xref:System.Collections.ArrayList>.|   |<xref:System.Windows.Forms.BindingSource.DataSource%2A> is `null`, but <xref:System.Windows.Forms.BindingSource.DataMember%2A> is not `null`|None; an attempt to get the List will throw an <xref:System.ArgumentException>.|   |An <xref:System.Array> instance|An <xref:System.Array>.|   |An <xref:System.ComponentModel.IListSource> instance|The return value from a call to the <xref:System.ComponentModel.IListSource.GetList%2A> method of this <xref:System.ComponentModel.IListSource> instance.|   |An <xref:System.ComponentModel.IBindingList> instance|An <xref:System.ComponentModel.IBindingList>.|   |An <xref:System.Collections.IList> instance|An <xref:System.Collections.IList>.|   |A non-<xref:System.Collections.IList> instance of type &quot;T&quot;|A <xref:System.ComponentModel.BindingList%601> with one element.|   |An <xref:System.ComponentModel.ICustomTypeDescriptor> instance|An <xref:System.Collections.ArrayList> with one element.|   |An <xref:System.Collections.IEnumerable>|An <xref:System.Collections.ArrayList> with the elements copied over.|   |The <xref:System.Array> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type &quot;T&quot;|A <xref:System.ComponentModel.BindingList%601>.|   |A <xref:System.Type> that represents an <xref:System.ComponentModel.IListSource> or <xref:System.ComponentModel.ITypedList>|An instance created by a call to the <xref:System.Activator.CreateInstance%28System.Type%29> method of the <xref:System.Activator> class. A <xref:System.NotSupportedException> may be thrown.|   |The <xref:System.Collections.IList> type with <xref:System.Windows.Forms.BindingSource.DataMember%2A> of item type &quot;T&quot;<br /><br /> -or-<br /><br /> A non-<xref:System.Collections.IList> type|A <xref:System.ComponentModel.BindingList%601>.|   |The <xref:System.ComponentModel.ICustomTypeDescriptor> type|None; an attempt to get the List will throw an <xref:System.NotSupportedException>.|       If the type retrieved is the <xref:System.Collections.IList> interface, the underlying collection may be more complex, such as an <xref:System.Collections.ArrayList> or <xref:System.Data.DataView> class."
  example:
  - "The following code example demonstrates the List, <xref:System.Windows.Forms.BindingSource.RemoveAt%2A>, and <xref:System.Windows.Forms.BindingSource.Count%2A> members. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`. Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`. Visual Basic users will need to add a reference to System.Data.dll.  \n  \n [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/add/codesnippet/visualbasic/p-system.windows.forms.b_9_1.vb)]\n [!code-cs[System.Windows.Forms.DataConnectorFilterAndSort#2](~/add/codesnippet/csharp/p-system.windows.forms.b_9_1.cs)]"
  syntax:
    content: public System.Collections.IList List { get; }
    return:
      type: System.Collections.IList
      description: "An <xref:System.Collections.IList> that represents the list, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no underlying list associated with this <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.List*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ListChanged
  id: ListChanged
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ListChanged
  nameWithType: BindingSource.ListChanged
  fullName: System.Windows.Forms.BindingSource.ListChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the underlying list changes or an item in the list changes."
  remarks: "The ListChanged event occurs when there is a change to the membership or metadata of the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List%2A> property. For example, this event is raised when items are added, removed, or moved, or the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties change. The values of the <xref:System.Windows.Forms.BindingSource.Sort%2A> and <xref:System.Windows.Forms.BindingSource.Filter%2A> properties will persist when this event occurs.       This event can be completely suppressed by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`. For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates handling the ListChanged event of the <xref:System.Windows.Forms.BindingSource> component to detect when the <xref:System.Windows.Forms.BindingSource> component's underlying list is changed.  \n  \n [!code-cpp[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/add/codesnippet/cpp/e-system.windows.forms.b_4_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/add/codesnippet/csharp/e-system.windows.forms.b_4_1.cs)]\n [!code-vb[System.Windows.Forms.DataConnector.ItemChangedEventMode#9](~/add/codesnippet/visualbasic/e-system.windows.forms.b_4_1.vb)]"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.MoveFirst
  id: MoveFirst
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: MoveFirst()
  nameWithType: BindingSource.MoveFirst()
  fullName: System.Windows.Forms.BindingSource.MoveFirst()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Moves to the first item in the list."
  remarks: "Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to 0, the first item in the underlying data source."
  example:
  - "The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, MoveFirst, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members. To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`. Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`. Visual Basic users will need to add a reference to System.Data.dll.  \n  \n [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_8_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/cpp/m-system.windows.forms.b_8_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/csharp/m-system.windows.forms.b_8_1.cs)]"
  syntax:
    content: public void MoveFirst ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.MoveFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.MoveLast
  id: MoveLast
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: MoveLast()
  nameWithType: BindingSource.MoveLast()
  fullName: System.Windows.Forms.BindingSource.MoveLast()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Moves to the last item in the list."
  remarks: "Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the index of the last item in the underlying data source, which is equal to the value of the <xref:System.Windows.Forms.BindingSource.Count%2A> property minus 1."
  syntax:
    content: public void MoveLast ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.MoveLast*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.MoveNext
  id: MoveNext
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: MoveNext()
  nameWithType: BindingSource.MoveNext()
  fullName: System.Windows.Forms.BindingSource.MoveNext()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Moves to the next item in the list."
  remarks: "Changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the next item in the underlying data source."
  example:
  - "The following code example demonstrates the MoveNext, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and <xref:System.Windows.Forms.BindingSource.Position%2A> members. To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`. Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`. Visual Basic users will need to add a reference to System.Data.dll.  \n  \n [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.b_0_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/cpp/m-system.windows.forms.b_0_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/csharp/m-system.windows.forms.b_0_1.cs)]"
  syntax:
    content: public void MoveNext ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.MovePrevious
  id: MovePrevious
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: BindingSource.MovePrevious()
  fullName: System.Windows.Forms.BindingSource.MovePrevious()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Moves to the previous item in the list."
  remarks: "This method changes the current value of the <xref:System.Windows.Forms.BindingSource.Position%2A> property to the previous item in the underlying data source."
  syntax:
    content: public void MovePrevious ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)
  id: OnAddingNew(System.ComponentModel.AddingNewEventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnAddingNew(AddingNewEventArgs)
  nameWithType: BindingSource.OnAddingNew(AddingNewEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnAddingNew(AddingNewEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.AddingNew&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnAddingNew method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAddingNew (System.ComponentModel.AddingNewEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AddingNewEventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnAddingNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  id: OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnBindingComplete(BindingCompleteEventArgs)
  nameWithType: BindingSource.OnBindingComplete(BindingCompleteEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnBindingComplete(BindingCompleteEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.BindingComplete&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnBindingComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.BindingCompleteEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.BindingCompleteEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnBindingComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)
  id: OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnCurrentChanged(EventArgs)
  nameWithType: BindingSource.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnCurrentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.CurrentChanged&quot;></xref> event."
  remarks: "For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md).       Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).       The OnCurrentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCurrentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnCurrentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)
  id: OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: BindingSource.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnCurrentItemChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.CurrentItemChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnCurrentItemChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCurrentItemChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnCurrentItemChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)
  id: OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnDataError(BindingManagerDataErrorEventArgs)
  nameWithType: BindingSource.OnDataError(BindingManagerDataErrorEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnDataError(BindingManagerDataErrorEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.DataError&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnDataError method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDataError (System.Windows.Forms.BindingManagerDataErrorEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.BindingManagerDataErrorEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.BindingManagerDataErrorEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)
  id: OnDataMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnDataMemberChanged(EventArgs)
  nameWithType: BindingSource.OnDataMemberChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnDataMemberChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.DataMemberChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnDataMemberChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDataMemberChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnDataMemberChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)
  id: OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnDataSourceChanged(EventArgs)
  nameWithType: BindingSource.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnDataSourceChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.DataSourceChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnDataSourceChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnDataSourceChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnDataSourceChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  id: OnListChanged(System.ComponentModel.ListChangedEventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnListChanged(ListChangedEventArgs)
  nameWithType: BindingSource.OnListChanged(ListChangedEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnListChanged(ListChangedEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.ListChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnListChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.ListChangedEventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)
  id: OnPositionChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: OnPositionChanged(EventArgs)
  nameWithType: BindingSource.OnPositionChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnPositionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.BindingSource.PositionChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md).       The OnPositionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnPositionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.BindingSource.OnPositionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Position
  id: Position
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Position
  nameWithType: BindingSource.Position
  fullName: System.Windows.Forms.BindingSource.Position
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the index of the current item in the underlying list."
  remarks: "When setting the Position property, out-of-range values are treated in the following manner:      -   Negative values are treated as 0.      -   Values greater than or equal to <xref:System.Windows.Forms.BindingSource.Count%2A> are treated as <xref:System.Windows.Forms.BindingSource.Count%2A> minus 1.       Changing the Position property will adjust the <xref:System.Windows.Forms.BindingSource.Current%2A> property likewise."
  example:
  - "The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.MoveNext%2A>, <xref:System.Windows.Forms.BindingSource.MoveFirst%2A>, <xref:System.Windows.Forms.BindingSource.Current%2A>, and Position members. To run this example, paste the code into a form that imports the <xref:System.Drawing.Drawing2D> namespace and contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1` and a button named `button1`. Associate the `Form1_Load` and `Form1_Paint` methods with the <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Control.Paint> events for the form, and associate the `button1_click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`. Visual Basic users will need to add a reference to System.Data.dll.  \n  \n [!code-vb[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.b_18_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/cpp/p-system.windows.forms.b_18_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnectorCurrent#1](~/add/codesnippet/csharp/p-system.windows.forms.b_18_1.cs)]"
  syntax:
    content: public int Position { get; set; }
    return:
      type: System.Int32
      description: "A zero-based index that specifies the position of the current item in the underlying list."
  overload: System.Windows.Forms.BindingSource.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.PositionChanged
  id: PositionChanged
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: PositionChanged
  nameWithType: BindingSource.PositionChanged
  fullName: System.Windows.Forms.BindingSource.PositionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs after the value of the <xref:System.Windows.Forms.BindingSource.Position*> property has changed."
  remarks: "The PositionChanged event occurs after the <xref:System.Windows.Forms.BindingSource.Position%2A> property has changed.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler PositionChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.RaiseListChangedEvents
  id: RaiseListChangedEvents
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: RaiseListChangedEvents
  nameWithType: BindingSource.RaiseListChangedEvents
  fullName: System.Windows.Forms.BindingSource.RaiseListChangedEvents
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether <xref href=&quot;System.Windows.Forms.BindingSource.ListChanged&quot;></xref> events should be raised."
  remarks: "When the RaiseListChangedEvents property is `false`, it suspends the raising of <xref:System.Windows.Forms.BindingSource.ListChanged> events. This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items."
  syntax:
    content: public bool RaiseListChangedEvents { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref href=&quot;System.Windows.Forms.BindingSource.ListChanged&quot;></xref> events should be raised; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.RaiseListChangedEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: BindingSource.Remove(Object)
  fullName: System.Windows.Forms.BindingSource.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the specified item from the list."
  remarks: "The Remove method causes the list to be searched for the `value` parameter. If found, this method will attempt to remove the item from the <xref:System.Windows.Forms.BindingSource.List%2A>. This attempt will fail if the list has a fixed size or is read-only. These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.       This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  syntax:
    content: public virtual void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The item to remove from the underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property."
  overload: System.Windows.Forms.BindingSource.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list has a fixed size or is read-only."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: BindingSource.RemoveAt(Int32)
  fullName: System.Windows.Forms.BindingSource.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the item at the specified index in the list."
  remarks: "These two conditions can be tested with the <xref:System.Windows.Forms.BindingSource.IsFixedSize%2A> and <xref:System.Windows.Forms.BindingSource.IsReadOnly%2A> properties, respectively.       This method raises the <xref:System.Windows.Forms.BindingSource.ListChanged> event."
  example:
  - "The following code example demonstrates the <xref:System.Windows.Forms.BindingSource.List%2A>, RemoveAt, and <xref:System.Windows.Forms.BindingSource.Count%2A> members. To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.BindingSource> named `BindingSource1`, two labels named `label1` and `label2`, and a button named `button1`. Associate the `button1_Click` method with the <xref:System.Windows.Forms.Control.Click> event for `button1`. Visual Basic users will need to add a reference to System.Data.dll.  \n  \n [!code-vb[System.Windows.Forms.DataConnectorFilterAndSort#2](~/add/codesnippet/visualbasic/m-system.windows.forms.b_5_1.vb)]\n [!code-cs[System.Windows.Forms.DataConnectorFilterAndSort#2](~/add/codesnippet/csharp/m-system.windows.forms.b_5_1.cs)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item to remove."
  overload: System.Windows.Forms.BindingSource.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero or greater than the value of the <xref:System.Windows.Forms.BindingSource.Count*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property is read-only or has a fixed size."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.RemoveCurrent
  id: RemoveCurrent
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: RemoveCurrent()
  nameWithType: BindingSource.RemoveCurrent()
  fullName: System.Windows.Forms.BindingSource.RemoveCurrent()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the current item from the list."
  remarks: "The RemoveCurrent method is equivalent to the <xref:System.Windows.Forms.BindingSource.RemoveAt%2A> method."
  syntax:
    content: public void RemoveCurrent ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.RemoveCurrent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Windows.Forms.BindingSource.AllowRemove*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       -or-       <xref:System.Windows.Forms.BindingSource.Position*> is less than zero or greater than <xref:System.Windows.Forms.BindingSource.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list represented by the <xref:System.Windows.Forms.BindingSource.List*> property is read-only or has a fixed size."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.RemoveFilter
  id: RemoveFilter
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: RemoveFilter()
  nameWithType: BindingSource.RemoveFilter()
  fullName: System.Windows.Forms.BindingSource.RemoveFilter()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the filter associated with the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  remarks: "The RemoveFilter method refers the request to the underlying list&quot;s <xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=fullName> method. Only lists that implement <xref:System.ComponentModel.IBindingListView> support filtering.       By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Filter%2A> property to `null`."
  syntax:
    content: public virtual void RemoveFilter ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.RemoveFilter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list does not support filtering."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.RemoveSort
  id: RemoveSort
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: RemoveSort()
  nameWithType: BindingSource.RemoveSort()
  fullName: System.Windows.Forms.BindingSource.RemoveSort()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the sort associated with the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref>."
  remarks: "The RemoveSort method refers the request to the underlying list&quot;s <xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=fullName> method. Only lists that implement <xref:System.ComponentModel.IBindingList> support sorting.       By default, a call to this method is equivalent to setting the <xref:System.Windows.Forms.BindingSource.Sort%2A> property to `null`."
  syntax:
    content: public virtual void RemoveSort ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.RemoveSort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list does not support sorting."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ResetAllowNew
  id: ResetAllowNew
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ResetAllowNew()
  nameWithType: BindingSource.ResetAllowNew()
  fullName: System.Windows.Forms.BindingSource.ResetAllowNew()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew*> property."
  remarks: "The ResetAllowNew method reinitializes the <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property to reflect the value of the corresponding <xref:System.Windows.Forms.BindingSource.AllowNew%2A> property in the underlying list."
  syntax:
    content: public virtual void ResetAllowNew ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.ResetAllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)
  id: ResetBindings(System.Boolean)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ResetBindings(Boolean)
  nameWithType: BindingSource.ResetBindings(Boolean)
  fullName: System.Windows.Forms.BindingSource.ResetBindings(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Causes a control bound to the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> to reread all the items in the list and refresh their displayed values."
  remarks: "The ResetBindings method informs all controls bound to the <xref:System.Windows.Forms.BindingSource> to refresh their values. The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event at least once; the `metaDataChanged` parameter indicates the nature of the underlying change.      -   A `metaDataChanged` value of `true` indicates that the data schema of <xref:System.Windows.Forms.BindingSource> has changed. A <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName> set to <xref:System.ComponentModel.ListChangedType?displayProperty=fullName>.      -   A `metaDataChanged` value of `false` indicates that only the values of one or more items have changed.       Regardless of the value of `metaDataChanged`, a <xref:System.Windows.Forms.BindingSource.ListChanged> event is raised with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName> set to <xref:System.ComponentModel.ListChangedType?displayProperty=fullName>. As a consequence, calling ResetBindings with a parameter of `true` will raise two <xref:System.Windows.Forms.BindingSource.ListChanged> events.       ResetBindings is automatically called whenever another member makes major changes to the data-binding, such as setting the <xref:System.Windows.Forms.BindingSource.DataSource%2A> or <xref:System.Windows.Forms.BindingSource.DataMember%2A> properties. However, the programmer can also call this method explicitly."
  example:
  - "The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind an array list, which does not provide change notification. An item is removed from the list, and the bound controls are notified of the change by calling the ResetBindings method. This code example is part of a larger example provided in [How to: Reflect Data Source Updates in a Windows Forms Control with the BindingSource](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataConnector.ResetBindings#3](~/add/codesnippet/visualbasic/m-system.windows.forms.b_19_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnector.ResetBindings#3](~/add/codesnippet/cpp/m-system.windows.forms.b_19_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnector.ResetBindings#3](~/add/codesnippet/csharp/m-system.windows.forms.b_19_1.cs)]"
  syntax:
    content: public void ResetBindings (bool metadataChanged);
    parameters:
    - id: metadataChanged
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data schema has changed; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if only values have changed."
  overload: System.Windows.Forms.BindingSource.ResetBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ResetCurrentItem
  id: ResetCurrentItem
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ResetCurrentItem()
  nameWithType: BindingSource.ResetCurrentItem()
  fullName: System.Windows.Forms.BindingSource.ResetCurrentItem()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Causes a control bound to the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> to reread the currently selected item and refresh its displayed value."
  remarks: "Calling this method will cause the <xref:System.Windows.Forms.BindingSource.ListChanged> event to occur, specifying the item changed at the current position."
  syntax:
    content: public void ResetCurrentItem ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.ResetCurrentItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ResetItem(System.Int32)
  id: ResetItem(System.Int32)
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ResetItem(Int32)
  nameWithType: BindingSource.ResetItem(Int32)
  fullName: System.Windows.Forms.BindingSource.ResetItem(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Causes a control bound to the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> to reread the item at the specified index, and refresh its displayed value."
  remarks: "The ResetItem method notifies all controls bound to the item at the specified <xref:System.Windows.Forms.BindingSource.Position%2A> to refresh their values. The method does this by raising the <xref:System.Windows.Forms.BindingSource.ListChanged> event with <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName> set to <xref:System.ComponentModel.ListChangedType?displayProperty=fullName>.       ResetItem is automatically called whenever changes are made to the value of an individual item. However, the programmer can also call this method explicitly."
  example:
  - "The following code example uses a <xref:System.Windows.Forms.BindingSource> component to bind a list to a <xref:System.Windows.Forms.DataGridView> control. The list does not raise change notifications, so the ResetItem method on the <xref:System.Windows.Forms.BindingSource> is used to raise the <xref:System.Windows.Forms.BindingSource.ListChanged> event. This code example is part of a larger example provided in [How to: Raise Change Notifications Using the BindingSource ResetItem Method](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataConnector.ResetItem#7](~/add/codesnippet/visualbasic/m-system.windows.forms.b_10_1.vb)]\n [!code-cpp[System.Windows.Forms.DataConnector.ResetItem#7](~/add/codesnippet/cpp/m-system.windows.forms.b_10_1.cpp)]\n [!code-cs[System.Windows.Forms.DataConnector.ResetItem#7](~/add/codesnippet/csharp/m-system.windows.forms.b_10_1.cs)]"
  syntax:
    content: public void ResetItem (int itemIndex);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "The zero-based index of the item that has changed."
  overload: System.Windows.Forms.BindingSource.ResetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.ResumeBinding
  id: ResumeBinding
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: ResumeBinding()
  nameWithType: BindingSource.ResumeBinding()
  fullName: System.Windows.Forms.BindingSource.ResumeBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Resumes data binding."
  remarks: "<xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and ResumeBinding are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario. You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.      > [!NOTE] >  Using <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being pushed into the data source until ResumeBinding is called, but does not actually prevent any events from occurring. Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent them from receiving changes to the data source. For this reason, this <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and ResumeBinding are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control. Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`."
  syntax:
    content: public void ResumeBinding ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.ResumeBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.Sort
  id: Sort
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: Sort
  nameWithType: BindingSource.Sort
  fullName: System.Windows.Forms.BindingSource.Sort
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source."
  remarks: "The Sort property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction. Columns are sorted ascending by default. Multiple columns can be separated by commas, such as `&quot;State, ZipCode DESC&quot;`.       To support sorting, the underlying list must implement the <xref:System.ComponentModel.IBindingList> or <xref:System.ComponentModel.IBindingListView> interfaces. This capability can be queried through the <xref:System.Windows.Forms.BindingSource.SupportsSorting%2A> property. Multicolumn sorting is available when the <xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A> property is `true`.       Setting the Sort property will change the internal list depending on its type:      -   If the list is of type <xref:System.ComponentModel.IBindingList>, the <xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=fullName> and <xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=fullName> properties are set in the internal list.      -   If the list is of type <xref:System.ComponentModel.IBindingListView>, the <xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=fullName> property is set.       The internal list&quot;s sort properties are only changed when the sort string is not `null`. The `get` accessor for this property will not retrieve the sort value of the internal list; instead, it will return the `set` accessor value. The value of the Sort property will persist when the data source changes."
  example:
  - "The following example shows how to use the Sort property to perform basic sorting with a <xref:System.Data.DataView>. To run this example, paste the code into a Windows Form and call `PopulateDataViewAndSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method. Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMethods#2](~/add/codesnippet/visualbasic/p-system.windows.forms.b_23_1.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMethods#2](~/add/codesnippet/csharp/p-system.windows.forms.b_23_1.cs)]  \n  \n The following example shows how to use the Sort property to perform advanced sorting with a <xref:System.Data.DataView>. To run this example, paste the code into a Windows Form and call `PopulateDataViewAndAdvancedSort` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method. Your form should import the <xref:System.Xml> and <xref:System.IO> namespaces.  \n  \n [!code-vb[System.Windows.Forms.BindingSourceMethods#4](~/add/codesnippet/visualbasic/p-system.windows.forms.b_23_2.vb)]\n [!code-cs[System.Windows.Forms.BindingSourceMethods#4](~/add/codesnippet/csharp/p-system.windows.forms.b_23_2.cs)]"
  syntax:
    content: public string Sort { get; set; }
    return:
      type: System.String
      description: "A case-sensitive string containing the column name followed by &quot;ASC&quot; (for ascending) or &quot;DESC&quot; (for descending). The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SortDescriptions
  id: SortDescriptions
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SortDescriptions
  nameWithType: BindingSource.SortDescriptions
  fullName: System.Windows.Forms.BindingSource.SortDescriptions
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the collection of sort descriptions applied to the data source."
  remarks: "If the list is not an <xref:System.ComponentModel.IBindingListView>, the SortDescriptions always returns `null`.       The <xref:System.ComponentModel.ListSortDescriptionCollection> is a read-only collection."
  syntax:
    content: public virtual System.ComponentModel.ListSortDescriptionCollection SortDescriptions { get; }
    return:
      type: System.ComponentModel.ListSortDescriptionCollection
      description: "If the data source is an <xref href=&quot;System.ComponentModel.IBindingListView&quot;></xref>, a <xref href=&quot;System.ComponentModel.ListSortDescriptionCollection&quot;></xref> that contains the sort descriptions applied to the list; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.SortDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SortDirection
  id: SortDirection
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SortDirection
  nameWithType: BindingSource.SortDirection
  fullName: System.Windows.Forms.BindingSource.SortDirection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the direction the items in the list are sorted."
  remarks: "If the underlying list is not an <xref:System.ComponentModel.IBindingList>, the SortDirection property will always return <xref:System.ComponentModel.ListSortDirection>."
  syntax:
    content: public virtual System.ComponentModel.ListSortDirection SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "One of the <xref href=&quot;System.ComponentModel.ListSortDirection&quot;></xref> values indicating the direction the list is sorted."
  overload: System.Windows.Forms.BindingSource.SortDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SortProperty
  id: SortProperty
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SortProperty
  nameWithType: BindingSource.SortProperty
  fullName: System.Windows.Forms.BindingSource.SortProperty
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> that is being used for sorting the list."
  remarks: "If the list is not an <xref:System.ComponentModel.IBindingList>, SortProperty always returns `null`."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptor SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "If the list is an <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref>, the <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> that is being used for sorting; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.SortProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SupportsAdvancedSorting
  id: SupportsAdvancedSorting
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SupportsAdvancedSorting
  nameWithType: BindingSource.SupportsAdvancedSorting
  fullName: System.Windows.Forms.BindingSource.SupportsAdvancedSorting
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the data source supports multi-column sorting."
  remarks: "If the list is not an <xref:System.ComponentModel.IBindingListView>, SupportsAdvancedSorting always returns `false`."
  syntax:
    content: public virtual bool SupportsAdvancedSorting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list is an <xref href=&quot;System.ComponentModel.IBindingListView&quot;></xref> and supports multi-column sorting; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.SupportsAdvancedSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SupportsChangeNotification
  id: SupportsChangeNotification
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SupportsChangeNotification
  nameWithType: BindingSource.SupportsChangeNotification
  fullName: System.Windows.Forms.BindingSource.SupportsChangeNotification
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the data source supports change notification."
  syntax:
    content: public virtual bool SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Windows.Forms.BindingSource.SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SupportsFiltering
  id: SupportsFiltering
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SupportsFiltering
  nameWithType: BindingSource.SupportsFiltering
  fullName: System.Windows.Forms.BindingSource.SupportsFiltering
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the data source supports filtering."
  remarks: "If the list is not an <xref:System.ComponentModel.IBindingListView>, SupportsFiltering always returns `false`."
  syntax:
    content: public virtual bool SupportsFiltering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list is an <xref href=&quot;System.ComponentModel.IBindingListView&quot;></xref> and supports filtering; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.SupportsFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SupportsSearching
  id: SupportsSearching
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SupportsSearching
  nameWithType: BindingSource.SupportsSearching
  fullName: System.Windows.Forms.BindingSource.SupportsSearching
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the data source supports searching with the <xref:System.Windows.Forms.BindingSource.Find*> method."
  remarks: "If the data source is not an <xref:System.ComponentModel.IBindingList>, SupportsSearching always returns `false`."
  example:
  - "The following code example demonstrates how to use the SupportsSearching member. For the complete example see the class overview topic.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/add/codesnippet/csharp/p-system.windows.forms.b_24_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#4](~/add/codesnippet/visualbasic/p-system.windows.forms.b_24_1.vb)]"
  syntax:
    content: public virtual bool SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list is a <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref> and supports the searching with the <xref:System.Windows.Forms.BindingSource.Find*> method; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SupportsSorting
  id: SupportsSorting
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SupportsSorting
  nameWithType: BindingSource.SupportsSorting
  fullName: System.Windows.Forms.BindingSource.SupportsSorting
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the data source supports sorting."
  remarks: "If the data source is not an <xref:System.ComponentModel.IBindingList>, the SupportsSorting property always returns `false`."
  syntax:
    content: public virtual bool SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the data source is an <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref> and supports sorting; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.SupportsSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SuspendBinding
  id: SuspendBinding
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SuspendBinding()
  nameWithType: BindingSource.SuspendBinding()
  fullName: System.Windows.Forms.BindingSource.SuspendBinding()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Suspends data binding to prevent changes from updating the bound data source."
  remarks: "SuspendBinding and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario. You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.      > [!NOTE] >  Using SuspendBinding and prevents changes from being pushed into the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring. Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event, so calling SuspendBinding will not prevent them from receiving changes to the data source. For this reason, this SuspendBinding and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control. Alternatively you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`."
  syntax:
    content: public void SuspendBinding ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.SuspendBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.SyncRoot
  id: SyncRoot
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: BindingSource.SyncRoot
  fullName: System.Windows.Forms.BindingSource.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets an object that can be used to synchronize access to the underlying list."
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the underlying list."
  overload: System.Windows.Forms.BindingSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  id: System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  nameWithType: BindingSource.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Adds the <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> to the indexes used for searching."
  remarks: "If the underlying list is an <xref:System.ComponentModel.IBindingList> type, this method will add the <xref:System.ComponentModel.PropertyDescriptor> to the indexes; otherwise, calling this method will throw a <xref:System.NotSupportedException>."
  syntax:
    content: void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "The <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> to add to the indexes used for searching."
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The underlying list is not an <xref href=&quot;System.ComponentModel.IBindingList&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  nameWithType: BindingSource.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Removes the <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> from the indexes used for searching."
  remarks: "If the underlying list is not a <xref:System.ComponentModel.IBindingList?displayProperty=fullName>, this method will always throw a <xref:System.NotSupportedException>."
  syntax:
    content: void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor prop);
    parameters:
    - id: prop
      type: System.ComponentModel.PropertyDescriptor
      description: "The <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> to remove from the indexes used for searching."
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)
  id: System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  nameWithType: BindingSource.System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Discards a pending new item from the collection."
  remarks: "The ICancelAddNew.CancelNew method rolls back a pending addition of an item previously added to the collection at the index specified by `position`. The `position` parameter is necessary because several new items can be simultaneously pending."
  syntax:
    content: void ICancelAddNew.CancelNew (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "The index of the item that was added to the collection."
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)
  id: System#ComponentModel#ICancelAddNew#EndNew(System.Int32)
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.ICancelAddNew.EndNew(Int32)
  nameWithType: BindingSource.System.ComponentModel.ICancelAddNew.EndNew(Int32)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ICancelAddNew.EndNew(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Commits a pending new item to the collection."
  remarks: "The ICancelAddNew.EndNew method commits a pending addition of an item previously added to the collection at the index specified by `position`. The `position` parameter is necessary because several new items can be simultaneously pending."
  syntax:
    content: void ICancelAddNew.EndNew (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "The index of the item that was added to the collection."
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: BindingSource.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Signals the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> that initialization is starting."
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: BindingSource.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Signals the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> that initialization is complete."
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized
  id: System#ComponentModel#ISupportInitializeNotification#IsInitialized
  isEii: true
  parent: System.Windows.Forms.BindingSource
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitializeNotification.IsInitialized
  nameWithType: BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> is initialized."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Forms.BindingSource> instance is cast to an <xref:System.ComponentModel.ISupportInitializeNotification> interface."
  syntax:
    content: bool System.ComponentModel.ISupportInitializeNotification.IsInitialized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the <xref href=&quot;System.Windows.Forms.BindingSource&quot;></xref> is initialized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MissingMethodException
  isExternal: true
  name: System.MissingMethodException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Forms.BindingSource.#ctor
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: BindingSource()
  nameWithType: BindingSource.BindingSource()
  fullName: System.Windows.Forms.BindingSource.BindingSource()
- uid: System.Windows.Forms.BindingSource.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: BindingSource(IContainer)
  nameWithType: BindingSource.BindingSource(IContainer)
  fullName: System.Windows.Forms.BindingSource.BindingSource(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.BindingSource.#ctor(System.Object,System.String)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: BindingSource(Object,String)
  nameWithType: BindingSource.BindingSource(Object,String)
  fullName: System.Windows.Forms.BindingSource.BindingSource(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.BindingSource.Add(System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Add(Object)
  nameWithType: BindingSource.Add(Object)
  fullName: System.Windows.Forms.BindingSource.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.BindingSource.AddingNew
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AddingNew
  nameWithType: BindingSource.AddingNew
  fullName: System.Windows.Forms.BindingSource.AddingNew
- uid: System.ComponentModel.AddingNewEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: AddingNewEventHandler
  nameWithType: AddingNewEventHandler
  fullName: System.ComponentModel.AddingNewEventHandler
- uid: System.Windows.Forms.BindingSource.AddNew
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AddNew()
  nameWithType: BindingSource.AddNew()
  fullName: System.Windows.Forms.BindingSource.AddNew()
- uid: System.Windows.Forms.BindingSource.AllowEdit
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AllowEdit
  nameWithType: BindingSource.AllowEdit
  fullName: System.Windows.Forms.BindingSource.AllowEdit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.BindingSource.AllowNew
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AllowNew
  nameWithType: BindingSource.AllowNew
  fullName: System.Windows.Forms.BindingSource.AllowNew
- uid: System.Windows.Forms.BindingSource.AllowRemove
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AllowRemove
  nameWithType: BindingSource.AllowRemove
  fullName: System.Windows.Forms.BindingSource.AllowRemove
- uid: System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ApplySort(ListSortDescriptionCollection)
  nameWithType: BindingSource.ApplySort(ListSortDescriptionCollection)
  fullName: System.Windows.Forms.BindingSource.ApplySort(ListSortDescriptionCollection)
- uid: System.ComponentModel.ListSortDescriptionCollection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDescriptionCollection
  nameWithType: ListSortDescriptionCollection
  fullName: System.ComponentModel.ListSortDescriptionCollection
- uid: System.Windows.Forms.BindingSource.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: BindingSource.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.Windows.Forms.BindingSource.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.Windows.Forms.BindingSource.BindingComplete
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: BindingComplete
  nameWithType: BindingSource.BindingComplete
  fullName: System.Windows.Forms.BindingSource.BindingComplete
- uid: System.Windows.Forms.BindingCompleteEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: BindingCompleteEventHandler
  nameWithType: BindingCompleteEventHandler
  fullName: System.Windows.Forms.BindingCompleteEventHandler
- uid: System.Windows.Forms.BindingSource.CancelEdit
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingSource.CancelEdit()
  fullName: System.Windows.Forms.BindingSource.CancelEdit()
- uid: System.Windows.Forms.BindingSource.Clear
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Clear()
  nameWithType: BindingSource.Clear()
  fullName: System.Windows.Forms.BindingSource.Clear()
- uid: System.Windows.Forms.BindingSource.Contains(System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Contains(Object)
  nameWithType: BindingSource.Contains(Object)
  fullName: System.Windows.Forms.BindingSource.Contains(Object)
- uid: System.Windows.Forms.BindingSource.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: BindingSource.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.BindingSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.BindingSource.Count
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Count
  nameWithType: BindingSource.Count
  fullName: System.Windows.Forms.BindingSource.Count
- uid: System.Windows.Forms.BindingSource.CurrencyManager
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CurrencyManager
  nameWithType: BindingSource.CurrencyManager
  fullName: System.Windows.Forms.BindingSource.CurrencyManager
- uid: System.Windows.Forms.CurrencyManager
  parent: System.Windows.Forms
  isExternal: false
  name: CurrencyManager
  nameWithType: CurrencyManager
  fullName: System.Windows.Forms.CurrencyManager
- uid: System.Windows.Forms.BindingSource.Current
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Current
  nameWithType: BindingSource.Current
  fullName: System.Windows.Forms.BindingSource.Current
- uid: System.Windows.Forms.BindingSource.CurrentChanged
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CurrentChanged
  nameWithType: BindingSource.CurrentChanged
  fullName: System.Windows.Forms.BindingSource.CurrentChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.BindingSource.CurrentItemChanged
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CurrentItemChanged
  nameWithType: BindingSource.CurrentItemChanged
  fullName: System.Windows.Forms.BindingSource.CurrentItemChanged
- uid: System.Windows.Forms.BindingSource.DataError
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataError
  nameWithType: BindingSource.DataError
  fullName: System.Windows.Forms.BindingSource.DataError
- uid: System.Windows.Forms.BindingManagerDataErrorEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerDataErrorEventHandler
  nameWithType: BindingManagerDataErrorEventHandler
  fullName: System.Windows.Forms.BindingManagerDataErrorEventHandler
- uid: System.Windows.Forms.BindingSource.DataMember
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataMember
  nameWithType: BindingSource.DataMember
  fullName: System.Windows.Forms.BindingSource.DataMember
- uid: System.Windows.Forms.BindingSource.DataMemberChanged
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataMemberChanged
  nameWithType: BindingSource.DataMemberChanged
  fullName: System.Windows.Forms.BindingSource.DataMemberChanged
- uid: System.Windows.Forms.BindingSource.DataSource
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataSource
  nameWithType: BindingSource.DataSource
  fullName: System.Windows.Forms.BindingSource.DataSource
- uid: System.Windows.Forms.BindingSource.DataSourceChanged
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: BindingSource.DataSourceChanged
  fullName: System.Windows.Forms.BindingSource.DataSourceChanged
- uid: System.Windows.Forms.BindingSource.Dispose(System.Boolean)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: BindingSource.Dispose(Boolean)
  fullName: System.Windows.Forms.BindingSource.Dispose(Boolean)
- uid: System.Windows.Forms.BindingSource.EndEdit
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: EndEdit()
  nameWithType: BindingSource.EndEdit()
  fullName: System.Windows.Forms.BindingSource.EndEdit()
- uid: System.Windows.Forms.BindingSource.Filter
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Filter
  nameWithType: BindingSource.Filter
  fullName: System.Windows.Forms.BindingSource.Filter
- uid: System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Find(PropertyDescriptor,Object)
  nameWithType: BindingSource.Find(PropertyDescriptor,Object)
  fullName: System.Windows.Forms.BindingSource.Find(PropertyDescriptor,Object)
- uid: System.Windows.Forms.BindingSource.Find(System.String,System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Find(String,Object)
  nameWithType: BindingSource.Find(String,Object)
  fullName: System.Windows.Forms.BindingSource.Find(String,Object)
- uid: System.Windows.Forms.BindingSource.GetEnumerator
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: BindingSource.GetEnumerator()
  fullName: System.Windows.Forms.BindingSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: BindingSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Windows.Forms.BindingSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: BindingSource.GetListName(PropertyDescriptor[])
  fullName: System.Windows.Forms.BindingSource.GetListName(PropertyDescriptor[])
- uid: System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(System.String)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetRelatedCurrencyManager(String)
  nameWithType: BindingSource.GetRelatedCurrencyManager(String)
  fullName: System.Windows.Forms.BindingSource.GetRelatedCurrencyManager(String)
- uid: System.Windows.Forms.BindingSource.IndexOf(System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IndexOf(Object)
  nameWithType: BindingSource.IndexOf(Object)
  fullName: System.Windows.Forms.BindingSource.IndexOf(Object)
- uid: System.Windows.Forms.BindingSource.Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: BindingSource.Insert(Int32,Object)
  fullName: System.Windows.Forms.BindingSource.Insert(Int32,Object)
- uid: System.Windows.Forms.BindingSource.IsBindingSuspended
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsBindingSuspended
  nameWithType: BindingSource.IsBindingSuspended
  fullName: System.Windows.Forms.BindingSource.IsBindingSuspended
- uid: System.Windows.Forms.BindingSource.IsFixedSize
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsFixedSize
  nameWithType: BindingSource.IsFixedSize
  fullName: System.Windows.Forms.BindingSource.IsFixedSize
- uid: System.Windows.Forms.BindingSource.IsReadOnly
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingSource.IsReadOnly
  fullName: System.Windows.Forms.BindingSource.IsReadOnly
- uid: System.Windows.Forms.BindingSource.IsSorted
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsSorted
  nameWithType: BindingSource.IsSorted
  fullName: System.Windows.Forms.BindingSource.IsSorted
- uid: System.Windows.Forms.BindingSource.IsSynchronized
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsSynchronized
  nameWithType: BindingSource.IsSynchronized
  fullName: System.Windows.Forms.BindingSource.IsSynchronized
- uid: System.Windows.Forms.BindingSource.Item(System.Int32)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Item(Int32)
  nameWithType: BindingSource.Item(Int32)
  fullName: System.Windows.Forms.BindingSource.Item(Int32)
- uid: System.Windows.Forms.BindingSource.List
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: List
  nameWithType: BindingSource.List
  fullName: System.Windows.Forms.BindingSource.List
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.BindingSource.ListChanged
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ListChanged
  nameWithType: BindingSource.ListChanged
  fullName: System.Windows.Forms.BindingSource.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Windows.Forms.BindingSource.MoveFirst
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MoveFirst()
  nameWithType: BindingSource.MoveFirst()
  fullName: System.Windows.Forms.BindingSource.MoveFirst()
- uid: System.Windows.Forms.BindingSource.MoveLast
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MoveLast()
  nameWithType: BindingSource.MoveLast()
  fullName: System.Windows.Forms.BindingSource.MoveLast()
- uid: System.Windows.Forms.BindingSource.MoveNext
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MoveNext()
  nameWithType: BindingSource.MoveNext()
  fullName: System.Windows.Forms.BindingSource.MoveNext()
- uid: System.Windows.Forms.BindingSource.MovePrevious
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MovePrevious()
  nameWithType: BindingSource.MovePrevious()
  fullName: System.Windows.Forms.BindingSource.MovePrevious()
- uid: System.Windows.Forms.BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnAddingNew(AddingNewEventArgs)
  nameWithType: BindingSource.OnAddingNew(AddingNewEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnAddingNew(AddingNewEventArgs)
- uid: System.ComponentModel.AddingNewEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: AddingNewEventArgs
  nameWithType: AddingNewEventArgs
  fullName: System.ComponentModel.AddingNewEventArgs
- uid: System.Windows.Forms.BindingSource.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnBindingComplete(BindingCompleteEventArgs)
  nameWithType: BindingSource.OnBindingComplete(BindingCompleteEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnBindingComplete(BindingCompleteEventArgs)
- uid: System.Windows.Forms.BindingCompleteEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: BindingCompleteEventArgs
  nameWithType: BindingCompleteEventArgs
  fullName: System.Windows.Forms.BindingCompleteEventArgs
- uid: System.Windows.Forms.BindingSource.OnCurrentChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnCurrentChanged(EventArgs)
  nameWithType: BindingSource.OnCurrentChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnCurrentChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.BindingSource.OnCurrentItemChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnCurrentItemChanged(EventArgs)
  nameWithType: BindingSource.OnCurrentItemChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnCurrentItemChanged(EventArgs)
- uid: System.Windows.Forms.BindingSource.OnDataError(System.Windows.Forms.BindingManagerDataErrorEventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnDataError(BindingManagerDataErrorEventArgs)
  nameWithType: BindingSource.OnDataError(BindingManagerDataErrorEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnDataError(BindingManagerDataErrorEventArgs)
- uid: System.Windows.Forms.BindingManagerDataErrorEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: BindingManagerDataErrorEventArgs
  nameWithType: BindingManagerDataErrorEventArgs
  fullName: System.Windows.Forms.BindingManagerDataErrorEventArgs
- uid: System.Windows.Forms.BindingSource.OnDataMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnDataMemberChanged(EventArgs)
  nameWithType: BindingSource.OnDataMemberChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnDataMemberChanged(EventArgs)
- uid: System.Windows.Forms.BindingSource.OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnDataSourceChanged(EventArgs)
  nameWithType: BindingSource.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnDataSourceChanged(EventArgs)
- uid: System.Windows.Forms.BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnListChanged(ListChangedEventArgs)
  nameWithType: BindingSource.OnListChanged(ListChangedEventArgs)
  fullName: System.Windows.Forms.BindingSource.OnListChanged(ListChangedEventArgs)
- uid: System.ComponentModel.ListChangedEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventArgs
  nameWithType: ListChangedEventArgs
  fullName: System.ComponentModel.ListChangedEventArgs
- uid: System.Windows.Forms.BindingSource.OnPositionChanged(System.EventArgs)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnPositionChanged(EventArgs)
  nameWithType: BindingSource.OnPositionChanged(EventArgs)
  fullName: System.Windows.Forms.BindingSource.OnPositionChanged(EventArgs)
- uid: System.Windows.Forms.BindingSource.Position
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Position
  nameWithType: BindingSource.Position
  fullName: System.Windows.Forms.BindingSource.Position
- uid: System.Windows.Forms.BindingSource.PositionChanged
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: PositionChanged
  nameWithType: BindingSource.PositionChanged
  fullName: System.Windows.Forms.BindingSource.PositionChanged
- uid: System.Windows.Forms.BindingSource.RaiseListChangedEvents
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RaiseListChangedEvents
  nameWithType: BindingSource.RaiseListChangedEvents
  fullName: System.Windows.Forms.BindingSource.RaiseListChangedEvents
- uid: System.Windows.Forms.BindingSource.Remove(System.Object)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Remove(Object)
  nameWithType: BindingSource.Remove(Object)
  fullName: System.Windows.Forms.BindingSource.Remove(Object)
- uid: System.Windows.Forms.BindingSource.RemoveAt(System.Int32)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: BindingSource.RemoveAt(Int32)
  fullName: System.Windows.Forms.BindingSource.RemoveAt(Int32)
- uid: System.Windows.Forms.BindingSource.RemoveCurrent
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveCurrent()
  nameWithType: BindingSource.RemoveCurrent()
  fullName: System.Windows.Forms.BindingSource.RemoveCurrent()
- uid: System.Windows.Forms.BindingSource.RemoveFilter
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveFilter()
  nameWithType: BindingSource.RemoveFilter()
  fullName: System.Windows.Forms.BindingSource.RemoveFilter()
- uid: System.Windows.Forms.BindingSource.RemoveSort
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveSort()
  nameWithType: BindingSource.RemoveSort()
  fullName: System.Windows.Forms.BindingSource.RemoveSort()
- uid: System.Windows.Forms.BindingSource.ResetAllowNew
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetAllowNew()
  nameWithType: BindingSource.ResetAllowNew()
  fullName: System.Windows.Forms.BindingSource.ResetAllowNew()
- uid: System.Windows.Forms.BindingSource.ResetBindings(System.Boolean)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetBindings(Boolean)
  nameWithType: BindingSource.ResetBindings(Boolean)
  fullName: System.Windows.Forms.BindingSource.ResetBindings(Boolean)
- uid: System.Windows.Forms.BindingSource.ResetCurrentItem
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetCurrentItem()
  nameWithType: BindingSource.ResetCurrentItem()
  fullName: System.Windows.Forms.BindingSource.ResetCurrentItem()
- uid: System.Windows.Forms.BindingSource.ResetItem(System.Int32)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetItem(Int32)
  nameWithType: BindingSource.ResetItem(Int32)
  fullName: System.Windows.Forms.BindingSource.ResetItem(Int32)
- uid: System.Windows.Forms.BindingSource.ResumeBinding
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResumeBinding()
  nameWithType: BindingSource.ResumeBinding()
  fullName: System.Windows.Forms.BindingSource.ResumeBinding()
- uid: System.Windows.Forms.BindingSource.Sort
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Sort
  nameWithType: BindingSource.Sort
  fullName: System.Windows.Forms.BindingSource.Sort
- uid: System.Windows.Forms.BindingSource.SortDescriptions
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SortDescriptions
  nameWithType: BindingSource.SortDescriptions
  fullName: System.Windows.Forms.BindingSource.SortDescriptions
- uid: System.Windows.Forms.BindingSource.SortDirection
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SortDirection
  nameWithType: BindingSource.SortDirection
  fullName: System.Windows.Forms.BindingSource.SortDirection
- uid: System.Windows.Forms.BindingSource.SortProperty
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SortProperty
  nameWithType: BindingSource.SortProperty
  fullName: System.Windows.Forms.BindingSource.SortProperty
- uid: System.Windows.Forms.BindingSource.SupportsAdvancedSorting
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsAdvancedSorting
  nameWithType: BindingSource.SupportsAdvancedSorting
  fullName: System.Windows.Forms.BindingSource.SupportsAdvancedSorting
- uid: System.Windows.Forms.BindingSource.SupportsChangeNotification
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: BindingSource.SupportsChangeNotification
  fullName: System.Windows.Forms.BindingSource.SupportsChangeNotification
- uid: System.Windows.Forms.BindingSource.SupportsFiltering
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsFiltering
  nameWithType: BindingSource.SupportsFiltering
  fullName: System.Windows.Forms.BindingSource.SupportsFiltering
- uid: System.Windows.Forms.BindingSource.SupportsSearching
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsSearching
  nameWithType: BindingSource.SupportsSearching
  fullName: System.Windows.Forms.BindingSource.SupportsSearching
- uid: System.Windows.Forms.BindingSource.SupportsSorting
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsSorting
  nameWithType: BindingSource.SupportsSorting
  fullName: System.Windows.Forms.BindingSource.SupportsSorting
- uid: System.Windows.Forms.BindingSource.SuspendBinding
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SuspendBinding()
  nameWithType: BindingSource.SuspendBinding()
  fullName: System.Windows.Forms.BindingSource.SuspendBinding()
- uid: System.Windows.Forms.BindingSource.SyncRoot
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SyncRoot
  nameWithType: BindingSource.SyncRoot
  fullName: System.Windows.Forms.BindingSource.SyncRoot
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  nameWithType: BindingSource.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  nameWithType: BindingSource.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew(System.Int32)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  nameWithType: BindingSource.System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ICancelAddNew.CancelNew(Int32)
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew(System.Int32)
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ICancelAddNew.EndNew(Int32)
  nameWithType: BindingSource.System.ComponentModel.ICancelAddNew.EndNew(Int32)
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ICancelAddNew.EndNew(Int32)
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: BindingSource.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: BindingSource.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ISupportInitializeNotification.IsInitialized
  nameWithType: BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized
  fullName: System.Windows.Forms.BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized
- uid: System.Windows.Forms.BindingSource.#ctor*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: BindingSource
  nameWithType: BindingSource.BindingSource
- uid: System.Windows.Forms.BindingSource.Add*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Add
  nameWithType: BindingSource.Add
- uid: System.Windows.Forms.BindingSource.AddNew*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AddNew
  nameWithType: BindingSource.AddNew
- uid: System.Windows.Forms.BindingSource.AllowEdit*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AllowEdit
  nameWithType: BindingSource.AllowEdit
- uid: System.Windows.Forms.BindingSource.AllowNew*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AllowNew
  nameWithType: BindingSource.AllowNew
- uid: System.Windows.Forms.BindingSource.AllowRemove*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: AllowRemove
  nameWithType: BindingSource.AllowRemove
- uid: System.Windows.Forms.BindingSource.ApplySort*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ApplySort
  nameWithType: BindingSource.ApplySort
- uid: System.Windows.Forms.BindingSource.CancelEdit*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CancelEdit
  nameWithType: BindingSource.CancelEdit
- uid: System.Windows.Forms.BindingSource.Clear*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Clear
  nameWithType: BindingSource.Clear
- uid: System.Windows.Forms.BindingSource.Contains*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Contains
  nameWithType: BindingSource.Contains
- uid: System.Windows.Forms.BindingSource.CopyTo*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CopyTo
  nameWithType: BindingSource.CopyTo
- uid: System.Windows.Forms.BindingSource.Count*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Count
  nameWithType: BindingSource.Count
- uid: System.Windows.Forms.BindingSource.CurrencyManager*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: CurrencyManager
  nameWithType: BindingSource.CurrencyManager
- uid: System.Windows.Forms.BindingSource.Current*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Current
  nameWithType: BindingSource.Current
- uid: System.Windows.Forms.BindingSource.DataMember*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataMember
  nameWithType: BindingSource.DataMember
- uid: System.Windows.Forms.BindingSource.DataSource*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: DataSource
  nameWithType: BindingSource.DataSource
- uid: System.Windows.Forms.BindingSource.Dispose*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Dispose
  nameWithType: BindingSource.Dispose
- uid: System.Windows.Forms.BindingSource.EndEdit*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: EndEdit
  nameWithType: BindingSource.EndEdit
- uid: System.Windows.Forms.BindingSource.Filter*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Filter
  nameWithType: BindingSource.Filter
- uid: System.Windows.Forms.BindingSource.Find*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Find
  nameWithType: BindingSource.Find
- uid: System.Windows.Forms.BindingSource.GetEnumerator*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetEnumerator
  nameWithType: BindingSource.GetEnumerator
- uid: System.Windows.Forms.BindingSource.GetItemProperties*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetItemProperties
  nameWithType: BindingSource.GetItemProperties
- uid: System.Windows.Forms.BindingSource.GetListName*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetListName
  nameWithType: BindingSource.GetListName
- uid: System.Windows.Forms.BindingSource.GetRelatedCurrencyManager*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: GetRelatedCurrencyManager
  nameWithType: BindingSource.GetRelatedCurrencyManager
- uid: System.Windows.Forms.BindingSource.IndexOf*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IndexOf
  nameWithType: BindingSource.IndexOf
- uid: System.Windows.Forms.BindingSource.Insert*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Insert
  nameWithType: BindingSource.Insert
- uid: System.Windows.Forms.BindingSource.IsBindingSuspended*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsBindingSuspended
  nameWithType: BindingSource.IsBindingSuspended
- uid: System.Windows.Forms.BindingSource.IsFixedSize*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsFixedSize
  nameWithType: BindingSource.IsFixedSize
- uid: System.Windows.Forms.BindingSource.IsReadOnly*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsReadOnly
  nameWithType: BindingSource.IsReadOnly
- uid: System.Windows.Forms.BindingSource.IsSorted*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsSorted
  nameWithType: BindingSource.IsSorted
- uid: System.Windows.Forms.BindingSource.IsSynchronized*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: IsSynchronized
  nameWithType: BindingSource.IsSynchronized
- uid: System.Windows.Forms.BindingSource.Item*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Item
  nameWithType: BindingSource.Item
- uid: System.Windows.Forms.BindingSource.List*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: List
  nameWithType: BindingSource.List
- uid: System.Windows.Forms.BindingSource.MoveFirst*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MoveFirst
  nameWithType: BindingSource.MoveFirst
- uid: System.Windows.Forms.BindingSource.MoveLast*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MoveLast
  nameWithType: BindingSource.MoveLast
- uid: System.Windows.Forms.BindingSource.MoveNext*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MoveNext
  nameWithType: BindingSource.MoveNext
- uid: System.Windows.Forms.BindingSource.MovePrevious*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: MovePrevious
  nameWithType: BindingSource.MovePrevious
- uid: System.Windows.Forms.BindingSource.OnAddingNew*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnAddingNew
  nameWithType: BindingSource.OnAddingNew
- uid: System.Windows.Forms.BindingSource.OnBindingComplete*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnBindingComplete
  nameWithType: BindingSource.OnBindingComplete
- uid: System.Windows.Forms.BindingSource.OnCurrentChanged*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnCurrentChanged
  nameWithType: BindingSource.OnCurrentChanged
- uid: System.Windows.Forms.BindingSource.OnCurrentItemChanged*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnCurrentItemChanged
  nameWithType: BindingSource.OnCurrentItemChanged
- uid: System.Windows.Forms.BindingSource.OnDataError*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnDataError
  nameWithType: BindingSource.OnDataError
- uid: System.Windows.Forms.BindingSource.OnDataMemberChanged*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnDataMemberChanged
  nameWithType: BindingSource.OnDataMemberChanged
- uid: System.Windows.Forms.BindingSource.OnDataSourceChanged*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnDataSourceChanged
  nameWithType: BindingSource.OnDataSourceChanged
- uid: System.Windows.Forms.BindingSource.OnListChanged*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnListChanged
  nameWithType: BindingSource.OnListChanged
- uid: System.Windows.Forms.BindingSource.OnPositionChanged*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: OnPositionChanged
  nameWithType: BindingSource.OnPositionChanged
- uid: System.Windows.Forms.BindingSource.Position*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Position
  nameWithType: BindingSource.Position
- uid: System.Windows.Forms.BindingSource.RaiseListChangedEvents*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RaiseListChangedEvents
  nameWithType: BindingSource.RaiseListChangedEvents
- uid: System.Windows.Forms.BindingSource.Remove*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Remove
  nameWithType: BindingSource.Remove
- uid: System.Windows.Forms.BindingSource.RemoveAt*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveAt
  nameWithType: BindingSource.RemoveAt
- uid: System.Windows.Forms.BindingSource.RemoveCurrent*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveCurrent
  nameWithType: BindingSource.RemoveCurrent
- uid: System.Windows.Forms.BindingSource.RemoveFilter*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveFilter
  nameWithType: BindingSource.RemoveFilter
- uid: System.Windows.Forms.BindingSource.RemoveSort*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: RemoveSort
  nameWithType: BindingSource.RemoveSort
- uid: System.Windows.Forms.BindingSource.ResetAllowNew*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetAllowNew
  nameWithType: BindingSource.ResetAllowNew
- uid: System.Windows.Forms.BindingSource.ResetBindings*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetBindings
  nameWithType: BindingSource.ResetBindings
- uid: System.Windows.Forms.BindingSource.ResetCurrentItem*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetCurrentItem
  nameWithType: BindingSource.ResetCurrentItem
- uid: System.Windows.Forms.BindingSource.ResetItem*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResetItem
  nameWithType: BindingSource.ResetItem
- uid: System.Windows.Forms.BindingSource.ResumeBinding*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: ResumeBinding
  nameWithType: BindingSource.ResumeBinding
- uid: System.Windows.Forms.BindingSource.Sort*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: Sort
  nameWithType: BindingSource.Sort
- uid: System.Windows.Forms.BindingSource.SortDescriptions*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SortDescriptions
  nameWithType: BindingSource.SortDescriptions
- uid: System.Windows.Forms.BindingSource.SortDirection*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SortDirection
  nameWithType: BindingSource.SortDirection
- uid: System.Windows.Forms.BindingSource.SortProperty*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SortProperty
  nameWithType: BindingSource.SortProperty
- uid: System.Windows.Forms.BindingSource.SupportsAdvancedSorting*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsAdvancedSorting
  nameWithType: BindingSource.SupportsAdvancedSorting
- uid: System.Windows.Forms.BindingSource.SupportsChangeNotification*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: BindingSource.SupportsChangeNotification
- uid: System.Windows.Forms.BindingSource.SupportsFiltering*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsFiltering
  nameWithType: BindingSource.SupportsFiltering
- uid: System.Windows.Forms.BindingSource.SupportsSearching*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsSearching
  nameWithType: BindingSource.SupportsSearching
- uid: System.Windows.Forms.BindingSource.SupportsSorting*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SupportsSorting
  nameWithType: BindingSource.SupportsSorting
- uid: System.Windows.Forms.BindingSource.SuspendBinding*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SuspendBinding
  nameWithType: BindingSource.SuspendBinding
- uid: System.Windows.Forms.BindingSource.SyncRoot*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: SyncRoot
  nameWithType: BindingSource.SyncRoot
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#AddIndex*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.IBindingList.AddIndex
  nameWithType: BindingSource.System.ComponentModel.IBindingList.AddIndex
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#IBindingList#RemoveIndex*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveIndex
  nameWithType: BindingSource.System.ComponentModel.IBindingList.RemoveIndex
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#CancelNew*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ICancelAddNew.CancelNew
  nameWithType: BindingSource.System.ComponentModel.ICancelAddNew.CancelNew
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ICancelAddNew#EndNew*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ICancelAddNew.EndNew
  nameWithType: BindingSource.System.ComponentModel.ICancelAddNew.EndNew
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: BindingSource.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: BindingSource.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Forms.BindingSource.System#ComponentModel#ISupportInitializeNotification#IsInitialized*
  parent: System.Windows.Forms.BindingSource
  isExternal: false
  name: System.ComponentModel.ISupportInitializeNotification.IsInitialized
  nameWithType: BindingSource.System.ComponentModel.ISupportInitializeNotification.IsInitialized
