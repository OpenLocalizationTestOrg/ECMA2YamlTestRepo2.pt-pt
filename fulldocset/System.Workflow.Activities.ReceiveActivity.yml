### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ReceiveActivity
  id: ReceiveActivity
  children:
  - System.Workflow.Activities.ReceiveActivity.#ctor
  - System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  - System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  - System.Workflow.Activities.ReceiveActivity.Context
  - System.Workflow.Activities.ReceiveActivity.ContextToken
  - System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  - System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.FaultMessage
  - System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  - System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  - System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.ReceiveActivity.InitializeProperties
  - System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.OperationValidation
  - System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  - System.Workflow.Activities.ReceiveActivity.ParameterBindings
  - System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  - System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  langs:
  - csharp
  name: ReceiveActivity
  nameWithType: ReceiveActivity
  fullName: System.Workflow.Activities.ReceiveActivity
  type: Class
  summary: "Serviço atividade que implementa uma operação definida por um [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] contrato de serviço."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]A atividade de ReceiveActivity é utilizada quando um fluxo de trabalho implementa uma operação definida uma [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] contrato de serviço. O ReceiveActivity pode implementar uma operação a partir de um contrato de serviço já definidos, ou pode definir o contrato de serviço e a operação dentro do fluxo de trabalho. A última opção é conhecido como um contrato de fluxo de trabalho primeiro.       A atividade de ReceiveActivity suporta um conjunto de padrões do exchange de mensagem predefinida. Incluem estes padrões: - unidirecional receber o cliente que envia a mensagem não espera que o serviço para enviar uma resposta. A operação do contrato deve ter um tipo de retorno void.      -Receba o pedido - resposta depois de uma mensagem é recebida e processada pela atividade ReceiveActivity, uma resposta é enviado para o cliente de envio. Quando a operação do contrato tem um tipo de retorno void, uma confirmação é enviada para a atividade de envio.      -Receber o pedido - falhas de envio depois de uma mensagem é recebida e processada por atividade ReceiveActivity, uma resposta ou uma falha são enviados para o cliente.      > [!NOTE] > Para garantir que persistência efetua corretamente e que não sejam mantidas mensagens transitórias, certifique-se de que as atividades subordinadas do ReceiveActivity não são mantidas por si mesmos. Isto pode ocorrer se atividades subordinadas aceda Inativas quando foi criado um fornecedor de persistência com `UnloadOnIdle` definido como `true`, para a instância.      > [!NOTE] > Esta atividade faz parte de [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. A atividade equivalente em [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], consulte <xref:System.ServiceModel.Activities.Receive>.</xref:System.ServiceModel.Activities.Receive>"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))]

      public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> classe."
  remarks: "O <xref:System.Workflow.Activities.ReceiveActivity>construtor normalmente é invocado no ficheiro code-junto criado pelo estruturador de fluxo de trabalho.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#11](~/add/codesnippet/csharp/receiveactivity/snippets.cs#11)]"
  syntax:
    content: public ReceiveActivity ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> classe, ao inicializar a respetiva <xref:System.Workflow.ComponentModel.Activity.Name*>propriedade.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  remarks: "O <xref:System.Workflow.Activities.ReceiveActivity>construtor normalmente é invocado no ficheiro code-junto criado pelo estruturador de fluxo de trabalho.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  \n  \n [!code-cs[ReceiveActivity#12](~/add/codesnippet/csharp/receiveactivity/snippets.cs#12)]"
  syntax:
    content: public ReceiveActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome a atribuir à instância de atividade."
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "A adicionar."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  id: CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Obtém ou define se a operação provoca uma nova instância de serviço de fluxo de trabalho a ser criado."
  remarks: "A <xref:System.Workflow.Activities.ReceiveActivity>atividade que tenha CanCreateInstance definido como `true` representa uma operação de serviço que, quando foi invocado por um cliente de serviço sem fazer parte de uma conversação, faz com que uma nova instância do fluxo de trabalho de serviço a ser criado.</xref:System.Workflow.Activities.ReceiveActivity>       Serviço fluxos de trabalho que não têm um <xref:System.Workflow.Activities.ReceiveActivity>atividade com CanCreateInstance definida como `true` não é possível instanciar por um cliente através de uma invocação de operação de serviço.</xref:System.Workflow.Activities.ReceiveActivity> Esses fluxos de trabalho podem ser criados utilizando o <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>método associada <xref:System.Workflow.Runtime.WorkflowRuntime>objeto.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>       O valor predefinido para esta propriedade é `false`."
  example:
  - "The following example shows how to set the `CanCreateInstance` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#0](~/add/codesnippet/csharp/receiveactivity/snippets.cs#0)]"
  syntax:
    content: public bool CanCreateInstance { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for criada uma nova instância de fluxo de trabalho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Context
  id: Context
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Obtém as informações de contexto para a atividade."
  remarks: "Informações de contexto são utilizadas para comunicação entre o cliente e o serviço que está a comunicar com e inclui essas coisas como identificação de correlação."
  example:
  - "The following example shows how to access the `Context` property.  \n  \n [!code-cs[ReceiveActivity#17](~/add/codesnippet/csharp/receiveactivity/snippets.cs#17)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A &lt;xref:System.Collections.Generic.IDictionary%602&gt; objeto que contém informações de contexto para a atividade."
  overload: System.Workflow.Activities.ReceiveActivity.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  id: ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Representa um token que pode ser utilizado para especificar o contexto que deve ser utilizado para correlacionar exchange entre uma <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade e o cliente que está a comunicar com a atividade."
  remarks: "Cada ContextToken está definido no âmbito de uma atividade do proprietário. Os utilizadores podem modelo dois tokens de contexto distintas com o mesmo nome mas âmbitos de proprietário diferente. O valor de contextos de associados a estes tokens de contexto são diferentes no tempo de execução.       Por predefinição, cada fluxo de trabalho tem um token de contexto de raiz implícita, um âmbito ao nível de atividade raiz. O nome do token de contexto de raiz é (RootContext) e o <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A>é `null`.</xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> Se um <xref:System.Workflow.Activities.ReceiveActivity>atividade não tem um ContextToken associada, o token de contexto de raiz é utilizado.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following code example shows how to access the `ContextToken` property. This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#1](~/add/codesnippet/csharp/receiveactivity/snippets.cs#1)]"
  syntax:
    content: public System.Workflow.Activities.ContextToken ContextToken { get; set; }
    return:
      type: System.Workflow.Activities.ContextToken
      description: "A <xref href=&quot;System.Workflow.Activities.ContextToken&quot;> </xref> que pode ser utilizada para correlação."
  overload: System.Workflow.Activities.ReceiveActivity.ContextToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "A adicionar."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  id: FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A exceção que é devolvida quando uma atividade receive conclusão da execução."
  remarks: "Se a propriedade FaultMessage estiver definida como uma instância do tipo <xref:System.ServiceModel.FaultException>, a falha é devolvida ao cliente após a conclusão.</xref:System.ServiceModel.FaultException>       Se é emitida uma exceção durante a execução de atividade e a propriedade FaultMessage está definida, as falhas especificado é devolvida ao cliente. Se é emitida uma exceção durante a execução de atividade e a propriedade FaultMessage está definida e a operação associada tem uma <xref:System.ServiceModel.FaultContractAttribute>atributo que especifica o tipo de uma falha que coincida com a propriedade FaultMessage, em seguida, o canal não está a falhar e o cliente ainda pode comunicar com o servidor.</xref:System.ServiceModel.FaultContractAttribute> Se a propriedade FaultMessage não estiver definida, a exceção iniciada é devolvida como uma falha ao cliente."
  example:
  - "The following code sample shows how to access the `FaultMessage` property.  \n  \n [!code-cs[ReceiveActivity#2](~/add/codesnippet/csharp/receiveactivity/snippets.cs#2)]"
  syntax:
    content: public System.ServiceModel.FaultException FaultMessage { get; set; }
    return:
      type: System.ServiceModel.FaultException
      description: "A <xref:System.ServiceModel.FaultException>objeto que contém o texto da mensagem de falha e os detalhes.</xref:System.ServiceModel.FaultException>"
  overload: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  id: FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que visa a <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>propriedade.</xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>"
  remarks: "Esta propriedade de dependência pode ser utilizada para configurar um vínculo entre a atividade receive <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>propriedade e um fluxo de trabalho público propriedade/campo do tipo <xref:System.ServiceModel.FaultException>ou propriedade/campo público para outra atividade do mesmo tipo.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       Esta propriedade de dependência também pode ser utilizada para definir o valor associado a <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>propriedade de um <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       Esta propriedade de dependência também pode ser utilizada para obter o enlace ou valor associado a <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>propriedade o <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Método estático que devolve informações de contexto de uma instância de atividade e o token de contexto."
  remarks: "Informações de contexto são utilizadas para comunicação entre o cliente e o serviço que está a comunicar com e inclui essas coisas como identificação de correlação."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#13](~/add/codesnippet/csharp/receiveactivity/snippets.cs#13)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Instância de atividade que for solicitadas informações de contexto."
    - id: contextToken
      type: System.Workflow.Activities.ContextToken
      description: "O token de contexto utilizado pela atividade."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Um dicionário com base em coleção que contenha <xref:System.Xml.XmlQualifiedName>chaves e os respetivos associado <xref:System.String>valores.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Método estático que devolve informações de contexto de uma instância de atividade e o token de contexto."
  remarks: "Informações de contexto são utilizadas para comunicação entre o cliente e o serviço que está a comunicar com e inclui essas coisas como identificação de correlação."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#15](~/add/codesnippet/csharp/receiveactivity/snippets.cs#15)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Instância de atividade que for solicitadas informações de contexto."
    - id: contextName
      type: System.String
      description: "Nome do token de contexto utilizado pela atividade."
    - id: ownerActivityName
      type: System.String
      description: "O nome do nome de atividade do proprietário."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Uma coleção com base no dicionário que contém <xref:System.Xml.XmlQualifiedName>chaves e os respetivos associado <xref:System.String>valores.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  id: GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Método estático que devolve informações de contexto para o contexto de raiz associado à instância de uma determinada atividade. Informações de contexto são utilizadas para comunicação entre uma aplicação de anfitrião e o serviço de fluxo de trabalho."
  remarks: "Informações de contexto são utilizadas para comunicação entre o cliente e o serviço que está a comunicar com e inclui essas coisas como identificação de correlação."
  example:
  - "The following example shows how to use the `GetRootContext` method.  \n  \n [!code-cs[ReceiveActivity#16](~/add/codesnippet/csharp/receiveactivity/snippets.cs#16)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetRootContext (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "A instância de atividade subordinada."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Uma coleção com base no dicionário que contém <xref:System.Xml.XmlQualifiedName>chaves e os respetivos associado <xref:System.String>valores que representam as informações de contexto para um contexto de raiz.</xref:System.String> </xref:System.Xml.XmlQualifiedName> Barrando lógica de criação de instância personalizada, a mensagem que aciona a criação de uma nova instância é recebida no contexto de raiz."
  overload: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  id: GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Devolve o <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> atributos para o serviço implementado pelo <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade. Estes atributos incluem itens como o <> </> *>, a <> </> *>, a <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>e se pretende incluir detalhes da exceção na quaisquer falhas que são devolvidas pelo <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>"
  remarks: "O <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>propriedade é uma propriedade de dependência anexada definida pelo <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Esta propriedade de dependência está ligada ao fluxo de trabalho raiz que contenha o <xref:System.Workflow.Activities.ReceiveActivity>atividade utilizando a <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>chamada de método no momento da concepção.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       O <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>propriedade é utilizada para definir os atributos de comportamento de nível de serviço que são aplicados para o serviço de fluxo de trabalho quando é iniciado.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Estes não podem ser modificados no tempo de execução.      > [!NOTE] > Se o fluxo de trabalho atual inicia outro de fluxo de trabalho utilizando um <xref:System.Workflow.Activities.InvokeWorkflowActivity>atividade, o fluxo de trabalho invocado não herda os atributos de serviço do fluxo de trabalho ao invocar.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      > [!NOTE] > Se os atributos de serviço são definidos para uma atividade personalizada e dessa atividade está incluída num fluxo de trabalho, os atributos de serviço são utilizados. Atributos de serviço só são utilizados para atividades personalizadas, se a atividade personalizada em si é executada como um fluxo de trabalho."
  example:
  - "The following example shows how to use the `GetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#5](~/add/codesnippet/csharp/receiveactivity/snippets.cs#5)]"
  syntax:
    content: public static object GetWorkflowServiceAttributes (object dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "O objeto obter os atributos de serviço do."
    return:
      type: System.Object
      description: "A <xref:System.Object>que representa um <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> objeto que contém dados de atributos de serviço.</xref:System.Object>"
  overload: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "A adicionar."
    - id: exception
      type: System.Exception
      description: "A adicionar."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.HandleFault*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  id: OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Ocorre quando é recebida uma mensagem para uma operação e a validação é necessária."
  remarks: "Este é um processador de evento opcional que é desencadeado quando o <xref:System.Workflow.Activities.ReceiveActivity>atividade está prestes a receber uma mensagem.</xref:System.Workflow.Activities.ReceiveActivity> O processador associado, pode ser utilizado para efetuar verificações de segurança baseada em ClaimSet para autorizar a invocação de cliente da operação de serviço implementada pelo <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity>       Definição <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>para `false` de eventos processador rejeita a invocação de operação de serviço e o cliente recebe uma <xref:System.ServiceModel.FaultException>.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> Se <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>está definido como `true`, em seguida, a invocação de operação de serviço é concluída com êxito e o <xref:System.Workflow.Activities.ReceiveActivity>atividade recebe e processa a mensagem.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the `OperationValidation` event.  \n  \n [!code-cs[ReceiveActivity#7](~/add/codesnippet/csharp/receiveactivity/snippets.cs#7)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.OperationValidationEventArgs> OperationValidation;
    return:
      type: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  id: OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que visa a <xref href=&quot;System.Workflow.Activities.ReceiveActivity.OperationValidation&quot;> </xref> eventos."
  remarks: "Esta propriedade de evento de dependência pode ser utilizada para vincular a atividade receive <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>eventos para um processador de eventos público na classe de fluxo de trabalho.</xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Obtém a coleção de parâmetros que podem ser ligadas como encontrada na lista de parâmetro formal do serviço."
  remarks: "ParameterBindings pode ser utilizado para especificar um enlace entre os parâmetros de operação de serviço e o campo/propriedades públicas do fluxo de trabalho que contêm o <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity> Quando um cliente invoca a operação, os valores de parâmetros correspondentes são escritos vinculadas a propriedades de fluxo de trabalho durante a execução da atividade de receção.       Também pode ser utilizado por atividades subordinadas da atividade receive ParameterBindings ler os valores de parâmetro transmitidos por invocação de cliente. Atividades subordinadas podem utilizar a coleção de ParameterBindings para definir o valor devolvido do principal <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity>       Todos os parâmetros do contrato de serviço devem ser incluídos no `ParameterBindings` propriedade. Parâmetros desvinculados provocar avisos de compilador após a compilação e uma exceção pode ocorrer quando o <xref:System.Workflow.Activities.ReceiveActivity>devolve esta mensagem novamente para o cliente.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to access the `ParameterBindings` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#3](~/add/codesnippet/csharp/receiveactivity/snippets.cs#3)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "O <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> dos parâmetros à qual vincular."
  overload: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Define a operação de contrato e serviço que o <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> implementa de atividade."
  remarks: "A propriedade de ServiceOperationInfo pode ser definida para uma instância do tipo <xref:System.Workflow.Activities.TypedOperationInfo>ou <xref:System.Workflow.Activities.OperationInfo>.</xref:System.Workflow.Activities.OperationInfo> </xref:System.Workflow.Activities.TypedOperationInfo> <xref:System.Workflow.Activities.TypedOperationInfo>pode ser utilizado para configurar uma atividade receive com existente [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] contrato de serviço.</xref:System.Workflow.Activities.TypedOperationInfo>       Uma instância de <xref:System.Workflow.Activities.OperationInfo>pode ser utilizado para configurar uma atividade receive para o cenário de contrato de fluxo de trabalho primeiro.</xref:System.Workflow.Activities.OperationInfo>"
  example:
  - "The following example shows how to access the `ServiceOperationInfo` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#4](~/add/codesnippet/csharp/receiveactivity/snippets.cs#4)]"
  syntax:
    content: public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.OperationInfoBase
      description: "Um <xref href=&quot;System.Workflow.Activities.OperationInfoBase&quot;> </xref> objeto que contém o nome do contrato, o tipo de contrato, a operação de nome (que pode ser diferente do nome do método), se a operação é uma operação unidirecional e informações de método, incluindo parâmetros sobre a operação."
  overload: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  id: SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Define os atributos para o serviço implementado pelo <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade. Estes atributos incluem itens como o <> </> *>, a <> </> *> e se pretende incluir detalhes da exceção na quaisquer falhas que são devolvidas pelo <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade."
  remarks: "O <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>propriedade é uma propriedade de dependência anexada definida pelo <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Esta propriedade de dependência está ligada ao fluxo de trabalho raiz que contenha o <xref:System.Workflow.Activities.ReceiveActivity>atividade utilizando o método SetWorkflowServiceAttributes chamada no momento da concepção.</xref:System.Workflow.Activities.ReceiveActivity>       O <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>propriedade é utilizada para definir os atributos de comportamento de nível de serviço que são aplicados para o serviço de fluxo de trabalho quando é iniciado.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Estes não podem ser modificados no tempo de execução.      > [!NOTE] > Se o fluxo de trabalho atual inicia outro de fluxo de trabalho utilizando um <xref:System.Workflow.Activities.InvokeWorkflowActivity>atividade, o fluxo de trabalho invocado não herda os atributos de serviço do fluxo de trabalho ao invocar.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      > [!NOTE] > Se os atributos de serviço são definidos para uma atividade personalizada e dessa atividade está incluída num fluxo de trabalho, os atributos de serviço não é utilizado. Atributos de serviço são utilizados apenas em atividades personalizadas se a atividade personalizada em si é executada como um fluxo de trabalho."
  example:
  - "The following example shows how to use the `SetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#6](~/add/codesnippet/csharp/receiveactivity/snippets.cs#6)]"
  syntax:
    content: public static void SetWorkflowServiceAttributes (object dependencyObject, object value);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "O objecto a aplicar os atributos de serviço a."
    - id: value
      type: System.Object
      description: "O <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> objeto que contém os dados de atributo de serviço para aplicar."
  overload: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Obtém o nome do <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> no qual a atividade está a aguardar para os dados cheguem."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "O nome do <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> no qual a atividade está a aguardar para os dados cheguem."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Cria a subscrição do <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade a um evento."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> que representa o ambiente de execução do <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> atividade."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "O <xref:System.EventHandler>que processa o evento.</xref:System.EventHandler> O processador de eventos é propriedade de atividade principal."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Cancela a subscrição de um <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> a um evento."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> que representa o ambiente de execução do <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> atividade."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "O <xref:System.EventHandler>que processa o evento.</xref:System.EventHandler> O processador de eventos é propriedade de atividade principal."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A adicionar."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "A adicionar."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  id: WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que visa a <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>propriedade.</xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>"
  remarks: "A propriedade de WorkflowServiceAttributesProperty é uma propriedade de dependência anexada definida pelo <xref:System.Workflow.Activities.ReceiveActivity>atividade.</xref:System.Workflow.Activities.ReceiveActivity> Esta propriedade de dependência está ligada ao fluxo de trabalho raiz que contenha o <xref:System.Workflow.Activities.ReceiveActivity>atividade utilizando a <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>chamada de método no momento da concepção.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       A propriedade WorkflowServiceAttributesProperty é utilizada para definir os atributos de comportamento de nível de serviço que são aplicados para o serviço de fluxo de trabalho quando é iniciado. Estes não podem ser modificados no tempo de execução."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.ReceiveActivity.Context
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ContextToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ContextToken
  nameWithType: ContextToken
  fullName: System.Workflow.Activities.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
- uid: System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: true
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
- uid: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<OperationValidationEventArgs>
  nameWithType: EventHandler<OperationValidationEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.OperationValidationEventArgs
    name: OperationValidationEventArgs
    nameWithType: OperationValidationEventArgs
    fullName: OperationValidationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.OperationInfoBase
  parent: System.Workflow.Activities
  isExternal: false
  name: OperationInfoBase
  nameWithType: OperationInfoBase
  fullName: System.Workflow.Activities.OperationInfoBase
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
- uid: System.Workflow.Activities.ReceiveActivity.#ctor*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity
  nameWithType: ReceiveActivity.ReceiveActivity
- uid: System.Workflow.Activities.ReceiveActivity.Cancel*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel
  nameWithType: ReceiveActivity.Cancel
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
- uid: System.Workflow.Activities.ReceiveActivity.Context*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose
  nameWithType: ReceiveActivity.Dispose
- uid: System.Workflow.Activities.ReceiveActivity.Execute*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute
  nameWithType: ReceiveActivity.Execute
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
- uid: System.Workflow.Activities.ReceiveActivity.GetContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext
  nameWithType: ReceiveActivity.GetContext
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext
  nameWithType: ReceiveActivity.GetRootContext
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault
  nameWithType: ReceiveActivity.HandleFault
- uid: System.Workflow.Activities.ReceiveActivity.Initialize*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize
  nameWithType: ReceiveActivity.Initialize
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: ReceiveActivity.InitializeProperties
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete
  nameWithType: ReceiveActivity.OnSequenceComplete
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
