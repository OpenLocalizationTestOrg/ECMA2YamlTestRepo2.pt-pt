### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortVersion
  id: SortVersion
  children:
  - System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  - System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  - System.Globalization.SortVersion.Equals(System.Object)
  - System.Globalization.SortVersion.FullVersion
  - System.Globalization.SortVersion.GetHashCode
  - System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.SortId
  langs:
  - csharp
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
  type: Class
  summary: "Fornece informações sobre a versão de Unicode utilizado para comparar e ordenar cadeias."
  remarks: "Do [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] através de [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], cada versão do.NET Framework incluiu tabelas que contêm as ponderações de ordenação e dados em normalização de cadeia e que se baseiam numa versão específica de Unicode. No [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], a presença destas tabelas depende do sistema operativo: - no [!INCLUDE[win7](~/add/includes/win7-md.md)] e versões anteriores do sistema operativo Windows, as tabelas continuam a ser utilizado para comparar e ordenar cadeias.      -No [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], o .NET Framework delega comparação de cadeias e ordenação operações para o sistema operativo.       Consequentemente, o resultado de uma comparação de cadeias pode depender não apenas a versão do .NET Framework, mas também a versão do sistema operativo, tal como mostra o seguinte tabela. Tenha em atenção que esta lista de versões suportadas do Unicode aplica-se a comparação de caráter e ordenação apenas; Não é aplicável a classificação de carateres Unicode por categoria.      |. Versão do NET Framework | Sistema de operativo | Versão de Unicode |   |----------------------------|----------------------|---------------------|   | [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]| Todos os sistemas operativos | Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] e versões posteriores do .NET Framework | [!INCLUDE[win7](~/add/includes/win7-md.md)]| Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] e versões posteriores do .NET Framework | [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)] e versões posteriores do sistema operativo Windows | Unicode 6.0 |       No [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], porque a versão de Unicode utilizada na comparação de cadeias e ordenação depende da versão do sistema operativo, os resultados de comparação de cadeias podem divergir, mesmo para aplicações que executem uma versão específica do .NET Framework.       A classe de SortVersion fornece informações sobre a versão de Unicode utilizado pelo .NET Framework para comparação de cadeias e ordenação. Permite que os programadores de aplicações que podem detetar e processar com êxito as alterações na versão de Unicode, que é utilizado para comparar e ordenar as cadeias de uma aplicação de escrita.       Pode instanciar um objeto de SortVersion de duas formas: - ao chamar o <xref:System.Globalization.SortVersion.%23ctor%2A>construtor, que cria um novo SortVersion uma instância de objeto com base no número de versão e ordenar ID.</xref:System.Globalization.SortVersion.%23ctor%2A> Este construtor é mais útil quando a recriar um objeto de SortVersion de dados guardados.      -Por obter o valor da <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName>propriedade.</xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName> Esta propriedade fornece informações sobre a versão de Unicode utilizada pelo .NET Framework no qual a aplicação é executada.       A classe de SortVersion tem duas propriedades, <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>, que indica a versão de Unicode e cultura específica utilizada para a comparação de cadeias.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> O <xref:System.Globalization.SortVersion.FullVersion%2A>propriedade é um valor numérico arbitrário que reflete a versão de Unicode utilizada para a comparação de cadeias, e o <xref:System.Globalization.SortVersion.SortId%2A>propriedade é um arbitrários <xref:System.Guid>que reflete a cultura cujas convenções são utilizadas para a comparação de cadeias.</xref:System.Guid> </xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> Os valores destas propriedades dois importantes só estão ao comparar dois objetos de SortVersion utilizando o <xref:System.Globalization.SortVersion.Equals%2A>método, o <xref:System.Globalization.SortVersion.op_Equality%2A>operador, ou o <xref:System.Globalization.SortVersion.op_Inequality%2A>operador.</xref:System.Globalization.SortVersion.op_Inequality%2A> </xref:System.Globalization.SortVersion.op_Equality%2A> </xref:System.Globalization.SortVersion.Equals%2A>       Normalmente, utiliza um objeto de SortVersion quando guardar ou obtenção de alguma forma de dados de cadeia sensível cultura, ordenada, tais como índices ou o literal cadeias próprios. Isto requer que os seguintes passos: 1.  Quando os dados de cadeia ordenada for guardados, a <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>valores de propriedade também são guardados.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A>      2.  Quando são obtidos os dados de cadeia ordenada, pode recriar o objeto de SortVersion utilizado para ordenação as cadeias chamando a <xref:System.Globalization.SortVersion.%23ctor%2A>construtor.</xref:System.Globalization.SortVersion.%23ctor%2A>      3.  Este objeto SortVersion recentemente instanciado é comparado com um objeto de SortVersion reflete a cultura cujas convenções são utilizadas para ordenar os dados de cadeia.      4.  Se os dois objetos de SortVersion não são iguais, tem de ser reordenar os dados de cadeia.       O exemplo fornece uma ilustração."
  example:
  - "The following example contains a portion of the source code from an application that uses the SortVersion class to ensure that the native names of <xref:System.Globalization.RegionInfo> objects are ordered appropriately for the current system and current culture. It uses the <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> objects to store and retrieve ordered data from a data file named `Regions.dat` rather than retrieving and ordering data each time the application is run. The example first checks to determine whether the data file exists. If it does not, it creates the data and sets the `reindex` flag, which indicates that the data must be resorted and saved again. Otherwise, it retrieves the data and compares the saved SortVersion object with the SortVersion object for the current culture on the current system. If they are not equal, or if the `reindex` flag had been set previously, it resorts the <xref:System.Globalization.RegionInfo> data.  \n  \n [!code-cs[System.Globalization.SortVersion#1](~/add/codesnippet/csharp/t-system.globalization.s_0_1.cs)]\n [!code-vb[System.Globalization.SortVersion#1](~/add/codesnippet/visualbasic/t-system.globalization.s_0_1.vb)]"
  syntax:
    content: 'public sealed class SortVersion : IEquatable<System.Globalization.SortVersion>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Globalization.SortVersion>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  id: '#ctor(System.Int32,System.Guid)'
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Cria uma nova instância do <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> classe."
  remarks: "Este construtor para instanciar um <xref:System.Globalization.SortVersion>objeto com a versão especificada e ordenação ID.</xref:System.Globalization.SortVersion> O `fullVersion` argumento está atribuído a <xref:System.Globalization.SortVersion.FullVersion%2A>propriedade.</xref:System.Globalization.SortVersion.FullVersion%2A> O `sortId` argumento está atribuído a <xref:System.Globalization.SortVersion.SortId%2A>propriedade.</xref:System.Globalization.SortVersion.SortId%2A>       Este construtor é útil para recriar um <xref:System.Globalization.SortVersion>objeto dos dados que foi serializados ou guardados.</xref:System.Globalization.SortVersion> Esta versão, em seguida, pode ser comparado com a versão atual da aplicação para determinar se a versão de Unicode utilizado para apresentar e ordenar cadeias da aplicação está disponível."
  syntax:
    content: public SortVersion (int fullVersion, Guid sortId);
    parameters:
    - id: fullVersion
      type: System.Int32
      description: "Um número de versão."
    - id: sortId
      type: System.Guid
      description: "Um ID de ordenação."
  overload: System.Globalization.SortVersion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  id: Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um valor que indica se esta <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instância é igual a uma determinada <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos são iguais se os seus <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>propriedades são iguais.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public bool Equals (System.Globalization.SortVersion other);
    parameters:
    - id: other
      type: System.Globalization.SortVersion
      description: "O objeto comparar com esta instância."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> other </code> representa a mesma versão que esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um valor que indica se esta <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instância é igual a um objeto especificado."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos são iguais se os seus <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>propriedades são iguais.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um objeto para a comparação com esta instância."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> é um <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto que representa a mesma versão que esta instância; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.FullVersion
  id: FullVersion
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém o número da versão completa do <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  remarks: "O valor da propriedade FullVersion reflete a versão de Unicode utilizada para normalizar e comparar cadeias."
  syntax:
    content: public int FullVersion { get; }
    return:
      type: System.Int32
      description: "O número de versão desta <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  overload: System.Globalization.SortVersion.FullVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro com sinal de 32 bits."
  overload: System.Globalization.SortVersion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Indica se duas <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instâncias são iguais."
  remarks: "Dois <xref:System.Globalization.SortVersion>objetos são iguais se ambos forem `null`, ou se os seus <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>propriedades são iguais.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "A primeira instância para comparar."
    - id: right
      type: System.Globalization.SortVersion
      description: "A segunda instância para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Globalization.SortVersion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Indica se duas <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> instâncias não são iguais."
  remarks: "Dois <xref:System.Globalization.SortVersion>Objetos não são iguais se `null` e outros não, ou se tiverem diferentes <xref:System.Globalization.SortVersion.FullVersion%2A>ou <xref:System.Globalization.SortVersion.SortId%2A>valores de propriedade.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "A primeira instância para comparar."
    - id: right
      type: System.Globalization.SortVersion
      description: "A segunda instância para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os valores de <code> left </code> e <code> right </code> não são igual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.SortId
  id: SortId
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um identificador exclusivo global para este <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  remarks: "O valor da propriedade SortId reflete a cultura cujas convenções influenciam a comparação de cadeias e ordenação."
  syntax:
    content: public Guid SortId { get; }
    return:
      type: System.Guid
      description: "Um identificador exclusivo global para este <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> objeto."
  overload: System.Globalization.SortVersion.SortId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortVersion
  parent: System.Globalization
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
- uid: System.Globalization.SortVersion.Equals(System.Object)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
- uid: System.Globalization.SortVersion.FullVersion
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.SortId
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
- uid: System.Globalization.SortVersion.#ctor*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion.SortVersion
- uid: System.Globalization.SortVersion.Equals*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals
  nameWithType: SortVersion.Equals
- uid: System.Globalization.SortVersion.FullVersion*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode
  nameWithType: SortVersion.GetHashCode
- uid: System.Globalization.SortVersion.op_Equality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality
  nameWithType: SortVersion.op_Equality
- uid: System.Globalization.SortVersion.op_Inequality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality
  nameWithType: SortVersion.op_Inequality
- uid: System.Globalization.SortVersion.SortId*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
