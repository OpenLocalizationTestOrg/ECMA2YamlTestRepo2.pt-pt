### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogReader
  id: EventLogReader
  children:
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  - System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  langs:
  - csharp
  name: EventLogReader
  nameWithType: EventLogReader
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader
  type: Class
  summary: "Enables you to read events from an event log based on an event query. The events that are read by this object are returned as <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;></xref> objects."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'
  syntax:
    content: 'public class EventLogReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref> class by specifying an event query."
  remarks: "Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object."
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "The event query used to retrieve events."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref> class by specifying an active event log to retrieve events from."
  remarks: "Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object."
  syntax:
    content: public EventLogReader (string path);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to retrieve events from."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref> class by specifying an event query and a bookmark that is used as starting position for the query."
  remarks: "Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object."
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "The event query used to retrieve events."
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events logged after the bookmark event will be returned by the query."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;></xref> class by specifying the name of an event log to retrieve events from or the path to a log file to retrieve events from."
  remarks: "Use the <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A> method to retrieve events from this object."
  syntax:
    content: public EventLogReader (string path, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to retrieve events from, or the path to the event log file to retrieve events from."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  id: BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets or sets the number of events retrieved from the stream of events on every read operation."
  syntax:
    content: public int BatchSize { get; set; }
    return:
      type: System.Int32
      description: "Returns an integer value."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  id: CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Cancels the current query operation."
  syntax:
    content: public void CancelReading ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Releases all the resources used by this object."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Releases the unmanaged resources used by this object, and optionally releases the managed resources."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  id: LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets the status of each event log or log file associated with the event query in this object."
  syntax:
    content: public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus> LogStatus { get; }
    return:
      type: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
      description: "Returns a list of <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogStatus&quot;></xref> objects that each contain status information about an event log associated with the event query in this object."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  id: ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Reads the next event that is returned from the event query in this object."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069).'
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "Returns an <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;></xref> object."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  id: ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Reads the next event that is returned from the event query in this object."
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The maximum time to allow the read operation to run before canceling the operation."
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "Returns an <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;></xref> object."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event. No events logged before the bookmark event will be retrieved."
  remarks: "You can use this function only on result sets from an Admin or Operational channel, or from .evtx log files. This function is not supported on analytic and debug channels, or for ETL files."
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Changes the position in the event stream where the next event that is read will come from by specifying a bookmark event and an offset number of events from the bookmark. No events logged before the bookmark plus the offset will be retrieved."
  remarks: "You can use this function only on result sets from an Admin or Operational channel, or from .evtx log files. This function is not supported on analytic and debug channels, or for ETL files."
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark, long offset);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "The bookmark (placeholder) used as a starting position in the event log or stream of events. Only events that have been logged after the bookmark event will be returned by the query."
    - id: offset
      type: System.Int64
      description: "The offset number of events to change the position of the bookmark."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  id: Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Changes the position in the event stream where the next event that is read will come from by specifying a starting position and an offset from the starting position. No events logged before the starting position plus the offset will be retrieved."
  remarks: "You can use this function only on result sets from an Admin or Operational channel, or from .evtx log files. This function is not supported on analytic and debug channels, or for ETL files."
  syntax:
    content: public void Seek (System.IO.SeekOrigin origin, long offset);
    parameters:
    - id: origin
      type: System.IO.SeekOrigin
      description: "A value from the <xref:System.IO.SeekOrigin> enumeration defines where in the stream of events to start querying for events."
    - id: offset
      type: System.Int64
      description: "The offset number of events to add to the origin."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogQuery
  nameWithType: EventLogQuery
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventBookmark
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventBookmark
  nameWithType: EventBookmark
  fullName: System.Diagnostics.Eventing.Reader.EventBookmark
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
- uid: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EventLogStatus>
  nameWithType: IList<EventLogStatus>
  fullName: System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Eventing.Reader.EventLogStatus
    name: EventLogStatus
    nameWithType: EventLogStatus
    fullName: EventLogStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
- uid: System.Diagnostics.Eventing.Reader.EventRecord
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventRecord
  nameWithType: EventRecord
  fullName: System.Diagnostics.Eventing.Reader.EventRecord
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader
  nameWithType: EventLogReader.EventLogReader
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading
  nameWithType: EventLogReader.CancelReading
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose
  nameWithType: EventLogReader.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent
  nameWithType: EventLogReader.ReadEvent
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek
  nameWithType: EventLogReader.Seek
