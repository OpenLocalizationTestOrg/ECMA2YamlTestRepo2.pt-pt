### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PropertyConverter
  id: PropertyConverter
  children:
  - System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)
  - System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)
  - System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)
  langs:
  - csharp
  name: PropertyConverter
  nameWithType: PropertyConverter
  fullName: System.Web.UI.PropertyConverter
  type: Class
  summary: "Contains helper functions to convert property values to and from strings."
  remarks: "The PropertyConverter class is used by the ASP.NET page framework and is not intended to be accessed directly from your code. You can use the <xref:System.Enum> structure to convert string values to and from enumerators, or <xref:System.ComponentModel.TypeConverter> to convert objects."
  syntax:
    content: public static class PropertyConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)
  id: EnumFromString(System.Type,System.String)
  parent: System.Web.UI.PropertyConverter
  langs:
  - csharp
  name: EnumFromString(Type,String)
  nameWithType: PropertyConverter.EnumFromString(Type,String)
  fullName: System.Web.UI.PropertyConverter.EnumFromString(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Converts the string representation to a value of the specified enumeration type."
  remarks: "The EnumFromString method is used to convert a string value to its equivalent enumeration value.      > [!NOTE] >  This member supports the .NET Framework infrastructure and is not intended to be used directly from your code. To convert a string value to its equivalent enumeration value, use the <xref:System.Enum.Parse%2A?displayProperty=fullName> method."
  syntax:
    content: public static object EnumFromString (Type enumType, string value);
    parameters:
    - id: enumType
      type: System.Type
      description: "A &lt;xref:System.Type?displayProperty=fullName&gt; that represents the enumeration type to create from the `value` parameter."
    - id: value
      type: System.String
      description: "The <xref:System.String> that represents a value in the enumerator."
    return:
      type: System.Object
      description: "An enumeration of type <code>enumType</code>."
  overload: System.Web.UI.PropertyConverter.EnumFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>enumType</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enumType</code> is not an <xref:System.Enum>.  \n  \n \\- or -  \n  \n <code>value</code> is either an empty string (\"\") or contains only white spaces.  \n  \n \\- or -  \n  \n <code>value</code> is a name, but not one of the named constants defined for the enumeration."
  platform:
  - net462
- uid: System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)
  id: EnumToString(System.Type,System.Object)
  parent: System.Web.UI.PropertyConverter
  langs:
  - csharp
  name: EnumToString(Type,Object)
  nameWithType: PropertyConverter.EnumToString(Type,Object)
  fullName: System.Web.UI.PropertyConverter.EnumToString(Type,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Converts the value of the specified enumeration type to its equivalent string representation."
  remarks: "The EnumToString method is used to convert an enumeration value to its equivalent string representation.      > [!NOTE] >  This member supports the .NET Framework infrastructure and is not intended to be used directly from your code. To convert an enumeration value to its equivalent string representation, use the <xref:System.Enum.Format%2A?displayProperty=fullName> method."
  syntax:
    content: public static string EnumToString (Type enumType, object enumValue);
    parameters:
    - id: enumType
      type: System.Type
      description: "A &lt;xref:System.Type?displayProperty=fullName&gt; that represents the enumeration type of `enumValue`."
    - id: enumValue
      type: System.Object
      description: "The value to convert."
    return:
      type: System.String
      description: "The string representation of <code>enumValue</code>."
  overload: System.Web.UI.PropertyConverter.EnumToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>enumType</code> or <code>enumValue</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>enumType</code> parameter is not an &lt;xref:System.Enum?displayProperty=fullName&gt; type.  \n  \n \\- or -  \n  \n The <code>enumValue</code> parameter contains a value from an enumeration that differs in type from <code>enumType</code>.  \n  \n \\- or -  \n  \n The type of <code>enumValue</code> is not an underlying type of <code>enumType</code>."
  platform:
  - net462
- uid: System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)
  id: ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)
  parent: System.Web.UI.PropertyConverter
  langs:
  - csharp
  name: ObjectFromString(Type,MemberInfo,String)
  nameWithType: PropertyConverter.ObjectFromString(Type,MemberInfo,String)
  fullName: System.Web.UI.PropertyConverter.ObjectFromString(Type,MemberInfo,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Converts the string value to the specified object type."
  remarks: "The ObjectFromString method is used to convert a string value to an object.      > [!NOTE] >  This member supports the .NET Framework infrastructure and is not intended to be used directly from your code. To convert a string value to an object, use the `Parse` method for that object if the object provides a `Parse` method. For example, an <xref:System.Int32> object can be created from a string through the <xref:System.Int32.Parse%2A> method."
  syntax:
    content: public static object ObjectFromString (Type objType, System.Reflection.MemberInfo propertyInfo, string value);
    parameters:
    - id: objType
      type: System.Type
      description: "The &lt;xref:System.Type?displayProperty=fullName&gt; to create from `value`."
    - id: propertyInfo
      type: System.Reflection.MemberInfo
      description: "The properties to use during conversion."
    - id: value
      type: System.String
      description: "The <xref:System.String> to convert into an object."
    return:
      type: System.Object
      description: "An object of type <code>objType</code>."
  overload: System.Web.UI.PropertyConverter.ObjectFromString*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "An object of the type specified by <code>objType</code> cannot be created from the <code>value</code> parameter."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)
  parent: System.Web.UI.PropertyConverter
  isExternal: false
  name: EnumFromString(Type,String)
  nameWithType: PropertyConverter.EnumFromString(Type,String)
  fullName: System.Web.UI.PropertyConverter.EnumFromString(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)
  parent: System.Web.UI.PropertyConverter
  isExternal: false
  name: EnumToString(Type,Object)
  nameWithType: PropertyConverter.EnumToString(Type,Object)
  fullName: System.Web.UI.PropertyConverter.EnumToString(Type,Object)
- uid: System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)
  parent: System.Web.UI.PropertyConverter
  isExternal: false
  name: ObjectFromString(Type,MemberInfo,String)
  nameWithType: PropertyConverter.ObjectFromString(Type,MemberInfo,String)
  fullName: System.Web.UI.PropertyConverter.ObjectFromString(Type,MemberInfo,String)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Web.UI.PropertyConverter.EnumFromString*
  parent: System.Web.UI.PropertyConverter
  isExternal: false
  name: EnumFromString
  nameWithType: PropertyConverter.EnumFromString
- uid: System.Web.UI.PropertyConverter.EnumToString*
  parent: System.Web.UI.PropertyConverter
  isExternal: false
  name: EnumToString
  nameWithType: PropertyConverter.EnumToString
- uid: System.Web.UI.PropertyConverter.ObjectFromString*
  parent: System.Web.UI.PropertyConverter
  isExternal: false
  name: ObjectFromString
  nameWithType: PropertyConverter.ObjectFromString
