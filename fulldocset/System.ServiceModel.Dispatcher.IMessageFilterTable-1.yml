### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  id: IMessageFilterTable`1
  children:
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})
  - System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})
  langs:
  - csharp
  name: IMessageFilterTable<TFilterData>
  nameWithType: IMessageFilterTable<TFilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>
  type: Interface
  syntax:
    content: 'public interface IMessageFilterTable<TFilterData> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>, System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>'
    typeParameters:
    - id: TFilterData
      description: "To be added."
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>
  - System.Collections.Generic.IDictionary<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.ServiceModel.Dispatcher.MessageFilter,TFilterData>>
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)
  id: GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingFilter(Message,MessageFilter)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: filter
      type: System.ServiceModel.Dispatcher.MessageFilter
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)
  id: GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingFilter(MessageBuffer,MessageFilter)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "To be added."
    - id: filter
      type: System.ServiceModel.Dispatcher.MessageFilter
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  id: GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingFilters(Message,ICollection<MessageFilter>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: results
      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  id: GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter> results);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "To be added."
    - id: results
      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)
  id: GetMatchingValue(System.ServiceModel.Channels.Message,`0@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingValue(Message,TFilterData)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData value);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: value
      type: TFilterData
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)
  id: GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingValue(MessageBuffer,TFilterData)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData value);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "To be added."
    - id: value
      type: TFilterData
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})
  id: GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingValues(Message,ICollection<TFilterData>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection<TFilterData> results);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: results
      type: System.Collections.Generic.ICollection{TFilterData}
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})
  id: GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  langs:
  - csharp
  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection<TFilterData> results);
    parameters:
    - id: messageBuffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "To be added."
    - id: results
      type: System.Collections.Generic.ICollection{TFilterData}
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingFilter(Message,MessageFilter)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(Message,MessageFilter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageFilter
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: MessageFilter
  nameWithType: MessageFilter
  fullName: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingFilter(MessageBuffer,MessageFilter)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilter(MessageBuffer,MessageFilter)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingFilters(Message,ICollection<MessageFilter>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(Message,ICollection<MessageFilter>)
- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<MessageFilter>
  nameWithType: ICollection<MessageFilter>
  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.MessageFilter>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.ServiceModel.Dispatcher.MessageFilter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.MessageFilter
    name: MessageFilter
    nameWithType: MessageFilter
    fullName: MessageFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingFilters(MessageBuffer,ICollection<MessageFilter>)
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingValue(Message,TFilterData)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(Message,TFilterData)
- uid: TFilterData
  isExternal: true
  name: TFilterData
  nameWithType: TFilterData
  fullName: TFilterData
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingValue(MessageBuffer,TFilterData)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValue(MessageBuffer,TFilterData)
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingValues(Message,ICollection<TFilterData>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(Message,ICollection<TFilterData>)
- uid: System.Collections.Generic.ICollection{TFilterData}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<TFilterData>
  nameWithType: ICollection<TFilterData>
  fullName: System.Collections.Generic.ICollection<TFilterData>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<TFilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TFilterData
    name: TFilterData
    nameWithType: TFilterData
    fullName: TFilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingValues(MessageBuffer,ICollection<TFilterData>)
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>.GetMatchingValues(MessageBuffer,ICollection<TFilterData>)
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter*
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingFilter
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilter
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters*
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingFilters
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingFilters
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue*
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingValue
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValue
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues*
  parent: System.ServiceModel.Dispatcher.IMessageFilterTable`1
  isExternal: false
  name: GetMatchingValues
  nameWithType: IMessageFilterTable<TFilterData>.GetMatchingValues
