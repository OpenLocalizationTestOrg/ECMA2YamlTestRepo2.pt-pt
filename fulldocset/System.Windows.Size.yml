### YamlMime:ManagedReference
items:
- uid: System.Windows.Size
  id: Size
  children:
  - System.Windows.Size.#ctor(System.Double,System.Double)
  - System.Windows.Size.Empty
  - System.Windows.Size.Equals(System.Object)
  - System.Windows.Size.Equals(System.Windows.Size)
  - System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.GetHashCode
  - System.Windows.Size.Height
  - System.Windows.Size.IsEmpty
  - System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)
  - System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)
  - System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  - System.Windows.Size.Parse(System.String)
  - System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Size.ToString
  - System.Windows.Size.ToString(System.IFormatProvider)
  - System.Windows.Size.Width
  langs:
  - csharp
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
  type: Struct
  summary: "Implements a structure that is used to describe the Size of an object."
  remarks: "Size is particularly useful because it describes both the <xref:System.Windows.Size.Height%2A> and <xref:System.Windows.Size.Width%2A> of an object. Size is used extensively by the layout system to arrange and measure elements.      <a name=&quot;xamlAttributeUsage_Size&quot;></a>    ## XAML Attribute Usage      ```   <objectÂ property=&quot;width,height&quot;/>   ```      <a name=&quot;xamlValues_Size&quot;></a>    ## XAML Values    *width*    A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Width%2A> of the Size structure.       *height*    A value greater than or equal to 0 that specifies the <xref:System.Windows.Size.Height%2A> of the Size structure."
  example:
  - "The following example demonstrates how to use a Size structure in code.  \n  \n [!code-cs[PlotPanel#2](~/add/codesnippet/csharp/PlotPanel_csharp/PlotPanel.cs#2)]\n [!code-cpp[PlotPanel#2](~/add/codesnippet/cpp/plotpanel/PlotPanel.cpp#2)]\n [!code-vb[PlotPanel#2](~/add/codesnippet/visualbasic/PlotPanel/PlotPanel.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.SizeConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.SizeValueSerializer))]

      public struct Size : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Size.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Size
  langs:
  - csharp
  name: Size(Double,Double)
  nameWithType: Size.Size(Double,Double)
  fullName: System.Windows.Size.Size(Double,Double)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Size&quot;></xref> structure and assigns it an initial <code>width</code> and <code>height</code>."
  remarks: "The `width` and `height` cannot be negative."
  syntax:
    content: public Size (double width, double height);
    parameters:
    - id: width
      type: System.Double
      description: "The initial width of the instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
    - id: height
      type: System.Double
      description: "The initial height of the instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  overload: System.Windows.Size.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Empty
  id: Empty
  parent: System.Windows.Size
  langs:
  - csharp
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Windows.Size.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets a value that represents a static empty <xref href=&quot;System.Windows.Size&quot;></xref>."
  remarks: "The <xref:System.Windows.Size.Width%2A> and <xref:System.Windows.Size.Height%2A> of the instance of <xref:System.Windows.Size> are equal to negative-infinity when this property is invoked. This is the only situation where <xref:System.Windows.Size> can be a negative number."
  syntax:
    content: public static System.Windows.Size Empty { get; }
    return:
      type: System.Windows.Size
      description: "An empty instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  overload: System.Windows.Size.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Windows.Size.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares an object to an instance of <xref href=&quot;System.Windows.Size&quot;></xref> for equality."
  remarks: "<xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The <xref:System.Object> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the sizes are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Equals(System.Windows.Size)
  id: Equals(System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Equals(Size)
  nameWithType: Size.Equals(Size)
  fullName: System.Windows.Size.Equals(Size)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares a value to an instance of <xref href=&quot;System.Windows.Size&quot;></xref> for equality."
  remarks: "<xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`."
  syntax:
    content: public bool Equals (System.Windows.Size value);
    parameters:
    - id: value
      type: System.Windows.Size
      description: "The size to compare to this current instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the instances of <xref href=&quot;System.Windows.Size&quot;></xref> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  id: Equals(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Equals(Size,Size)
  nameWithType: Size.Equals(Size,Size)
  fullName: System.Windows.Size.Equals(Size,Size)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares two instances of <xref href=&quot;System.Windows.Size&quot;></xref> for equality."
  remarks: "<xref:System.Double> values can result in an error when operated upon. Values that are logically equal might fail to result in a value of `true`."
  syntax:
    content: public static bool Equals (System.Windows.Size size1, System.Windows.Size size2);
    parameters:
    - id: size1
      type: System.Windows.Size
      description: "The first instance of <xref href=&quot;System.Windows.Size&quot;></xref> to compare."
    - id: size2
      type: System.Windows.Size
      description: "The second instance of <xref href=&quot;System.Windows.Size&quot;></xref> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the instances of <xref href=&quot;System.Windows.Size&quot;></xref> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Size.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.GetHashCode
  id: GetHashCode
  parent: System.Windows.Size
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Windows.Size.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the hash code for this instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "The hash code for this instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  overload: System.Windows.Size.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Height
  id: Height
  parent: System.Windows.Size
  langs:
  - csharp
  name: Height
  nameWithType: Size.Height
  fullName: System.Windows.Size.Height
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets or sets the Height of this instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  syntax:
    content: public double Height { get; set; }
    return:
      type: System.Double
      description: "The Height of this instance of <xref href=&quot;System.Windows.Size&quot;></xref>. The default is 0. The value cannot be negative."
  overload: System.Windows.Size.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.IsEmpty
  id: IsEmpty
  parent: System.Windows.Size
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Windows.Size.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets a value that indicates whether this instance of <xref href=&quot;System.Windows.Size&quot;></xref> is <xref:System.Windows.Size.Empty*>."
  remarks: "Even if <xref:System.Windows.Size> is 0, the instance of <xref:System.Windows.Size> will still contain a 0 or 1, indicating a zero- or one-dimensional set of points. Therefore, do not use this property to check for a 0 area."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this instance of size is <xref:System.Windows.Size.Empty*>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Size.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  id: op_Equality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Windows.Size.op_Equality(Size,Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares two instances of <xref href=&quot;System.Windows.Size&quot;></xref> for equality."
  syntax:
    content: public static bool op_Equality (System.Windows.Size size1, System.Windows.Size size2);
    parameters:
    - id: size1
      type: System.Windows.Size
      description: "The first instance of <xref href=&quot;System.Windows.Size&quot;></xref> to compare."
    - id: size2
      type: System.Windows.Size
      description: "The second instance of <xref href=&quot;System.Windows.Size&quot;></xref> to compare."
    return:
      type: System.Boolean
      description: "true if the two instances of <xref href=&quot;System.Windows.Size&quot;></xref> are equal; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Size.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)
  id: op_Explicit(System.Windows.Size to System.Windows.Point)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Point op_Explicit (System.Windows.Size size);
    parameters:
    - id: size
      type: System.Windows.Size
      description: "To be added."
    return:
      type: System.Windows.Point
      description: "To be added."
  overload: System.Windows.Size.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)
  id: op_Explicit(System.Windows.Size to System.Windows.Vector)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  syntax:
    content: public static System.Windows.Vector op_Explicit (System.Windows.Size size);
    parameters:
    - id: size
      type: System.Windows.Size
      description: "To be added."
    return:
      type: System.Windows.Vector
      description: "To be added."
  overload: System.Windows.Size.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  id: op_Inequality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  langs:
  - csharp
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Windows.Size.op_Inequality(Size,Size)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Compares two instances of <xref href=&quot;System.Windows.Size&quot;></xref> for inequality."
  syntax:
    content: public static bool op_Inequality (System.Windows.Size size1, System.Windows.Size size2);
    parameters:
    - id: size1
      type: System.Windows.Size
      description: "The first instance of <xref href=&quot;System.Windows.Size&quot;></xref> to compare."
    - id: size2
      type: System.Windows.Size
      description: "The second instance of <xref href=&quot;System.Windows.Size&quot;></xref> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the instances of <xref href=&quot;System.Windows.Size&quot;></xref> are not equal; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Size.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Size
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Size.Parse(String)
  fullName: System.Windows.Size.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returns an instance of <xref href=&quot;System.Windows.Size&quot;></xref> from a converted <xref:System.String>."
  syntax:
    content: public static System.Windows.Size Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "A <xref:System.String> value to parse to a <xref href=&quot;System.Windows.Size&quot;></xref> value."
    return:
      type: System.Windows.Size
      description: "An instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  overload: System.Windows.Size.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Size
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Size.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Size.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastructure and is not intended to be used directly from your code."
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "The format to use."
    - id: provider
      type: System.IFormatProvider
      description: "The provider to use to format the value."
    return:
      type: System.String
      description: "The value of the current instance in the specified format."
  overload: System.Windows.Size.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.ToString
  id: ToString
  parent: System.Windows.Size
  langs:
  - csharp
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Windows.Size.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returns a <xref:System.String> that represents this <xref href=&quot;System.Windows.Size&quot;></xref> object."
  remarks: "If the <xref:System.Windows.Size.Width%2A> property is set to 30 and the <xref:System.Windows.Size.Height%2A> property is set to 40, the ToString method returns a string that says `&quot;30, 40&quot;`."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that specifies the width followed by the height."
  overload: System.Windows.Size.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Size
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Size.ToString(IFormatProvider)
  fullName: System.Windows.Size.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Returns a <xref:System.String> that represents this instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "An object that provides a way to control formatting."
    return:
      type: System.String
      description: "A <xref:System.String> that represents this <xref href=&quot;System.Windows.Size&quot;></xref> object."
  overload: System.Windows.Size.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Size.Width
  id: Width
  parent: System.Windows.Size
  langs:
  - csharp
  name: Width
  nameWithType: Size.Width
  fullName: System.Windows.Size.Width
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets or sets the Width of this instance of <xref href=&quot;System.Windows.Size&quot;></xref>."
  syntax:
    content: public double Width { get; set; }
    return:
      type: System.Double
      description: "The Width of this instance of <xref href=&quot;System.Windows.Size&quot;></xref>. The default value is `0`. The value cannot be negative."
  overload: System.Windows.Size.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Size.#ctor(System.Double,System.Double)
  parent: System.Windows.Size
  isExternal: false
  name: Size(Double,Double)
  nameWithType: Size.Size(Double,Double)
  fullName: System.Windows.Size.Size(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Size.Empty
  parent: System.Windows.Size
  isExternal: false
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Windows.Size.Empty
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Size.Equals(System.Object)
  parent: System.Windows.Size
  isExternal: false
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Windows.Size.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Size.Equals(System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: Equals(Size)
  nameWithType: Size.Equals(Size)
  fullName: System.Windows.Size.Equals(Size)
- uid: System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: Equals(Size,Size)
  nameWithType: Size.Equals(Size,Size)
  fullName: System.Windows.Size.Equals(Size,Size)
- uid: System.Windows.Size.GetHashCode
  parent: System.Windows.Size
  isExternal: false
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Windows.Size.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Size.Height
  parent: System.Windows.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
  fullName: System.Windows.Size.Height
- uid: System.Windows.Size.IsEmpty
  parent: System.Windows.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Windows.Size.IsEmpty
- uid: System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Windows.Size.op_Equality(Size,Size)
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Point)
  parent: System.Windows.Size
  isExternal: false
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size.op_Explicit(System.Windows.Size to System.Windows.Vector)
  parent: System.Windows.Size
  isExternal: false
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Windows.Size.op_Explicit(Size)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)
  parent: System.Windows.Size
  isExternal: false
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Windows.Size.op_Inequality(Size,Size)
- uid: System.Windows.Size.Parse(System.String)
  parent: System.Windows.Size
  isExternal: false
  name: Parse(String)
  nameWithType: Size.Parse(String)
  fullName: System.Windows.Size.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Size
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Size.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Size.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Size.ToString
  parent: System.Windows.Size
  isExternal: false
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Windows.Size.ToString()
- uid: System.Windows.Size.ToString(System.IFormatProvider)
  parent: System.Windows.Size
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Size.ToString(IFormatProvider)
  fullName: System.Windows.Size.ToString(IFormatProvider)
- uid: System.Windows.Size.Width
  parent: System.Windows.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
  fullName: System.Windows.Size.Width
- uid: System.Windows.Size.#ctor*
  parent: System.Windows.Size
  isExternal: false
  name: Size
  nameWithType: Size.Size
- uid: System.Windows.Size.Empty*
  parent: System.Windows.Size
  isExternal: false
  name: Empty
  nameWithType: Size.Empty
- uid: System.Windows.Size.Equals*
  parent: System.Windows.Size
  isExternal: false
  name: Equals
  nameWithType: Size.Equals
- uid: System.Windows.Size.GetHashCode*
  parent: System.Windows.Size
  isExternal: false
  name: GetHashCode
  nameWithType: Size.GetHashCode
- uid: System.Windows.Size.Height*
  parent: System.Windows.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
- uid: System.Windows.Size.IsEmpty*
  parent: System.Windows.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
- uid: System.Windows.Size.op_Equality*
  parent: System.Windows.Size
  isExternal: false
  name: op_Equality
  nameWithType: Size.op_Equality
- uid: System.Windows.Size.op_Explicit*
  parent: System.Windows.Size
  isExternal: false
  name: op_Explicit
  nameWithType: Size.op_Explicit
- uid: System.Windows.Size.op_Inequality*
  parent: System.Windows.Size
  isExternal: false
  name: op_Inequality
  nameWithType: Size.op_Inequality
- uid: System.Windows.Size.Parse*
  parent: System.Windows.Size
  isExternal: false
  name: Parse
  nameWithType: Size.Parse
- uid: System.Windows.Size.System#IFormattable#ToString*
  parent: System.Windows.Size
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Size.System.IFormattable.ToString
- uid: System.Windows.Size.ToString*
  parent: System.Windows.Size
  isExternal: false
  name: ToString
  nameWithType: Size.ToString
- uid: System.Windows.Size.Width*
  parent: System.Windows.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
