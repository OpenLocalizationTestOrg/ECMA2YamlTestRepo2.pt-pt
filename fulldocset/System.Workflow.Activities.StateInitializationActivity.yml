### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.StateInitializationActivity
  id: StateInitializationActivity
  children:
  - System.Workflow.Activities.StateInitializationActivity.#ctor
  - System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)
  langs:
  - csharp
  name: StateInitializationActivity
  nameWithType: StateInitializationActivity
  fullName: System.Workflow.Activities.StateInitializationActivity
  type: Class
  summary: "Atua como um contentor para um grupo de atividades que é executada quando o <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref> entrar em execução. Esta classe não pode ser herdada."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]O StateInitializationActivity age como um <xref:System.Workflow.Activities.SequenceActivity>a todas as atividades que contém.</xref:System.Workflow.Activities.SequenceActivity>       <xref:System.Workflow.Activities.SetStateActivity>as classes podem ser incluídas a StateInitializationActivity.</xref:System.Workflow.Activities.SetStateActivity>       Se existir um StateInitializationActivity num <xref:System.Workflow.Activities.StateActivity>, o StateInitializationActivity é a primeira atividade obtém executada quando o <xref:System.Workflow.Activities.StateActivity>começar a ser executada.</xref:System.Workflow.Activities.StateActivity> </xref:System.Workflow.Activities.StateActivity> Em vários aspetos a StateInitializationActivity é como um `OnEnterState` processador.       O StateInitializationActivity não é uma atividade obrigatória no <xref:System.Workflow.Activities.StateActivity>.</xref:System.Workflow.Activities.StateActivity>       O StateInitializationActivity é um <xref:System.Workflow.ComponentModel.CompositeActivity>, que significa que o StateInitializationActivity pode conter outras atividades.</xref:System.Workflow.ComponentModel.CompositeActivity> O StateInitializationActivity não pode conter qualquer atividade que implementa o <xref:System.Workflow.Activities.IEventActivity>interface, o que inclui todos os <xref:System.Workflow.Activities.HandleExternalEventActivity>atividades e o <xref:System.Workflow.Activities.DelayActivity>atividade.</xref:System.Workflow.Activities.DelayActivity> </xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.IEventActivity>       Um StateInitializationActivity for executada no <xref:System.Workflow.Activities.StateActivity>, de forma a não efetua a <xref:System.Workflow.Activities.StateActivity>preparada para receber eventos.</xref:System.Workflow.Activities.StateActivity> </xref:System.Workflow.Activities.StateActivity> O StateInitializationActivity pode conter um <xref:System.Workflow.Activities.SetStateActivity>atividade, para que as TI podem modelar uma máquina de estado em que ocorrem transições de estado para o estado sem receber qualquer evento.</xref:System.Workflow.Activities.SetStateActivity> Em que a máquina de Estados de sentido comporta-se como um fluxo de trabalho sequencial."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateInitializationDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.StateInitializationActivity), "Resources.StateInitializationActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Runtime.InteropServices.ComVisible(false)]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.StateInitializationValidator))]

      public sealed class StateInitializationActivity : System.Workflow.Activities.SequenceActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.StateInitializationActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.StateInitializationActivity
  langs:
  - csharp
  name: StateInitializationActivity()
  nameWithType: StateInitializationActivity.StateInitializationActivity()
  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.StateInitializationActivity&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example shows how to create a new instance of a <xref:System.Workflow.Activities.StateInitializationActivity> object. This example is from the State Initialization SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][State Initialization Sample](http://msdn.microsoft.com/en-us/9053202f-2567-4428-a4a2-85423963646b).  \n  \n [!code-cs[wf_samples#197](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#197)]\n [!code-vb[wf_samples#197](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#197)]"
  syntax:
    content: public StateInitializationActivity ();
    parameters: []
  overload: System.Workflow.Activities.StateInitializationActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.StateInitializationActivity
  langs:
  - csharp
  name: StateInitializationActivity(String)
  nameWithType: StateInitializationActivity.StateInitializationActivity(String)
  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.StateInitializationActivity&quot;> </xref> classe com o nome da atividade."
  syntax:
    content: public StateInitializationActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome definido pelo utilizador da atividade."
  overload: System.Workflow.Activities.StateInitializationActivity.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.StateInitializationActivity.#ctor
  parent: System.Workflow.Activities.StateInitializationActivity
  isExternal: false
  name: StateInitializationActivity()
  nameWithType: StateInitializationActivity.StateInitializationActivity()
  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity()
- uid: System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)
  parent: System.Workflow.Activities.StateInitializationActivity
  isExternal: false
  name: StateInitializationActivity(String)
  nameWithType: StateInitializationActivity.StateInitializationActivity(String)
  fullName: System.Workflow.Activities.StateInitializationActivity.StateInitializationActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.StateInitializationActivity.#ctor*
  parent: System.Workflow.Activities.StateInitializationActivity
  isExternal: false
  name: StateInitializationActivity
  nameWithType: StateInitializationActivity.StateInitializationActivity
