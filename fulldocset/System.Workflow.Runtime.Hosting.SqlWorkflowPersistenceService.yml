### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  id: SqlWorkflowPersistenceService
  children:
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  langs:
  - csharp
  name: SqlWorkflowPersistenceService
  nameWithType: SqlWorkflowPersistenceService
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  type: Class
  summary: "Represents a persistence service that uses a SQL database to store workflow state information."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The SqlWorkflowPersistenceService class represents a fully-functional persistence service. You can use this service out-of-box to persist and retrieve workflow state information about a workflow instance when requested to by the workflow runtime engine.       The SqlWorkflowPersistenceService participates in the workflow transaction batching functionality provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>. That is, it adds objects that represent pending writes to the SQL database to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> and implements the <xref:System.Workflow.Runtime.IPendingWork> interface.       The SqlWorkflowPersistenceService supports locking of workflow instances. This feature is used when several workflow runtimes share the same database. A column in the SQL database table is used to mark a workflow instance as locked whenever it is being used by a workflow runtime. The SqlWorkflowPersistenceService does not load a workflow instance that is marked as &quot;in use&quot; by another runtime. Typically these locks are released when the workflow instance is persisted, for example, on idle, completion, or termination. The locks can also be released automatically after a period of inactivity. This period of inactivity can be set using the constructor of the SqlWorkflowPersistenceService class.  It can also be set through the configuration file.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] persistence services in general, see the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.       Workflow instances can contain timers, for example, if they have a <xref:System.Workflow.Activities.DelayActivity>. For workflows that contain timers, the SqlWorkflowPersistenceService records the time when the workflow&quot;s next timer expires. The SqlWorkflowPersistenceService periodically polls the database, looking for workflows whose timers have expired. The frequency of the polling interval can be set using the SqlWorkflowPersistenceService constructor or using a configuration file.      > [!NOTE] >  When using both the <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> and the SqlWorkflowPersistenceService in a workflow application, it is recommended to use a single database for both persistence and tracking."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class SqlWorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowPersistenceService, System.Workflow.Runtime.IPendingWork
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  implements:
  - System.Workflow.Runtime.IPendingWork
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: SqlWorkflowPersistenceService(NameValueCollection)
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&quot;></xref> class by using the specified parameters."
  remarks: "This constructor is invoked when the workflow runtime engine loads services from an application configuration file. It can also be programmatically invoked with the `NameValueCollection` parameter. The valid parameters are `ConnectionString`, `OwnershipTimeoutSeconds`, `UnloadOnIdle`, and `EnableRetries`. An <xref:System.ArgumentException> is thrown if parameters contain any other keys."
  syntax:
    content: public SqlWorkflowPersistenceService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> that contains startup parameters."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>parameters</code> contains an invalid database connection string."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parameters </code>is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: SqlWorkflowPersistenceService(String)
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&quot;></xref> class by using the database connection string."
  syntax:
    content: public SqlWorkflowPersistenceService (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "A valid database connection string."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connectionString</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)'
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&quot;></xref> class using a database connection string and other parameters."
  remarks: "Note that using this constructor (which provides a value for `instanceOwnershipDuration`) enables locking. To create a persistence service that does not enable locking, use a different constructor that does not specify `instanceOwnershipDuration`."
  syntax:
    content: public SqlWorkflowPersistenceService (string connectionString, bool unloadOnIdle, TimeSpan instanceOwnershipDuration, TimeSpan loadingInterval);
    parameters:
    - id: connectionString
      type: System.String
      description: "A valid database connection string."
    - id: unloadOnIdle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to unload the workflow when it is in an idle state."
    - id: instanceOwnershipDuration
      type: System.TimeSpan
      description: "The length of time that locks are maintained on idle workflows."
    - id: loadingInterval
      type: System.TimeSpan
      description: "The frequency at which the persistence service polls the database for workflows with expired timers."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connectionString</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries
  id: EnableRetries
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: EnableRetries
  nameWithType: SqlWorkflowPersistenceService.EnableRetries
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Gets and sets a value that specifies whether the <xref href=&quot;System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&quot;></xref> retries committing a work batch."
  remarks: "The following work items cannot be batched and any transaction retries must be handled through the `EnableRetries` property:      -   Polling for expired database timers.      -   Loading workflow instance states.      -   Reloading workflow instances when the workflow run-time engine starts.      -   Calling <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows%2A>.       Besides being set programmatically, this functionality can be enabled through a configuration file. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to set this property through a configuration file, see [Workflow Configuration Files](http://msdn.microsoft.com/en-us/ada4bb90-6c9d-4f3d-a9d0-b559bb0f9909).       For general information about retrying work batch transactions, see [Batching State Information in Workflows](http://msdn.microsoft.com/en-us/ecda18ba-9140-4bd7-b13d-6787fdf5959d)."
  syntax:
    content: public bool EnableRetries { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the service should retry committing the work batch; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows
  id: GetAllWorkflows
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: GetAllWorkflows()
  nameWithType: SqlWorkflowPersistenceService.GetAllWorkflows()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Retrieves instance descriptions of all persisted workflows."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription> GetAllWorkflows ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription}
      description: "A list of all persisted workflows."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  id: LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Retrieves the specified completed scope from the database."
  remarks: "The workflow run-time engine uses LoadCompletedContextActivity during compensation. LoadCompletedContextActivity should only be called by the workflow run-time engine."
  syntax:
    content: protected override System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid id, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: id
      type: System.Guid
      description: "The <xref:System.Guid> of the scope activity."
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> that encloses the scope activity."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "An <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> that represents the completed scope."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A scope that matches <code>id</code> could not be found in the database."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds
  id: LoadExpiredTimerWorkflowIds
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: LoadExpiredTimerWorkflowIds()
  nameWithType: SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Retrieves a list of ids for workflows with expired timers."
  syntax:
    content: public System.Collections.Generic.IList<Guid> LoadExpiredTimerWorkflowIds ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Guid}
      description: "A list of ids for workflows with expired timers."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval
  id: LoadingInterval
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: LoadingInterval
  nameWithType: SqlWorkflowPersistenceService.LoadingInterval
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Gets the length of the loading interval."
  remarks: "The default value is 2 minutes."
  syntax:
    content: public TimeSpan LoadingInterval { get; }
    return:
      type: System.TimeSpan
      description: "The frequency at which the persistence service polls the database for workflows with expired timers."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  id: LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Retrieves the specified workflow instance state from the database."
  remarks: "LoadWorkflowInstanceState should only be called by the workflow run-time engine."
  syntax:
    content: protected override System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "The <xref:System.Guid> of the workflow instance state."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "An <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> that represents the root activity of the workflow instance."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A workflow instance state that matches <code>id</code> could not be found in the database."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: SqlWorkflowPersistenceService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Starts a new timer and recovers running workflow instances."
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  id: SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: SaveCompletedContextActivity(Activity)
  nameWithType: SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Saves the state of the specified completed scope."
  remarks: '`completedScopeActivity` is serialized and added to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.'
  syntax:
    content: protected override void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity completedScopeActivity);
    parameters:
    - id: completedScopeActivity
      type: System.Workflow.ComponentModel.Activity
      description: "An <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> that represents the completed scope."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  id: SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Saves the specified workflow instance state."
  remarks: '`rootActivity` is serialized and written to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>. The out-of-box <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implements locking of the workflow instance state. The user must configure the `instanceOwnershipDuration` parameter in the constructor. This value decides the time interval during which the instance can be locked by a host. If multiple hosts share the same persistence service and database, and another host tries to load the instance during this interval, a <xref:System.Workflow.Runtime.WorkflowOwnershipException> occurs. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.'
  syntax:
    content: protected override void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "The root activity of the workflow instance."
    - id: unlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the workflow instance should not be locked; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the workflow instance should be locked."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId
  id: ServiceInstanceId
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: ServiceInstanceId
  nameWithType: SqlWorkflowPersistenceService.ServiceInstanceId
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Gets the service instance identifier."
  remarks: "The default value is `Guid.Empty`."
  syntax:
    content: public Guid ServiceInstanceId { get; }
    return:
      type: System.Guid
      description: "The service instance identifier."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start
  id: Start
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: Start()
  nameWithType: SqlWorkflowPersistenceService.Start()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Starts the <xref href=&quot;System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&quot;></xref>."
  remarks: "Start must only be called by the workflow run-time engine."
  syntax:
    content: protected override void Start ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: Stop()
  nameWithType: SqlWorkflowPersistenceService.Stop()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Stops the service and the timer."
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)
  id: System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)
  isEii: true
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Writes an <xref:System.Collections.ICollection> of serialized state objects to the database."
  remarks: "The serialized state objects that are contained in `items` are written to the database."
  syntax:
    content: void IPendingWork.Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;></xref>."
    - id: items
      type: System.Collections.ICollection
      description: "The <xref:System.Collections.ICollection> of work items to be written to the database."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit*
  exceptions:
  - type: System.Workflow.Runtime.Hosting.PersistenceException
    commentId: T:System.Workflow.Runtime.Hosting.PersistenceException
    description: "An error occurred while trying to write to the database."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)
  id: System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)
  isEii: true
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Completes the work batch and releases any resources."
  remarks: "In the out-of-box implementation of the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>,       <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> is a no-op. If you inherit from and extend the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, you may use <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete%2A> to perform any actions required on `items` dictated by your implementation."
  syntax:
    content: void IPendingWork.Complete (bool succeeded, System.Collections.ICollection items);
    parameters:
    - id: succeeded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the commit succeeded; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: items
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> of serialized state objects."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)
  id: System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)
  isEii: true
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Returns a value that indicates whether the collection of serialized state objects should be written to the database."
  remarks: "<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit%2A> always returns `true`, which instructs the workflow run-time engine to invoke <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit%2A> on the batch."
  syntax:
    content: bool IPendingWork.MustCommit (System.Collections.ICollection items);
    parameters:
    - id: items
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> of serialized state objects to be written to the database."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> indicates that the batch should be committed; <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit*> always returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  id: UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: UnloadOnIdle(Activity)
  nameWithType: SqlWorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Returns a value that indicates whether the workflow is unloaded when it is in an idle state."
  syntax:
    content: protected override bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "An <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> that represents the root activity of the workflow instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the workflow is unloaded when it is in an idle state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  id: UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  langs:
  - csharp
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Unlocks access to the specified workflow instance state."
  remarks: "This method is used by the workflow runtime to unlock a workflow instance state in the data store without persistence and is called by the workflow runtime if the runtime must unlock the state without persisting, for example, in the case of an <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A>."
  syntax:
    content: protected override void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "An <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref> that represents the root activity of the workflow instance."
  overload: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.Hosting.PersistenceException
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: PersistenceException
  nameWithType: PersistenceException
  fullName: System.Workflow.Runtime.Hosting.PersistenceException
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SqlWorkflowPersistenceService(NameValueCollection)
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SqlWorkflowPersistenceService(String)
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor(System.String,System.Boolean,System.TimeSpan,System.TimeSpan)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SqlWorkflowPersistenceService(String,Boolean,TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: EnableRetries
  nameWithType: SqlWorkflowPersistenceService.EnableRetries
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: GetAllWorkflows()
  nameWithType: SqlWorkflowPersistenceService.GetAllWorkflows()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows()
- uid: System.Collections.Generic.IEnumerable{System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SqlPersistenceWorkflowInstanceDescription>
  nameWithType: IEnumerable<SqlPersistenceWorkflowInstanceDescription>
  fullName: System.Collections.Generic.IEnumerable<System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.Hosting.SqlPersistenceWorkflowInstanceDescription
    name: SqlPersistenceWorkflowInstanceDescription
    nameWithType: SqlPersistenceWorkflowInstanceDescription
    fullName: SqlPersistenceWorkflowInstanceDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadExpiredTimerWorkflowIds()
  nameWithType: SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds()
- uid: System.Collections.Generic.IList{System.Guid}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Guid>
  nameWithType: IList<Guid>
  fullName: System.Collections.Generic.IList<System.Guid>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Guid>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadingInterval
  nameWithType: SqlWorkflowPersistenceService.LoadingInterval
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: OnStarted()
  nameWithType: SqlWorkflowPersistenceService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity(Activity)
  nameWithType: SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity(Activity)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: ServiceInstanceId
  nameWithType: SqlWorkflowPersistenceService.ServiceInstanceId
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: Start()
  nameWithType: SqlWorkflowPersistenceService.Start()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start()
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: Stop()
  nameWithType: SqlWorkflowPersistenceService.Stop()
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop()
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle(Activity)
  nameWithType: SqlWorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle(Activity)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.#ctor*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SqlWorkflowPersistenceService
  nameWithType: SqlWorkflowPersistenceService.SqlWorkflowPersistenceService
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.EnableRetries*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: EnableRetries
  nameWithType: SqlWorkflowPersistenceService.EnableRetries
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.GetAllWorkflows*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: GetAllWorkflows
  nameWithType: SqlWorkflowPersistenceService.GetAllWorkflows
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity
  nameWithType: SqlWorkflowPersistenceService.LoadCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadExpiredTimerWorkflowIds
  nameWithType: SqlWorkflowPersistenceService.LoadExpiredTimerWorkflowIds
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadingInterval*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadingInterval
  nameWithType: SqlWorkflowPersistenceService.LoadingInterval
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.LoadWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState
  nameWithType: SqlWorkflowPersistenceService.LoadWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: OnStarted
  nameWithType: SqlWorkflowPersistenceService.OnStarted
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity
  nameWithType: SqlWorkflowPersistenceService.SaveCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.SaveWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState
  nameWithType: SqlWorkflowPersistenceService.SaveWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.ServiceInstanceId*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: ServiceInstanceId
  nameWithType: SqlWorkflowPersistenceService.ServiceInstanceId
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Start*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: Start
  nameWithType: SqlWorkflowPersistenceService.Start
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.Stop*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: Stop
  nameWithType: SqlWorkflowPersistenceService.Stop
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Commit*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.IPendingWork.Commit
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Commit
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#Complete*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.IPendingWork.Complete
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.Complete
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.System#Workflow#Runtime#IPendingWork#MustCommit*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: System.Workflow.Runtime.IPendingWork.MustCommit
  nameWithType: SqlWorkflowPersistenceService.System.Workflow.Runtime.IPendingWork.MustCommit
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnloadOnIdle*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle
  nameWithType: SqlWorkflowPersistenceService.UnloadOnIdle
- uid: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService.UnlockWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState
  nameWithType: SqlWorkflowPersistenceService.UnlockWorkflowInstanceState
