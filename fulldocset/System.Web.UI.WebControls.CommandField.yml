### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.CommandField
  id: CommandField
  children:
  - System.Web.UI.WebControls.CommandField.#ctor
  - System.Web.UI.WebControls.CommandField.CancelImageUrl
  - System.Web.UI.WebControls.CommandField.CancelText
  - System.Web.UI.WebControls.CommandField.CausesValidation
  - System.Web.UI.WebControls.CommandField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.CommandField.CreateField
  - System.Web.UI.WebControls.CommandField.DeleteImageUrl
  - System.Web.UI.WebControls.CommandField.DeleteText
  - System.Web.UI.WebControls.CommandField.EditImageUrl
  - System.Web.UI.WebControls.CommandField.EditText
  - System.Web.UI.WebControls.CommandField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.CommandField.InsertImageUrl
  - System.Web.UI.WebControls.CommandField.InsertText
  - System.Web.UI.WebControls.CommandField.NewImageUrl
  - System.Web.UI.WebControls.CommandField.NewText
  - System.Web.UI.WebControls.CommandField.SelectImageUrl
  - System.Web.UI.WebControls.CommandField.SelectText
  - System.Web.UI.WebControls.CommandField.ShowCancelButton
  - System.Web.UI.WebControls.CommandField.ShowDeleteButton
  - System.Web.UI.WebControls.CommandField.ShowEditButton
  - System.Web.UI.WebControls.CommandField.ShowInsertButton
  - System.Web.UI.WebControls.CommandField.ShowSelectButton
  - System.Web.UI.WebControls.CommandField.UpdateImageUrl
  - System.Web.UI.WebControls.CommandField.UpdateText
  - System.Web.UI.WebControls.CommandField.ValidateSupportsCallback
  langs:
  - csharp
  name: CommandField
  nameWithType: CommandField
  fullName: System.Web.UI.WebControls.CommandField
  type: Class
  summary: "Represents a special field that displays command buttons to perform selecting, editing, inserting, or deleting operations in a data-bound control."
  remarks: "The CommandField class is a special field used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display command buttons that perform delete, edit, insert, or select operations. The command buttons to perform these operations can be shown or hidden using the properties shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.CommandField.ShowDeleteButton%2A>|Shows or hides a Delete button in a CommandField field for each record in the data-bound control. The Delete button allows the user to delete a record from the data source.|   |<xref:System.Web.UI.WebControls.CommandField.ShowEditButton%2A>|Shows or hides an Edit button in a CommandField field for each record in the data-bound control. The Edit button allows the user to edit a record from the data source. When the user clicks the Edit button for a specific record, that Edit button is replaced with an Update button and a Cancel button. All other command buttons are also hidden.|   |<xref:System.Web.UI.WebControls.CommandField.ShowInsertButton%2A>|Shows or hides the New button in a CommandField field. The New button allows the user to insert a new record in the data source. When the user clicks the New button, it is replaced with an Insert button and a Cancel button. All other command buttons are also hidden. **Note:**  This property applies only to data-bound controls that support inserting operations, such as the <xref:System.Web.UI.WebControls.DetailsView> control.|   |<xref:System.Web.UI.WebControls.CommandField.ShowSelectButton%2A>|Shows or hides a Select button in a CommandField field for each record in the data-bound control. The Select button allows the user to select a record in the data-bound control.|       In addition, the Cancel button displayed when a record is in edit or insert mode can be shown or hidden by setting the <xref:System.Web.UI.WebControls.CommandField.ShowCancelButton%2A> property.      > [!NOTE] >  When a data-bound control is used in combination with a data source control (such as a <xref:System.Web.UI.WebControls.SqlDataSource> control), the data-bound control can take advantage of the data source control&quot;s capabilities and provide automatic delete, update, and insert functionality. For other data sources, you need to provide the routines to perform these operations during the appropriate events for the data-bound control.       The CommandField field is displayed differently depending on the data-bound control in which it is used. For example, the <xref:System.Web.UI.WebControls.GridView> control displays a CommandField field as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.       To specify the type of button to display, use the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property. When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property is set to `ButtonType.Button` or `ButtonType.Link`, you can specify the text to display for the buttons by setting the properties shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.CommandField.CancelText%2A>|The caption for the Cancel button.|   |<xref:System.Web.UI.WebControls.CommandField.DeleteText%2A>|The caption for the Delete button.|   |<xref:System.Web.UI.WebControls.CommandField.EditText%2A>|The caption for the Edit button.|   |<xref:System.Web.UI.WebControls.CommandField.InsertText%2A>|The caption for the Insert button. **Note:**  This property applies only to data-bound controls that support insert operations, such as the <xref:System.Web.UI.WebControls.DetailsView> control.|   |<xref:System.Web.UI.WebControls.CommandField.NewText%2A>|The caption for the New button. **Note:**  This property applies only to data-bound controls that support insert operations, such as the <xref:System.Web.UI.WebControls.DetailsView> control.|   |<xref:System.Web.UI.WebControls.CommandField.SelectText%2A>|The caption for the Select button.|   |<xref:System.Web.UI.WebControls.CommandField.UpdateText%2A>|The caption for the Update button.|       Instead of displaying a command button or a link button, you can display an image button by setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the properties shown in the following table.      |Property|Description|   |--------------|-----------------|   |<xref:System.Web.UI.WebControls.CommandField.CancelImageUrl%2A>|The image to display for the Cancel button|   |<xref:System.Web.UI.WebControls.CommandField.DeleteImageUrl%2A>|The image to display for the Delete button.|   |<xref:System.Web.UI.WebControls.CommandField.EditImageUrl%2A>|The image to display for the Edit button.|   |<xref:System.Web.UI.WebControls.CommandField.InsertText%2A>|The image to display for the Insert button. **Note:**  This property applies only to data-bound controls that support insert operations, such as the <xref:System.Web.UI.WebControls.DetailsView> control.|   |<xref:System.Web.UI.WebControls.CommandField.NewImageUrl%2A>|The image to display for the New button. **Note:**  This property applies only to data-bound controls that support insert operations, such as the <xref:System.Web.UI.WebControls.DetailsView> control.|   |<xref:System.Web.UI.WebControls.CommandField.SelectImageUrl%2A>|The image to display for the Select button.|   |<xref:System.Web.UI.WebControls.CommandField.UpdateImageUrl%2A>|The image to display for the Update button.|       By default, when the user clicks a button in a CommandField field, validation is performed on all validation controls on the page. To prevent validation from occurring when a button is clicked, set the <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> property to `false`.       You can hide a CommandField field in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`.       The CommandField field allows you to customize its header and footer sections. To display a caption in the header or the footer section, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> property, respectively. Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property. To hide the header section in a CommandField object, set the <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> property to `false`.      > [!NOTE] >  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> property for an individual button field. To show or hide the entire header section of a data-bound control (if available), use the control&quot;s `ShowHeader` property.       You also can customize the appearance of the CommandField object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.      |Style property|Description|   |--------------------|-----------------|   |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the CommandField object.|   |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the CommandField object.|   |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the CommandField object.|   |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the CommandField object.|"
  example:
  - "The following code example demonstrates how to use a CommandField field to display controls to edit a record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[CommandField2#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_278_1.aspx)]\n [!code-cs[CommandField2#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_278_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.CommandField.CancelText%2A>, <xref:System.Web.UI.WebControls.CommandField.EditText%2A>, and <xref:System.Web.UI.WebControls.CommandField.UpdateText%2A> properties to customize the text for the editing controls.  \n  \n [!code-vb[CommandField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_278_2.aspx)]\n [!code-cs[CommandField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_278_2.aspx)]"
  syntax:
    content: 'public class CommandField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: CommandField()
  nameWithType: CommandField.CommandField()
  fullName: System.Web.UI.WebControls.CommandField.CommandField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.CommandField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.       To dynamically add a <xref:System.Web.UI.WebControls.CommandField> field to a data-bound control, create a new <xref:System.Web.UI.WebControls.CommandField> object, set its properties, and then add it to the data-bound control&quot;s field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.CommandField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.      > [!NOTE] >  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all your fields reduces the size of the view state for the parent data-bound control."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.CommandField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[CommandFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_166_1.aspx)]\n [!code-cs[CommandFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_166_1.aspx)]"
  syntax:
    content: public CommandField ();
    parameters: []
  overload: System.Web.UI.WebControls.CommandField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.CancelImageUrl
  id: CancelImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: CancelImageUrl
  nameWithType: CommandField.CancelImageUrl
  fullName: System.Web.UI.WebControls.CommandField.CancelImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the Cancel button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the CancelImageUrl property to specify the image to display for the Cancel button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for the Cancel button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.CancelText%2A> property."
  example:
  - "The following code example demonstrates how to use the CancelImageUrl property to specify a custom image to display for a Cancel button in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for a Cancel button to display an image.  \n  \n [!code-cs[CommandFieldEditImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1280_1.aspx)]\n [!code-vb[CommandFieldEditImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1280_1.aspx)]"
  syntax:
    content: public virtual string CancelImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the Cancel button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.CancelImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.CancelText
  id: CancelText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: CancelText
  nameWithType: CommandField.CancelText
  fullName: System.Web.UI.WebControls.CommandField.CancelText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for the Cancel button displayed in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the CancelText property to specify the text to display for the Cancel button.      > [!NOTE] >  As an alternative to displaying text for a Cancel button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.CancelImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the CancelText property to specify a custom caption for a Cancel button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[CommandField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_997_1.aspx)]\n [!code-cs[CommandField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_997_1.aspx)]"
  syntax:
    content: public virtual string CancelText { get; set; }
    return:
      type: System.String
      description: "The caption for the Cancel button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is &quot;Cancel&quot;."
  overload: System.Web.UI.WebControls.CommandField.CancelText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: CausesValidation
  nameWithType: CommandField.CausesValidation
  fullName: System.Web.UI.WebControls.CommandField.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether validation is performed when the user clicks a button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "Use the CausesValidation property to specify whether validation is performed when a button in a <xref:System.Web.UI.WebControls.CommandField> field is clicked. When this property is set to `true`, by default all validation controls on the page are validated. To limit validation to only a certain group of validation controls, create a validation group and then set the <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> property to the validation group&quot;s name. For more information on validation groups, see <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A?displayProperty=fullName>."
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent validation from occurring when a button in a <xref:System.Web.UI.WebControls.CommandField> field is clicked.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[CommandFieldCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_714_1.aspx)]\n [!code-vb[CommandFieldCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_714_1.aspx)]"
  syntax:
    content: public override bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to perform validation when the user clicks a button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: CommandField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.CommandField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies the properties of the current <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> object to the specified <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> object."
  remarks: "The CopyProperties method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to copy the properties of the current <xref:System.Web.UI.WebControls.CommandField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method."
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref> to copy the properties of the current <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> to."
  overload: System.Web.UI.WebControls.CommandField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: CreateField()
  nameWithType: CommandField.CreateField()
  fullName: System.Web.UI.WebControls.CommandField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates an empty <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> object."
  remarks: "The CreateField method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to create an empty <xref:System.Web.UI.WebControls.CommandField> object to copy the properties of the current <xref:System.Web.UI.WebControls.CommandField> object to."
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.DeleteImageUrl
  id: DeleteImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: DeleteImageUrl
  nameWithType: CommandField.DeleteImageUrl
  fullName: System.Web.UI.WebControls.CommandField.DeleteImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for a Delete button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the DeleteImageUrl property to specify the image to display for a Delete button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for a Delete button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.DeleteText%2A> property."
  example:
  - "The following code example demonstrates how to use the DeleteImageUrl property to specify a custom image to display for a Delete button in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for the Delete button to display an image.  \n  \n [!code-vb[CommandFieldDeleteImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1112_1.aspx)]\n [!code-cs[CommandFieldDeleteImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1112_1.aspx)]"
  syntax:
    content: public virtual string DeleteImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for a Delete button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.DeleteImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.DeleteText
  id: DeleteText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: DeleteText
  nameWithType: CommandField.DeleteText
  fullName: System.Web.UI.WebControls.CommandField.DeleteText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for a Delete button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the DeleteText property to specify the text to display for a Delete button.      > [!NOTE] >  As an alternative to displaying text for a Delete button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.DeleteImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the DeleteText property to specify a custom caption for a Delete button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CommandFieldDeleteText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1360_1.aspx)]\n [!code-vb[CommandFieldDeleteText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1360_1.aspx)]"
  syntax:
    content: public virtual string DeleteText { get; set; }
    return:
      type: System.String
      description: "The caption for a Delete button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is &quot;Delete&quot;."
  overload: System.Web.UI.WebControls.CommandField.DeleteText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.EditImageUrl
  id: EditImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: EditImageUrl
  nameWithType: CommandField.EditImageUrl
  fullName: System.Web.UI.WebControls.CommandField.EditImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for an Edit button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the EditImageUrl property to specify the image to display for an Edit button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for an Edit button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.EditText%2A> property."
  example:
  - "The following code example demonstrates how to use the EditImageUrl property to specify a custom image to display for an Edit button in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for an Edit button to display an image.  \n  \n [!code-cs[CommandFieldEditImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1278_1.aspx)]\n [!code-vb[CommandFieldEditImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1278_1.aspx)]"
  syntax:
    content: public virtual string EditImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for an Edit button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.EditImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.EditText
  id: EditText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: EditText
  nameWithType: CommandField.EditText
  fullName: System.Web.UI.WebControls.CommandField.EditText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for an Edit button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> object is set to `ButtonType.Button` or `ButtonType.Link`, use the EditText property to specify the text to display for an Edit button.      > [!NOTE] >  As an alternative to displaying text for an Edit button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.EditImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the EditText property to specify a custom caption for an Edit button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[CommandField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_846_1.aspx)]\n [!code-cs[CommandField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_846_1.aspx)]"
  syntax:
    content: public virtual string EditText { get; set; }
    return:
      type: System.String
      description: "The caption for an Edit button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is &quot;Edit&quot;."
  overload: System.Web.UI.WebControls.CommandField.EditText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: CommandField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.CommandField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes the specified <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> object to the specified row state."
  remarks: "The InitializeCell method is implemented by <xref:System.Web.UI.WebControls.DataControlField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row-by-row when the control&quot;s `CreateChildControls` method is called. The InitializeCell method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.       Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing a <xref:System.Web.UI.WebControls.CommandField>-derived class."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref> to initialize."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;></xref> values."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;></xref> values."
    - id: rowIndex
      type: System.Int32
      description: "The zero-based index of the row that contains the cell."
  overload: System.Web.UI.WebControls.CommandField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.InsertImageUrl
  id: InsertImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: InsertImageUrl
  nameWithType: CommandField.InsertImageUrl
  fullName: System.Web.UI.WebControls.CommandField.InsertImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the Insert button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the InsertImageUrl property to specify the image to display for an Insert button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for the Insert button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.InsertText%2A> property."
  example:
  - "The following code example demonstrates how to use the InsertImageUrl property to specify a custom image to display for an Insert button in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for an Insert button to display an image.  \n  \n [!code-vb[CommandFieldInsertImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1179_1.aspx)]\n [!code-cs[CommandFieldInsertImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1179_1.aspx)]"
  syntax:
    content: public virtual string InsertImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the Insert button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.InsertImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.InsertText
  id: InsertText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: InsertText
  nameWithType: CommandField.InsertText
  fullName: System.Web.UI.WebControls.CommandField.InsertText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for the Insert button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the InsertText property to specify the text to display for the Insert button.      > [!NOTE] >  As an alternative to displaying text for the Insert button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.InsertImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the InsertText property to specify a custom caption for an Insert button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[CommandFieldInsertText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_709_1.aspx)]\n [!code-vb[CommandFieldInsertText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_709_1.aspx)]"
  syntax:
    content: public virtual string InsertText { get; set; }
    return:
      type: System.String
      description: "The caption for the Insert button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is &quot;Insert&quot;."
  overload: System.Web.UI.WebControls.CommandField.InsertText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.NewImageUrl
  id: NewImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: NewImageUrl
  nameWithType: CommandField.NewImageUrl
  fullName: System.Web.UI.WebControls.CommandField.NewImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for the New button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the NewImageUrl property to specify the image to display for the New button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for the New button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.NewText%2A> property."
  example:
  - "The following code example demonstrates how to use the NewImageUrl property to specify a custom image to display for the New button in a <xref:System.Web.UI.WebControls.CommandField> column field of a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for the New button to display an image.  \n  \n [!code-vb[CommandFieldInsertImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1160_1.aspx)]\n [!code-cs[CommandFieldInsertImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1160_1.aspx)]"
  syntax:
    content: public virtual string NewImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for the New button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.NewImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.NewText
  id: NewText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: NewText
  nameWithType: CommandField.NewText
  fullName: System.Web.UI.WebControls.CommandField.NewText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for the New button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> object is set to `ButtonType.Button` or `ButtonType.Link`, use the NewText property to specify the text to display for the New button.      > [!NOTE] >  As an alternative to displaying text for the New button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.NewImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the NewText property to specify a custom caption for the New button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.DetailsView> control.  \n  \n [!code-cs[CommandFieldInsertText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_288_1.aspx)]\n [!code-vb[CommandFieldInsertText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_288_1.aspx)]"
  syntax:
    content: public virtual string NewText { get; set; }
    return:
      type: System.String
      description: "The caption for the New button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field. The default is &quot;New&quot;."
  overload: System.Web.UI.WebControls.CommandField.NewText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.SelectImageUrl
  id: SelectImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: SelectImageUrl
  nameWithType: CommandField.SelectImageUrl
  fullName: System.Web.UI.WebControls.CommandField.SelectImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for a Select button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the SelectImageUrl property to specify the image to display for a Select button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for a Select button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.SelectText%2A> property."
  example:
  - "The following code example demonstrates how to use the SelectImageUrl property to specify a custom image to display for a Select button in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for a Select button to display an image.  \n  \n [!code-vb[CommandFieldSelectImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1304_1.aspx)]\n [!code-cs[CommandFieldSelectImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1304_1.aspx)]"
  syntax:
    content: public virtual string SelectImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL to an image to display for a Select button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.SelectImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.SelectText
  id: SelectText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: SelectText
  nameWithType: CommandField.SelectText
  fullName: System.Web.UI.WebControls.CommandField.SelectText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for a Select button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the SelectText property to specify the text to display for a Select button.      > [!NOTE] >  As an alternative to displaying text for a Select button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.SelectImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the SelectText property to specify a custom caption for a Select button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CommandFieldSelectText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_969_1.aspx)]\n [!code-vb[CommandFieldSelectText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_969_1.aspx)]"
  syntax:
    content: public virtual string SelectText { get; set; }
    return:
      type: System.String
      description: "The caption for a Select button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is &quot;Select&quot;."
  overload: System.Web.UI.WebControls.CommandField.SelectText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.ShowCancelButton
  id: ShowCancelButton
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: ShowCancelButton
  nameWithType: CommandField.ShowCancelButton
  fullName: System.Web.UI.WebControls.CommandField.ShowCancelButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether a Cancel button is displayed in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "Use the ShowCancelButton property to specify whether the Cancel button is displayed in a <xref:System.Web.UI.WebControls.CommandField> object. A Cancel button can be displayed in a <xref:System.Web.UI.WebControls.CommandField> field when the corresponding record in a data-bound control is in edit or insert mode. The Cancel button allows the user to cancel the edit or insert operation and returns the record to its normal display mode.       When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the <xref:System.Web.UI.WebControls.CommandField.CancelText%2A> property to specify the text to display for a Cancel button. Alternatively, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.CancelImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the ShowCancelButton property to hide the Cancel button displayed when a row in a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.  \n  \n [!code-cs[CommandFieldShowCancelButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1065_1.aspx)]\n [!code-vb[CommandFieldShowCancelButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1065_1.aspx)]"
  syntax:
    content: public virtual bool ShowCancelButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display a Cancel button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.ShowCancelButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.ShowDeleteButton
  id: ShowDeleteButton
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: ShowDeleteButton
  nameWithType: CommandField.ShowDeleteButton
  fullName: System.Web.UI.WebControls.CommandField.ShowDeleteButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether a Delete button is displayed in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "Use the ShowDeleteButton property to specify whether a Delete button is displayed in a <xref:System.Web.UI.WebControls.CommandField> field for each record in the data-source control. The Delete button allows you to remove a record from the data source.      > [!NOTE] >  When a data-bound control is used in combination with a data source control (such as a <xref:System.Web.UI.WebControls.SqlDataSource> control), the data-bound control can take advantage of the data source control&quot;s capabilities and provide automatic delete functionality. For other data sources, you must provide the routines to perform the delete operation during the appropriate event for the data-bound control.       When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the <xref:System.Web.UI.WebControls.CommandField.DeleteText%2A> property to specify the text to display for a Delete button. Alternatively, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.DeleteImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the ShowDeleteButton property to display a Delete button for each record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CommandFieldShowDeleteButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_486_1.aspx)]\n [!code-vb[CommandFieldShowDeleteButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_486_1.aspx)]"
  syntax:
    content: public virtual bool ShowDeleteButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display a Delete button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.ShowDeleteButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.ShowEditButton
  id: ShowEditButton
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: ShowEditButton
  nameWithType: CommandField.ShowEditButton
  fullName: System.Web.UI.WebControls.CommandField.ShowEditButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether an Edit button is displayed in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "Use the ShowEditButton property to specify whether an Edit button is displayed in the <xref:System.Web.UI.WebControls.CommandField> field for each record in the data-source control. The Edit button allows you to edit the values of a record.       When the user clicks an Edit button, input controls are displayed for each field in the record. The Edit button for the record is replaced with an Update button and a Cancel button, and all other command buttons for the record are hidden. Clicking the Update button updates the record with the new values in the data source, whereas clicking the Cancel button cancels the operation.      > [!NOTE] >  When a data-bound control is used in combination with a data source control (such as a <xref:System.Web.UI.WebControls.SqlDataSource> control), the data-bound control can take advantage of the data source control&quot;s capabilities and provide automatic updating functionality. For other data sources, you must provide the routines to perform the update operation during the appropriate event for the data-bound control.       When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the <xref:System.Web.UI.WebControls.CommandField.EditText%2A> property to specify the text to display for an Edit button. Alternatively, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.EditImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the ShowEditButton property to display an Edit button for each record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CommandFieldEditImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_768_1.aspx)]\n [!code-vb[CommandFieldEditImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_768_1.aspx)]"
  syntax:
    content: public virtual bool ShowEditButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display an Edit button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.ShowEditButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.ShowInsertButton
  id: ShowInsertButton
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: ShowInsertButton
  nameWithType: CommandField.ShowInsertButton
  fullName: System.Web.UI.WebControls.CommandField.ShowInsertButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether a New button is displayed in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "Use the ShowInsertButton property to specify whether a New button is displayed in a <xref:System.Web.UI.WebControls.CommandField> field. The New button is displayed only once in the <xref:System.Web.UI.WebControls.CommandField> field and allows the user to add a new record in the data source.      > [!NOTE] >  This property applies only to data-bound controls that support insert operations, such as the <xref:System.Web.UI.WebControls.DetailsView> control.       When the user clicks the New button, input controls are displayed for each field displayed in the data-bound control, allowing the user to enter the values for the new record. The New button is replaced with an Insert button and a Cancel button, and all other command buttons in the <xref:System.Web.UI.WebControls.CommandField> field are hidden. Clicking the Insert button adds the record to the data source, whereas clicking the Cancel button cancels the operation.      > [!NOTE] >  When a data-bound control is used in combination with a data source control (such as a <xref:System.Web.UI.WebControls.SqlDataSource> control), the data-bound control can take advantage of the data source control&quot;s capabilities and provide automatic insert functionality. For other data sources, you must provide the routines to perform the insert operation during the appropriate event for the data-bound control.       When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the <xref:System.Web.UI.WebControls.CommandField.NewText%2A> property to specify the text to display for a New button. Alternatively, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.NewImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the ShowInsertButton property to display a New button in a <xref:System.Web.UI.WebControls.DetailsView> control, which allows the user to add a new record to the data source.  \n  \n [!code-cs[CommandFieldShowInsertButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_434_1.aspx)]\n [!code-vb[CommandFieldShowInsertButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_434_1.aspx)]"
  syntax:
    content: public virtual bool ShowInsertButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display a New button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.ShowInsertButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.ShowSelectButton
  id: ShowSelectButton
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: ShowSelectButton
  nameWithType: CommandField.ShowSelectButton
  fullName: System.Web.UI.WebControls.CommandField.ShowSelectButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether a Select button is displayed in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "Use the ShowSelectButton property to specify whether a Select button is displayed in a <xref:System.Web.UI.WebControls.CommandField> field for each record in the data-source control. The Select button allows the user to select a row in the data-source control. When the Select button for a record is clicked, the data-source control responds accordingly. For example, a <xref:System.Web.UI.WebControls.GridView> control updates the <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>, <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A>, <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A>, and <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> properties to values corresponding to the selected row. The <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> style is then applied to the selected row and the <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> and <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> events are raised.       When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the <xref:System.Web.UI.WebControls.CommandField.SelectText%2A> property to specify the text to display for a Select button. Alternatively, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.SelectImageUrl%2A> property."
  example:
  - "The following code example demonstrates how to use the ShowSelectButton property to display a Select button for each record in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[CommandFieldShowSelectButton#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1197_1.aspx)]\n [!code-vb[CommandFieldShowSelectButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1197_1.aspx)]"
  syntax:
    content: public virtual bool ShowSelectButton { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display a Select button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CommandField.ShowSelectButton*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.UpdateImageUrl
  id: UpdateImageUrl
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: UpdateImageUrl
  nameWithType: CommandField.UpdateImageUrl
  fullName: System.Web.UI.WebControls.CommandField.UpdateImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL to an image to display for an Update button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Image`, use the UpdateImageUrl property to specify the image to display for an Update button. This image can be in any file format (.jpg, .gif, .bmp, and so on), as long as the client&quot;s browser supports that format.      > [!NOTE] >  As an alternative to displaying an image for an Update button, you can display text by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Button` or `ButtonType.Link` and then setting the <xref:System.Web.UI.WebControls.CommandField.UpdateText%2A> property."
  example:
  - "The following code example demonstrates how to use the UpdateImageUrl property to specify a custom image to display for an Update button in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property must be set to `ButtonType.Image` for an Update button to display an image.  \n  \n [!code-cs[CommandFieldEditImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_900_1.aspx)]\n [!code-vb[CommandFieldEditImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_900_1.aspx)]"
  syntax:
    content: public virtual string UpdateImageUrl { get; set; }
    return:
      type: System.String
      description: "The URL for an image to display for an Update button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is an empty string (&quot;&quot;), which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CommandField.UpdateImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.UpdateText
  id: UpdateText
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: UpdateText
  nameWithType: CommandField.UpdateText
  fullName: System.Web.UI.WebControls.CommandField.UpdateText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption for an Update button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> field."
  remarks: "When the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property of a <xref:System.Web.UI.WebControls.CommandField> field is set to `ButtonType.Button` or `ButtonType.Link`, use the UpdateText property to specify the text to display in an Update button.      > [!NOTE] >  As an alternative to displaying text for an Update button, you can display an image by first setting the <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> property to `ButtonType.Image` and then setting the <xref:System.Web.UI.WebControls.CommandField.UpdateImageUrl%2A> property.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the UpdateText property to specify a custom caption for an Update button displayed in a <xref:System.Web.UI.WebControls.CommandField> field of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[CommandField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1057_1.aspx)]\n [!code-cs[CommandField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1057_1.aspx)]"
  syntax:
    content: public virtual string UpdateText { get; set; }
    return:
      type: System.String
      description: "The caption for an Update button in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref>. The default is &quot;Update&quot;."
  overload: System.Web.UI.WebControls.CommandField.UpdateText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.CommandField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: CommandField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.CommandField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the controls contained in a <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> object support callbacks."
  remarks: "The ValidateSupportsCallback method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.CommandField> object support callbacks. The <xref:System.Web.UI.WebControls.CommandField> class does not support callbacks when the Select button is displayed. This method has been implemented to throw a <xref:System.NotSupportedException> exception when the Select button is displayed.      > [!NOTE] >  This method is used primarily by control developers."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.CommandField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The Select button is displayed in the <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> object. The <xref href=&quot;System.Web.UI.WebControls.CommandField&quot;></xref> class does support callbacks when the Select button is displayed."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.CommandField.#ctor
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CommandField()
  nameWithType: CommandField.CommandField()
  fullName: System.Web.UI.WebControls.CommandField.CommandField()
- uid: System.Web.UI.WebControls.CommandField.CancelImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CancelImageUrl
  nameWithType: CommandField.CancelImageUrl
  fullName: System.Web.UI.WebControls.CommandField.CancelImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.CommandField.CancelText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CancelText
  nameWithType: CommandField.CancelText
  fullName: System.Web.UI.WebControls.CommandField.CancelText
- uid: System.Web.UI.WebControls.CommandField.CausesValidation
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CausesValidation
  nameWithType: CommandField.CausesValidation
  fullName: System.Web.UI.WebControls.CommandField.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.CommandField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: CommandField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.CommandField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.CommandField.CreateField
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CreateField()
  nameWithType: CommandField.CreateField()
  fullName: System.Web.UI.WebControls.CommandField.CreateField()
- uid: System.Web.UI.WebControls.CommandField.DeleteImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: DeleteImageUrl
  nameWithType: CommandField.DeleteImageUrl
  fullName: System.Web.UI.WebControls.CommandField.DeleteImageUrl
- uid: System.Web.UI.WebControls.CommandField.DeleteText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: DeleteText
  nameWithType: CommandField.DeleteText
  fullName: System.Web.UI.WebControls.CommandField.DeleteText
- uid: System.Web.UI.WebControls.CommandField.EditImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: EditImageUrl
  nameWithType: CommandField.EditImageUrl
  fullName: System.Web.UI.WebControls.CommandField.EditImageUrl
- uid: System.Web.UI.WebControls.CommandField.EditText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: EditText
  nameWithType: CommandField.EditText
  fullName: System.Web.UI.WebControls.CommandField.EditText
- uid: System.Web.UI.WebControls.CommandField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: CommandField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.CommandField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.CommandField.InsertImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: InsertImageUrl
  nameWithType: CommandField.InsertImageUrl
  fullName: System.Web.UI.WebControls.CommandField.InsertImageUrl
- uid: System.Web.UI.WebControls.CommandField.InsertText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: InsertText
  nameWithType: CommandField.InsertText
  fullName: System.Web.UI.WebControls.CommandField.InsertText
- uid: System.Web.UI.WebControls.CommandField.NewImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: NewImageUrl
  nameWithType: CommandField.NewImageUrl
  fullName: System.Web.UI.WebControls.CommandField.NewImageUrl
- uid: System.Web.UI.WebControls.CommandField.NewText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: NewText
  nameWithType: CommandField.NewText
  fullName: System.Web.UI.WebControls.CommandField.NewText
- uid: System.Web.UI.WebControls.CommandField.SelectImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: SelectImageUrl
  nameWithType: CommandField.SelectImageUrl
  fullName: System.Web.UI.WebControls.CommandField.SelectImageUrl
- uid: System.Web.UI.WebControls.CommandField.SelectText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: SelectText
  nameWithType: CommandField.SelectText
  fullName: System.Web.UI.WebControls.CommandField.SelectText
- uid: System.Web.UI.WebControls.CommandField.ShowCancelButton
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowCancelButton
  nameWithType: CommandField.ShowCancelButton
  fullName: System.Web.UI.WebControls.CommandField.ShowCancelButton
- uid: System.Web.UI.WebControls.CommandField.ShowDeleteButton
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowDeleteButton
  nameWithType: CommandField.ShowDeleteButton
  fullName: System.Web.UI.WebControls.CommandField.ShowDeleteButton
- uid: System.Web.UI.WebControls.CommandField.ShowEditButton
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowEditButton
  nameWithType: CommandField.ShowEditButton
  fullName: System.Web.UI.WebControls.CommandField.ShowEditButton
- uid: System.Web.UI.WebControls.CommandField.ShowInsertButton
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowInsertButton
  nameWithType: CommandField.ShowInsertButton
  fullName: System.Web.UI.WebControls.CommandField.ShowInsertButton
- uid: System.Web.UI.WebControls.CommandField.ShowSelectButton
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowSelectButton
  nameWithType: CommandField.ShowSelectButton
  fullName: System.Web.UI.WebControls.CommandField.ShowSelectButton
- uid: System.Web.UI.WebControls.CommandField.UpdateImageUrl
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: UpdateImageUrl
  nameWithType: CommandField.UpdateImageUrl
  fullName: System.Web.UI.WebControls.CommandField.UpdateImageUrl
- uid: System.Web.UI.WebControls.CommandField.UpdateText
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: UpdateText
  nameWithType: CommandField.UpdateText
  fullName: System.Web.UI.WebControls.CommandField.UpdateText
- uid: System.Web.UI.WebControls.CommandField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: CommandField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.CommandField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.CommandField.#ctor*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CommandField
  nameWithType: CommandField.CommandField
- uid: System.Web.UI.WebControls.CommandField.CancelImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CancelImageUrl
  nameWithType: CommandField.CancelImageUrl
- uid: System.Web.UI.WebControls.CommandField.CancelText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CancelText
  nameWithType: CommandField.CancelText
- uid: System.Web.UI.WebControls.CommandField.CausesValidation*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CausesValidation
  nameWithType: CommandField.CausesValidation
- uid: System.Web.UI.WebControls.CommandField.CopyProperties*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CopyProperties
  nameWithType: CommandField.CopyProperties
- uid: System.Web.UI.WebControls.CommandField.CreateField*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: CreateField
  nameWithType: CommandField.CreateField
- uid: System.Web.UI.WebControls.CommandField.DeleteImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: DeleteImageUrl
  nameWithType: CommandField.DeleteImageUrl
- uid: System.Web.UI.WebControls.CommandField.DeleteText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: DeleteText
  nameWithType: CommandField.DeleteText
- uid: System.Web.UI.WebControls.CommandField.EditImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: EditImageUrl
  nameWithType: CommandField.EditImageUrl
- uid: System.Web.UI.WebControls.CommandField.EditText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: EditText
  nameWithType: CommandField.EditText
- uid: System.Web.UI.WebControls.CommandField.InitializeCell*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: InitializeCell
  nameWithType: CommandField.InitializeCell
- uid: System.Web.UI.WebControls.CommandField.InsertImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: InsertImageUrl
  nameWithType: CommandField.InsertImageUrl
- uid: System.Web.UI.WebControls.CommandField.InsertText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: InsertText
  nameWithType: CommandField.InsertText
- uid: System.Web.UI.WebControls.CommandField.NewImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: NewImageUrl
  nameWithType: CommandField.NewImageUrl
- uid: System.Web.UI.WebControls.CommandField.NewText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: NewText
  nameWithType: CommandField.NewText
- uid: System.Web.UI.WebControls.CommandField.SelectImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: SelectImageUrl
  nameWithType: CommandField.SelectImageUrl
- uid: System.Web.UI.WebControls.CommandField.SelectText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: SelectText
  nameWithType: CommandField.SelectText
- uid: System.Web.UI.WebControls.CommandField.ShowCancelButton*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowCancelButton
  nameWithType: CommandField.ShowCancelButton
- uid: System.Web.UI.WebControls.CommandField.ShowDeleteButton*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowDeleteButton
  nameWithType: CommandField.ShowDeleteButton
- uid: System.Web.UI.WebControls.CommandField.ShowEditButton*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowEditButton
  nameWithType: CommandField.ShowEditButton
- uid: System.Web.UI.WebControls.CommandField.ShowInsertButton*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowInsertButton
  nameWithType: CommandField.ShowInsertButton
- uid: System.Web.UI.WebControls.CommandField.ShowSelectButton*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ShowSelectButton
  nameWithType: CommandField.ShowSelectButton
- uid: System.Web.UI.WebControls.CommandField.UpdateImageUrl*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: UpdateImageUrl
  nameWithType: CommandField.UpdateImageUrl
- uid: System.Web.UI.WebControls.CommandField.UpdateText*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: UpdateText
  nameWithType: CommandField.UpdateText
- uid: System.Web.UI.WebControls.CommandField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.CommandField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: CommandField.ValidateSupportsCallback
