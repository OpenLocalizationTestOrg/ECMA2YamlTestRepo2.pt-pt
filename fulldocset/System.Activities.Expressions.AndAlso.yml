### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.AndAlso
  id: AndAlso
  children:
  - System.Activities.Expressions.AndAlso.#ctor
  - System.Activities.Expressions.AndAlso.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.Expressions.AndAlso.Left
  - System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Expressions.AndAlso.Right
  langs:
  - csharp
  name: AndAlso
  nameWithType: AndAlso
  fullName: System.Activities.Expressions.AndAlso
  type: Class
  summary: "Computes the logical AND of two values. Both values are converted into Boolean, and if both are true then this expression returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. If one or both values evaluate to false, this expression returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. AndAlso is the “short circuit” version of the logical AND operator, returning false as soon as one of operands is evaluated to be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  syntax:
    content: 'public sealed class AndAlso : System.Activities.Activity<bool>'
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.Implementation
  - System.Activities.Activity.ImplementationVersion
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  platform:
  - net462
- uid: System.Activities.Expressions.AndAlso.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.AndAlso
  langs:
  - csharp
  name: AndAlso()
  nameWithType: AndAlso.AndAlso()
  fullName: System.Activities.Expressions.AndAlso.AndAlso()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: "Initializes a new instance of the <xref href=&quot;System.Activities.Expressions.AndAlso&quot;></xref> class."
  syntax:
    content: public AndAlso ();
    parameters: []
  overload: System.Activities.Expressions.AndAlso.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.AndAlso.CacheMetadata(System.Activities.ActivityMetadata)
  id: CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.Expressions.AndAlso
  langs:
  - csharp
  name: CacheMetadata(ActivityMetadata)
  nameWithType: AndAlso.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.Expressions.AndAlso.CacheMetadata(ActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void CacheMetadata (System.Activities.ActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.ActivityMetadata
      description: "To be added."
  overload: System.Activities.Expressions.AndAlso.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.AndAlso.Left
  id: Left
  parent: System.Activities.Expressions.AndAlso
  langs:
  - csharp
  name: Left
  nameWithType: AndAlso.Left
  fullName: System.Activities.Expressions.AndAlso.Left
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: "Gets or sets the left operand."
  syntax:
    content: public System.Activities.Activity<bool> Left { get; set; }
    return:
      type: System.Activities.Activity{System.Boolean}
      description: "The left operand."
  overload: System.Activities.Expressions.AndAlso.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Expressions.AndAlso
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: AndAlso.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.UpdateMapMetadata
      description: "To be added."
    - id: originalActivity
      type: System.Activities.Activity
      description: "To be added."
  overload: System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.AndAlso.Right
  id: Right
  parent: System.Activities.Expressions.AndAlso
  langs:
  - csharp
  name: Right
  nameWithType: AndAlso.Right
  fullName: System.Activities.Expressions.AndAlso.Right
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: "Gets or sets the right operand."
  syntax:
    content: public System.Activities.Activity<bool> Right { get; set; }
    return:
      type: System.Activities.Activity{System.Boolean}
      description: "The right operand."
  overload: System.Activities.Expressions.AndAlso.Right*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Activity`1
  isExternal: false
  name: System.Activities.Activity<System.Boolean>
- uid: System.Activities.Expressions.AndAlso.#ctor
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: AndAlso()
  nameWithType: AndAlso.AndAlso()
  fullName: System.Activities.Expressions.AndAlso.AndAlso()
- uid: System.Activities.Expressions.AndAlso.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: AndAlso.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.Expressions.AndAlso.CacheMetadata(ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.Expressions.AndAlso.Left
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: Left
  nameWithType: AndAlso.Left
  fullName: System.Activities.Expressions.AndAlso.Left
- uid: System.Activities.Activity{System.Boolean}
  parent: System.Activities
  isExternal: false
  name: Activity<Boolean>
  nameWithType: Activity<Boolean>
  fullName: System.Activities.Activity<System.Boolean>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: Activity<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: AndAlso.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: UpdateMapMetadata
  nameWithType: UpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Expressions.AndAlso.Right
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: Right
  nameWithType: AndAlso.Right
  fullName: System.Activities.Expressions.AndAlso.Right
- uid: System.Activities.Expressions.AndAlso.#ctor*
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: AndAlso
  nameWithType: AndAlso.AndAlso
- uid: System.Activities.Expressions.AndAlso.CacheMetadata*
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: CacheMetadata
  nameWithType: AndAlso.CacheMetadata
- uid: System.Activities.Expressions.AndAlso.Left*
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: Left
  nameWithType: AndAlso.Left
- uid: System.Activities.Expressions.AndAlso.OnCreateDynamicUpdateMap*
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: AndAlso.OnCreateDynamicUpdateMap
- uid: System.Activities.Expressions.AndAlso.Right*
  parent: System.Activities.Expressions.AndAlso
  isExternal: false
  name: Right
  nameWithType: AndAlso.Right
