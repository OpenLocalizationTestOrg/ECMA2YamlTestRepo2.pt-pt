### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StrongNameIdentityPermission
  id: StrongNameIdentityPermission
  children:
  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  - System.Security.Permissions.StrongNameIdentityPermission.Copy
  - System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.Name
  - System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  - System.Security.Permissions.StrongNameIdentityPermission.ToXml
  - System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.StrongNameIdentityPermission.Version
  langs:
  - csharp
  name: StrongNameIdentityPermission
  nameWithType: StrongNameIdentityPermission
  fullName: System.Security.Permissions.StrongNameIdentityPermission
  type: Class
  summary: "Define a permissão de identidade para nomes seguros. Esta classe não pode ser herdada."
  remarks: "> [!IMPORTANT]> Começando com o [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], permissões de identidade não são utilizadas.   >> As versões do .NET Framework 1.0 e 1.1, permissões de identidade não podem ter um <xref:System.Security.Permissions.PermissionState>o valor de estado de permissão.</xref:System.Security.Permissions.PermissionState> O .NET Framework versão 2.0 e posterior, de permissões de identidade podem ter qualquer valor de estado de permissão.  Isto significa que, na versão 2.0 e versões posteriores, permissões de identidade têm o mesmo comportamento de permissões que implementam o <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Ou seja, uma pedido para uma identidade sempre for bem sucedida, independentemente da identidade da assemblagem, se a assemblagem foi concedida fidedignidade total.       Utilize StrongNameIdentityPermission para confirmar que o código de chamada é numa assemblagem do código específico com nome seguro. Dar resposta às exigências completa para StrongNameIdentityPermission concluída com êxito apenas se a todas as assemblagens na pilha de tem a provas correta para satisfazer o pedido. Ligação exige que utilizam o <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>atributo com êxito apenas se o chamador imediato a provas correta.</xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>       Uma identidade de nome seguro baseiam-se uma chave criptográfica pública, chamada objeto grande binário (BLOB), que, opcionalmente, é combinado com o nome e versão de uma assemblagem específica. A chave define um espaço de nomes exclusivo e fornece a verificação segura que o nome é genuíno, porque a definição do nome tem de ser uma assemblagem que está assinada pela chave privada correspondente.       Tenha em atenção que a validade da chave de nome seguro não está dependente de uma relação de fidedignidade ou em qualquer certificado necessariamente a ser emitido para a chave.       Nas versões do .NET Framework 1.0 e 1.1, exigências nas permissões de identidade são eficazes, mesmo quando a assemblagem de chamada é totalmente fidedigna. Ou seja, mesmo que a assemblagem de chamada tem fidedignidade total, uma pedido para uma permissão de identidade falha se a assemblagem não cumpre os critérios de pedidos. O .NET Framework versão 2.0 e posteriores, exigências de permissões de identidade são ineficaz se a assemblagem de chamada tem fidedignidade total. Isto garante a consistência para todas as permissões e elimina o tratamento de permissões de identidade num caso especial.       Para obter uma descrição completa de nomes seguros, consulte o <xref:System.Security.Policy.StrongName>página de referência.</xref:System.Security.Policy.StrongName> Para obter mais informações sobre assemblagens com nome seguro, consulte [Strong-Named assemblagens](~/add/includes/ajax-current-ext-md.md).       A classe de StrongNameIdentityPermission é utilizada para definir os requisitos de nome seguro para aceder os membros de um tipo públicos. O <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute>atributo pode ser utilizado para definir os requisitos de nome seguro ao nível da assemblagem.</xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> No .NET Framework versão 2.0 e posterior, também pode utilizar o <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>atributo para especificar que todos os tipos de nonpublic nessa assemblagem são visíveis para outra assemblagem.</xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> Para obter mais informações, consulte [Friend assemblagens](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: StrongNameIdentityPermission(PermissionState)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Cria um totalmente restrito (`None`) ou `Unrestricted` permissão.      > [!NOTE] > No versões do .NET Framework 1.0 e 1.1, permissões de identidade não podem ter um <xref:System.Security.Permissions.PermissionState>o valor de estado de permissão.</xref:System.Security.Permissions.PermissionState> O .NET Framework versão 2.0 e posterior, de permissões de identidade podem ter qualquer valor de estado de permissão.  Isto significa que, na versão 2.0 e versões posteriores, permissões de identidade têm o mesmo comportamento de permissões que implementam o <xref:System.Security.Permissions.IUnrestrictedPermission>interface.</xref:System.Security.Permissions.IUnrestrictedPermission> Ou seja, uma pedido para uma identidade sempre for bem sucedida, independentemente da identidade da assemblagem, se a assemblagem foi concedida fidedignidade total.       Nas versões do .NET Framework 1.0 e 1.1, exigências nas permissões de identidade são eficazes, mesmo quando a assemblagem de chamada é totalmente fidedigna. Ou seja, embora a assemblagem de chamada tem fidedignidade total, uma pedido para uma permissão de identidade falha se a assemblagem não cumpre os critérios de pedidos. O .NET Framework versão 2.0 e posteriores, exigências de permissões de identidade são ineficaz se a assemblagem de chamada tem fidedignidade total. Isto garante a consistência para todas as permissões, eliminando o tratamento de permissões de identidade num caso especial.       Utilize este construtor com um valor de estado de permissão de <xref:System.Security.Permissions.PermissionState>para criar uma permissão de identidade que não corresponde a nenhum nomes seguros.</xref:System.Security.Permissions.PermissionState> Se definir subsequentemente o <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>e <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A>Propriedades, uma identidade de nome seguro específico podem ser representadas pela permissão.</xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> </xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>"
  example:
  - "The following code example shows the use of the StrongNameIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/visualbasic/ecc5c20f-4468-431e-a2f0-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/cpp/ecc5c20f-4468-431e-a2f0-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#7](~/add/codesnippet/csharp/ecc5c20f-4468-431e-a2f0-_1.cs)]"
  syntax:
    content: public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um do <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valores."
  overload: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> state </code> parâmetro não é um valor válido de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  id: '#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)'
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> classe para a identidade de nome seguro especificado."
  remarks: "O `name` e `version` os parâmetros podem ser `null` apenas quando a chave pública é utilizada para identificar a assemblagem. Uma cadeia vazia (&quot;&quot;) não deve ser utilizada em vez de `null`. Se `name` é uma cadeia vazia, um <xref:System.ArgumentException>é emitida.</xref:System.ArgumentException>       Para obter mais informações sobre os nomes e números de versão das assemblagens, consulte [Strong-Named assemblagens](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the use of the StrongNameIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/visualbasic/f67888ca-a49f-49ea-a115-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/cpp/f67888ca-a49f-49ea-a115-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#8](~/add/codesnippet/csharp/f67888ca-a49f-49ea-a115-_1.cs)]"
  syntax:
    content: public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);
    parameters:
    - id: blob
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "A chave pública que define o espaço de nomes de identidade de nome seguro."
    - id: name
      type: System.String
      description: "A parte do nome simples da identidade de nome seguro. Isto corresponde ao nome da assemblagem."
    - id: version
      type: System.Version
      description: "O número de versão de identidade."
  overload: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>blob</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> name </code> parâmetro é uma cadeia vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StrongNameIdentityPermission.Copy()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma cópia da permissão atual idêntica."
  remarks: "Uma cópia de uma permissão representa o mesmo acesso aos recursos, como a permissão original."
  example:
  - "The following code example shows the behavior of the Copy method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/visualbasic/m-system.security.permis_15_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/cpp/m-system.security.permis_15_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#5](~/add/codesnippet/csharp/m-system.security.permis_15_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Uma cópia da permissão atual."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Reconstructs uma permissão com um estado especificado de uma codificação de XML."
  remarks: "Este método não é utilizado pelo código da aplicação."
  example:
  - "The following code example shows the behavior of the FromXml method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/visualbasic/ed9c932c-08d5-452f-8a11-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/cpp/ed9c932c-08d5-452f-8a11-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/csharp/ed9c932c-08d5-452f-8a11-_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "O codificação XML a utilizar para reconstrua a permissão."
  overload: System.Security.Permissions.StrongNameIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> e </code> parâmetro não é um elemento de permissão válido.       - ou - <code> e </code> número da versão do parâmetro não é válido."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria e devolve uma permissão que está a interseção da permissão atual e a permissão especificada."
  remarks: "A intersecção de dois permissões é uma permissão que descreve o conjunto de operações de ambas as descrevem em comum. Apenas um pedido que transmite ambas as permissões originais passarão a interseção.       A intersecção de dois permissões de identidade de nome seguro idênticos é a mesma permissão. A intersecção de dois diferente (e não universais) expressões é uma permissão vazia. A intersecção de uma expressão com carateres universais e um nome seguro correspondente é o nome seguro. A intersecção de dois expressões com carateres universais que correspondem ao ultrapassa o, mais específicos de duas expressões."
  example:
  - "The following code example shows the results of the use of the Intersect method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/visualbasic/fc41bc4b-3965-4525-8b6a-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/cpp/fc41bc4b-3965-4525-8b6a-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#4](~/add/codesnippet/csharp/fc41bc4b-3965-4525-8b6a-_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para intersect com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a interseção da permissão atual e a permissão especificada, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a interseção está vazia."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se a permissão atual é um subconjunto da permissão especificado."
  remarks: "A permissão atual é um subconjunto da permissão especificada se a permissão atual Especifica um conjunto de operações que detida está contido pela permissão especificada. Por exemplo, as outras propriedades que está a ser igual, uma identidade com a <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>propriedade que contém a expressão com carateres universais MyCompany.MyDepartment.* é identificada como um subconjunto de uma identidade com a <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>propriedade MyCompany.MyDepartment.MyFile.</xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> </xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A>"
  example:
  - "The following code example shows the results of the use of the IsSubsetOf method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/visualbasic/e4452cd4-0b1f-49b1-baf5-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/cpp/e4452cd4-0b1f-49b1-baf5-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#2](~/add/codesnippet/csharp/e4452cd4-0b1f-49b1-baf5-_1.cs)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão que está a ser testada para a relação de subconjunto. Esta permissão tem de ser do mesmo tipo como a permissão atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a permissão atual é um subconjunto da permissão especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name
  id: Name
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define a parte do nome simples da identidade de nome seguro."
  remarks: "O valor da propriedade nome pode ser um nome exato ou pode ser modificado por um caráter universal na posição final; Por exemplo, MyCompany.MyDepartment.MyFile e MyCompany.MyDepartment.* são nomes válidos. Se tentar definir a propriedade de nome para uma cadeia vazia (&quot;&quot;), um <xref:System.ArgumentException>é emitida.</xref:System.ArgumentException>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome simple da identidade."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor é uma cadeia vazia (&quot;&quot;)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível obter o valor da propriedade porque contém uma identidade ambígua."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  id: PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o blob de chave público que define o espaço de nomes de identidade de nome seguro."
  syntax:
    content: public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }
    return:
      type: System.Security.Permissions.StrongNamePublicKeyBlob
      description: "A <xref href=&quot;System.Security.Permissions.StrongNamePublicKeyBlob&quot;> </xref> que contém a chave pública da identidade, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma chave."
  overload: System.Security.Permissions.StrongNameIdentityPermission.PublicKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor da propriedade está definido como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível obter o valor da propriedade porque contém uma identidade ambígua."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StrongNameIdentityPermission.ToXml()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma codificação XML de permissão e o respetivo estado atual."
  remarks: "Este método não é normalmente utilizado pelo código da aplicação."
  example:
  - "The following code example shows the behavior of the ToXml method.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/visualbasic/m-system.security.permis_20_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/cpp/m-system.security.permis_20_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#6](~/add/codesnippet/csharp/m-system.security.permis_20_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Uma codificação XML da permissão, incluindo as informações de estado."
  overload: System.Security.Permissions.StrongNameIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StrongNameIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Cria uma permissão que é a União de permissão atual e a permissão especificada."
  remarks: "O resultado de uma chamada para União é uma permissão que representa todas as operações representadas pela permissão atual e a permissão especificada. Qualquer pedido que passa a permissão transmite os respetivos union.       A União de uma permissão e `null` a permissão que não seja `null`. A União de uma permissão e um subconjunto dessa permissão são a permissão que contém o outro. Quaisquer outra combinação resulta num <xref:System.ArgumentException>exceção que está a ser emitida.</xref:System.ArgumentException>"
  example:
  - "The following code example shows the results of the use of the Union method, not how to use the method. This example is part of a larger example provided for the <xref:System.Security.Permissions.StrongNameIdentityPermission> class. The best use for this example is to build and execute the entire example, and view its output.  \n  \n> [!NOTE]\n>  The code example is intended to show the behavior of the method, not to demonstrate its use. In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.  \n  \n [!code-vb[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/visualbasic/3b1a04e0-7bea-4a40-8e18-_1.vb)]\n [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/cpp/3b1a04e0-7bea-4a40-8e18-_1.cpp)]\n [!code-cs[System.Security.Permissions.StrongNameIdentityPermission#3](~/add/codesnippet/csharp/3b1a04e0-7bea-4a40-8e18-_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uma permissão para combinar com a permissão atual. Tem de ser do mesmo tipo de que a permissão atual."
    return:
      type: System.Security.IPermission
      description: "Uma nova permissão que representa a União de permissão atual e a permissão especificada."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> target </code> não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e não é do mesmo tipo de que a permissão atual.       - ou - duas permissões não são iguais e um é um subconjunto das outras."
  platform:
  - net462
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version
  id: Version
  parent: System.Security.Permissions.StrongNameIdentityPermission
  langs:
  - csharp
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Obtém ou define o número de versão de identidade."
  syntax:
    content: public Version Version { get; set; }
    return:
      type: System.Version
      description: "A versão da identidade."
  overload: System.Security.Permissions.StrongNameIdentityPermission.Version*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível obter o valor da propriedade porque contém uma identidade ambígua."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission(PermissionState)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.StrongNameIdentityPermission(StrongNamePublicKeyBlob,String,Version)
- uid: System.Security.Permissions.StrongNamePublicKeyBlob
  parent: System.Security.Permissions
  isExternal: false
  name: StrongNamePublicKeyBlob
  nameWithType: StrongNamePublicKeyBlob
  fullName: System.Security.Permissions.StrongNamePublicKeyBlob
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: StrongNameIdentityPermission.Copy()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StrongNameIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StrongNameIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StrongNameIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Name
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
  fullName: System.Security.Permissions.StrongNameIdentityPermission.PublicKey
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: StrongNameIdentityPermission.ToXml()
  fullName: System.Security.Permissions.StrongNameIdentityPermission.ToXml()
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StrongNameIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
  fullName: System.Security.Permissions.StrongNameIdentityPermission.Version
- uid: System.Security.Permissions.StrongNameIdentityPermission.#ctor*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: StrongNameIdentityPermission
  nameWithType: StrongNameIdentityPermission.StrongNameIdentityPermission
- uid: System.Security.Permissions.StrongNameIdentityPermission.Copy*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: StrongNameIdentityPermission.Copy
- uid: System.Security.Permissions.StrongNameIdentityPermission.FromXml*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: StrongNameIdentityPermission.FromXml
- uid: System.Security.Permissions.StrongNameIdentityPermission.Intersect*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: StrongNameIdentityPermission.Intersect
- uid: System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StrongNameIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.StrongNameIdentityPermission.Name*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Name
  nameWithType: StrongNameIdentityPermission.Name
- uid: System.Security.Permissions.StrongNameIdentityPermission.PublicKey*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: PublicKey
  nameWithType: StrongNameIdentityPermission.PublicKey
- uid: System.Security.Permissions.StrongNameIdentityPermission.ToXml*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: StrongNameIdentityPermission.ToXml
- uid: System.Security.Permissions.StrongNameIdentityPermission.Union*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Union
  nameWithType: StrongNameIdentityPermission.Union
- uid: System.Security.Permissions.StrongNameIdentityPermission.Version*
  parent: System.Security.Permissions.StrongNameIdentityPermission
  isExternal: false
  name: Version
  nameWithType: StrongNameIdentityPermission.Version
