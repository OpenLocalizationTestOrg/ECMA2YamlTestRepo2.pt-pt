### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionList
  id: DesignerActionList
  children:
  - System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionList.AutoShow
  - System.ComponentModel.Design.DesignerActionList.Component
  - System.ComponentModel.Design.DesignerActionList.GetService(System.Type)
  - System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  langs:
  - csharp
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
  type: Class
  summary: "Fornece a classe base para tipos que definem uma lista de itens utilizado para criar um painel de etiquetas inteligentes."
  remarks: "O `DesignerAction` funcionalidade permite que os componentes e os controlos para apresentar informações sensíveis ao contexto e comandos. O `DesignerAction` funcionalidade pode considerar como uma substituição para o estruturador verbos, porque um <xref:System.ComponentModel.Design.DesignerActionItem>podem ser apresentados no painel de etiquetas inteligentes e também, no menu de atalho associada um componente ou controlo.</xref:System.ComponentModel.Design.DesignerActionItem> A classe de DesignerActionList representa o ponto principal da interação para programadores que pretendem adicionar suporte de etiquetas inteligentes para os respetivos componentes personalizados e controlos.       DesignerActionList é a classe base, derivada pelos programadores do componente para preencher um painel de etiquetas inteligentes. Um painel de etiquetas inteligentes representa a interface de utilizador como o menu (IU) para etiquetas inteligentes.       Esta classe derivada pode implementar o `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>método para devolver uma coleção de objetos derivados <xref:System.ComponentModel.Design.DesignerActionItem>.</xref:System.ComponentModel.Design.DesignerActionItem> </xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Estes objetos representam os itens do painel de etiquetas inteligentes. Cada item é apresentado no painel de acordo com o respetivo tipo. Por exemplo, um <xref:System.ComponentModel.Design.DesignerActionTextItem>é apresentado como uma etiqueta de texto estático.</xref:System.ComponentModel.Design.DesignerActionTextItem> Itens do painel de Active Directory, representados pelo <xref:System.ComponentModel.Design.DesignerActionPropertyItem>e <xref:System.ComponentModel.Design.DesignerActionMethodItem>tipos, tem uma propriedade acessível publicamente correspondente ou método, respetivamente, que implementa a funcionalidade para que o item.</xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionPropertyItem>       Para obter mais informações sobre como adicionar itens para o painel de etiquetas inteligentes, consulte o <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>método.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>      > [!NOTE] > Formulários e caixas de diálogo podem ser apresentadas por membros da classe derivada de DesignerActionList. Por predefinição, o principal destas janelas será a janela de contentor para o painel de etiquetas inteligentes. Explicitamente parenting estas janelas subordinadas para outro serviço ou janela pode fazer com que as etiquetas inteligentes apresentar incorretamente.   >> Painéis smart-tag não suporta o deslocamento ou paginação, por isso tenha cuidado não preencher os painéis com muitos itens de etiqueta de smart. Demasiados itens poderão resultar no painel de smart tag expandir para além do limite do ecrã."
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/add/codesnippet/visualbasic/t-system.componentmodel._86_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/add/codesnippet/csharp/t-system.componentmodel._86_1.cs)]"
  syntax:
    content: public class DesignerActionList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: DesignerActionList(IComponent)
  nameWithType: DesignerActionList.DesignerActionList(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionList.DesignerActionList(IComponent)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> classe."
  remarks: "O <xref:System.ComponentModel.Design.DesignerActionList>conjuntos de construtor de <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A>propriedade `false`.</xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> </xref:System.ComponentModel.Design.DesignerActionList>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/add/codesnippet/visualbasic/cc04a767-c5c3-4dc7-99c8-_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/add/codesnippet/csharp/cc04a767-c5c3-4dc7-99c8-_1.cs)]"
  syntax:
    content: public DesignerActionList (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Um componente relacionados com o <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.AutoShow
  id: AutoShow
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: AutoShow
  nameWithType: DesignerActionList.AutoShow
  fullName: System.ComponentModel.Design.DesignerActionList.AutoShow
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Obtém ou define um valor que indica se o painel de etiquetas inteligentes automaticamente deve ser apresentado quando é criado."
  remarks: "Se o valor da propriedade for definido como `true`, o componente com o qual este <xref:System.ComponentModel.Design.DesignerActionList>é automaticamente associado irá expandir e apresentar o painel de etiquetas inteligentes quando o componente é criado.</xref:System.ComponentModel.Design.DesignerActionList>       Pode par excluir este comportamento ao definir o <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=fullName>propriedade `false`.</xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/p-system.componentmodel._28_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/p-system.componentmodel._28_1.cs)]"
  syntax:
    content: public virtual bool AutoShow { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o painel deve ser apresentado quando é criado o componente proprietário; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionList.AutoShow*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.Component
  id: Component
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: Component
  nameWithType: DesignerActionList.Component
  fullName: System.ComponentModel.Design.DesignerActionList.Component
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Obtém o componente relacionados com <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  syntax:
    content: public System.ComponentModel.IComponent Component { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "Um componente relacionados com <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionList.Component*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignerActionList.GetService(Type)
  fullName: System.ComponentModel.Design.DesignerActionList.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Devolve um objeto que representa um serviço fornecido pelo componente associado a <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Um serviço fornecido pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa um serviço fornecido pelo <xref href=&quot;System.ComponentModel.Component&quot;> </xref>.</xref:System.Object> Este valor é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.ComponentModel.Component&quot;> </xref> não fornece o serviço especificado."
  overload: System.ComponentModel.Design.DesignerActionList.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  id: GetSortedActionItems
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: GetSortedActionItems()
  nameWithType: DesignerActionList.GetSortedActionItems()
  fullName: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Devolve o conjunto de <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> contidos na lista de objetos."
  remarks: "O `virtual`GetSortedActionItems método é implementado para devolver, a ordem de apresentação esperado, uma coleção de objetos derivados de <xref:System.ComponentModel.Design.DesignerActionItem>classe.</xref:System.ComponentModel.Design.DesignerActionItem> Estes itens podem ser dos seguintes tipos específicos.      | Tipo | Descrição |   |----------|-----------------|   | <xref:System.ComponentModel.Design.DesignerActionHeaderItem>| A etiqueta de grupo, apresentada a negrito. |   | <xref:System.ComponentModel.Design.DesignerActionTextItem>| Uma etiqueta, apresentada em tipo de letra simples. |   | <xref:System.ComponentModel.Design.DesignerActionPropertyItem>| Um item do painel associado uma propriedade.</xref:System.ComponentModel.Design.DesignerActionPropertyItem> </xref:System.ComponentModel.Design.DesignerActionTextItem> </xref:System.ComponentModel.Design.DesignerActionHeaderItem> Também pode apresentar uma marca de verificação ou editor de propriedade associados com a propriedade subjacente. |   | <xref:System.ComponentModel.Design.DesignerActionMethodItem>| Um item do painel apresentado como uma hiperligação e associados um método. |       Para cada <xref:System.ComponentModel.Design.DesignerActionMethodItem>e <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, de um método ou propriedade correspondente tem de ser adicionada à classe fornecido pelo programador derivado de <xref:System.ComponentModel.Design.DesignerActionList>classe.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionPropertyItem> </xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Cada método e a propriedade do item é apresentado como uma entrada do Active Directory; interagir com ele através da interface de utilizador (IU) invoca o método correspondente ou a propriedade, respetivamente.       Itens de propriedade tem uma interface de item do painel especial que permite a visualização e manipulação dos valores de propriedade correspondentes. Para obter mais informações, consulte a <xref:System.ComponentModel.Design.DesignerActionPropertyItem>classe.</xref:System.ComponentModel.Design.DesignerActionPropertyItem>       A ordem dos itens na matriz devolvida reflete a ordem que serão apresentados no painel. Os itens são agrupados de acordo com o <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>propriedade, utilizando as seguintes regras:-a categoria do primeiro item encontrou significa o início do primeiro grupo.</xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> Esse grupo continua, desde que cada item succeeding é da mesma categoria. Quando um item de uma categoria de diferentes, os novo for detetado, é criado um novo grupo e o item é colocado na mesma.      -Se um item tem um tipo diferente do grupo atual, mas dessa categoria já foi utilizada, o item é colocado na categoria existente correspondente.      -Se de um item não tiver uma categoria, é colocada num grupo diversas no fim do painel. Este grupo também contém itens cujo <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A>propriedade está definida como `false`.</xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A>       O método GetSortedActionItems é chamado quando o painel é criado pela primeira vez. Tem de chamar o <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A>método para atualizar a lista de itens apresentados no painel de.</xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/m-system.componentmodel._19_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/m-system.componentmodel._19_1.cs)]"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignerActionItemCollection
      description: "A <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> matriz que contém os itens nesta lista."
  overload: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: DesignerActionList(IComponent)
  nameWithType: DesignerActionList.DesignerActionList(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionList.DesignerActionList(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList.AutoShow
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: AutoShow
  nameWithType: DesignerActionList.AutoShow
  fullName: System.ComponentModel.Design.DesignerActionList.AutoShow
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionList.Component
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: Component
  nameWithType: DesignerActionList.Component
  fullName: System.ComponentModel.Design.DesignerActionList.Component
- uid: System.ComponentModel.Design.DesignerActionList.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignerActionList.GetService(Type)
  fullName: System.ComponentModel.Design.DesignerActionList.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetSortedActionItems()
  nameWithType: DesignerActionList.GetSortedActionItems()
  fullName: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems()
- uid: System.ComponentModel.Design.DesignerActionItemCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionItemCollection
  nameWithType: DesignerActionItemCollection
  fullName: System.ComponentModel.Design.DesignerActionItemCollection
- uid: System.ComponentModel.Design.DesignerActionList.#ctor*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionList.AutoShow*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: AutoShow
  nameWithType: DesignerActionList.AutoShow
- uid: System.ComponentModel.Design.DesignerActionList.Component*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: Component
  nameWithType: DesignerActionList.Component
- uid: System.ComponentModel.Design.DesignerActionList.GetService*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetService
  nameWithType: DesignerActionList.GetService
- uid: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetSortedActionItems
  nameWithType: DesignerActionList.GetSortedActionItems
