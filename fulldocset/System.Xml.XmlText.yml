### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlText
  id: XmlText
  children:
  - System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)
  - System.Xml.XmlText.CloneNode(System.Boolean)
  - System.Xml.XmlText.LocalName
  - System.Xml.XmlText.Name
  - System.Xml.XmlText.NodeType
  - System.Xml.XmlText.ParentNode
  - System.Xml.XmlText.PreviousText
  - System.Xml.XmlText.SplitText(System.Int32)
  - System.Xml.XmlText.Value
  - System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlText
  nameWithType: XmlText
  fullName: System.Xml.XmlText
  type: Class
  summary: "Represents the text content of an element or attribute."
  syntax:
    content: 'public class XmlText : System.Xml.XmlCharacterData'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  - System.Xml.XmlCharacterData
  implements: []
  inheritedMembers:
  - System.Xml.XmlCharacterData.AppendData(System.String)
  - System.Xml.XmlCharacterData.Data
  - System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)
  - System.Xml.XmlCharacterData.InnerText
  - System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)
  - System.Xml.XmlCharacterData.Length
  - System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)
  - System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net462
- uid: System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: XmlText(String,XmlDocument)
  nameWithType: XmlText.XmlText(String,XmlDocument)
  fullName: System.Xml.XmlText.XmlText(String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.XmlText&quot;></xref> class."
  remarks: "Do not instantiate an <xref:System.Xml.XmlText> directly; instead, use methods such as <xref:System.Xml.XmlDocument.CreateTextNode%2A>."
  syntax:
    content: protected XmlText (string strData, System.Xml.XmlDocument doc);
    parameters:
    - id: strData
      type: System.String
      description: "The content of the node; see the <xref:System.Xml.XmlText.Value*> property."
    - id: doc
      type: System.Xml.XmlDocument
      description: "The parent XML document."
  overload: System.Xml.XmlText.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlText.CloneNode(Boolean)
  fullName: System.Xml.XmlText.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Creates a duplicate of this node."
  remarks: "`CloneNode` serves as a copy constructor for nodes. For text nodes, the cloned node always includes the data value. To see how this method behaves with other node types, see the <xref:System.Xml.XmlNode.CloneNode%2A> method in the `XmlNode` class.       The cloned node has no parent (<xref:System.Xml.XmlNode.ParentNode%2A> returns `null`)."
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to recursively clone the subtree under the specified node; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clone only the node itself."
    return:
      type: System.Xml.XmlNode
      description: "The cloned node."
  overload: System.Xml.XmlText.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.LocalName
  id: LocalName
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlText.LocalName
  fullName: System.Xml.XmlText.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the local name of the node."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "For text nodes, this property returns <xref uid=&quot;langword_csharp_#text&quot; name=&quot;#text&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlText.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.Name
  id: Name
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: Name
  nameWithType: XmlText.Name
  fullName: System.Xml.XmlText.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the qualified name of the node."
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "For text nodes, this property returns <xref uid=&quot;langword_csharp_#text&quot; name=&quot;#text&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlText.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.NodeType
  id: NodeType
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlText.NodeType
  fullName: System.Xml.XmlText.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the type of the current node."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "For text nodes, this value is XmlNodeType.Text."
  overload: System.Xml.XmlText.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.ParentNode
  id: ParentNode
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlText.ParentNode
  fullName: System.Xml.XmlText.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the parent of this node (for nodes that can have parents)."
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "The <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;></xref> that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. For all other nodes, the value returned depends on the <xref:System.Xml.XmlNode.NodeType*> of the node. The following table describes the possible return values for the <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;></xref> property."
  overload: System.Xml.XmlText.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.PreviousText
  id: PreviousText
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: PreviousText
  nameWithType: XmlText.PreviousText
  fullName: System.Xml.XmlText.PreviousText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets the text node that immediately precedes this node."
  syntax:
    content: public override System.Xml.XmlNode PreviousText { get; }
    return:
      type: System.Xml.XmlNode
      description: "Returns <xref href=&quot;System.Xml.XmlNode&quot;></xref>."
  overload: System.Xml.XmlText.PreviousText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.SplitText(System.Int32)
  id: SplitText(System.Int32)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: SplitText(Int32)
  nameWithType: XmlText.SplitText(Int32)
  fullName: System.Xml.XmlText.SplitText(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Splits the node into two nodes at the specified offset, keeping both in the tree as siblings."
  remarks: "After `SplitText` is called, the original node contains all the content up to the offset point. A new node of the same type contains all the content at and after the offset point and is inserted as the next sibling of the original node. When the offset is equal to the length of this node, the new node has no data."
  syntax:
    content: public virtual System.Xml.XmlText SplitText (int offset);
    parameters:
    - id: offset
      type: System.Int32
      description: "The offset at which to split the node."
    return:
      type: System.Xml.XmlText
      description: "The new node."
  overload: System.Xml.XmlText.SplitText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.Value
  id: Value
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: Value
  nameWithType: XmlText.Value
  fullName: System.Xml.XmlText.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Gets or sets the value of the node."
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "The content of the text node."
  overload: System.Xml.XmlText.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlText.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Saves all the children of the node to the specified <xref:System.Xml.XmlWriter>. <xref uid=&quot;langword_csharp_XmlText&quot; name=&quot;XmlText&quot; href=&quot;&quot;></xref> nodes do not have children, so this method has no effect."
  remarks: "This method is a Microsoft extension to the Document Object Model (DOM)."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "The <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;></xref> to which you want to save."
  overload: System.Xml.XmlText.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlText.WriteTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Saves the node to the specified <xref:System.Xml.XmlWriter>."
  remarks: "This method is a Microsoft extension to the Document Object Model (DOM)."
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "The <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;></xref> to which you want to save."
  overload: System.Xml.XmlText.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlCharacterData
  isExternal: false
  name: System.Xml.XmlCharacterData
- uid: System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlText
  isExternal: false
  name: XmlText(String,XmlDocument)
  nameWithType: XmlText.XmlText(String,XmlDocument)
  fullName: System.Xml.XmlText.XmlText(String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlText.CloneNode(System.Boolean)
  parent: System.Xml.XmlText
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlText.CloneNode(Boolean)
  fullName: System.Xml.XmlText.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlText.LocalName
  parent: System.Xml.XmlText
  isExternal: false
  name: LocalName
  nameWithType: XmlText.LocalName
  fullName: System.Xml.XmlText.LocalName
- uid: System.Xml.XmlText.Name
  parent: System.Xml.XmlText
  isExternal: false
  name: Name
  nameWithType: XmlText.Name
  fullName: System.Xml.XmlText.Name
- uid: System.Xml.XmlText.NodeType
  parent: System.Xml.XmlText
  isExternal: false
  name: NodeType
  nameWithType: XmlText.NodeType
  fullName: System.Xml.XmlText.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlText.ParentNode
  parent: System.Xml.XmlText
  isExternal: false
  name: ParentNode
  nameWithType: XmlText.ParentNode
  fullName: System.Xml.XmlText.ParentNode
- uid: System.Xml.XmlText.PreviousText
  parent: System.Xml.XmlText
  isExternal: false
  name: PreviousText
  nameWithType: XmlText.PreviousText
  fullName: System.Xml.XmlText.PreviousText
- uid: System.Xml.XmlText.SplitText(System.Int32)
  parent: System.Xml.XmlText
  isExternal: false
  name: SplitText(Int32)
  nameWithType: XmlText.SplitText(Int32)
  fullName: System.Xml.XmlText.SplitText(Int32)
- uid: System.Xml.XmlText
  parent: System.Xml
  isExternal: false
  name: XmlText
  nameWithType: XmlText
  fullName: System.Xml.XmlText
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlText.Value
  parent: System.Xml.XmlText
  isExternal: false
  name: Value
  nameWithType: XmlText.Value
  fullName: System.Xml.XmlText.Value
- uid: System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlText.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlText.WriteTo(XmlWriter)
  fullName: System.Xml.XmlText.WriteTo(XmlWriter)
- uid: System.Xml.XmlText.#ctor*
  parent: System.Xml.XmlText
  isExternal: false
  name: XmlText
  nameWithType: XmlText.XmlText
- uid: System.Xml.XmlText.CloneNode*
  parent: System.Xml.XmlText
  isExternal: false
  name: CloneNode
  nameWithType: XmlText.CloneNode
- uid: System.Xml.XmlText.LocalName*
  parent: System.Xml.XmlText
  isExternal: false
  name: LocalName
  nameWithType: XmlText.LocalName
- uid: System.Xml.XmlText.Name*
  parent: System.Xml.XmlText
  isExternal: false
  name: Name
  nameWithType: XmlText.Name
- uid: System.Xml.XmlText.NodeType*
  parent: System.Xml.XmlText
  isExternal: false
  name: NodeType
  nameWithType: XmlText.NodeType
- uid: System.Xml.XmlText.ParentNode*
  parent: System.Xml.XmlText
  isExternal: false
  name: ParentNode
  nameWithType: XmlText.ParentNode
- uid: System.Xml.XmlText.PreviousText*
  parent: System.Xml.XmlText
  isExternal: false
  name: PreviousText
  nameWithType: XmlText.PreviousText
- uid: System.Xml.XmlText.SplitText*
  parent: System.Xml.XmlText
  isExternal: false
  name: SplitText
  nameWithType: XmlText.SplitText
- uid: System.Xml.XmlText.Value*
  parent: System.Xml.XmlText
  isExternal: false
  name: Value
  nameWithType: XmlText.Value
- uid: System.Xml.XmlText.WriteContentTo*
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlText.WriteContentTo
- uid: System.Xml.XmlText.WriteTo*
  parent: System.Xml.XmlText
  isExternal: false
  name: WriteTo
  nameWithType: XmlText.WriteTo
