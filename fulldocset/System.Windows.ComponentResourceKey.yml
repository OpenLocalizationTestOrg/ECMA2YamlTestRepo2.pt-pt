### YamlMime:ManagedReference
items:
- uid: System.Windows.ComponentResourceKey
  id: ComponentResourceKey
  children:
  - System.Windows.ComponentResourceKey.#ctor
  - System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  - System.Windows.ComponentResourceKey.Assembly
  - System.Windows.ComponentResourceKey.Equals(System.Object)
  - System.Windows.ComponentResourceKey.GetHashCode
  - System.Windows.ComponentResourceKey.ResourceId
  - System.Windows.ComponentResourceKey.ToString
  - System.Windows.ComponentResourceKey.TypeInTargetAssembly
  langs:
  - csharp
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey
  fullName: System.Windows.ComponentResourceKey
  type: Class
  summary: "Define ou referenciar chaves de recursos com base nos nomes de classe de assemblagens externas, bem como um identificador adicional."
  remarks: "Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [extensão de Markup ComponentResourceKey](~/add/includes/ajax-current-ext-md.md).       Esta classe implementa um tipo de objeto que é útil para criação de chaves que se baseiam em tipos em assemblagens plus um identificador. Como definir ou o tipo de referência, não tem de pedir específico <xref:System.Windows.ResourceDictionary>, e pode existir mais do que um conjunto de recursos na assemblagem, cada diferenciada por tipo do respetivo ComponentResourceKey.</xref:System.Windows.ResourceDictionary>       Existem duas formas de definir um ComponentResourceKey.       Se pretender que uma chave facilmente acessível, pode definir uma propriedade estática no seu código de classe de controlo que devolva uma ComponentResourceKey, construída com uma <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>que existe na assemblagem de recursos externos e um <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> A chave pode ser utilizada para definir os estilos de alternativo predefinido para controlos numa assemblagem, ao trocar a assemblagem de recursos externos original para um personalizado. Também pode definir uma parte de recurso denominado dentro de um estilo de controlo maior ou o modelo para expor um ponto de entrada de personalização. Isto é particularmente útil se está a definir um dicionário de recursos de tema para o controlo.       Também pode utilizar o [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [extensão de Markup ComponentResourceKey](../Topic/ComponentResourceKey%20Markup%20Extension.md) na sintaxe verboso diretamente para criar uma instância soltas da chave. Isto é útil se pretender declarar privados recursos a partir de outros assemblagens que são menos Detetáveis personalizar.      <a name=&quot;xamlTextUsage_ComponentResourceKey&quot;></a># # XAML texto utilização Consulte observações"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))]

      public class ComponentResourceKey : System.Windows.ResourceKey
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.ResourceKey
  implements: []
  inheritedMembers:
  - System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor
  id: '#ctor'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> classe."
  remarks: "O construtor predefinido não é geralmente utilizado, porque um <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>valor e <xref:System.Windows.ComponentResourceKey.ResourceId%2A>valor são necessários para a inicialização adequada.</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> O construtor predefinido existe principalmente para suportar [extensão de Markup ComponentResourceKey](~/add/includes/ajax-current-ext-md.md) utilização XAML no formulário de parâmetro com nome."
  syntax:
    content: public ComponentResourceKey ();
    parameters: []
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> , especificando o <xref:System.Type>que define a chave e um objeto para utilizar como um identificador de recurso adicionais.</xref:System.Type>"
  remarks: "Este construtor existem dois cenários, com o primeiro cenário que está a ser o mais importante: - suporta a criação de um <xref:System.Windows.ComponentResourceKey>que, em seguida, fica exposta como um campo estático público numa classe de controlo personalizado.</xref:System.Windows.ComponentResourceKey> Isto simplifica de acesso um controlo para os seus próprios recursos definidos no modelo através de `{x:Static}` utilizações para valores de propriedade de modelo.      -Suporta [extensão de Markup ComponentResourceKey](~/add/includes/ajax-current-ext-md.md) utilização XAML num formulário de parâmetro posicional mais, o que é uma técnica disponível para terceiros que referenciam um recurso de componente."
  example:
  - "The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.  \n  \n [!code-cs[CorePseudocode#CRKCode](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#crkcode)]\n [!code-vb[CorePseudocode#CRKCode](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#crkcode)]"
  syntax:
    content: public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);
    parameters:
    - id: typeInTargetAssembly
      type: System.Type
      description: "O tipo que definem a chave de recurso."
    - id: resourceId
      type: System.Object
      description: "Um identificador exclusivo para diferenciar isto <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> de outras associadas a `typeInTargetAssembly` tipo."
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Assembly
  id: Assembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém o objeto de assemblagem que indica o dicionário que assemblagem a procurar o valor associado esta chave."
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "A assemblagem obtida, como uma classe de reflexão."
  overload: System.Windows.ComponentResourceKey.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se o objeto fornecido é igual a atual <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  remarks: "Duas chaves são iguais se ambas as tiverem os mesmos valores para todas as respetivas propriedades definíveis imediatas (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> </xref:System.Windows.ComponentResourceKey.ResourceId%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Objeto para a comparação com a atual <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os objetos são iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ComponentResourceKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.GetHashCode
  id: GetHashCode
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Devolve um código hash para este <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor de número inteiro de 32 bits com sinal."
  overload: System.Windows.ComponentResourceKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ResourceId
  id: ResourceId
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define um identificador exclusivo para esta chave de distinguir de outras associadas a este tipo."
  remarks: "Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [extensão de Markup ComponentResourceKey](~/add/includes/ajax-current-ext-md.md).       Normalmente, a cadeia utilizada para um valor de ResourceId está em conformidade com a [XamlName gramática](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_2&quot;></a># # XAML texto utilização Consulte observações"
  example:
  - "The following example shows how to use the ResourceId to differentiate this key from others associated with this type.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public object ResourceId { get; set; }
    return:
      type: System.Object
      description: "Um identificador exclusivo. Normalmente, trata-se de uma cadeia."
  overload: System.Windows.ComponentResourceKey.ResourceId*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ToString
  id: ToString
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a representação de cadeia de um <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A representação de cadeia."
  overload: System.Windows.ComponentResourceKey.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  id: TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o <xref:System.Type>que definem a chave de recurso.</xref:System.Type>"
  remarks: "Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [extensão de Markup ComponentResourceKey](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Windows.ComponentResourceKey>elemento é utilizado pelos componentes personalizados para definir as chaves de recursos que são acedidos de assemblagens externas, com base no direcionada para uma assemblagem que contém o tipo.</xref:System.Windows.ComponentResourceKey> Componentes personalizados, muitas vezes, definem novos tipos de que tem de ser a assemblagem onde está localizado o recurso. Geralmente, estes tipos não têm nenhuma outra implementação, os tipos de existam apenas para satisfazer os requisitos de pesquisa de <xref:System.Windows.ComponentResourceKey>.</xref:System.Windows.ComponentResourceKey>      <a name=&quot;xamlTextUsage_3&quot;></a># # XAML texto utilização Consulte observações"
  example:
  - "The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including TypeInTargetAssembly and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md). This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public Type TypeInTargetAssembly { get; set; }
    return:
      type: System.Type
      description: "O tipo que definem a chave de recurso."
  overload: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.ResourceKey
  isExternal: false
  name: System.Windows.ResourceKey
- uid: System.Windows.ComponentResourceKey.#ctor
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ComponentResourceKey.Assembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ComponentResourceKey.GetHashCode
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ComponentResourceKey.ResourceId
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
- uid: System.Windows.ComponentResourceKey.#ctor*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey.ComponentResourceKey
- uid: System.Windows.ComponentResourceKey.Assembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
- uid: System.Windows.ComponentResourceKey.Equals*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals
  nameWithType: ComponentResourceKey.Equals
- uid: System.Windows.ComponentResourceKey.GetHashCode*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode
  nameWithType: ComponentResourceKey.GetHashCode
- uid: System.Windows.ComponentResourceKey.ResourceId*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString
  nameWithType: ComponentResourceKey.ToString
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
