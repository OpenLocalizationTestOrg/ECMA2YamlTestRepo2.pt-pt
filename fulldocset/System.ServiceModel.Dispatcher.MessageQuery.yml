### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageQuery
  id: MessageQuery
  children:
  - System.ServiceModel.Dispatcher.MessageQuery.#ctor
  - System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageQuery
  nameWithType: MessageQuery
  fullName: System.ServiceModel.Dispatcher.MessageQuery
  type: Class
  summary: "Defines the core behavior of classes used to search for specific correlating data in a message."
  remarks: "The MessageQuery class is similar to the <xref:System.ServiceModel.Dispatcher.MessageFilter> class.  However, instead of returning matches, the <xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A> method returns the results of evaluating a query against a message. The result of the query is a value in the message. Use the value as a key to correlate the message to other messages. To add a new property for the data, use the <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty.Add%2A> method of the <xref:System.ServiceModel.Channels.CorrelationDataMessageProperty> class.      > [!NOTE] >  For a concrete implementation of the MessageQuery, see the <xref:System.ServiceModel.XPathMessageQuery> class.      ## Using the XPathMessageQuery and MessageQueryCollection classes    You can optimize the query process by creating a set of query objects and inserting them into an instance of the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class.      > [!NOTE] >  For a concrete implementation of the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection>, see the <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> class.       A common usage is to populate the collection with queries that have the same XPath predicate, but that differ only in the final leaf value. For example, the following XPath queries are identical except for the final clause. The first queries for all elements that have the quantity attribute set to 1, and the second queries for elements with the product attribute set to &quot;Contoso&quot;):      ```   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;   &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &quot;Contoso&quot;]&quot;   ```       The <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class allows you to create tables of queries that differ only slightly, enabling more efficient processing.       Alternatively, you can use the <xref:System.ServiceModel.Dispatcher.MessageQueryTable%601> class to store and evaluate message queries."
  example:
  - "The following example creates a message and XPath message queries. The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object. The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.  \n  \n [!code-vb[XPathMessageQuery#0](~/add/codesnippet/visualbasic/t-system.servicemodel.di_8_1.vb)]\n [!code-cs[XPathMessageQuery#0](~/add/codesnippet/csharp/t-system.servicemodel.di_8_1.cs)]"
  syntax:
    content: public abstract class MessageQuery
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Dispatcher.MessageQuery&quot;></xref> class."
  syntax:
    content: protected MessageQuery ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  id: CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Creates a collection of queries that returns a specific type of data associated with it."
  remarks: "This method is intended to be used by the <xref:System.ServiceModel.Dispatcher.MessageQueryCollection> class."
  syntax:
    content: public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.MessageQueryCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.MessageQueryCollection&quot;></xref> The collection of queries associated with the data type."
  overload: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  id: Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    return:
      type: TResult
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  id: Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  langs:
  - csharp
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: public abstract TResult Evaluate<TResult> (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "To be added."
    return:
      type: TResult
      description: "To be added."
  overload: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery()
  nameWithType: MessageQuery.MessageQuery()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.MessageQuery()
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection()
  nameWithType: MessageQuery.CreateMessageQueryCollection()
  fullName: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection()
- uid: System.ServiceModel.Dispatcher.MessageQueryCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: MessageQueryCollection
  nameWithType: MessageQueryCollection
  fullName: System.ServiceModel.Dispatcher.MessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(Message)
  nameWithType: MessageQuery.Evaluate(Message)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(Message)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate(MessageBuffer)
  nameWithType: MessageQuery.Evaluate(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageQuery.Evaluate(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageQuery.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: MessageQuery
  nameWithType: MessageQuery.MessageQuery
- uid: System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: CreateMessageQueryCollection
  nameWithType: MessageQuery.CreateMessageQueryCollection
- uid: System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>*
  parent: System.ServiceModel.Dispatcher.MessageQuery
  isExternal: false
  name: Evaluate<TResult>
  nameWithType: MessageQuery.Evaluate<TResult>
