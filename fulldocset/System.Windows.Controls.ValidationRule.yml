### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationRule
  id: ValidationRule
  children:
  - System.Windows.Controls.ValidationRule.#ctor
  - System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  - System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  - System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  - System.Windows.Controls.ValidationRule.ValidationStep
  langs:
  - csharp
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
  type: Class
  summary: "Provides a way to create a custom rule in order to check the validity of user input."
  remarks: "When you use the [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] data binding model, you can associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your binding object. To create custom rules, make a subclass of this class and implement the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method. Optionally, use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which catches exceptions that are thrown during source updates, or the <xref:System.Windows.Controls.DataErrorValidationRule>, which checks for errors raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.       The binding engine checks each ValidationRule that is associated with a binding every time it transfers an input value, which is the binding target property value, to the binding source property.       For detailed information about data validation, see [Data Binding Overview](~/add/includes/ajax-current-ext-md.md).       For information about how to validate user-provided data in a dialog box, see [Dialog Boxes Overview](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to implement a validation rule. The input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds. If the value of the returned <xref:System.Windows.Controls.ValidationResult> is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BindValidation#3](~/add/codesnippet/csharp/BindingValidation/AgeRangeRule.cs#3)]"
  syntax:
    content: public abstract class ValidationRule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidationRule()
  nameWithType: ValidationRule.ValidationRule()
  fullName: System.Windows.Controls.ValidationRule.ValidationRule()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref> class."
  syntax:
    content: protected ValidationRule ();
    parameters: []
  overload: System.Windows.Controls.ValidationRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  id: '#ctor(System.Windows.Controls.ValidationStep,System.Boolean)'
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidationRule(ValidationStep,Boolean)
  nameWithType: ValidationRule.ValidationRule(ValidationStep,Boolean)
  fullName: System.Windows.Controls.ValidationRule.ValidationRule(ValidationStep,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref> class with the specified validation step and a value that indicates whether the validation rule runs when the target is updated."
  syntax:
    content: protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);
    parameters:
    - id: validationStep
      type: System.Windows.Controls.ValidationStep
      description: "One of the enumeration values that specifies when the validation rule runs."
    - id: validatesOnTargetUpdated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to have the validation rule run when the target of the <xref href=&quot;System.Windows.Data.Binding&quot;></xref> is updated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.ValidationRule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  id: Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: Validate(Object,CultureInfo)
  nameWithType: ValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ValidationRule.Validate(Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "When overridden in a derived class, performs validation checks on a value."
  remarks: "You must implement this method when you create a subclass of the <xref:System.Windows.Controls.ValidationRule> class in order to create a custom validation rule.       Each time the data binding engine transfers a value from the binding target property (from user input) to the binding source property (the underlying data), it checks whether any <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for that binding. If <xref:System.Windows.Data.Binding.ValidationRules%2A> are defined for the binding, the engine calls the Validate method on each <xref:System.Windows.Controls.ValidationRule> until one of them finds an error or until all of them pass.       For detailed information about data validation, see [Data Binding Overview](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to implement a validation rule. In the following example, the input value is invalid if it contains non-numeric characters or if it is outside the lower and upper bounds. If the input value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property is set to the appropriate error message and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property is set to `false`.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BindValidation#3](~/add/codesnippet/csharp/BindingValidation/AgeRangeRule.cs#3)]"
  syntax:
    content: public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);
    parameters:
    - id: value
      type: System.Object
      description: "The value from the binding target to check."
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "The culture to use in this rule."
    return:
      type: System.Windows.Controls.ValidationResult
      description: "A <xref href=&quot;System.Windows.Controls.ValidationResult&quot;></xref> object."
  overload: System.Windows.Controls.ValidationRule.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  id: Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: Validate(Object,CultureInfo,BindingExpressionBase)
  nameWithType: ValidationRule.Validate(Object,CultureInfo,BindingExpressionBase)
  fullName: System.Windows.Controls.ValidationRule.Validate(Object,CultureInfo,BindingExpressionBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Performs validation checks on a value."
  syntax:
    content: public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);
    parameters:
    - id: value
      type: System.Object
      description: "The value from the binding target to check."
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "The culture to use in this rule."
    - id: owner
      type: System.Windows.Data.BindingExpressionBase
      description: "The binding expression that uses the validation rule."
    return:
      type: System.Windows.Controls.ValidationResult
      description: "A <xref href=&quot;System.Windows.Controls.ValidationResult&quot;></xref> object."
  overload: System.Windows.Controls.ValidationRule.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  id: Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: Validate(Object,CultureInfo,BindingGroup)
  nameWithType: ValidationRule.Validate(Object,CultureInfo,BindingGroup)
  fullName: System.Windows.Controls.ValidationRule.Validate(Object,CultureInfo,BindingGroup)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Performs validation checks on a value."
  syntax:
    content: public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);
    parameters:
    - id: value
      type: System.Object
      description: "The value from the binding target to check."
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "The culture to use in this rule."
    - id: owner
      type: System.Windows.Data.BindingGroup
      description: "The binding group that uses the validation rule."
    return:
      type: System.Windows.Controls.ValidationResult
      description: "A <xref href=&quot;System.Windows.Controls.ValidationResult&quot;></xref> object."
  overload: System.Windows.Controls.ValidationRule.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  id: ValidatesOnTargetUpdated
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidatesOnTargetUpdated
  nameWithType: ValidationRule.ValidatesOnTargetUpdated
  fullName: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets a value that indicates whether the validation rule runs when the target of the <xref href=&quot;System.Windows.Data.Binding&quot;></xref> is updated."
  remarks: ''
  example:
  - "The following example checks whether the <xref:System.Windows.Controls.TextBox> is empty. The <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, has ValidatesOnTargetUpdated set to `true`, so that when the application starts, the <xref:System.Windows.Controls.ValidationRule> runs and displays a message if the <xref:System.Windows.Controls.TextBox> is empty.  \n  \n [!code-xml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validatesontargetupdated)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that is used in the previous example and the event handler for the <xref:System.Windows.Controls.Validation.Error> event.  \n  \n [!code-cs[BindingGroupSnippets#ValueIsNotNull](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#valueisnotnull)]\n [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#valueisnotnull)]"
  syntax:
    content: public bool ValidatesOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the validation rule runs when the target of the <xref href=&quot;System.Windows.Data.Binding&quot;></xref> is updated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationRule.ValidationStep
  id: ValidationStep
  parent: System.Windows.Controls.ValidationRule
  langs:
  - csharp
  name: ValidationStep
  nameWithType: ValidationRule.ValidationStep
  fullName: System.Windows.Controls.ValidationRule.ValidationStep
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets or sets when the validation rule runs."
  remarks: ''
  example:
  - "The following example sets the ValidationStep to <xref:System.Windows.Controls.ValidationStep> on the <xref:System.Windows.Controls.ValidationRule> called `ValidateDateAndPrice` so that when it runs, the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method has access to values that are of the source property's type. When the rules `PriceIsAPositiveNumber` and `FutureDateRule` run, the values in each <xref:System.Windows.Controls.ValidationRule.Validate%2A> method are strings because the rules run before the values are converted to their respective types.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`. In the `Validate` method override, the `Price` property is of type <xref:System.Double> and the `OfferExpires` property is of type <xref:System.DateTime> because the strings have been converted to their respective types by the time the <xref:System.Windows.Controls.ValidationRule> runs.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Windows.Controls.ValidationStep ValidationStep { get; set; }
    return:
      type: System.Windows.Controls.ValidationStep
      description: "One of the enumeration values.  The default is <xref href=&quot;System.Windows.Controls.ValidationStep&quot;></xref>."
  overload: System.Windows.Controls.ValidationRule.ValidationStep*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationRule.#ctor
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationRule()
  nameWithType: ValidationRule.ValidationRule()
  fullName: System.Windows.Controls.ValidationRule.ValidationRule()
- uid: System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationRule(ValidationStep,Boolean)
  nameWithType: ValidationRule.ValidationRule(ValidationStep,Boolean)
  fullName: System.Windows.Controls.ValidationRule.ValidationRule(ValidationStep,Boolean)
- uid: System.Windows.Controls.ValidationStep
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationStep
  nameWithType: ValidationStep
  fullName: System.Windows.Controls.ValidationStep
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate(Object,CultureInfo)
  nameWithType: ValidationRule.Validate(Object,CultureInfo)
  fullName: System.Windows.Controls.ValidationRule.Validate(Object,CultureInfo)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate(Object,CultureInfo,BindingExpressionBase)
  nameWithType: ValidationRule.Validate(Object,CultureInfo,BindingExpressionBase)
  fullName: System.Windows.Controls.ValidationRule.Validate(Object,CultureInfo,BindingExpressionBase)
- uid: System.Windows.Data.BindingExpressionBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingExpressionBase
  nameWithType: BindingExpressionBase
  fullName: System.Windows.Data.BindingExpressionBase
- uid: System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate(Object,CultureInfo,BindingGroup)
  nameWithType: ValidationRule.Validate(Object,CultureInfo,BindingGroup)
  fullName: System.Windows.Controls.ValidationRule.Validate(Object,CultureInfo,BindingGroup)
- uid: System.Windows.Data.BindingGroup
  parent: System.Windows.Data
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
- uid: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidatesOnTargetUpdated
  nameWithType: ValidationRule.ValidatesOnTargetUpdated
  fullName: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated
- uid: System.Windows.Controls.ValidationRule.ValidationStep
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationStep
  nameWithType: ValidationRule.ValidationStep
  fullName: System.Windows.Controls.ValidationRule.ValidationStep
- uid: System.Windows.Controls.ValidationRule.#ctor*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule.ValidationRule
- uid: System.Windows.Controls.ValidationRule.Validate*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: Validate
  nameWithType: ValidationRule.Validate
- uid: System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidatesOnTargetUpdated
  nameWithType: ValidationRule.ValidatesOnTargetUpdated
- uid: System.Windows.Controls.ValidationRule.ValidationStep*
  parent: System.Windows.Controls.ValidationRule
  isExternal: false
  name: ValidationStep
  nameWithType: ValidationRule.ValidationStep
