### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeIterationStatement
  id: CodeIterationStatement
  children:
  - System.CodeDom.CodeIterationStatement.#ctor
  - System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])
  - System.CodeDom.CodeIterationStatement.IncrementStatement
  - System.CodeDom.CodeIterationStatement.InitStatement
  - System.CodeDom.CodeIterationStatement.Statements
  - System.CodeDom.CodeIterationStatement.TestExpression
  langs:
  - csharp
  name: CodeIterationStatement
  nameWithType: CodeIterationStatement
  fullName: System.CodeDom.CodeIterationStatement
  type: Class
  summary: "Represents a <xref uid=&quot;langword_csharp_for&quot; name=&quot;for&quot; href=&quot;&quot;></xref> statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop."
  remarks: "A CodeIterationStatement can represent a `for` loop or `while` loop.       The <xref:System.CodeDom.CodeIterationStatement.InitStatement%2A> property specifies the statement to execute before the first loop iteration. The <xref:System.CodeDom.CodeIterationStatement.TestExpression%2A> property specifies the loop continuation expression, which must evaluate to `true` at the end of each loop iteration for another iteration to begin. The <xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A> property specifies the statement to execute at the end of each loop iteration. The <xref:System.CodeDom.CodeIterationStatement.Statements%2A> property specifies the collection of statements to execute within the loop."
  example:
  - "This example demonstrates using a CodeIterationStatement to represent a `for` loop.  \n  \n [!code-cs[CodeIterationStatementExample#2](~/add/codesnippet/csharp/t-system.codedom.codeite_1.cs)]\n [!code-vb[CodeIterationStatementExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codeite_1.vb)]\n [!code-cpp[CodeIterationStatementExample#2](~/add/codesnippet/cpp/t-system.codedom.codeite_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeIterationStatement : System.CodeDom.CodeStatement
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeStatement
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeStatement.EndDirectives
  - System.CodeDom.CodeStatement.LinePragma
  - System.CodeDom.CodeStatement.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: CodeIterationStatement()
  nameWithType: CodeIterationStatement.CodeIterationStatement()
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeIterationStatement&quot;></xref> class."
  syntax:
    content: public CodeIterationStatement ();
    parameters: []
  overload: System.CodeDom.CodeIterationStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])
  id: '#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])'
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  nameWithType: CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.CodeIterationStatement&quot;></xref> class using the specified parameters."
  syntax:
    content: public CodeIterationStatement (System.CodeDom.CodeStatement initStatement, System.CodeDom.CodeExpression testExpression, System.CodeDom.CodeStatement incrementStatement, System.CodeDom.CodeStatement[] statements);
    parameters:
    - id: initStatement
      type: System.CodeDom.CodeStatement
      description: "A <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref> containing the loop initialization statement."
    - id: testExpression
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> containing the expression to test for exit condition."
    - id: incrementStatement
      type: System.CodeDom.CodeStatement
      description: "A <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref> containing the per-cycle increment statement."
    - id: statements
      type: System.CodeDom.CodeStatement[]
      description: "An array of type <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref> containing the statements within the loop."
  overload: System.CodeDom.CodeIterationStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.IncrementStatement
  id: IncrementStatement
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: IncrementStatement
  nameWithType: CodeIterationStatement.IncrementStatement
  fullName: System.CodeDom.CodeIterationStatement.IncrementStatement
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the statement that is called after each loop cycle."
  remarks: "This statement is called after each iteration."
  syntax:
    content: public System.CodeDom.CodeStatement IncrementStatement { get; set; }
    return:
      type: System.CodeDom.CodeStatement
      description: "A <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref> that indicates the per cycle increment statement."
  overload: System.CodeDom.CodeIterationStatement.IncrementStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.InitStatement
  id: InitStatement
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: InitStatement
  nameWithType: CodeIterationStatement.InitStatement
  fullName: System.CodeDom.CodeIterationStatement.InitStatement
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the loop initialization statement."
  remarks: "You can specify an empty initialization statement by setting this property to a <xref:System.CodeDom.CodeExpressionStatement> that contains a <xref:System.CodeDom.CodeSnippetExpression> that contains an empty string."
  syntax:
    content: public System.CodeDom.CodeStatement InitStatement { get; set; }
    return:
      type: System.CodeDom.CodeStatement
      description: "A <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref> that indicates the loop initialization statement."
  overload: System.CodeDom.CodeIterationStatement.InitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.Statements
  id: Statements
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: Statements
  nameWithType: CodeIterationStatement.Statements
  fullName: System.CodeDom.CodeIterationStatement.Statements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets the collection of statements to be executed within the loop."
  syntax:
    content: public System.CodeDom.CodeStatementCollection Statements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "An array of type <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref> that indicates the statements within the loop."
  overload: System.CodeDom.CodeIterationStatement.Statements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeIterationStatement.TestExpression
  id: TestExpression
  parent: System.CodeDom.CodeIterationStatement
  langs:
  - csharp
  name: TestExpression
  nameWithType: CodeIterationStatement.TestExpression
  fullName: System.CodeDom.CodeIterationStatement.TestExpression
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Gets or sets the expression to test as the condition that continues the loop."
  remarks: "If this expression resolves to `true`, the loop will continue."
  syntax:
    content: public System.CodeDom.CodeExpression TestExpression { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> that indicates the expression to test."
  overload: System.CodeDom.CodeIterationStatement.TestExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeStatement
  isExternal: false
  name: System.CodeDom.CodeStatement
- uid: System.CodeDom.CodeIterationStatement.#ctor
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: CodeIterationStatement()
  nameWithType: CodeIterationStatement.CodeIterationStatement()
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement()
- uid: System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  nameWithType: CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
  fullName: System.CodeDom.CodeIterationStatement.CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeStatement[]
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement[]
  spec.csharp:
  - uid: System.CodeDom.CodeStatement
    name: CodeStatement
    nameWithType: CodeStatement
    fullName: CodeStatement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeIterationStatement.IncrementStatement
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: IncrementStatement
  nameWithType: CodeIterationStatement.IncrementStatement
  fullName: System.CodeDom.CodeIterationStatement.IncrementStatement
- uid: System.CodeDom.CodeIterationStatement.InitStatement
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: InitStatement
  nameWithType: CodeIterationStatement.InitStatement
  fullName: System.CodeDom.CodeIterationStatement.InitStatement
- uid: System.CodeDom.CodeIterationStatement.Statements
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: Statements
  nameWithType: CodeIterationStatement.Statements
  fullName: System.CodeDom.CodeIterationStatement.Statements
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.CodeDom.CodeIterationStatement.TestExpression
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: TestExpression
  nameWithType: CodeIterationStatement.TestExpression
  fullName: System.CodeDom.CodeIterationStatement.TestExpression
- uid: System.CodeDom.CodeIterationStatement.#ctor*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: CodeIterationStatement
  nameWithType: CodeIterationStatement.CodeIterationStatement
- uid: System.CodeDom.CodeIterationStatement.IncrementStatement*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: IncrementStatement
  nameWithType: CodeIterationStatement.IncrementStatement
- uid: System.CodeDom.CodeIterationStatement.InitStatement*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: InitStatement
  nameWithType: CodeIterationStatement.InitStatement
- uid: System.CodeDom.CodeIterationStatement.Statements*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: Statements
  nameWithType: CodeIterationStatement.Statements
- uid: System.CodeDom.CodeIterationStatement.TestExpression*
  parent: System.CodeDom.CodeIterationStatement
  isExternal: false
  name: TestExpression
  nameWithType: CodeIterationStatement.TestExpression
