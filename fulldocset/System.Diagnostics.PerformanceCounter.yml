### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounter
  id: PerformanceCounter
  children:
  - System.Diagnostics.PerformanceCounter.#ctor
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  - System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  - System.Diagnostics.PerformanceCounter.BeginInit
  - System.Diagnostics.PerformanceCounter.CategoryName
  - System.Diagnostics.PerformanceCounter.Close
  - System.Diagnostics.PerformanceCounter.CloseSharedResources
  - System.Diagnostics.PerformanceCounter.CounterHelp
  - System.Diagnostics.PerformanceCounter.CounterName
  - System.Diagnostics.PerformanceCounter.CounterType
  - System.Diagnostics.PerformanceCounter.Decrement
  - System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  - System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceCounter.EndInit
  - System.Diagnostics.PerformanceCounter.Increment
  - System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  - System.Diagnostics.PerformanceCounter.InstanceLifetime
  - System.Diagnostics.PerformanceCounter.InstanceName
  - System.Diagnostics.PerformanceCounter.MachineName
  - System.Diagnostics.PerformanceCounter.NextSample
  - System.Diagnostics.PerformanceCounter.NextValue
  - System.Diagnostics.PerformanceCounter.RawValue
  - System.Diagnostics.PerformanceCounter.ReadOnly
  - System.Diagnostics.PerformanceCounter.RemoveInstance
  langs:
  - csharp
  name: PerformanceCounter
  nameWithType: PerformanceCounter
  fullName: System.Diagnostics.PerformanceCounter
  type: Class
  summary: "Representa um componente de contador de desempenho do Windows NT."
  remarks: "The PerformanceCounter component can be used for both reading existing predefined or custom counters and publishing (writing) performance data to custom counters.  \n  \n There are numerous predefined counters listed in the Windows Performance Monitor's [Add Counters dialog box](http://go.microsoft.com/fwlink/p/?LinkId=257854). To learn about the .NET Framework performance counters, see [Performance Counters](~/add/includes/ajax-current-ext-md.md).  \n  \n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n> [!IMPORTANT]\n>  In versions 1.0 and 1.1 of the .NET Framework, this class requires immediate callers to be fully trusted. Starting with the .NET Framework version 2.0, this class requires <xref:System.Diagnostics.PerformanceCounterPermission> for specific actions. It is strongly recommended that <xref:System.Diagnostics.PerformanceCounterPermission> not be granted to semi-trusted code.  The ability to read and write performance counters allows code to perform actions such as enumerating executing processes and obtaining information about them.  \n>   \n>  In addition, passing a PerformanceCounter object to less-trusted code can create a security issue. Never pass performance counter objects, such as a <xref:System.Diagnostics.PerformanceCounterCategory> or PerformanceCounter, to less trusted code.  \n  \n To read from a performance counter, create an instance of the PerformanceCounter class, set the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and, optionally, the <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> or <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> properties, and then call the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method to take a performance counter reading.  \n  \n To publish performance counter data, create one or more custom counters using the <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> method, create an instance of the PerformanceCounter class, set the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> and, optionally, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> or <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> properties, and then call the <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, or <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> methods, or set the <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> property to change the value of your custom counter.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, and <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  \n  \n The counter is the mechanism by which performance data is collected. The registry stores the names of all the counters, each of which is related to a specific area of system functionality. Examples include a processor's busy time, memory usage, or the number of bytes received over a network connection.  \n  \n Each counter is uniquely identified through its name and its location. In the same way that a file path includes a drive, a directory, one or more subdirectories, and a file name, counter information consists of four elements: the computer, the category, the category instance, and the counter name.  \n  \n The counter information must include the category, or performance object, that the counter measures data for. A computer's categories include physical components, such as processors, disks, and memory. There are also system categories, such as processes and threads. Each category is related to a functional element within the computer and has a set of standard counters assigned to it. These objects are listed in the Performance object drop-down list of the Add Counters dialog box within the Windows 2000 System Monitor, and you must include them in the counter path. Performance data is grouped by the category to which is it related.  \n  \n In certain cases, several copies of the same category can exist. For example, several processes and threads run simultaneously, and some computers contain more than one processor. The category copies are called category instances, and each instance has a set of standard counters assigned to it. If a category can have more than one instance, an instance specification must be included in the counter information.  \n  \n To obtain performance data for counters that required an initial or previous value for performing the necessary calculation, call the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method twice and use the information returned as your application requires.  \n  \n> [!NOTE]\n>  Performance counter categories installed with the [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\\\*\\<category name>*\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the `fileMappingSize` attribute value for the `performanceCounters` element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see [\\&lt;performanceCounters\\&gt;](../Topic/%3CperformanceCounters%3E%20Element.md)."
  example:
  - "The following code example demonstrates the use of the PerformanceCounter class to create and use an <xref:System.Diagnostics.PerformanceCounterType> counter type. The example creates categories, sets up counters, collects data from the counters, and calls the <xref:System.Diagnostics.CounterSampleCalculator> class to interpret the performance counter data. The intermediate and final results are displayed in the console window. For additional examples of other performance counter types, see the <xref:System.Diagnostics.PerformanceCounterType> enumeration.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_0_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_0_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter()
  nameWithType: PerformanceCounter.PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma instância nova só de leitura do <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe, sem associar a instância, qualquer sistema ou o contador de desempenho personalizados."
  remarks: "Esta sobrecarga dos conjuntos de construtor de <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Propriedades para cadeias vazias (&quot;&quot;) e define o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>propriedade para o computador local, (&quot;.&quot;).</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Este construtor não inicializar o contador de desempenho, para que este não associe a instância de um contador existente no computador local. Para apontar para um contador de desempenho específica, defina o <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>e, opcionalmente, o <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>propriedades antes de ler quaisquer outras propriedades ou tentar ler a partir de um contador.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Para escrever um contador de desempenho, defina o <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>propriedade `false`.</xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>      > [!NOTE] > O atributo de <xref:System.Security.Permissions.HostProtectionAttribute>aplicado a este membro tem o seguinte valor da propriedade <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>: <xref:System.Security.Permissions.HostProtectionResource>| <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource></xref:System.Security.Permissions.HostProtectionResource></xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A></xref:System.Security.Permissions.HostProtectionAttribute> O <xref:System.Security.Permissions.HostProtectionAttribute>não afeta as aplicações de ambiente de trabalho (que normalmente são iniciadas por um ícone de fazendo duplo clique, escrevendo um comando ou introduzir um URL num browser).</xref:System.Security.Permissions.HostProtectionAttribute> Para obter mais informações, consulte o <xref:System.Security.Permissions.HostProtectionAttribute>classe ou [programação do SQL Server e os atributos de proteção do anfitrião](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/m-system.diagnostics.per_15_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/m-system.diagnostics.per_15_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/m-system.diagnostics.per_15_1.vb)]"
  syntax:
    content: public PerformanceCounter ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma instância nova só de leitura do <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e associa-o contador de desempenho personalizados no computador local ou sistema especificado. Este construtor requer que a categoria tem uma única instância."
  remarks: "As cadeias de parâmetro não são maiúsculas e minúsculas.       Utilize esta sobrecarga para aceder um contador no computador local que pertence a uma categoria que contém uma instância de categoria do contador de desempenho únicos. Se tentar utilizar este construtor para apontar este <xref:System.Diagnostics.PerformanceCounter>instância a uma categoria que contém várias instâncias, gera o construtor uma exceção.</xref:System.Diagnostics.PerformanceCounter> Esta sobrecarga de pode aceder a qualquer só de leitura ou de leitura/escrita contador, mas não permitirem num modo só de leitura. A <xref:System.Diagnostics.PerformanceCounter>criada utilizando esta sobrecarga de instância não é possível escrever para o contador, mesmo que o contador em si é leitura/escrita.</xref:System.Diagnostics.PerformanceCounter>       Esta sobrecarga dos conjuntos de construtor de <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>Propriedades para os valores que passa, define o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>propriedade para o computador local, &quot;.&quot; e define o <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>propriedade como uma cadeia vazia (&quot;&quot;).</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Este construtor inicializa o contador de desempenho e associa a instância de um contador existente (um sistema ou um contador personalizado) no computador local. Os valores que passa para o <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>Propriedades tem de apontar para um contador de desempenho existente no computador local.</xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName);
    parameters:
    - id: categoryName
      type: System.String
      description: "O nome da categoria do contador de desempenho (objeto de desempenho) com a qual está associado a este contador de desempenho."
    - id: counterName
      type: System.String
      description: "O nome do contador de desempenho."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>é uma cadeia vazia (&quot;&quot;).       - ou - <code>counterName</code> é uma cadeia vazia (&quot;&quot;).       - ou - a categoria especificada não existe.       - ou - a categoria especificada está marcada como várias instâncias e requer o contador de desempenho para ser criado com um nome de instância.       - ou - <code>categoryName</code> e <code>counterName</code> foram localizados em vários idiomas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova, só de leitura ou de instância de leitura/escrita do <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e associa-o contador de desempenho personalizados no computador local ou sistema especificado. Este construtor requer que a categoria de conter uma única instância."
  remarks: "As cadeias de parâmetro não são maiúsculas e minúsculas.       Utilize esta sobrecarga para aceder a um só de leitura ou de leitura/escrita contador no computador local que pertence a uma categoria que contém uma instância de categoria do contador de desempenho únicos. Se tentar utilizar este construtor para apontar este <xref:System.Diagnostics.PerformanceCounter>instância a uma categoria que contém várias instâncias, gera o construtor uma exceção.</xref:System.Diagnostics.PerformanceCounter>       Esta sobrecarga dos conjuntos de construtor de <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A>Propriedades para os valores que passa, define o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>propriedade para o computador local, &quot;.&quot; e define o <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>propriedade como uma cadeia vazia (&quot;&quot;).</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Este construtor inicializa o contador de desempenho e associa a instância de um contador existente (um sistema ou um contador personalizado) no computador local. Os valores que passa para o <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>e <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>Propriedades tem de apontar para um contador de desempenho existente no computador local.</xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se a instância do contador de desempenho que apontam para não for válida, chamar o construtor emite uma exceção.      > [!NOTE] > Pode utilizar esta sobrecarga para ligar a um contador de sistema, mas não é possível escrever um contador de sistema. Por conseguinte, a definição `readOnly` para `false` quando ligar a um contador de sistema provoca o construtor para acionar uma excepção.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  example:
  - "The following code example creates an instance of the <xref:System.Diagnostics.PerformanceCounter> class. The example passes in category names, counter names, and a flag value indicating that the counter is not read-only. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/cpp/edd71a17-4ee7-4e9f-af30-_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/csharp/edd71a17-4ee7-4e9f-af30-_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#2](~/add/codesnippet/visualbasic/edd71a17-4ee7-4e9f-af30-_1.vb)]"
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, bool readOnly);
    parameters:
    - id: categoryName
      type: System.String
      description: "O nome da categoria do contador de desempenho (objeto de desempenho) com a qual está associado a este contador de desempenho."
    - id: counterName
      type: System.String
      description: "O nome do contador de desempenho."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para aceder ao contador no modo só de leitura (embora o contador em si pode ser de leitura/escrita); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para aceder ao contador no modo de leitura/escrita."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <code> categoryName </code> é uma cadeia vazia (&quot;&quot;).       - ou - <code> counterName </code> é uma cadeia vazia (&quot;&quot;).       - ou - a categoria especificada não existe. (if <code>readOnly</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>).       - ou - a categoria especificada não é uma categoria de personalizada do .NET Framework (se <code> readOnly </code> é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>).       - ou - a categoria especificada está marcada como várias instâncias e requer o contador de desempenho para ser criado com um nome de instância.       - ou - <code> categoryName </code> e <code> counterName </code> foram localizados em vários idiomas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma instância nova só de leitura do <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e associa-o instância e categoria de contador de desempenho personalizados no computador local ou sistema especificado."
  remarks: "As cadeias de parâmetro não são maiúsculas e minúsculas.       Esta sobrecarga dos conjuntos de construtor de <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Propriedades para os valores que passa e define o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>propriedade para o computador local, &quot;.&quot;.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Este construtor inicializa o contador de desempenho e associa a instância de um contador existente (um sistema ou um contador personalizado) no computador local. Os valores que passa para o <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Propriedades tem de apontar para um contador de desempenho existente no computador local.</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se a instância do contador de desempenho que aponte para não for válida, chamar o construtor emite uma exceção.       Esta sobrecarga de pode aceder a qualquer só de leitura ou de leitura/escrita contador, mas não permitirem num modo só de leitura. A <xref:System.Diagnostics.PerformanceCounter>criada utilizando esta sobrecarga de instância não é possível escrever para o contador, mesmo que o contador em si é leitura/escrita.</xref:System.Diagnostics.PerformanceCounter>       Para criar uma instância da categoria de desempenho, especifique um `instanceName` no <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>construtor.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se a instância de categoria especificado por `instanceName` já existe o novo objeto fará referência a instância existente da categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName);
    parameters:
    - id: categoryName
      type: System.String
      description: "O nome da categoria do contador de desempenho (objeto de desempenho) com a qual está associado a este contador de desempenho."
    - id: counterName
      type: System.String
      description: "O nome do contador de desempenho."
    - id: instanceName
      type: System.String
      description: "O nome de instância de categoria do contador de desempenho ou uma cadeia vazia (&quot;&quot;), se a categoria contiver uma única instância."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>é uma cadeia vazia (&quot;&quot;).       - ou - <code>counterName</code> é uma cadeia vazia (&quot;&quot;).       - ou - a categoria especificada não é válida.       - ou - a categoria especificada está marcada como várias instâncias e requer o contador de desempenho para ser criado com um nome de instância.       - ou - <code>instanceName</code> tem mais de 127 carateres.       - ou - <code>categoryName</code> e <code>counterName</code> foram localizados em vários idiomas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova, só de leitura ou de instância de leitura/escrita do <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e associa-o instância e categoria de contador de desempenho personalizados no computador local ou sistema especificado."
  remarks: "As cadeias de parâmetro não são maiúsculas e minúsculas.       Utilize esta sobrecarga para aceder a um contador de desempenho no modo só de leitura ou o modo de leitura/escrita.       Esta sobrecarga dos conjuntos de construtor de <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Propriedades para os valores que passa e define o <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>propriedade para o computador local, &quot;.&quot;.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Este construtor inicializa o contador de desempenho e associa a instância de um contador existente (um sistema ou um contador personalizado) no computador local. Os valores que passa para o <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, e <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>Propriedades tem de apontar para um contador de desempenho existente no computador local.</xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se a instância do contador de desempenho que apontam para não for válida, chamar o construtor emite uma exceção.      > [!NOTE] > Pode utilizar esta sobrecarga para ligar a um contador de sistema, mas não é possível escrever um contador de sistema. Por conseguinte, a definição `readOnly` para `false` quando ligar a um contador de sistema provoca o construtor para acionar uma excepção.       Para criar uma instância da categoria de desempenho, especifique um `instanceName` no <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>construtor.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se a instância de categoria especificado por `instanceName` já existe o novo objeto fará referência a instância existente da categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);
    parameters:
    - id: categoryName
      type: System.String
      description: "O nome da categoria do contador de desempenho (objeto de desempenho) com a qual está associado a este contador de desempenho."
    - id: counterName
      type: System.String
      description: "O nome do contador de desempenho."
    - id: instanceName
      type: System.String
      description: "O nome de instância de categoria do contador de desempenho ou uma cadeia vazia (&quot;&quot;), se a categoria contiver uma única instância."
    - id: readOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para aceder a um contador no modo só de leitura; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para aceder a um contador no modo de leitura/escrita."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>é uma cadeia vazia (&quot;&quot;).       - ou - <code>counterName</code> é uma cadeia vazia (&quot;&quot;).       - ou - a permissão de leitura/escrita definição pedida é inválida para este contador.       - ou - a categoria especificada não existe (se <code>readOnly</code> é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>).       - ou - a categoria especificada não é uma categoria de personalizada do .NET Framework (se <code>readOnly</code> é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>).       - ou - a categoria especificada está marcada como várias instâncias e requer o contador de desempenho para ser criado com um nome de instância.       - ou - <code>instanceName</code> tem mais de 127 carateres.       - ou - <code>categoryName</code> e <code>counterName</code> foram localizados em vários idiomas."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: PerformanceCounter(String,String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma instância nova só de leitura do <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> classe e associa-a instância do e categoria de contador de desempenho personalizado, no computador especificado ou sistema especificado."
  remarks: "As cadeias de parâmetro não são maiúsculas e minúsculas.       Esta sobrecarga dos conjuntos de construtor de <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Propriedades para os valores transmita o suplemento</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>       Este construtor inicializa o contador de desempenho e associa a instância de um contador existente (um sistema ou um contador personalizado) no computador especificado. Os valores que passa para o <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>e <xref:System.Diagnostics.PerformanceCounter.MachineName%2A>Propriedades tem de apontar para um contador de desempenho existente.</xref:System.Diagnostics.PerformanceCounter.MachineName%2A> </xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> </xref:System.Diagnostics.PerformanceCounter.CounterName%2A> </xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> Se a instância do contador de desempenho que aponte para não for válida, chamar o construtor emite uma exceção. Esta sobrecarga de pode aceder a qualquer só de leitura ou de leitura/escrita contador, mas não permitirem num modo só de leitura. A <xref:System.Diagnostics.PerformanceCounter>criada utilizando esta sobrecarga de instância não é possível escrever para o contador, mesmo que o contador em si é leitura/escrita.</xref:System.Diagnostics.PerformanceCounter>      > [!NOTE] > Não é possível escrever os contadores de desempenho remoto. Não há nenhuma sobrecarga que permite-lhe especificar uma instância de leitura/escrita do <xref:System.Diagnostics.PerformanceCounter>classe que liga a um computador remoto.</xref:System.Diagnostics.PerformanceCounter>       Para criar uma instância da categoria de desempenho, especifique um `instanceName` no <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>construtor.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se a instância de categoria especificado por `instanceName` já existe o novo objeto fará referência a instância existente da categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador.      > [!NOTE] > No Windows Vista, quando o computador remoto é um membro de um grupo de trabalho, poderá ter de desativar o UAC, para que a conta de utilizador local não é filtrada e pode ser elevada para uma conta de administrador. Por motivos de segurança, a desativação UAC deve ser o último recurso. Para obter informações sobre a desativação UAC, consulte [controlo de conta de utilizador e a WMI](http://go.microsoft.com/fwlink/?LinkId=91617)."
  syntax:
    content: public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);
    parameters:
    - id: categoryName
      type: System.String
      description: "O nome da categoria do contador de desempenho (objeto de desempenho) com a qual está associado a este contador de desempenho."
    - id: counterName
      type: System.String
      description: "O nome do contador de desempenho."
    - id: instanceName
      type: System.String
      description: "O nome de instância de categoria do contador de desempenho ou uma cadeia vazia (&quot;&quot;), se a categoria contiver uma única instância."
    - id: machineName
      type: System.String
      description: "O computador no qual o contador de desempenho e a categoria associada."
  overload: System.Diagnostics.PerformanceCounter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>categoryName</code>é uma cadeia vazia (&quot;&quot;).       - ou - <code>counterName</code> é uma cadeia vazia (&quot;&quot;).       - ou - a permissão de leitura/escrita definição pedida é inválida para este contador.       - ou - o contador não existe no computador especificado.       - ou - a categoria especificada está marcada como várias instâncias e requer o contador de desempenho para ser criado com um nome de instância.       - ou - <code>instanceName</code> tem mais de 127 carateres.       - ou - <code>categoryName</code> e <code>counterName</code> foram localizados em vários idiomas."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> machineName </code> parâmetro não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>categoryName</code>or <code>counterName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  id: BeginInit
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: BeginInit()
  nameWithType: PerformanceCounter.BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Começa a inicialização de uma <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> instância utilizada num formulário ou por outro componente. A inicialização ocorre no tempo de execução."
  remarks: "O [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] design ambiente utiliza este método para iniciar a inicialização de um componente que é utilizado num formulário ou por outro componente. O <xref:System.Diagnostics.PerformanceCounter.EndInit%2A>método termina a inicialização.</xref:System.Diagnostics.PerformanceCounter.EndInit%2A> Utilizar o BeginInit e <xref:System.Diagnostics.PerformanceCounter.EndInit%2A>métodos impede que o componente a ser utilizada antes de ser completamente inicializada.</xref:System.Diagnostics.PerformanceCounter.EndInit%2A>"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  id: CategoryName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o nome da categoria de contador de desempenho para este contador de desempenho."
  remarks: "O CategoryName é apresentado no `Performance Object` campo snap de MMC do Gestor de contador de desempenho em `Add Counter` caixa de diálogo.       Um contador de desempenho monitoriza o comportamento de uma categoria ou o objeto de desempenho, num computador. Categorias incluem objetos de sistema (por exemplo, threads e processos) e componentes físicos (tais como processadores, discos e memória). Contadores do sistema que estão relacionados com o mesmo objeto de desempenho estão agrupados numa categoria que indica as respetivas foco comuns. Quando cria uma instância do <xref:System.Diagnostics.PerformanceCounter>classe, primeiro indicar a categoria com a qual o componente irá interagir e, em seguida, escolha um contador dessa categoria.</xref:System.Diagnostics.PerformanceCounter>       Por exemplo, uma categoria de contador do Windows é a categoria de memória. Contadores de sistema dentro desta categoria controlam os dados de memória, tais como o número de bytes disponíveis e o número de bytes em cache. Se quisesse trabalhar com os bytes em cache na sua aplicação, poderá criar uma instância do <xref:System.Diagnostics.PerformanceCounter>componente, ligue-o para a categoria de memória e, em seguida, escolha no contador adequado (neste caso, Bytes em cache) dessa categoria.</xref:System.Diagnostics.PerformanceCounter>       Embora o seu sistema disponibiliza muitas categorias de contador mais, as categorias irá provavelmente interagir com mais frequentemente são as categorias de Cache, memória, objetos, PhysicalDisk, processo, processadores, servidor, sistema e Thread."
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the CategoryName, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_6_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_6_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_6_1.vb)]"
  syntax:
    content: public string CategoryName { get; set; }
    return:
      type: System.String
      description: "O nome da categoria do contador de desempenho (objeto de desempenho) com a qual está associado a este contador de desempenho."
  overload: System.Diagnostics.PerformanceCounter.CategoryName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O CategoryName for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Close
  id: Close
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Close()
  nameWithType: PerformanceCounter.Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Fecha o contador de desempenho e liberta todos os recursos alocados por esta instância do contador de desempenho."
  remarks: "Quando associar este <xref:System.Diagnostics.PerformanceCounter>instância com um contador de desempenho que reside no servidor, o sistema inicializa a instância e aloca a memória para conter as informações do contador de exemplo.</xref:System.Diagnostics.PerformanceCounter> O método Fechar liberta os recursos atribuídos pelo objeto."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources
  id: CloseSharedResources
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CloseSharedResources()
  nameWithType: PerformanceCounter.CloseSharedResources()
  fullName: System.Diagnostics.PerformanceCounter.CloseSharedResources()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Liberta o estado de biblioteca partilhada do contador de desempenho atribuído pelos contadores."
  syntax:
    content: public static void CloseSharedResources ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.CloseSharedResources*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  id: CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a descrição para este contador de desempenho."
  remarks: "A caixa de diálogo Adicionar contadores da MMC de Gestor de contador de desempenho snap no apresenta o texto de CounterHelp quando um utilizador seleciona um contador na lista de contadores e clica no botão explicativo.       Quando cria um novo contador, utilize o texto de CounterHelp para descrever o que o contador de monitores de fazer para que o utilizador pode determinar se pretende adicionar o contador para apresentar o Monitor de sistema.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  syntax:
    content: public string CounterHelp { get; }
    return:
      type: System.String
      description: "Uma descrição do item ou a quantidade que mede o contador de desempenho."
  overload: System.Diagnostics.PerformanceCounter.CounterHelp*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> instância não está associada um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterName
  id: CounterName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o nome do contador de desempenho que está associado este <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> instância."
  remarks: "Pode obter uma lista de contadores pré-existente disponíveis do Windows desempenho Gestor do [caixa de diálogo Adicionar contadores](http://go.microsoft.com/fwlink/p/?LinkId=257854)."
  example:
  - "The following code example shows how to set the CounterName property to a typical counter name.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_4_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_4_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_4_1.vb)]"
  syntax:
    content: public string CounterName { get; set; }
    return:
      type: System.String
      description: "O nome do contador, que geralmente descreve a quantidade que está a ser contada. Este nome é apresentado na lista de contadores da MMC de Gestor de contador de desempenho snap da caixa de diálogo Adicionar contadores."
  overload: System.Diagnostics.PerformanceCounter.CounterName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O CounterName <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.CounterType
  id: CounterType
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém o tipo de contador do contador de desempenho associado."
  remarks: "O <xref:System.Diagnostics.PerformanceCounterType>enumeração contém os tipos de contadores de desempenho que pode interagir com.</xref:System.Diagnostics.PerformanceCounterType> Alguns dos tipos de contador representam valores calculados, tais como a média de contador o sistema tem medições efetuadas desde. Outros tipos de representam os valores não processados ou uncalculated. A tabela seguinte mostra os tipos de contador que irá interagir com mais frequência.      | Responsabilidade do contador | Valor de PerformanceCounterType | Exemplo |   |------------------------------|----------------------------------|-------------|   | Manter uma contagem de itens ou operações simple. | `NumberOfItems32`| Controlar o número de ordens recebida como um número inteiro de 32 bits. |   | Manter uma contagem de simple maior capacidade. | `NumberOfItems64`| Controlar o número das ordens de para um site com muito elevado volume, armazenado como um número inteiro de 64 bits. |   | Controlar o número de itens ou operações por segundo. | `RateOfCountsPerSecond32`| As ordens de recebidos por segundo num site de controlo. |   | Controlar um número maior capacidade de itens ou operações por segundo. | `RateOfCountsPerSecond64`| As ordens de recebidos por segundo num site com um volume muito elevado de controlo. |   | Calcular a média do tempo para executar um processo ou para processar um item | `AverageTimer32`| Calcular o tempo médio de uma ordem demora a ser processado. |       Quando cria um contador cujo tipo requer a utilização de um contador base correspondente, tem de declarar o contador e a base no <xref:System.Diagnostics.CounterCreationDataCollection>transmitidas para a <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName>método.</xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=fullName> </xref:System.Diagnostics.CounterCreationDataCollection>      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  syntax:
    content: public System.Diagnostics.PerformanceCounterType CounterType { get; }
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "A <xref href=&quot;System.Diagnostics.PerformanceCounterType&quot;> </xref> que descrevem como como o contador interage com uma aplicação de monitorização e a natureza dos valores contém (por exemplo, calculada ou uncalculated)."
  overload: System.Diagnostics.PerformanceCounter.CounterType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A instância não está corretamente associada um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Decrement
  id: Decrement
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Decrement()
  nameWithType: PerformanceCounter.Decrement()
  fullName: System.Diagnostics.PerformanceCounter.Decrement()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "É decrementada o contador de desempenho associado por um através de uma operação atómica eficiente."
  remarks: "Pode escrever apenas contadores personalizados. Todos os contadores de sistema são só de leitura.      > [!NOTE] > O <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e métodos de diminuir utilizam interlocks para atualizar o valor do contador.</xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Ajuda a manter o valor do contador precisos no multithread ou multiprocess cenários, mas resulta numa penalidade de desempenho. Se não precisar de precisão que interlocked operações fornecer, pode atualizar o <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>propriedade diretamente até um 5 vezes melhorias de desempenho.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  No entanto, nos cenários multithread, algumas atualizações para o valor do contador podem ser ignoradas, resultando em dados incorretos.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria."
  syntax:
    content: public long Decrement ();
    parameters: []
    return:
      type: System.Int64
      description: "O valor do contador decrementadas à medida."
  overload: System.Diagnostics.PerformanceCounter.Decrement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O contador é só de leitura, pelo que a aplicação não é possível diminui-lo.       - ou - a instância não está corretamente associada com um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  id: DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: DefaultFileMappingSize
  nameWithType: PerformanceCounter.DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Especifica o tamanho, em bytes, da memória global partilhado por contadores de desempenho. O tamanho predefinido é 524,288 bytes."
  syntax:
    content: public static int DefaultFileMappingSize;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PerformanceCounter.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceCounter.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A adicionar."
  overload: System.Diagnostics.PerformanceCounter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.EndInit
  id: EndInit
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: EndInit()
  nameWithType: PerformanceCounter.EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Termina a inicialização de uma <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> instância que é utilizada num formulário ou por outro componente. A inicialização ocorre no tempo de execução."
  remarks: "O [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] design ambiente utiliza este método para terminar a inicialização de um componente que é utilizado num formulário ou por outro componente. O <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>método inicia a inicialização.</xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> Utilizar o <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>e métodos de EndInit impede que o componente a ser utilizada antes de ser completamente inicializada.</xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.Increment
  id: Increment
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: Increment()
  nameWithType: PerformanceCounter.Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Aumenta o contador de desempenho associado por um através de uma operação atómica eficiente."
  remarks: "Pode escrever apenas contadores personalizados. Todos os contadores de sistema são só de leitura.      > [!NOTE] > O incremento, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>métodos utilizam interlocks para atualizar o valor do contador.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> Ajuda a manter o valor do contador precisos no multithread ou multiprocess cenários, mas resulta numa penalidade de desempenho. Se não precisar de precisão que interlocked operações fornecer, pode atualizar o <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>propriedade diretamente até um 5 vezes melhorias de desempenho.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  No entanto, nos cenários multithread, algumas atualizações para o valor do contador podem ser ignoradas, resultando em dados incorretos.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria."
  syntax:
    content: public long Increment ();
    parameters: []
    return:
      type: System.Int64
      description: "O valor do contador incrementados."
  overload: System.Diagnostics.PerformanceCounter.Increment*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O contador é só de leitura, pelo que a aplicação não é possível incrementá-lo.       - ou - a instância não está corretamente associada com um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  id: IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: IncrementBy(Int64)
  nameWithType: PerformanceCounter.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Incrementos ou é decrementada o valor do contador de desempenho associado por um período especificado através de uma operação atómica eficiente."
  remarks: "Pode escrever apenas contadores personalizados. Todos os contadores de sistema são só de leitura.      > [!NOTE] > O <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, IncrementBy, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>métodos utilizam interlocks para atualizar o valor do contador.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Ajuda a manter o valor do contador precisos no multithread ou multiprocess cenários, mas resulta numa penalidade de desempenho. Se não precisar de precisão que interlocked operações fornecer, pode atualizar o <xref:System.Diagnostics.PerformanceCounter.RawValue%2A>propriedade diretamente até um 5 vezes melhorias de desempenho.</xref:System.Diagnostics.PerformanceCounter.RawValue%2A>  No entanto, nos cenários multithread, algumas atualizações para o valor do contador podem ser ignoradas, resultando em dados incorretos.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria."
  example:
  - "The following code example demonstrates how to use the IncrementBy method to add increments to a counter. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/cpp/m-system.diagnostics.per_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/csharp/m-system.diagnostics.per_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/visualbasic/m-system.diagnostics.per_2_1.vb)]"
  syntax:
    content: public long IncrementBy (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "O valor a incrementar pelo. (Negativo valor é decrementada o contador.)"
    return:
      type: System.Int64
      description: "O novo valor de contador."
  overload: System.Diagnostics.PerformanceCounter.IncrementBy*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O contador é só de leitura, pelo que a aplicação não é possível incrementá-lo.       - ou - a instância não está corretamente associada com um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  id: InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define a duração de um processo."
  remarks: "Se a categoria de contador de desempenho é criada com a versão 1.0 ou 1.1 do .NET Framework, utiliza a memória partilhada global e o valor para InstanceLifetime tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria.      > [!NOTE] > Se o valor da <xref:System.Diagnostics.PerformanceCounter.CounterType%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterCategoryType>, o valor de InstanceLifetime para o contador de desempenho tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounterCategoryType> </xref:System.Diagnostics.PerformanceCounter.CounterType%2A>"
  syntax:
    content: public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }
    return:
      type: System.Diagnostics.PerformanceCounterInstanceLifetime
      description: "Um do <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> valores. A predefinição é <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref>."
  overload: System.Diagnostics.PerformanceCounter.InstanceLifetime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor não é um membro do <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> enumeração."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "InstanceLifetime está definido após o <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> foi inicializado."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  id: InstanceName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define um nome de instância para este contador de desempenho."
  remarks: "> [!NOTE]\n>  Instance names must be shorter than 128 characters in length.  \n  \n In some situations, categories are subdivided into instances, which track data about multiple occurrences of the object that a category relates to. Instances apply to the category as whole, rather than to individual counters. Every counter within a category has each instance defined for the category. For example, the Process category contains instances named Idle and System. Every counter within the Process category thus contains data for each instance, showing information about either idle processes or system processes.  \n  \n Many categories do not contain multiple instances, so you can leave this property empty to indicate that no instance is associated with the category.  \n  \n If this <xref:System.Diagnostics.PerformanceCounter> instance points to a noncustom category, you can choose from only the existing category instances. You can create new category instances only in custom categories, which allow you to define as many counters and category instances as you need.  \n  \n To create a performance category instance, specify an `instanceName` on the <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> constructor. If the category instance specified by `instanceName` already exists the new object will reference the existing category instance.  \n  \n> [!NOTE]\n>  Do not use the characters \"(\", \")\", \"#\", \"\\\\\", or \"/\" in the instance name. If any of these characters are used, the Performance Console (see [Runtime Profiling](~/add/includes/ajax-current-ext-md.md)) may not correctly display the instance values.  \n  \n If the instance name is automatically generated and might contain the characters \"(\", \")\", \"#\", \"\\\\\", or \"/\", use the character mapping in the following table.  \n  \n|Character|Mapped character|  \n|---------------|----------------------|  \n|(|[|  \n|)|]|  \n|#|_|  \n|\\|_|  \n|/|_|  \n  \n The <xref:System.AppDomain.FriendlyName%2A> property of the <xref:System.AppDomain> object obtained from the <xref:System.AppDomain.CurrentDomain%2A?displayProperty=fullName> property is a common source of instance names that can contain invalid characters."
  example:
  - "The following code example creates a default instance of the <xref:System.Diagnostics.PerformanceCounter> class. After the instance is created, the <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, and InstanceName property values are set, and the results of a call to the <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> method are displayed.  \n  \n [!code-cs[PerfCounter#1](~/add/codesnippet/csharp/p-system.diagnostics.per_0_1.cs)]\n [!code-cpp[PerfCounter#1](~/add/codesnippet/cpp/p-system.diagnostics.per_0_1.cpp)]\n [!code-vb[PerfCounter#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_0_1.vb)]"
  syntax:
    content: public string InstanceName { get; set; }
    return:
      type: System.String
      description: "O nome de instância de categoria do contador de desempenho ou uma cadeia vazia (&quot;&quot;), se o contador é um contador de instância única."
  overload: System.Diagnostics.PerformanceCounter.InstanceName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.MachineName
  id: MachineName
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o nome do computador para este contador de desempenho"
  remarks: "Pode escrever valores apenas para os contadores que residem no computador local. No entanto, pode ler os valores do contador a partir de qualquer computador na empresa que tem privilégios de acesso.       Quando definir a propriedade MachineName para apontar para um computador remoto, o <xref:System.Diagnostics.PerformanceCounter>instância tenta abrir o contador nesse computador.</xref:System.Diagnostics.PerformanceCounter> Se o contador não existir, a definição desta propriedade emite uma exceção."
  syntax:
    content: public string MachineName { get; set; }
    return:
      type: System.String
      description: "O servidor no qual o contador de desempenho e a categoria associada residem."
  overload: System.Diagnostics.PerformanceCounter.MachineName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O formato de MachineName é inválido."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.NextSample
  id: NextSample
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: NextSample()
  nameWithType: PerformanceCounter.NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém uma amostra de contador e devolve o valor não processado ou uncalculated, para o mesmo."
  remarks: "Este método é geralmente utilizado para os contadores que contenham valores uncalculated.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  example:
  - "The following code example demonstrates how to use the NextSample method to obtain the next uncalculated value of a counter. This code example is part of a larger example for the <xref:System.Diagnostics.PerformanceCounter> class.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/cpp/m-system.diagnostics.per_13_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/csharp/m-system.diagnostics.per_13_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#3](~/add/codesnippet/visualbasic/m-system.diagnostics.per_13_1.vb)]"
  syntax:
    content: public System.Diagnostics.CounterSample NextSample ();
    parameters: []
    return:
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> que representa o valor seguinte não processado que obtém o sistema para este contador."
  overload: System.Diagnostics.PerformanceCounter.NextSample*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A instância não está corretamente associada um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.NextValue
  id: NextValue
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: NextValue()
  nameWithType: PerformanceCounter.NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém uma amostra de contador e devolve o valor calculado para o mesmo."
  remarks: "> [!NOTE]> Se o valor calculado de um contador depende em duas leituras de contador, a primeira operação de leitura devolve 0,0. A repor as propriedades de contador de desempenho para especificar um contador diferentes é equivalente ao criar um novo contador de desempenho e a primeira operação de leitura utilizando as propriedades de novo devolve 0,0. O tempo de atraso recomendada entre chamadas para o método NextValue é um segundo, para permitir que o contador efetuar a leitura de incremental seguinte.      > [!NOTE] > Para ler os contadores de desempenho, tem de ter privilégios administrativos. No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  example:
  - "The following code example creates an <xref:System.Diagnostics.PerformanceCounterType> counter and uses the NextValue method to display the counter's values over a time period.  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/m-system.diagnostics.per_12_1.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/m-system.diagnostics.per_12_1.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/m-system.diagnostics.per_12_1.vb)]"
  syntax:
    content: public float NextValue ();
    parameters: []
    return:
      type: System.Single
      description: "O valor calculado seguinte que obtém o sistema para este contador."
  overload: System.Diagnostics.PerformanceCounter.NextValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A instância não está corretamente associada um contador de desempenho."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.RawValue
  id: RawValue
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o valor uncalculated, ou não processado deste contador."
  remarks: "Se o tipo de contador tem um tamanho de 32 bits e tenta definir esta propriedade para um valor que é demasiado grande para caber, a propriedade trunca o valor de 32 bits. Durante a leitura contadores personalizados no computador local, utilizando o RawValue propriedade em vez de um valor calculado pode produzir significativamente melhorar o desempenho em cenários em que o valor não processado é suficiente.       Se o contador que se é só de leitura, obtenção da propriedade RawValue amostras de contador momento em que a propriedade é chamada. Esta ação é equivalente ao efetuar uma chamada inicial para o <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>método.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A> Se posteriormente chamar <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>, pode efetuar cálculos nos valores que ambas as chamadas devolveu.</xref:System.Diagnostics.PerformanceCounter.NextSample%2A>       Uma vez que os contadores de sistema são só de leitura, pode obter mas não definir os respetivos valores não processados.      > [!NOTE] > O <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>, e <xref:System.Diagnostics.PerformanceCounter.Decrement%2A>métodos utilizam interlocks para atualizar o valor do contador.</xref:System.Diagnostics.PerformanceCounter.Decrement%2A> </xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> </xref:System.Diagnostics.PerformanceCounter.Increment%2A> Ajuda a manter o valor do contador precisos no multithread ou multiprocess cenários, mas resulta numa penalidade de desempenho. Se não precisar de precisão que interlocked operações fornecer, pode atualizar a propriedade RawValue diretamente para até um 5 vezes melhorias de desempenho.  No entanto, nos cenários multithread, algumas atualizações para o valor do contador podem ser ignoradas, resultando em dados incorretos.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria.      > [!NOTE] > Para ler os contadores de desempenho no Windows Vista, Windows XP Professional x64 Edition ou Windows Server 2003, tem de ser um membro do grupo de utilizadores do Monitor de desempenho ou ter privilégios administrativos.   >> Para evitar a necessidade de elevar os seus privilégios para aceder aos contadores de desempenho no Windows Vista, tem de adicionar manualmente ao grupo de utilizadores do Monitor de desempenho.   >> No Windows Vista, o controlo de conta de utilizador (UAC) determina os privilégios de utilizador. Se for um membro do grupo Administradores incorporado, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de utilizador padrão e um token de acesso de administrador. Por predefinição, está na função de utilizador padrão. Para executar o código que acede ao contadores de desempenho, primeiro tem elevar os privilégios de utilizador padrão ao administrador. Pode fazê-lo quando iniciar uma aplicação ao clicar no ícone de aplicação e com a indicação de que pretende executar como administrador."
  example:
  - "The following example uses the <xref:System.Diagnostics.CounterSample> class to display the value of the RawValue property for a counter.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/p-system.diagnostics.per_2_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/p-system.diagnostics.per_2_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/p-system.diagnostics.per_2_1.vb)]"
  syntax:
    content: public long RawValue { get; set; }
    return:
      type: System.Int64
      description: "O valor não processado do contador."
  overload: System.Diagnostics.PerformanceCounter.RawValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Está a tentar definir o valor do contador de não processados, mas o contador é só de leitura.       - ou - a instância não está corretamente associada com um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Código que está a executar sem privilégios administrativos tentou ler um contador de desempenho."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  id: ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define um valor que indica se esta <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> instância está no modo só de leitura."
  remarks: "Para um contador de sistema, só de leitura deve sempre `true`. Não é possível escrever um contador de sistema."
  syntax:
    content: public bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> instância está no modo só de leitura (mesmo se o contador propriamente dito é um contador de .NET Framework personalizado); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso esteja no modo de leitura/escrita. A predefinição é o valor definido pelo construtor."
  overload: System.Diagnostics.PerformanceCounter.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  id: RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  langs:
  - csharp
  name: RemoveInstance()
  nameWithType: PerformanceCounter.RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Elimina a instância de categoria especificada pelo <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> objeto <xref:System.Diagnostics.PerformanceCounter.InstanceName*>propriedade.</xref:System.Diagnostics.PerformanceCounter.InstanceName*>"
  remarks: "Pode remover uma instância apenas para um contador personalizado. Todos os contadores de sistema são só de leitura, pelo que tentar remover uma delas emite uma exceção.      > [!NOTE] > Para evitar uma condição provável de antecipação possíveis quando for lançada a memória partilhada contador de desempenho, recomenda-se que o método RemoveInstance ser chamado a partir de <xref:System.AppDomain.DomainUnload>processador de eventos.</xref:System.AppDomain.DomainUnload>       Para criar uma instância da categoria de desempenho, especifique um `instanceName` no <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A>construtor.</xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> Se a instância de categoria especificado por `instanceName` já existe o novo objeto fará referência a instância existente da categoria.      > [!NOTE] > Se o valor para o <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>propriedade é <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>e a categoria de contador de desempenho foi criada com o .NET Framework versão 1.0 ou 1.1, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Categorias de contador de desempenho criadas com versões anteriores utilizam memória partilhada global e o valor para <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A>tem de ser <xref:System.Diagnostics.PerformanceCounterInstanceLifetime>.</xref:System.Diagnostics.PerformanceCounterInstanceLifetime> </xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> Se a categoria não for utilizada por aplicações em execução em versões 1.0 ou 1.1 do .NET Framework, elimine e recrie a categoria."
  syntax:
    content: public void RemoveInstance ();
    parameters: []
  overload: System.Diagnostics.PerformanceCounter.RemoveInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este contador é só de leitura, pelo que qualquer instância que está associada a categoria não pode ser removida.       - ou - a instância não está corretamente associada com um contador de desempenho.       - ou - <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>propriedade está definida como <xref href=&quot;System.Diagnostics.PerformanceCounterInstanceLifetime&quot;> </xref> quando utilizar global memória partilhada.</xref:System.Diagnostics.PerformanceCounter.InstanceLifetime*>"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Ocorreu um erro ao aceder a uma API do sistema."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A plataforma é Windows 98 ou Windows Millennium edição (Me), que não suporta os contadores de desempenho."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Diagnostics.PerformanceCounter.#ctor
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter()
  nameWithType: PerformanceCounter.PerformanceCounter()
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter()
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String)
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String,Boolean)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,Boolean)
- uid: System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter(String,String,String,String)
  nameWithType: PerformanceCounter.PerformanceCounter(String,String,String,String)
  fullName: System.Diagnostics.PerformanceCounter.PerformanceCounter(String,String,String,String)
- uid: System.Diagnostics.PerformanceCounter.BeginInit
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: BeginInit()
  nameWithType: PerformanceCounter.BeginInit()
  fullName: System.Diagnostics.PerformanceCounter.BeginInit()
- uid: System.Diagnostics.PerformanceCounter.CategoryName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
  fullName: System.Diagnostics.PerformanceCounter.CategoryName
- uid: System.Diagnostics.PerformanceCounter.Close
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Close()
  nameWithType: PerformanceCounter.Close()
  fullName: System.Diagnostics.PerformanceCounter.Close()
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CloseSharedResources()
  nameWithType: PerformanceCounter.CloseSharedResources()
  fullName: System.Diagnostics.PerformanceCounter.CloseSharedResources()
- uid: System.Diagnostics.PerformanceCounter.CounterHelp
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
  fullName: System.Diagnostics.PerformanceCounter.CounterHelp
- uid: System.Diagnostics.PerformanceCounter.CounterName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
  fullName: System.Diagnostics.PerformanceCounter.CounterName
- uid: System.Diagnostics.PerformanceCounter.CounterType
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
  fullName: System.Diagnostics.PerformanceCounter.CounterType
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounter.Decrement
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Decrement()
  nameWithType: PerformanceCounter.Decrement()
  fullName: System.Diagnostics.PerformanceCounter.Decrement()
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: DefaultFileMappingSize
  nameWithType: PerformanceCounter.DefaultFileMappingSize
  fullName: System.Diagnostics.PerformanceCounter.DefaultFileMappingSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PerformanceCounter.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceCounter.Dispose(Boolean)
- uid: System.Diagnostics.PerformanceCounter.EndInit
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: EndInit()
  nameWithType: PerformanceCounter.EndInit()
  fullName: System.Diagnostics.PerformanceCounter.EndInit()
- uid: System.Diagnostics.PerformanceCounter.Increment
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Increment()
  nameWithType: PerformanceCounter.Increment()
  fullName: System.Diagnostics.PerformanceCounter.Increment()
- uid: System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: IncrementBy(Int64)
  nameWithType: PerformanceCounter.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceCounter.IncrementBy(Int64)
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
  fullName: System.Diagnostics.PerformanceCounter.InstanceLifetime
- uid: System.Diagnostics.PerformanceCounterInstanceLifetime
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterInstanceLifetime
  nameWithType: PerformanceCounterInstanceLifetime
  fullName: System.Diagnostics.PerformanceCounterInstanceLifetime
- uid: System.Diagnostics.PerformanceCounter.InstanceName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
  fullName: System.Diagnostics.PerformanceCounter.InstanceName
- uid: System.Diagnostics.PerformanceCounter.MachineName
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
  fullName: System.Diagnostics.PerformanceCounter.MachineName
- uid: System.Diagnostics.PerformanceCounter.NextSample
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextSample()
  nameWithType: PerformanceCounter.NextSample()
  fullName: System.Diagnostics.PerformanceCounter.NextSample()
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.PerformanceCounter.NextValue
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextValue()
  nameWithType: PerformanceCounter.NextValue()
  fullName: System.Diagnostics.PerformanceCounter.NextValue()
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.PerformanceCounter.RawValue
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
  fullName: System.Diagnostics.PerformanceCounter.RawValue
- uid: System.Diagnostics.PerformanceCounter.ReadOnly
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
  fullName: System.Diagnostics.PerformanceCounter.ReadOnly
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RemoveInstance()
  nameWithType: PerformanceCounter.RemoveInstance()
  fullName: System.Diagnostics.PerformanceCounter.RemoveInstance()
- uid: System.Diagnostics.PerformanceCounter.#ctor*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: PerformanceCounter
  nameWithType: PerformanceCounter.PerformanceCounter
- uid: System.Diagnostics.PerformanceCounter.BeginInit*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: BeginInit
  nameWithType: PerformanceCounter.BeginInit
- uid: System.Diagnostics.PerformanceCounter.CategoryName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CategoryName
  nameWithType: PerformanceCounter.CategoryName
- uid: System.Diagnostics.PerformanceCounter.Close*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Close
  nameWithType: PerformanceCounter.Close
- uid: System.Diagnostics.PerformanceCounter.CloseSharedResources*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CloseSharedResources
  nameWithType: PerformanceCounter.CloseSharedResources
- uid: System.Diagnostics.PerformanceCounter.CounterHelp*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterHelp
  nameWithType: PerformanceCounter.CounterHelp
- uid: System.Diagnostics.PerformanceCounter.CounterName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterName
  nameWithType: PerformanceCounter.CounterName
- uid: System.Diagnostics.PerformanceCounter.CounterType*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: CounterType
  nameWithType: PerformanceCounter.CounterType
- uid: System.Diagnostics.PerformanceCounter.Decrement*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Decrement
  nameWithType: PerformanceCounter.Decrement
- uid: System.Diagnostics.PerformanceCounter.Dispose*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Dispose
  nameWithType: PerformanceCounter.Dispose
- uid: System.Diagnostics.PerformanceCounter.EndInit*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: EndInit
  nameWithType: PerformanceCounter.EndInit
- uid: System.Diagnostics.PerformanceCounter.Increment*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: Increment
  nameWithType: PerformanceCounter.Increment
- uid: System.Diagnostics.PerformanceCounter.IncrementBy*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: IncrementBy
  nameWithType: PerformanceCounter.IncrementBy
- uid: System.Diagnostics.PerformanceCounter.InstanceLifetime*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceLifetime
  nameWithType: PerformanceCounter.InstanceLifetime
- uid: System.Diagnostics.PerformanceCounter.InstanceName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: InstanceName
  nameWithType: PerformanceCounter.InstanceName
- uid: System.Diagnostics.PerformanceCounter.MachineName*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: MachineName
  nameWithType: PerformanceCounter.MachineName
- uid: System.Diagnostics.PerformanceCounter.NextSample*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextSample
  nameWithType: PerformanceCounter.NextSample
- uid: System.Diagnostics.PerformanceCounter.NextValue*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: NextValue
  nameWithType: PerformanceCounter.NextValue
- uid: System.Diagnostics.PerformanceCounter.RawValue*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RawValue
  nameWithType: PerformanceCounter.RawValue
- uid: System.Diagnostics.PerformanceCounter.ReadOnly*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: ReadOnly
  nameWithType: PerformanceCounter.ReadOnly
- uid: System.Diagnostics.PerformanceCounter.RemoveInstance*
  parent: System.Diagnostics.PerformanceCounter
  isExternal: false
  name: RemoveInstance
  nameWithType: PerformanceCounter.RemoveInstance
