### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RolePrincipal
  id: RolePrincipal
  children:
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.CachedListChanged
  - System.Web.Security.RolePrincipal.CookiePath
  - System.Web.Security.RolePrincipal.Expired
  - System.Web.Security.RolePrincipal.ExpireDate
  - System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.GetRoles
  - System.Web.Security.RolePrincipal.Identity
  - System.Web.Security.RolePrincipal.IsInRole(System.String)
  - System.Web.Security.RolePrincipal.IsRoleListCached
  - System.Web.Security.RolePrincipal.IssueDate
  - System.Web.Security.RolePrincipal.ProviderName
  - System.Web.Security.RolePrincipal.SetDirty
  - System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.ToEncryptedTicket
  - System.Web.Security.RolePrincipal.Version
  langs:
  - csharp
  name: RolePrincipal
  nameWithType: RolePrincipal
  fullName: System.Web.Security.RolePrincipal
  type: Class
  summary: "Representa as informações de segurança para o atual pedido HTTP, incluindo o membro da função. Esta classe não pode ser herdada."
  remarks: "O objeto RolePrincipal implementa o <xref:System.Security.Principal.IPrincipal>interface e representa o contexto de segurança atual para o pedido HTTP.</xref:System.Security.Principal.IPrincipal>       Quando a gestão de funções está ativado (consulte <xref:System.Web.Security.Roles>), <xref:System.Web.Security.RoleManagerModule>atribui um objeto RolePrincipal para a <xref:System.Web.HttpContext.User%2A>propriedade de <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.</xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A> </xref:System.Web.Security.RoleManagerModule> </xref:System.Web.Security.Roles>       A classe de RolePrincipal expõe a identidade de segurança para o atual pedido HTTP e adicionalmente efetua verificações de membro da função. Se <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>é `true`, em seguida, o objeto RolePrincipal gere a lista em cache de funções procura membro da função para o utilizador atual o em cache na lista e em primeiro lugar, em seguida, a função <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A> Se <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>é `false`, o objeto RolePrincipal procura sempre membro da função utilizando o fornecedor de função.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>       O objeto RolePrincipal encripta e desencripta a informações de função em cache no cookie identificado por <xref:System.Web.Security.Roles.CookieName%2A>com base no <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.</xref:System.Web.Security.Roles.CookieProtectionValue%2A> </xref:System.Web.Security.Roles.CookieName%2A>"
  syntax:
    content: 'public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Para instanciar um <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto especificado para <code> identity </code>."
  remarks: "Esta sobrecarga do construtor RolePrincipal cria uma nova <xref:System.Web.Security.RolePrincipal>de objeto e inicializa os respetivos valores de propriedade.</xref:System.Web.Security.RolePrincipal> Informações de função em cache não seja lido a partir do cookie identificado pelo <xref:System.Web.Security.Roles.CookieName%2A>propriedade.</xref:System.Web.Security.Roles.CookieName%2A> O <xref:System.Web.Security.RolePrincipal.ProviderName%2A>propriedade está definida como o <xref:System.Configuration.Provider.ProviderBase.Name%2A>do fornecedor de funções predefinido.</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Para informações sobre como ativar a gestão de funções, consulte a <xref:System.Web.Security.Roles>classe.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/39332c55-2f33-4fad-9306-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/39332c55-2f33-4fad-9306-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade do utilizador para criar o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> para."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> classe utilizando as informações contidas no especificado <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto e utilizando o contexto de transmissão em fluxo especificado."
  syntax:
    content: protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto para preencher com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino para esta serialização."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Para instanciar um <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto especificado para <code> identity </code> com informações de função especificada do <code> encryptedTicket </code>."
  remarks: "Esta sobrecarga do construtor RolePrincipal cria uma nova <xref:System.Web.Security.RolePrincipal>de objeto e inicializa os respetivos valores de propriedade.</xref:System.Web.Security.RolePrincipal> É ler as informações de função para o utilizador atual do fornecido `encryptedTicket` e em cache com o <xref:System.Web.Security.RolePrincipal>objeto.</xref:System.Web.Security.RolePrincipal> O <xref:System.Web.Security.RolePrincipal.ProviderName%2A>propriedade está definida como o <xref:System.Configuration.Provider.ProviderBase.Name%2A>do fornecedor de funções predefinido.</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Para informações sobre como ativar a gestão de funções, consulte a <xref:System.Web.Security.Roles>classe.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/9eda904c-406a-4e24-aa64-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/9eda904c-406a-4e24-aa64-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade do utilizador para criar o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> para."
    - id: encryptedTicket
      type: System.String
      description: "Uma cadeia que contém informações de função encriptados."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  id: '#ctor(System.String,System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Para instanciar um <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto especificado para <code> identity </code> utilizando especificado <code> providerName </code>."
  remarks: "Esta sobrecarga do construtor RolePrincipal cria uma nova <xref:System.Web.Security.RolePrincipal>de objeto e inicializa os respetivos valores de propriedade.</xref:System.Web.Security.RolePrincipal> O <xref:System.Web.Security.RolePrincipal.ProviderName%2A>propriedade está definida como o valor especificado no `providerName` parâmetro.</xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Para informações sobre como ativar a gestão de funções, consulte a <xref:System.Web.Security.Roles>classe.</xref:System.Web.Security.Roles>"
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);
    parameters:
    - id: providerName
      type: System.String
      description: "O nome do fornecedor de funções para o utilizador."
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade do utilizador para criar o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> para."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>providerName</code> refere-se a um fornecedor de funções que não existe na configuração da aplicação."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.String,System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Para instanciar um <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto especificado para <code> identity </code> utilizando especificado <code> providerName </code> e informações de função da especificado <code> encryptedTicket </code>."
  remarks: "Esta sobrecarga do <xref:System.Web.Security.RolePrincipal.%23ctor%2A>construtor cria uma nova <xref:System.Web.Security.RolePrincipal>de objeto e inicializa os respetivos valores de propriedade.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal.%23ctor%2A> É ler as informações de função para o utilizador atual do fornecido `encryptedTicket` e em cache com o <xref:System.Web.Security.RolePrincipal>objeto.</xref:System.Web.Security.RolePrincipal> O <xref:System.Web.Security.RolePrincipal.ProviderName%2A>propriedade está definida como o valor especificado no `providerName` parâmetro.</xref:System.Web.Security.RolePrincipal.ProviderName%2A>       Para informações sobre como ativar a gestão de funções, consulte a <xref:System.Web.Security.Roles>classe.</xref:System.Web.Security.Roles>"
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: providerName
      type: System.String
      description: "O nome do fornecedor de funções para o utilizador."
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade do utilizador para criar o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> para."
    - id: encryptedTicket
      type: System.String
      description: "Uma cadeia que contém informações de função encriptados."
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>providerName</code> refere-se a um fornecedor de funções que não existe na configuração da aplicação."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  id: CachedListChanged
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a lista de nomes de função colocadas em cache com o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto foi modificado."
  remarks: "Irá devolver a propriedade CachedListChanged `true` depois foram obtidos nomes de função da função predefinida <xref:System.Web.Security.Roles.Provider%2A>e adicionados à cache pelo <xref:System.Web.Security.RolePrincipal.GetRoles%2A>método, ou quando o <xref:System.Web.Security.RolePrincipal.IsInRole%2A>chamadas de método o <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>método do fornecedor de funções predefinido e, em seguida, recebe uma resposta de `true`, resultando num transmitido para o nome da função a <xref:System.Web.Security.RolePrincipal.IsInRole%2A>método que está a ser adicionado à cache.</xref:System.Web.Security.RolePrincipal.IsInRole%2A> </xref:System.Web.Security.RoleProvider.IsUserInRole%2A> </xref:System.Web.Security.RolePrincipal.IsInRole%2A> </xref:System.Web.Security.RolePrincipal.GetRoles%2A> </xref:System.Web.Security.Roles.Provider%2A>       A propriedade CachedListChanged também irá devolver true se <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>está definido como `true` e <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>foi efectuada com êxito, resultando numa nova <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>a ser definida.</xref:System.Web.Security.RolePrincipal.ExpireDate%2A> </xref:System.Web.Security.RolePrincipal.ExpireDate%2A> </xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_6_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public bool CachedListChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista de nomes de função em cache com o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto foi modificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.CachedListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CookiePath
  id: CookiePath
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o caminho para o cookie de nomes de função em cache."
  remarks: "A propriedade CookiePath devolve o valor da `cookiePath` atributo do ficheiro Web. config para a sua aplicação ASP.NET. Para obter mais informações sobre os caminhos de cookie, consulte <xref:System.Web.HttpCookie.Path%2A>.</xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string CookiePath { get; }
    return:
      type: System.String
      description: "O caminho do cookie onde são colocadas em cache nomes de funções. A predefinição é /."
  overload: System.Web.Security.RolePrincipal.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Expired
  id: Expired
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o cookie de funções expirou."
  remarks: "Devolve de propriedade expirado um `Boolean` valor que indica se o cookie de funções expirou baseado no <xref:System.Web.Security.RolePrincipal.ExpireDate%2A>e a data e hora atuais.</xref:System.Web.Security.RolePrincipal.ExpireDate%2A>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_1_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_1_1.aspx)]"
  syntax:
    content: public bool Expired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cookie de funções expirou; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.Expired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ExpireDate
  id: ExpireDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a data e hora quando expira o cookie de funções."
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_11_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_11_1.aspx)]"
  syntax:
    content: public DateTime ExpireDate { get; }
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>quando expira o cookie de funções de valor.</xref:System.DateTime>"
  overload: System.Web.Security.RolePrincipal.ExpireDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Preenche um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto com os dados que são necessários para serializar o objeto de destino utilizando o contexto de transmissão em fluxo especificado."
  remarks: "Para obter mais informações, consulte o <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>método.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto para preencher com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino para esta serialização."
  overload: System.Web.Security.RolePrincipal.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetRoles
  id: GetRoles
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma lista das funções que o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> faz parte."
  remarks: "Se <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>é `true` e nomes de função tem sido colocados em cache para o utilizador representado pelo <xref:System.Web.Security.RolePrincipal>, em seguida, o método GetRoles irá devolver a lista de nomes de função na cache de que o utilizador é membro de.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A> Se não tiverem sido em cache nomes de função, em seguida, o método GetRoles devolve a lista de nomes de função que o utilizador é membro da função predefinida <xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> Apenas os nomes de funções para o atual <xref:System.Web.Security.Roles.ApplicationName%2A>são devolvidos.</xref:System.Web.Security.Roles.ApplicationName%2A> Para determinar se os nomes de função tem sido colocada em cache no <xref:System.Web.Security.RolePrincipal>objeto, verifique o <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>propriedade.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> </xref:System.Web.Security.RolePrincipal>"
  example:
  - "The following code example displays the roles that the logged-on user is a member of.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#7](~/add/codesnippet/csharp/m-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#7](~/add/codesnippet/visualbasic/m-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public string[] GetRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "A lista de funções que o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> faz parte."
  overload: System.Web.Security.RolePrincipal.GetRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "O <xref:System.Web.Security.RolePrincipal.Identity*>propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.RolePrincipal.Identity*>"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Identity
  id: Identity
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a identidade de segurança para o pedido HTTP atual."
  remarks: "A identidade de um <xref:System.Web.Security.RolePrincipal>objeto é definido quando o <xref:System.Web.Security.RolePrincipal>construtor é chamado.</xref:System.Web.Security.RolePrincipal> </xref:System.Web.Security.RolePrincipal>"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_2_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_2_1.aspx)]"
  syntax:
    content: public override System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "A identidade de segurança para o pedido HTTP atual."
  overload: System.Web.Security.RolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o utilizador representado pelo <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> está a ser a função especificada."
  remarks: "Verifica primeiro IsInRole o <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>propriedade para determinar se uma lista de nomes de função para o utilizador atual em cache está disponível.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Se o <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>propriedade é `true`, a lista em cache é verificada para a função especificada.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> Se o método IsInRole localiza a função especificada na lista em cache, devolve `true`.       Se IsInRole não encontrar a função especificada, aquele invoca o <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>método da predefinida <xref:System.Web.Security.Roles.Provider%2A>instância para determinar se o nome de utilizador está associado uma função da origem de dados configurada para <xref:System.Web.Security.Roles.ApplicationName%2A>valor.</xref:System.Web.Security.Roles.ApplicationName%2A> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>"
  example:
  - "The following code example checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles.  \n  \n [!code-vb[System.Web.Security.RolePrincipal#8](~/add/codesnippet/visualbasic/m-system.web.security.ro_6_1.aspx)]\n [!code-cs[System.Web.Security.RolePrincipal#8](~/add/codesnippet/csharp/m-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public override bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "A função para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o utilizador representado pelo <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> está na função especificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.IsInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "O <xref:System.Web.Security.RolePrincipal.Identity*>propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.RolePrincipal.Identity*>"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  id: IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a lista de funções para o utilizador tenha foi colocado em cache num cookie."
  remarks: "Se o `cacheRolesInCookie` atributo no ficheiro Web. config para a aplicação está definida como `true`, em seguida, uma lista de nomes de função para o utilizador atual é escrita um cookie quando é selecionada associação de utilizador numa função específica. A propriedade IsRoleListCached indica se os nomes de função escritos para o cookie. Tenha em atenção que, embora o `cacheRolesInCookie` atributo de configuração pode ser `true`, não devolveu a propriedade IsRoleListCached `true` até depois de informações da função tem sido escritas para o cookie. Se nenhuma função verifica se são efetuados para um utilizador, irá devolver IsRoleListCached `false`."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public bool IsRoleListCached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os nomes de função são colocadas em cache num cookie; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.RolePrincipal.IsRoleListCached*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IssueDate
  id: IssueDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a data e hora em que o cookie de funções foi emitido."
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_7_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_7_1.aspx)]"
  syntax:
    content: public DateTime IssueDate { get; }
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que o cookie de funções foi emitido.</xref:System.DateTime>"
  overload: System.Web.Security.RolePrincipal.IssueDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ProviderName
  id: ProviderName
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o nome do fornecedor de função que armazena e obtém informações de função de utilizador."
  remarks: "A propriedade ProviderName expõe o nome do fornecedor de função que gere as informações de função para o utilizador representado pelo <xref:System.Web.Security.RolePrincipal>objeto.</xref:System.Web.Security.RolePrincipal> Isto permite-lhe aceder a instância específica do fornecedor de funções para um utilizador ao utilizar o <xref:System.Web.Security.Roles.Providers%2A>propriedade o <xref:System.Web.Security.Roles>classe independentemente se o fornecedor é o fornecedor predefinido para a aplicação.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Providers%2A> Por exemplo, pode criar um método que assume um <xref:System.Web.Security.RolePrincipal>como entrada e devolve a lista de funções para o utilizador representado.</xref:System.Web.Security.RolePrincipal> Pode garantir que o fornecedor de função apropriados é utilizado para devolver a lista de funções para o <xref:System.Web.Security.RolePrincipal>ao chamar o <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>método do fornecedor de função a <xref:System.Web.Security.Roles.Providers%2A>coleção é indexada pelo valor da propriedade ProviderName.</xref:System.Web.Security.Roles.Providers%2A> </xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.RolePrincipal>       Para preencher o <xref:System.Web.Security.RolePrincipal>objeto para cada pedido, tem de utilizar um <xref:System.Web.Security.RoleManagerModule.GetRoles>processador de eventos definido no ficheiro global. asax para a aplicação.</xref:System.Web.Security.RoleManagerModule.GetRoles> </xref:System.Web.Security.RolePrincipal>"
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: "O nome do fornecedor de função que armazena e obtém informações de função de utilizador."
  overload: System.Web.Security.RolePrincipal.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.SetDirty
  id: SetDirty
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Marca a lista de função em cache as ter sido alterada."
  remarks: "O método SetDirty marca a lista de função em cache as ter sido alterada através da definição <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>para `true` e <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>para `false`.</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> </xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>"
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.Security.RolePrincipal.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>.</xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.Security.RolePrincipal>instância é convertida para um <xref:System.Runtime.Serialization.ISerializable>interface.</xref:System.Runtime.Serialization.ISerializable> </xref:System.Web.Security.RolePrincipal>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para preencher com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino para esta serialização."
  overload: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  id: ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Devolve as informações de função em cache com o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto encriptados com base no <xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*>"
  remarks: "O valor devolvido pelo método ToEncryptedTicket é armazenado no cookie funções quando <xref:System.Web.Security.Roles.CacheRolesInCookie%2A>é `true`.</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>"
  example:
  - "The following code example writes the results of the ToEncryptedTicket method to the roles cookie.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#6](~/add/codesnippet/csharp/m-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#6](~/add/codesnippet/visualbasic/m-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string ToEncryptedTicket ();
    parameters: []
    return:
      type: System.String
      description: "As informações de função em cache com o <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> objeto encriptados com base no <xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*>"
  overload: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Version
  id: Version
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número de versão do cookie de funções."
  remarks: "Ao incluir um número de versão no cookie de funções, versões futuras do ASP.NET podem modificar o formato do cookie funções e utilize a propriedade de versão para distinguir entre formatos diferentes."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_9_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_9_1.aspx)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "O número de versão do cookie de funções."
  overload: System.Web.Security.RolePrincipal.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: System.Security.Claims.ClaimsPrincipal
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.RolePrincipal.CookiePath
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.GetRoles
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.RolePrincipal.Identity
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
- uid: System.Web.Security.RolePrincipal.Version
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.RolePrincipal.#ctor*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal
  nameWithType: RolePrincipal.RolePrincipal
- uid: System.Web.Security.RolePrincipal.CachedListChanged*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
- uid: System.Web.Security.RolePrincipal.CookiePath*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
- uid: System.Web.Security.RolePrincipal.GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData
  nameWithType: RolePrincipal.GetObjectData
- uid: System.Web.Security.RolePrincipal.GetRoles*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles
  nameWithType: RolePrincipal.GetRoles
- uid: System.Web.Security.RolePrincipal.Identity*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: RolePrincipal.IsInRole
- uid: System.Web.Security.RolePrincipal.IsRoleListCached*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty
  nameWithType: RolePrincipal.SetDirty
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket
  nameWithType: RolePrincipal.ToEncryptedTicket
- uid: System.Web.Security.RolePrincipal.Version*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
