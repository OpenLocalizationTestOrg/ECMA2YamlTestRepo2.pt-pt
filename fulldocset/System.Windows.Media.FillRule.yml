### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.FillRule
  id: FillRule
  children:
  - System.Windows.Media.FillRule.EvenOdd
  - System.Windows.Media.FillRule.Nonzero
  langs:
  - csharp
  name: FillRule
  nameWithType: FillRule
  fullName: System.Windows.Media.FillRule
  type: Enum
  summary: "Specifies how the intersecting areas of <xref href=&quot;System.Windows.Media.PathFigure&quot;></xref> objects contained in a <xref href=&quot;System.Windows.Media.Geometry&quot;></xref> are combined to form the area of the <xref href=&quot;System.Windows.Media.Geometry&quot;></xref>."
  syntax:
    content: public enum FillRule
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Windows.Media.FillRule.EvenOdd
  id: EvenOdd
  parent: System.Windows.Media.FillRule
  langs:
  - csharp
  name: EvenOdd
  nameWithType: FillRule.EvenOdd
  fullName: System.Windows.Media.FillRule.EvenOdd
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Rule that determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction and counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is inside; if even, the point is outside."
  syntax:
    content: EvenOdd
    return:
      type: System.Windows.Media.FillRule
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.FillRule.Nonzero
  id: Nonzero
  parent: System.Windows.Media.FillRule
  langs:
  - csharp
  name: Nonzero
  nameWithType: FillRule.Nonzero
  fullName: System.Windows.Media.FillRule.Nonzero
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Rule that determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left. After counting the crossings, if the result is zero then the point is outside the path. Otherwise, it is inside."
  syntax:
    content: Nonzero
    return:
      type: System.Windows.Media.FillRule
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Windows.Media.FillRule.EvenOdd
  parent: System.Windows.Media.FillRule
  isExternal: false
  name: EvenOdd
  nameWithType: FillRule.EvenOdd
  fullName: System.Windows.Media.FillRule.EvenOdd
- uid: System.Windows.Media.FillRule
  parent: System.Windows.Media
  isExternal: false
  name: FillRule
  nameWithType: FillRule
  fullName: System.Windows.Media.FillRule
- uid: System.Windows.Media.FillRule.Nonzero
  parent: System.Windows.Media.FillRule
  isExternal: false
  name: Nonzero
  nameWithType: FillRule.Nonzero
  fullName: System.Windows.Media.FillRule.Nonzero
