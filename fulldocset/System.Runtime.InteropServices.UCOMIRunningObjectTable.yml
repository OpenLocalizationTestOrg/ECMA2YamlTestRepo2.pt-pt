### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable
  id: UCOMIRunningObjectTable
  children:
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)
  - System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)
  langs:
  - csharp
  name: UCOMIRunningObjectTable
  nameWithType: UCOMIRunningObjectTable
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable
  type: Interface
  summary: "Use &lt;xref:System.Runtime.InteropServices.ComTypes.IRunningObjectTable?displayProperty=fullName&gt; instead."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable` in the com subfolder of the MSDN library."
  syntax:
    content: >-
      [System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IRunningObjectTable instead. http://go.microsoft.com/fwlink/?linkid=14202", false)]

      [System.Runtime.InteropServices.Guid("00000010-0000-0000-C000-000000000046")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface UCOMIRunningObjectTable
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)
  id: EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: EnumRunning(UCOMIEnumMoniker)
  nameWithType: UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Enumerates the objects currently registered as running."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::EnumRunning` in the MSDN library."
  syntax:
    content: public void EnumRunning (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);
    parameters:
    - id: ppenumMoniker
      type: System.Runtime.InteropServices.UCOMIEnumMoniker
      description: "On successful return, the new enumerator for the ROT."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)
  id: GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: GetObject(UCOMIMoniker,Object)
  nameWithType: UCOMIRunningObjectTable.GetObject(UCOMIMoniker,Object)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(UCOMIMoniker,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Returns the registered object if the supplied object name is registered as running."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::GetObject` in the MSDN library."
  syntax:
    content: public void GetObject (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out object ppunkObject);
    parameters:
    - id: pmkObjectName
      type: System.Runtime.InteropServices.UCOMIMoniker
      description: "Reference to the moniker to search for in the ROT."
    - id: ppunkObject
      type: System.Object
      description: "On successful return, contains the requested running object."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)
  id: GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: GetTimeOfLastChange(UCOMIMoniker,FILETIME)
  nameWithType: UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker,FILETIME)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker,FILETIME)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Searches for this moniker in the ROT and reports the recorded time of change, if present."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::GetTimeOfLastChange` in the MSDN library."
  syntax:
    content: public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out System.Runtime.InteropServices.FILETIME pfiletime);
    parameters:
    - id: pmkObjectName
      type: System.Runtime.InteropServices.UCOMIMoniker
      description: "Reference to the moniker to search for in the ROT."
    - id: pfiletime
      type: System.Runtime.InteropServices.FILETIME
      description: "On successful return, contains the objects last change time."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)
  id: IsRunning(System.Runtime.InteropServices.UCOMIMoniker)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: IsRunning(UCOMIMoniker)
  nameWithType: UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Determines if the specified moniker is currently registered in the Running Object Table."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::IsRunning` in the MSDN library."
  syntax:
    content: public void IsRunning (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName);
    parameters:
    - id: pmkObjectName
      type: System.Runtime.InteropServices.UCOMIMoniker
      description: "Reference to the moniker to search for in the Running Object Table."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)
  id: NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: NoteChangeTime(Int32,FILETIME)
  nameWithType: UCOMIRunningObjectTable.NoteChangeTime(Int32,FILETIME)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(Int32,FILETIME)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Makes a note of the time that a particular object has changed so <xref uid=&quot;langword_csharp_IMoniker::GetTimeOfLastChange&quot; name=&quot;IMoniker::GetTimeOfLastChange&quot; href=&quot;&quot;></xref> can report an appropriate change time."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::NoteChangeTime` in the MSDN library."
  syntax:
    content: public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.FILETIME pfiletime);
    parameters:
    - id: dwRegister
      type: System.Int32
      description: "The ROT entry of the changed object."
    - id: pfiletime
      type: System.Runtime.InteropServices.FILETIME
      description: "Reference to the object&quot;s last change time."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)
  id: Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: Register(Int32,Object,UCOMIMoniker,Int32)
  nameWithType: UCOMIRunningObjectTable.Register(Int32,Object,UCOMIMoniker,Int32)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(Int32,Object,UCOMIMoniker,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Registers that the supplied object has entered the running state."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::Register` in the MSDN library."
  syntax:
    content: public void Register (int grfFlags, object punkObject, System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out int pdwRegister);
    parameters:
    - id: grfFlags
      type: System.Int32
      description: "Specifies whether the Running Object Table&quot;s (ROT) reference to `punkObject` is weak or strong, and controls access to the object through its entry in the ROT."
    - id: punkObject
      type: System.Object
      description: "Reference to the object being registered as running."
    - id: pmkObjectName
      type: System.Runtime.InteropServices.UCOMIMoniker
      description: "Reference to the moniker that identifies `punkObject`."
    - id: pdwRegister
      type: System.Int32
      description: "Reference to a 32-bit value that can be used to identify this ROT entry in subsequent calls to <xref:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke*> or <xref:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime*>."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)
  id: Revoke(System.Int32)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  langs:
  - csharp
  name: Revoke(Int32)
  nameWithType: UCOMIRunningObjectTable.Revoke(Int32)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Unregisters the specified object from the ROT."
  remarks: "For more information, please see the existing documentation for `IRunningObjectTable::Revoke` in the MSDN library."
  syntax:
    content: public void Revoke (int dwRegister);
    parameters:
    - id: dwRegister
      type: System.Int32
      description: "The ROT entry to revoke."
  overload: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: EnumRunning(UCOMIEnumMoniker)
  nameWithType: UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(UCOMIEnumMoniker)
- uid: System.Runtime.InteropServices.UCOMIEnumMoniker
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UCOMIEnumMoniker
  nameWithType: UCOMIEnumMoniker
  fullName: System.Runtime.InteropServices.UCOMIEnumMoniker
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: GetObject(UCOMIMoniker,Object)
  nameWithType: UCOMIRunningObjectTable.GetObject(UCOMIMoniker,Object)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(UCOMIMoniker,Object)
- uid: System.Runtime.InteropServices.UCOMIMoniker
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UCOMIMoniker
  nameWithType: UCOMIMoniker
  fullName: System.Runtime.InteropServices.UCOMIMoniker
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: GetTimeOfLastChange(UCOMIMoniker,FILETIME)
  nameWithType: UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker,FILETIME)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(UCOMIMoniker,FILETIME)
- uid: System.Runtime.InteropServices.FILETIME
  parent: System.Runtime.InteropServices
  isExternal: false
  name: FILETIME
  nameWithType: FILETIME
  fullName: System.Runtime.InteropServices.FILETIME
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: IsRunning(UCOMIMoniker)
  nameWithType: UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(UCOMIMoniker)
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: NoteChangeTime(Int32,FILETIME)
  nameWithType: UCOMIRunningObjectTable.NoteChangeTime(Int32,FILETIME)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(Int32,FILETIME)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: Register(Int32,Object,UCOMIMoniker,Int32)
  nameWithType: UCOMIRunningObjectTable.Register(Int32,Object,UCOMIMoniker,Int32)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(Int32,Object,UCOMIMoniker,Int32)
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: Revoke(Int32)
  nameWithType: UCOMIRunningObjectTable.Revoke(Int32)
  fullName: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(Int32)
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: EnumRunning
  nameWithType: UCOMIRunningObjectTable.EnumRunning
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: GetObject
  nameWithType: UCOMIRunningObjectTable.GetObject
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: GetTimeOfLastChange
  nameWithType: UCOMIRunningObjectTable.GetTimeOfLastChange
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: IsRunning
  nameWithType: UCOMIRunningObjectTable.IsRunning
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: NoteChangeTime
  nameWithType: UCOMIRunningObjectTable.NoteChangeTime
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Register*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: Register
  nameWithType: UCOMIRunningObjectTable.Register
- uid: System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke*
  parent: System.Runtime.InteropServices.UCOMIRunningObjectTable
  isExternal: false
  name: Revoke
  nameWithType: UCOMIRunningObjectTable.Revoke
