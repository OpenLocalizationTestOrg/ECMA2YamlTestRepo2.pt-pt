### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Fornece um fluxo utilizado para comunicação cliente-servidor, que utiliza o protocolo de segurança de Secure Socket Layer (SSL) para autenticar o servidor e, opcionalmente, o cliente."
  remarks: "Protocolos SSL ajudá-lo para fornecer confidencialidade e a verificar mensagens transmitidas através de um SslStream de integridade. Deve ser utilizada uma ligação SSL, tal como a fornecida por SslStream, ao comunicar informações confidenciais entre um cliente e um servidor. Utilizar um SslStream ajuda a impedir que qualquer pessoa de leitura e a adulteração de informações enquanto esta se encontra em trânsito na rede.       Uma instância de SslStream transmite dados através de um fluxo que forneceu ao criar o SslStream. Ao fornecer este fluxo subjacente, tem a opção para especificar se fechar o SslStream também fecha o fluxo subjacente. Normalmente, a classe de SslStream é utilizada com o <xref:System.Net.Sockets.TcpClient>e <xref:System.Net.Sockets.TcpListener>classes.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> O <xref:System.Net.Sockets.TcpClient.GetStream%2A>método fornece um <xref:System.Net.Sockets.NetworkStream>adequado para utilização com a classe SslStream.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Depois de criar um SslStream, o servidor e, opcionalmente, o cliente tem de ser autenticados. O servidor tem de fornecer um X509 certificado que estabelece uma prova da respetiva identidade e pode pedir que o cliente também fazê-lo. Antes de os transmitir informações utilizando um SslStream, a autenticação tem de ser executada. Os clientes iniciam a autenticação utilizando o síncrona <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>métodos, que bloquear até concluir a autenticação, ou o assíncrona <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>métodos, que não bloqueiam a aguardar a autenticação concluir.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servidores de iniciar a autenticação utilizando o síncrona <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>ou assíncrona <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> O cliente e o servidor tem de iniciar a autenticação.       A autenticação é processada pelo fornecedor de canal de fornecedor de suporte de segurança (SSPI). O cliente recebe uma oportunidade para controlar a validação do certificado do servidor especificando um <xref:System.Net.Security.RemoteCertificateValidationCallback>Delegar ao criar um SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> O servidor também pode controlar a validação, fornecendo um <xref:System.Net.Security.RemoteCertificateValidationCallback>Delegar.</xref:System.Net.Security.RemoteCertificateValidationCallback> O método referenciado pelo delegado do inclui o certificado a parte remota e quaisquer erros de SSPI encontrado ao validar o certificado. Tenha em atenção que, se o servidor Especifica um delegado, o método de delegado é invocado independentemente se o servidor solicitou a autenticação de cliente. Se o servidor não pediu a autenticação de cliente, o método de delegado do servidor recebe um certificado nulo e uma matriz vazia de erros de certificado.       Se o servidor requer autenticação de cliente, o cliente tem de especificar um ou mais certificados para autenticação. Se o cliente tiver mais de um certificado, o cliente pode fornecer um <xref:System.Net.Security.LocalCertificateSelectionCallback>delegado para selecionar o certificado correto para o servidor.</xref:System.Net.Security.LocalCertificateSelectionCallback> Certificados do cliente tem de estar localizados no &quot;My&quot; arquivo de certificados do utilizador atual. Autenticação de cliente através de certificados não é suportada para o <xref:System.Security.Authentication.SslProtocols>protocolo (SSL versão 2).</xref:System.Security.Authentication.SslProtocols>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>, e o SslStream já não é utilizável.</xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector.       Quando o processo de autenticação, também conhecido como o handshake SSL, for bem sucedida, é estabelecida a identidade do servidor (e, opcionalmente, o cliente) e o SslStream pode ser utilizado pelo cliente e o servidor para trocar mensagens. Antes de enviar ou receber informações, o cliente e o servidor devem consultar os serviços de segurança e níveis fornecidas pelo SslStream para determinar se o protocolo, algoritmos e força da codificação selecionada cumpre os requisitos da integridade e confidencialidade. Se as definições atuais não forem suficientes, o fluxo deve ser fechado. Pode verificar os serviços de segurança fornecidos através da utilização de SslStream o <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> A tabela seguinte mostra os elementos de comunicam as definições de criptografia utilizadas para autenticação, encriptação e assinatura de dados.      | Elemento | Os membros |   |-------------|-------------|   | O protocolo de segurança utilizado para autenticar o servidor e, opcionalmente, o cliente. | A propriedade <xref:System.Net.Security.SslStream.SslProtocol%2A>e a enumeração de <xref:System.Security.Authentication.SslProtocols>associado. |   | O algoritmo de troca de chaves. | A propriedade <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>e a enumeração de <xref:System.Security.Authentication.ExchangeAlgorithmType>associado. |   | O algoritmo de integridade de mensagem. | A propriedade <xref:System.Net.Security.SslStream.HashAlgorithm%2A>e a enumeração de <xref:System.Security.Authentication.HashAlgorithmType>associado. |   | O algoritmo de confidencialidade de mensagens. | A propriedade <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>e a enumeração de <xref:System.Security.Authentication.CipherAlgorithmType>associado. |   | A força da codificação dos algoritmos de selecionado. | O <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> <xref:System.Net.Security.SslStream.HashStrength%2A>e as propriedades de <xref:System.Net.Security.SslStream.CipherStrength%2A>. |       Após uma autenticação com êxito, pode enviar dados utilizando o síncrona <xref:System.Net.Security.SslStream.Write%2A>ou assíncrona <xref:System.Net.Security.SslStream.BeginWrite%2A>métodos.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> Pode receber dados através de síncrona <xref:System.Net.Security.SslStream.Read%2A>ou assíncrona <xref:System.Net.Security.SslStream.BeginRead%2A>métodos.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Se tiver especificado para o <xref:System.Net.Security.SslStream.%23ctor%2A>que o fluxo subjacente deve ser deixado aberto, é responsáveis por fechar esse fluxo quando tiver terminado utilizando-o.</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Se a aplicação que cria o objeto de SslStream é executada com as credenciais de um utilizador Normal, a aplicação não será capaz de aceder a certificados instalados no arquivo do computador local, a menos que a permissão foi explicitamente fornecida para o utilizador fazê-lo.       SslStream parte do princípio de que um tempo limite, juntamente com quaisquer outros <xref:System.IO.IOException>Quando uma é emitida do fluxo interno será tratada como fatal pelo respetivo autor da chamada.</xref:System.IO.IOException> Reutilizar uma instância de SslStream após um tempo limite irá devolver a libertação da memória. Uma aplicação deve <xref:System.IO.Stream.Close%2A>o SslStream e acione uma excepção nestes casos.</xref:System.IO.Stream.Close%2A>       O .NET Framework 4.6 inclui uma nova funcionalidade de segurança que impede os algoritmos para ligações de hash e de cifras inseguras. As aplicações a utilizar o TLS/SSL através de APIs como HttpClient HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. e direcionada para o .NET Framework 4.6 obter o comportamento mais seguras por predefinição.       Os programadores podem querer par excluir este comportamento para manter a interoperabilidade com os seus serviços SSL3 existentes ou TLS com serviços RC4. [Este artigo](https://support.microsoft.com/kb/3069494) explica como modificar o código de modo a que o novo comportamento estiver desativado.       O .NET Framework 4.6.3 adiciona as sobrecargas da nova para os métodos de autenticação SslStreams que não especifique uma versão do TLS, mas em vez disso, utilize a versão do TLS definida como a predefinição de sistema no [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Utilizar estes métodos na sua aplicação como uma forma de conseguir mais tarde modificar as predefinições como TLS versão melhor prática alterações ao longo do tempo, sem ser necessário reconstruir e voltar a implementar a aplicação."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizando o <xref:System.IO.Stream>.</xref:System.IO.Stream> especificado"
  remarks: "Se não for especificado um valor no ficheiro de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>assume a predefinição <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para o <xref:System.Net.Security.SslStream>instância é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A utilização de cifras Null é necessária quando a política de encriptação está definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>Não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual ao <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizando especificado <xref:System.IO.Stream>e comportamento de fecho de sequência.</xref:System.IO.Stream>"
  remarks: "Quando especificar `true` para o `leaveStreamOpen` parâmetro, a fechar o <xref:System.Net.Security.SslStream>não tem qualquer efeito `innerStream` transmitir; tem de fechar explicitamente `innerStream` quando já não necessita de mesmo.</xref:System.Net.Security.SslStream>       Se não for especificado um valor no ficheiro de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>assume a predefinição <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para o <xref:System.Net.Security.SslStream>instância é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A utilização de cifras Null é necessária quando a política de encriptação está definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booleano que indica o comportamento de fecho do <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Este parâmetro indica se o fluxo interno é deixado aberto."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>Não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual ao <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizando especificado <xref:System.IO.Stream>, o comportamento de fecho de sequência e delegado de validação de certificado.</xref:System.IO.Stream>"
  remarks: "Quando especificar `true` para o `leaveStreamOpen` parâmetro, a fechar o <xref:System.Net.Security.SslStream>não tem qualquer efeito `innerStream` transmitir; tem de fechar explicitamente `innerStream` quando já não necessita de mesmo.</xref:System.Net.Security.SslStream>       O `userCertificateValidationCallback` do delegado `certificateErrors` argumento contém quaisquer códigos de erro do Windows devolvidos por canal de Interface de fornecedor de suporte de segurança (SSPI). O valor devolvido do método invocado pelo `userCertificateValidationCallback` delegado determina se a autenticação for bem sucedida.       O protocolo de segurança e os algoritmos criptográficos são já selecionada quando o `userCertificateValidationCallback` método do delegado é invocado. Pode utilizar o método para determinar se os algoritmos criptográficos selecionados e força da codificação é suficientes para a sua aplicação. Se não, o método deverá devolver `false` para impedir o <xref:System.Net.Security.SslStream>de que está a ser criada.</xref:System.Net.Security.SslStream>       Se não for especificado um valor no ficheiro de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>assume a predefinição <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para o <xref:System.Net.Security.SslStream>instância é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A utilização de cifras Null é necessária quando a política de encriptação está definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > O Framework coloca em cache sessões SSL como são criados e tenta reutilizar uma sessão em cache para um novo pedido, se possível. Durante a tentativa de reutilizar uma sessão SSL, o Framework utiliza o primeiro elemento da <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(se houver um), ou tentar reutilizar um sessões anónimos se <xref:System.Net.HttpWebRequest.ClientCertificates%2A>está vazia.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Certificados de cliente não são suportados no versão 2 do protocolo SSL."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booleano que indica o comportamento de fecho do <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Este parâmetro indica se o fluxo interno é deixado aberto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegado responsável por validar o certificado fornecido pela parte remota."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>Não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual ao <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizando especificado <xref:System.IO.Stream>, transmitir o comportamento de fecho, delegado de validação de certificado e o delegado de seleção de certificado.</xref:System.IO.Stream>"
  remarks: "Quando especificar `true` para o `leaveStreamOpen` parâmetro, a fechar o <xref:System.Net.Security.SslStream>não tem qualquer efeito `innerStream` transmitir; tem de fechar explicitamente `innerStream` quando já não necessita de mesmo.</xref:System.Net.Security.SslStream>       O `userCertificateValidationCallback` do delegado `certificateErrors` argumento contém quaisquer códigos de erro do Windows devolvidos por canal de Interface de fornecedor de suporte de segurança (SSPI). O valor devolvido do método invocado pelo `userCertificateValidationCallback` delegado determina se a autenticação for bem sucedida.       O protocolo de segurança e os algoritmos criptográficos são já selecionada quando o `userCertificateValidationCallback` método do delegado é invocado. Pode utilizar o método para determinar se os algoritmos criptográficos selecionados e força da codificação é suficientes para a sua aplicação. Se não, o método deverá devolver `false` para impedir o <xref:System.Net.Security.SslStream>de que está a ser criada.</xref:System.Net.Security.SslStream>       O `userCertificateSelectionCallback` delegado é útil quando a aplicação tiver vários certificados e tem de escolher dinamicamente um certificado. Certificados no arquivo &quot;MY&quot; são transmitidos para o método invocado pelo delegado do.       Se não for especificado um valor no ficheiro de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>assume a predefinição <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para o <xref:System.Net.Security.SslStream>instância é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A utilização de cifras Null é necessária quando a política de encriptação está definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > O Framework coloca em cache sessões SSL como são criados e tenta reutilizar uma sessão em cache para um novo pedido, se possível. Durante a tentativa de reutilizar uma sessão SSL, o Framework utiliza o primeiro elemento da P:System.Net.HttpWebRequest.ClientCertificates (caso exista um) ou tenta reutilizar um sessões anónimos se P:System.Net.HttpWebRequest.ClientCertificates está vazio."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booleano que indica o comportamento de fecho do <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Este parâmetro indica se o fluxo interno é deixado aberto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegado responsável por validar o certificado fornecido pela parte remota."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegado responsável para selecionar o certificado utilizado para autenticação."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>Não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual ao <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizando especificado<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "A utilização da cifra nulo não é necessária quando a `encryptionPolicy` parâmetro está definido como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booleano que indica o comportamento de fecho do <xref:System.IO.Stream>objeto utilizado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Este parâmetro indica se o fluxo interno é deixado aberto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegado responsável por validar o certificado fornecido pela parte remota."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegado responsável para selecionar o certificado utilizado para autenticação."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>Não é legível.       - ou - <code>innerStream</code> não é gravável.       - ou - <code>encryptionPolicy</code> não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual ao <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente numa ligação de cliente-servidor."
  remarks: "Este método é autenticado utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Não existem certificados de cliente são utilizados na autenticação. A lista de revogação de certificados não está selecionada durante a autenticação. O valor especificado para `targetHost` tem de corresponder ao nome no certificado do servidor.       Quando autenticação for bem sucedida, tem de verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar que serviços de segurança são utilizados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se a autenticação mútua ocorreu.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que partilha esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de servidor utilizando esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente numa ligação de cliente-servidor. O processo de autenticação utiliza o protocolo SSL e coleção de certificados especificado."
  remarks: "Quando autenticação for bem sucedida, tem de verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar que serviços de segurança são utilizados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se a autenticação mútua ocorreu.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector.      > [!NOTE] > Certificados de cliente não são suportados no versão 2 do protocolo SSL."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que irão partilhar este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que contém certificados de cliente."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se a lista de revogação de certificados é verificada durante a autenticação.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente de uma ligação de cliente-servidor como uma operação assíncrona."
  remarks: "Este método é autenticado utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Não existem certificados de cliente são utilizados na autenticação. A lista de revogação de certificados não está selecionada durante a autenticação. O valor especificado para `targetHost` tem de corresponder ao nome no certificado do servidor.       Quando autenticação for bem sucedida, tem de verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar que serviços de segurança são utilizados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se a autenticação mútua ocorreu.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que partilha esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Devolve <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de servidor utilizando esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente de uma ligação de cliente-servidor como uma operação assíncrona. O processo de autenticação utiliza o protocolo SSL e coleção de certificados especificado."
  remarks: "Quando autenticação for bem sucedida, tem de verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar que serviços de segurança são utilizados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se a autenticação mútua ocorreu.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector.      > [!NOTE] > Certificados de cliente não são suportados no versão 2 do protocolo SSL."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que irão partilhar este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que contém certificados de cliente."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se a lista de revogação de certificados é verificada durante a autenticação.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Devolve <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente de uma ligação de cliente-servidor utilizando o certificado especificado."
  remarks: "Este método é autenticado utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> A lista de revogação de certificados não está selecionada durante a autenticação. O cliente não é necessário fornecer um certificado para autenticação.       Este método bloqueia enquanto a operação for concluída. Para evitar bloquear enquanto a operação for concluída, utilize um do <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>sobrecargas do método.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado utilizado para autenticar o servidor."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de cliente utilizando este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.AuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente de uma ligação de cliente-servidor utilizando os certificados especificados, requisitos e protocolo de segurança."
  remarks: "Este método bloqueia enquanto a operação for concluída. Para evitar bloquear enquanto a operação for concluída, utilize um do <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>sobrecargas do método.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado X509 utilizado para autenticar o servidor."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o cliente é pedido um certificado para autenticação.</xref:System.Boolean> Tenha em atenção que se trata de apenas um pedido de – se nenhum certificado for fornecido, o servidor ainda aceita o pedido de ligação."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se a lista de revogação de certificados é verificada durante a autenticação.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>Não é um <xref:System.Security.Authentication.SslProtocols> valor."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de cliente utilizando este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.AuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente de uma ligação de cliente-servidor utilizando o certificado especificado como uma operação assíncrona."
  remarks: "Este método é autenticado utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> A lista de revogação de certificados não está selecionada durante a autenticação. O cliente não é necessário fornecer um certificado para autenticação.       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado utilizado para autenticar o servidor."
    return:
      type: System.Threading.Tasks.Task
      description: "Devolve <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de cliente utilizando este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente de uma ligação de cliente-servidor utilizando os certificados especificados, requisitos e protocolo de segurança como uma operação assíncrona."
  remarks: "Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado X509 utilizado para autenticar o servidor."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o cliente é pedido um certificado para autenticação.</xref:System.Boolean> Tenha em atenção que se trata de apenas um pedido de – se nenhum certificado for fornecido, o servidor ainda aceita o pedido de ligação."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se a lista de revogação de certificados é verificada durante a autenticação.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Devolve <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para iniciar uma operação assíncrona para autenticar o servidor e, opcionalmente, o cliente."
  remarks: "Este método é autenticado utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Não existem certificados de cliente são utilizados na autenticação. A lista de revogação de certificados não está selecionada durante a autenticação.       O valor especificado para `targetHost` tem de corresponder ao nome no certificado do servidor.       A operação assíncrona de autenticação têm de ser concluída ao chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalmente, o método é invocado pelo `asyncCallback` delegar.       Este método não bloqueia enquanto a operação for concluída. Para bloquear enquanto a operação for concluída, utilize um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>sobrecargas do método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para obter informações detalhadas sobre como utilizar o modelo de programação assíncrono, consulte [chamada síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md) se receber um <xref:System.Security.Authentication.AuthenticationException>, este <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que partilha esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a autenticação for concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de servidor utilizando esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para iniciar uma operação assíncrona para autenticar o servidor e, opcionalmente, o cliente utilizando o protocolo de segurança e certificados especificados."
  remarks: "O valor especificado para `targetHost` tem de corresponder ao nome no certificado do servidor.       A operação assíncrona de autenticação têm de ser concluída ao chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalmente, o método é invocado pelo `asyncCallback` delegar.       Este método não bloqueia enquanto a operação for concluída. Para bloquear enquanto a operação for concluída, utilize um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>sobrecargas do método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para obter informações detalhadas sobre como utilizar o modelo de programação assíncrono, consulte [chamada síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md) se receber um <xref:System.Security.Authentication.AuthenticationException>, este <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector.      > [!NOTE] > Certificados de cliente não são suportados no versão 2 do protocolo SSL."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que partilha esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que contém os certificados de cliente."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se a lista de revogação de certificados é verificada durante a autenticação.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a autenticação for concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>Não é um <xref:System.Security.Authentication.SslProtocols> valor."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de servidor utilizando esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para iniciar uma operação assíncrona para autenticar o cliente e, opcionalmente, o servidor de uma ligação de cliente-servidor."
  remarks: "Este método é autenticado utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> A lista de revogação de certificados não está selecionada durante a autenticação. O cliente não é necessário fornecer um certificado para autenticação.       A operação assíncrona de autenticação têm de ser concluída ao chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalmente, o método é invocado pelo `asyncCallback` delegar.       Este método não bloqueia enquanto a operação for concluída. Para bloquear enquanto a operação for concluída, utilize um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>sobrecargas do método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para obter informações detalhadas sobre como utilizar o modelo de programação assíncrono, consulte [chamada síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md) se receber um <xref:System.Security.Authentication.AuthenticationException>, este <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado X509 utilizado para autenticar o servidor."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a autenticação for concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de cliente utilizando este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para iniciar uma operação assíncrona para autenticar o servidor e, opcionalmente, o cliente utilizando os certificados especificados, requisitos e protocolo de segurança."
  remarks: "A operação assíncrona de autenticação têm de ser concluída ao chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Normalmente, o método é invocado pelo `asyncCallback` delegar.       Este método não bloqueia enquanto a operação for concluída. Para bloquear enquanto a operação for concluída, utilize um do <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>sobrecargas do método.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Para obter informações detalhadas sobre como utilizar o modelo de programação assíncrono, consulte [chamada síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md) se receber um <xref:System.Security.Authentication.AuthenticationException>, este <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado X509 utilizado para autenticar o servidor."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o cliente é pedido um certificado para autenticação.</xref:System.Boolean> Tenha em atenção que se trata de apenas um pedido de – se nenhum certificado for fornecido, o servidor ainda aceita o pedido de ligação."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se a lista de revogação de certificados é verificada durante a autenticação.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a autenticação for concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>Não é um <xref:System.Security.Authentication.SslProtocols> valor."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já tiver ocorrido.       - ou - autenticação de servidor utilizando esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentou anteriormente.       - ou - autenticação já está em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Começa uma operação de leitura assíncrona que lê dados a partir do fluxo e armazena-os na matriz especificada."
  remarks: "Se a encriptação e ou assinatura estiverem ativada, a operação de leitura lê os dados a partir do fluxo subjacente, verifica a integridade dos dados e/ou desencripta a mesma. A operação de leitura assíncrona têm de ser concluída por chamar a <xref:System.Net.Security.SslStream.EndRead%2A>método.</xref:System.Net.Security.SslStream.EndRead%2A> Normalmente, o método é invocado pelo `asyncCallback` delegar.       Este método não bloqueia enquanto a operação for concluída. Para bloquear enquanto a operação for concluída, utilize o <xref:System.Net.Security.SslStream.Read%2A>método.</xref:System.Net.Security.SslStream.Read%2A>       Para obter informações detalhadas sobre como utilizar o modelo de programação assíncrono, consulte [chamar síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md) o <xref:System.Net.Security.SslStream>classe não suporta operações de leitura em simultâneo vários.</xref:System.Net.Security.SslStream>       Não é possível chamar este método até ter de ser autenticadas com êxito. Para autenticar a chamada de um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que recebe os bytes lido do fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A localização com base em zero no `buffer` no qual pretende começar a armazenar os dados lida esta sequência."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a ler do fluxo."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a operação de leitura está concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação de leitura. Este objeto é passado para o `asyncCallback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Falha na operação de leitura.       - ou - a encriptação está em utilização, mas não foi possível desencriptar os dados."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já está em curso uma operação de leitura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Começa uma operação de escrita assíncrona que escreve <xref:System.Byte>s da memória intermédia especificada no fluxo.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que fornece os bytes para escrita no fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A localização com base em zero no `buffer` no qual pretende começar a ler bytes a escrever no fluxo."
    - id: count
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número de bytes a ler a partir do `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a operação de escrita está concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação de escrita. Este objeto é passado para o `asyncCallback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o estado da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de escrita falhou."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já está em curso uma operação de escrita."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente é legível.</xref:System.Boolean>"
  remarks: "Se tiver ocorrido uma autenticação com êxito, esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.CanRead%2A>no fluxo subjacente.</xref:System.IO.Stream.CanRead%2A>       O fluxo subjacente é especificado ao criar uma instância de <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tiver ocorrido uma autenticação e o fluxo subjacente é legível; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente é pesquisável.</xref:System.Boolean>"
  remarks: "Não tente definir a posição do <xref:System.Net.Security.SslStream>objeto ou o fluxo subjacente.</xref:System.Net.Security.SslStream>       O fluxo subjacente é especificado ao criar uma instância de <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Esta propriedade devolve sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente suporta tempos limite.</xref:System.Boolean>"
  remarks: "Esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.CanTimeout%2A>no fluxo subjacente.</xref:System.IO.Stream.CanTimeout%2A>       O fluxo subjacente é especificado ao criar uma instância de <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo subjacente suporta tempos limite; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente é gravável.</xref:System.Boolean>"
  remarks: "Se tiver ocorrido uma autenticação com êxito, esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.CanWrite%2A>no fluxo subjacente.</xref:System.IO.Stream.CanWrite%2A>       O fluxo subjacente é especificado ao criar uma instância de <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tiver ocorrido uma autenticação e o fluxo subjacente é gravável; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se a lista de revogação de certificados está selecionada durante o processo de validação de certificados.</xref:System.Boolean>"
  remarks: "A lista de revogação de certificado contém certificados que foram revogados pelo emissor. A verificar a lista negativamente tem impacto no desempenho, mas melhora a segurança da aplicação."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista de revogação de certificados é verificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifica o algoritmo de encriptação em massa utilizado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Um valor de <xref:System.Security.Authentication.CipherAlgorithmType>é necessária para a propriedade CipherAlgorithm quando o <xref:System.Net.Security.EncryptionPolicy>valor de enumeração é utilizado para construir uma <xref:System.Net.Security.SslStream>instância.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]e [!INCLUDE[winxp](~/add/includes/winxp-md.md)] não suportam o <xref:System.Security.Authentication.CipherAlgorithmType>valor.</xref:System.Security.Authentication.CipherAlgorithmType> Por isso, mesmo quando o <xref:System.Security.Authentication.CipherAlgorithmType>valor é utilizado para construir a <xref:System.Net.Security.SslStream>instância, a <xref:System.Net.Security.EncryptionPolicy>propriedade será <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> O <xref:System.Security.Authentication.CipherAlgorithmType>só é devolvido o valor no Windows Vista e versões posteriores.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "A <xref:System.Security.Authentication.CipherAlgorithmType>valor.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade CipherAlgorithm foi acedida antes de concluir o processo de autenticação ou o processo de autenticação falha."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifique à força do algoritmo cifras utilizado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "O valor desta propriedade é zero até que a autenticação ocorre.       Esta propriedade devolve um dos seguintes valores: - 0 - 40-56-80 128-168-192 - 256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica à força do algoritmo, em bits.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público `Dispose()`método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.Net.Security.SslStream>referências.</xref:System.Net.Security.SslStream> Este método invoca o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de autenticação de servidor assíncronas pendentes foi iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Se não tiver sido concluída a operação, este método bloqueia até que o faz. Quando a autenticação é concluída com êxito, tem de verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar que serviços de segurança são utilizados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se a autenticação mútua ocorreu.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector.       Para executar esta operação de forma síncrona, utilize um do <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Uma <xref:System.IAsyncResult>instância devolvida por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há nenhuma autenticação de servidor pendente para concluir."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de autenticação de cliente assíncronas pendentes foi iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Se não tiver sido concluída a operação, este método bloqueia até que o faz. Quando a autenticação é concluída com êxito, tem de verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar que serviços de segurança são utilizados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se a autenticação mútua ocorreu.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se falhar a autenticação, receberá um <xref:System.Security.Authentication.AuthenticationException>e isto <xref:System.Net.Security.SslStream>já não é utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Deve fechar este objeto e remova todas as referências à mesma, para que podem ser recolhido pelo garbage collector.       Para executar esta operação de forma síncrona, utilize um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Uma <xref:System.IAsyncResult>instância devolvida por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falhou e à esquerda deste objeto num Estado não utilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há nenhuma autenticação de cliente pendente para concluir."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de leitura assíncrona foi iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*>"
  remarks: "Se não tiver sido concluída a operação, este método bloqueia até que o faz.       Para efetuar esta operação de forma síncrona, utilize o <xref:System.Net.Security.SslStream.Read%2A>método.</xref:System.Net.Security.SslStream.Read%2A>       Não é possível chamar este método até ter de ser autenticadas com êxito. Para autenticar a chamada de um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância devolvida por uma chamada para <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>ler o valor que especifica o número de bytes do fluxo subjacente.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Falha na operação de leitura."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de escrita assíncrona foi iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Se não tiver sido concluída a operação, este método bloqueia até que o faz.       Uma aplicação não é possível chamar este método, até ter de ser autenticadas com êxito. Para autenticar, chamar um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para efetuar esta operação de forma síncrona, utilize o <xref:System.Net.Security.SslStream.Write%2A>método.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância devolvida por uma chamada para <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de escrita falhou."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Faz com que todos os dados colocados em memória intermédia para serem escritos para o dispositivo subjacente."
  remarks: "Este método invoca <xref:System.IO.Stream.Flush%2A>no fluxo subjacente.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o algoritmo utilizado para gerar códigos de autenticação de mensagem (MACs)."
  remarks: "Os algoritmos de autenticação de mensagem geram hashes de mensagem e assinaturas utilizadas para detetar a adulteração e falsificação."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "A <xref:System.Security.Authentication.HashAlgorithmType>valor.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade HashAlgorithm foi acedida antes de concluir o processo de autenticação ou o processo de autenticação falha."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifique à força do algoritmo hash utilizado por esta instância."
  remarks: "O valor desta propriedade é zero até que a autenticação ocorre."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica a força do <xref:System.Security.Authentication.HashAlgorithmType>algoritmo em bits.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Os valores válidos são 128 ou 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se a autenticação foi bem sucedida.</xref:System.Boolean>"
  remarks: "Autenticam clientes ao chamar o <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servidores autenticar-se ao chamar o <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tiver ocorrido a autenticação com êxito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se esta <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> utiliza a encriptação de dados.</xref:System.Boolean>"
  remarks: "Encriptação ajuda a proteger a privacidade dos dados, nomeadamente-ajuda a garantir que dados enquanto estes se encontram em trânsito, não pode ser deciphered por terceiros."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados são encriptados antes de ser transmitida através da rede e desencriptados quando atinge o ponto final remoto; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o servidor e cliente tenham sido autenticadas.</xref:System.Boolean>"
  remarks: "A autenticação mútua é especificada pelo servidor quando o servidor de quiser ter o cliente para fornecer um certificado para autenticação."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o servidor foi autenticado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o local lado da ligação é utilizado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi autenticada como o servidor.</xref:System.Boolean>"
  remarks: "Se a autenticação falhou ou não ocorriam, esta propriedade devolve `false`.       Para efetuar a autenticação como o servidor, chame o <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ponto final local foi autenticado com êxito como o lado do servidor de ligação autenticada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se os dados enviados utilizando esta sequência estão assinados.</xref:System.Boolean>"
  remarks: "Ajuda a proteger a integridade dos dados de assinatura de dados, nomeadamente ajuda o destinatário a determinar se os dados foram adulterados em trânsito."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados estão assinados antes de a ser transmitidos; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o algoritmo de troca de chaves utilizado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "O valor desta propriedade é <xref:System.Security.Authentication.ExchangeAlgorithmType>até que a autenticação ocorra.</xref:System.Security.Authentication.ExchangeAlgorithmType>       O algoritmo de troca de chaves protege informações utilizadas para gerar chaves partilhadas."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "Um <xref:System.Security.Authentication.ExchangeAlgorithmType>valor.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifique à força do algoritmo de troca de chaves utilizado por esta instância."
  remarks: "O valor desta propriedade é zero até que a autenticação ocorre.       Em cenários comuns, o valor desta propriedade é um dos seguintes: - 512 768-1024-2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica a força do <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritmo em bits.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o comprimento do fluxo subjacente."
  remarks: "Esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.Length%2A>no fluxo subjacente.</xref:System.IO.Stream.Length%2A> Se o fluxo subjacente não é pesquisável, este método, normalmente, emite uma exceção. O tipo de tempo de execução do fluxo subjacente determina o tipo de tempo de execução da exceção que é acionada."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       O comprimento do fluxo subjacente."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obter o valor desta propriedade não é suportada quando o fluxo subjacente é um <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o certificado utilizado para autenticar o ponto final local."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Um objeto certificado X509 que representa o certificado fornecido para a autenticação ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> não se foi fornecido nenhum certificado."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação falhou ou não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém ou define a posição atual no fluxo subjacente."
  remarks: "Esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.Position%2A>no fluxo subjacente.</xref:System.IO.Stream.Position%2A> Se o fluxo subjacente não é pesquisável, este método, normalmente, emite uma exceção. O tipo de tempo de execução do fluxo subjacente determina o tipo de tempo de execução da exceção que é acionada."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       A posição atual no fluxo subjacente."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é suportada a definição desta propriedade.       - ou - obter o valor desta propriedade não é suportada quando o fluxo subjacente é um <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lê dados a partir desta sequência e armazena-os na matriz especificada."
  remarks: "O método lê um máximo de `count` bytes do fluxo e armazena-os em `buffer` começando na `offset`. Não é possível efetuar várias operações de leitura em simultâneo.       Não é possível chamar este método até ter de ser autenticadas com êxito. Para autenticar a chamada de um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para efetuar esta operação assíncrona, utilize o <xref:System.Net.Security.SslStream.BeginRead%2A>método.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que recebe os bytes lida neste fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>que contém a localização com base em zero no `buffer` no qual pretende começar a armazenar os dados lida neste fluxo.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>que contém o número máximo de bytes a ler a partir deste fluxo.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>valor que especifica o número de bytes lidos.</xref:System.Int32> Quando não houver nenhuma mais dados para ser de leitura, devolve 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Falha na operação de leitura. Consulte a exceção interna, se estiver presente para determinar a causa da falha."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já está em curso uma operação de leitura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém ou define a quantidade de tempo que limite à espera de dados de blocos de uma operação de leitura."
  remarks: "Esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.ReadTimeout%2A>no fluxo subjacente.</xref:System.IO.Stream.ReadTimeout%2A> Quando definir esta propriedade, o <xref:System.IO.Stream.ReadTimeout%2A>valor no fluxo subjacente estiver definido como o valor especificado.</xref:System.IO.Stream.ReadTimeout%2A>       Se o fluxo subjacente é um <xref:System.Net.Sockets.NetworkStream>, ReadTimeout em milissegundos e é definido <xref:System.Threading.Timeout.Infinite>por predefinição, para que ler operações fazer não tempo limite.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>que especifica o período de tempo decorrido antes da falha da operação de leitura de um síncronas.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o certificado utilizado para autenticar o ponto final remoto."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Um objeto certificado X509 que representa o certificado fornecido para a autenticação ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> não se foi fornecido nenhum certificado."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação falhou ou não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Emite um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Não chame este método. É herdada, mas não é suportado pela <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Este valor é ignorado."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Este valor é ignorado."
    return:
      type: System.Int64
      description: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Pesquisa não é suportada pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> objetos."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Define o comprimento do fluxo subjacente."
  remarks: "Este método invoca <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>no fluxo subjacente especificado quando esta <xref:System.Net.Security.SslStream>foi criado.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Um <xref:System.Int64>valor que especifica o comprimento da sequência.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que indica o protocolo de segurança utilizado para autenticar esta ligação."
  remarks: "Os protocolos de segurança suportadas são especificados quando o <xref:System.Net.Security.SslStream>é criado.</xref:System.Net.Security.SslStream> Se nenhum protocolo de segurança foi transmitido ao construtor, é criada a instância utilizando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> O protocolo real utilizado para autenticação está selecionado com base em protocolos suportados pelo cliente e servidor."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo utilizado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o <xref:System.Net.TransportContext>utilizado para autenticação com a proteção expandida.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "O <xref:System.Net.TransportContext>objeto que contém o token de enlace de canal (CBT) utilizado para a proteção expandida.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Escreve os dados especificados para esta sequência."
  remarks: "Este método bloqueia enquanto a operação for concluída. Para evitar bloquear enquanto a operação for concluída, utilize o <xref:System.Net.Security.SslStream.BeginWrite%2A>método.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Não é possível chamar este método até ter de ser autenticadas com êxito. Para autenticar a chamada de um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       O <xref:System.Net.Security.SslStream>classe não suporta várias operações de escrita em simultâneo.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que fornece os bytes escritos no fluxo.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de escrita falhou."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já está em curso uma operação de escrita."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Escrever o número especificado de <xref:System.Byte>s para o fluxo subjacente utilizando a memória intermédia especificada e o desvio.</xref:System.Byte>"
  remarks: "Este método bloqueia enquanto a operação for concluída. Para evitar bloquear enquanto a operação for concluída a operação for concluída, utilize o <xref:System.Net.Security.SslStream.BeginWrite%2A>método.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Não é possível chamar este método até ter de ser autenticadas com êxito. Para autenticar a chamada de um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       O <xref:System.Net.Security.SslStream>classe não suporta várias operações de escrita em simultâneo.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que fornece os bytes escritos no fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>que contém a localização com base em zero no `buffer` no qual pretende começar a ler bytes a escrever no fluxo.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>que contém o número de bytes a ler a partir do `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de escrita falhou."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já está em curso uma operação de escrita."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação não tiver ocorrido."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém ou define a quantidade de tempo que limite à espera de dados de blocos de uma operação de escrita."
  remarks: "Esta propriedade devolve o valor devolvido pelo invocar <xref:System.IO.Stream.WriteTimeout%2A>no fluxo subjacente.</xref:System.IO.Stream.WriteTimeout%2A> Para operações de conjunto, define o valor especificado a <xref:System.IO.Stream.WriteTimeout%2A>valor no fluxo subjacente.</xref:System.IO.Stream.WriteTimeout%2A>       Se o fluxo subjacente é um <xref:System.Net.Sockets.NetworkStream>, WriteTimeout em milissegundos e é definido <xref:System.Threading.Timeout.Infinite>por predefinição, para que escrever operações fazer não tempo limite.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>que especifica o período de tempo decorrido antes da falha de uma operação de escrita síncrona.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
