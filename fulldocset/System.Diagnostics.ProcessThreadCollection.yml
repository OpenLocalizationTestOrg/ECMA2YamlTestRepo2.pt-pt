### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.ProcessThreadCollection
  id: ProcessThreadCollection
  children:
  - System.Diagnostics.ProcessThreadCollection.#ctor
  - System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  - System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  - System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  langs:
  - csharp
  name: ProcessThreadCollection
  nameWithType: ProcessThreadCollection
  fullName: System.Diagnostics.ProcessThreadCollection
  type: Class
  summary: "Fornece uma coleção com tipo seguro de <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> objetos."
  syntax:
    content: 'public class ProcessThreadCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  id: '#ctor'
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: ProcessThreadCollection()
  nameWithType: ProcessThreadCollection.ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;> </xref> classe, sem qualquer associado <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> instâncias."
  syntax:
    content: protected ProcessThreadCollection ();
    parameters: []
  overload: System.Diagnostics.ProcessThreadCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  id: '#ctor(System.Diagnostics.ProcessThread[])'
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: ProcessThreadCollection(ProcessThread[])
  nameWithType: ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;> </xref> classe, utilizando a matriz especificada de <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> instâncias."
  syntax:
    content: public ProcessThreadCollection (System.Diagnostics.ProcessThread[] processThreads);
    parameters:
    - id: processThreads
      type: System.Diagnostics.ProcessThread[]
      description: "Uma matriz de <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> instâncias com a qual inicializar este <xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;> </xref> instância."
  overload: System.Diagnostics.ProcessThreadCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  id: Add(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Add(ProcessThread)
  nameWithType: ProcessThreadCollection.Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Acrescenta um thread de processo para a coleção."
  syntax:
    content: public int Add (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "O thread para adicionar à coleção."
    return:
      type: System.Int32
      description: "O índice baseado em zero do thread na coleção."
  overload: System.Diagnostics.ProcessThreadCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  id: Contains(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Contains(ProcessThread)
  nameWithType: ProcessThreadCollection.Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se o thread de processo especificado existe na coleção."
  remarks: "Um módulo é identificado pelo respetivo nome de módulo e o caminho de ficheiro completamente qualificado."
  syntax:
    content: public bool Contains (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "A <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> instância que indica o thread para localizar nesta coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o thread existe na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.ProcessThreadCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  id: CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: CopyTo(ProcessThread[],Int32)
  nameWithType: ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copia uma matriz de <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> instâncias para a coleção, o índice especificado."
  syntax:
    content: public void CopyTo (System.Diagnostics.ProcessThread[] array, int index);
    parameters:
    - id: array
      type: System.Diagnostics.ProcessThread[]
      description: "Uma matriz de <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> instâncias para adicionar à coleção."
    - id: index
      type: System.Int32
      description: "A localização na qual pode adicionar novas instâncias."
  overload: System.Diagnostics.ProcessThreadCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  id: IndexOf(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: IndexOf(ProcessThread)
  nameWithType: ProcessThreadCollection.IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Fornece a localização de um thread especificada dentro da coleção."
  syntax:
    content: public int IndexOf (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "O <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> cujo índice é obtido."
    return:
      type: System.Int32
      description: "O índice baseado em zero que define a localização do thread dentro de <xref href=&quot;System.Diagnostics.ProcessThreadCollection&quot;> </xref>."
  overload: System.Diagnostics.ProcessThreadCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  id: Insert(System.Int32,System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Insert(Int32,ProcessThread)
  nameWithType: ProcessThreadCollection.Insert(Int32,ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(Int32,ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Insere um thread de processo na localização especificada na coleção."
  syntax:
    content: public void Insert (int index, System.Diagnostics.ProcessThread thread);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero que indica a localização na qual o thread de inserir."
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "O thread para inserir na coleção."
  overload: System.Diagnostics.ProcessThreadCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ProcessThreadCollection.Item(Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um índice para iterating através de conjunto de threads de processo."
  syntax:
    content: public System.Diagnostics.ProcessThread this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O valor de índice baseado em zero do thread na coleção."
    return:
      type: System.Diagnostics.ProcessThread
      description: "A <xref href=&quot;System.Diagnostics.ProcessThread&quot;> </xref> que indexa os threads na coleção."
  overload: System.Diagnostics.ProcessThreadCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  id: Remove(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  name: Remove(ProcessThread)
  nameWithType: ProcessThreadCollection.Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(ProcessThread)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Elimina um thread de processo da coleção."
  syntax:
    content: public void Remove (System.Diagnostics.ProcessThread thread);
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
      description: "O thread para remover da coleção."
  overload: System.Diagnostics.ProcessThreadCollection.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: ProcessThreadCollection()
  nameWithType: ProcessThreadCollection.ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: ProcessThreadCollection(ProcessThread[])
  nameWithType: ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(ProcessThread[])
- uid: System.Diagnostics.ProcessThread[]
  parent: System.Diagnostics
  isExternal: false
  name: ProcessThread
  nameWithType: ProcessThread
  fullName: System.Diagnostics.ProcessThread[]
  spec.csharp:
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    nameWithType: ProcessThread
    fullName: ProcessThread[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Add(ProcessThread)
  nameWithType: ProcessThreadCollection.Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(ProcessThread)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.ProcessThread
  parent: System.Diagnostics
  isExternal: false
  name: ProcessThread
  nameWithType: ProcessThread
  fullName: System.Diagnostics.ProcessThread
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Contains(ProcessThread)
  nameWithType: ProcessThreadCollection.Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(ProcessThread)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: CopyTo(ProcessThread[],Int32)
  nameWithType: ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(ProcessThread[],Int32)
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: IndexOf(ProcessThread)
  nameWithType: ProcessThreadCollection.IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Insert(Int32,ProcessThread)
  nameWithType: ProcessThreadCollection.Insert(Int32,ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(Int32,ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ProcessThreadCollection.Item(Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.Item(Int32)
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Remove(ProcessThread)
  nameWithType: ProcessThreadCollection.Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(ProcessThread)
- uid: System.Diagnostics.ProcessThreadCollection.#ctor*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: ProcessThreadCollection
  nameWithType: ProcessThreadCollection.ProcessThreadCollection
- uid: System.Diagnostics.ProcessThreadCollection.Add*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Add
  nameWithType: ProcessThreadCollection.Add
- uid: System.Diagnostics.ProcessThreadCollection.Contains*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Contains
  nameWithType: ProcessThreadCollection.Contains
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProcessThreadCollection.CopyTo
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: IndexOf
  nameWithType: ProcessThreadCollection.IndexOf
- uid: System.Diagnostics.ProcessThreadCollection.Insert*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Insert
  nameWithType: ProcessThreadCollection.Insert
- uid: System.Diagnostics.ProcessThreadCollection.Item*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Item
  nameWithType: ProcessThreadCollection.Item
- uid: System.Diagnostics.ProcessThreadCollection.Remove*
  parent: System.Diagnostics.ProcessThreadCollection
  isExternal: false
  name: Remove
  nameWithType: ProcessThreadCollection.Remove
