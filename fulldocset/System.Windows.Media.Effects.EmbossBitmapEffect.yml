### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.EmbossBitmapEffect
  id: EmbossBitmapEffect
  children:
  - System.Windows.Media.Effects.EmbossBitmapEffect.#ctor
  - System.Windows.Media.Effects.EmbossBitmapEffect.Clone
  - System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore
  - System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  - System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  - System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  - System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  - System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: EmbossBitmapEffect
  nameWithType: EmbossBitmapEffect
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect
  type: Class
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>. Creates a bump mapping of the visual object to give the impression of depth and texture from an artificial light source.'
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] bitmap effects are software rendered. Any object that applies an effect will also be rendered in software. Bitmap effects should not be applied to large visuals or animations as this can degrade performance.       EmbossBitmapEffect is one of several effects that are shipped with the SDK. Other effects include:      -   <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>      -   <xref:System.Windows.Media.Effects.BlurBitmapEffect>      -   <xref:System.Windows.Media.Effects.BevelBitmapEffect>      -   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>       An emboss makes a selection appear raised or stamped by converting its fill color to gray and tracing the edges with the original fill color. The following illustration shows a EmbossBitmapEffect applied to a visual object (in this case applied to a <xref:System.Windows.Controls.Image>).       ![Screenshot: Compare image with and without emboss](~/add/media/effects-embosssimple.png &quot;Screenshot: Compare image with and without emboss&quot;)       The visual effect of an emboss can be modified using the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief%2A> and <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle%2A> properties."
  syntax:
    content: 'public sealed class EmbossBitmapEffect : System.Windows.Media.Effects.BitmapEffect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.BitmapEffect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: EmbossBitmapEffect()
  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.EmbossBitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>. Initializes a new instance of the <xref href=&quot;System.Windows.Media.Effects.EmbossBitmapEffect&quot;></xref> class.'
  syntax:
    content: public EmbossBitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: EmbossBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.EmbossBitmapEffect"></xref>, making deep copies of this object''s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.'
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Effects.EmbossBitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.EmbossBitmapEffect
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: EmbossBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href="System.Windows.Media.Effects.Effect"></xref>. Creates a modifiable clone of this <xref href="System.Windows.Media.Effects.EmbossBitmapEffect"></xref> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Effects.EmbossBitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.EmbossBitmapEffect
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: EmbossBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "To be added."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  id: LightAngle
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: LightAngle
  nameWithType: EmbossBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>. Gets or sets the direction the artificial light is cast upon the embossed object.'
  remarks: "The direction of light cast on the embossed object affects the shadowing of the embossed visual object.       The following diagram shows what direction light comes from for a given value of this property:       ![Diagram: DropShadow direction](~/add/media/effects-dropshadowdirection2.png &quot;Diagram: DropShadow direction&quot;)      <a name=&quot;dependencyPropertyInfo_LightAngle&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public double LightAngle { get; set; }
    return:
      type: System.Double
      description: "The direction the artificial light is cast upon the embossed object. The valid range is from `0-360` (degrees) with `0` specifying the right-hand side of the object and successive values moving counter-clockwise around the object. The default value is `45`."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  id: LightAngleProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: LightAngleProperty
  nameWithType: EmbossBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>. Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*> dependency property.'
  syntax:
    content: public static readonly System.Windows.DependencyProperty LightAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  id: Relief
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: Relief
  nameWithType: EmbossBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>. Gets or sets the amount of relief of the emboss.'
  remarks: "The following illustration demonstrates the effect of this property:       ![Screenshot: Compare minimum and higher relief](~/add/media/effects-embossrelief.png &quot;Screenshot: Compare minimum and higher relief&quot;)      <a name=&quot;dependencyPropertyInfo_Relief&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public double Relief { get; set; }
    return:
      type: System.Double
      description: "The amount of relief of the emboss. The valid range of values is `0-1` with `0` having the least relief and `1` having the most. The default value is `0.44`."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.Relief*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  id: ReliefProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: ReliefProperty
  nameWithType: EmbossBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>. Identifies the <xref:System.Windows.Media.Effects.EmbossBitmapEffect.Relief*> dependency property.'
  syntax:
    content: public static readonly System.Windows.DependencyProperty ReliefProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  syntax:
    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "To be added."
  overload: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: EmbossBitmapEffect()
  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.EmbossBitmapEffect()
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: EmbossBitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Clone()
- uid: System.Windows.Media.Effects.EmbossBitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: EmbossBitmapEffect
  nameWithType: EmbossBitmapEffect
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: EmbossBitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: EmbossBitmapEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: EmbossBitmapEffect.LightAngle
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: LightAngleProperty
  nameWithType: EmbossBitmapEffect.LightAngleProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: EmbossBitmapEffect.Relief
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.Relief
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: ReliefProperty
  nameWithType: EmbossBitmapEffect.ReliefProperty
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: EmbossBitmapEffect
  nameWithType: EmbossBitmapEffect.EmbossBitmapEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Clone*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Clone
  nameWithType: EmbossBitmapEffect.Clone
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: EmbossBitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: EmbossBitmapEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: EmbossBitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: LightAngle
  nameWithType: EmbossBitmapEffect.LightAngle
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.Relief*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: Relief
  nameWithType: EmbossBitmapEffect.Relief
- uid: System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.EmbossBitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: EmbossBitmapEffect.UpdateUnmanagedPropertyState
