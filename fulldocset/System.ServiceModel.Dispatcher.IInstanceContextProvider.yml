### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider
  id: IInstanceContextProvider
  children:
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  - System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  langs:
  - csharp
  name: IInstanceContextProvider
  nameWithType: IInstanceContextProvider
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider
  type: Interface
  summary: "Implement to participate in the creation or choosing of a &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; object, especially to enable shared sessions."
  remarks: "Implement the IInstanceContextProvider interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> object to the system. Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.       For example, to implement sharing, insert a custom IInstanceContextProvider to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object. For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).      > [!NOTE] >  When an IInstanceContextProvider is inserted into [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property) is no longer checked and has no effect.       A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>."
  syntax:
    content: public interface IInstanceContextProvider
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  id: GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: GetExistingInstanceContext(Message,IContextChannel)
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Called when a new message is received."
  remarks: "The GetExistingInstanceContext method is called when a message is received. Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`. In the case of `null`, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.       If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName>."
  syntax:
    content: public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The incoming message."
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "The channel that received the message."
    return:
      type: System.ServiceModel.InstanceContext
      description: "The &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; object that is used to process the message; return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to instruct [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] to create a new <xref:System.ServiceModel.InstanceContext> object."
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  id: InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Called when <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> is returned from the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*> method."
  remarks: "InitializeInstanceContext is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created. This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created."
  syntax:
    content: public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "The new &lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt; object."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The incoming message."
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "The channel that received the message."
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  id: IsIdle(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: IsIdle(InstanceContext)
  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Called when all <xref:System.ServiceModel.InstanceContext> activities have completed to enable implementers to prevent the <xref:System.ServiceModel.InstanceContext> from being recycled."
  remarks: "IsIdle is called when [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.       For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)."
  syntax:
    content: public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "The <xref:System.ServiceModel.InstanceContext> object that is considered idle."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] is to close and recycle the <xref:System.ServiceModel.InstanceContext> object and adjust the value of &lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName&gt;; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  id: NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  langs:
  - csharp
  name: NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*> method returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] when the <xref:System.ServiceModel.InstanceContext> object is finished."
  remarks: "The NotifyIdle method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled."
  syntax:
    content: public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);
    parameters:
    - id: callback
      type: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
      description: "The <xref href=&quot;System.ServiceModel.Dispatcher.InstanceContextIdleCallback&quot;></xref> object that notifies [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] when the <xref:System.ServiceModel.InstanceContext> object is to be closed and recycled."
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "The current <xref:System.ServiceModel.InstanceContext>."
  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: GetExistingInstanceContext(Message,IContextChannel)
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(Message,IContextChannel)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: true
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(InstanceContext,Message,IContextChannel)
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: IsIdle(InstanceContext)
  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(InstanceContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback,InstanceContext)
- uid: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: InstanceContextIdleCallback
  nameWithType: InstanceContextIdleCallback
  fullName: System.ServiceModel.Dispatcher.InstanceContextIdleCallback
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: GetExistingInstanceContext
  nameWithType: IInstanceContextProvider.GetExistingInstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: InitializeInstanceContext
  nameWithType: IInstanceContextProvider.InitializeInstanceContext
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: IsIdle
  nameWithType: IInstanceContextProvider.IsIdle
- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*
  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider
  isExternal: false
  name: NotifyIdle
  nameWithType: IInstanceContextProvider.NotifyIdle
