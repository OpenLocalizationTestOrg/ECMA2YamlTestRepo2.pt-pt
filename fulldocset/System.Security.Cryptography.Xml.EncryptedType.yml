### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedType
  id: EncryptedType
  children:
  - System.Security.Cryptography.Xml.EncryptedType.#ctor
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.GetXml
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  langs:
  - csharp
  name: EncryptedType
  nameWithType: EncryptedType
  fullName: System.Security.Cryptography.Xml.EncryptedType
  type: Class
  summary: "Represents the abstract base class from which the classes <xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;></xref> and <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref> derive."
  remarks: "The EncryptedType class represents the abstract base class from which the classes <xref:System.Security.Cryptography.Xml.EncryptedData> and <xref:System.Security.Cryptography.Xml.EncryptedKey> derive. These two classes contain the actual encrypted data or key information in XML encryption. To comply with XML encryption standards, you should use these two derived classes.       For more information on XML encryption standards, see http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the EncryptedType class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/t-system.security.crypto_24_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/t-system.security.crypto_24_1.vb)]"
  syntax:
    content: public abstract class EncryptedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> class."
  remarks: "This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This class represents the abstract base class from which the classes <xref:System.Security.Cryptography.Xml.EncryptedData> and <xref:System.Security.Cryptography.Xml.EncryptedKey> derive. To comply with XML encryption standards, you should use the two derived classes. For more information on XML encryption standards, see http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_3_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_3_1.vb)]"
  syntax:
    content: protected EncryptedType ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  id: AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Adds an <xref uid=&quot;langword_csharp_&lt;EncryptionProperty&gt;&quot; name=&quot;&lt;EncryptionProperty&gt;&quot; href=&quot;&quot;></xref> child element to the <xref uid=&quot;langword_csharp_&lt;EncryptedProperties&gt;&quot; name=&quot;&lt;EncryptedProperties&gt;&quot; href=&quot;&quot;></xref> element in the current <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> object in XML encryption."
  remarks: "This method can be used to add `<EncryptionProperty>` child elements to the `<EncryptedProperties>` element. The `<EncryptedProperties>` element provides additional information for the `<EncryptedType>` element."
  syntax:
    content: public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);
    parameters:
    - id: ep
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "An <xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  id: CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref> value for an instance of an <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> class."
  remarks: "The `<CipherData>` element is a required element in XML encryption that provides the encrypted data. It must either contain the encrypted octet sequence as the base64-encoded text of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> property, or provide a reference to an external location containing the encrypted octet sequence using the <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> property.       For more information about this element, see <xref:System.Security.Cryptography.Xml.CipherData>."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_62_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_62_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }
    return:
      type: System.Security.Cryptography.Xml.CipherData
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The CipherData property was set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_Encoding&quot; name=&quot;Encoding&quot; href=&quot;&quot;></xref> attribute of an <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> instance in XML encryption."
  remarks: "This property describes the encoding of the encrypted data. For example, if the encrypted data is a base64-encoded PNG, the encoding could be specified as &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_118_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_118_1.cs)]"
  syntax:
    content: public virtual string Encoding { get; set; }
    return:
      type: System.String
      description: "A string that describes the encoding of the encrypted data."
  overload: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  id: EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;></xref> element for XML encryption."
  remarks: "The `<EncryptionMethod>` is an optional element that describes the encryption algorithm applied to the encrypted data. If the element is absent, the encryption algorithm must be known by the recipient or decryption will fail."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_36_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_36_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionMethod
      description: "An <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;></xref> object that represents the <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  id: EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_&lt;EncryptionProperties&gt;&quot; name=&quot;&lt;EncryptionProperties&gt;&quot; href=&quot;&quot;></xref> element in XML encryption."
  remarks: "The `<EncryptionProperties>` element can contain additional information about the creation of the <xref:System.Security.Cryptography.Xml.EncryptedType> instance, such as a date and time stamp or the serial number of cryptographic hardware used during encryption."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_42_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_42_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionPropertyCollection
      description: "An <xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the XML representation of the <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> object."
  remarks: "Use this method to output the `<EncryptedType>` element in XML."
  syntax:
    content: public abstract System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "An <xref href=&quot;System.Xml.XmlElement&quot;></xref> object that represents the <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;></xref> element in XML encryption."
  overload: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  id: Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;></xref> attribute of an <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> instance in XML encryption."
  remarks: "The `Id` attribute is an optional attribute of the `<EncryptedType>` element that provides a standard method for assigning a string identifier to an element within an XML document."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_111_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_111_1.cs)]"
  syntax:
    content: public virtual string Id { get; set; }
    return:
      type: System.String
      description: "A string of the <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;></xref> attribute of the <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Security.Cryptography.Xml.EncryptedType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets of sets the <xref uid=&quot;langword_csharp_&lt;KeyInfo&gt;&quot; name=&quot;&lt;KeyInfo&gt;&quot; href=&quot;&quot;></xref> element in XML encryption."
  remarks: "The `<KeyInfo>` element is an optional element that contains information about the key used to encrypt the data."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_79_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_79_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Loads XML information into the <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;></xref> element in XML encryption."
  remarks: "Use this method to load an existing XML element into the <xref:System.Security.Cryptography.Xml.EncryptedType> object."
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_43_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_43_1.vb)]"
  syntax:
    content: public abstract void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "An <xref href=&quot;System.Xml.XmlElement&quot;></xref> object representing an XML element to use in the <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_MimeType&quot; name=&quot;MimeType&quot; href=&quot;&quot;></xref> attribute of an <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> instance in XML encryption."
  remarks: 'The `MimeType` attribute is an optional attribute that describes the media type of the encrypted data. The value of this attribute is a string with values defined by [RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](http://www.ietf.org/rfc/rfc2045.txt). For example, if the data that is encrypted is a base64-encoded PNG, the `Encoding` attribute would be ''http://www.w3.org/2000/09/xmldsig#base64'' and the `MimeType` would be ''image/png''. This attribute is optional and no validation of the `MimeType` information is required. The attribute does not indicate that the encryption application must do any additional processing. Note that this information may not be necessary if it is already bound to the identifier in the `Type` attribute.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_19_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_19_1.cs)]"
  syntax:
    content: public virtual string MimeType { get; set; }
    return:
      type: System.String
      description: "A string that describes the media type of the encrypted data."
  overload: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  id: Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> attribute of an <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;></xref> instance in XML encryption."
  remarks: 'The `Type` attribute is an optional attribute that identifies type information about the text form of the encrypted content. While optional, this is an important attribute and is used in mandatory processing described in [Processing Rules: Decryption](http://www.w3.org/TR/xmlenc-core/) (section 4.2) of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/xmlenc-core/). If the `<EncryptedData>` element contains data of type `''element''` or element `''content''`, and replaces that data in an XML document, it is strongly recommended that the `Type` attribute be provided. Without this information, the application attempting to decrypt the information will be unable to automatically restore the XML document to its original text form.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_47_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_47_1.vb)]"
  syntax:
    content: public virtual string Type { get; set; }
    return:
      type: System.String
      description: "A string that describes the text form of the encrypted data."
  overload: System.Security.Cryptography.Xml.EncryptedType.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionProperty
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionProperty
  nameWithType: EncryptionProperty
  fullName: System.Security.Cryptography.Xml.EncryptionProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.CipherData
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: CipherData
  nameWithType: CipherData
  fullName: System.Security.Cryptography.Xml.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptionMethod
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionPropertyCollection
  nameWithType: EncryptionPropertyCollection
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType
  nameWithType: EncryptedType.EncryptedType
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty
  nameWithType: EncryptedType.AddProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml
  nameWithType: EncryptedType.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedType.Id*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedType.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
