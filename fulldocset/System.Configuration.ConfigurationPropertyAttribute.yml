### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPropertyAttribute
  id: ConfigurationPropertyAttribute
  children:
  - System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  - System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  - System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  - System.Configuration.ConfigurationPropertyAttribute.IsKey
  - System.Configuration.ConfigurationPropertyAttribute.IsRequired
  - System.Configuration.ConfigurationPropertyAttribute.Name
  - System.Configuration.ConfigurationPropertyAttribute.Options
  langs:
  - csharp
  name: ConfigurationPropertyAttribute
  nameWithType: ConfigurationPropertyAttribute
  fullName: System.Configuration.ConfigurationPropertyAttribute
  type: Class
  summary: "Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited."
  remarks: "You use the ConfigurationPropertyAttribute to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.      > [!NOTE] >  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the ConfigurationPropertyAttribute attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.       The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:      1.  The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:          -   <xref:System.Configuration.ConfigurationCollectionAttribute>          -   ConfigurationPropertyAttribute      2.  The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute>"
  example:
  - "The following example shows how to define the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the ConfigurationPropertyAttribute attribute.  \n  \n The example contains two classes. The `UrlsSection` custom class uses the ConfigurationPropertyAttribute to define its own properties. The `UsingConfigurationPropertyAttribute` class uses the `UrlsSection` to read and write the custom section in the application configuration file.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_21_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_21_1.vb)]  \n  \n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/visualbasic/t-system.configuration.c_21_2.vb)]\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/csharp/t-system.configuration.c_21_2.cs)]  \n  \n The following is an excerpt of the configuration file containing the custom section as defined in the previous sample.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n    <configSections>  \n        <section name=\"CustomSection\" type=\"UrlsSection, UsingConfigurationPropertyAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <CustomSection name=\"Contoso\" url=\"http://www.contoso.com\" />  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class ConfigurationPropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: ConfigurationPropertyAttribute(String)
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of <xref href=&quot;System.Configuration.ConfigurationPropertyAttribute&quot;></xref> class."
  syntax:
    content: public ConfigurationPropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Name of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> object defined."
  overload: System.Configuration.ConfigurationPropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets or sets the default value for the decorated property."
  remarks: ''
  example:
  - "The following example shows how to use the DefaultValue property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_19_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_19_1.vb)]"
  syntax:
    content: public object DefaultValue { get; set; }
    return:
      type: System.Object
      description: "The object representing the default value of the decorated configuration-element property."
  overload: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  id: IsDefaultCollection
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets or sets a value indicating whether this is the default property collection for the decorated configuration property."
  remarks: "The IsDefaultCollection property value is ignored if the decorated property is not a collection."
  syntax:
    content: public bool IsDefaultCollection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property represents the default collection of an element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey
  id: IsKey
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets or sets a value indicating whether this is a key property for the decorated element property."
  remarks: "The IsKey property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as IsKey."
  example:
  - "The following example shows how to use the IsKey property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/csharp/p-system.configuration.c_4_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/visualbasic/p-system.configuration.c_4_1.vb)]"
  syntax:
    content: public bool IsKey { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property is a key property for an element of the collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationPropertyAttribute.IsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  id: IsRequired
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets or sets a value indicating whether the decorated element property is required."
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.DefaultValue%2A> property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_44_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_44_1.vb)]"
  syntax:
    content: public bool IsRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property is required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationPropertyAttribute.IsRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.Name
  id: Name
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
  fullName: System.Configuration.ConfigurationPropertyAttribute.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the name of the decorated configuration-element property."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the decorated configuration-element property."
  overload: System.Configuration.ConfigurationPropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.Options
  id: Options
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
  fullName: System.Configuration.ConfigurationPropertyAttribute.Options
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets or sets the <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref> for the decorated configuration-element property."
  syntax:
    content: public System.Configuration.ConfigurationPropertyOptions Options { get; set; }
    return:
      type: System.Configuration.ConfigurationPropertyOptions
      description: "One of the <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref> enumeration values associated with the property."
  overload: System.Configuration.ConfigurationPropertyAttribute.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: ConfigurationPropertyAttribute(String)
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired
- uid: System.Configuration.ConfigurationPropertyAttribute.Name
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
  fullName: System.Configuration.ConfigurationPropertyAttribute.Name
- uid: System.Configuration.ConfigurationPropertyAttribute.Options
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
  fullName: System.Configuration.ConfigurationPropertyAttribute.Options
- uid: System.Configuration.ConfigurationPropertyOptions
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyOptions
  nameWithType: ConfigurationPropertyOptions
  fullName: System.Configuration.ConfigurationPropertyOptions
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: ConfigurationPropertyAttribute
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
- uid: System.Configuration.ConfigurationPropertyAttribute.Name*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
- uid: System.Configuration.ConfigurationPropertyAttribute.Options*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
