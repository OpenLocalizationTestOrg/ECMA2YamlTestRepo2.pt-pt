### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.QueryStringParameter
  id: QueryStringParameter
  children:
  - System.Web.UI.WebControls.QueryStringParameter.#ctor
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)
  - System.Web.UI.WebControls.QueryStringParameter.Clone
  - System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  - System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  - System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  langs:
  - csharp
  name: QueryStringParameter
  nameWithType: QueryStringParameter
  fullName: System.Web.UI.WebControls.QueryStringParameter
  type: Class
  summary: "Binds the value of an HTTP request query-string field to a parameter object."
  remarks: "You can use the QueryStringParameter class to bind the value of a field that is passed as part of an HTTP request query string to a parameter that is used in a parameterized query or command. The field is retrieved from the <xref:System.Web.HttpRequest.QueryString%2A> collection.       Controls that bind data to the parameter might throw an exception if a QueryStringParameter object is referenced, but no corresponding query-string name/value pair is passed. Similarly, they might display no data if the query-string field name is passed without a corresponding value. To avoid these situations, set the <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property where appropriate.       The QueryStringParameter class provides the <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A> property, which identifies the name of the query string value to bind to. It also provides the properties that are inherited from the <xref:System.Web.UI.WebControls.Parameter> class.      > [!IMPORTANT] >  The QueryStringParameter class does not validate the value that is passed; it provides the raw value. However, you can validate the value of a QueryStringParameter object in a data source control. To do so, handle the `Selecting`, `Updating`, `Inserting`, or `Deleting` event of the data source control and check the parameter value in the event handler. If the value of the parameter does not pass the validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`."
  example:
  - "The following example shows how to create a QueryStringParameter object to use as a filter when you display data in a <xref:System.Web.UI.WebControls.GridView> control. You add the QueryStringParameter object to the <xref:System.Web.UI.WebControls.AccessDataSource> control's <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. The parameter object binds the value of the query-string field named `country` to its <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> string. Because no <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property is specified for the parameter, if no field named `country` is passed with the query string, the <xref:System.Web.UI.WebControls.AccessDataSource> control throws a <xref:System.NullReferenceException> exception. If a field named `country` is passed but has no value, the <xref:System.Web.UI.WebControls.GridView> control displays no data.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_359_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_359_1.aspx)]  \n  \n The following example shows how to create a QueryStringParameter object to display data from an Access database by using a parameterized SQL query. The <xref:System.Web.UI.WebControls.AccessDataSource> object retrieves records that are then displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control is also editable, and lets users update the status of orders in the Northwind Traders Orders table.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_359_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_359_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("QueryStringField")]

      public class QueryStringParameter : System.Web.UI.WebControls.Parameter
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Parameter
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)
  - System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)
  - System.Web.UI.WebControls.Parameter.DbType
  - System.Web.UI.WebControls.Parameter.DefaultValue
  - System.Web.UI.WebControls.Parameter.Direction
  - System.Web.UI.WebControls.Parameter.GetDatabaseType
  - System.Web.UI.WebControls.Parameter.IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.Name
  - System.Web.UI.WebControls.Parameter.OnParameterChanged
  - System.Web.UI.WebControls.Parameter.SaveViewState
  - System.Web.UI.WebControls.Parameter.SetDirty
  - System.Web.UI.WebControls.Parameter.Size
  - System.Web.UI.WebControls.Parameter.System#ICloneable#Clone
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Parameter.ToString
  - System.Web.UI.WebControls.Parameter.TrackViewState
  - System.Web.UI.WebControls.Parameter.Type
  - System.Web.UI.WebControls.Parameter.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter()
  nameWithType: QueryStringParameter.QueryStringParameter()
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new unnamed instance of the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> class."
  remarks: "A <xref:System.Web.UI.WebControls.QueryStringParameter> object that is created by using the QueryStringParameter constructor is initialized with default values for all its properties. The properties are initialized as follows:      -   <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A> is initialized to an empty string (&quot;&quot;).      -   <xref:System.Web.UI.WebControls.Parameter.Name%2A> is initialized to an empty string (&quot;&quot;).      -   <xref:System.Web.UI.WebControls.Parameter.Type%2A> is initialized to <xref:System.TypeCode?displayProperty=fullName>.      -   <xref:System.Web.UI.WebControls.Parameter.Direction%2A> is initialized to <xref:System.Data.ParameterDirection>.      -   <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> is initialized to `null`."
  example:
  - "The following example shows how to use the QueryStringParameter constructor to create a new <xref:System.Web.UI.WebControls.QueryStringParameter> parameter and add it to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection of an <xref:System.Web.UI.WebControls.AccessDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_1#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_83_1.cs)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_83_1.vb)]  \n  \n The <xref:System.Web.UI.WebControls.QueryStringParameter> object is added to the <xref:System.Web.UI.WebControls.AccessDataSource> control and is declared in an ASP.NET Web page. The <xref:System.Web.UI.WebControls.ListBox> control uses the <xref:System.Web.UI.WebControls.AccessDataSource> control to bind and display data whenever the page is requested with a query string that contains a field that is named `empId` and that has a corresponding value.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_1#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_83_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_83_2.aspx)]"
  syntax:
    content: public QueryStringParameter ();
    parameters: []
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)
  id: '#ctor(System.Web.UI.WebControls.QueryStringParameter)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(QueryStringParameter)
  nameWithType: QueryStringParameter.QueryStringParameter(QueryStringParameter)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(QueryStringParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> class, using the values of the instance that is specified by the <code>original</code> parameter."
  remarks: "The QueryStringParameter constructor is a protected copy constructor that is used to clone a <xref:System.Web.UI.WebControls.QueryStringParameter> instance. The values of the <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, and <xref:System.Web.UI.WebControls.Parameter.Type%2A> properties are transferred to the new instance."
  syntax:
    content: protected QueryStringParameter (System.Web.UI.WebControls.QueryStringParameter original);
    parameters:
    - id: original
      type: System.Web.UI.WebControls.QueryStringParameter
      description: "A <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> instance from which the current instance is initialized."
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(String,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new named instance of the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> class, using the specified string to identify which query-string field to bind to."
  remarks: "A <xref:System.Web.UI.WebControls.QueryStringParameter> object that is created by using the QueryStringParameter constructor is initialized with the specified parameter name that identifies the query-string field that the parameter binds to. The <xref:System.Web.UI.WebControls.Parameter.Type%2A> and <xref:System.Web.UI.WebControls.Parameter.Direction%2A> properties are initialized with default values."
  example:
  - "The following example shows how to create two <xref:System.Web.UI.WebControls.QueryStringParameter> objects by using the QueryStringParameter constructor and add them to an <xref:System.Web.UI.WebControls.AccessDataSource> control's <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. A <xref:System.Web.UI.WebControls.GridView> control displays data if the `employee` and `country` query-string fields are passed with the request and if they have valid values.  \n  \n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_2#1](~/add/codesnippet/visualbasic/28eab08c-8b34-4ee2-bf96-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_2#1](~/add/codesnippet/csharp/28eab08c-8b34-4ee2-bf96-_1.aspx)]"
  syntax:
    content: public QueryStringParameter (string name, string queryStringField);
    parameters:
    - id: name
      type: System.String
      description: "The name of the parameter."
    - id: queryStringField
      type: System.String
      description: "The name of the query-string field that the parameter object is bound to. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(String,DbType,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,DbType,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new named instance of the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> class, using the specified query-string field and the data type of the parameter."
  syntax:
    content: public QueryStringParameter (string name, System.Data.DbType dbType, string queryStringField);
    parameters:
    - id: name
      type: System.String
      description: "The name of the parameter."
    - id: dbType
      type: System.Data.DbType
      description: "The data type of the parameter."
    - id: queryStringField
      type: System.String
      description: "The name of the query-string field that the parameter object is bound to. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)
  id: '#ctor(System.String,System.TypeCode,System.String)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(String,TypeCode,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,TypeCode,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new named and strongly typed instance of the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> class, using the specified string to identify which query-string field to bind to."
  remarks: "A <xref:System.Web.UI.WebControls.QueryStringParameter> object that is created by using the QueryStringParameter constructor is initialized with the specified parameter name, the parameter type, and a string that identifies the query-string field that the parameter binds to. The <xref:System.Web.UI.WebControls.Parameter.Direction%2A> and <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> properties are initialized with default values."
  example:
  - "The following example shows how to create a <xref:System.Web.UI.WebControls.QueryStringParameter> object by using the QueryStringParameter constructor and add it to an <xref:System.Web.UI.WebControls.AccessDataSource> control's <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. A <xref:System.Web.UI.WebControls.GridView> control displays data if the `employee` and `country` query-string fields are passed with the request and if they have valid values.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_3#1](~/add/codesnippet/csharp/0cb36b7a-981d-4e88-acd1-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_3#1](~/add/codesnippet/visualbasic/0cb36b7a-981d-4e88-acd1-_1.aspx)]"
  syntax:
    content: public QueryStringParameter (string name, TypeCode type, string queryStringField);
    parameters:
    - id: name
      type: System.String
      description: "The name of the parameter."
    - id: type
      type: System.TypeCode
      description: "The type that the parameter represents. The default is <xref:System.TypeCode>."
    - id: queryStringField
      type: System.String
      description: "The name of the query-string field that the parameter object is bound to. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.Clone
  id: Clone
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: Clone()
  nameWithType: QueryStringParameter.Clone()
  fullName: System.Web.UI.WebControls.QueryStringParameter.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a duplicate of the current <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> instance."
  remarks: "The Clone method calls the <xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A> constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.QueryStringParameter> class by using the values of the current instance."
  syntax:
    content: protected override System.Web.UI.WebControls.Parameter Clone ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Parameter
      description: "A duplicate of the current instance."
  overload: System.Web.UI.WebControls.QueryStringParameter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  id: Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: Evaluate(HttpContext,Control)
  nameWithType: QueryStringParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.QueryStringParameter.Evaluate(HttpContext,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Updates and returns the value of the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> object."
  remarks: "The <xref:System.Web.UI.WebControls.QueryStringParameter> object tries to bind to the query-string field every time that the Evaluate method is called.       The `context` parameter is used by the Evaluate method to retrieve the value of the specified query-string field from the query string. The `control` parameter is ignored."
  syntax:
    content: protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> instance of the request."
    - id: control
      type: System.Web.UI.Control
      description: "A Web server control that is associated with the ASP.NET Web page where the <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref> object is used.       **Note** This parameter is not used."
    return:
      type: System.Object
      description: "An object that represents the current value of the parameter. If the context or the request is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the Evaluate method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.QueryStringParameter.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  id: QueryStringField
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringField
  nameWithType: QueryStringParameter.QueryStringField
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the name of the query-string field that the parameter binds to."
  remarks: "The QueryStringField property identifies a name/value pair that is passed with the query string. The QueryStringField property identifies the name of the pair, whereas the <xref:System.Web.UI.WebControls.QueryStringParameter> property binds to its corresponding value at run time. If the expected query-string name/value pair is not passed to the page with the query string, the <xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A> method then tries to bind the parameter to the value of the <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property. If the <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property is not set, the <xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A> method fails to bind the parameter to a value."
  example:
  - "The following example shows how to use a <xref:System.Web.UI.WebControls.QueryStringParameter> object together with a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.ListBox> control. The QueryStringField property is set to the name of the expected query-string field, and the parameter is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. A <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property is provided in case the name/value pair is not passed with the query string.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_370_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_370_1.aspx)]  \n  \n The following example shows how to use a <xref:System.Web.UI.WebControls.QueryStringParameter> object together with a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.QueryStringParameter> object is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection, together with other parameter objects that are used for the output parameter and return value. To retrieve data, handle the values that are returned from the stored procedure. This code example is part of a larger example that is provided for the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> class.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_370_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_370_2.aspx)]"
  syntax:
    content: public string QueryStringField { get; set; }
    return:
      type: System.String
      description: "The name of the query-string field that the parameter binds to."
  overload: System.Web.UI.WebControls.QueryStringParameter.QueryStringField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  id: ValidateInput
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: ValidateInput
  nameWithType: QueryStringParameter.ValidateInput
  fullName: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets whether the value of the query string parameter is being validated or not."
  remarks: "If the page property <xref:System.Web.UI.Page.SkipFormActionValidation%2A> is set to `true`, and the ValidateInput property is set to `false`, the query string parameter will not be validated. However, if the page property <xref:System.Web.UI.Page.SkipFormActionValidation%2A> is set to `true`, and the ValidateInput property is set to `true`, the query string parameter will be validated. If the page property <xref:System.Web.UI.Page.SkipFormActionValidation%2A> is set to `false`, the query string parameter will be validated regardless of whether the ValidateInput property is set to `true` or `false`."
  syntax:
    content: public bool ValidateInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value of the query parameter is being validated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.QueryStringParameter.ValidateInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Parameter
  isExternal: false
  name: System.Web.UI.WebControls.Parameter
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter()
  nameWithType: QueryStringParameter.QueryStringParameter()
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter()
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(QueryStringParameter)
  nameWithType: QueryStringParameter.QueryStringParameter(QueryStringParameter)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(QueryStringParameter)
- uid: System.Web.UI.WebControls.QueryStringParameter
  parent: System.Web.UI.WebControls
  isExternal: false
  name: QueryStringParameter
  nameWithType: QueryStringParameter
  fullName: System.Web.UI.WebControls.QueryStringParameter
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(String,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(String,DbType,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,DbType,String)
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(String,TypeCode,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,TypeCode,String)
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.UI.WebControls.QueryStringParameter.Clone
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Clone()
  nameWithType: QueryStringParameter.Clone()
  fullName: System.Web.UI.WebControls.QueryStringParameter.Clone()
- uid: System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Evaluate(HttpContext,Control)
  nameWithType: QueryStringParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.QueryStringParameter.Evaluate(HttpContext,Control)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringField
  nameWithType: QueryStringParameter.QueryStringField
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
- uid: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: ValidateInput
  nameWithType: QueryStringParameter.ValidateInput
  fullName: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter
  nameWithType: QueryStringParameter.QueryStringParameter
- uid: System.Web.UI.WebControls.QueryStringParameter.Clone*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Clone
  nameWithType: QueryStringParameter.Clone
- uid: System.Web.UI.WebControls.QueryStringParameter.Evaluate*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Evaluate
  nameWithType: QueryStringParameter.Evaluate
- uid: System.Web.UI.WebControls.QueryStringParameter.QueryStringField*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringField
  nameWithType: QueryStringParameter.QueryStringField
- uid: System.Web.UI.WebControls.QueryStringParameter.ValidateInput*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: ValidateInput
  nameWithType: QueryStringParameter.ValidateInput
