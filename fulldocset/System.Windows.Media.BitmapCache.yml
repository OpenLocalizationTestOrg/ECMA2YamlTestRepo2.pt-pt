### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.BitmapCache
  id: BitmapCache
  children:
  - System.Windows.Media.BitmapCache.#ctor
  - System.Windows.Media.BitmapCache.#ctor(System.Double)
  - System.Windows.Media.BitmapCache.Clone
  - System.Windows.Media.BitmapCache.CloneCurrentValue
  - System.Windows.Media.BitmapCache.CreateInstanceCore
  - System.Windows.Media.BitmapCache.EnableClearType
  - System.Windows.Media.BitmapCache.EnableClearTypeProperty
  - System.Windows.Media.BitmapCache.RenderAtScale
  - System.Windows.Media.BitmapCache.RenderAtScaleProperty
  - System.Windows.Media.BitmapCache.SnapsToDevicePixels
  - System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty
  langs:
  - csharp
  name: BitmapCache
  nameWithType: BitmapCache
  fullName: System.Windows.Media.BitmapCache
  type: Class
  summary: "Creates and caches a bitmap representation of a <xref href=&quot;System.Windows.UIElement&quot;></xref>."
  remarks: "Use the BitmapCache class to improve rendering performance of a complex <xref:System.Windows.UIElement>. Create a BitmapCache and assign it to the <xref:System.Windows.UIElement.CacheMode%2A> property of a <xref:System.Windows.UIElement> to cache the element and its subtree as a bitmap in video memory. This is useful when you need to animate, translate, or scale a <xref:System.Windows.UIElement> as quickly as possible. This approach enables a tradeoff between performance and visual quality while content is cached.       Use the <xref:System.Windows.Media.BitmapCacheBrush> class to efficiently reuse a cached element.       Set the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to scale the bitmap cache. This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the elementâ€™s native resolution.       Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text. This property is ignored by the <xref:System.Windows.Media.BitmapCacheBrush> and <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes.       Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.       Cache regeneration occurs only when the structure of the <xref:System.Windows.UIElement> or its subtree changes, or when the <xref:System.Windows.Media.CacheMode> settings change. Setting the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> or <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> properties causes cache regeneration. Changes to the parent visual tree of the cached <xref:System.Windows.UIElement>, such as transforms, scales, opacities, and effects, do not affect the cache.       The cache functions when hardware acceleration is not available. In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.      > [!NOTE] >  <xref:System.Windows.Media.RenderOptions> and <xref:System.Windows.Media.TextOptions> do not propagate through a cached element. You may have to set these options again in child elements below the cache."
  example:
  - "The following XAML shows how to cache a <xref:System.Windows.Controls.Canvas> element. For the complete code example, see [How to: Improve Rendering Performance by Caching an Element](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/add/codesnippet/xaml/cachedcompositiondemo/window1.xaml#_bitmapcachecreation)]"
  syntax:
    content: 'public sealed class BitmapCache : System.Windows.Media.CacheMode'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.CacheMode
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.#ctor
  id: '#ctor'
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: BitmapCache()
  nameWithType: BitmapCache.BitmapCache()
  fullName: System.Windows.Media.BitmapCache.BitmapCache()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.BitmapCache&quot;></xref> class."
  syntax:
    content: public BitmapCache ();
    parameters: []
  overload: System.Windows.Media.BitmapCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: BitmapCache(Double)
  nameWithType: BitmapCache.BitmapCache(Double)
  fullName: System.Windows.Media.BitmapCache.BitmapCache(Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.BitmapCache&quot;></xref> class with the specified scale."
  remarks: ''
  example:
  - "The following XAML shows how to create and assign a <xref:System.Windows.Media.BitmapCache> to a <xref:System.Windows.Controls.Canvas> element. For the complete code example, see [How to: Improve Rendering Performance by Caching an Element](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/add/codesnippet/xaml/cachedcompositiondemo/window1.xaml#_bitmapcachecreation)]"
  syntax:
    content: public BitmapCache (double renderAtScale);
    parameters:
    - id: renderAtScale
      type: System.Double
      description: "A double that scales the bitmap."
  overload: System.Windows.Media.BitmapCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.Clone
  id: Clone
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapCache.Clone()
  fullName: System.Windows.Media.BitmapCache.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable clone of the <xref href=&quot;System.Windows.Media.BitmapCache&quot;></xref>, making deep copies of the object&quot;s values. When copying the object&quot;s dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values."
  syntax:
    content: public System.Windows.Media.BitmapCache Clone ();
    parameters: []
    return:
      type: System.Windows.Media.BitmapCache
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.BitmapCache.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapCache.CloneCurrentValue()
  fullName: System.Windows.Media.BitmapCache.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable clone (deep copy) of the <xref href=&quot;System.Windows.Media.BitmapCache&quot;></xref> using its current values."
  syntax:
    content: public System.Windows.Media.BitmapCache CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.BitmapCache
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property is <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.BitmapCache.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BitmapCache.CreateInstanceCore()
  fullName: System.Windows.Media.BitmapCache.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.BitmapCache.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.EnableClearType
  id: EnableClearType
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: EnableClearType
  nameWithType: BitmapCache.EnableClearType
  fullName: System.Windows.Media.BitmapCache.EnableClearType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated."
  remarks: "Set the EnableClearType property to allow ClearType text to be rendered in the cache.       When the EnableClearType property is `true`, your application must render all of its ClearType text on an opaque background.       When the EnableClearType property is `false`, text in the cache is rendered with grayscale antialiasing.       ClearType text requires correct pixel alignment of rendered characters, so you should set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property to `true`. If you do not set this property, the content may not blend correctly.       Use the EnableClearType property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text. This situation occurs commonly in text-scrolling scenarios."
  syntax:
    content: public bool EnableClearType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if ClearType is active; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.BitmapCache.EnableClearType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.EnableClearTypeProperty
  id: EnableClearTypeProperty
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: EnableClearTypeProperty
  nameWithType: BitmapCache.EnableClearTypeProperty
  fullName: System.Windows.Media.BitmapCache.EnableClearTypeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.BitmapCache.EnableClearType*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty EnableClearTypeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.RenderAtScale
  id: RenderAtScale
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: RenderAtScale
  nameWithType: BitmapCache.RenderAtScale
  fullName: System.Windows.Media.BitmapCache.RenderAtScale
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets a value that indicates the scale that is applied to the bitmap."
  remarks: "Use the RenderAtScale property to render the <xref:System.Windows.Media.BitmapCache> at a multiple of the normal bitmap size. The normal size is determined by the local size of the element.       Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution. For example, if the RenderAtScale property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with RenderAtScale set to 1.0 and a transform scale of 1.       When RenderAtScale is set to 0, no bitmap is rendered. Negative values are clamped to 0.       If you change this value, the cache is regenerated at the appropriate new resolution.       The following images show how the same content appears for different values of the RenderAtScale property.       **RenderAtScale = 1**       ![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png &quot;RenderAtScale = 1&quot;)       **RenderAtScale = 0.5**       ![RenderAtScale &#61; 0.5](~/add/media/ndp-scale05.png &quot;RenderAtScale = 0.5&quot;)       **RenderAtScale = 0.2**       ![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png &quot;RenderAtScale = 0.2&quot;)       The following image shows a zoom transform that is applied to an ancestor of the cached element. When the zoom is set to 1 and RenderAtScale is set to 1, the image quality is almost the same as when RenderAtScale is set to 2. But when zoom is greater than 1, setting RenderAtScale to 2 will have better image quality.       **RenderAtScale = 1.0**       ![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png &quot;RenderAtScale = 1.0&quot;)       **RenderAtScale = 2.0**       ![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png &quot;RenderAtScale = 2.0&quot;)"
  syntax:
    content: public double RenderAtScale { get; set; }
    return:
      type: System.Double
      description: "The scale that is applied to the bitmap. The default is 1."
  overload: System.Windows.Media.BitmapCache.RenderAtScale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.RenderAtScaleProperty
  id: RenderAtScaleProperty
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: RenderAtScaleProperty
  nameWithType: BitmapCache.RenderAtScaleProperty
  fullName: System.Windows.Media.BitmapCache.RenderAtScaleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.BitmapCache.RenderAtScale*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty RenderAtScaleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixels
  id: SnapsToDevicePixels
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: SnapsToDevicePixels
  nameWithType: BitmapCache.SnapsToDevicePixels
  fullName: System.Windows.Media.BitmapCache.SnapsToDevicePixels
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping."
  remarks: "Set the SnapsToDevicePixels property when the cache displays content that requires pixel-alignment to render correctly. This is the case for ClearType text. If you set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to `true`, consider setting SnapsToDevicePixels to `true` to ensure proper rendering.       When the SnapsToDevicePixels property is set to `false`, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.       When the SnapsToDevicePixels property is set to `true`, the bitmap cache is aligned with pixel boundaries of the destination. If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid. In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.       The SnapsToDevicePixels property is ignored by <xref:System.Windows.Media.BitmapCacheBrush> and when used with a <xref:System.Windows.Media.Media3D.Viewport2DVisual3D>."
  syntax:
    content: public bool SnapsToDevicePixels { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if pixel snapping is active; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.BitmapCache.SnapsToDevicePixels*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty
  id: SnapsToDevicePixelsProperty
  parent: System.Windows.Media.BitmapCache
  langs:
  - csharp
  name: SnapsToDevicePixelsProperty
  nameWithType: BitmapCache.SnapsToDevicePixelsProperty
  fullName: System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.CacheMode
  isExternal: false
  name: System.Windows.Media.CacheMode
- uid: System.Windows.Media.BitmapCache.#ctor
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: BitmapCache()
  nameWithType: BitmapCache.BitmapCache()
  fullName: System.Windows.Media.BitmapCache.BitmapCache()
- uid: System.Windows.Media.BitmapCache.#ctor(System.Double)
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: BitmapCache(Double)
  nameWithType: BitmapCache.BitmapCache(Double)
  fullName: System.Windows.Media.BitmapCache.BitmapCache(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.BitmapCache.Clone
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: Clone()
  nameWithType: BitmapCache.Clone()
  fullName: System.Windows.Media.BitmapCache.Clone()
- uid: System.Windows.Media.BitmapCache
  parent: System.Windows.Media
  isExternal: false
  name: BitmapCache
  nameWithType: BitmapCache
  fullName: System.Windows.Media.BitmapCache
- uid: System.Windows.Media.BitmapCache.CloneCurrentValue
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapCache.CloneCurrentValue()
  fullName: System.Windows.Media.BitmapCache.CloneCurrentValue()
- uid: System.Windows.Media.BitmapCache.CreateInstanceCore
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BitmapCache.CreateInstanceCore()
  fullName: System.Windows.Media.BitmapCache.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.BitmapCache.EnableClearType
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: EnableClearType
  nameWithType: BitmapCache.EnableClearType
  fullName: System.Windows.Media.BitmapCache.EnableClearType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.BitmapCache.EnableClearTypeProperty
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: EnableClearTypeProperty
  nameWithType: BitmapCache.EnableClearTypeProperty
  fullName: System.Windows.Media.BitmapCache.EnableClearTypeProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.BitmapCache.RenderAtScale
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: RenderAtScale
  nameWithType: BitmapCache.RenderAtScale
  fullName: System.Windows.Media.BitmapCache.RenderAtScale
- uid: System.Windows.Media.BitmapCache.RenderAtScaleProperty
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: RenderAtScaleProperty
  nameWithType: BitmapCache.RenderAtScaleProperty
  fullName: System.Windows.Media.BitmapCache.RenderAtScaleProperty
- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixels
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: SnapsToDevicePixels
  nameWithType: BitmapCache.SnapsToDevicePixels
  fullName: System.Windows.Media.BitmapCache.SnapsToDevicePixels
- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: SnapsToDevicePixelsProperty
  nameWithType: BitmapCache.SnapsToDevicePixelsProperty
  fullName: System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty
- uid: System.Windows.Media.BitmapCache.#ctor*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: BitmapCache
  nameWithType: BitmapCache.BitmapCache
- uid: System.Windows.Media.BitmapCache.Clone*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: Clone
  nameWithType: BitmapCache.Clone
- uid: System.Windows.Media.BitmapCache.CloneCurrentValue*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapCache.CloneCurrentValue
- uid: System.Windows.Media.BitmapCache.CreateInstanceCore*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BitmapCache.CreateInstanceCore
- uid: System.Windows.Media.BitmapCache.EnableClearType*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: EnableClearType
  nameWithType: BitmapCache.EnableClearType
- uid: System.Windows.Media.BitmapCache.RenderAtScale*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: RenderAtScale
  nameWithType: BitmapCache.RenderAtScale
- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixels*
  parent: System.Windows.Media.BitmapCache
  isExternal: false
  name: SnapsToDevicePixels
  nameWithType: BitmapCache.SnapsToDevicePixels
