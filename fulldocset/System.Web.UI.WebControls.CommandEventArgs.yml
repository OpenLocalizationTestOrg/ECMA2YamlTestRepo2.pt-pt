### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.CommandEventArgs
  id: CommandEventArgs
  children:
  - System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  langs:
  - csharp
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref uid=&quot;langword_csharp_Command&quot; name=&quot;Command&quot; href=&quot;&quot;> </xref> eventos."
  remarks: "O `Command` o evento é gerado quando um <xref:System.Web.UI.WebControls.Button>ou <xref:System.Web.UI.WebControls.ImageButton>controlo é clicado.</xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       O objeto de CommandEventArgs contém dados sobre o `Command` eventos que podem ser acedidos de eventos de processador. As propriedades disponíveis na classe CommandEventArgs pode determinar o nome do comando para efetuar, tais como `Sort`, além de um argumento opcional que complementam o comando, tal como `Ascending`.       Para obter uma lista de valores de propriedade inicial para uma instância de CommandEventArgs, consulte o <xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to access the properties in CommandEventArgs to determine the command to perform. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_199_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_199_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_199_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_199_2.aspx)]"
  syntax:
    content: 'public class CommandEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandEventArgs(CommandEventArgs)
  nameWithType: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> classe com outra <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> objeto."
  remarks: "Utilize este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.CommandEventArgs>classe utilizando especificado <xref:System.Web.UI.WebControls.CommandEventArgs>objeto.</xref:System.Web.UI.WebControls.CommandEventArgs> </xref:System.Web.UI.WebControls.CommandEventArgs>       Quando uma instância de <xref:System.Web.UI.WebControls.CommandEventArgs>é criada por uma chamada para este construtor, as seguintes propriedades são inicializadas aos valores especificados.</xref:System.Web.UI.WebControls.CommandEventArgs>      | Propriedade | Valor inicial |   |--------------|-------------------|   | CommandName | O `e.CommandName` parâmetro. |   | CommandArgument | O `e.CommandArgument` parâmetro. |"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified <xref:System.Web.UI.WebControls.CommandEventArgs> object.  \n  \n [!code-cs[Classic CommandEventArgs.CommandEventArgs Example#1](~/add/codesnippet/csharp/8cddd133-08a0-42ee-824a-_1.cs)]\n [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/add/codesnippet/visualbasic/8cddd133-08a0-42ee-824a-_1.vb)]"
  syntax:
    content: public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> que contém os dados do evento."
  overload: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandEventArgs(String,Object)
  nameWithType: CommandEventArgs.CommandEventArgs(String,Object)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> classe com o nome do comando especificado e o argumento."
  remarks: "Utilize este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.CommandEventArgs>com o nome do comando especificado e o argumento de classe.</xref:System.Web.UI.WebControls.CommandEventArgs>       Quando uma instância de <xref:System.Web.UI.WebControls.CommandEventArgs>é criada por uma chamada para este construtor, as seguintes propriedades são inicializadas aos valores especificados.</xref:System.Web.UI.WebControls.CommandEventArgs>      | Propriedade | Valor inicial |   |--------------|-------------------|   | CommandName | O valor da `commandName` parâmetro. |   | CommandArgument | O valor da `argument` parâmetro. |"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified command name and argument.  \n  \n [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/add/codesnippet/visualbasic/227f8d74-47ad-48c3-92e3-_1.vb)]\n [!code-cs[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/add/codesnippet/csharp/227f8d74-47ad-48c3-92e3-_1.cs)]"
  syntax:
    content: public CommandEventArgs (string commandName, object argument);
    parameters:
    - id: commandName
      type: System.String
      description: "O nome do comando."
    - id: argument
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; que contém os argumentos para o comando."
  overload: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o argumento para o comando."
  remarks: "O CommandArgument pode conter qualquer cadeia definida pelo programador. A propriedade de CommandArgument complementa o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>propriedade, permitindo-lhe fornecer informações adicionais para o comando.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> Por exemplo, pode definir o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>propriedade `Sort` e defina a propriedade CommandArgument como `Ascending` para especificar um comando para ordenar por ordem ascendente.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>"
  example:
  - "The following example demonstrates how to use the CommandArgument property to determine supplemental information for the command to perform.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1082_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1082_1.aspx)]"
  syntax:
    content: public object CommandArgument { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; que contém o argumento para o comando."
  overload: System.Web.UI.WebControls.CommandEventArgs.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o nome do comando."
  remarks: "Utilize a propriedade CommandName para determinar o comando para executar. A propriedade CommandName pode conter qualquer cadeia definida pelo programador. O programador, em seguida, pode identificar o nome do comando no código e efetuar as tarefas adequadas."
  example:
  - "The following example demonstrates how to use the CommandName property to programmatically determine the command to perform.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_858_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_858_1.aspx)]"
  syntax:
    content: public string CommandName { get; }
    return:
      type: System.String
      description: "O nome do comando para executar."
  overload: System.Web.UI.WebControls.CommandEventArgs.CommandName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs(CommandEventArgs)
  nameWithType: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs(String,Object)
  nameWithType: CommandEventArgs.CommandEventArgs(String,Object)
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandEventArgs(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: System.Web.UI.WebControls.CommandEventArgs.CommandName
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs.CommandEventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
