### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA256
  id: SHA256
  children:
  - System.Security.Cryptography.SHA256.#ctor
  - System.Security.Cryptography.SHA256.Create
  - System.Security.Cryptography.SHA256.Create(System.String)
  langs:
  - csharp
  name: SHA256
  nameWithType: SHA256
  fullName: System.Security.Cryptography.SHA256
  type: Class
  summary: "Computes the SHA256 hash for the input data."
  remarks: "The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.       The hash size for the SHA256 algorithm is 256 bits.       This is an abstract class. The only implementation of this class is <xref:System.Security.Cryptography.SHA256Managed>."
  example:
  - "The following example calculates the SHA-256 hash for all files in a directory.  \n  \n [!code-cpp[Classic SHA256 Example#1](~/add/codesnippet/CPP/t-system.security.crypto_14_1.cpp)]\n [!code-cs[Classic SHA256 Example#1](~/add/codesnippet/CSharp/t-system.security.crypto_14_1.cs)]\n [!code-vb[Classic SHA256 Example#1](~/add/codesnippet/VisualBasic/t-system.security.crypto_14_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SHA256 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SHA256.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA256
  langs:
  - csharp
  name: SHA256()
  nameWithType: SHA256.SHA256()
  fullName: System.Security.Cryptography.SHA256.SHA256()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of <see cref=&quot;T:System.Security.Cryptography.SHA256&quot;></see>."
  remarks: "You cannot create an instance of an abstract class. Application code create a new instance of a derived class."
  syntax:
    content: protected SHA256 ();
    parameters: []
  overload: System.Security.Cryptography.SHA256.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SHA256.Create
  id: Create
  parent: System.Security.Cryptography.SHA256
  langs:
  - csharp
  name: Create()
  nameWithType: SHA256.Create()
  fullName: System.Security.Cryptography.SHA256.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Creates an instance of the default implementation of <see cref=&quot;T:System.Security.Cryptography.SHA256&quot;></see>."
  syntax:
    content: public static System.Security.Cryptography.SHA256 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.SHA256
      description: "To be added."
  overload: System.Security.Cryptography.SHA256.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SHA256.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.SHA256
  langs:
  - csharp
  name: Create(String)
  nameWithType: SHA256.Create(String)
  fullName: System.Security.Cryptography.SHA256.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Creates an instance of a specified implementation of <see cref=&quot;T:System.Security.Cryptography.SHA256&quot;></see>."
  syntax:
    content: public static System.Security.Cryptography.SHA256 Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: "The name of the specific implementation of  to be used."
    return:
      type: System.Security.Cryptography.SHA256
      description: "To be added."
  overload: System.Security.Cryptography.SHA256.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "The algorithm described by the hashName parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.SHA256.#ctor
  parent: System.Security.Cryptography.SHA256
  isExternal: false
  name: SHA256()
  nameWithType: SHA256.SHA256()
  fullName: System.Security.Cryptography.SHA256.SHA256()
- uid: System.Security.Cryptography.SHA256.Create
  parent: System.Security.Cryptography.SHA256
  isExternal: false
  name: Create()
  nameWithType: SHA256.Create()
  fullName: System.Security.Cryptography.SHA256.Create()
- uid: System.Security.Cryptography.SHA256
  parent: System.Security.Cryptography
  isExternal: false
  name: SHA256
  nameWithType: SHA256
  fullName: System.Security.Cryptography.SHA256
- uid: System.Security.Cryptography.SHA256.Create(System.String)
  parent: System.Security.Cryptography.SHA256
  isExternal: false
  name: Create(String)
  nameWithType: SHA256.Create(String)
  fullName: System.Security.Cryptography.SHA256.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SHA256.#ctor*
  parent: System.Security.Cryptography.SHA256
  isExternal: false
  name: SHA256
  nameWithType: SHA256.SHA256
- uid: System.Security.Cryptography.SHA256.Create*
  parent: System.Security.Cryptography.SHA256
  isExternal: false
  name: Create
  nameWithType: SHA256.Create
