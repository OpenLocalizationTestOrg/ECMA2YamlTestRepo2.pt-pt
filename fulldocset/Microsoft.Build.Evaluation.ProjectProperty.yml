### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectProperty
  id: ProjectProperty
  children:
  - Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue
  - Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty
  - Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty
  - Microsoft.Build.Evaluation.ProjectProperty.IsImported
  - Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty
  - Microsoft.Build.Evaluation.ProjectProperty.Name
  - Microsoft.Build.Evaluation.ProjectProperty.Predecessor
  - Microsoft.Build.Evaluation.ProjectProperty.Project
  - Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)
  - Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue
  - Microsoft.Build.Evaluation.ProjectProperty.Xml
  langs:
  - csharp
  name: ProjectProperty
  nameWithType: ProjectProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty
  type: Class
  summary: "Represents an evaluated design-time property."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{UnevaluatedValue}]")]

      public abstract class ProjectProperty : IEquatable<Microsoft.Build.Evaluation.ProjectProperty>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<Microsoft.Build.Evaluation.ProjectProperty>
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue
  id: EvaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: EvaluatedValue
  nameWithType: ProjectProperty.EvaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Gets the evaluated property value."
  remarks: "Cannot be set directly; only the unevaluated value can be set. The evaluated value contains no character escape sequences."
  syntax:
    content: public string EvaluatedValue { get; }
    return:
      type: System.String
      description: "Returns the evaluated property value, which is never null."
  overload: Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty
  id: IsEnvironmentProperty
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: IsEnvironmentProperty
  nameWithType: ProjectProperty.IsEnvironmentProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Determines whether the property originated from the environment variables."
  syntax:
    content: public abstract bool IsEnvironmentProperty { get; }
    return:
      type: System.Boolean
      description: "True if the property originated from an environment variable; false otherwise."
  overload: Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty
  id: IsGlobalProperty
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: IsGlobalProperty
  nameWithType: ProjectProperty.IsGlobalProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Determines whether the property is a global property."
  syntax:
    content: public abstract bool IsGlobalProperty { get; }
    return:
      type: System.Boolean
      description: "True if the property is a global property; false otherwise."
  overload: Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectProperty.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Determines whether the property originates from an imported file."
  syntax:
    content: public abstract bool IsImported { get; }
    return:
      type: System.Boolean
      description: "Returns true if the property originates from an imported file and not from an environment variable, a global property, or a reserved property. Returns false otherwise."
  overload: Microsoft.Build.Evaluation.ProjectProperty.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty
  id: IsReservedProperty
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: IsReservedProperty
  nameWithType: ProjectProperty.IsReservedProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Determines whether the property is a reserved property, for example &quot;MSBuildProjectFile&quot;."
  syntax:
    content: public abstract bool IsReservedProperty { get; }
    return:
      type: System.Boolean
      description: "Returns true if the property is a reserved property; false otherwise."
  overload: Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.Name
  id: Name
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: Name
  nameWithType: ProjectProperty.Name
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Name
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Gets the name of the property."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "Returns the name of the property."
  overload: Microsoft.Build.Evaluation.ProjectProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.Predecessor
  id: Predecessor
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: Predecessor
  nameWithType: ProjectProperty.Predecessor
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Predecessor
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Gets the last property that was overridden by this property during evaluation."
  remarks: "This method searches for all properties with the same name that lie above in the logical project file, and whose conditions evaluate to true.       If the project has not been reevaluated since the last modification, this value may be incorrect."
  syntax:
    content: public abstract Microsoft.Build.Evaluation.ProjectProperty Predecessor { get; }
    return:
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "Returns the last property whose value was overridden by this property during evaluation. Returns null if the property has not been overridden."
  overload: Microsoft.Build.Evaluation.ProjectProperty.Predecessor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: Project
  nameWithType: ProjectProperty.Project
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Gets the project that contains this property."
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "Returns the project that contains this property, which is never null."
  overload: Microsoft.Build.Evaluation.ProjectProperty.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)
  id: System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)
  isEii: true
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: System.IEquatable(ProjectProperty)
  nameWithType: ProjectProperty.System.IEquatable(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.ProjectProperty.System.IEquatable(ProjectProperty)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  syntax:
    content: bool IEquatable<ProjectProperty>.Equals (Microsoft.Build.Evaluation.ProjectProperty other);
    parameters:
    - id: other
      type: Microsoft.Build.Evaluation.ProjectProperty
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable<Microsoft#Build#Evaluation#ProjectProperty>#Equals*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue
  id: UnevaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: UnevaluatedValue
  nameWithType: ProjectProperty.UnevaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Gets or sets the unevaluated property value."
  remarks: "The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.       The containing project is marked as modified. Unevaluated values are assumed to contain escaped character sequences as needed."
  syntax:
    content: public abstract string UnevaluatedValue { get; set; }
    return:
      type: System.String
      description: "Returns the unevaluated property value."
  overload: Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectProperty.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectProperty
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectProperty.Xml
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Gets the associated property element. Backing XML property. Null only if this is a global, environment, or built-in property."
  syntax:
    content: public abstract Microsoft.Build.Construction.ProjectPropertyElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectPropertyElement
      description: "Returns the associated property element. Return null if this is a global or reserved property, or originates from an environment variable."
  overload: Microsoft.Build.Evaluation.ProjectProperty.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectProperty.EvaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsEnvironmentProperty
  nameWithType: ProjectProperty.IsEnvironmentProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsGlobalProperty
  nameWithType: ProjectProperty.IsGlobalProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsImported
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsImported
  nameWithType: ProjectProperty.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsImported
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsReservedProperty
  nameWithType: ProjectProperty.IsReservedProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty
- uid: Microsoft.Build.Evaluation.ProjectProperty.Name
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Name
  nameWithType: ProjectProperty.Name
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Name
- uid: Microsoft.Build.Evaluation.ProjectProperty.Predecessor
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Predecessor
  nameWithType: ProjectProperty.Predecessor
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Predecessor
- uid: Microsoft.Build.Evaluation.ProjectProperty
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectProperty
  nameWithType: ProjectProperty
  fullName: Microsoft.Build.Evaluation.ProjectProperty
- uid: Microsoft.Build.Evaluation.ProjectProperty.Project
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Project
  nameWithType: ProjectProperty.Project
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: System.IEquatable(ProjectProperty)
  nameWithType: ProjectProperty.System.IEquatable(ProjectProperty)
  fullName: Microsoft.Build.Evaluation.ProjectProperty.System.IEquatable(ProjectProperty)
- uid: Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: UnevaluatedValue
  nameWithType: ProjectProperty.UnevaluatedValue
  fullName: Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectProperty.Xml
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Xml
  nameWithType: ProjectProperty.Xml
  fullName: Microsoft.Build.Evaluation.ProjectProperty.Xml
- uid: Microsoft.Build.Construction.ProjectPropertyElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectPropertyElement
  nameWithType: ProjectPropertyElement
  fullName: Microsoft.Build.Construction.ProjectPropertyElement
- uid: Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: EvaluatedValue
  nameWithType: ProjectProperty.EvaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsEnvironmentProperty
  nameWithType: ProjectProperty.IsEnvironmentProperty
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsGlobalProperty
  nameWithType: ProjectProperty.IsGlobalProperty
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsImported
  nameWithType: ProjectProperty.IsImported
- uid: Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: IsReservedProperty
  nameWithType: ProjectProperty.IsReservedProperty
- uid: Microsoft.Build.Evaluation.ProjectProperty.Name*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Name
  nameWithType: ProjectProperty.Name
- uid: Microsoft.Build.Evaluation.ProjectProperty.Predecessor*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Predecessor
  nameWithType: ProjectProperty.Predecessor
- uid: Microsoft.Build.Evaluation.ProjectProperty.Project*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Project
  nameWithType: ProjectProperty.Project
- uid: Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable<Microsoft#Build#Evaluation#ProjectProperty>#Equals*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: System.IEquatable<Microsoft.Build.Evaluation.ProjectProperty>.Equals
  nameWithType: ProjectProperty.System.IEquatable<Microsoft.Build.Evaluation.ProjectProperty>.Equals
- uid: Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: UnevaluatedValue
  nameWithType: ProjectProperty.UnevaluatedValue
- uid: Microsoft.Build.Evaluation.ProjectProperty.Xml*
  parent: Microsoft.Build.Evaluation.ProjectProperty
  isExternal: false
  name: Xml
  nameWithType: ProjectProperty.Xml
