### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepCollection
  id: WizardStepCollection
  children:
  - System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Clear
  - System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Count
  - System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  - System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  - System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  - System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: WizardStepCollection
  nameWithType: WizardStepCollection
  fullName: System.Web.UI.WebControls.WizardStepCollection
  type: Class
  summary: "Representa uma coleção de <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objetos num controlo que age como um assistente. Esta classe não pode ser herdada."
  remarks: "A classe de WizardStepCollection é utilizada para armazenar e gerir uma coleção de <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objetos num controlo que age como um assistente, tais como o <xref:System.Web.UI.WebControls.CreateUserWizard>controlo ou <xref:System.Web.UI.WebControls.Wizard>controlo.</xref:System.Web.UI.WebControls.Wizard> </xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.WizardStepBase> Por exemplo, o <xref:System.Web.UI.WebControls.Wizard>controlo utiliza a classe de WizardStepCollection para o respetivo <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>propriedade.</xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> </xref:System.Web.UI.WebControls.Wizard>       Existem várias formas de poder aceder a <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objetos a WizardStepCollection:-Utilize o <xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A>propriedade aceda diretamente a um <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto num índice baseado em zero específico.</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A> </xref:System.Web.UI.WebControls.WizardStepBase>      -Utilize o <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>método para criar um enumerador que pode ser utilizado para iterar através da coleção.</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>      -Utilize o <xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>método para copiar o conteúdo da coleção WizardStepCollection para um <xref:System.Array>objeto.</xref:System.Array> </xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>"
  example:
  - "The following example demonstrates how to populate the WizardStepCollection collection using declarative syntax.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_1.aspx)]  \n  \n The following example demonstrates how to programmatically populate a WizardStepCollection collection.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_2.aspx)]  \n  \n The following is the code-behind file for the Web page in the preceding example.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_3.cs)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_3.vb)]"
  syntax:
    content: 'public sealed class WizardStepCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  id: Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Acrescenta especificado <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto para o fim da colecção."
  remarks: "O método Add adiciona o <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto até ao fim do <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Para adicionar um <xref:System.Web.UI.WebControls.WizardStepBase>-derivado objeto à coleção de uma localização de índice específico, utilize o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>método.</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Add method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived <xref:System.Web.UI.WebControls.WizardStep> objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/visualbasic/dbb341bd-e6ba-460d-b742-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/csharp/dbb341bd-e6ba-460d-b742-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto a acrescentar para o <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado objeto transmitido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona especificado <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objeto à coleção na localização de índice especificado."
  remarks: "O método AddAt adiciona o <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objeto à coleção na localização de índice especificado.</xref:System.Web.UI.WebControls.WizardStepBase>       Para adicionar um <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto até ao fim do <xref:System.Web.UI.WebControls.WizardStepCollection>coleção, utilize o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>método.</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> </xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice no qual pretende inserir <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto."
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto a acrescentar para o <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado objeto transmitido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove todos os <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objetos da coleção."
  remarks: "Utilizar o método Clear remover todas as o <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objetos a partir de <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>      > [!NOTE] > Método após o Clear remove o <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objetos da coleção, o <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>propriedade do <xref:System.Web.UI.WebControls.WizardStepCollection>coleção tem um valor de zero.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  id: Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção contém específico <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto."
  remarks: "Utilize o método contém para determinar se um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivada está contido na coleção.</xref:System.Web.UI.WebControls.WizardStepBase> Este método é normalmente utilizado para testar a existência de um <xref:System.Web.UI.WebControls.WizardStepBase>-objeto derivada antes de executar uma tarefa, tal como remover um <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto da coleção.</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objeto localizar no <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado objeto se encontra no <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WizardStepCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>wizardStep</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia todos os itens de um <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção a uma matriz unidimensional compatível de <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref> objetos, que começa no índice especificado na matriz de destino."
  remarks: "Utilize o método CopyTo para copiar o conteúdo da coleção para a matriz baseada em zero especificada. Itens são copiados a partir do índice da matriz de destino especificado. Depois dos itens estão numa matriz, pode utilizar a sintaxe de matriz para aceder aos itens a <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection>       Como alternativa, também pode utilizar o <xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>método para criar um enumerador que pode ser utilizado para aceder aos itens na coleção.</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.WizardStepBase> objects from the collection to an array. The array is then iterated through to display the <xref:System.Web.UI.Control.ID%2A> property of each <xref:System.Web.UI.WebControls.WizardStepBase>-derived object. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/csharp/069e4b03-58e3-4a5a-8594-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/visualbasic/069e4b03-58e3-4a5a-8594-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WizardStepBase[]
      description: "Uma matriz baseada em zero do <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref> objetos que recebe os itens copiados da coleção."
    - id: index
      type: System.Int32
      description: "A posição da matriz de destino em que a matriz é iniciado receber os itens copiados."
  overload: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o número de <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objetos a <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> do controlo <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
  remarks: "Utilize a propriedade de contagem para determinar o número de <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objetos a <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Na propriedade Count é normalmente utilizada quando a repetir a coleção para determinar o respetivo limite superior."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objetos a <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref> controlo."
  overload: System.Web.UI.WebControls.WizardStepCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Devolve um <xref:System.Collections.IEnumerator>-implementado objetos que podem ser utilizados para iterar através de <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objetos na coleção.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>-implementado o objeto que contém todos os o <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objetos a <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  id: IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina o valor de índice que representa a posição da especificado <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto na coleção."
  remarks: "Utilize o método IndexOf para determinar o índice especificado da <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto na atual <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Se o <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto não existe na coleção, o método devolve -1.</xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto para procurar no <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
    return:
      type: System.Int32
      description: "Se encontrado, o índice baseado em zero da primeira ocorrência da <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado objeto transmitido na atual <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção; caso contrário, -1."
  overload: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado objeto transmitido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Insere especificado <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivada objeto à coleção na localização de índice especificado."
  remarks: "O método Insert adiciona o <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objeto à coleção na localização de índice especificado.</xref:System.Web.UI.WebControls.WizardStepBase>       Em alternativa, pode utilizar o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>método para adicionar o <xref:System.Web.UI.WebControls.WizardStepBase>-derivada objeto à coleção.</xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> Para adicionar um <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto até ao fim do <xref:System.Web.UI.WebControls.WizardStepCollection>coleção, utilize o <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>método.</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> </xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>      > [!NOTE] > Inserir o método e o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>método efetuar, essencialmente, a mesma função.</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A> Quando se chama o método de inserção, basta passar o `wizardStep` e `index` parâmetros para o <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>método.</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Insert method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/visualbasic/a6945f59-a965-41a5-8e08-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/csharp/a6945f59-a965-41a5-8e08-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice no qual pretende inserir a <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto."
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto a inserir o <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivados objetos da coleção podem ser modificados."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção pode ser modificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o acesso à coleção está sincronizado (seguro para thread)."
  remarks: "Esta propriedade é derivada de <xref:System.Collections.ICollection>interface e seja substituída para devolver sempre `false`.</xref:System.Collections.ICollection>       Para obter mais informações sobre a propriedade IsSynchronized, consulte a <xref:System.Collections.ICollection.IsSynchronized%2A>propriedade da <xref:System.Collections.ICollection>interface</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto da coleção no índice especificado."
  remarks: "Utilize a propriedade do Item para obter o <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto na localização no índice especificado o <xref:System.Web.UI.WebControls.WizardStepCollection>coleção utilizando a notação de matriz.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do <xref href=&quot;System.Web.UI.WebControls.WizardStep&quot;> </xref> o objeto a obter."
    return:
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto no <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção a localização do índice especificado."
  overload: System.Web.UI.WebControls.WizardStepCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  id: Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o especificado <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto da coleção."
  remarks: "Utilize o método de remover para remover o <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto a partir do <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Em alternativa, pode utilizar o <xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>método para remover um <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto a partir de uma localização especificada no <xref:System.Web.UI.WebControls.WizardStepCollection>coleção.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> </xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.WizardStepBase>-derived object from the <xref:System.Web.UI.WebControls.WizardStepCollection> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/visualbasic/f9ffdaaf-8580-49a0-8194-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/csharp/f9ffdaaf-8580-49a0-8194-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto para remover da coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado objeto transmitido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto da coleção na localização especificada."
  remarks: "Utilize o método do RemoveAt para remover o <xref:System.Web.UI.WebControls.WizardStepBase>-derivado do objeto a partir do <xref:System.Web.UI.WebControls.WizardStepCollection>coleção a localização do índice especificado.</xref:System.Web.UI.WebControls.WizardStepCollection> </xref:System.Web.UI.WebControls.WizardStepBase> Em alternativa, pode remover específico <xref:System.Web.UI.WebControls.WizardStepBase>-derivado que o objeto da coleção a utilizar o <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>método.</xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A> </xref:System.Web.UI.WebControls.WizardStepBase>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-derivado do objeto para remover."
  overload: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um objeto que pode ser utilizado para sincronizar o acesso à coleção."
  remarks: "O objeto devolvido nesta implementação é o <xref:System.Web.UI.WebControls.WizardStepCollection>objeto propriamente dito.</xref:System.Web.UI.WebControls.WizardStepCollection>       Para obter mais informações sobre a propriedade SyncRoot, consulte o <xref:System.Collections.ICollection.SyncRoot%2A>propriedade o <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser utilizado para sincronizar acesso para o <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia todos os itens de um <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção a uma matriz unidimensional, que começa no índice especificado na matriz de destino."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Um baseado em zero <xref:System.Array>que recebe os itens copiados a <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref> coleção.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A posição da matriz de destino no qual pretende iniciar a receber o conteúdo copiado."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Acrescenta o objeto especificado para o fim da colecção."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>a acrescentar para o fim da colecção.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A posição em que foi inserido o novo elemento."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se a coleção contém o objeto especificado."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>Localizar na coleção.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Object>se encontra no <xref:System.Collections.IList>; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina o valor de índice que representa a posição do objeto especificado na coleção."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto para procurar na coleção."
    return:
      type: System.Int32
      description: "O valor de índice do objeto especificado na coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Insere o objeto especificado na coleção na posição especificada."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice no qual pretende inserir o objeto à coleção."
    - id: value
      type: System.Object
      description: "O objeto a inserir na coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se a coleção tem um tamanho fixo."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção tem um tamanho fixo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o objeto no índice especificado na coleção."
  remarks: 'Esta propriedade fornece a capacidade de aceder um elemento específico da coleção, utilizando a seguinte sintaxe: myCollection [Índice].'
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do objeto para obter da coleção."
    return:
      type: System.Object
      description: "O objeto a ser obtidos."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o objeto especificado da coleção."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto para remover da coleção."
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepBase
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
- uid: System.Web.UI.WebControls.WizardStepBase[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WizardStepBase
    name: WizardStepBase
    nameWithType: WizardStepBase
    fullName: WizardStepBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add
  nameWithType: WizardStepCollection.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt
  nameWithType: WizardStepCollection.AddAt
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear
  nameWithType: WizardStepCollection.Clear
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains
  nameWithType: WizardStepCollection.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo
  nameWithType: WizardStepCollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.Count*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: WizardStepCollection.GetEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf
  nameWithType: WizardStepCollection.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert
  nameWithType: WizardStepCollection.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item
  nameWithType: WizardStepCollection.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove
  nameWithType: WizardStepCollection.Remove
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt
  nameWithType: WizardStepCollection.RemoveAt
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: WizardStepCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: WizardStepCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: WizardStepCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: WizardStepCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: WizardStepCollection.System.Collections.IList.Remove
