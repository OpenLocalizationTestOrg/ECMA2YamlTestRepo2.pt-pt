### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataGridViewRow
  id: DataGridViewRow
  children:
  - System.Windows.Forms.DataGridViewRow.#ctor
  - System.Windows.Forms.DataGridViewRow.AccessibilityObject
  - System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridViewRow.Cells
  - System.Windows.Forms.DataGridViewRow.Clone
  - System.Windows.Forms.DataGridViewRow.ContextMenuStrip
  - System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance
  - System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)
  - System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])
  - System.Windows.Forms.DataGridViewRow.CreateCellsInstance
  - System.Windows.Forms.DataGridViewRow.DataBoundItem
  - System.Windows.Forms.DataGridViewRow.DefaultCellStyle
  - System.Windows.Forms.DataGridViewRow.Displayed
  - System.Windows.Forms.DataGridViewRow.DividerHeight
  - System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)
  - System.Windows.Forms.DataGridViewRow.ErrorText
  - System.Windows.Forms.DataGridViewRow.Frozen
  - System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)
  - System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)
  - System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  - System.Windows.Forms.DataGridViewRow.GetState(System.Int32)
  - System.Windows.Forms.DataGridViewRow.HeaderCell
  - System.Windows.Forms.DataGridViewRow.Height
  - System.Windows.Forms.DataGridViewRow.InheritedStyle
  - System.Windows.Forms.DataGridViewRow.IsNewRow
  - System.Windows.Forms.DataGridViewRow.MinimumHeight
  - System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)
  - System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  - System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  - System.Windows.Forms.DataGridViewRow.ReadOnly
  - System.Windows.Forms.DataGridViewRow.Resizable
  - System.Windows.Forms.DataGridViewRow.Selected
  - System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])
  - System.Windows.Forms.DataGridViewRow.State
  - System.Windows.Forms.DataGridViewRow.ToString
  - System.Windows.Forms.DataGridViewRow.Visible
  langs:
  - csharp
  name: DataGridViewRow
  nameWithType: DataGridViewRow
  fullName: System.Windows.Forms.DataGridViewRow
  type: Class
  summary: "Represents a row in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  remarks: "The DataGridViewRow class represents a row in a <xref:System.Windows.Forms.DataGridView> control. You can retrieve rows through the <xref:System.Windows.Forms.DataGridView.Rows%2A> and <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> collections of the control.       Unlike a <xref:System.Windows.Forms.DataGridViewColumn>, a DataGridViewRow physically contains a collection of all of the cells in that row. You can access this collection through the <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> property.       The DataGridViewRow class is used to access the individual cell elements, as well as to adjust the appearance and behavior of the row user interface (UI), such as height and cell style. Typically, you will want all rows or most rows in the control to share the same characteristics. To set cell styles for all rows in the control, set the properties of the object returned by the <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=fullName> property. To set styles for alternating rows, use the <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=fullName> property. For more information about cell styles, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md). You can also use the <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=fullName> property to define a row that will be used as a basis for all rows added to the control.       The <xref:System.Windows.Forms.DataGridView> control will share DataGridViewRow objects across multiple data rows whenever possible to avoid performance penalties. Unless you are working with large amounts of data and experiencing performance issues, you can typically ignore row sharing. A shared row is indicated by an <xref:System.Windows.Forms.DataGridViewBand.Index%2A> property value of -1. Some members of the DataGridViewRow class cannot be used with shared rows, but you can unshare a row by accessing it through the <xref:System.Windows.Forms.DataGridViewRowCollection.Item%2A?displayProperty=fullName> property. Rows can also become unshared in other ways. To access a row without unsharing it, use the <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=fullName> method. When working with large amounts of data, you should be aware of how rows are shared and unshared to avoid performance penalties. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates the use of this type. This example is part of a larger example available in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/cpp/t-system.windows.forms.d_15_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/csharp/t-system.windows.forms.d_15_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/visualbasic/t-system.windows.forms.d_15_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewRowConverter))]

      public class DataGridViewRow : System.Windows.Forms.DataGridViewBand
  inheritance:
  - System.Object
  - System.Windows.Forms.DataGridViewElement
  - System.Windows.Forms.DataGridViewBand
  implements: []
  inheritedMembers:
  - System.Windows.Forms.DataGridViewBand.DefaultHeaderCellType
  - System.Windows.Forms.DataGridViewBand.Dispose
  - System.Windows.Forms.DataGridViewBand.Dispose(System.Boolean)
  - System.Windows.Forms.DataGridViewBand.HasDefaultCellStyle
  - System.Windows.Forms.DataGridViewBand.HeaderCellCore
  - System.Windows.Forms.DataGridViewBand.Index
  - System.Windows.Forms.DataGridViewBand.IsRow
  - System.Windows.Forms.DataGridViewBand.OnDataGridViewChanged
  - System.Windows.Forms.DataGridViewBand.Tag
  - System.Windows.Forms.DataGridViewElement.DataGridView
  - System.Windows.Forms.DataGridViewElement.RaiseCellClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseDataError(System.Windows.Forms.DataGridViewDataErrorEventArgs)
  - System.Windows.Forms.DataGridViewElement.RaiseMouseWheel(System.Windows.Forms.MouseEventArgs)
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: DataGridViewRow()
  nameWithType: DataGridViewRow.DataGridViewRow()
  fullName: System.Windows.Forms.DataGridViewRow.DataGridViewRow()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> class without using a template."
  remarks: "This constructor initializes the row in its blank state."
  syntax:
    content: public DataGridViewRow ();
    parameters: []
  overload: System.Windows.Forms.DataGridViewRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.AccessibilityObject
  id: AccessibilityObject
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: AccessibilityObject
  nameWithType: DataGridViewRow.AccessibilityObject
  fullName: System.Windows.Forms.DataGridViewRow.AccessibilityObject
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the <xref:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject> assigned to the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  remarks: "To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.       If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.      > [!NOTE] >  To get or set the AccessibilityObject property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].       For more information about accessible objects, see the &quot;Active Accessibility&quot; section of the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "The <xref:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject> assigned to the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.AccessibilityObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: AdjustRowHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewRow.AdjustRowHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Modifies an input row header border style according to the specified criteria."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control internally calls the AdjustRowHeaderBorderStyle method to determine the appearance of the borders for the row header cells. The <xref:System.Windows.Forms.DataGridView> control typically uses the value of the <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> property for the `dataGridViewAdvancedBorderStyleInput` parameter."
  example:
  - "The following code example demonstrates how to override the AdjustRowHeaderBorderStyle method to customize the borders of the row header cells. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> class.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/add/codesnippet/csharp/0ec944f1-da7c-4fd0-b31e-_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/add/codesnippet/visualbasic/0ec944f1-da7c-4fd0-b31e-_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);
    parameters:
    - id: dataGridViewAdvancedBorderStyleInput
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the row header border style to modify."
    - id: dataGridViewAdvancedBorderStylePlaceholder
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that is used to store intermediate changes to the row header border style."
    - id: singleVerticalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a single vertical border to the result; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: singleHorizontalBorderAdded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to add a single horizontal border to the result; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is the first row displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isLastVisibleRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is the last row in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that has its <xref:System.Windows.Forms.DataGridViewRow.Visible*> property set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Windows.Forms.DataGridViewAdvancedBorderStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAdvancedBorderStyle&quot;></xref> that represents the new border style used."
  overload: System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Cells
  id: Cells
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Cells
  nameWithType: DataGridViewRow.Cells
  fullName: System.Windows.Forms.DataGridViewRow.Cells
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the collection of cells that populate the row."
  remarks: "If the row does not contain any cells when this property is accessed, a new empty <xref:System.Windows.Forms.DataGridViewCellCollection> will be created by a call to the <xref:System.Windows.Forms.DataGridViewRow.CreateCellsInstance%2A> method."
  example:
  - "The following code example uses the Cells property to set the value of a cell in the row. This code example is part of a larger code example provided in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/cpp/p-system.windows.forms.d_219_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/csharp/p-system.windows.forms.d_219_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/add/codesnippet/visualbasic/p-system.windows.forms.d_219_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewCellCollection Cells { get; }
    return:
      type: System.Windows.Forms.DataGridViewCellCollection
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref> that contains all of the cells in the row."
  overload: System.Windows.Forms.DataGridViewRow.Cells*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Clone
  id: Clone
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Clone()
  nameWithType: DataGridViewRow.Clone()
  fullName: System.Windows.Forms.DataGridViewRow.Clone()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates an exact copy of this row."
  remarks: "The Clone method copies the row and its property values, but does not copy the cell values that the row contains. For information about how to copy cell values when cloning a row, see the example section.       Override the Clone method whenever you derive from <xref:System.Windows.Forms.DataGridViewRow> and add new properties to the derived class."
  example:
  - "The following example demonstrates how to use the Clone method to copy a row, and then populate the copy with the cell values from the original row.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewMisc2#60](~/add/codesnippet/csharp/m-system.windows.forms.d_75_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewMisc2#60](~/add/codesnippet/visualbasic/m-system.windows.forms.d_75_1.vb)]"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the cloned <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.ContextMenuStrip
  id: ContextMenuStrip
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: ContextMenuStrip
  nameWithType: DataGridViewRow.ContextMenuStrip
  fullName: System.Windows.Forms.DataGridViewRow.ContextMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the shortcut menu for the row."
  remarks: "This property indicates the shortcut menu that is displayed when the user right-clicks the row unless the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> event or the row ContextMenuStrip property overrides the shortcut menu for the specific cell that was clicked.       When the <xref:System.Windows.Forms.DataGridView> control <xref:System.Windows.Forms.DataGridView.DataSource%2A> property is set or its <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> property is `true`, getting the value of the ContextMenuStrip property raises the <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> event of the control and returns the value of the <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName> property as specified in the event handler. If there are no handlers for the event, getting the value of the ContextMenuStrip property returns the previously specified value or its default value of `null`.       Handling the <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> event is primarily useful when working with large amounts of data to avoid performance penalties when setting the row ContextMenuStrip value for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       Changing this property raises the <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> event on the owning <xref:System.Windows.Forms.DataGridView>, if one exists.       If the current row is shared, use the <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> method rather than getting the value of this property."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=fullName> property, which is nearly identical to the ContextMenuStrip property of the <xref:System.Windows.Forms.DataGridViewRow> class. This code example is part of a larger code example provided in the <xref:System.Windows.Forms.DataGridViewColumn> class.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/add/codesnippet/cpp/p-system.windows.forms.d_358_1.cpp)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#130](~/add/codesnippet/visualbasic/p-system.windows.forms.d_358_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#130](~/add/codesnippet/csharp/p-system.windows.forms.d_358_1.cs)]"
  syntax:
    content: public override System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "The <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> associated with the current <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.ContextMenuStrip*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When getting the value of this property, the row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance
  id: CreateAccessibilityInstance
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: CreateAccessibilityInstance()
  nameWithType: DataGridViewRow.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new accessible object for the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  remarks: "If you do not explicitly call the CreateAccessibilityInstance method, it will be called when the <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> property is referenced.      > [!NOTE] >  To get or set <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A>, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  syntax:
    content: protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "A new <xref:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject> for the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)
  id: CreateCells(System.Windows.Forms.DataGridView)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: CreateCells(DataGridView)
  nameWithType: DataGridViewRow.CreateCells(DataGridView)
  fullName: System.Windows.Forms.DataGridViewRow.CreateCells(DataGridView)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Clears the existing cells and sets their template according to the supplied <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> template."
  remarks: "This method clears the row&quot;s <xref:System.Windows.Forms.DataGridViewCellCollection> and reinitializes it with the <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> property of each column of the `dataGridView` parameter. As a result, the row adopts the appearance and behavior of a row from the `dataGridView` parameter."
  syntax:
    content: public void CreateCells (System.Windows.Forms.DataGridView dataGridView);
    parameters:
    - id: dataGridView
      type: System.Windows.Forms.DataGridView
      description: "A <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that acts as a template for cell styles."
  overload: System.Windows.Forms.DataGridViewRow.CreateCells*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataGridView</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A row that already belongs to the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> was added.       -or-       A column that has no cell template was added."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])
  id: CreateCells(System.Windows.Forms.DataGridView,System.Object[])
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: CreateCells(DataGridView,Object[])
  nameWithType: DataGridViewRow.CreateCells(DataGridView,Object[])
  fullName: System.Windows.Forms.DataGridViewRow.CreateCells(DataGridView,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Clears the existing cells and sets their template and values."
  remarks: "This method clears the row&quot;s <xref:System.Windows.Forms.DataGridViewCellCollection> and reinitializes it with the <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> property of each column of the `dataGridView` parameter. As a result, the row adopts the appearance and behavior of a row from the `dataGridView` parameter.       If there are more elements in the `values` array than cells to be initialized, the extra elements will be ignored. If there are fewer elements than required, the remaining unmatched cells will retain their default initial values."
  syntax:
    content: public void CreateCells (System.Windows.Forms.DataGridView dataGridView, object[] values);
    parameters:
    - id: dataGridView
      type: System.Windows.Forms.DataGridView
      description: "A <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that acts as a template for cell styles."
    - id: values
      type: System.Object[]
      description: "An array of objects that initialize the reset cells."
  overload: System.Windows.Forms.DataGridViewRow.CreateCells*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either of the parameters is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A row that already belongs to the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> was added.       -or-       A column that has no cell template was added."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.CreateCellsInstance
  id: CreateCellsInstance
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: CreateCellsInstance()
  nameWithType: DataGridViewRow.CreateCellsInstance()
  fullName: System.Windows.Forms.DataGridViewRow.CreateCellsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Constructs a new collection of cells based on this row."
  remarks: "This method creates an empty <xref:System.Windows.Forms.DataGridViewCellCollection> with the <xref:System.Windows.Forms.BaseCollection.Count%2A> property set to 0."
  syntax:
    content: protected virtual System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.DataGridViewCellCollection
      description: "The newly created <xref href=&quot;System.Windows.Forms.DataGridViewCellCollection&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.CreateCellsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.DataBoundItem
  id: DataBoundItem
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: DataBoundItem
  nameWithType: DataGridViewRow.DataBoundItem
  fullName: System.Windows.Forms.DataGridViewRow.DataBoundItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the data-bound object that populated the row."
  remarks: "Accessing data-bound objects directly through row objects is useful when you do not have direct access to the data source containing the objects. It is also convenient when you want to manipulate objects bound to selected rows or to rows passed as arguments to event handlers."
  example:
  - "The following code example demonstrates how to use the DataBoundItem property to access a business object bound to a row. This code example is part of a larger example provided in [How to: Access Objects Bound to Windows Forms DataGridView Rows](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Windows.Forms.DataGridViewObjectBinding#10](~/add/codesnippet/csharp/p-system.windows.forms.d_113_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/add/codesnippet/visualbasic/p-system.windows.forms.d_113_1.vb)]"
  syntax:
    content: public object DataBoundItem { get; }
    return:
      type: System.Object
      description: "The data-bound <xref:System.Object>."
  overload: System.Windows.Forms.DataGridViewRow.DataBoundItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.DefaultCellStyle
  id: DefaultCellStyle
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: DefaultCellStyle
  nameWithType: DataGridViewRow.DefaultCellStyle
  fullName: System.Windows.Forms.DataGridViewRow.DefaultCellStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the default styles for the row, which are used to render cells in the row unless the styles are overridden."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control displays its cells using the styles indicated by the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property, which inherits styles from other properties of type <xref:System.Windows.Forms.DataGridViewCellStyle>. For cells in this row, the styles specified through the DefaultCellStyle property override the styles specified through the <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=fullName>, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName>, <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=fullName> properties, but are overridden by the styles specified through the <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName> property.       For more information, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       When getting this property, a <xref:System.Windows.Forms.DataGridViewCellStyle> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <xref:System.Windows.Forms.DataGridViewCellStyle> to set this property for multiple rows. For more information, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates how to use this property in a <xref:System.Windows.Forms.DataGridView> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewCellStyle> class overview.  \n  \n [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/visualbasic/p-system.windows.forms.d_104_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewStyleDemo#20](~/add/codesnippet/csharp/p-system.windows.forms.d_104_1.cs)]"
  syntax:
    content: public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> to be applied as the default style."
  overload: System.Windows.Forms.DataGridViewRow.DefaultCellStyle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When setting this property, the row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Displayed
  id: Displayed
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Displayed
  nameWithType: DataGridViewRow.Displayed
  fullName: System.Windows.Forms.DataGridViewRow.Displayed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether this row is displayed on the screen."
  syntax:
    content: public override bool Displayed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is currently displayed on the screen; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Displayed*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.DividerHeight
  id: DividerHeight
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: DividerHeight
  nameWithType: DataGridViewRow.DividerHeight
  fullName: System.Windows.Forms.DataGridViewRow.DividerHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the height, in pixels, of the row divider."
  remarks: "This property is useful to provide a visual boundary between frozen rows and rows that can scroll. The extra edge is part of the current row, although it will take on the foreground color of the associated <xref:System.Windows.Forms.DataGridView>. The extra edge does not extend the area in which users can double-click to automatically resize a row. To resize a row, the user must double-click on the boundary between the divider and the adjacent row."
  example:
  - "The following code example modifies the height of a row's divider to provide emphasis.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/add/codesnippet/cpp/p-system.windows.forms.d_375_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#210](~/add/codesnippet/csharp/p-system.windows.forms.d_375_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#210](~/add/codesnippet/visualbasic/p-system.windows.forms.d_375_1.vb)]"
  syntax:
    content: public int DividerHeight { get; set; }
    return:
      type: System.Int32
      description: "The height, in pixels, of the divider (the row&quot;s bottom margin)."
  overload: System.Windows.Forms.DataGridViewRow.DividerHeight*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When setting this property, the row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)
  id: DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: DrawFocus(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,DataGridViewCellStyle,Boolean)
  nameWithType: DataGridViewRow.DrawFocus(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,DataGridViewCellStyle,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.DrawFocus(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,DataGridViewCellStyle,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws a focus rectangle around the specified bounds."
  remarks: "The `rowIndex` parameter is not used in the base-class implementation of the DrawFocus method, although it can be used when overriding this method in a derived class."
  syntax:
    content: protected virtual void DrawFocus (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be painted."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that contains the bounds of the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that is being painted."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell that is being painted."
    - id: rowState
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values that specifies the state of the row."
    - id: cellStyle
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "The <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> used to paint the focus rectangle."
    - id: cellsPaintSelectionBackground
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to use the <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor*> property of `cellStyle` as the color of the focus rectangle; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to use the <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor*> property of `cellStyle` as the color of the focus rectangle."
  overload: System.Windows.Forms.DataGridViewRow.DrawFocus*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row has not been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>cellStyle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.ErrorText
  id: ErrorText
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: ErrorText
  nameWithType: DataGridViewRow.ErrorText
  fullName: System.Windows.Forms.DataGridViewRow.ErrorText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the error message text for row-level errors."
  remarks: "Use this property to provide an error message for row-level errors. The specified message is displayed in a ToolTip when the user moves the mouse pointer over the error icon shown in the row header.       Starting with the .NET Framework 4.5.2, the error icon is resized according to the system DPI setting when the app.config file contains the following entry:      ```   <appSettings>     <add key=&quot;EnableWindowsFormsHighDpiAutoResizing&quot; value=&quot;true&quot; />   </appSettings>      ```       If this row is associated with a <xref:System.Windows.Forms.DataGridView> control, setting this property will raise the <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> event."
  example:
  - "The following code example demonstrates how to use the ErrorText property in a <xref:System.Windows.Forms.DataGridView.DataError> event handler. This example is part of a larger example available in the <xref:System.Windows.Forms.DataGridViewComboBoxColumn> class overview.  \n  \n [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/add/codesnippet/cpp/p-system.windows.forms.d_253_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/add/codesnippet/csharp/p-system.windows.forms.d_253_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/add/codesnippet/visualbasic/p-system.windows.forms.d_253_1.vb)]"
  syntax:
    content: public string ErrorText { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String> containing the error message."
  overload: System.Windows.Forms.DataGridViewRow.ErrorText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When getting the value of this property, the row is a shared row in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Frozen
  id: Frozen
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Frozen
  nameWithType: DataGridViewRow.Frozen
  fullName: System.Windows.Forms.DataGridViewRow.Frozen
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the row is frozen."
  remarks: "This property lets you keep one or several rows of important information in place when a user scrolls through the <xref:System.Windows.Forms.DataGridView>. All rows above the frozen row are also frozen."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.DataGridViewBand.Frozen%2A?displayProperty=fullName> property, which is nearly identical to the Frozen property of the <xref:System.Windows.Forms.DataGridViewRow> class. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewBand> class.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/add/codesnippet/cpp/p-system.windows.forms.d_323_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#7](~/add/codesnippet/csharp/p-system.windows.forms.d_323_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#7](~/add/codesnippet/visualbasic/p-system.windows.forms.d_323_1.vb)]"
  syntax:
    content: public override bool Frozen { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is frozen; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Frozen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)
  id: GetContextMenuStrip(System.Int32)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: GetContextMenuStrip(Int32)
  nameWithType: DataGridViewRow.GetContextMenuStrip(Int32)
  fullName: System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the shortcut menu for the row."
  remarks: "Pass the GetContextMenuStrip method the indexer you used to retrieve the <xref:System.Windows.Forms.DataGridViewRow>. Do not use the <xref:System.Windows.Forms.DataGridViewBand.Index%2A> property for the `rowIndex` parameter. If the row is shared, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> is -1, which is an invalid value for `rowIndex`."
  syntax:
    content: public System.Windows.Forms.ContextMenuStrip GetContextMenuStrip (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the current row."
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "A <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;></xref> that belongs to the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> at the specified index."
  overload: System.Windows.Forms.DataGridViewRow.GetContextMenuStrip*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>rowIndex</code> is -1."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>rowIndex</code> is less than zero or greater than or equal to the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)
  id: GetErrorText(System.Int32)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: GetErrorText(Int32)
  nameWithType: DataGridViewRow.GetErrorText(Int32)
  fullName: System.Windows.Forms.DataGridViewRow.GetErrorText(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the error text for the row at the specified index."
  remarks: "Pass the GetErrorText method the index you used to retrieve the <xref:System.Windows.Forms.DataGridViewRow>. Do not use the <xref:System.Windows.Forms.DataGridViewBand.Index%2A> property for the `rowIndex` parameter. If the row is shared, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> is -1, which is an invalid value for `rowIndex`. For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetErrorText (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row that contains the error."
    return:
      type: System.String
      description: "A string that describes the error of the row at the specified index."
  overload: System.Windows.Forms.DataGridViewRow.GetErrorText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row belongs to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and <code>rowIndex</code> is less than zero or greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  id: GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: GetPreferredHeight(Int32,DataGridViewAutoSizeRowMode,Boolean)
  nameWithType: DataGridViewRow.GetPreferredHeight(Int32,DataGridViewAutoSizeRowMode,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.GetPreferredHeight(Int32,DataGridViewAutoSizeRowMode,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calculates the ideal height of the specified row based on the specified criteria."
  remarks: "This property is used by the content-based automatic sizing feature of the <xref:System.Windows.Forms.DataGridView> control to determine the ideal height of a row. The `rowIndex` value lets you specify the actual row index of a shared row. (Shared rows have <xref:System.Windows.Forms.DataGridViewBand.Index%2A> property values of -1.)       A `fixedWidth` parameter value of `false` calculates the row height based on calculated column widths that will achieve ideal cell height-to-width ratios.       For cell contents to wrap onto multiple lines, the cell style in effect for the cell must have a <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> property value of <xref:System.Windows.Forms.DataGridViewTriState>.       For more information about automatic sizing, see [Sizing Options in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetPreferredHeight method to determine the new padding for a row that has been resized. This code example is part of a larger example provided in [How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/add/codesnippet/visualbasic/8a25382c-4c2a-40eb-ae44-_1.vb)]\n [!code-cs[System.Windows.Forms.DataGridViewRowPainting#40](~/add/codesnippet/csharp/8a25382c-4c2a-40eb-ae44-_1.cs)]"
  syntax:
    content: public virtual int GetPreferredHeight (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row whose preferred height is calculated."
    - id: autoSizeRowMode
      type: System.Windows.Forms.DataGridViewAutoSizeRowMode
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> that specifies an automatic sizing mode."
    - id: fixedWidth
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to calculate the preferred height for a fixed cell width; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "The ideal height of the row, in pixels."
  overload: System.Windows.Forms.DataGridViewRow.GetPreferredHeight*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>autoSizeRowMode</code> is not a valid <xref href=&quot;System.Windows.Forms.DataGridViewAutoSizeRowMode&quot;></xref> value."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>rowIndex</code> is not in the valid range of 0 to the number of rows in the control minus 1."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.GetState(System.Int32)
  id: GetState(System.Int32)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: GetState(Int32)
  nameWithType: DataGridViewRow.GetState(Int32)
  fullName: System.Windows.Forms.DataGridViewRow.GetState(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating the current state of the row."
  remarks: "This method is useful to determine the state of a shared row. Shared rows have <xref:System.Windows.Forms.DataGridViewBand.Index%2A> values of -1, which prevents you from using the <xref:System.Windows.Forms.DataGridViewRow.State%2A> property with shared rows. To use this method, pass in the actual row index. You can retrieve the actual index of a shared row by calling the <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> method."
  syntax:
    content: public virtual System.Windows.Forms.DataGridViewElementStates GetState (int rowIndex);
    parameters:
    - id: rowIndex
      type: System.Int32
      description: "The index of the row."
    return:
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values indicating the row state."
  overload: System.Windows.Forms.DataGridViewRow.GetState*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row has been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control, but the <code>rowIndex</code> value is not in the valid range of 0 to the number of rows in the control minus 1."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The row is not a shared row, but the <code>rowIndex</code> value does not match the row&quot;s <xref:System.Windows.Forms.DataGridViewBand.Index*> property value.       -or-       The row has not been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control, but the <code>rowIndex</code> value does not match the row&quot;s <xref:System.Windows.Forms.DataGridViewBand.Index*> property value."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.HeaderCell
  id: HeaderCell
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: HeaderCell
  nameWithType: DataGridViewRow.HeaderCell
  fullName: System.Windows.Forms.DataGridViewRow.HeaderCell
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the row&quot;s header cell."
  remarks: "The header cell of a row is typically used to display a row label. Users can also click the row header to select the row if the <xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=fullName> property is set to <xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName>."
  example:
  - "The following code example uses the HeaderCell property to label row headers.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/cpp/p-system.windows.forms.d_378_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/csharp/p-system.windows.forms.d_378_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/visualbasic/p-system.windows.forms.d_378_1.vb)]"
  syntax:
    content: public System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewRowHeaderCell
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewRowHeaderCell&quot;></xref> that represents the header cell of row."
  overload: System.Windows.Forms.DataGridViewRow.HeaderCell*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Height
  id: Height
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Height
  nameWithType: DataGridViewRow.Height
  fullName: System.Windows.Forms.DataGridViewRow.Height
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the current height of the row."
  remarks: "To set the minimum height for a row, use the <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> property."
  example:
  - "The following code example uses the Height property to set the height of the first row. This code example is part of a larger code example provided in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/add/codesnippet/cpp/p-system.windows.forms.d_288_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#208](~/add/codesnippet/csharp/p-system.windows.forms.d_288_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#208](~/add/codesnippet/visualbasic/p-system.windows.forms.d_288_1.vb)]"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "The height, in pixels, of the row. The default is the height of the default font plus 9 pixels."
  overload: System.Windows.Forms.DataGridViewRow.Height*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When setting this property, the row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.InheritedStyle
  id: InheritedStyle
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: InheritedStyle
  nameWithType: DataGridViewRow.InheritedStyle
  fullName: System.Windows.Forms.DataGridViewRow.InheritedStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the cell style in effect for the row."
  remarks: "This property is useful to determine which cell styles are applied to all cells in a row regardless of any column styles that are also applied to the cells. The row InheritedStyle property inherits its values from the following properties:      -   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>      -   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=fullName> (for rows with odd index number)      -   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=fullName>      -   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=fullName>       For more information about cell style inheritance, see [Cell Styles in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }
    return:
      type: System.Windows.Forms.DataGridViewCellStyle
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewCellStyle&quot;></xref> that specifies the formatting and style information for the cells in the row."
  overload: System.Windows.Forms.DataGridViewRow.InheritedStyle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.IsNewRow
  id: IsNewRow
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: IsNewRow
  nameWithType: DataGridViewRow.IsNewRow
  fullName: System.Windows.Forms.DataGridViewRow.IsNewRow
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the row is the row for new records."
  remarks: "Because the row for new records is in the <xref:System.Windows.Forms.DataGridView.Rows%2A> collection, use the IsNewRow property to determine whether a row is the row for new records or is a populated row.       A row stops being the new row when data entry into the row begins."
  example:
  - "The following code example uses the IsNewRow property to prevent attempts to set the label of the row for new records.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/cpp/p-system.windows.forms.d_391_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/csharp/p-system.windows.forms.d_391_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/add/codesnippet/visualbasic/p-system.windows.forms.d_391_1.vb)]"
  syntax:
    content: public bool IsNewRow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is the last row in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>, which is used for the entry of a new row of data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.IsNewRow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.MinimumHeight
  id: MinimumHeight
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: MinimumHeight
  nameWithType: DataGridViewRow.MinimumHeight
  fullName: System.Windows.Forms.DataGridViewRow.MinimumHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the minimum height of the row."
  remarks: "The MinimumHeight property maintains the display of the row by setting a limit to how far the user can resize the row&quot;s height through the user interface (UI)."
  example:
  - "The following code example uses the MinimumHeight property to set the minimum height of the second row. This code example is part of a larger code example provided in [How to: Manipulate Rows in the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/add/codesnippet/cpp/p-system.windows.forms.d_418_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#207](~/add/codesnippet/csharp/p-system.windows.forms.d_418_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#207](~/add/codesnippet/visualbasic/p-system.windows.forms.d_418_1.vb)]"
  syntax:
    content: public int MinimumHeight { get; set; }
    return:
      type: System.Int32
      description: "The minimum row height in pixels, ranging from 2 to &lt;xref:System.Int32?displayProperty=fullName&gt;. The default is 3."
  overload: System.Windows.Forms.DataGridViewRow.MinimumHeight*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "When setting this property, the row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value when setting this property is less than 2."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)
  id: Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean)
  nameWithType: DataGridViewRow.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the current row."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control calls this method to paint the row.       Calling this method raises the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=fullName> event. If a handler for the event does not set the <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=fullName> property to `true`, this method also calls the <xref:System.Windows.Forms.DataGridViewRow.PaintHeader%2A> and <xref:System.Windows.Forms.DataGridViewRow.PaintCells%2A> methods and raises the <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=fullName> event."
  syntax:
    content: protected virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be painted."
    - id: rowBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that contains the bounds of the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that is being painted."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell that is being painted."
    - id: rowState
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values that specifies the state of the row."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate whether the current row is the first row displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isLastVisibleRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate whether the current row is the last row in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that has the <xref:System.Windows.Forms.DataGridViewRow.Visible*> property set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Paint*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row has not been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control.       -or-       The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and <code>rowIndex</code> is less than zero or greater than the number of rows in the control minus one."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  id: PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: PaintCells(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  nameWithType: DataGridViewRow.PaintCells(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  fullName: System.Windows.Forms.DataGridViewRow.PaintCells(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the cells in the current row."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control calls this method to paint the cells in the row except when a handler for the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=fullName> event sets the <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=fullName> property to `true`. For more information, see <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>."
  syntax:
    content: protected virtual void PaintCells (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be painted."
    - id: rowBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that contains the bounds of the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that is being painted."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell that is being painted."
    - id: rowState
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values that specifies the state of the row."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate whether the current row is the first row displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isLastVisibleRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate whether the current row is the last row in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that has the <xref:System.Windows.Forms.DataGridViewRow.Visible*> property set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: paintParts
      type: System.Windows.Forms.DataGridViewPaintParts
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewPaintParts&quot;></xref> values indicating the parts of the cells to paint."
  overload: System.Windows.Forms.DataGridViewRow.PaintCells*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row has not been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>paintParts</code> in not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewPaintParts&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  id: PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: PaintHeader(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  nameWithType: DataGridViewRow.PaintHeader(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  fullName: System.Windows.Forms.DataGridViewRow.PaintHeader(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Paints the header cell of the current row."
  remarks: "The <xref:System.Windows.Forms.DataGridView> control calls this method to paint the row header except when a handler for the <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=fullName> event sets the <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=fullName> property to `true`. For more information, see <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>."
  syntax:
    content: protected virtual void PaintHeader (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to paint the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref>."
    - id: clipBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the area of the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that needs to be painted."
    - id: rowBounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that contains the bounds of the <xref href=&quot;System.Windows.Forms.DataGridViewRow&quot;></xref> that is being painted."
    - id: rowIndex
      type: System.Int32
      description: "The row index of the cell that is being painted."
    - id: rowState
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values that specifies the state of the row."
    - id: isFirstDisplayedRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the current row is the first row displayed in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isLastVisibleRow
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the current row is the last row in the <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> that has the <xref:System.Windows.Forms.DataGridViewRow.Visible*> property set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: paintParts
      type: System.Windows.Forms.DataGridViewPaintParts
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewPaintParts&quot;></xref> values indicating the parts of the cells to paint."
  overload: System.Windows.Forms.DataGridViewRow.PaintHeader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row has not been added to a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>paintParts</code> in not a valid bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewPaintParts&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.ReadOnly
  id: ReadOnly
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DataGridViewRow.ReadOnly
  fullName: System.Windows.Forms.DataGridViewRow.ReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the row is read-only."
  remarks: "The ReadOnly property affects the <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A?displayProperty=fullName> property of each cell in the row.       Setting this property has no effect if the value of the <xref:System.Windows.Forms.DataGridView.ReadOnly%2A?displayProperty=fullName> property is `true`."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.DataGridViewBand.ReadOnly%2A?displayProperty=fullName> property, which is nearly identical to the ReadOnly property of the <xref:System.Windows.Forms.DataGridViewRow> class. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewBand> class.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/add/codesnippet/cpp/p-system.windows.forms.d_234_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#11](~/add/codesnippet/csharp/p-system.windows.forms.d_234_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#11](~/add/codesnippet/visualbasic/p-system.windows.forms.d_234_1.vb)]"
  syntax:
    content: public override bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.ReadOnly*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Resizable
  id: Resizable
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Resizable
  nameWithType: DataGridViewRow.Resizable
  fullName: System.Windows.Forms.DataGridViewRow.Resizable
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether users can resize the row or indicating that the behavior is inherited from the &lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=fullName&gt; property."
  remarks: "You cannot use this property with a shared row. For more information about shared rows, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md).       If the Resizable property is <xref:System.Windows.Forms.DataGridViewTriState>, the user will not be able to manually adjust the row height.       By default, the Resizable property value is based on the <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=fullName> property value. If you explicitly set Resizable to <xref:System.Windows.Forms.DataGridViewTriState> or <xref:System.Windows.Forms.DataGridViewTriState>, however, the control value is ignored. Set Resizable to <xref:System.Windows.Forms.DataGridViewTriState> to restore the value-inheritance behavior.       Because <xref:System.Windows.Forms.DataGridViewTriState> restores the value inheritance, the Resizable property will never return a <xref:System.Windows.Forms.DataGridViewTriState> value unless the row has not been added to a <xref:System.Windows.Forms.DataGridView> control. If you need to determine whether the Resizable property value of a row is inherited or has been specified explicitly, check its <xref:System.Windows.Forms.DataGridViewElement.State%2A> property. If the <xref:System.Windows.Forms.DataGridViewElement.State%2A> value includes the <xref:System.Windows.Forms.DataGridViewElementStates> flag, the Resizable property value is not inherited."
  example:
  - "The following code example illustrates the use of this property.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/add/codesnippet/cpp/p-system.windows.forms.d_196_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/add/codesnippet/csharp/p-system.windows.forms.d_196_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/add/codesnippet/visualbasic/p-system.windows.forms.d_196_1.vb)]"
  syntax:
    content: public override System.Windows.Forms.DataGridViewTriState Resizable { get; set; }
    return:
      type: System.Windows.Forms.DataGridViewTriState
      description: "A <xref href=&quot;System.Windows.Forms.DataGridViewTriState&quot;></xref> value that indicates whether the row can be resized or whether it can be resized only when the &lt;xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=fullName&gt; property is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Resizable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Selected
  id: Selected
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Selected
  nameWithType: DataGridViewRow.Selected
  fullName: System.Windows.Forms.DataGridViewRow.Selected
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the row is selected."
  remarks: "You cannot use this property with a shared row. For more information about shared rows, see [Best Practices for Scaling the Windows Forms DataGridView Control](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example illustrates the use of this property.  \n  \n [!code-cs[System.Windows.Forms.DataGridViewSelectedCollections#05](~/add/codesnippet/csharp/p-system.windows.forms.d_6_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/add/codesnippet/visualbasic/p-system.windows.forms.d_6_1.vb)]"
  syntax:
    content: public override bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is selected; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Selected*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])
  id: SetValues(System.Object[])
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: SetValues(Object[])
  nameWithType: DataGridViewRow.SetValues(Object[])
  fullName: System.Windows.Forms.DataGridViewRow.SetValues(Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the values of the row&quot;s cells."
  remarks: "The `values` parameter represents a variable number of arguments used to populate cell values in the row. These values can be passed to this method as multiple, individual arguments or as members of a single <xref:System.Array>. Because the values are expected to be instances of type <xref:System.Object>, however, if you pass in an array of value-type values (such as <xref:System.Int32> values), this method will treat the array as a single object and assign it to a single cell. To avoid this behavior, you must cast a value-type array to an <xref:System.Object> array or pass in multiple values as multiple arguments.       If there are more values in the `values` list than there are cells to be initialized, this method ignores the extra values and returns `false`. This method also returns `false` if any of the specified values cannot be set.       If there are fewer values than there are cells, the remaining unmatched cells retain their current values."
  syntax:
    content: public bool SetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "One or more objects that represent the cell values in the row.       -or-       An <xref:System.Array> of <xref:System.Object> values."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if all values have been set; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.SetValues*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>values</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "This method is called when the associated <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> is operating in virtual mode.       -or-       This row is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.State
  id: State
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: State
  nameWithType: DataGridViewRow.State
  fullName: System.Windows.Forms.DataGridViewRow.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the current state of the row."
  remarks: "You cannot use this property with shared rows because shared rows do not store their state locally. To get the state of a shared row, use the <xref:System.Windows.Forms.DataGridViewRow.GetState%2A> method."
  syntax:
    content: public override System.Windows.Forms.DataGridViewElementStates State { get; }
    return:
      type: System.Windows.Forms.DataGridViewElementStates
      description: "A bitwise combination of <xref href=&quot;System.Windows.Forms.DataGridViewElementStates&quot;></xref> values indicating the row state."
  overload: System.Windows.Forms.DataGridViewRow.State*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.ToString
  id: ToString
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: ToString()
  nameWithType: DataGridViewRow.ToString()
  fullName: System.Windows.Forms.DataGridViewRow.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a human-readable string that describes the row."
  remarks: "This overridden version of the ToString method supplies the class name and the <xref:System.Windows.Forms.DataGridViewBand.Index%2A> information for this instance of the <xref:System.Windows.Forms.DataGridViewRow> class."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> that describes this row."
  overload: System.Windows.Forms.DataGridViewRow.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataGridViewRow.Visible
  id: Visible
  parent: System.Windows.Forms.DataGridViewRow
  langs:
  - csharp
  name: Visible
  nameWithType: DataGridViewRow.Visible
  fullName: System.Windows.Forms.DataGridViewRow.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the row is visible."
  remarks: "Use this property to hide a row from view while keeping the row in the <xref:System.Windows.Forms.DataGridView>. To completely remove a row, use the <xref:System.Windows.Forms.DataGridViewRowCollection.Remove%2A?displayProperty=fullName> method."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.DataGridViewBand.Visible%2A?displayProperty=fullName> property, which is nearly identical to the Visible property of the <xref:System.Windows.Forms.DataGridViewRow> class. This code example is part of a larger example provided for the <xref:System.Windows.Forms.DataGridViewBand> class.  \n  \n [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/add/codesnippet/cpp/p-system.windows.forms.d_260_1.cpp)]\n [!code-cs[System.Windows.Forms.DataGridView.ButtonDemos#9](~/add/codesnippet/csharp/p-system.windows.forms.d_260_1.cs)]\n [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#9](~/add/codesnippet/visualbasic/p-system.windows.forms.d_260_1.vb)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the row is visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.DataGridViewRow.Visible*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The row is in a <xref href=&quot;System.Windows.Forms.DataGridView&quot;></xref> control and is a shared row."
  platform:
  - net462
references:
- uid: System.Windows.Forms.DataGridViewBand
  isExternal: false
  name: System.Windows.Forms.DataGridViewBand
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.DataGridViewRow.#ctor
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DataGridViewRow()
  nameWithType: DataGridViewRow.DataGridViewRow()
  fullName: System.Windows.Forms.DataGridViewRow.DataGridViewRow()
- uid: System.Windows.Forms.DataGridViewRow.AccessibilityObject
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: AccessibilityObject
  nameWithType: DataGridViewRow.AccessibilityObject
  fullName: System.Windows.Forms.DataGridViewRow.AccessibilityObject
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: AdjustRowHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  nameWithType: DataGridViewRow.AdjustRowHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridViewAdvancedBorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAdvancedBorderStyle
  nameWithType: DataGridViewAdvancedBorderStyle
  fullName: System.Windows.Forms.DataGridViewAdvancedBorderStyle
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataGridViewRow.Cells
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Cells
  nameWithType: DataGridViewRow.Cells
  fullName: System.Windows.Forms.DataGridViewRow.Cells
- uid: System.Windows.Forms.DataGridViewCellCollection
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellCollection
  nameWithType: DataGridViewCellCollection
  fullName: System.Windows.Forms.DataGridViewCellCollection
- uid: System.Windows.Forms.DataGridViewRow.Clone
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Clone()
  nameWithType: DataGridViewRow.Clone()
  fullName: System.Windows.Forms.DataGridViewRow.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.DataGridViewRow.ContextMenuStrip
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ContextMenuStrip
  nameWithType: DataGridViewRow.ContextMenuStrip
  fullName: System.Windows.Forms.DataGridViewRow.ContextMenuStrip
- uid: System.Windows.Forms.ContextMenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenuStrip
  nameWithType: ContextMenuStrip
  fullName: System.Windows.Forms.ContextMenuStrip
- uid: System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateAccessibilityInstance()
  nameWithType: DataGridViewRow.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance()
- uid: System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateCells(DataGridView)
  nameWithType: DataGridViewRow.CreateCells(DataGridView)
  fullName: System.Windows.Forms.DataGridViewRow.CreateCells(DataGridView)
- uid: System.Windows.Forms.DataGridView
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridView
  nameWithType: DataGridView
  fullName: System.Windows.Forms.DataGridView
- uid: System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateCells(DataGridView,Object[])
  nameWithType: DataGridViewRow.CreateCells(DataGridView,Object[])
  fullName: System.Windows.Forms.DataGridViewRow.CreateCells(DataGridView,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.DataGridViewRow.CreateCellsInstance
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateCellsInstance()
  nameWithType: DataGridViewRow.CreateCellsInstance()
  fullName: System.Windows.Forms.DataGridViewRow.CreateCellsInstance()
- uid: System.Windows.Forms.DataGridViewRow.DataBoundItem
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DataBoundItem
  nameWithType: DataGridViewRow.DataBoundItem
  fullName: System.Windows.Forms.DataGridViewRow.DataBoundItem
- uid: System.Windows.Forms.DataGridViewRow.DefaultCellStyle
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DefaultCellStyle
  nameWithType: DataGridViewRow.DefaultCellStyle
  fullName: System.Windows.Forms.DataGridViewRow.DefaultCellStyle
- uid: System.Windows.Forms.DataGridViewCellStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewCellStyle
  nameWithType: DataGridViewCellStyle
  fullName: System.Windows.Forms.DataGridViewCellStyle
- uid: System.Windows.Forms.DataGridViewRow.Displayed
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Displayed
  nameWithType: DataGridViewRow.Displayed
  fullName: System.Windows.Forms.DataGridViewRow.Displayed
- uid: System.Windows.Forms.DataGridViewRow.DividerHeight
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DividerHeight
  nameWithType: DataGridViewRow.DividerHeight
  fullName: System.Windows.Forms.DataGridViewRow.DividerHeight
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DrawFocus(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,DataGridViewCellStyle,Boolean)
  nameWithType: DataGridViewRow.DrawFocus(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,DataGridViewCellStyle,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.DrawFocus(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,DataGridViewCellStyle,Boolean)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.DataGridViewElementStates
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewElementStates
  nameWithType: DataGridViewElementStates
  fullName: System.Windows.Forms.DataGridViewElementStates
- uid: System.Windows.Forms.DataGridViewRow.ErrorText
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ErrorText
  nameWithType: DataGridViewRow.ErrorText
  fullName: System.Windows.Forms.DataGridViewRow.ErrorText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.DataGridViewRow.Frozen
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Frozen
  nameWithType: DataGridViewRow.Frozen
  fullName: System.Windows.Forms.DataGridViewRow.Frozen
- uid: System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetContextMenuStrip(Int32)
  nameWithType: DataGridViewRow.GetContextMenuStrip(Int32)
  fullName: System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(Int32)
- uid: System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetErrorText(Int32)
  nameWithType: DataGridViewRow.GetErrorText(Int32)
  fullName: System.Windows.Forms.DataGridViewRow.GetErrorText(Int32)
- uid: System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetPreferredHeight(Int32,DataGridViewAutoSizeRowMode,Boolean)
  nameWithType: DataGridViewRow.GetPreferredHeight(Int32,DataGridViewAutoSizeRowMode,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.GetPreferredHeight(Int32,DataGridViewAutoSizeRowMode,Boolean)
- uid: System.Windows.Forms.DataGridViewAutoSizeRowMode
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewAutoSizeRowMode
  nameWithType: DataGridViewAutoSizeRowMode
  fullName: System.Windows.Forms.DataGridViewAutoSizeRowMode
- uid: System.Windows.Forms.DataGridViewRow.GetState(System.Int32)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetState(Int32)
  nameWithType: DataGridViewRow.GetState(Int32)
  fullName: System.Windows.Forms.DataGridViewRow.GetState(Int32)
- uid: System.Windows.Forms.DataGridViewRow.HeaderCell
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: HeaderCell
  nameWithType: DataGridViewRow.HeaderCell
  fullName: System.Windows.Forms.DataGridViewRow.HeaderCell
- uid: System.Windows.Forms.DataGridViewRowHeaderCell
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewRowHeaderCell
  nameWithType: DataGridViewRowHeaderCell
  fullName: System.Windows.Forms.DataGridViewRowHeaderCell
- uid: System.Windows.Forms.DataGridViewRow.Height
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Height
  nameWithType: DataGridViewRow.Height
  fullName: System.Windows.Forms.DataGridViewRow.Height
- uid: System.Windows.Forms.DataGridViewRow.InheritedStyle
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: InheritedStyle
  nameWithType: DataGridViewRow.InheritedStyle
  fullName: System.Windows.Forms.DataGridViewRow.InheritedStyle
- uid: System.Windows.Forms.DataGridViewRow.IsNewRow
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: IsNewRow
  nameWithType: DataGridViewRow.IsNewRow
  fullName: System.Windows.Forms.DataGridViewRow.IsNewRow
- uid: System.Windows.Forms.DataGridViewRow.MinimumHeight
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: MinimumHeight
  nameWithType: DataGridViewRow.MinimumHeight
  fullName: System.Windows.Forms.DataGridViewRow.MinimumHeight
- uid: System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean)
  nameWithType: DataGridViewRow.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean)
  fullName: System.Windows.Forms.DataGridViewRow.Paint(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean)
- uid: System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: PaintCells(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  nameWithType: DataGridViewRow.PaintCells(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  fullName: System.Windows.Forms.DataGridViewRow.PaintCells(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
- uid: System.Windows.Forms.DataGridViewPaintParts
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewPaintParts
  nameWithType: DataGridViewPaintParts
  fullName: System.Windows.Forms.DataGridViewPaintParts
- uid: System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: PaintHeader(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  nameWithType: DataGridViewRow.PaintHeader(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
  fullName: System.Windows.Forms.DataGridViewRow.PaintHeader(Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,Boolean,Boolean,DataGridViewPaintParts)
- uid: System.Windows.Forms.DataGridViewRow.ReadOnly
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ReadOnly
  nameWithType: DataGridViewRow.ReadOnly
  fullName: System.Windows.Forms.DataGridViewRow.ReadOnly
- uid: System.Windows.Forms.DataGridViewRow.Resizable
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Resizable
  nameWithType: DataGridViewRow.Resizable
  fullName: System.Windows.Forms.DataGridViewRow.Resizable
- uid: System.Windows.Forms.DataGridViewTriState
  parent: System.Windows.Forms
  isExternal: false
  name: DataGridViewTriState
  nameWithType: DataGridViewTriState
  fullName: System.Windows.Forms.DataGridViewTriState
- uid: System.Windows.Forms.DataGridViewRow.Selected
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Selected
  nameWithType: DataGridViewRow.Selected
  fullName: System.Windows.Forms.DataGridViewRow.Selected
- uid: System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: SetValues(Object[])
  nameWithType: DataGridViewRow.SetValues(Object[])
  fullName: System.Windows.Forms.DataGridViewRow.SetValues(Object[])
- uid: System.Windows.Forms.DataGridViewRow.State
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: State
  nameWithType: DataGridViewRow.State
  fullName: System.Windows.Forms.DataGridViewRow.State
- uid: System.Windows.Forms.DataGridViewRow.ToString
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ToString()
  nameWithType: DataGridViewRow.ToString()
  fullName: System.Windows.Forms.DataGridViewRow.ToString()
- uid: System.Windows.Forms.DataGridViewRow.Visible
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Visible
  nameWithType: DataGridViewRow.Visible
  fullName: System.Windows.Forms.DataGridViewRow.Visible
- uid: System.Windows.Forms.DataGridViewRow.#ctor*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DataGridViewRow
  nameWithType: DataGridViewRow.DataGridViewRow
- uid: System.Windows.Forms.DataGridViewRow.AccessibilityObject*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: AccessibilityObject
  nameWithType: DataGridViewRow.AccessibilityObject
- uid: System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: AdjustRowHeaderBorderStyle
  nameWithType: DataGridViewRow.AdjustRowHeaderBorderStyle
- uid: System.Windows.Forms.DataGridViewRow.Cells*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Cells
  nameWithType: DataGridViewRow.Cells
- uid: System.Windows.Forms.DataGridViewRow.Clone*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Clone
  nameWithType: DataGridViewRow.Clone
- uid: System.Windows.Forms.DataGridViewRow.ContextMenuStrip*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ContextMenuStrip
  nameWithType: DataGridViewRow.ContextMenuStrip
- uid: System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateAccessibilityInstance
  nameWithType: DataGridViewRow.CreateAccessibilityInstance
- uid: System.Windows.Forms.DataGridViewRow.CreateCells*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateCells
  nameWithType: DataGridViewRow.CreateCells
- uid: System.Windows.Forms.DataGridViewRow.CreateCellsInstance*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: CreateCellsInstance
  nameWithType: DataGridViewRow.CreateCellsInstance
- uid: System.Windows.Forms.DataGridViewRow.DataBoundItem*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DataBoundItem
  nameWithType: DataGridViewRow.DataBoundItem
- uid: System.Windows.Forms.DataGridViewRow.DefaultCellStyle*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DefaultCellStyle
  nameWithType: DataGridViewRow.DefaultCellStyle
- uid: System.Windows.Forms.DataGridViewRow.Displayed*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Displayed
  nameWithType: DataGridViewRow.Displayed
- uid: System.Windows.Forms.DataGridViewRow.DividerHeight*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DividerHeight
  nameWithType: DataGridViewRow.DividerHeight
- uid: System.Windows.Forms.DataGridViewRow.DrawFocus*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: DrawFocus
  nameWithType: DataGridViewRow.DrawFocus
- uid: System.Windows.Forms.DataGridViewRow.ErrorText*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ErrorText
  nameWithType: DataGridViewRow.ErrorText
- uid: System.Windows.Forms.DataGridViewRow.Frozen*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Frozen
  nameWithType: DataGridViewRow.Frozen
- uid: System.Windows.Forms.DataGridViewRow.GetContextMenuStrip*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetContextMenuStrip
  nameWithType: DataGridViewRow.GetContextMenuStrip
- uid: System.Windows.Forms.DataGridViewRow.GetErrorText*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetErrorText
  nameWithType: DataGridViewRow.GetErrorText
- uid: System.Windows.Forms.DataGridViewRow.GetPreferredHeight*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetPreferredHeight
  nameWithType: DataGridViewRow.GetPreferredHeight
- uid: System.Windows.Forms.DataGridViewRow.GetState*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: GetState
  nameWithType: DataGridViewRow.GetState
- uid: System.Windows.Forms.DataGridViewRow.HeaderCell*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: HeaderCell
  nameWithType: DataGridViewRow.HeaderCell
- uid: System.Windows.Forms.DataGridViewRow.Height*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Height
  nameWithType: DataGridViewRow.Height
- uid: System.Windows.Forms.DataGridViewRow.InheritedStyle*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: InheritedStyle
  nameWithType: DataGridViewRow.InheritedStyle
- uid: System.Windows.Forms.DataGridViewRow.IsNewRow*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: IsNewRow
  nameWithType: DataGridViewRow.IsNewRow
- uid: System.Windows.Forms.DataGridViewRow.MinimumHeight*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: MinimumHeight
  nameWithType: DataGridViewRow.MinimumHeight
- uid: System.Windows.Forms.DataGridViewRow.Paint*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Paint
  nameWithType: DataGridViewRow.Paint
- uid: System.Windows.Forms.DataGridViewRow.PaintCells*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: PaintCells
  nameWithType: DataGridViewRow.PaintCells
- uid: System.Windows.Forms.DataGridViewRow.PaintHeader*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: PaintHeader
  nameWithType: DataGridViewRow.PaintHeader
- uid: System.Windows.Forms.DataGridViewRow.ReadOnly*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ReadOnly
  nameWithType: DataGridViewRow.ReadOnly
- uid: System.Windows.Forms.DataGridViewRow.Resizable*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Resizable
  nameWithType: DataGridViewRow.Resizable
- uid: System.Windows.Forms.DataGridViewRow.Selected*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Selected
  nameWithType: DataGridViewRow.Selected
- uid: System.Windows.Forms.DataGridViewRow.SetValues*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: SetValues
  nameWithType: DataGridViewRow.SetValues
- uid: System.Windows.Forms.DataGridViewRow.State*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: State
  nameWithType: DataGridViewRow.State
- uid: System.Windows.Forms.DataGridViewRow.ToString*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: ToString
  nameWithType: DataGridViewRow.ToString
- uid: System.Windows.Forms.DataGridViewRow.Visible*
  parent: System.Windows.Forms.DataGridViewRow
  isExternal: false
  name: Visible
  nameWithType: DataGridViewRow.Visible
