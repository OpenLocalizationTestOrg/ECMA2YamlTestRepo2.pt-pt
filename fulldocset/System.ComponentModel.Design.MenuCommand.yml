### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.MenuCommand
  id: MenuCommand
  children:
  - System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.MenuCommand.Checked
  - System.ComponentModel.Design.MenuCommand.CommandChanged
  - System.ComponentModel.Design.MenuCommand.CommandID
  - System.ComponentModel.Design.MenuCommand.Enabled
  - System.ComponentModel.Design.MenuCommand.Invoke
  - System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  - System.ComponentModel.Design.MenuCommand.OleStatus
  - System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  - System.ComponentModel.Design.MenuCommand.Properties
  - System.ComponentModel.Design.MenuCommand.Supported
  - System.ComponentModel.Design.MenuCommand.ToString
  - System.ComponentModel.Design.MenuCommand.Visible
  langs:
  - csharp
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
  type: Class
  summary: "Represents a Windows menu or toolbar command item."
  remarks: "The MenuCommand class represents information about a Windows menu or toolbar command. The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add MenuCommand objects to the Visual Studio menu.       This class provides the following members:      -   An event-handler property to which you can attach an event handler for the command.      -   A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.      -   An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.      -   An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.      -   Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.      -   An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.      -   An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method."
  example:
  - "The following code example creates a MenuCommand object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio. Press the F1 key to invoke the MenuCommand.  \n  \n [!code-cpp[MenuCommand Example#10](~/add/codesnippet/cpp/t-system.componentmodel._8_1.cpp)]\n [!code-cs[MenuCommand Example#10](~/add/codesnippet/csharp/t-system.componentmodel._8_1.cs)]\n [!code-vb[MenuCommand Example#10](~/add/codesnippet/visualbasic/t-system.componentmodel._8_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MenuCommand
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  id: '#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)'
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/0d01c3a9-eede-4f5b-b9c2-_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/0d01c3a9-eede-4f5b-b9c2-_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/0d01c3a9-eede-4f5b-b9c2-_1.vb)]"
  syntax:
    content: public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);
    parameters:
    - id: handler
      type: System.EventHandler
      description: "The event to raise when the user selects the menu item or toolbar button."
    - id: command
      type: System.ComponentModel.Design.CommandID
      description: "The unique command ID that links this menu command to the environment&quot;s menu."
  overload: System.ComponentModel.Design.MenuCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Checked
  id: Checked
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets or sets a value indicating whether this menu item is checked."
  syntax:
    content: public virtual bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the item is checked; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.MenuCommand.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  id: CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Occurs when the menu command changes."
  remarks: "A command can change if it becomes checked or disabled."
  syntax:
    content: public event EventHandler CommandChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  id: CommandID
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the <xref href=&quot;System.ComponentModel.Design.CommandID&quot;></xref> associated with this menu command."
  syntax:
    content: public virtual System.ComponentModel.Design.CommandID CommandID { get; }
    return:
      type: System.ComponentModel.Design.CommandID
      description: "The <xref href=&quot;System.ComponentModel.Design.CommandID&quot;></xref> associated with the menu command."
  overload: System.ComponentModel.Design.MenuCommand.CommandID*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  id: Enabled
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets a value indicating whether this menu item is available."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._15_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._15_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._15_1.vb)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the item is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.MenuCommand.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Invokes the command."
  syntax:
    content: public virtual void Invoke ();
    parameters: []
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  id: Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Invokes the command with the given parameter."
  syntax:
    content: public virtual void Invoke (object arg);
    parameters:
    - id: arg
      type: System.Object
      description: "An optional argument for use by the command."
  overload: System.ComponentModel.Design.MenuCommand.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  id: OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the OLE command status code for this menu item."
  syntax:
    content: public virtual int OleStatus { get; }
    return:
      type: System.Int32
      description: "An integer containing a mixture of status flags that reflect the state of this menu item."
  overload: System.ComponentModel.Design.MenuCommand.OleStatus*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  id: OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Raises the <xref href=&quot;System.ComponentModel.Design.MenuCommand.CommandChanged&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnCommandChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnCommandChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Properties
  id: Properties
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets the public properties associated with the <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref>."
  remarks: "All menu commands store their public properties in the Properties collection. The key in the properties dictionary is the property name. This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition."
  syntax:
    content: public virtual System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "An <xref:System.Collections.IDictionary> containing the public properties of the <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref>."
  overload: System.ComponentModel.Design.MenuCommand.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Supported
  id: Supported
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets or sets a value indicating whether this menu item is supported."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._20_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._20_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._20_1.vb)]"
  syntax:
    content: public virtual bool Supported { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the item is supported, which is the default; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.MenuCommand.Supported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.ToString
  id: ToString
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Returns a string representation of this menu command."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string containing the value of the <xref:System.ComponentModel.Design.MenuCommand.CommandID*> property appended with the names of any flags that are set, separated by pipe bars (|). These flag properties include <xref:System.ComponentModel.Design.MenuCommand.Checked*>, <xref:System.ComponentModel.Design.MenuCommand.Enabled*>, <xref:System.ComponentModel.Design.MenuCommand.Supported*>, and <xref:System.ComponentModel.Design.MenuCommand.Visible*>."
  overload: System.ComponentModel.Design.MenuCommand.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.MenuCommand.Visible
  id: Visible
  parent: System.ComponentModel.Design.MenuCommand
  langs:
  - csharp
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Gets or sets a value indicating whether this menu item is visible."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/p-system.componentmodel._26_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/p-system.componentmodel._26_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._26_1.vb)]"
  syntax:
    content: public virtual bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the item is visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.MenuCommand.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand(EventHandler,CommandID)
  nameWithType: MenuCommand.MenuCommand(EventHandler,CommandID)
  fullName: System.ComponentModel.Design.MenuCommand.MenuCommand(EventHandler,CommandID)
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Checked
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
  fullName: System.ComponentModel.Design.MenuCommand.Checked
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.MenuCommand.CommandChanged
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandChanged
  nameWithType: MenuCommand.CommandChanged
  fullName: System.ComponentModel.Design.MenuCommand.CommandChanged
- uid: System.ComponentModel.Design.MenuCommand.CommandID
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
  fullName: System.ComponentModel.Design.MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
  fullName: System.ComponentModel.Design.MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke()
  nameWithType: MenuCommand.Invoke()
  fullName: System.ComponentModel.Design.MenuCommand.Invoke()
- uid: System.ComponentModel.Design.MenuCommand.Invoke(System.Object)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke(Object)
  nameWithType: MenuCommand.Invoke(Object)
  fullName: System.ComponentModel.Design.MenuCommand.Invoke(Object)
- uid: System.ComponentModel.Design.MenuCommand.OleStatus
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
  fullName: System.ComponentModel.Design.MenuCommand.OleStatus
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged(EventArgs)
  nameWithType: MenuCommand.OnCommandChanged(EventArgs)
  fullName: System.ComponentModel.Design.MenuCommand.OnCommandChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.MenuCommand.Properties
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
  fullName: System.ComponentModel.Design.MenuCommand.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.MenuCommand.Supported
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
  fullName: System.ComponentModel.Design.MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString()
  nameWithType: MenuCommand.ToString()
  fullName: System.ComponentModel.Design.MenuCommand.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.MenuCommand.Visible
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
  fullName: System.ComponentModel.Design.MenuCommand.Visible
- uid: System.ComponentModel.Design.MenuCommand.#ctor*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand.MenuCommand
- uid: System.ComponentModel.Design.MenuCommand.Checked*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Checked
  nameWithType: MenuCommand.Checked
- uid: System.ComponentModel.Design.MenuCommand.CommandID*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: CommandID
  nameWithType: MenuCommand.CommandID
- uid: System.ComponentModel.Design.MenuCommand.Enabled*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Enabled
  nameWithType: MenuCommand.Enabled
- uid: System.ComponentModel.Design.MenuCommand.Invoke*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Invoke
  nameWithType: MenuCommand.Invoke
- uid: System.ComponentModel.Design.MenuCommand.OleStatus*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OleStatus
  nameWithType: MenuCommand.OleStatus
- uid: System.ComponentModel.Design.MenuCommand.OnCommandChanged*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: OnCommandChanged
  nameWithType: MenuCommand.OnCommandChanged
- uid: System.ComponentModel.Design.MenuCommand.Properties*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Properties
  nameWithType: MenuCommand.Properties
- uid: System.ComponentModel.Design.MenuCommand.Supported*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Supported
  nameWithType: MenuCommand.Supported
- uid: System.ComponentModel.Design.MenuCommand.ToString*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: ToString
  nameWithType: MenuCommand.ToString
- uid: System.ComponentModel.Design.MenuCommand.Visible*
  parent: System.ComponentModel.Design.MenuCommand
  isExternal: false
  name: Visible
  nameWithType: MenuCommand.Visible
