### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.UserPrincipal
  id: UserPrincipal
  children:
  - System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.UserPrincipal.Current
  - System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  - System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  - System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  - System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  - System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  - System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  langs:
  - csharp
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal
  type: Class
  summary: "Encapsula principais que são contas de utilizador."
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UserPrincipal : System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: UserPrincipal(PrincipalContext)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> classe utilizando o contexto especificado."
  remarks: "A conta do principal de utilizador não é continuada quando é criado. Para guardar a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>método.</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  example:
  - "The following code example connects to the LDAP domain \"fabrikam.com\" with the username and password initialized in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor to \"administrator\" and \"securelyStoredPassword.\"  \n  \n The properties set in the example, such as user name and e-mail address, are created under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor: \"CN=Users,DC=fabrikam,DC=com.\"  \n  \n```  \n  \nPrincipalContext ctx = new PrincipalContext(  \n                                         ContextType.Domain,  \n                                         \"fabrikam.com\",   \n                                         \"CN=Users,DC=fabrikam,DC=com\",  \n                                         \"administrator\",   \n                                         \"securelyStoredPassword\");   \n  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \nusr.Name = \"Jim Daly\";  \nusr.Description = \"This is the user account for Jim Daly\";  \nusr.EmailAddress = \"jimdaly@fabrikam.com\";  \nusr.SetPassword(\"securelyStoredPassword\");  \nusr.Save();  \n  \nusr.Dispose();  \nctx.Dispose();   \n```"
  syntax:
    content: public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: UserPrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Inicializa uma nova instância do <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> classe utilizando o contexto especificado, o nome da conta do SAM, a palavra-passe e ativada valor."
  remarks: "A conta do principal de utilizador não é continuada quando é criado. Para guardar a conta, chame o <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>método.</xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>"
  syntax:
    content: public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: samAccountName
      type: System.String
      description: "O nome de conta do SAM para este principal de utilizador."
    - id: password
      type: System.String
      description: "A palavra-passe para esta conta."
    - id: enabled
      type: System.Boolean
      description: "Um valor booleano que especifica se a conta está ativada."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um <xref href=&quot;System.DirectoryServices.AccountManagement.AdvancedFilters&quot;> </xref> objeto para definir propriedades só de leitura antes de passar o objeto para o <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;> </xref>."
  syntax:
    content: public override System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: "Um <xref href=&quot;System.DirectoryServices.AccountManagement.AdvancedFilters&quot;> </xref> objeto."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  id: Current
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém um objeto principal de utilizador que representa o utilizador atual no qual o thread está em execução."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal Current { get; }
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> que representa o utilizador atual."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  - type: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    commentId: T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
    description: "Não foi possível encontrar o objeto principal de utilizador para o utilizador atual. O objeto principal pode conter uma lista de controlo de acesso para impedir o acesso por utilizadores não autorizados."
  - type: System.MultipleMatchesException
    commentId: T:System.MultipleMatchesException
    description: "Utilizador principal corresponder o utilizador atual foram encontrados vários objetos."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  id: EmailAddress
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o endereço de correio eletrónico para esta conta."
  syntax:
    content: public string EmailAddress { get; set; }
    return:
      type: System.String
      description: "O endereço de correio eletrónico do principal de utilizador."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  id: EmployeeId
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o ID de empregado principal para este utilizador."
  syntax:
    content: public string EmployeeId { get; set; }
    return:
      type: System.String
      description: "O ID de empregado do principal de utilizador."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; objetos para os utilizadores que têm uma palavra-passe incorreta tentativa registadas na data especificada e intervalo de tempo."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de try a palavra-passe incorreta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm tente um início de sessão incorreto registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> objetos ou uma coleção vazia se não existem resultados forem encontrados."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; objetos para os utilizadores que têm um tempo de expiração da conta na data especificada e intervalo de tempo."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de try a palavra-passe incorreta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm tente um início de sessão incorreto registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> objetos ou uma coleção vazia se não existem resultados forem encontrados."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um objeto principal de utilizador que corresponde ao valor de identidade especificado."
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: identityValue
      type: System.String
      description: "A identidade do principal de utilizador. Este parâmetro pode ser qualquer formato que faz a <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> enumeração."
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> objeto que corresponde ao valor de identidade especificado ou nulo se não são encontradas correspondências."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Foram encontrados vários utilizador principal objetos correspondentes do objeto de utilizador atual."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  id: FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve um objeto principal de utilizador que corresponda ao tipo de identidade especificado e valor. Esta versão do <xref:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*>método determina o formato do valor de identidade.</xref:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*>"
  remarks: ''
  example:
  - "The following code connects to the local computer store. Since the credentials are not specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, the credentials of the user running the current thread are used.  \n  \n A search is performed to find the user who has SamAccountName \"Guest\".  \n  \n If the user is found, a check is performed to determine whether this user's account is enabled. If the account is not enabled, the example code enables it.  \n  \n```  \nPrincipalContext ctx = new PrincipalContext(ContextType.Machine);  \n  \nUserPrincipal usr = UserPrincipal.FindByIdentity(ctx,   \n                                           IdentityType.SamAccountName,   \n                                           \"Guest\");  \n  \nif(usr != null)  \n{  \n    if (usr.Enabled == false)  \n        usr.Enabled = true;  \n  \n    usr.Save();  \n    usr.Dispose();  \n}  \nctx.Dispose();   \n```"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: identityType
      type: System.DirectoryServices.AccountManagement.IdentityType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração que especifica o formato do `identityValue` parâmetro."
    - id: identityValue
      type: System.String
      description: "A identidade do principal de utilizador. Este parâmetro pode ser qualquer formato que faz a <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> enumeração."
    return:
      type: System.DirectoryServices.AccountManagement.UserPrincipal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> que corresponda ao valor de identidade especificado e tipo de objeto ou nulo se não são encontradas correspondências."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.MultipleMatchesException
    commentId: T:System.DirectoryServices.AccountManagement.MultipleMatchesException
    description: "Foram encontrados vários utilizador principal objetos correspondentes do objeto de utilizador atual."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor de identidade não é um <xref href=&quot;System.DirectoryServices.AccountManagement.IdentityType&quot;> </xref> valor de enumeração."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; objetos para os utilizadores que têm um tempo de bloqueio de conta na data especificada e intervalo de tempo."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de try a palavra-passe incorreta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm tente um início de sessão incorreto registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> objetos ou uma coleção vazia se não existem resultados forem encontrados."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; objetos para os utilizadores que tenham conta registado no intervalo de tempo e data de início de sessão."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de try a palavra-passe incorreta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm tente um início de sessão incorreto registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> objetos ou uma coleção vazia se não existem resultados forem encontrados."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; objetos para os utilizadores que definiu uma palavra-passe no intervalo de tempo e data especificada."
  remarks: "A hora será predefinido para UTC. Se pretender especificar a hora em hora local, em seguida, especifique o <xref:System.DateTime.Kind%2A>propriedade o `time` objeto como <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>"
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "O <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;> </xref> objeto que especifica o servidor ou domínio relativamente ao qual operações são efetuadas."
    - id: time
      type: System.DateTime
      description: "A <xref:System.DateTime>objeto que identifica a data e hora de try a palavra-passe incorreta.</xref:System.DateTime> Este parâmetro é utilizado com o parâmetro de tipo para determinar o intervalo de tempo em que os objetos devolvidos têm tente um início de sessão incorreto registada."
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref> valor de enumeração que especifica o tipo de correspondência que é aplicada a `time` parâmetro."
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%601&gt; que contém um ou mais <xref href=&quot;System.DirectoryServices.AccountManagement.UserPrincipal&quot;> </xref> objetos ou uma coleção vazia se não existem resultados forem encontrados."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  id: GetAuthorizationGroups
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: GetAuthorizationGroups()
  nameWithType: UserPrincipal.GetAuthorizationGroups()
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Devolve uma coleção de objetos principais que contém todos os grupos de autorização dos quais este utilizador é membro. Esta função devolve apenas os grupos que são grupos de segurança grupos de distribuição não são devolvidos."
  remarks: "Este método procura todos os grupos recursivamente e devolve os grupos nos quais o utilizador é membro. O conjunto devolvido pode também incluir grupos adicionais que o sistema deverá considerar o utilizador um membro para fins de autorização.       Os grupos que são devolvidos por este método podem incluir grupos de um outro âmbito e arquivo que o principal. Por exemplo, se o principal é um objeto do AD DS que tenha um DN de &quot;CN = SpecialGroups, DC = Fabrikam, DC = com, o conjunto devolvido pode conter os grupos que pertençam ao&quot; CN = NormalGroups, DC = Fabrikam, DC = com."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> GetAuthorizationGroups ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "Uma coleção de <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;> </xref> objetos que contêm os grupos dos quais o utilizador é um membro ou nulo se o utilizador não pertencer a quaisquer grupos."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups*
  exceptions:
  - type: System.DirectoryServices.AccountManagement.PrincipalOperationException
    commentId: T:System.DirectoryServices.AccountManagement.PrincipalOperationException
    description: "Falha ao tentar obter os grupos de autorização."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A obtenção dos grupos de autorização não é suportada por este sistema operativo."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  id: GivenName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o nome fornecido para o utilizador principal."
  syntax:
    content: public string GivenName { get; set; }
    return:
      type: System.String
      description: "O nome dado do principal de utilizador."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  id: MiddleName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o nome do meio para o utilizador principal."
  syntax:
    content: public string MiddleName { get; set; }
    return:
      type: System.String
      description: "O nome do principal de utilizador."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  id: Surname
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o apelido do utilizador principal."
  syntax:
    content: public string Surname { get; set; }
    return:
      type: System.String
      description: "O apelido do principal de utilizador."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.Surname*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  id: VoiceTelephoneNumber
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  langs:
  - csharp
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Obtém ou define o número de telefone de voz para o utilizador principal."
  syntax:
    content: public string VoiceTelephoneNumber { get; set; }
    return:
      type: System.String
      description: "O número de telefone de voz do principal de utilizador."
  overload: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O repositório subjacente não suporta esta propriedade."
  platform:
  - net462
references:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: NoMatchingPrincipalException
  nameWithType: NoMatchingPrincipalException
  fullName: System.DirectoryServices.AccountManagement.NoMatchingPrincipalException
- uid: System.MultipleMatchesException
  isExternal: true
  name: System.MultipleMatchesException
- uid: System.DirectoryServices.AccountManagement.MultipleMatchesException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MultipleMatchesException
  nameWithType: MultipleMatchesException
  fullName: System.DirectoryServices.AccountManagement.MultipleMatchesException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.AccountManagement.PrincipalOperationException
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalOperationException
  nameWithType: PrincipalOperationException
  fullName: System.DirectoryServices.AccountManagement.PrincipalOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal(PrincipalContext)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.UserPrincipal(PrincipalContext,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Current
  nameWithType: UserPrincipal.Current
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Current
- uid: System.DirectoryServices.AccountManagement.UserPrincipal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: UserPrincipal
  nameWithType: UserPrincipal
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.UserPrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<UserPrincipal>
  nameWithType: PrincipalSearchResult<UserPrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.UserPrincipal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.UserPrincipal
    name: UserPrincipal
    nameWithType: UserPrincipal
    fullName: UserPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,String)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity(PrincipalContext,IdentityType,String)
  nameWithType: UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(PrincipalContext,IdentityType,String)
- uid: System.DirectoryServices.AccountManagement.IdentityType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: IdentityType
  nameWithType: IdentityType
  fullName: System.DirectoryServices.AccountManagement.IdentityType
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GetAuthorizationGroups()
  nameWithType: UserPrincipal.GetAuthorizationGroups()
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GivenName
  nameWithType: UserPrincipal.GivenName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Surname
  nameWithType: UserPrincipal.Surname
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.Surname
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
  fullName: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.#ctor*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: UserPrincipal
  nameWithType: UserPrincipal.UserPrincipal
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: UserPrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Current*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Current
  nameWithType: UserPrincipal.Current
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmailAddress
  nameWithType: UserPrincipal.EmailAddress
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: EmployeeId
  nameWithType: UserPrincipal.EmployeeId
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByBadPasswordAttempt
  nameWithType: UserPrincipal.FindByBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByExpirationTime
  nameWithType: UserPrincipal.FindByExpirationTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByIdentity
  nameWithType: UserPrincipal.FindByIdentity
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLockoutTime
  nameWithType: UserPrincipal.FindByLockoutTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByLogonTime
  nameWithType: UserPrincipal.FindByLogonTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: FindByPasswordSetTime
  nameWithType: UserPrincipal.FindByPasswordSetTime
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GetAuthorizationGroups
  nameWithType: UserPrincipal.GetAuthorizationGroups
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.GivenName*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: GivenName
  nameWithType: UserPrincipal.GivenName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: MiddleName
  nameWithType: UserPrincipal.MiddleName
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.Surname*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: Surname
  nameWithType: UserPrincipal.Surname
- uid: System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber*
  parent: System.DirectoryServices.AccountManagement.UserPrincipal
  isExternal: false
  name: VoiceTelephoneNumber
  nameWithType: UserPrincipal.VoiceTelephoneNumber
