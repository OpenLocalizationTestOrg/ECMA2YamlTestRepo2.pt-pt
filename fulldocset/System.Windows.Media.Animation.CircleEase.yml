### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.CircleEase
  id: CircleEase
  children:
  - System.Windows.Media.Animation.CircleEase.#ctor
  - System.Windows.Media.Animation.CircleEase.CreateInstanceCore
  - System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: CircleEase
  nameWithType: CircleEase
  fullName: System.Windows.Media.Animation.CircleEase
  type: Class
  summary: "Representa uma função easing que cria uma animação que acelera e/ou decelerates utilizando uma função de circular."
  remarks: "Pode controlar se a animação acelera, decelerates, ou ambos, especificando <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> O gráfico seguinte demonstra os valores diferentes de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, onde *f*(*t*) representa o progresso de animação e *t* representa tempo.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![CircleEase EasingMode gráficos. ] (~/add/media/circleease-graph.png &quot;CircleEase EasingMode gráficos.&quot;)       A fórmula utilizada para esta função é o seguinte.       ![A fórmula matemática para CircleEase](~/add/media/circleease-formula.png &quot;matemática fórmula para CircleEase&quot;) os valores válidos para *t* são -1 <=> </=> *t*<= 1.></= 1.> Os valores maiores que 1 são avaliadas como 1 e valores inferior a -1 são avaliados como -1. Isto significa que, para os valores fora deste intervalo, a animação continua, mas a função easing interrompe quando ativa um domínio inválidas e é retomada depois sai de um domínio inválidas.       Existem várias outras funções easing além CircleEase que pode explorar utilizando o exemplo seguinte do Silverlight.       [Executar este exemplo](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery) além de utilizar as funções easing incluídas no tempo de execução, pode criar as suas próprias funções easing personalizadas ao herdar de <xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase>      <a name=&quot;xamlObjectElementUsage_CircleEase&quot;></a># # Utilização de elemento do objeto de XAML```   <CircleEase .../>   ```"
  example:
  - "The following example applies a CircleEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \n  \n [!code-xml[CircleEase#CircleEase](~/add/codesnippet/xaml/t-system.windows.media.a_11_1.xaml)]\n [!code-xml[CircleEase#CircleEase](~/add/codesnippet/xaml/circleease/window1.xaml#circleease)]"
  syntax:
    content: 'public class CircleEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.CircleEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.CircleEase
  langs:
  - csharp
  name: CircleEase()
  nameWithType: CircleEase.CircleEase()
  fullName: System.Windows.Media.Animation.CircleEase.CircleEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Animation.CircleEase&quot;> </xref> classe."
  syntax:
    content: public CircleEase ();
    parameters: []
  overload: System.Windows.Media.Animation.CircleEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.CircleEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.CircleEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: CircleEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.CircleEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Cria uma nova instância do <xref href=&quot;System.Windows.Freezable&quot;> </xref> classe derivada. Ao criar uma classe derivada, tem de substituir este método."
  remarks: "Classes de animação herdarem indiretamente <xref:System.Windows.Freezable>.</xref:System.Windows.Freezable> Por este motivo, terá de substituir o <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>método para construir um objeto de animação personalizada.</xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A nova instância."
  overload: System.Windows.Media.Animation.CircleEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.CircleEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: CircleEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.CircleEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Fornece a parte da lógica da função easing que pode substituir para produzir o <xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;> </xref> modo da função easing personalizado."
  remarks: "Este método transforma normalizado tempo para controlar o ritmo de um animação para o <xref:System.Windows.Media.Animation.EasingMode>caso de <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> </xref:System.Windows.Media.Animation.EasingMode>       Só tem de especificar a sua função easing para o <xref:System.Windows.Media.Animation.EasingMode>caso porque a implementação do <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>transformações de método `normalizedTime` para o <xref:System.Windows.Media.Animation.EasingMode>e <xref:System.Windows.Media.Animation.EasingMode>casos.</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "Hora (progresso) normalizada da animação."
    return:
      type: System.Double
      description: "Um valor de duplo que representa o progresso transformado."
  overload: System.Windows.Media.Animation.CircleEase.EaseInCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.CircleEase.#ctor
  parent: System.Windows.Media.Animation.CircleEase
  isExternal: false
  name: CircleEase()
  nameWithType: CircleEase.CircleEase()
  fullName: System.Windows.Media.Animation.CircleEase.CircleEase()
- uid: System.Windows.Media.Animation.CircleEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.CircleEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: CircleEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.CircleEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.CircleEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: CircleEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.CircleEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.CircleEase.#ctor*
  parent: System.Windows.Media.Animation.CircleEase
  isExternal: false
  name: CircleEase
  nameWithType: CircleEase.CircleEase
- uid: System.Windows.Media.Animation.CircleEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.CircleEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: CircleEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.CircleEase.EaseInCore*
  parent: System.Windows.Media.Animation.CircleEase
  isExternal: false
  name: EaseInCore
  nameWithType: CircleEase.EaseInCore
