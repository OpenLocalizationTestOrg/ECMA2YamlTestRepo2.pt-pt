### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension
  id: DiscoveryServiceExtension
  children:
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: DiscoveryServiceExtension
  nameWithType: DiscoveryServiceExtension
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension
  type: Class
  summary: "An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints."
  remarks: "Derive a class from DiscoveryServiceExtension and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a DiscoveryServiceExtension. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used."
  syntax:
    content: 'public abstract class DiscoveryServiceExtension : System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: DiscoveryServiceExtension()
  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.DiscoveryServiceExtension()
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Discovery.DiscoveryServiceExtension&quot;></xref> class."
  syntax:
    content: protected DiscoveryServiceExtension ();
    parameters: []
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService
  id: GetDiscoveryService
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: GetDiscoveryService()
  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Override this method to return your custom <xref href=&quot;System.ServiceModel.Discovery.DiscoveryService&quot;></xref> implementation."
  remarks: "An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`"
  syntax:
    content: protected abstract System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService ();
    parameters: []
    return:
      type: System.ServiceModel.Discovery.DiscoveryService
      description: "A custom discovery service implementation."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  id: PublishedEndpoints
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: PublishedEndpoints
  nameWithType: DiscoveryServiceExtension.PublishedEndpoints
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Gets a read-only collection of published endpoints."
  remarks: "The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata> PublishedEndpoints { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}
      description: "A read-only collection of published endpoints."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  syntax:
    content: void IExtension<ServiceHostBase>.Attach (System.ServiceModel.ServiceHostBase owner);
    parameters:
    - id: owner
      type: System.ServiceModel.ServiceHostBase
      description: "To be added."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  langs:
  - csharp
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  syntax:
    content: void IExtension<ServiceHostBase>.Detach (System.ServiceModel.ServiceHostBase owner);
    parameters:
    - id: owner
      type: System.ServiceModel.ServiceHostBase
      description: "To be added."
  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: DiscoveryServiceExtension()
  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.DiscoveryServiceExtension()
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: GetDiscoveryService()
  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService()
- uid: System.ServiceModel.Discovery.DiscoveryService
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: DiscoveryService
  nameWithType: DiscoveryService
  fullName: System.ServiceModel.Discovery.DiscoveryService
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: PublishedEndpoints
  nameWithType: DiscoveryServiceExtension.PublishedEndpoints
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EndpointDiscoveryMetadata>
  nameWithType: ReadOnlyCollection<EndpointDiscoveryMetadata>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
    name: EndpointDiscoveryMetadata
    nameWithType: EndpointDiscoveryMetadata
    fullName: EndpointDiscoveryMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension(ServiceHostBase)
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension.System.ServiceModel.IExtension(ServiceHostBase)
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: DiscoveryServiceExtension
  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: GetDiscoveryService
  nameWithType: DiscoveryServiceExtension.GetDiscoveryService
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: PublishedEndpoints
  nameWithType: DiscoveryServiceExtension.PublishedEndpoints
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach
- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach*
  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension
  isExternal: false
  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach
  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach
