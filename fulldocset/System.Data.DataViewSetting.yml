### YamlMime:ManagedReference
items:
- uid: System.Data.DataViewSetting
  id: DataViewSetting
  children:
  - System.Data.DataViewSetting.ApplyDefaultSort
  - System.Data.DataViewSetting.DataViewManager
  - System.Data.DataViewSetting.RowFilter
  - System.Data.DataViewSetting.RowStateFilter
  - System.Data.DataViewSetting.Sort
  - System.Data.DataViewSetting.Table
  langs:
  - csharp
  name: DataViewSetting
  nameWithType: DataViewSetting
  fullName: System.Data.DataViewSetting
  type: Class
  summary: "Representa as predefinições para <> </> *>, <> </> *>, <> </> *>, <> </> *>, <> </> *>, e <> </> *> para DataViews criados a partir de <xref href=&quot;System.Data.DataViewManager&quot;> </xref>."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public class DataViewSetting
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataViewSetting.ApplyDefaultSort
  id: ApplyDefaultSort
  parent: System.Data.DataViewSetting
  langs:
  - csharp
  name: ApplyDefaultSort
  nameWithType: DataViewSetting.ApplyDefaultSort
  fullName: System.Data.DataViewSetting.ApplyDefaultSort
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define um valor que indica se deve utilizar a ordenação de predefinição."
  syntax:
    content: public bool ApplyDefaultSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for utilizada a ordem predefinida; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataViewSetting.ApplyDefaultSort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSetting.DataViewManager
  id: DataViewManager
  parent: System.Data.DataViewSetting
  langs:
  - csharp
  name: DataViewManager
  nameWithType: DataViewSetting.DataViewManager
  fullName: System.Data.DataViewSetting.DataViewManager
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref href=&quot;System.Data.DataViewManager&quot;> </xref> que contém esta <xref href=&quot;System.Data.DataViewSetting&quot;> </xref>."
  syntax:
    content: public System.Data.DataViewManager DataViewManager { get; }
    return:
      type: System.Data.DataViewManager
      description: "A <xref href=&quot;System.Data.DataViewManager&quot;></xref> object."
  overload: System.Data.DataViewSetting.DataViewManager*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSetting.RowFilter
  id: RowFilter
  parent: System.Data.DataViewSetting
  langs:
  - csharp
  name: RowFilter
  nameWithType: DataViewSetting.RowFilter
  fullName: System.Data.DataViewSetting.RowFilter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define o filtro a aplicar no <xref href=&quot;System.Data.DataView&quot;> </xref>. Consulte <xref:System.Data.DataView.RowFilter*>para um exemplo de código com RowFilter.</xref:System.Data.DataView.RowFilter*>"
  syntax:
    content: public string RowFilter { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que contém o filtro a aplicar."
  overload: System.Data.DataViewSetting.RowFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSetting.RowStateFilter
  id: RowStateFilter
  parent: System.Data.DataViewSetting
  langs:
  - csharp
  name: RowStateFilter
  nameWithType: DataViewSetting.RowStateFilter
  fullName: System.Data.DataViewSetting.RowStateFilter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define um valor que indica se deve apresentar o atual, Deleted, modificado atual, ModifiedOriginal, novo, Original, Unchanged ou não existem linhas no <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "O valor predefinido de RowStateFilter é `DataViewRowState.CurrentRows`."
  syntax:
    content: public System.Data.DataViewRowState RowStateFilter { get; set; }
    return:
      type: System.Data.DataViewRowState
      description: "Um valor que indica quais as linhas a apresentar."
  overload: System.Data.DataViewSetting.RowStateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSetting.Sort
  id: Sort
  parent: System.Data.DataViewSetting
  langs:
  - csharp
  name: Sort
  nameWithType: DataViewSetting.Sort
  fullName: System.Data.DataViewSetting.Sort
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define um valor que indica a ordenação para aplicar no <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "<xref:System.Data.DataView.Sort%2A>Pode ter dois predefinições com base no valor de <xref:System.Data.DataView.RowFilter%2A>propriedade.</xref:System.Data.DataView.RowFilter%2A></xref:System.Data.DataView.Sort%2A> Se <xref:System.Data.DataView.RowFilter%2A>é nulo ou está vazio (ou seja, o valor não explicitamente especificado), o <xref:System.Data.DataRowView>no <xref:System.Data.DataView>é ordenado na posição ou ordinal de <xref:System.Data.DataRow>no <xref:System.Data.DataTable.Rows%2A>coleção.</xref:System.Data.DataTable.Rows%2A> </xref:System.Data.DataRow> </xref:System.Data.DataView> </xref:System.Data.DataRowView> </xref:System.Data.DataView.RowFilter%2A> O <xref:System.Data.DataView.Sort%2A>predefinido, uma cadeia vazia, faz com que um <xref:System.Data.DataRowView>no <xref:System.Data.DataView>ser ordenado na posição ou ordinal de <xref:System.Data.DataRow>no <xref:System.Data.DataTable.Rows%2A>coleção.</xref:System.Data.DataTable.Rows%2A> </xref:System.Data.DataRow> </xref:System.Data.DataView> </xref:System.Data.DataRowView> </xref:System.Data.DataView.Sort%2A>"
  syntax:
    content: public string Sort { get; set; }
    return:
      type: System.String
      description: "A ordenação para aplicar no <xref href=&quot;System.Data.DataView&quot;> </xref>."
  overload: System.Data.DataViewSetting.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSetting.Table
  id: Table
  parent: System.Data.DataViewSetting
  langs:
  - csharp
  name: Table
  nameWithType: DataViewSetting.Table
  fullName: System.Data.DataViewSetting.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref href=&quot;System.Data.DataTable&quot;> </xref> ao qual o <xref href=&quot;System.Data.DataViewSetting&quot;> </xref> aplicam propriedades."
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> object."
  overload: System.Data.DataViewSetting.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.DataViewSetting.ApplyDefaultSort
  parent: System.Data.DataViewSetting
  isExternal: false
  name: ApplyDefaultSort
  nameWithType: DataViewSetting.ApplyDefaultSort
  fullName: System.Data.DataViewSetting.ApplyDefaultSort
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataViewSetting.DataViewManager
  parent: System.Data.DataViewSetting
  isExternal: false
  name: DataViewManager
  nameWithType: DataViewSetting.DataViewManager
  fullName: System.Data.DataViewSetting.DataViewManager
- uid: System.Data.DataViewManager
  parent: System.Data
  isExternal: false
  name: DataViewManager
  nameWithType: DataViewManager
  fullName: System.Data.DataViewManager
- uid: System.Data.DataViewSetting.RowFilter
  parent: System.Data.DataViewSetting
  isExternal: false
  name: RowFilter
  nameWithType: DataViewSetting.RowFilter
  fullName: System.Data.DataViewSetting.RowFilter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataViewSetting.RowStateFilter
  parent: System.Data.DataViewSetting
  isExternal: false
  name: RowStateFilter
  nameWithType: DataViewSetting.RowStateFilter
  fullName: System.Data.DataViewSetting.RowStateFilter
- uid: System.Data.DataViewRowState
  parent: System.Data
  isExternal: false
  name: DataViewRowState
  nameWithType: DataViewRowState
  fullName: System.Data.DataViewRowState
- uid: System.Data.DataViewSetting.Sort
  parent: System.Data.DataViewSetting
  isExternal: false
  name: Sort
  nameWithType: DataViewSetting.Sort
  fullName: System.Data.DataViewSetting.Sort
- uid: System.Data.DataViewSetting.Table
  parent: System.Data.DataViewSetting
  isExternal: false
  name: Table
  nameWithType: DataViewSetting.Table
  fullName: System.Data.DataViewSetting.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataViewSetting.ApplyDefaultSort*
  parent: System.Data.DataViewSetting
  isExternal: false
  name: ApplyDefaultSort
  nameWithType: DataViewSetting.ApplyDefaultSort
- uid: System.Data.DataViewSetting.DataViewManager*
  parent: System.Data.DataViewSetting
  isExternal: false
  name: DataViewManager
  nameWithType: DataViewSetting.DataViewManager
- uid: System.Data.DataViewSetting.RowFilter*
  parent: System.Data.DataViewSetting
  isExternal: false
  name: RowFilter
  nameWithType: DataViewSetting.RowFilter
- uid: System.Data.DataViewSetting.RowStateFilter*
  parent: System.Data.DataViewSetting
  isExternal: false
  name: RowStateFilter
  nameWithType: DataViewSetting.RowStateFilter
- uid: System.Data.DataViewSetting.Sort*
  parent: System.Data.DataViewSetting
  isExternal: false
  name: Sort
  nameWithType: DataViewSetting.Sort
- uid: System.Data.DataViewSetting.Table*
  parent: System.Data.DataViewSetting
  isExternal: false
  name: Table
  nameWithType: DataViewSetting.Table
