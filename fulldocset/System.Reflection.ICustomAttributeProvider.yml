### YamlMime:ManagedReference
items:
- uid: System.Reflection.ICustomAttributeProvider
  id: ICustomAttributeProvider
  children:
  - System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  - System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)
  langs:
  - csharp
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
  type: Interface
  summary: "Provides custom attributes for reflection objects that support them."
  remarks: "Nearly all the Reflection classes can have attributes associated with them. Attributes can be standard (public, private, HelpString) or custom."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICustomAttributeProvider
  implements: []
  platform:
  - net462
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Returns an array of all of the custom attributes defined on this member, excluding named attributes, or an empty array if there are no custom attributes."
  remarks: "Calling <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=fullName> on <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.EventInfo> when the `inherit` parameter of `GetCustomAttributes` is `true` does not walk the type hierarchy. Use <xref:System.Attribute?displayProperty=fullName> to inherit custom attributes.       This method returns custom attributes defined directly on a non-inherited member only."
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "When <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, look up the hierarchy chain for the inherited custom attribute."
    return:
      type: System.Object[]
      description: "An array of Objects representing custom attributes, or an empty array."
  overload: System.Reflection.ICustomAttributeProvider.GetCustomAttributes*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "The custom attribute type cannot be loaded."
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: "There is more than one attribute of type <code>attributeType</code> defined on this member."
  platform:
  - net462
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Returns an array of custom attributes defined on this member, identified by type, or an empty array if there are no custom attributes of that type."
  remarks: "If `attributeType` is a base class or interface, this method returns any implementation of that type.       This method returns custom attributes defined directly on a non-inherited member only.       Calling GetCustomAttributes on <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.EventInfo> when the `inherit` parameter of `GetCustomAttributes` is `true` does not walk the type hierarchy. Use <xref:System.Attribute?displayProperty=fullName> to inherit custom attributes."
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The type of the custom attributes."
    - id: inherit
      type: System.Boolean
      description: "When <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, look up the hierarchy chain for the inherited custom attribute."
    return:
      type: System.Object[]
      description: "An array of Objects representing custom attributes, or an empty array."
  overload: System.Reflection.ICustomAttributeProvider.GetCustomAttributes*
  exceptions:
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "The custom attribute type cannot be loaded."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attributeType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: ICustomAttributeProvider.IsDefined(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Indicates whether one or more instance of <code>attributeType</code> is defined on this member."
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The type of the custom attributes."
    - id: inherit
      type: System.Boolean
      description: "When <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, look up the hierarchy chain for the inherited custom attribute."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>attributeType</code> is defined on this member; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> otherwise."
  overload: System.Reflection.ICustomAttributeProvider.IsDefined*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: true
  name: System.TypeLoadException
- uid: System.Reflection.AmbiguousMatchException
  isExternal: true
  name: System.Reflection.AmbiguousMatchException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: ICustomAttributeProvider.IsDefined(Type,Boolean)
  fullName: System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)
- uid: System.Reflection.ICustomAttributeProvider.GetCustomAttributes*
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: GetCustomAttributes
  nameWithType: ICustomAttributeProvider.GetCustomAttributes
- uid: System.Reflection.ICustomAttributeProvider.IsDefined*
  parent: System.Reflection.ICustomAttributeProvider
  isExternal: false
  name: IsDefined
  nameWithType: ICustomAttributeProvider.IsDefined
