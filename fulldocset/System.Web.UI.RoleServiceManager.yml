### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "Configura a localização de uma implementação do serviço de função personalizada."
  remarks: "A classe de RoleServiceManager corresponde de <xref:System.Web.UI.ScriptManager.RoleService%2A>propriedade o <xref:System.Web.UI.ScriptManager>ou <xref:System.Web.UI.ScriptManagerProxy>controlo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       A função de serviço Web é utilizada por aplicações com capacidade de AJAX para obter informações de função para o utilizador autenticado atual através de uma chamada assíncrona de serviço Web. Pode utilizar RoleServiceManager para fornecer o caminho de uma implementação alternativa da função do serviço Web em vez de utilizar o serviço Web incorporado.       Para utilizar o serviço de função na sua aplicação, tem de ativá-la no ficheiro de configuração e declare a mesma na página. Se utilizar a função incorporada do serviço Web, tem de ativá-la, mas não tem de declarar explicitamente a função de segurança do service manager, na página.       Para criar um serviço de função personalizada, tem de implementar um serviço Web que tem dois métodos: `GetRolesForCurrentUser` e `IsCurrentUserInRole`. Estes métodos tem de ter a mesma assinatura que os métodos correspondentes da função incorporada de serviço Web.       O exemplo seguinte mostra a estrutura básica de classe que tem de ser implementada numa função personalizada de classe de serviço Web.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] para utilizar uma serviço Web de função personalizada, pode adicionar o serviço de forma declarativa na marcação colocando um `RoleService` elemento dentro do <xref:System.Web.UI.ScriptManager>controlar, como mostrado no exemplo seguinte.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```Através de programação também pode definir o <xref:System.Web.UI.RoleServiceManager.Path%2A>propriedade para utilizar uma função personalizada serviço Web.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> classe."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se a lista de funções para o utilizador atualmente com sessão iniciada tem de ser obtida."
  remarks: "Se a propriedade &quot; LoadRoles estiver definida como `true`, a lista de funções é obtida pelo <xref:System.Web.UI.RoleServiceManager>classe utilizando o <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>método.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> A lista é serializada, em seguida, na marcação de página.      > [!NOTE] > LoadRoles quando é `true`, todas as funções que o utilizador autenticado atual pertence são enviadas para o browser. Dado que os utilizadores podem potencialmente ver as informações de função, isto pode ser um problema de segurança.       A propriedade &quot; LoadRoles pode ser especificada o <xref:System.Web.UI.ScriptManager>controlo ou um associados <xref:System.Web.UI.ScriptManagerProxy>controlo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Se LoadRoles estiver definido como `true` para uma instância de proxy, a lista de funções é obtida e adicionada à página. Se for LoadRoles `false`, as funções não foram adicionadas a marcação de página. Nesse caso, pode utilizar o método para armazenar informações de função na memória no browser."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista de funções tem de ser obtida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o caminho do serviço de função."
  remarks: "Se a propriedade de caminho não for definida, o valor de retorno é <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Nesse caso, o ASP.NET utiliza a autenticação incorporada do serviço Web que corresponde ao caminho predefinido interno seguintes: ~ / RolesService.svc. O mesmo comportamento ocorre se definir o caminho para uma cadeia vazia ou a `null`.       Caminho pode ser especificado o <xref:System.Web.UI.ScriptManager>controlo ou um associados <xref:System.Web.UI.ScriptManagerProxy>controlo.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Quando o caminho está definido no <xref:System.Web.UI.ScriptManagerProxy>nível, as seguintes se verificarem condições:-se existirem vários objetos de proxy na hierarquia de controlo, o caminho tem de ser definido para cada instância de proxy.</xref:System.Web.UI.ScriptManagerProxy>      -Se o caminho for explicitamente definido para um objeto de proxy, o valor tem de ser igual para todos os outros objetos de proxy que esta propriedade está definida para. Se definir caminhos diferentes para objetos de proxy diferente da hierarquia de controlo, um <xref:System.ArgumentException>exceção é emitida.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "O caminho de função personalizada serviço Web."
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foi definido mais do que um caminho exclusivo na hierarquia de controlo."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
