### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.RotateTransform
  id: RotateTransform
  children:
  - System.Windows.Media.RotateTransform.#ctor
  - System.Windows.Media.RotateTransform.#ctor(System.Double)
  - System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  - System.Windows.Media.RotateTransform.Angle
  - System.Windows.Media.RotateTransform.AngleProperty
  - System.Windows.Media.RotateTransform.CenterX
  - System.Windows.Media.RotateTransform.CenterXProperty
  - System.Windows.Media.RotateTransform.CenterY
  - System.Windows.Media.RotateTransform.CenterYProperty
  - System.Windows.Media.RotateTransform.Clone
  - System.Windows.Media.RotateTransform.CloneCurrentValue
  - System.Windows.Media.RotateTransform.CreateInstanceCore
  - System.Windows.Media.RotateTransform.Value
  langs:
  - csharp
  name: RotateTransform
  nameWithType: RotateTransform
  fullName: System.Windows.Media.RotateTransform
  type: Class
  summary: "Rotates an object clockwise about a specified point in a [!INCLUDE[TLA#tla_2d](~/add/includes/tlasharptla-2d-md.md)] x-y coordinate system."
  remarks: "A RotateTransform rotates an object by a specified <xref:System.Windows.Media.RotateTransform.Angle%2A> about the point <xref:System.Windows.Media.RotateTransform.CenterX%2A>, <xref:System.Windows.Media.RotateTransform.CenterY%2A>.       When you use a RotateTransform, realize that the transformation rotates the coordinate system for a particular object about the point (0, 0). Therefore, depending on the position of the object, it might not rotate in place (around its center). For example, if an object is positioned 200 units from 0 along the x-axis, a rotation of 30 degrees can swing the object 30 degrees along a circle that has a radius of 200, which is drawn around the origin. To rotate an object in place, set the <xref:System.Windows.Media.RotateTransform.CenterX%2A> and <xref:System.Windows.Media.RotateTransform.CenterY%2A> of the RotateTransform to the center of the object to rotate.       **Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the RotateTransform class provides several special features: RotateTransform objects can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe. For more information about the different features provided by <xref:System.Windows.Freezable> objects, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public sealed class RotateTransform : System.Windows.Media.Transform'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.GeneralTransform
  - System.Windows.Media.Transform
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.GeneralTransform.ToString
  - System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)
  - System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)
  - System.Windows.Media.Transform.Identity
  - System.Windows.Media.Transform.Inverse
  - System.Windows.Media.Transform.Parse(System.String)
  - System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)
  - System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor
  id: '#ctor'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform()
  nameWithType: RotateTransform.RotateTransform()
  fullName: System.Windows.Media.RotateTransform.RotateTransform()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref> class."
  syntax:
    content: public RotateTransform ();
    parameters: []
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform(Double)
  nameWithType: RotateTransform.RotateTransform(Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref> class that has the specified angle, in degrees, of clockwise rotation. The rotation is centered on the origin, (0,0)."
  syntax:
    content: public RotateTransform (double angle);
    parameters:
    - id: angle
      type: System.Double
      description: "The clockwise rotation angle, in degrees."
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: RotateTransform(Double,Double,Double)
  nameWithType: RotateTransform.RotateTransform(Double,Double,Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref> class that has the specified angle and center point."
  syntax:
    content: public RotateTransform (double angle, double centerX, double centerY);
    parameters:
    - id: angle
      type: System.Double
      description: "The clockwise rotation angle, in degrees. For more information, see the <xref:System.Windows.Media.RotateTransform.Angle*> property."
    - id: centerX
      type: System.Double
      description: "The x-coordinate of the center point for the <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>. For more information, see the <xref:System.Windows.Media.RotateTransform.CenterX*> property."
    - id: centerY
      type: System.Double
      description: "The y-coordinate of the center point for the <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref>. For more information, see the <xref:System.Windows.Media.RotateTransform.CenterY*> property."
  overload: System.Windows.Media.RotateTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Angle
  id: Angle
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Angle
  nameWithType: RotateTransform.Angle
  fullName: System.Windows.Media.RotateTransform.Angle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the angle, in degrees, of clockwise rotation."
  remarks: "When you use a <xref:System.Windows.Media.RotateTransform>, realize that the transformation rotates the coordinate system for a particular object about the point (0, 0). Therefore, depending on the position of the object, it might not rotate in place (around its center). For example, if an object is positioned 200 units from 0 along the x-axis, a rotation of 30 degrees can swing the object 30 degrees along a circle that has a radius of 200, which is drawn around the origin. To rotate an object in place, set the <xref:System.Windows.Media.RotateTransform.CenterX%2A> and <xref:System.Windows.Media.RotateTransform.CenterY%2A> of the <xref:System.Windows.Media.RotateTransform> to the center of the object to rotate.      <a name=&quot;dependencyPropertyInfo_Angle&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.RotateTransform.AngleProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public double Angle { get; set; }
    return:
      type: System.Double
      description: "The angle, in degrees, of clockwise rotation. The default is 0."
  overload: System.Windows.Media.RotateTransform.Angle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.AngleProperty
  id: AngleProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: AngleProperty
  nameWithType: RotateTransform.AngleProperty
  fullName: System.Windows.Media.RotateTransform.AngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.RotateTransform.Angle*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty AngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterX
  id: CenterX
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterX
  nameWithType: RotateTransform.CenterX
  fullName: System.Windows.Media.RotateTransform.CenterX
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the x-coordinate of the rotation center point."
  remarks: "When you use a <xref:System.Windows.Media.RotateTransform>, realize that the transformation rotates the coordinate system for a particular object about the point (0, 0). Therefore, depending on the position of the object, it might not rotate in place (around its center). For example, if an object is positioned 200 units from 0 along the x-axis, a rotation of 30 degrees can swing the object 30 degrees along a circle that has a radius of 200, which is drawn around the origin. To rotate an object in place, set the CenterX and <xref:System.Windows.Media.RotateTransform.CenterY%2A> of the <xref:System.Windows.Media.RotateTransform> to the center of the object to rotate.      <a name=&quot;dependencyPropertyInfo_CenterX&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.RotateTransform.CenterXProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public double CenterX { get; set; }
    return:
      type: System.Double
      description: "The x-coordinate of the center of rotation. The default is `0`."
  overload: System.Windows.Media.RotateTransform.CenterX*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterXProperty
  id: CenterXProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterXProperty
  nameWithType: RotateTransform.CenterXProperty
  fullName: System.Windows.Media.RotateTransform.CenterXProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.RotateTransform.CenterX*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty CenterXProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterY
  id: CenterY
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterY
  nameWithType: RotateTransform.CenterY
  fullName: System.Windows.Media.RotateTransform.CenterY
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the y-coordinate of the rotation center point."
  remarks: "When you use a <xref:System.Windows.Media.RotateTransform>, realize that the transformation rotates the coordinate system for a particular object about the point (0, 0). Therefore, depending on the position of the object, it might not rotate in place (around its center). For example, if an object is positioned 200 units from 0 along the x-axis, a rotation of 30 degrees can swing the object 30 degrees along a circle that has a radius of 200, which is drawn around the origin. To rotate an object in place, set the <xref:System.Windows.Media.RotateTransform.CenterX%2A> and CenterY of the <xref:System.Windows.Media.RotateTransform> to the center of the object to rotate.      <a name=&quot;dependencyPropertyInfo_CenterY&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.RotateTransform.CenterYProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public double CenterY { get; set; }
    return:
      type: System.Double
      description: "The y-coordinate of the center of rotation. The default is `0`."
  overload: System.Windows.Media.RotateTransform.CenterY*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CenterYProperty
  id: CenterYProperty
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CenterYProperty
  nameWithType: RotateTransform.CenterYProperty
  fullName: System.Windows.Media.RotateTransform.CenterYProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.RotateTransform.CenterY*> dependency property."
  remarks: "The identifier for the <xref:System.Windows.Media.RotateTransform.CenterY%2A> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty CenterYProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Clone
  id: Clone
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Clone()
  nameWithType: RotateTransform.Clone()
  fullName: System.Windows.Media.RotateTransform.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable copy of this <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref> by making deep copies of its values."
  remarks: "Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.       When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve. It does not copy animations or their current values.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.RotateTransform Clone ();
    parameters: []
    return:
      type: System.Windows.Media.RotateTransform
      description: "A modifiable deep copy of the current object. The <xref:System.Windows.Freezable.IsFrozen*> property of the cloned object returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the <xref:System.Windows.Freezable.IsFrozen*> property of the source is <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.RotateTransform.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: RotateTransform.CloneCurrentValue()
  fullName: System.Windows.Media.RotateTransform.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable copy of this <xref href=&quot;System.Windows.Media.RotateTransform&quot;></xref> object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does copy their current values."
  remarks: "Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.RotateTransform CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.RotateTransform
      description: "A modifiable deep copy of the current object. The <xref:System.Windows.Freezable.IsFrozen*> property of the cloned object is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the <xref:System.Windows.Freezable.IsFrozen*> property of the source is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.RotateTransform.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: RotateTransform.CreateInstanceCore()
  fullName: System.Windows.Media.RotateTransform.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.RotateTransform.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.RotateTransform.Value
  id: Value
  parent: System.Windows.Media.RotateTransform
  langs:
  - csharp
  name: Value
  nameWithType: RotateTransform.Value
  fullName: System.Windows.Media.RotateTransform.Value
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets the current rotation transformation as a <xref href=&quot;System.Windows.Media.Matrix&quot;></xref> object."
  syntax:
    content: public override System.Windows.Media.Matrix Value { get; }
    return:
      type: System.Windows.Media.Matrix
      description: "The current rotation transformation as a <xref href=&quot;System.Windows.Media.Matrix&quot;></xref>."
  overload: System.Windows.Media.RotateTransform.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Transform
  isExternal: false
  name: System.Windows.Media.Transform
- uid: System.Windows.Media.RotateTransform.#ctor
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform()
  nameWithType: RotateTransform.RotateTransform()
  fullName: System.Windows.Media.RotateTransform.RotateTransform()
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double)
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform(Double)
  nameWithType: RotateTransform.RotateTransform(Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform(Double,Double,Double)
  nameWithType: RotateTransform.RotateTransform(Double,Double,Double)
  fullName: System.Windows.Media.RotateTransform.RotateTransform(Double,Double,Double)
- uid: System.Windows.Media.RotateTransform.Angle
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Angle
  nameWithType: RotateTransform.Angle
  fullName: System.Windows.Media.RotateTransform.Angle
- uid: System.Windows.Media.RotateTransform.AngleProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: AngleProperty
  nameWithType: RotateTransform.AngleProperty
  fullName: System.Windows.Media.RotateTransform.AngleProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.RotateTransform.CenterX
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterX
  nameWithType: RotateTransform.CenterX
  fullName: System.Windows.Media.RotateTransform.CenterX
- uid: System.Windows.Media.RotateTransform.CenterXProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterXProperty
  nameWithType: RotateTransform.CenterXProperty
  fullName: System.Windows.Media.RotateTransform.CenterXProperty
- uid: System.Windows.Media.RotateTransform.CenterY
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterY
  nameWithType: RotateTransform.CenterY
  fullName: System.Windows.Media.RotateTransform.CenterY
- uid: System.Windows.Media.RotateTransform.CenterYProperty
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterYProperty
  nameWithType: RotateTransform.CenterYProperty
  fullName: System.Windows.Media.RotateTransform.CenterYProperty
- uid: System.Windows.Media.RotateTransform.Clone
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Clone()
  nameWithType: RotateTransform.Clone()
  fullName: System.Windows.Media.RotateTransform.Clone()
- uid: System.Windows.Media.RotateTransform
  parent: System.Windows.Media
  isExternal: false
  name: RotateTransform
  nameWithType: RotateTransform
  fullName: System.Windows.Media.RotateTransform
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: RotateTransform.CloneCurrentValue()
  fullName: System.Windows.Media.RotateTransform.CloneCurrentValue()
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: RotateTransform.CreateInstanceCore()
  fullName: System.Windows.Media.RotateTransform.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.RotateTransform.Value
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Value
  nameWithType: RotateTransform.Value
  fullName: System.Windows.Media.RotateTransform.Value
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Media.RotateTransform.#ctor*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: RotateTransform
  nameWithType: RotateTransform.RotateTransform
- uid: System.Windows.Media.RotateTransform.Angle*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Angle
  nameWithType: RotateTransform.Angle
- uid: System.Windows.Media.RotateTransform.CenterX*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterX
  nameWithType: RotateTransform.CenterX
- uid: System.Windows.Media.RotateTransform.CenterY*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CenterY
  nameWithType: RotateTransform.CenterY
- uid: System.Windows.Media.RotateTransform.Clone*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Clone
  nameWithType: RotateTransform.Clone
- uid: System.Windows.Media.RotateTransform.CloneCurrentValue*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CloneCurrentValue
  nameWithType: RotateTransform.CloneCurrentValue
- uid: System.Windows.Media.RotateTransform.CreateInstanceCore*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: CreateInstanceCore
  nameWithType: RotateTransform.CreateInstanceCore
- uid: System.Windows.Media.RotateTransform.Value*
  parent: System.Windows.Media.RotateTransform
  isExternal: false
  name: Value
  nameWithType: RotateTransform.Value
