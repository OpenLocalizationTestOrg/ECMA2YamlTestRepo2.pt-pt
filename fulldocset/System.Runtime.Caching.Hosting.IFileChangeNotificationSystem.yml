### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  id: IFileChangeNotificationSystem
  children:
  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  langs:
  - csharp
  name: IFileChangeNotificationSystem
  nameWithType: IFileChangeNotificationSystem
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  type: Interface
  summary: "Define uma forma para expor um personalizado <xref href=&quot;System.Runtime.Caching.FileChangeMonitor&quot;> </xref> objeto para uma implementação de cache."
  remarks: "No ASP.NET, a interface IFileChangeNotificationSystem fornece acesso à gestão de notificação de alteração de ficheiro interno.       A interface IFileChangeNotificationSystem é utilizada internamente pela <xref:System.Runtime.Caching.HostFileChangeMonitor>classe.</xref:System.Runtime.Caching.HostFileChangeMonitor>       Quando uma implementação de cache é executada num domínio de aplicação do ASP.NET, o ASP.NET implementa uma interface IFileChangeNotificationSystem através de <xref:System.Runtime.Caching.ObjectCache.Host%2A>propriedade.</xref:System.Runtime.Caching.ObjectCache.Host%2A> O <xref:System.Runtime.Caching.HostFileChangeMonitor>classe Deteta esta propriedade e utiliza o sistema de notificação de alteração de ficheiro do ASP.NET para expulsar entradas de cache com base na notificação de alteração de ficheiro.</xref:System.Runtime.Caching.HostFileChangeMonitor>       Nas aplicações do ASP.NET não, não há nenhum ambiente anfitrião que implementa uma interface IFileChangeNotificationSystem personalizada. Como resultado, o <xref:System.Runtime.Caching.HostFileChangeMonitor>classe utiliza o <xref:System.IO.FileSystemWatcher>classe do CLR.</xref:System.IO.FileSystemWatcher> </xref:System.Runtime.Caching.HostFileChangeMonitor>"
  syntax:
    content: public interface IFileChangeNotificationSystem
  implements: []
  platform:
  - net462
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  id: StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  langs:
  - csharp
  name: StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: "Regista um caminho de ficheiro para monitorizar com o ambiente anfitrião."
  remarks: "Este método é utilizado por objetos da cache personalizadas e monitores que implementam o ambiente de anfitrião de alteração de personalizado <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>interface para registar os caminhos de ficheiros para monitorização com o ambiente anfitrião.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> O método de StartMonitoring é chamado pelo implementadores do <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>interface para registar um ficheiro ou diretório para a monitorização de alterações.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>"
  syntax:
    content: public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho físico completamente qualificado de um diretório ou ficheiro para monitorizar as alterações."
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: "Uma referência a um método que implementa o <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> delegar. Quando o ficheiro monitorizado ou diretório for alterada, implementação do ambiente de anfitrião do <xref href=&quot;System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&quot;> </xref> interface desencadeia um evento ao chamar o <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> classe."
    - id: state
      type: System.Object
      description: "O estado fornecido pelo ambiente anfitrião. Implementações de cache e monitores de alteração personalizada devem processar o valor de estado como opaco. No entanto, o estado tem de ser armazenado para que podem ser enviada para o ambiente de anfitrião, quando a implementação de cache chama o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*>método.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*>"
    - id: lastWriteTime
      type: System.DateTimeOffset
      description: "Quando este método devolve, contém o último data e hora em que ocorreu uma operação de escrita no `filePath`. Este parâmetro é transmitido não inicializado. Este parâmetro é devolvido a partir do ambiente do anfitrião."
    - id: fileSize
      type: System.Int64
      description: "Quando este método devolve, contém o tamanho total do monitorizado `filePath`. Este parâmetro é transmitido não inicializado. Este parâmetro é devolvido a partir do ambiente do anfitrião."
  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  id: StopMonitoring(System.String,System.Object)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  langs:
  - csharp
  name: StopMonitoring(String,Object)
  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String,Object)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(String,Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: "Terminar alterar monitorização."
  remarks: "O método StopMonitoring tem de ser chamado por caches personalizadas e monitores de alteração personalizada que estão a ser eliminados pelo ambiente anfitrião para parar a monitorização de caminhos de ficheiros e diretórios."
  syntax:
    content: public void StopMonitoring (string filePath, object state);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho do ficheiro ou pasta para parar a monitorização. Isto deve corresponder ao valor de caminho de ficheiro que foi transmitido uma chamada anterior para o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>método.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>"
    - id: state
      type: System.Object
      description: "As informações de estado que foi originalmente fornecidas pelo ambiente anfitrião durante uma chamada anterior para o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>método.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>"
  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StopMonitoring(String,Object)
  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String,Object)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(String,Object)
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StartMonitoring
  nameWithType: IFileChangeNotificationSystem.StartMonitoring
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StopMonitoring
  nameWithType: IFileChangeNotificationSystem.StopMonitoring
