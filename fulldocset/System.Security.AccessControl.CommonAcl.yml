### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonAcl
  id: CommonAcl
  children:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.CommonAcl.Revision
  langs:
  - csharp
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
  type: Class
  summary: "Represents an access control list (ACL) and is the base class for the <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;></xref> and <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;></xref> classes."
  remarks: "-   Certain combinations of inheritance and access mask flags are meaningless:      -   Any access control entry (ACE) with a zero-access mask is removed.      -   Inherit-only ACEs inside object ACLs are removed.      -   <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.InheritanceFlags>, and <xref:System.Security.AccessControl.InheritanceFlags> flags on all ACEs in leaf object ACLs are cleared.      -   ACEs that have an <xref:System.Security.AccessControl.PropagationFlags> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags> or <xref:System.Security.AccessControl.InheritanceFlags> flag are meaningless; they are removed.      -   The <xref:System.Security.AccessControl.PropagationFlags> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags> or <xref:System.Security.AccessControl.InheritanceFlags> flag can be removed.      -   ACEs that have an <xref:System.Security.AccessControl.AuditFlags> value of <xref:System.Security.AccessControl.AuditFlags> or <xref:System.Security.AccessControl.AuditFlags> in discretionary access control lists (DACLs) are removed.      -   Any audit ACE that does not specify either <xref:System.Security.AccessControl.AuditFlags> or <xref:System.Security.AccessControl.AuditFlags> is removed.      -   On DACLs, SystemAudit and SystemAlarm ACEs are removed.      -   On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.       Canonical order is maintained according to the following algorithm:      -   Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.      -   In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access. For directory object ACLs, the nonobject ACEs come before object ACEs.      -   All common ACEs take precedence over noncommon ACEs.      -   Inherited ACEs maintain their relative order after canonicity.      -   Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.      -   Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> methods of the <xref:System.Security.Principal.SecurityIdentifier> objects associated with the ACEs.       Adjacent ACEs are combined, if appropriate.  This reduces the size of the ACL without affecting the access control semantics it grants."
  syntax:
    content: 'public abstract class CommonAcl : System.Security.AccessControl.GenericAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the length, in bytes, of the binary representation of the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object. This length should be used before marshaling the access control list (ACL) into a binary array by using the <xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*> method."
  syntax:
    content: public override sealed int BinaryLength { get; }
    return:
      type: System.Int32
      description: "The length, in bytes, of the binary representation of the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object."
  overload: System.Security.AccessControl.CommonAcl.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Count
  id: Count
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the number of access control entries (ACEs) in the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object."
  syntax:
    content: public override sealed int Count { get; }
    return:
      type: System.Int32
      description: "The number of ACEs in the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object."
  overload: System.Security.AccessControl.CommonAcl.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals the contents of the <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object into the specified byte array beginning at the specified offset."
  syntax:
    content: public override sealed void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "The byte array into which the contents of the <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> is marshaled."
    - id: offset
      type: System.Int32
      description: "The offset at which to start marshaling."
  overload: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  id: IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object are in canonical order."
  syntax:
    content: public bool IsCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the ACEs in the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object are in canonical order; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.AccessControl.CommonAcl.IsCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets whether the <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object is a container."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object is a container."
  overload: System.Security.AccessControl.CommonAcl.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets whether the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object is a directory object access control list (ACL)."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object is a directory object ACL."
  overload: System.Security.AccessControl.CommonAcl.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the <xref href=&quot;System.Security.AccessControl.CommonAce&quot;></xref> at the specified index."
  syntax:
    content: public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Security.AccessControl.CommonAce&quot;></xref> to get or set."
    return:
      type: System.Security.AccessControl.GenericAce
      description: "The <xref href=&quot;System.Security.AccessControl.CommonAce&quot;></xref> at the specified index."
  overload: System.Security.AccessControl.CommonAcl.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  id: Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Removes all access control entries (ACEs) contained by this <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object that are associated with the specified <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  syntax:
    content: public void Purge (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object to check for."
  overload: System.Security.AccessControl.CommonAcl.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  id: RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Removes all inherited access control entries (ACEs) from this <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref> object."
  syntax:
    content: public void RemoveInheritedAces ();
    parameters: []
  overload: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Revision
  id: Revision
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the revision level of the <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref>."
  syntax:
    content: public override sealed byte Revision { get; }
    return:
      type: System.Byte
      description: "A byte value that specifies the revision level of the <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;></xref>."
  overload: System.Security.AccessControl.CommonAcl.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
- uid: System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonAcl.BinaryLength*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm
  nameWithType: CommonAcl.GetBinaryForm
- uid: System.Security.AccessControl.CommonAcl.IsCanonical*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item
  nameWithType: CommonAcl.Item
- uid: System.Security.AccessControl.CommonAcl.Purge*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge
  nameWithType: CommonAcl.Purge
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces
  nameWithType: CommonAcl.RemoveInheritedAces
- uid: System.Security.AccessControl.CommonAcl.Revision*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
