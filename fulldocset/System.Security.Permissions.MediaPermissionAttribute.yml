### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.MediaPermissionAttribute
  id: MediaPermissionAttribute
  children:
  - System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.MediaPermissionAttribute.Audio
  - System.Security.Permissions.MediaPermissionAttribute.CreatePermission
  - System.Security.Permissions.MediaPermissionAttribute.Image
  - System.Security.Permissions.MediaPermissionAttribute.Video
  langs:
  - csharp
  name: MediaPermissionAttribute
  nameWithType: MediaPermissionAttribute
  fullName: System.Security.Permissions.MediaPermissionAttribute
  type: Class
  summary: "Allows security actions for <xref href=&quot;System.Security.Permissions.MediaPermission&quot;></xref> to be applied to code using declarative security."
  remarks: "MediaPermissionAttribute controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application. The scope of the declaration that is allowed depends on the <xref:System.Security.Permissions.SecurityAction> that is used.       The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. For imperative security, use the corresponding permission class, <xref:System.Security.Permissions.MediaPermission>."
  example:
  - "The following example shows how to demand that the calling code has unrestricted <xref:System.Security.Permissions.MediaPermissionAudio> at link time. Demands are typically made in managed libraries (DLLs) to help protect methods or classes from potentially harmful code.  \n  \n [!code-vb[SecurityPermissionsSnippets#MediaPermissionAttribute1](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermissionattribute1)]\n [!code-cs[SecurityPermissionsSnippets#MediaPermissionAttribute1](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermissionattribute1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class MediaPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.MediaPermissionAttribute
  langs:
  - csharp
  name: MediaPermissionAttribute(SecurityAction)
  nameWithType: MediaPermissionAttribute.MediaPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.MediaPermissionAttribute.MediaPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of <xref href=&quot;System.Security.Permissions.MediaPermissionAttribute&quot;></xref>."
  remarks: "The default media values are <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo>."
  example:
  - "The following code example shows how to create a <xref:System.Security.Permissions.MediaPermissionAttribute>.  \n  \n [!code-vb[SecurityPermissionsSnippets#MediaPermissionAttribute13](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermissionattribute13)]\n [!code-cs[SecurityPermissionsSnippets#MediaPermissionAttribute13](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermissionattribute13)]"
  syntax:
    content: public MediaPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "One of the <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> values."
  overload: System.Security.Permissions.MediaPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.MediaPermissionAttribute.Audio
  id: Audio
  parent: System.Security.Permissions.MediaPermissionAttribute
  langs:
  - csharp
  name: Audio
  nameWithType: MediaPermissionAttribute.Audio
  fullName: System.Security.Permissions.MediaPermissionAttribute.Audio
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Gets or sets the audio permission level for the <xref href=&quot;System.Security.Permissions.MediaPermissionAttribute&quot;></xref>."
  remarks: "The default is <xref:System.Security.Permissions.MediaPermissionAudio>."
  example:
  - "The following code example shows the use of the Audio property.  \n  \n [!code-vb[SecurityPermissionsSnippets#MediaPermissionAttribute4](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermissionattribute4)]\n [!code-cs[SecurityPermissionsSnippets#MediaPermissionAttribute4](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermissionattribute4)]"
  syntax:
    content: public System.Security.Permissions.MediaPermissionAudio Audio { get; set; }
    return:
      type: System.Security.Permissions.MediaPermissionAudio
      description: "The state of the <xref href=&quot;System.Security.Permissions.MediaPermissionAudio&quot;></xref>."
  overload: System.Security.Permissions.MediaPermissionAttribute.Audio*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.MediaPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.MediaPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: MediaPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.MediaPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Creates and returns a new <xref href=&quot;System.Security.Permissions.MediaPermission&quot;></xref>."
  remarks: "This method should only be called by the security system, never by application code.       At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.MediaPermission&quot;></xref> that corresponds to this attribute."
  overload: System.Security.Permissions.MediaPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.MediaPermissionAttribute.Image
  id: Image
  parent: System.Security.Permissions.MediaPermissionAttribute
  langs:
  - csharp
  name: Image
  nameWithType: MediaPermissionAttribute.Image
  fullName: System.Security.Permissions.MediaPermissionAttribute.Image
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Gets or sets the image permission level for the <xref href=&quot;System.Security.Permissions.MediaPermissionAttribute&quot;></xref>."
  remarks: "The default is <xref:System.Security.Permissions.MediaPermissionImage>."
  example:
  - "The following code example shows the use of the Image property.  \n  \n [!code-vb[SecurityPermissionsSnippets#MediaPermissionAttribute5](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermissionattribute5)]\n [!code-cs[SecurityPermissionsSnippets#MediaPermissionAttribute5](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermissionattribute5)]"
  syntax:
    content: public System.Security.Permissions.MediaPermissionImage Image { get; set; }
    return:
      type: System.Security.Permissions.MediaPermissionImage
      description: "The state of the <xref href=&quot;System.Security.Permissions.MediaPermissionImage&quot;></xref>."
  overload: System.Security.Permissions.MediaPermissionAttribute.Image*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.MediaPermissionAttribute.Video
  id: Video
  parent: System.Security.Permissions.MediaPermissionAttribute
  langs:
  - csharp
  name: Video
  nameWithType: MediaPermissionAttribute.Video
  fullName: System.Security.Permissions.MediaPermissionAttribute.Video
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.Permissions
  summary: "Gets or sets the video permission level for the <xref href=&quot;System.Security.Permissions.MediaPermissionAttribute&quot;></xref>."
  remarks: "The default is <xref:System.Security.Permissions.MediaPermissionVideo>."
  example:
  - "The following code example shows the use of the Video property.  \n  \n [!code-vb[SecurityPermissionsSnippets#MediaPermissionAttribute10](~/add/codesnippet/visualbasic/securitypermissionssnippets/window1.xaml.vb#mediapermissionattribute10)]\n [!code-cs[SecurityPermissionsSnippets#MediaPermissionAttribute10](~/add/codesnippet/csharp/SecurityPermissionsSnippets/Window1.xaml.cs#mediapermissionattribute10)]"
  syntax:
    content: public System.Security.Permissions.MediaPermissionVideo Video { get; set; }
    return:
      type: System.Security.Permissions.MediaPermissionVideo
      description: "The state of the <xref href=&quot;System.Security.Permissions.MediaPermissionVideo&quot;></xref>."
  overload: System.Security.Permissions.MediaPermissionAttribute.Video*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: MediaPermissionAttribute(SecurityAction)
  nameWithType: MediaPermissionAttribute.MediaPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.MediaPermissionAttribute.MediaPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.MediaPermissionAttribute.Audio
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: Audio
  nameWithType: MediaPermissionAttribute.Audio
  fullName: System.Security.Permissions.MediaPermissionAttribute.Audio
- uid: System.Security.Permissions.MediaPermissionAudio
  parent: System.Security.Permissions
  isExternal: false
  name: MediaPermissionAudio
  nameWithType: MediaPermissionAudio
  fullName: System.Security.Permissions.MediaPermissionAudio
- uid: System.Security.Permissions.MediaPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: MediaPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.MediaPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.MediaPermissionAttribute.Image
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: Image
  nameWithType: MediaPermissionAttribute.Image
  fullName: System.Security.Permissions.MediaPermissionAttribute.Image
- uid: System.Security.Permissions.MediaPermissionImage
  parent: System.Security.Permissions
  isExternal: false
  name: MediaPermissionImage
  nameWithType: MediaPermissionImage
  fullName: System.Security.Permissions.MediaPermissionImage
- uid: System.Security.Permissions.MediaPermissionAttribute.Video
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: Video
  nameWithType: MediaPermissionAttribute.Video
  fullName: System.Security.Permissions.MediaPermissionAttribute.Video
- uid: System.Security.Permissions.MediaPermissionVideo
  parent: System.Security.Permissions
  isExternal: false
  name: MediaPermissionVideo
  nameWithType: MediaPermissionVideo
  fullName: System.Security.Permissions.MediaPermissionVideo
- uid: System.Security.Permissions.MediaPermissionAttribute.#ctor*
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: MediaPermissionAttribute
  nameWithType: MediaPermissionAttribute.MediaPermissionAttribute
- uid: System.Security.Permissions.MediaPermissionAttribute.Audio*
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: Audio
  nameWithType: MediaPermissionAttribute.Audio
- uid: System.Security.Permissions.MediaPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: MediaPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.MediaPermissionAttribute.Image*
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: Image
  nameWithType: MediaPermissionAttribute.Image
- uid: System.Security.Permissions.MediaPermissionAttribute.Video*
  parent: System.Security.Permissions.MediaPermissionAttribute
  isExternal: false
  name: Video
  nameWithType: MediaPermissionAttribute.Video
