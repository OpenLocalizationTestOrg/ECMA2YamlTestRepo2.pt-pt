### YamlMime:ManagedReference
items:
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  id: HasRunnableWorkflowEvent
  children:
  - System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor
  langs:
  - csharp
  name: HasRunnableWorkflowEvent
  nameWithType: HasRunnableWorkflowEvent
  fullName: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  type: Class
  summary: "Representa um evento que gera o arquivo de instância de fluxo de trabalho do SQL Server para notificar os anfitriões de fluxo de trabalho sobre a existência de instâncias passíveis de execução na base de dados de persistência."
  remarks: "É uma instância *passíveis de execução*, se não está no estado suspenso ou o estado concluído e satisfaz as condições seguintes:-a instância está desbloqueada e tem um temporizador pendente que expirou.      -A instância está desbloqueada e o respetivo estado é **Executing**.      -A instância tem um bloqueio inválido.       Um arquivo de instância periodicamente procurar de instâncias passíveis de execução que pertençam a um anfitrião de fluxo de trabalho que utiliza o arquivo. Este deve aumentar o HasRunnableWorkflowEvent quando localizar uma instância passível de execução no arquivo de persistência que corresponde ao respetivo tipo de anfitrião de fluxo de trabalho. Se o arquivo de instância não encontrar uma instância passível de execução no arquivo de persistência, deve continuar a monitorizar o arquivo de persistência de quaisquer instâncias passíveis de execução.       Depois de aumentar o HasRunnableWorkflowEvent, o arquivo de instância deve parar a monitorização do arquivo de persistência de instâncias passíveis de execução até que recebe e executa <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> A monitorização continua apenas se a execução de TryLoadRunnableWorkflowCommand não devolve quaisquer instâncias passíveis de execução.       Quando um anfitrião de fluxo de trabalho recebe a HasRunnableWorkflowEvent, executa a <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>contra o arquivo de instância para carregar a instância para a memória.</xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>"
  syntax:
    content: 'public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasRunnableWorkflowEvent>'
  inheritance:
  - System.Object
  - System.Runtime.DurableInstancing.InstancePersistenceEvent
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  implements: []
  inheritedMembers:
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.GetHashCode
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Name
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Equality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Inequality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1.Value
  platform:
  - net462
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor
  id: '#ctor'
  parent: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  langs:
  - csharp
  name: HasRunnableWorkflowEvent()
  nameWithType: HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  summary: "Inicializa uma instância do <xref href=&quot;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&quot;> </xref> classe."
  syntax:
    content: public HasRunnableWorkflowEvent ();
    parameters: []
  overload: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  isExternal: false
  name: System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasRunnableWorkflowEvent>
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor
  parent: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  isExternal: false
  name: HasRunnableWorkflowEvent()
  nameWithType: HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor*
  parent: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  isExternal: false
  name: HasRunnableWorkflowEvent
  nameWithType: HasRunnableWorkflowEvent.HasRunnableWorkflowEvent
