### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.SecurityCallContext
  id: SecurityCallContext
  children:
  - System.EnterpriseServices.SecurityCallContext.Callers
  - System.EnterpriseServices.SecurityCallContext.CurrentCall
  - System.EnterpriseServices.SecurityCallContext.DirectCaller
  - System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)
  - System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled
  - System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)
  - System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel
  - System.EnterpriseServices.SecurityCallContext.NumCallers
  - System.EnterpriseServices.SecurityCallContext.OriginalCaller
  langs:
  - csharp
  name: SecurityCallContext
  nameWithType: SecurityCallContext
  fullName: System.EnterpriseServices.SecurityCallContext
  type: Class
  summary: "Describes the chain of callers leading up to the current method call."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the SecurityCallContext class to interrogate the security context of calls to the methods of a <xref:System.EnterpriseServices.ServicedComponent> class.  \n  \n [!code-cpp[EnterpriseServices_Security#4](~/add/codesnippet/cpp/t-system.enterpriseservi_21_1.cpp)]\n [!code-cs[EnterpriseServices_Security#4](~/add/codesnippet/csharp/t-system.enterpriseservi_21_1.cs)]\n [!code-vb[EnterpriseServices_Security#4](~/add/codesnippet/visualbasic/t-system.enterpriseservi_21_1.vb)]"
  syntax:
    content: public sealed class SecurityCallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.Callers
  id: Callers
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: Callers
  nameWithType: SecurityCallContext.Callers
  fullName: System.EnterpriseServices.SecurityCallContext.Callers
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a <xref href=&quot;System.EnterpriseServices.SecurityCallers&quot;></xref> object that describes the caller."
  remarks: "Callers accesses the `Callers` item in the `ISecurityCallContext` collection in COM+."
  syntax:
    content: public System.EnterpriseServices.SecurityCallers Callers { get; }
    return:
      type: System.EnterpriseServices.SecurityCallers
      description: "The <xref href=&quot;System.EnterpriseServices.SecurityCallers&quot;></xref> object that describes the caller."
  overload: System.EnterpriseServices.SecurityCallContext.Callers*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "There is no security context."
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.CurrentCall
  id: CurrentCall
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: CurrentCall
  nameWithType: SecurityCallContext.CurrentCall
  fullName: System.EnterpriseServices.SecurityCallContext.CurrentCall
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a <xref href=&quot;System.EnterpriseServices.SecurityCallContext&quot;></xref> object that describes the security call context."
  remarks: "The static CurrentCall property is the recommended way to access the security call context."
  example:
  - "The following code example demonstrates the use of this method to obtain a <xref:System.EnterpriseServices.SecurityCallContext> object describing the security context of a method call.  \n  \n [!code-cpp[EnterpriseServices_Security#6](~/add/codesnippet/cpp/p-system.enterpriseservi_25_1.cpp)]\n [!code-cs[EnterpriseServices_Security#6](~/add/codesnippet/csharp/p-system.enterpriseservi_25_1.cs)]\n [!code-vb[EnterpriseServices_Security#6](~/add/codesnippet/visualbasic/p-system.enterpriseservi_25_1.vb)]"
  syntax:
    content: public static System.EnterpriseServices.SecurityCallContext CurrentCall { get; }
    return:
      type: System.EnterpriseServices.SecurityCallContext
      description: "The <xref href=&quot;System.EnterpriseServices.SecurityCallContext&quot;></xref> object that describes the security call context."
  overload: System.EnterpriseServices.SecurityCallContext.CurrentCall*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.DirectCaller
  id: DirectCaller
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: DirectCaller
  nameWithType: SecurityCallContext.DirectCaller
  fullName: System.EnterpriseServices.SecurityCallContext.DirectCaller
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a <xref href=&quot;System.EnterpriseServices.SecurityIdentity&quot;></xref> object that describes the direct caller of this method."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method to check the identity of the direct caller of a <xref:System.EnterpriseServices.ServicedComponent> method.  \n  \n [!code-cpp[EnterpriseServices_Security#7](~/add/codesnippet/cpp/p-system.enterpriseservi_26_1.cpp)]\n [!code-cs[EnterpriseServices_Security#7](~/add/codesnippet/csharp/p-system.enterpriseservi_26_1.cs)]\n [!code-vb[EnterpriseServices_Security#7](~/add/codesnippet/visualbasic/p-system.enterpriseservi_26_1.vb)]"
  syntax:
    content: public System.EnterpriseServices.SecurityIdentity DirectCaller { get; }
    return:
      type: System.EnterpriseServices.SecurityIdentity
      description: "A <xref href=&quot;System.EnterpriseServices.SecurityIdentity&quot;></xref> value."
  overload: System.EnterpriseServices.SecurityCallContext.DirectCaller*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)
  id: IsCallerInRole(System.String)
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: IsCallerInRole(String)
  nameWithType: SecurityCallContext.IsCallerInRole(String)
  fullName: System.EnterpriseServices.SecurityCallContext.IsCallerInRole(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Verifies that the direct caller is a member of the specified role."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this method to determine if the caller of a <xref:System.EnterpriseServices.ServicedComponent> method is in a specified role.  \n  \n [!code-cpp[EnterpriseServices_Security#6](~/add/codesnippet/cpp/m-system.enterpriseservi_10_1.cpp)]\n [!code-cs[EnterpriseServices_Security#6](~/add/codesnippet/csharp/m-system.enterpriseservi_10_1.cs)]\n [!code-vb[EnterpriseServices_Security#6](~/add/codesnippet/visualbasic/m-system.enterpriseservi_10_1.vb)]"
  syntax:
    content: public bool IsCallerInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "The specified role."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the direct caller is a member of the specified role; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.SecurityCallContext.IsCallerInRole*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled
  id: IsSecurityEnabled
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: IsSecurityEnabled
  nameWithType: SecurityCallContext.IsSecurityEnabled
  fullName: System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Determines whether security checks are enabled in the current context."
  syntax:
    content: public bool IsSecurityEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if security checks are enabled in the current context; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: SecurityCallContext.IsUserInRole(String,String)
  fullName: System.EnterpriseServices.SecurityCallContext.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Verifies that the specified user is in the specified role."
  syntax:
    content: public bool IsUserInRole (string user, string role);
    parameters:
    - id: user
      type: System.String
      description: "The specified user."
    - id: role
      type: System.String
      description: "The specified role."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified user is a member of the specified role; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.SecurityCallContext.IsUserInRole*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel
  id: MinAuthenticationLevel
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: MinAuthenticationLevel
  nameWithType: SecurityCallContext.MinAuthenticationLevel
  fullName: System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets the <xref uid=&quot;langword_csharp_MinAuthenticationLevel&quot; name=&quot;MinAuthenticationLevel&quot; href=&quot;&quot;></xref> value from the <xref uid=&quot;langword_csharp_ISecurityCallContext&quot; name=&quot;ISecurityCallContext&quot; href=&quot;&quot;></xref> collection in COM+."
  remarks: "MinAuthenticationLevel is the least secure authentication level of all callers in the chain."
  syntax:
    content: public int MinAuthenticationLevel { get; }
    return:
      type: System.Int32
      description: "The <xref uid=&quot;langword_csharp_MinAuthenticationLevel&quot; name=&quot;MinAuthenticationLevel&quot; href=&quot;&quot;></xref> value from the <xref uid=&quot;langword_csharp_ISecurityCallContext&quot; name=&quot;ISecurityCallContext&quot; href=&quot;&quot;></xref> collection in COM+."
  overload: System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.NumCallers
  id: NumCallers
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: NumCallers
  nameWithType: SecurityCallContext.NumCallers
  fullName: System.EnterpriseServices.SecurityCallContext.NumCallers
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets the <xref uid=&quot;langword_csharp_NumCallers&quot; name=&quot;NumCallers&quot; href=&quot;&quot;></xref> value from the <xref uid=&quot;langword_csharp_ISecurityCallContext&quot; name=&quot;ISecurityCallContext&quot; href=&quot;&quot;></xref> collection in COM+."
  remarks: "NumCallers is the number of callers in the chain of calls."
  syntax:
    content: public int NumCallers { get; }
    return:
      type: System.Int32
      description: "The <xref uid=&quot;langword_csharp_NumCallers&quot; name=&quot;NumCallers&quot; href=&quot;&quot;></xref> value from the <xref uid=&quot;langword_csharp_ISecurityCallContext&quot; name=&quot;ISecurityCallContext&quot; href=&quot;&quot;></xref> collection in COM+."
  overload: System.EnterpriseServices.SecurityCallContext.NumCallers*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityCallContext.OriginalCaller
  id: OriginalCaller
  parent: System.EnterpriseServices.SecurityCallContext
  langs:
  - csharp
  name: OriginalCaller
  nameWithType: SecurityCallContext.OriginalCaller
  fullName: System.EnterpriseServices.SecurityCallContext.OriginalCaller
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets a <xref href=&quot;System.EnterpriseServices.SecurityIdentity&quot;></xref> that describes the original caller."
  syntax:
    content: public System.EnterpriseServices.SecurityIdentity OriginalCaller { get; }
    return:
      type: System.EnterpriseServices.SecurityIdentity
      description: "One of the <xref href=&quot;System.EnterpriseServices.SecurityIdentity&quot;></xref> values."
  overload: System.EnterpriseServices.SecurityCallContext.OriginalCaller*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.EnterpriseServices.SecurityCallContext.Callers
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: Callers
  nameWithType: SecurityCallContext.Callers
  fullName: System.EnterpriseServices.SecurityCallContext.Callers
- uid: System.EnterpriseServices.SecurityCallers
  parent: System.EnterpriseServices
  isExternal: false
  name: SecurityCallers
  nameWithType: SecurityCallers
  fullName: System.EnterpriseServices.SecurityCallers
- uid: System.EnterpriseServices.SecurityCallContext.CurrentCall
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: CurrentCall
  nameWithType: SecurityCallContext.CurrentCall
  fullName: System.EnterpriseServices.SecurityCallContext.CurrentCall
- uid: System.EnterpriseServices.SecurityCallContext
  parent: System.EnterpriseServices
  isExternal: false
  name: SecurityCallContext
  nameWithType: SecurityCallContext
  fullName: System.EnterpriseServices.SecurityCallContext
- uid: System.EnterpriseServices.SecurityCallContext.DirectCaller
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: DirectCaller
  nameWithType: SecurityCallContext.DirectCaller
  fullName: System.EnterpriseServices.SecurityCallContext.DirectCaller
- uid: System.EnterpriseServices.SecurityIdentity
  parent: System.EnterpriseServices
  isExternal: false
  name: SecurityIdentity
  nameWithType: SecurityIdentity
  fullName: System.EnterpriseServices.SecurityIdentity
- uid: System.EnterpriseServices.SecurityCallContext.IsCallerInRole(System.String)
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: IsCallerInRole(String)
  nameWithType: SecurityCallContext.IsCallerInRole(String)
  fullName: System.EnterpriseServices.SecurityCallContext.IsCallerInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: IsSecurityEnabled
  nameWithType: SecurityCallContext.IsSecurityEnabled
  fullName: System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled
- uid: System.EnterpriseServices.SecurityCallContext.IsUserInRole(System.String,System.String)
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: SecurityCallContext.IsUserInRole(String,String)
  fullName: System.EnterpriseServices.SecurityCallContext.IsUserInRole(String,String)
- uid: System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: MinAuthenticationLevel
  nameWithType: SecurityCallContext.MinAuthenticationLevel
  fullName: System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EnterpriseServices.SecurityCallContext.NumCallers
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: NumCallers
  nameWithType: SecurityCallContext.NumCallers
  fullName: System.EnterpriseServices.SecurityCallContext.NumCallers
- uid: System.EnterpriseServices.SecurityCallContext.OriginalCaller
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: OriginalCaller
  nameWithType: SecurityCallContext.OriginalCaller
  fullName: System.EnterpriseServices.SecurityCallContext.OriginalCaller
- uid: System.EnterpriseServices.SecurityCallContext.Callers*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: Callers
  nameWithType: SecurityCallContext.Callers
- uid: System.EnterpriseServices.SecurityCallContext.CurrentCall*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: CurrentCall
  nameWithType: SecurityCallContext.CurrentCall
- uid: System.EnterpriseServices.SecurityCallContext.DirectCaller*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: DirectCaller
  nameWithType: SecurityCallContext.DirectCaller
- uid: System.EnterpriseServices.SecurityCallContext.IsCallerInRole*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: IsCallerInRole
  nameWithType: SecurityCallContext.IsCallerInRole
- uid: System.EnterpriseServices.SecurityCallContext.IsSecurityEnabled*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: IsSecurityEnabled
  nameWithType: SecurityCallContext.IsSecurityEnabled
- uid: System.EnterpriseServices.SecurityCallContext.IsUserInRole*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: IsUserInRole
  nameWithType: SecurityCallContext.IsUserInRole
- uid: System.EnterpriseServices.SecurityCallContext.MinAuthenticationLevel*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: MinAuthenticationLevel
  nameWithType: SecurityCallContext.MinAuthenticationLevel
- uid: System.EnterpriseServices.SecurityCallContext.NumCallers*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: NumCallers
  nameWithType: SecurityCallContext.NumCallers
- uid: System.EnterpriseServices.SecurityCallContext.OriginalCaller*
  parent: System.EnterpriseServices.SecurityCallContext
  isExternal: false
  name: OriginalCaller
  nameWithType: SecurityCallContext.OriginalCaller
