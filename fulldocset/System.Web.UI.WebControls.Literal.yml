### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Literal
  id: Literal
  children:
  - System.Web.UI.WebControls.Literal.#ctor
  - System.Web.UI.WebControls.Literal.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Literal.CreateControlCollection
  - System.Web.UI.WebControls.Literal.Focus
  - System.Web.UI.WebControls.Literal.Mode
  - System.Web.UI.WebControls.Literal.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Literal.Text
  langs:
  - csharp
  name: Literal
  nameWithType: Literal
  fullName: System.Web.UI.WebControls.Literal
  type: Class
  summary: "Reserves a location on the Web page to display static text."
  remarks: "In this topic:      -   [Introduction](#introduction)      -   [Declarative Syntax](#declarative_syntax)      <a name=&quot;introduction&quot;></a>    ## Introduction    Use the Literal control to reserve a location on the Web page to display text. The Literal control is similar to the <xref:System.Web.UI.WebControls.Label> control, except the Literal control does not allow you to apply a style to the displayed text. You can programmatically control the text displayed in the control by setting the <xref:System.Web.UI.WebControls.Literal.Text%2A> property.      > [!CAUTION] >  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input.       For more information about security, see [Securing Standard Controls](~/add/includes/ajax-current-ext-md.md), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](~/add/includes/ajax-current-ext-md.md), and [Validating User Input in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:Literal       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       Mode=&quot;Transform|PassThrough|Encode&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Text=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following example demonstrates how to use the Literal control to display static text.  \n  \n> [!NOTE]\n>  The following example uses the single-file code model and might not work correctly if copied directly into a code-behind file. This code example must be copied into an empty text file that has an .aspx extension. For more information about the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Literal#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_323_1.aspx)]\n [!code-vb[Literal#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_323_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LiteralDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LiteralControlBuilder))]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class Literal : System.Web.UI.Control, System.Web.UI.ITextControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.ITextControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: Literal()
  nameWithType: Literal.Literal()
  fullName: System.Web.UI.WebControls.Literal.Literal()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> class."
  syntax:
    content: public Literal ();
    parameters: []
  overload: System.Web.UI.WebControls.Literal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Literal.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Literal.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Notifies the <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> control that an XML or HTML element was parsed and adds that element to the <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> of the control."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddParsedSubObject method in a custom server control so that it always sets the <xref:System.Web.UI.WebControls.Literal.Text%2A> property to the parsed object's `Text` property, if the parsed object is a <xref:System.Web.UI.WebControls.Literal>, and to an empty `string` otherwise.  \n  \n [!code-cs[CustomLiteralAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[CustomLiteralAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_104_1.aspx)]  \n  \n [!code-cs[CustomLiteralAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_104_2.cs)]\n [!code-vb[CustomLiteralAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_104_2.vb)]"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "An <xref:System.Object> that represents the parsed element."
  overload: System.Web.UI.WebControls.Literal.AddParsedSubObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>obj</code> is not of type <xref href=&quot;System.Web.UI.LiteralControl&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Literal.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Literal.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates an <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref> object for the current instance of the <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> control."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the CreateControlCollection method in a custom server control so that it always returns an instance of the <xref:System.Web.UI.EmptyControlCollection> class for the <xref:System.Web.UI.WebControls.Literal> object.  \n  \n [!code-cs[CustomLiteralCreateControlCollection#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_220_1.aspx)]\n [!code-vb[CustomLiteralCreateControlCollection#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_220_1.aspx)]  \n  \n [!code-cs[CustomLiteralCreateControlCollection#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_220_2.cs)]\n [!code-vb[CustomLiteralCreateControlCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_220_2.vb)]"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> object to contain the current server control&quot;s child server controls."
  overload: System.Web.UI.WebControls.Literal.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.Focus
  id: Focus
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: Focus()
  nameWithType: Literal.Focus()
  fullName: System.Web.UI.WebControls.Literal.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Set input focus to a control; the Focus base control method is not supported on a <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> control."
  remarks: "The <xref:System.Web.UI.WebControls.Literal> control overrides the <xref:System.Web.UI.Control.Focus%2A> method of the base class. The Focus method of a <xref:System.Web.UI.WebControls.Literal> control always throws an exception to indicate that the Focus method is not supported on a <xref:System.Web.UI.WebControls.Literal> control."
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.Literal.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The Focus was called on a <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.Mode
  id: Mode
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: Mode
  nameWithType: Literal.Mode
  fullName: System.Web.UI.WebControls.Literal.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets an enumeration value that specifies how the content in the <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> control is rendered."
  remarks: "Use the Mode property to specify how the contents of a <xref:System.Web.UI.WebControls.Literal> control should be rendered. This property is set using one of the <xref:System.Web.UI.WebControls.LiteralMode> enumeration values. The following table lists the possible values.      |Value|Description|   |-----------|-----------------|   |`PassThrough`|The contents of the control are not modified.|   |`Encode`|The contents of the control are converted to an HTML-encoded string.|   |`Transform`|Unsupported markup-language elements are removed from the contents of the control. If the <xref:System.Web.UI.WebControls.Literal> control is rendered on a browser that supports HTML or XHTML, the control&quot;s contents are not modified.|       If you specify `PassThrough`, the entire contents of the <xref:System.Web.UI.WebControls.Literal.Text%2A> property are passed to the device or browser without making any modifications. For example, if the <xref:System.Web.UI.WebControls.Literal.Text%2A> property of a <xref:System.Web.UI.WebControls.Literal> control contains an `<hr>` tag, it is sent to all devices and browsers whether it is supported or not.       If you specify `Encode`, the contents for the <xref:System.Web.UI.WebControls.Literal.Text%2A> property are converted into an HTML-encoded string before rendering. For example, if the <xref:System.Web.UI.WebControls.Literal.Text%2A> property of a <xref:System.Web.UI.WebControls.Literal> control contains an `<hr>` tag, it is converted to `<Hr>` and sent to the device or browser.       If you specify `Transform`, the rendering behavior of the <xref:System.Web.UI.WebControls.Literal.Text%2A> property depends on the type of markup being rendered. When the <xref:System.Web.UI.WebControls.Literal> control is rendered for a device or browser that supports HTML or XHTML, specifying <xref:System.Web.UI.WebControls.LiteralMode> produces the same behavior as specifying <xref:System.Web.UI.WebControls.LiteralMode>. All markup tags and elements for the <xref:System.Web.UI.WebControls.Literal.Text%2A> property are rendered for the requesting browser.       When the <xref:System.Web.UI.WebControls.Literal> control is rendered for a markup language other than HTML or XHTML, such as WML or cHTML, you can use the <xref:System.Web.UI.WebControls.LiteralMode> value to remove unsupported markup elements. In this case, any markup language elements of the <xref:System.Web.UI.WebControls.Literal.Text%2A> property that are not supported in the targeted markup language are not rendered for the control. For example, if the <xref:System.Web.UI.WebControls.Literal.Text%2A> property of a <xref:System.Web.UI.WebControls.Literal> control contains an `<hr>` tag, the tag is removed before the content is sent to a WML device. If an unsupported tag contains content, only the tag is removed and the content is sent to the device or browser. For example, if the <xref:System.Web.UI.WebControls.Literal.Text%2A> property contains the content `<XYZ>Test</XYZ>`, the `<XYZ>` and `</XYZ>` tags are removed, and the text &quot;Test&quot; is sent to the device or browser."
  example:
  - "The following code example demonstrates how to set a <xref:System.Web.UI.WebControls.Literal> control's Mode property. The Mode property is initially set to `Encode` in the declarative syntax for the control. After the page loads, the user can click a button to set the Mode property to `PassThrough`. This causes the contents of the <xref:System.Web.UI.WebControls.Literal.Text%2A> property to render differently.  \n  \n> [!NOTE]\n>  The following example uses the single-file code model and might not work correctly if copied directly into a code-behind file. This code example must be copied into an empty text file that has an .aspx extension. For more information about the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Literal.Mode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_704_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.LiteralMode Mode { get; set; }
    return:
      type: System.Web.UI.WebControls.LiteralMode
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.LiteralMode&quot;></xref> enumeration values. The default is <xref uid=&quot;langword_csharp_Transform&quot; name=&quot;Transform&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.Literal.Mode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified type is not one of the <xref href=&quot;System.Web.UI.WebControls.LiteralMode&quot;></xref> enumeration values."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Literal.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Literal.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sends server control content to a provided <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object, which writes the content to be rendered on the client."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Render method in a custom server control so that specific text is always displayed before the <xref:System.Web.UI.WebControls.Literal>.  \n  \n [!code-cs[CustomLiteralRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_38_1.aspx)]\n [!code-vb[CustomLiteralRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_38_1.aspx)]  \n[!code-cs[CustomLiteralRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_38_2.cs)]\n[!code-vb[CustomLiteralRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_38_2.vb)]"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object that receives the server control content."
  overload: System.Web.UI.WebControls.Literal.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Literal.Text
  id: Text
  parent: System.Web.UI.WebControls.Literal
  langs:
  - csharp
  name: Text
  nameWithType: Literal.Text
  fullName: System.Web.UI.WebControls.Literal.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the caption displayed in the <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> control."
  remarks: "Use the Text property to specify or determine the caption displayed in the <xref:System.Web.UI.WebControls.Literal> control. This allows you to programmatically change the caption at run time.       The caption is HTML-decoded depending on how you assign a value to this property. If you assign a value through an attribute of the <xref:System.Web.UI.WebControls.Literal> control, the value is HTML decoded before it is displayed. For example, `<asp:Literal id=&quot;DisplayLiteral&quot; Text=&quot;A B&quot;/>` is rendered as &quot;A B&quot; on the browser. However, if you set this property programmatically or by placing the text between the opening and closing tags of the control, the caption is not HTML decoded. For example, `<asp:Literal id=&quot;DisplayLiteral&quot;> A B </asp:Literal>` is rendered as &quot;A&nbsp;B&quot;.      > [!CAUTION] >  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133).       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the Text property to programmatically change the caption displayed in the <xref:System.Web.UI.WebControls.Literal> control.  \n  \n> [!NOTE]\n>  The following example uses the single-file code model and might not work correctly if copied directly into a code-behind file. This code example must be copied into an empty text file that has an .aspx extension. For more information about the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Literal#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_516_1.aspx)]\n [!code-vb[Literal#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_516_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "The caption displayed in the <xref href=&quot;System.Web.UI.WebControls.Literal&quot;></xref> control."
  overload: System.Web.UI.WebControls.Literal.Text*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.Literal.#ctor
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Literal()
  nameWithType: Literal.Literal()
  fullName: System.Web.UI.WebControls.Literal.Literal()
- uid: System.Web.UI.WebControls.Literal.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Literal.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Literal.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.Literal.CreateControlCollection
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Literal.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Literal.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Literal.Focus
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Focus()
  nameWithType: Literal.Focus()
  fullName: System.Web.UI.WebControls.Literal.Focus()
- uid: System.Web.UI.WebControls.Literal.Mode
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Mode
  nameWithType: Literal.Mode
  fullName: System.Web.UI.WebControls.Literal.Mode
- uid: System.Web.UI.WebControls.LiteralMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LiteralMode
  nameWithType: LiteralMode
  fullName: System.Web.UI.WebControls.LiteralMode
- uid: System.Web.UI.WebControls.Literal.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Literal.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Literal.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Literal.Text
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Text
  nameWithType: Literal.Text
  fullName: System.Web.UI.WebControls.Literal.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Literal.#ctor*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Literal
  nameWithType: Literal.Literal
- uid: System.Web.UI.WebControls.Literal.AddParsedSubObject*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Literal.AddParsedSubObject
- uid: System.Web.UI.WebControls.Literal.CreateControlCollection*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: CreateControlCollection
  nameWithType: Literal.CreateControlCollection
- uid: System.Web.UI.WebControls.Literal.Focus*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Focus
  nameWithType: Literal.Focus
- uid: System.Web.UI.WebControls.Literal.Mode*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Mode
  nameWithType: Literal.Mode
- uid: System.Web.UI.WebControls.Literal.Render*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Render
  nameWithType: Literal.Render
- uid: System.Web.UI.WebControls.Literal.Text*
  parent: System.Web.UI.WebControls.Literal
  isExternal: false
  name: Text
  nameWithType: Literal.Text
