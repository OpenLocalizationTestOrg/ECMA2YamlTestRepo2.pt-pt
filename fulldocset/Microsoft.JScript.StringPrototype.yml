### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.StringPrototype
  id: StringPrototype
  children:
  - Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.big(System.Object)
  - Microsoft.JScript.StringPrototype.blink(System.Object)
  - Microsoft.JScript.StringPrototype.bold(System.Object)
  - Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)
  - Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)
  - Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])
  - Microsoft.JScript.StringPrototype.constructor
  - Microsoft.JScript.StringPrototype.fixed(System.Object)
  - Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)
  - Microsoft.JScript.StringPrototype.italics(System.Object)
  - Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)
  - Microsoft.JScript.StringPrototype.link(System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  - Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  - Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)
  - Microsoft.JScript.StringPrototype.small(System.Object)
  - Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)
  - Microsoft.JScript.StringPrototype.strike(System.Object)
  - Microsoft.JScript.StringPrototype.sub(System.Object)
  - Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)
  - Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)
  - Microsoft.JScript.StringPrototype.sup(System.Object)
  - Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)
  - Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)
  - Microsoft.JScript.StringPrototype.toLowerCase(System.Object)
  - Microsoft.JScript.StringPrototype.toString(System.Object)
  - Microsoft.JScript.StringPrototype.toUpperCase(System.Object)
  - Microsoft.JScript.StringPrototype.valueOf(System.Object)
  langs:
  - csharp
  name: StringPrototype
  nameWithType: StringPrototype
  fullName: Microsoft.JScript.StringPrototype
  type: Class
  summary: "Fornece propriedades e métodos estáticos <xref href=&quot;Microsoft.JScript.StringObject&quot;> </xref> objetos. Todos os métodos desta classe são denominados mediante a transmissão de uma referência para o objeto que está a pedir acesso para o método. Esta classe pertence à categoria do modelo de objeto incorporado."
  syntax:
    content: 'public class StringPrototype : Microsoft.JScript.StringObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.StringObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.JSObject.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  - Microsoft.JScript.StringObject.Equals(System.Object)
  - Microsoft.JScript.StringObject.GetHashCode
  - Microsoft.JScript.StringObject.GetType
  - Microsoft.JScript.StringObject.length
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)
  id: anchor(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: anchor(Object,Object)
  nameWithType: StringPrototype.anchor(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.anchor(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de âncora e atribui o elemento de âncora o atributo de nome especificado."
  syntax:
    content: public static string anchor (object thisob, object anchorName);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: anchorName
      type: System.Object
      description: "O atributo de nome do elemento de âncora."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de âncora e atribui o elemento de âncora o atributo de nome especificado."
  overload: Microsoft.JScript.StringPrototype.anchor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.big(System.Object)
  id: big(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: big(Object)
  nameWithType: StringPrototype.big(Object)
  fullName: Microsoft.JScript.StringPrototype.big(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto maiores."
  syntax:
    content: public static string big (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto maiores."
  overload: Microsoft.JScript.StringPrototype.big*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.blink(System.Object)
  id: blink(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: blink(Object)
  nameWithType: StringPrototype.blink(Object)
  fullName: Microsoft.JScript.StringPrototype.blink(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte que o objeto especificado ao texto entre símbolos de blink etiquetas de markup."
  syntax:
    content: public static string blink (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte que o objeto especificado ao texto entre símbolos de blink etiquetas de markup."
  overload: Microsoft.JScript.StringPrototype.blink*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.bold(System.Object)
  id: bold(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: bold(Object)
  nameWithType: StringPrototype.bold(Object)
  fullName: Microsoft.JScript.StringPrototype.bold(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto a negrito."
  syntax:
    content: public static string bold (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto a negrito."
  overload: Microsoft.JScript.StringPrototype.bold*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)
  id: charAt(System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: charAt(Object,Double)
  nameWithType: StringPrototype.charAt(Object,Double)
  fullName: Microsoft.JScript.StringPrototype.charAt(Object,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve o caráter na posição especificada no objeto especificado."
  syntax:
    content: public static string charAt (object thisob, double pos);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: pos
      type: System.Double
      description: "A posição do caráter para devolver."
    return:
      type: System.String
      description: "Devolve o caráter na posição especificada no objeto especificado."
  overload: Microsoft.JScript.StringPrototype.charAt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)
  id: charCodeAt(System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: charCodeAt(Object,Double)
  nameWithType: StringPrototype.charCodeAt(Object,Double)
  fullName: Microsoft.JScript.StringPrototype.charCodeAt(Object,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve o código de ASCII do caráter na posição especificada no objeto especificado."
  syntax:
    content: public static object charCodeAt (object thisob, double pos);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: pos
      type: System.Double
      description: "A posição do caráter cujo código que pretende devolver."
    return:
      type: System.Object
      description: "Devolve o código de ASCII do caráter na posição especificada no objeto especificado."
  overload: Microsoft.JScript.StringPrototype.charCodeAt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])
  id: concat(System.Object,System.Object[])
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: concat(Object,Object[])
  nameWithType: StringPrototype.concat(Object,Object[])
  fullName: Microsoft.JScript.StringPrototype.concat(Object,Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Acrescenta os argumentos especificados para o objeto especificado."
  syntax:
    content: public static string concat (object thisob, object[] args);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: args
      type: System.Object[]
      description: "Os argumentos a acrescentar à `thisob`."
    return:
      type: System.String
      description: "Acrescenta os argumentos especificados para o objeto especificado."
  overload: Microsoft.JScript.StringPrototype.concat*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.constructor
  id: constructor
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: constructor
  nameWithType: StringPrototype.constructor
  fullName: Microsoft.JScript.StringPrototype.constructor
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Obtém uma referência a um objeto baseado no protótipo que está a utilizar este protótipo."
  syntax:
    content: public static Microsoft.JScript.StringConstructor constructor { get; }
    return:
      type: Microsoft.JScript.StringConstructor
      description: "Uma referência a um objeto baseado no protótipo."
  overload: Microsoft.JScript.StringPrototype.constructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.fixed(System.Object)
  id: fixed(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: fixed(Object)
  nameWithType: StringPrototype.fixed(Object)
  fullName: Microsoft.JScript.StringPrototype.fixed(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto de largura fixa."
  syntax:
    content: public static string fixed (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto de largura fixa."
  overload: Microsoft.JScript.StringPrototype.fixed*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)
  id: fontcolor(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: fontcolor(Object,Object)
  nameWithType: StringPrototype.fontcolor(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.fontcolor(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado entre as etiquetas de tipo de letra do texto e atribui o elemento o atributo de cor especificada."
  syntax:
    content: public static string fontcolor (object thisob, object colorName);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: colorName
      type: System.Object
      description: "O atributo de cor do elemento de tipo de letra."
    return:
      type: System.String
      description: "Converte o objeto especificado entre as etiquetas de tipo de letra do texto e atribui o elemento o atributo de cor especificada."
  overload: Microsoft.JScript.StringPrototype.fontcolor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)
  id: fontsize(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: fontsize(Object,Object)
  nameWithType: StringPrototype.fontsize(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.fontsize(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado entre as etiquetas de tipo de letra do texto e atribui o elemento o atributo de tamanho especificado."
  syntax:
    content: public static string fontsize (object thisob, object fontSize);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: fontSize
      type: System.Object
      description: "O atributo de tamanho do elemento de tipo de letra."
    return:
      type: System.String
      description: "Converte o objeto especificado entre as etiquetas de tipo de letra do texto e atribui o elemento o atributo de tamanho especificado."
  overload: Microsoft.JScript.StringPrototype.fontsize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)
  id: indexOf(System.Object,System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: indexOf(Object,Object,Double)
  nameWithType: StringPrototype.indexOf(Object,Object,Double)
  fullName: Microsoft.JScript.StringPrototype.indexOf(Object,Object,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Procura a primeira ocorrência da cadeia especificada no objeto especificado, a partir da posição de caráter especificado."
  syntax:
    content: public static int indexOf (object thisob, object searchString, double position);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: searchString
      type: System.Object
      description: "A cadeia a procurar."
    - id: position
      type: System.Double
      description: "A posição em que pretende iniciar a pesquisa."
    return:
      type: System.Int32
      description: "Procura a primeira ocorrência da cadeia especificada no objeto especificado, a partir da posição de caráter especificado."
  overload: Microsoft.JScript.StringPrototype.indexOf*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.italics(System.Object)
  id: italics(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: italics(Object)
  nameWithType: StringPrototype.italics(Object)
  fullName: Microsoft.JScript.StringPrototype.italics(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto itálico."
  syntax:
    content: public static string italics (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de marcação de texto itálico."
  overload: Microsoft.JScript.StringPrototype.italics*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)
  id: lastIndexOf(System.Object,System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: lastIndexOf(Object,Object,Double)
  nameWithType: StringPrototype.lastIndexOf(Object,Object,Double)
  fullName: Microsoft.JScript.StringPrototype.lastIndexOf(Object,Object,Double)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Procura a última ocorrência da cadeia especificada no objeto especificado, a partir da posição de caráter especificado."
  syntax:
    content: public static int lastIndexOf (object thisob, object searchString, double position);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: searchString
      type: System.Object
      description: "A cadeia a procurar."
    - id: position
      type: System.Double
      description: "A posição em que pretende iniciar a pesquisa."
    return:
      type: System.Int32
      description: "Procura a última ocorrência da cadeia especificada no objeto especificado, a partir da posição de caráter especificado."
  overload: Microsoft.JScript.StringPrototype.lastIndexOf*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.link(System.Object,System.Object)
  id: link(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: link(Object,Object)
  nameWithType: StringPrototype.link(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.link(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de âncora e atribui o elemento de âncora o atributo de destino de ligação que está especificado."
  syntax:
    content: public static string link (object thisob, object linkRef);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: linkRef
      type: System.Object
      description: "O atributo de destino do elemento de âncora."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de âncora e atribui o elemento de âncora o atributo de destino de ligação que está especificado."
  overload: Microsoft.JScript.StringPrototype.link*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)
  id: localeCompare(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: localeCompare(Object,Object)
  nameWithType: StringPrototype.localeCompare(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.localeCompare(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Compara duas cadeias de especificado e devolve um número inteiro que indica a relação lexical entre eles."
  syntax:
    content: public static int localeCompare (object thisob, object thatob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: thatob
      type: System.Object
      description: "A cadeia a comparar com `thisob`."
    return:
      type: System.Int32
      description: "Compara duas cadeias de especificado e devolve um número inteiro que indica a relação lexical entre eles."
  overload: Microsoft.JScript.StringPrototype.localeCompare*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  id: match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: match(Object,VsaEngine,Object)
  nameWithType: StringPrototype.match(Object,VsaEngine,Object)
  fullName: Microsoft.JScript.StringPrototype.match(Object,VsaEngine,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Executa uma pesquisa para o padrão de expressão regular especificada no objeto especificado."
  syntax:
    content: public static object match (object thisob, Microsoft.JScript.Vsa.VsaEngine engine, object regExp);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: engine
      type: Microsoft.JScript.Vsa.VsaEngine
      description: "Uma referência para o motor de script."
    - id: regExp
      type: System.Object
      description: "O padrão de expressão regular a pesquisar."
    return:
      type: System.Object
      description: "Executa uma pesquisa para o padrão de expressão regular especificada no objeto especificado."
  overload: Microsoft.JScript.StringPrototype.match*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)
  id: replace(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: replace(Object,Object,Object)
  nameWithType: StringPrototype.replace(Object,Object,Object)
  fullName: Microsoft.JScript.StringPrototype.replace(Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Executa uma pesquisa para o padrão de expressão regular especificada no objeto especificado primeiro e substitui qualquer correspondências com o terceiro objeto especificado."
  syntax:
    content: public static string replace (object thisob, object regExp, object replacement);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: regExp
      type: System.Object
      description: "O padrão de expressão regular a pesquisar."
    - id: replacement
      type: System.Object
      description: "A substituição de qualquer correspondências."
    return:
      type: System.String
      description: "Executa uma pesquisa para o padrão de expressão regular especificada no objeto especificado primeiro e substitui qualquer correspondências com o terceiro objeto especificado."
  overload: Microsoft.JScript.StringPrototype.replace*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  id: search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: search(Object,VsaEngine,Object)
  nameWithType: StringPrototype.search(Object,VsaEngine,Object)
  fullName: Microsoft.JScript.StringPrototype.search(Object,VsaEngine,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Executa uma pesquisa para o padrão de expressão regular especificada no objeto especificado."
  syntax:
    content: public static int search (object thisob, Microsoft.JScript.Vsa.VsaEngine engine, object regExp);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: engine
      type: Microsoft.JScript.Vsa.VsaEngine
      description: "Uma referência para o motor de script."
    - id: regExp
      type: System.Object
      description: "O padrão de expressão regular a pesquisar."
    return:
      type: System.Int32
      description: "Executa uma pesquisa para o padrão de expressão regular especificada no objeto especificado."
  overload: Microsoft.JScript.StringPrototype.search*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)
  id: slice(System.Object,System.Double,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: slice(Object,Double,Object)
  nameWithType: StringPrototype.slice(Object,Double,Object)
  fullName: Microsoft.JScript.StringPrototype.slice(Object,Double,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Cria uma nova cadeia que contém os carateres consecutivos especificados na cadeia de carateres especificada."
  syntax:
    content: public static string slice (object thisob, double start, object end);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: start
      type: System.Double
      description: "O primeiro caráter consecutivos a obter."
    - id: end
      type: System.Object
      description: "O último caráter consecutivos a obter."
    return:
      type: System.String
      description: "Cria uma nova cadeia que contém os carateres consecutivos especificados na cadeia de carateres especificada."
  overload: Microsoft.JScript.StringPrototype.slice*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.small(System.Object)
  id: small(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: small(Object)
  nameWithType: StringPrototype.small(Object)
  fullName: Microsoft.JScript.StringPrototype.small(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre tags de marcação de texto mais pequenos."
  syntax:
    content: public static string small (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre tags de marcação de texto mais pequenos."
  overload: Microsoft.JScript.StringPrototype.small*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)
  id: split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: split(Object,VsaEngine,Object,Object)
  nameWithType: StringPrototype.split(Object,VsaEngine,Object,Object)
  fullName: Microsoft.JScript.StringPrototype.split(Object,VsaEngine,Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve uma matriz que contenha as subcadeias no objeto especificado que estão delimitadas pelos carateres especificados. O número de subcadeias na matriz é limitado pela limite especificado."
  syntax:
    content: public static Microsoft.JScript.ArrayObject split (object thisob, Microsoft.JScript.Vsa.VsaEngine engine, object separator, object limit);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: engine
      type: Microsoft.JScript.Vsa.VsaEngine
      description: "Uma referência para o motor de script."
    - id: separator
      type: System.Object
      description: "Os carateres que delimitar subcadeias no `thisob`."
    - id: limit
      type: System.Object
      description: "O número máximo de subcadeias para devolver."
    return:
      type: Microsoft.JScript.ArrayObject
      description: "Devolve uma matriz que contenha as subcadeias no objeto especificado que estão delimitadas pelos carateres especificados. O número de subcadeias na matriz é limitado pela limite especificado."
  overload: Microsoft.JScript.StringPrototype.split*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.strike(System.Object)
  id: strike(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: strike(Object)
  nameWithType: StringPrototype.strike(Object)
  fullName: Microsoft.JScript.StringPrototype.strike(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre strikethrough etiquetas de markup."
  syntax:
    content: public static string strike (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre strikethrough etiquetas de markup."
  overload: Microsoft.JScript.StringPrototype.strike*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.sub(System.Object)
  id: sub(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: sub(Object)
  nameWithType: StringPrototype.sub(Object)
  fullName: Microsoft.JScript.StringPrototype.sub(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado entre as etiquetas de marcação de índice de texto."
  syntax:
    content: public static string sub (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado entre as etiquetas de marcação de índice de texto."
  overload: Microsoft.JScript.StringPrototype.sub*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)
  id: substr(System.Object,System.Double,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: substr(Object,Double,Object)
  nameWithType: StringPrototype.substr(Object,Double,Object)
  fullName: Microsoft.JScript.StringPrototype.substr(Object,Double,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Cria uma nova cadeia que contém o número especificado de carateres consecutivos da cadeia especificada, a partir da posição de caráter especificado. Utilize <xref:Microsoft.JScript.StringPrototype.substring*>em vez disso, se possível</xref:Microsoft.JScript.StringPrototype.substring*>"
  syntax:
    content: public static string substr (object thisob, double start, object count);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: start
      type: System.Double
      description: "O primeiro caráter consecutivos a obter."
    - id: count
      type: System.Object
      description: "O número de carateres a obter."
    return:
      type: System.String
      description: "Cria uma nova cadeia que contém o número especificado de carateres consecutivos da cadeia especificada, a partir da posição de caráter especificado. Utilize <xref:Microsoft.JScript.StringPrototype.substring*>em vez disso, se possível</xref:Microsoft.JScript.StringPrototype.substring*>"
  overload: Microsoft.JScript.StringPrototype.substr*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)
  id: substring(System.Object,System.Double,System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: substring(Object,Double,Object)
  nameWithType: StringPrototype.substring(Object,Double,Object)
  fullName: Microsoft.JScript.StringPrototype.substring(Object,Double,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Cria uma nova cadeia que contém os carateres consecutivos especificados na cadeia de carateres especificada."
  syntax:
    content: public static string substring (object thisob, double start, object end);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    - id: start
      type: System.Double
      description: "O primeiro caráter consecutivos a obter."
    - id: end
      type: System.Object
      description: "O último caráter consecutivos a obter."
    return:
      type: System.String
      description: "Cria uma nova cadeia que contém os carateres consecutivos especificados na cadeia de carateres especificada."
  overload: Microsoft.JScript.StringPrototype.substring*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.sup(System.Object)
  id: sup(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: sup(Object)
  nameWithType: StringPrototype.sup(Object)
  fullName: Microsoft.JScript.StringPrototype.sup(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converte o objeto especificado ao texto entre as etiquetas de expoente markup."
  syntax:
    content: public static string sup (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Converte o objeto especificado ao texto entre as etiquetas de expoente markup."
  overload: Microsoft.JScript.StringPrototype.sup*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)
  id: toLocaleLowerCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: toLocaleLowerCase(Object)
  nameWithType: StringPrototype.toLocaleLowerCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toLocaleLowerCase(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve uma cópia da cadeia especificada convertida em minúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.CurrentUICulture*>.</xref:System.Globalization.CultureInfo.CurrentUICulture*>"
  syntax:
    content: public static string toLocaleLowerCase (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Devolve uma cópia da cadeia especificada convertida em minúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.CurrentUICulture*>.</xref:System.Globalization.CultureInfo.CurrentUICulture*>"
  overload: Microsoft.JScript.StringPrototype.toLocaleLowerCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)
  id: toLocaleUpperCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: toLocaleUpperCase(Object)
  nameWithType: StringPrototype.toLocaleUpperCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toLocaleUpperCase(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve uma cópia da cadeia especificada convertida em maiúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.CurrentUICulture*>.</xref:System.Globalization.CultureInfo.CurrentUICulture*>"
  syntax:
    content: public static string toLocaleUpperCase (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Devolve uma cópia da cadeia especificada convertida em maiúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.CurrentUICulture*>.</xref:System.Globalization.CultureInfo.CurrentUICulture*>"
  overload: Microsoft.JScript.StringPrototype.toLocaleUpperCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.toLowerCase(System.Object)
  id: toLowerCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: toLowerCase(Object)
  nameWithType: StringPrototype.toLowerCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toLowerCase(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve uma cópia da cadeia especificada convertida em minúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.InvariantCulture*>.</xref:System.Globalization.CultureInfo.InvariantCulture*>"
  syntax:
    content: public static string toLowerCase (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Devolve uma cópia da cadeia especificada convertida em minúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.InvariantCulture*>.</xref:System.Globalization.CultureInfo.InvariantCulture*>"
  overload: Microsoft.JScript.StringPrototype.toLowerCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.toString(System.Object)
  id: toString(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: toString(Object)
  nameWithType: StringPrototype.toString(Object)
  fullName: Microsoft.JScript.StringPrototype.toString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Cria uma representação de cadeia do objeto especificado."
  syntax:
    content: public static string toString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Cria uma representação de cadeia do objeto especificado."
  overload: Microsoft.JScript.StringPrototype.toString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.toUpperCase(System.Object)
  id: toUpperCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: toUpperCase(Object)
  nameWithType: StringPrototype.toUpperCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toUpperCase(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve uma cópia da cadeia especificada convertida em maiúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.InvariantCulture*>.</xref:System.Globalization.CultureInfo.InvariantCulture*>"
  syntax:
    content: public static string toUpperCase (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.String
      description: "Devolve uma cópia da cadeia especificada convertida em maiúsculas, com base nas regras de maiúsculas e minúsculas de <xref:System.Globalization.CultureInfo.InvariantCulture*>.</xref:System.Globalization.CultureInfo.InvariantCulture*>"
  overload: Microsoft.JScript.StringPrototype.toUpperCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.StringPrototype.valueOf(System.Object)
  id: valueOf(System.Object)
  parent: Microsoft.JScript.StringPrototype
  langs:
  - csharp
  name: valueOf(Object)
  nameWithType: StringPrototype.valueOf(Object)
  fullName: Microsoft.JScript.StringPrototype.valueOf(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Devolve o valor do objeto especificado."
  syntax:
    content: public static object valueOf (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "O objecto que está a funcionar após este método."
    return:
      type: System.Object
      description: "Devolve o valor do objeto especificado."
  overload: Microsoft.JScript.StringPrototype.valueOf*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.StringObject
  isExternal: false
  name: Microsoft.JScript.StringObject
- uid: Microsoft.JScript.StringPrototype.anchor(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: anchor(Object,Object)
  nameWithType: StringPrototype.anchor(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.anchor(Object,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.StringPrototype.big(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: big(Object)
  nameWithType: StringPrototype.big(Object)
  fullName: Microsoft.JScript.StringPrototype.big(Object)
- uid: Microsoft.JScript.StringPrototype.blink(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: blink(Object)
  nameWithType: StringPrototype.blink(Object)
  fullName: Microsoft.JScript.StringPrototype.blink(Object)
- uid: Microsoft.JScript.StringPrototype.bold(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: bold(Object)
  nameWithType: StringPrototype.bold(Object)
  fullName: Microsoft.JScript.StringPrototype.bold(Object)
- uid: Microsoft.JScript.StringPrototype.charAt(System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: charAt(Object,Double)
  nameWithType: StringPrototype.charAt(Object,Double)
  fullName: Microsoft.JScript.StringPrototype.charAt(Object,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.JScript.StringPrototype.charCodeAt(System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: charCodeAt(Object,Double)
  nameWithType: StringPrototype.charCodeAt(Object,Double)
  fullName: Microsoft.JScript.StringPrototype.charCodeAt(Object,Double)
- uid: Microsoft.JScript.StringPrototype.concat(System.Object,System.Object[])
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: concat(Object,Object[])
  nameWithType: StringPrototype.concat(Object,Object[])
  fullName: Microsoft.JScript.StringPrototype.concat(Object,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.StringPrototype.constructor
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: constructor
  nameWithType: StringPrototype.constructor
  fullName: Microsoft.JScript.StringPrototype.constructor
- uid: Microsoft.JScript.StringConstructor
  parent: Microsoft.JScript
  isExternal: false
  name: StringConstructor
  nameWithType: StringConstructor
  fullName: Microsoft.JScript.StringConstructor
- uid: Microsoft.JScript.StringPrototype.fixed(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: fixed(Object)
  nameWithType: StringPrototype.fixed(Object)
  fullName: Microsoft.JScript.StringPrototype.fixed(Object)
- uid: Microsoft.JScript.StringPrototype.fontcolor(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: fontcolor(Object,Object)
  nameWithType: StringPrototype.fontcolor(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.fontcolor(Object,Object)
- uid: Microsoft.JScript.StringPrototype.fontsize(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: fontsize(Object,Object)
  nameWithType: StringPrototype.fontsize(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.fontsize(Object,Object)
- uid: Microsoft.JScript.StringPrototype.indexOf(System.Object,System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: indexOf(Object,Object,Double)
  nameWithType: StringPrototype.indexOf(Object,Object,Double)
  fullName: Microsoft.JScript.StringPrototype.indexOf(Object,Object,Double)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.JScript.StringPrototype.italics(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: italics(Object)
  nameWithType: StringPrototype.italics(Object)
  fullName: Microsoft.JScript.StringPrototype.italics(Object)
- uid: Microsoft.JScript.StringPrototype.lastIndexOf(System.Object,System.Object,System.Double)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: lastIndexOf(Object,Object,Double)
  nameWithType: StringPrototype.lastIndexOf(Object,Object,Double)
  fullName: Microsoft.JScript.StringPrototype.lastIndexOf(Object,Object,Double)
- uid: Microsoft.JScript.StringPrototype.link(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: link(Object,Object)
  nameWithType: StringPrototype.link(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.link(Object,Object)
- uid: Microsoft.JScript.StringPrototype.localeCompare(System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: localeCompare(Object,Object)
  nameWithType: StringPrototype.localeCompare(Object,Object)
  fullName: Microsoft.JScript.StringPrototype.localeCompare(Object,Object)
- uid: Microsoft.JScript.StringPrototype.match(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: match(Object,VsaEngine,Object)
  nameWithType: StringPrototype.match(Object,VsaEngine,Object)
  fullName: Microsoft.JScript.StringPrototype.match(Object,VsaEngine,Object)
- uid: Microsoft.JScript.Vsa.VsaEngine
  parent: Microsoft.JScript.Vsa
  isExternal: false
  name: VsaEngine
  nameWithType: VsaEngine
  fullName: Microsoft.JScript.Vsa.VsaEngine
- uid: Microsoft.JScript.StringPrototype.replace(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: replace(Object,Object,Object)
  nameWithType: StringPrototype.replace(Object,Object,Object)
  fullName: Microsoft.JScript.StringPrototype.replace(Object,Object,Object)
- uid: Microsoft.JScript.StringPrototype.search(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: search(Object,VsaEngine,Object)
  nameWithType: StringPrototype.search(Object,VsaEngine,Object)
  fullName: Microsoft.JScript.StringPrototype.search(Object,VsaEngine,Object)
- uid: Microsoft.JScript.StringPrototype.slice(System.Object,System.Double,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: slice(Object,Double,Object)
  nameWithType: StringPrototype.slice(Object,Double,Object)
  fullName: Microsoft.JScript.StringPrototype.slice(Object,Double,Object)
- uid: Microsoft.JScript.StringPrototype.small(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: small(Object)
  nameWithType: StringPrototype.small(Object)
  fullName: Microsoft.JScript.StringPrototype.small(Object)
- uid: Microsoft.JScript.StringPrototype.split(System.Object,Microsoft.JScript.Vsa.VsaEngine,System.Object,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: split(Object,VsaEngine,Object,Object)
  nameWithType: StringPrototype.split(Object,VsaEngine,Object,Object)
  fullName: Microsoft.JScript.StringPrototype.split(Object,VsaEngine,Object,Object)
- uid: Microsoft.JScript.ArrayObject
  parent: Microsoft.JScript
  isExternal: false
  name: ArrayObject
  nameWithType: ArrayObject
  fullName: Microsoft.JScript.ArrayObject
- uid: Microsoft.JScript.StringPrototype.strike(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: strike(Object)
  nameWithType: StringPrototype.strike(Object)
  fullName: Microsoft.JScript.StringPrototype.strike(Object)
- uid: Microsoft.JScript.StringPrototype.sub(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: sub(Object)
  nameWithType: StringPrototype.sub(Object)
  fullName: Microsoft.JScript.StringPrototype.sub(Object)
- uid: Microsoft.JScript.StringPrototype.substr(System.Object,System.Double,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: substr(Object,Double,Object)
  nameWithType: StringPrototype.substr(Object,Double,Object)
  fullName: Microsoft.JScript.StringPrototype.substr(Object,Double,Object)
- uid: Microsoft.JScript.StringPrototype.substring(System.Object,System.Double,System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: substring(Object,Double,Object)
  nameWithType: StringPrototype.substring(Object,Double,Object)
  fullName: Microsoft.JScript.StringPrototype.substring(Object,Double,Object)
- uid: Microsoft.JScript.StringPrototype.sup(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: sup(Object)
  nameWithType: StringPrototype.sup(Object)
  fullName: Microsoft.JScript.StringPrototype.sup(Object)
- uid: Microsoft.JScript.StringPrototype.toLocaleLowerCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toLocaleLowerCase(Object)
  nameWithType: StringPrototype.toLocaleLowerCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toLocaleLowerCase(Object)
- uid: Microsoft.JScript.StringPrototype.toLocaleUpperCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toLocaleUpperCase(Object)
  nameWithType: StringPrototype.toLocaleUpperCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toLocaleUpperCase(Object)
- uid: Microsoft.JScript.StringPrototype.toLowerCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toLowerCase(Object)
  nameWithType: StringPrototype.toLowerCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toLowerCase(Object)
- uid: Microsoft.JScript.StringPrototype.toString(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toString(Object)
  nameWithType: StringPrototype.toString(Object)
  fullName: Microsoft.JScript.StringPrototype.toString(Object)
- uid: Microsoft.JScript.StringPrototype.toUpperCase(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toUpperCase(Object)
  nameWithType: StringPrototype.toUpperCase(Object)
  fullName: Microsoft.JScript.StringPrototype.toUpperCase(Object)
- uid: Microsoft.JScript.StringPrototype.valueOf(System.Object)
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: valueOf(Object)
  nameWithType: StringPrototype.valueOf(Object)
  fullName: Microsoft.JScript.StringPrototype.valueOf(Object)
- uid: Microsoft.JScript.StringPrototype.anchor*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: anchor
  nameWithType: StringPrototype.anchor
- uid: Microsoft.JScript.StringPrototype.big*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: big
  nameWithType: StringPrototype.big
- uid: Microsoft.JScript.StringPrototype.blink*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: blink
  nameWithType: StringPrototype.blink
- uid: Microsoft.JScript.StringPrototype.bold*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: bold
  nameWithType: StringPrototype.bold
- uid: Microsoft.JScript.StringPrototype.charAt*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: charAt
  nameWithType: StringPrototype.charAt
- uid: Microsoft.JScript.StringPrototype.charCodeAt*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: charCodeAt
  nameWithType: StringPrototype.charCodeAt
- uid: Microsoft.JScript.StringPrototype.concat*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: concat
  nameWithType: StringPrototype.concat
- uid: Microsoft.JScript.StringPrototype.constructor*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: constructor
  nameWithType: StringPrototype.constructor
- uid: Microsoft.JScript.StringPrototype.fixed*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: fixed
  nameWithType: StringPrototype.fixed
- uid: Microsoft.JScript.StringPrototype.fontcolor*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: fontcolor
  nameWithType: StringPrototype.fontcolor
- uid: Microsoft.JScript.StringPrototype.fontsize*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: fontsize
  nameWithType: StringPrototype.fontsize
- uid: Microsoft.JScript.StringPrototype.indexOf*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: indexOf
  nameWithType: StringPrototype.indexOf
- uid: Microsoft.JScript.StringPrototype.italics*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: italics
  nameWithType: StringPrototype.italics
- uid: Microsoft.JScript.StringPrototype.lastIndexOf*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: lastIndexOf
  nameWithType: StringPrototype.lastIndexOf
- uid: Microsoft.JScript.StringPrototype.link*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: link
  nameWithType: StringPrototype.link
- uid: Microsoft.JScript.StringPrototype.localeCompare*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: localeCompare
  nameWithType: StringPrototype.localeCompare
- uid: Microsoft.JScript.StringPrototype.match*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: match
  nameWithType: StringPrototype.match
- uid: Microsoft.JScript.StringPrototype.replace*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: replace
  nameWithType: StringPrototype.replace
- uid: Microsoft.JScript.StringPrototype.search*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: search
  nameWithType: StringPrototype.search
- uid: Microsoft.JScript.StringPrototype.slice*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: slice
  nameWithType: StringPrototype.slice
- uid: Microsoft.JScript.StringPrototype.small*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: small
  nameWithType: StringPrototype.small
- uid: Microsoft.JScript.StringPrototype.split*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: split
  nameWithType: StringPrototype.split
- uid: Microsoft.JScript.StringPrototype.strike*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: strike
  nameWithType: StringPrototype.strike
- uid: Microsoft.JScript.StringPrototype.sub*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: sub
  nameWithType: StringPrototype.sub
- uid: Microsoft.JScript.StringPrototype.substr*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: substr
  nameWithType: StringPrototype.substr
- uid: Microsoft.JScript.StringPrototype.substring*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: substring
  nameWithType: StringPrototype.substring
- uid: Microsoft.JScript.StringPrototype.sup*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: sup
  nameWithType: StringPrototype.sup
- uid: Microsoft.JScript.StringPrototype.toLocaleLowerCase*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toLocaleLowerCase
  nameWithType: StringPrototype.toLocaleLowerCase
- uid: Microsoft.JScript.StringPrototype.toLocaleUpperCase*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toLocaleUpperCase
  nameWithType: StringPrototype.toLocaleUpperCase
- uid: Microsoft.JScript.StringPrototype.toLowerCase*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toLowerCase
  nameWithType: StringPrototype.toLowerCase
- uid: Microsoft.JScript.StringPrototype.toString*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toString
  nameWithType: StringPrototype.toString
- uid: Microsoft.JScript.StringPrototype.toUpperCase*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: toUpperCase
  nameWithType: StringPrototype.toUpperCase
- uid: Microsoft.JScript.StringPrototype.valueOf*
  parent: Microsoft.JScript.StringPrototype
  isExternal: false
  name: valueOf
  nameWithType: StringPrototype.valueOf
