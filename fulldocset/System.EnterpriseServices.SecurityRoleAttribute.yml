### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.SecurityRoleAttribute
  id: SecurityRoleAttribute
  children:
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  - System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  - System.EnterpriseServices.SecurityRoleAttribute.Description
  - System.EnterpriseServices.SecurityRoleAttribute.Role
  - System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  langs:
  - csharp
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute
  fullName: System.EnterpriseServices.SecurityRoleAttribute
  type: Class
  summary: "Configures a role for an application or component. This class cannot be inherited."
  remarks: "You can use the SecurityRoleAttribute to add roles to an application, and to associate them with components. When SecurityRoleAttribute is applied to an assembly as a whole, it ensures that the role exists in the application configuration (COM+ catalog). You can add members of the role using the COM+ Explorer.       When applied to a component, the SecurityRoleAttribute ensures that the role exists in the application configuration, and associates the target component with the role.       By default, created roles have no members. If the <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess%2A> property is set to `true`, the Everyone user group is automatically added to the role. This is best for all-access type roles that are given minimal control over the system.       Security roles can be specified at the component level, per interface and per method. As with other method attributes, security configuration is not currently shared between interface definition and method implementation."
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/t-system.enterpriseservi_22_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/t-system.enterpriseservi_22_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/t-system.enterpriseservi_22_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityRoleAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initializes a new instance of the <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;></xref> class and sets the <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*> property."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this attribute to associate a role with an assembly that contains <xref:System.EnterpriseServices.ServicedComponent> classes.  \n  \n [!code-cpp[EnterpriseServices_Security#3](~/add/codesnippet/cpp/m-system.enterpriseservi_5_1.cpp)]\n [!code-cs[EnterpriseServices_Security#3](~/add/codesnippet/csharp/m-system.enterpriseservi_5_1.cs)]\n [!code-vb[EnterpriseServices_Security#3](~/add/codesnippet/visualbasic/m-system.enterpriseservi_5_1.vb)]"
  syntax:
    content: public SecurityRoleAttribute (string role);
    parameters:
    - id: role
      type: System.String
      description: "A security role for the application, component, interface, or method."
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Initializes a new instance of the <xref href=&quot;System.EnterpriseServices.SecurityRoleAttribute&quot;></xref> class and sets the <xref:System.EnterpriseServices.SecurityRoleAttribute.Role*> and <xref:System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*> properties."
  syntax:
    content: public SecurityRoleAttribute (string role, bool everyone);
    parameters:
    - id: role
      type: System.String
      description: "A security role for the application, component, interface, or method."
    - id: everyone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to require that the newly created role have the Everyone user group added as a user; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  id: Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets the role description."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "The description for the role."
  overload: System.EnterpriseServices.SecurityRoleAttribute.Description*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  id: Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Gets or sets the security role."
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "The security role applied to an application, component, interface, or method."
  overload: System.EnterpriseServices.SecurityRoleAttribute.Role*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  id: SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  langs:
  - csharp
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Sets a value indicating whether to add the Everyone user group as a user."
  remarks: "Set this property to `false` to suppress adding the Everyone user group as a user to newly created roles. Set the property to `true` to require that a newly created role have Everyone added as a user. Roles which already exist on the application are not modified."
  syntax:
    content: public bool SetEveryoneAccess { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to require that a newly created role have the Everyone user group added as a user (roles that already exist on the application are not modified); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to suppress adding the Everyone user group as a user."
  overload: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor(System.String,System.Boolean)
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute(String,Boolean)
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SecurityRoleAttribute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
  fullName: System.EnterpriseServices.SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
  fullName: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess
- uid: System.EnterpriseServices.SecurityRoleAttribute.#ctor*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SecurityRoleAttribute
  nameWithType: SecurityRoleAttribute.SecurityRoleAttribute
- uid: System.EnterpriseServices.SecurityRoleAttribute.Description*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Description
  nameWithType: SecurityRoleAttribute.Description
- uid: System.EnterpriseServices.SecurityRoleAttribute.Role*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: Role
  nameWithType: SecurityRoleAttribute.Role
- uid: System.EnterpriseServices.SecurityRoleAttribute.SetEveryoneAccess*
  parent: System.EnterpriseServices.SecurityRoleAttribute
  isExternal: false
  name: SetEveryoneAccess
  nameWithType: SecurityRoleAttribute.SetEveryoneAccess
