### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityContext
  id: ActivityContext
  children:
  - System.Activities.ActivityContext.ActivityInstanceId
  - System.Activities.ActivityContext.DataContext
  - System.Activities.ActivityContext.GetExtension``1
  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)
  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)
  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument`1)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument`1)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument`1)
  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument`1,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument`1,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument`1,``0)
  - System.Activities.ActivityContext.WorkflowInstanceId
  langs:
  - csharp
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
  type: Class
  summary: "The base class for context classes that represent the execution environment of an activity."
  remarks: "This class provides limited access to the [!INCLUDE[wf1](~/add/includes/wf1-md.md)] runtime and is the base class for all execution contexts that are provided by [!INCLUDE[wf](~/add/includes/wf-md.md)]."
  syntax:
    content: public class ActivityContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.ActivityInstanceId
  id: ActivityInstanceId
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: ActivityInstanceId
  nameWithType: ActivityContext.ActivityInstanceId
  fullName: System.Activities.ActivityContext.ActivityInstanceId
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the unique identifier of the currently executing activity instance."
  syntax:
    content: public string ActivityInstanceId { get; }
    return:
      type: System.String
      description: "The unique identifier of the currently executing activity instance."
  overload: System.Activities.ActivityContext.ActivityInstanceId*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.DataContext
  id: DataContext
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: DataContext
  nameWithType: ActivityContext.DataContext
  fullName: System.Activities.ActivityContext.DataContext
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the data context of the currently executing activity."
  syntax:
    content: public System.Activities.WorkflowDataContext DataContext { get; }
    return:
      type: System.Activities.WorkflowDataContext
      description: "The workflow data context of the currently executing activity."
  overload: System.Activities.ActivityContext.DataContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetExtension``1
  id: GetExtension``1
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetExtension()
  nameWithType: ActivityContext.GetExtension()
  fullName: System.Activities.ActivityContext.GetExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public T GetExtension<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.GetExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)
  id: GetLocation``1(System.Activities.LocationReference)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetLocation(LocationReference)
  nameWithType: ActivityContext.GetLocation(LocationReference)
  fullName: System.Activities.ActivityContext.GetLocation(LocationReference)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.Location<T> GetLocation<T> (System.Activities.LocationReference locationReference);
    parameters:
    - id: locationReference
      type: System.Activities.LocationReference
      description: "To be added."
    return:
      type: System.Activities.Location`1
      description: "To be added."
  overload: System.Activities.ActivityContext.GetLocation<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetValue(System.Activities.Argument)
  id: GetValue(System.Activities.Argument)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetValue(Argument)
  nameWithType: ActivityContext.GetValue(Argument)
  fullName: System.Activities.ActivityContext.GetValue(Argument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the value of the specified <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public object GetValue (System.Activities.Argument argument);
    parameters:
    - id: argument
      type: System.Activities.Argument
      description: "The argument to inspect."
    return:
      type: System.Object
      description: "The value of the argument."
  overload: System.Activities.ActivityContext.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)
  id: GetValue(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetValue(RuntimeArgument)
  nameWithType: ActivityContext.GetValue(RuntimeArgument)
  fullName: System.Activities.ActivityContext.GetValue(RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the value of the specified <xref href=&quot;System.Activities.RuntimeArgument&quot;></xref>."
  syntax:
    content: public object GetValue (System.Activities.RuntimeArgument runtimeArgument);
    parameters:
    - id: runtimeArgument
      type: System.Activities.RuntimeArgument
      description: "The argument to inspect."
    return:
      type: System.Object
      description: "The value of the argument."
  overload: System.Activities.ActivityContext.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument`1)
  id: GetValue``1(System.Activities.InArgument`1)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetValue(InArgument<T>)
  nameWithType: ActivityContext.GetValue(InArgument<T>)
  fullName: System.Activities.ActivityContext.GetValue(InArgument<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T GetValue<T> (System.Activities.InArgument<T> argument);
    parameters:
    - id: argument
      type: System.Activities.InArgument`1
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.GetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument`1)
  id: GetValue``1(System.Activities.InOutArgument`1)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetValue(InOutArgument<T>)
  nameWithType: ActivityContext.GetValue(InOutArgument<T>)
  fullName: System.Activities.ActivityContext.GetValue(InOutArgument<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T GetValue<T> (System.Activities.InOutArgument<T> argument);
    parameters:
    - id: argument
      type: System.Activities.InOutArgument`1
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.GetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)
  id: GetValue``1(System.Activities.LocationReference)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetValue(LocationReference)
  nameWithType: ActivityContext.GetValue(LocationReference)
  fullName: System.Activities.ActivityContext.GetValue(LocationReference)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T GetValue<T> (System.Activities.LocationReference locationReference);
    parameters:
    - id: locationReference
      type: System.Activities.LocationReference
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.GetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument`1)
  id: GetValue``1(System.Activities.OutArgument`1)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: GetValue(OutArgument<T>)
  nameWithType: ActivityContext.GetValue(OutArgument<T>)
  fullName: System.Activities.ActivityContext.GetValue(OutArgument<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T GetValue<T> (System.Activities.OutArgument<T> argument);
    parameters:
    - id: argument
      type: System.Activities.OutArgument`1
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.GetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)
  id: SetValue(System.Activities.Argument,System.Object)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: SetValue(Argument,Object)
  nameWithType: ActivityContext.SetValue(Argument,Object)
  fullName: System.Activities.ActivityContext.SetValue(Argument,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Assigns a value to the specified <xref href=&quot;System.Activities.Argument&quot;></xref>."
  syntax:
    content: public void SetValue (System.Activities.Argument argument, object value);
    parameters:
    - id: argument
      type: System.Activities.Argument
      description: "The argument to receive the new value."
    - id: value
      type: System.Object
      description: "The new value of the argument."
  overload: System.Activities.ActivityContext.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument`1,``0)
  id: SetValue``1(System.Activities.InArgument`1,``0)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: SetValue(InArgument<T>,T)
  nameWithType: ActivityContext.SetValue(InArgument<T>,T)
  fullName: System.Activities.ActivityContext.SetValue(InArgument<T>,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public void SetValue<T> (System.Activities.InArgument<T> argument, T value);
    parameters:
    - id: argument
      type: System.Activities.InArgument`1
      description: "To be added."
    - id: value
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.SetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument`1,``0)
  id: SetValue``1(System.Activities.InOutArgument`1,``0)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: SetValue(InOutArgument<T>,T)
  nameWithType: ActivityContext.SetValue(InOutArgument<T>,T)
  fullName: System.Activities.ActivityContext.SetValue(InOutArgument<T>,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public void SetValue<T> (System.Activities.InOutArgument<T> argument, T value);
    parameters:
    - id: argument
      type: System.Activities.InOutArgument`1
      description: "To be added."
    - id: value
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.SetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)
  id: SetValue``1(System.Activities.LocationReference,``0)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: SetValue(LocationReference,T)
  nameWithType: ActivityContext.SetValue(LocationReference,T)
  fullName: System.Activities.ActivityContext.SetValue(LocationReference,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public void SetValue<T> (System.Activities.LocationReference locationReference, T value);
    parameters:
    - id: locationReference
      type: System.Activities.LocationReference
      description: "To be added."
    - id: value
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.SetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument`1,``0)
  id: SetValue``1(System.Activities.OutArgument`1,``0)
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: SetValue(OutArgument<T>,T)
  nameWithType: ActivityContext.SetValue(OutArgument<T>,T)
  fullName: System.Activities.ActivityContext.SetValue(OutArgument<T>,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public void SetValue<T> (System.Activities.OutArgument<T> argument, T value);
    parameters:
    - id: argument
      type: System.Activities.OutArgument`1
      description: "To be added."
    - id: value
      type: T
      description: "To be added."
  overload: System.Activities.ActivityContext.SetValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityContext.WorkflowInstanceId
  id: WorkflowInstanceId
  parent: System.Activities.ActivityContext
  langs:
  - csharp
  name: WorkflowInstanceId
  nameWithType: ActivityContext.WorkflowInstanceId
  fullName: System.Activities.ActivityContext.WorkflowInstanceId
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the unique indentifier of the currently executing workflow instance."
  syntax:
    content: public Guid WorkflowInstanceId { get; }
    return:
      type: System.Guid
      description: "The unique identifier of the currently executing workflow instance."
  overload: System.Activities.ActivityContext.WorkflowInstanceId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.ActivityContext.ActivityInstanceId
  parent: System.Activities.ActivityContext
  isExternal: false
  name: ActivityInstanceId
  nameWithType: ActivityContext.ActivityInstanceId
  fullName: System.Activities.ActivityContext.ActivityInstanceId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ActivityContext.DataContext
  parent: System.Activities.ActivityContext
  isExternal: false
  name: DataContext
  nameWithType: ActivityContext.DataContext
  fullName: System.Activities.ActivityContext.DataContext
- uid: System.Activities.WorkflowDataContext
  parent: System.Activities
  isExternal: false
  name: WorkflowDataContext
  nameWithType: WorkflowDataContext
  fullName: System.Activities.WorkflowDataContext
- uid: System.Activities.ActivityContext.GetExtension``1
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetExtension()
  nameWithType: ActivityContext.GetExtension()
  fullName: System.Activities.ActivityContext.GetExtension()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetLocation(LocationReference)
  nameWithType: ActivityContext.GetLocation(LocationReference)
  fullName: System.Activities.ActivityContext.GetLocation(LocationReference)
- uid: System.Activities.Location`1
  parent: System.Activities
  isExternal: false
  name: Location<T>
  nameWithType: Location<T>
  fullName: System.Activities.Location<T>
- uid: System.Activities.LocationReference
  parent: System.Activities
  isExternal: false
  name: LocationReference
  nameWithType: LocationReference
  fullName: System.Activities.LocationReference
- uid: System.Activities.ActivityContext.GetValue(System.Activities.Argument)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue(Argument)
  nameWithType: ActivityContext.GetValue(Argument)
  fullName: System.Activities.ActivityContext.GetValue(Argument)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue(RuntimeArgument)
  nameWithType: ActivityContext.GetValue(RuntimeArgument)
  fullName: System.Activities.ActivityContext.GetValue(RuntimeArgument)
- uid: System.Activities.RuntimeArgument
  parent: System.Activities
  isExternal: false
  name: RuntimeArgument
  nameWithType: RuntimeArgument
  fullName: System.Activities.RuntimeArgument
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument`1)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue(InArgument<T>)
  nameWithType: ActivityContext.GetValue(InArgument<T>)
  fullName: System.Activities.ActivityContext.GetValue(InArgument<T>)
- uid: System.Activities.InArgument`1
  parent: System.Activities
  isExternal: false
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument`1)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue(InOutArgument<T>)
  nameWithType: ActivityContext.GetValue(InOutArgument<T>)
  fullName: System.Activities.ActivityContext.GetValue(InOutArgument<T>)
- uid: System.Activities.InOutArgument`1
  parent: System.Activities
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue(LocationReference)
  nameWithType: ActivityContext.GetValue(LocationReference)
  fullName: System.Activities.ActivityContext.GetValue(LocationReference)
- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument`1)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue(OutArgument<T>)
  nameWithType: ActivityContext.GetValue(OutArgument<T>)
  fullName: System.Activities.ActivityContext.GetValue(OutArgument<T>)
- uid: System.Activities.OutArgument`1
  parent: System.Activities
  isExternal: false
  name: OutArgument<T>
  nameWithType: OutArgument<T>
  fullName: System.Activities.OutArgument<T>
- uid: System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue(Argument,Object)
  nameWithType: ActivityContext.SetValue(Argument,Object)
  fullName: System.Activities.ActivityContext.SetValue(Argument,Object)
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument`1,``0)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue(InArgument<T>,T)
  nameWithType: ActivityContext.SetValue(InArgument<T>,T)
  fullName: System.Activities.ActivityContext.SetValue(InArgument<T>,T)
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument`1,``0)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue(InOutArgument<T>,T)
  nameWithType: ActivityContext.SetValue(InOutArgument<T>,T)
  fullName: System.Activities.ActivityContext.SetValue(InOutArgument<T>,T)
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue(LocationReference,T)
  nameWithType: ActivityContext.SetValue(LocationReference,T)
  fullName: System.Activities.ActivityContext.SetValue(LocationReference,T)
- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument`1,``0)
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue(OutArgument<T>,T)
  nameWithType: ActivityContext.SetValue(OutArgument<T>,T)
  fullName: System.Activities.ActivityContext.SetValue(OutArgument<T>,T)
- uid: System.Activities.ActivityContext.WorkflowInstanceId
  parent: System.Activities.ActivityContext
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: ActivityContext.WorkflowInstanceId
  fullName: System.Activities.ActivityContext.WorkflowInstanceId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.ActivityContext.ActivityInstanceId*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: ActivityInstanceId
  nameWithType: ActivityContext.ActivityInstanceId
- uid: System.Activities.ActivityContext.DataContext*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: DataContext
  nameWithType: ActivityContext.DataContext
- uid: System.Activities.ActivityContext.GetExtension<T>*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetExtension<T>
  nameWithType: ActivityContext.GetExtension<T>
- uid: System.Activities.ActivityContext.GetLocation<T>*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetLocation<T>
  nameWithType: ActivityContext.GetLocation<T>
- uid: System.Activities.ActivityContext.GetValue*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue
  nameWithType: ActivityContext.GetValue
- uid: System.Activities.ActivityContext.GetValue<T>*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: GetValue<T>
  nameWithType: ActivityContext.GetValue<T>
- uid: System.Activities.ActivityContext.SetValue*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue
  nameWithType: ActivityContext.SetValue
- uid: System.Activities.ActivityContext.SetValue<T>*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: SetValue<T>
  nameWithType: ActivityContext.SetValue<T>
- uid: System.Activities.ActivityContext.WorkflowInstanceId*
  parent: System.Activities.ActivityContext
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: ActivityContext.WorkflowInstanceId
