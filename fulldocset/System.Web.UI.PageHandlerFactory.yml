### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageHandlerFactory
  id: PageHandlerFactory
  children:
  - System.Web.UI.PageHandlerFactory.#ctor
  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory
  fullName: System.Web.UI.PageHandlerFactory
  type: Class
  summary: "Cria instâncias de classes que herdam a <xref href=&quot;System.Web.UI.Page&quot;> </xref> classe e implementar o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface. Instâncias são criadas dinamicamente para processarem pedidos de ficheiros do ASP.NET. A classe de PageHandlerFactory é a implementação de fábrica do processador predefinida para as páginas ASP.NET."
  remarks: "Implementa de classe PageHandlerFactory o <xref:System.Web.IHttpHandlerFactory>interface para fornecer o processador HTTP predefinidos para ficheiros do ASP.NET.</xref:System.Web.IHttpHandlerFactory> O PageHandlerFactory chama o sistema de compilação do ASP.NET para compilar, se necessário e devolver o tipo exato correspondente ao URL e, em seguida, cria uma instância desse tipo. O tipo de página herda o <xref:System.Web.UI.Page>classe e implementa o <xref:System.Web.IHttpHandler>interface.</xref:System.Web.IHttpHandler> </xref:System.Web.UI.Page>       Para criar uma fábrica de processador da página personalizada, implementa o <xref:System.Web.IHttpHandlerFactory>e registar a classe de PageHandlerFactory personalizada no ficheiro Web. config para a aplicação no [httpHandlers elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) secção de configuração.</xref:System.Web.IHttpHandlerFactory>"
  syntax:
    content: public class PageHandlerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.PageHandlerFactory&quot;> </xref> classe."
  remarks: "O construtor de PageHandlerFactory é o construtor predefinido e inicializa quaisquer campos para os respetivos valores predefinidos."
  syntax:
    content: protected PageHandlerFactory ();
    parameters: []
  overload: System.Web.UI.PageHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve uma instância do <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface para processar o recurso pedido."
  remarks: "O método GetHandler é chamado pelo ASP.NET tempo de execução e devolve uma instância válida do <xref:System.Web.IHttpHandler>interface ou `null`.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Uma instância do <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe que fornece referências a objectos de servidor intrínseco (por exemplo, pedido, resposta, sessão e servidor) utilizados para pedidos HTTP de serviço."
    - id: requestType
      type: System.String
      description: "Transferência de dados de HTTP de método (GET ou POST) utilizado pelo cliente."
    - id: virtualPath
      type: System.String
      description: "O caminho virtual para o recurso pedido."
    - id: path
      type: System.String
      description: "O <xref:System.Web.HttpRequest.PhysicalApplicationPath*>propriedade para o recurso pedido.</xref:System.Web.HttpRequest.PhysicalApplicationPath*>"
    return:
      type: System.Web.IHttpHandler
      description: "Um novo <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> que processa o pedido; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.PageHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Permite a uma fábrica de reutilizar uma instância existente de um processador."
  syntax:
    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "O <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> reutilizar."
  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.PageHandlerFactory.#ctor
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.UI.PageHandlerFactory.#ctor*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory.PageHandlerFactory
- uid: System.Web.UI.PageHandlerFactory.GetHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: PageHandlerFactory.GetHandler
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: PageHandlerFactory.ReleaseHandler
