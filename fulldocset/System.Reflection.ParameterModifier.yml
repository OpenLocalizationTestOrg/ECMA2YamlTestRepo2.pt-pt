### YamlMime:ManagedReference
items:
- uid: System.Reflection.ParameterModifier
  id: ParameterModifier
  children:
  - System.Reflection.ParameterModifier.#ctor(System.Int32)
  - System.Reflection.ParameterModifier.Item(System.Int32)
  langs:
  - csharp
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier
  type: Struct
  summary: "Attaches a modifier to parameters so that binding can work with parameter signatures in which the types have been modified."
  remarks: "The ParameterModifier structure is used with the [Type.InvokeMember(String, BindingFlags, Binder, Object, Object\\[\\], ParameterModifier\\[\\], CultureInfo, String\\[\\])](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&autoUpgrade=False) method overload when passing parameters by reference to a COM component that is accessed late bound. The parameters that are to be passed by reference are specified by a single ParameterModifier structure, which must be passed in an array containing a single element. The single ParameterModifier structure in this array must be initialized with the number of parameters in the member that is to be invoked. To indicate which of these parameters are passed by reference, set the value of the <xref:System.Reflection.ParameterModifier.Item%2A> property (the indexer in C#) to `true` for the index number corresponding to the zero-based position of the parameter."
  example:
  - "The following code example shows this for a member that has three string arguments, the first and third of which are passed by reference. Assume that a variable named `obj` contains a reference to the COM object.  \n  \n [!code-vb[System.Reflection.ParameterModifier#1](~/add/codesnippet/visualbasic/t-system.reflection.para_1.vb)]\n [!code-cpp[System.Reflection.ParameterModifier#1](~/add/codesnippet/cpp/t-system.reflection.para_1.cpp)]\n [!code-cs[System.Reflection.ParameterModifier#1](~/add/codesnippet/csharp/t-system.reflection.para_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct ParameterModifier
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  name: ParameterModifier(Int32)
  nameWithType: ParameterModifier.ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Initializes a new instance of the <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> structure representing the specified number of parameters."
  syntax:
    content: public ParameterModifier (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "The number of parameters."
  overload: System.Reflection.ParameterModifier.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>parameterCount</code> is negative."
  platform:
  - net462
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ParameterModifier.Item(Int32)
  fullName: System.Reflection.ParameterModifier.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Gets or sets a value that specifies whether the parameter at the specified index position is to be modified by the current <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>."
  remarks: "Indexers permit a default property on a type to be indexed as if the type were an array."
  syntax:
    content: public bool this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The index position of the parameter whose modification status is being examined or set."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the parameter at this index position is to be modified by this <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Reflection.ParameterModifier.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: ParameterModifier(Int32)
  nameWithType: ParameterModifier.ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: Item(Int32)
  nameWithType: ParameterModifier.Item(Int32)
  fullName: System.Reflection.ParameterModifier.Item(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.ParameterModifier.#ctor*
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier.ParameterModifier
- uid: System.Reflection.ParameterModifier.Item*
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: Item
  nameWithType: ParameterModifier.Item
