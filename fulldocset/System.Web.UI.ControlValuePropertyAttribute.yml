### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlValuePropertyAttribute
  id: ControlValuePropertyAttribute
  children:
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  - System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  - System.Web.UI.ControlValuePropertyAttribute.Name
  langs:
  - csharp
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute
  fullName: System.Web.UI.ControlValuePropertyAttribute
  type: Class
  summary: "Especifica a propriedade predefinida de um controlo que um <xref href=&quot;System.Web.UI.WebControls.ControlParameter&quot;> </xref> objeto está vinculada a no tempo de execução. Esta classe não pode ser herdada."
  remarks: "Quando definir um <xref:System.Web.UI.WebControls.ControlParameter>de objetos, normalmente, vincular uma propriedade de controlo a um parâmetro definindo ambos o <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>e <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>Propriedades.</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> </xref:System.Web.UI.WebControls.ControlParameter> Se o <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>não for definida, será utilizada uma propriedade predefinida.</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> O atributo de ControlValuePropertyAttribute é aplicado a um controlo para especificar a propriedade predefinida que um <xref:System.Web.UI.WebControls.ControlParameter>objeto está vinculada a no tempo de execução.</xref:System.Web.UI.WebControls.ControlParameter>       Para obter mais informações sobre a utilização de atributos, consulte [atributos](~/add/includes/ajax-current-ext-md.md).       Para obter uma lista de valores de propriedade inicial para uma instância da classe ControlValuePropertyAttribute, consulte o <xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>construtor.</xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to apply a ControlValuePropertyAttribute attribute that specifies a default property and value to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.controlv_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlValuePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> classe com o nome de propriedade especificado."
  remarks: "Utilize este construtor para criar uma nova instância do <xref:System.Web.UI.ControlValuePropertyAttribute>classe com o nome de propriedade especificado.</xref:System.Web.UI.ControlValuePropertyAttribute> A tabela seguinte mostra o valor da propriedade inicial para uma instância de <xref:System.Web.UI.ControlValuePropertyAttribute>classe.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| O valor da `name` parâmetro. |</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.controlv_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "A propriedade predefinida para o controlo."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> classe com o valor de nome e a predefinição de propriedade especificado."
  remarks: "Utilize este construtor para criar uma nova instância do <xref:System.Web.UI.ControlValuePropertyAttribute>classe com o valor de nome e a predefinição de propriedade especificado.</xref:System.Web.UI.ControlValuePropertyAttribute> A tabela seguinte mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.ControlValuePropertyAttribute>classe.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| O valor da `name` parâmetro. |   | <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>| O valor da `defaultValue` parâmetro. |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property and value to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/9280d55d-6a5b-458b-bf81-_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/9280d55d-6a5b-458b-bf81-_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "A propriedade predefinida para o controlo."
    - id: defaultValue
      type: System.Object
      description: "O valor predefinido para a propriedade predefinida."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> classe com o valor de nome e a predefinição de propriedade especificado. O valor predefinido é também convertido para o tipo de dados especificada."
  remarks: "Utilize este construtor para criar uma nova instância do <xref:System.Web.UI.ControlValuePropertyAttribute>classe com o valor de nome e a predefinição de propriedade especificado.</xref:System.Web.UI.ControlValuePropertyAttribute> Esta versão do construtor também tenta converter o valor predefinido para o tipo de dados especificado pelo `type` parâmetro. Se não é possível converter o valor predefinido, o <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>propriedade não está definida.</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> A tabela seguinte mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.ControlValuePropertyAttribute>classe.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| O valor da `name` parâmetro. |   | <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>| O valor da `defaultValue` parâmetro, se o valor pode ser convertido para o tipo de dados especificado pelo `type` parâmetro. |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  syntax:
    content: public ControlValuePropertyAttribute (string name, Type type, string defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "A propriedade predefinida para o controlo."
    - id: type
      type: System.Type
      description: "O <xref:System.Type>para que o valor predefinido é convertido.</xref:System.Type>"
    - id: defaultValue
      type: System.String
      description: "O valor predefinido para a propriedade predefinida."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o valor predefinido para a propriedade predefinida de um controlo."
  remarks: "Quando a propriedade especificada pelo <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>não for definida, utilize a propriedade de DefaultValue para determinar o valor predefinido para a propriedade.</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to set the DefaultValue property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_0_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_0_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "O valor predefinido para a propriedade predefinida de um controlo."
  overload: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se a instância atual do <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> objeto é igual para o objeto especificado."
  remarks: "Utilize o método de é igual a para determinar se a instância atual do <xref:System.Web.UI.ControlValuePropertyAttribute>objeto é igual para o objeto especificado.</xref:System.Web.UI.ControlValuePropertyAttribute> Para os objetos de ser iguais, têm de cumprir os seguintes critérios: 1.  O objeto incluído no `obj` parâmetro tem de ser um <xref:System.Web.UI.ControlValuePropertyAttribute>objeto.</xref:System.Web.UI.ControlValuePropertyAttribute>      2.  O <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>e <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>Propriedades de ambos os objetos têm de ser iguais.</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>      > [!NOTE] > Este método é utilizado principalmente pelos programadores de controlo."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O <xref:System.Object>para comparar com esta instância.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto contido no <code> obj </code> é igual à instância atual do parâmetro <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlValuePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro com sinal de 32 bits."
  overload: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  id: Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a propriedade predefinida para um controlo."
  remarks: "Quando um <xref:System.Web.UI.WebControls.ControlParameter>objeto é definido sem o <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>propriedade definida, utilize a propriedade de nome para determinar a propriedade predefinida que está vinculada à <xref:System.Web.UI.WebControls.ControlParameter>objeto em tempo de execução.</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter>"
  example:
  - "The following code example demonstrates how to set the Name property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_1_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_1_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A propriedade predefinida para um controlo."
  overload: System.Web.UI.ControlValuePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlValuePropertyAttribute.Equals
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlValuePropertyAttribute.GetHashCode
- uid: System.Web.UI.ControlValuePropertyAttribute.Name*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
