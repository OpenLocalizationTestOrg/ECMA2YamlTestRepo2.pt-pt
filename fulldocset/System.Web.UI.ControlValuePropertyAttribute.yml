### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlValuePropertyAttribute
  id: ControlValuePropertyAttribute
  children:
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  - System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  - System.Web.UI.ControlValuePropertyAttribute.Name
  langs:
  - csharp
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute
  fullName: System.Web.UI.ControlValuePropertyAttribute
  type: Class
  summary: "Specifies the default property of a control that a <xref href=&quot;System.Web.UI.WebControls.ControlParameter&quot;></xref> object binds to at run time. This class cannot be inherited."
  remarks: "When defining a <xref:System.Web.UI.WebControls.ControlParameter> object, you typically bind a control&quot;s property to a parameter by setting both the <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> and <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> properties. If the <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> property is not set, a default property is used. The ControlValuePropertyAttribute attribute is applied to a control to specify its default property that a <xref:System.Web.UI.WebControls.ControlParameter> object binds to at run time.       For more information about using attributes, see [Attributes](~/add/includes/ajax-current-ext-md.md).       For a list of initial property values for an instance of the ControlValuePropertyAttribute class, see the <xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A> constructor."
  example:
  - "The following code example demonstrates how to apply a ControlValuePropertyAttribute attribute that specifies a default property and value to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.controlv_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlValuePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref> class using the specified property name."
  remarks: "Use this constructor to create a new instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> class using the specified property name. The following table shows the initial property value for an instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> class.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|The value of the `name` parameter.|"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.controlv_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "The default property for the control."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref> class using the specified property name and default value."
  remarks: "Use this constructor to create a new instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> class using the specified property name and default value. The following table shows initial property values for an instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> class.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|The value of the `name` parameter.|   |<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|The value of the `defaultValue` parameter.|"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property and value to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/9280d55d-6a5b-458b-bf81-_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/9280d55d-6a5b-458b-bf81-_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "The default property for the control."
    - id: defaultValue
      type: System.Object
      description: "The default value for the default property."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref> class using the specified property name and default value. The default value is also converted to the specified data type."
  remarks: "Use this constructor to create a new instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> class using the specified property name and default value. This version of the constructor also attempts to convert the default value to the data type specified by the `type` parameter. If the default value cannot be converted, the <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> property is not set. The following table shows initial property values for an instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> class.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|The value of the `name` parameter.|   |<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|The value of the `defaultValue` parameter, if the value can be converted to the data type specified by the `type` parameter.|"
  syntax:
    content: public ControlValuePropertyAttribute (string name, Type type, string defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "The default property for the control."
    - id: type
      type: System.Type
      description: "The <xref:System.Type> to which the default value is converted."
    - id: defaultValue
      type: System.String
      description: "The default value for the default property."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the default value for the default property of a control."
  remarks: "When the property specified by the <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A> property is not set, use the DefaultValue property to determine the default value for the property."
  example:
  - "The following code example demonstrates how to set the DefaultValue property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_0_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_0_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "The default value for the default property of a control."
  overload: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the current instance of the <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref> object is equal to the specified object."
  remarks: "Use the Equals method to determine whether the current instance of the <xref:System.Web.UI.ControlValuePropertyAttribute> object is equal to the specified object. For the objects to be equal, they must meet the following criteria:      1.  The object contained in the `obj` parameter must be a <xref:System.Web.UI.ControlValuePropertyAttribute> object.      2.  The <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A> and <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> properties of both objects must be equal.      > [!NOTE] >  This method is used primarily by control developers."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The <xref:System.Object> to compare with this instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object contained in the <code>obj</code> parameter is equal to the current instance of <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.ControlValuePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returns the hash code for this instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A 32-bit signed integer hash code."
  overload: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  id: Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the default property for a control."
  remarks: "When a <xref:System.Web.UI.WebControls.ControlParameter> object is defined without its <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> property set, use the Name property to determine the default property that is bound to the <xref:System.Web.UI.WebControls.ControlParameter> object at run time."
  example:
  - "The following code example demonstrates how to set the Name property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_1_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_1_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The default property for a control."
  overload: System.Web.UI.ControlValuePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlValuePropertyAttribute.Equals
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlValuePropertyAttribute.GetHashCode
- uid: System.Web.UI.ControlValuePropertyAttribute.Name*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
