### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrintDocument
  id: PrintDocument
  children:
  - System.Drawing.Printing.PrintDocument.#ctor
  - System.Drawing.Printing.PrintDocument.BeginPrint
  - System.Drawing.Printing.PrintDocument.DefaultPageSettings
  - System.Drawing.Printing.PrintDocument.DocumentName
  - System.Drawing.Printing.PrintDocument.EndPrint
  - System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  - System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  - System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  - System.Drawing.Printing.PrintDocument.OriginAtMargins
  - System.Drawing.Printing.PrintDocument.Print
  - System.Drawing.Printing.PrintDocument.PrintController
  - System.Drawing.Printing.PrintDocument.PrinterSettings
  - System.Drawing.Printing.PrintDocument.PrintPage
  - System.Drawing.Printing.PrintDocument.QueryPageSettings
  - System.Drawing.Printing.PrintDocument.ToString
  langs:
  - csharp
  name: PrintDocument
  nameWithType: PrintDocument
  fullName: System.Drawing.Printing.PrintDocument
  type: Class
  summary: "Defines a reusable object that sends output to a printer, when printing from a Windows Forms application."
  remarks: "Typically, you create an instance of the PrintDocument class, set properties such as the <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>and <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>, and call the <xref:System.Drawing.Printing.PrintDocument.Print%2A> method to start the printing process. Handle the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event where you specify the output to print, by using the <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics> property of the <xref:System.Drawing.Printing.PrintPageEventArgs>.       For more information about printing from a Windows Form application, see the [Windows Forms Print Support](~/add/includes/ajax-current-ext-md.md). If you wish to print from a Windows Presentation Foundation application, see the <xref:System.Printing> namespace."
  example:
  - "The following code example prints the file named C:\\My Documents\\MyFile.txt on the default printer. To run the example, create a new Windows Forms project and paste the example code into the form, replacing the file contents. For C#, you will need to delete the Form1.Designer.cs file. Also, change the path to the file you want to print.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Windows.Forms>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_5_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_5_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PrintPage")]

      [System.ComponentModel.DefaultProperty("DocumentName")]

      [System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")]

      public class PrintDocument : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Printing.PrintDocument&quot;></xref> class."
  remarks: "The default constructor initializes all fields based upon the default printer. Typically, after creating a new <xref:System.Drawing.Printing.PrintDocument>, you set printer and page settings that affect the output through the <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> and <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> properties, respectively."
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_1_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_1_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_1_1.cs)]"
  syntax:
    content: public PrintDocument ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  id: BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Occurs when the <xref:System.Drawing.Printing.PrintDocument.Print*> method is called and before the first page of the document prints."
  remarks: "Typically, you handle the BeginPrint event to initialize fonts, file streams, and other resources used during the printing process.       To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintEventHandler> delegate to the event. The event handler is called whenever the event occurs. For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler BeginPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Gets or sets page settings that are used as defaults for all pages to be printed."
  remarks: "You can specify several default page settings through the DefaultPageSettings property. For example, the <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName> property specifies whether the page prints in color, the <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName> property specifies landscape or portrait orientation, and the <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> property specifies the margins of the page.       To specify settings on a page-by-page basis, handle the <xref:System.Drawing.Printing.PrintDocument.PrintPage> or <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event and modify the <xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> argument included in the <xref:System.Drawing.Printing.PrintPageEventArgs> or <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>, respectively.      > [!NOTE] >  After printing has started, changes to page settings through the DefaultPageSettings property will not affect pages being printed."
  example:
  - "The following code example sets a document's page orientation to landscape, and prints the document. The example makes three assumptions: that a variable named `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_16_1.cs)]\n [!code-cpp[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_16_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintDocument Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_16_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;></xref> that specifies the default page settings for the document."
  overload: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  id: DocumentName
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Gets or sets the document name to display (for example, in a print status dialog box or printer queue) while printing the document."
  remarks: "The DocumentName property does not specify the file to print. Rather, you specify the output to print by handling the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event. For an example, see the <xref:System.Drawing.Printing.PrintDocument> class overview."
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it, and sets the DocumentName to a user-friendly name. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_24_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_24_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_24_1.vb)]"
  syntax:
    content: public string DocumentName { get; set; }
    return:
      type: System.String
      description: "The document name to display while printing the document. The default is &quot;document&quot;."
  overload: System.Drawing.Printing.PrintDocument.DocumentName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  id: EndPrint
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Occurs when the last page of the document has printed."
  remarks: "Typically, you handle the EndPrint event to release fonts, file streams, and other resources used during the printing process, like fonts.       You indicate that there are no more pages to print by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> property to `false` in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event. The EndPrint event also occurs if the printing process is canceled or an exception occurs during the printing process.       To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintEventHandler> delegate to the event. The event handler is called whenever the event occurs. For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Drawing.Printing.PrintEventHandler EndPrint;
    return:
      type: System.Drawing.Printing.PrintEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Raises the <xref href=&quot;System.Drawing.Printing.PrintDocument.BeginPrint&quot;></xref> event. It is called after the <xref:System.Drawing.Printing.PrintDocument.Print*> method is called and before the first page of the document prints."
  remarks: "The OnBeginPrint method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.       When a derived class calls the OnBeginPrint method, it raises the <xref:System.Drawing.Printing.PrintDocument.BeginPrint> event by invoking the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;></xref> that contains the event data."
  overload: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  id: OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Raises the <xref href=&quot;System.Drawing.Printing.PrintDocument.EndPrint&quot;></xref> event. It is called when the last page of the document has printed."
  remarks: "The OnEndPrint method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class. The OnEndPrint method is also called if the printing process is canceled or an exception occurs during the printing process.       When a derived class calls the OnEndPrint method, it raises the <xref:System.Drawing.Printing.PrintDocument.EndPrint> event by invoking the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintEventArgs&quot;></xref> that contains the event data."
  overload: System.Drawing.Printing.PrintDocument.OnEndPrint*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  id: OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Raises the <xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref> event. It is called before a page prints."
  remarks: "The OnPrintPage method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.       When a derived class calls the OnPrintPage method, it raises the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event by invoking the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.PrintPageEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.PrintPageEventArgs&quot;></xref> that contains the event data."
  overload: System.Drawing.Printing.PrintDocument.OnPrintPage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  id: OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Raises the <xref href=&quot;System.Drawing.Printing.PrintDocument.QueryPageSettings&quot;></xref> event. It is called immediately before each <xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref> event."
  remarks: "The OnQueryPageSettings method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.       When a derived class calls the OnQueryPageSettings method, it raises the <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event by invoking the event handler through a delegate. For more information, see [Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);
    parameters:
    - id: e
      type: System.Drawing.Printing.QueryPageSettingsEventArgs
      description: "A <xref href=&quot;System.Drawing.Printing.QueryPageSettingsEventArgs&quot;></xref> that contains the event data."
  overload: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  id: OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Gets or sets a value indicating whether the position of a graphics object associated with a page is located just inside the user-specified margins or at the top-left corner of the printable area of the page."
  remarks: "Calculating the area available to print requires knowing the physical size of the paper, the margins for the page, and the location of the <xref:System.Drawing.Graphics> object origin. When OriginAtMargins is `true`, the <xref:System.Drawing.Graphics> object location takes into account the <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> property value and the printable area of the page. When OriginAtMargins is `false`, only the printable area of the page is used to determine the location of the <xref:System.Drawing.Graphics> object origin, the <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> value is ignored.       For example, if OriginAtMargins is `true`, and <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> is set for 1 inch on each side, the <xref:System.Drawing.Graphics> object included in the <xref:System.Drawing.Printing.PrintPageEventArgs> is located 1 inch from the left and top of the page. If the printable area of the page is .25 of an inch on each side and OriginAtMargins is `false`, the <xref:System.Drawing.Graphics> object is located .25 of an inch from the left and top of the page.      > [!NOTE] >  The printable area of a page varies from printer to printer and is not guaranteed to be symmetrical."
  syntax:
    content: public bool OriginAtMargins { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the graphics origin starts at the page margins; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the graphics origin is at the top-left corner of the printable page. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.Print
  id: Print
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Starts the document&quot;s printing process."
  remarks: "Specify the output to print by handling the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event and by using the <xref:System.Drawing.Graphics> included in the <xref:System.Drawing.Printing.PrintPageEventArgs>.       Use the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName> property to specify which printer should print the document.       The Print method prints the document without using a print dialog. Use a <xref:System.Windows.Forms.PrintDialog> when you want to offer the user the ability to choose print settings.      > [!NOTE] >  If an exception that is not handled by the Print method is thrown during printing, the printing of the document is aborted."
  example:
  - "The following code example prints the file that is specified through the command line to the default printer.  \n  \n> [!NOTE]\n>  The example requires that each line fits within the page width.  \n  \n Use the <xref:System.ComponentModel>, <xref:System.Drawing>, <xref:System.Drawing.Printing>, <xref:System.IO>, and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/cpp/m-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/visualbasic/m-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument.PrintPage Example#1](~/add/codesnippet/csharp/m-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public void Print ();
    parameters: []
  overload: System.Drawing.Printing.PrintDocument.Print*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "The printer named in the &lt;xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName&gt; property does not exist."
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintController
  id: PrintController
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Gets or sets the print controller that guides the printing process."
  remarks: "A print controller guides the printing process in several ways. For example, to print a document, you need to convert it to a <xref:System.Drawing.Graphics> object. A <xref:System.Drawing.Printing.PrintController> specifies where to draw the graphic in an image for a print preview or on a printer to actually print the document. A print controller can also specify whether to print a document immediately, or wait a specified interval."
  example:
  - "The following code example requires that you have created an instance of the <xref:System.Drawing.Printing.PrintDocument> class that is named `myPrintDocument`. The example creates a new instance of the <xref:System.Drawing.Printing.PrintController> class, assigns it to the PrintController property of `myPrintDocument`, and prints the document.  \n  \n Use the <xref:System.Drawing.Printing> and <xref:System.Windows.Forms> namespaces for this example.  \n  \n [!code-cs[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_6_1.cs)]\n [!code-vb[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_6_1.vb)]\n [!code-cpp[Classic PrintDocument.PrintController Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_6_1.cpp)]"
  syntax:
    content: public System.Drawing.Printing.PrintController PrintController { get; set; }
    return:
      type: System.Drawing.Printing.PrintController
      description: "The <xref href=&quot;System.Drawing.Printing.PrintController&quot;></xref> that guides the printing process. The default is a new instance of the <xref href=&quot;System.Windows.Forms.PrintControllerWithStatusDialog&quot;></xref> class."
  overload: System.Drawing.Printing.PrintDocument.PrintController*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  id: PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Gets or sets the printer that prints the document."
  remarks: "You can specify several printer settings through the PrinterSettings property. For example, use the <xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName> property to specify the number of copies you want to print, the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName> property to specify the printer to use, and the <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName> property to specify the range of pages you want to print."
  example:
  - "The following code example prints a document on the specified printer. The example makes three assumptions: that a variable names `filePath` has been set to the path of the file to print; that a method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined; and that a variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrintDocument.PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_2_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }
    return:
      type: System.Drawing.Printing.PrinterSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref> that specifies where and how the document is printed. The default is a <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref> with its properties set to their default values."
  overload: System.Drawing.Printing.PrintDocument.PrinterSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  id: PrintPage
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Occurs when the output to print for the current page is needed."
  remarks: "To specify the output to print, use the <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> property of the <xref:System.Drawing.Printing.PrintPageEventArgs>. For example, to specify a line of text that should be printed, draw the text using the <xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName> method.       In addition to specifying the output, you can indicate if there are additional pages to print by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> property to `true`. The default is `false`, which indicates that there are no more pages to print. Individual page settings can also be modified through the <xref:System.Drawing.Printing.PageSettings> and the print job can be canceled by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName> property to `true`. To print each page of a document using different page settings, handle the <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> event.       To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintPageEventHandler> delegate to the event. The event handler is called whenever the event occurs. For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates handling the PrintPage event.  \n  \n For another example, see [How to: Print a Multi-Page Text File in Windows Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrintDocument Example#1](~/add/codesnippet/cpp/e-system.drawing.printin_0_1.cpp)]\n [!code-vb[Classic PrintDocument Example#1](~/add/codesnippet/visualbasic/e-system.drawing.printin_0_1.vb)]\n [!code-cs[Classic PrintDocument Example#1](~/add/codesnippet/csharp/e-system.drawing.printin_0_1.cs)]"
  syntax:
    content: public event System.Drawing.Printing.PrintPageEventHandler PrintPage;
    return:
      type: System.Drawing.Printing.PrintPageEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  id: QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
  type: Event
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Occurs immediately before each <xref href=&quot;System.Drawing.Printing.PrintDocument.PrintPage&quot;></xref> event."
  remarks: "It is possible to print each page of a document using different page settings. You set page settings by modifying individual properties of the <xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName> property or by setting the property to a <xref:System.Drawing.Printing.PageSettings>. Changes made to the <xref:System.Drawing.Printing.PageSettings> affect only the current page, not the document&quot;s default page settings. The print job can also be canceled by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` for the <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>.       To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.QueryPageSettingsEventHandler> delegate to the event. The event handler is called whenever the event occurs. For more information about handling events with delegates, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and QueryPageSettings events are handled. The `currentPageNumber` variable is incremented after every page is printed in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, which is not shown.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/e-system.drawing.printin_1_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/e-system.drawing.printin_1_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/e-system.drawing.printin_1_1.vb)]"
  syntax:
    content: public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;
    return:
      type: System.Drawing.Printing.QueryPageSettingsEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrintDocument.ToString
  id: ToString
  parent: System.Drawing.Printing.PrintDocument
  langs:
  - csharp
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "Provides information about the print document, in string form."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string."
  overload: System.Drawing.Printing.PrintDocument.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.Drawing.Printing.PrintDocument.#ctor
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument()
  nameWithType: PrintDocument.PrintDocument()
  fullName: System.Drawing.Printing.PrintDocument.PrintDocument()
- uid: System.Drawing.Printing.PrintDocument.BeginPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: BeginPrint
  nameWithType: PrintDocument.BeginPrint
  fullName: System.Drawing.Printing.PrintDocument.BeginPrint
- uid: System.Drawing.Printing.PrintEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventHandler
  nameWithType: PrintEventHandler
  fullName: System.Drawing.Printing.PrintEventHandler
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
  fullName: System.Drawing.Printing.PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
  fullName: System.Drawing.Printing.PrintDocument.DocumentName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrintDocument.EndPrint
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: EndPrint
  nameWithType: PrintDocument.EndPrint
  fullName: System.Drawing.Printing.PrintDocument.EndPrint
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnBeginPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnBeginPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintEventArgs
  nameWithType: PrintEventArgs
  fullName: System.Drawing.Printing.PrintEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint(PrintEventArgs)
  nameWithType: PrintDocument.OnEndPrint(PrintEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnEndPrint(PrintEventArgs)
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage(PrintPageEventArgs)
  nameWithType: PrintDocument.OnPrintPage(PrintPageEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnPrintPage(PrintPageEventArgs)
- uid: System.Drawing.Printing.PrintPageEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventArgs
  nameWithType: PrintPageEventArgs
  fullName: System.Drawing.Printing.PrintPageEventArgs
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings(QueryPageSettingsEventArgs)
  nameWithType: PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
  fullName: System.Drawing.Printing.PrintDocument.OnQueryPageSettings(QueryPageSettingsEventArgs)
- uid: System.Drawing.Printing.QueryPageSettingsEventArgs
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventArgs
  nameWithType: QueryPageSettingsEventArgs
  fullName: System.Drawing.Printing.QueryPageSettingsEventArgs
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
  fullName: System.Drawing.Printing.PrintDocument.OriginAtMargins
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrintDocument.Print
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print()
  nameWithType: PrintDocument.Print()
  fullName: System.Drawing.Printing.PrintDocument.Print()
- uid: System.Drawing.Printing.PrintDocument.PrintController
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
  fullName: System.Drawing.Printing.PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintController
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintController
  nameWithType: PrintController
  fullName: System.Drawing.Printing.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
  fullName: System.Drawing.Printing.PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.PrintPage
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintPage
  nameWithType: PrintDocument.PrintPage
  fullName: System.Drawing.Printing.PrintDocument.PrintPage
- uid: System.Drawing.Printing.PrintPageEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintPageEventHandler
  nameWithType: PrintPageEventHandler
  fullName: System.Drawing.Printing.PrintPageEventHandler
- uid: System.Drawing.Printing.PrintDocument.QueryPageSettings
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: QueryPageSettings
  nameWithType: PrintDocument.QueryPageSettings
  fullName: System.Drawing.Printing.PrintDocument.QueryPageSettings
- uid: System.Drawing.Printing.QueryPageSettingsEventHandler
  parent: System.Drawing.Printing
  isExternal: false
  name: QueryPageSettingsEventHandler
  nameWithType: QueryPageSettingsEventHandler
  fullName: System.Drawing.Printing.QueryPageSettingsEventHandler
- uid: System.Drawing.Printing.PrintDocument.ToString
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString()
  nameWithType: PrintDocument.ToString()
  fullName: System.Drawing.Printing.PrintDocument.ToString()
- uid: System.Drawing.Printing.PrintDocument.#ctor*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintDocument
  nameWithType: PrintDocument.PrintDocument
- uid: System.Drawing.Printing.PrintDocument.DefaultPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrintDocument.DefaultPageSettings
- uid: System.Drawing.Printing.PrintDocument.DocumentName*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: DocumentName
  nameWithType: PrintDocument.DocumentName
- uid: System.Drawing.Printing.PrintDocument.OnBeginPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnBeginPrint
  nameWithType: PrintDocument.OnBeginPrint
- uid: System.Drawing.Printing.PrintDocument.OnEndPrint*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnEndPrint
  nameWithType: PrintDocument.OnEndPrint
- uid: System.Drawing.Printing.PrintDocument.OnPrintPage*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnPrintPage
  nameWithType: PrintDocument.OnPrintPage
- uid: System.Drawing.Printing.PrintDocument.OnQueryPageSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OnQueryPageSettings
  nameWithType: PrintDocument.OnQueryPageSettings
- uid: System.Drawing.Printing.PrintDocument.OriginAtMargins*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: OriginAtMargins
  nameWithType: PrintDocument.OriginAtMargins
- uid: System.Drawing.Printing.PrintDocument.Print*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: Print
  nameWithType: PrintDocument.Print
- uid: System.Drawing.Printing.PrintDocument.PrintController*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrintController
  nameWithType: PrintDocument.PrintController
- uid: System.Drawing.Printing.PrintDocument.PrinterSettings*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: PrinterSettings
  nameWithType: PrintDocument.PrinterSettings
- uid: System.Drawing.Printing.PrintDocument.ToString*
  parent: System.Drawing.Printing.PrintDocument
  isExternal: false
  name: ToString
  nameWithType: PrintDocument.ToString
