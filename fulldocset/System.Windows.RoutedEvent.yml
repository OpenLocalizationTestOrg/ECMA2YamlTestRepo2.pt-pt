### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEvent
  id: RoutedEvent
  children:
  - System.Windows.RoutedEvent.AddOwner(System.Type)
  - System.Windows.RoutedEvent.HandlerType
  - System.Windows.RoutedEvent.Name
  - System.Windows.RoutedEvent.OwnerType
  - System.Windows.RoutedEvent.RoutingStrategy
  - System.Windows.RoutedEvent.ToString
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
  type: Class
  summary: "Representa e identifica um evento encaminhado e declara as características."
  remarks: "Esta classe contém o <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, e <xref:System.Windows.RoutedEvent.OwnerType%2A>Propriedades.</xref:System.Windows.RoutedEvent.OwnerType%2A> </xref:System.Windows.RoutedEvent.HandlerType%2A> </xref:System.Windows.RoutedEvent.RoutingStrategy%2A> </xref:System.Windows.RoutedEvent.Name%2A> Nenhuma destes membros podem ter valores nulos.       Esta classe tem uma utilização XAML que destina-se exclusivamente para fornecer o valor da <xref:System.Windows.EventTrigger.RoutedEvent%2A>propriedade de um <xref:System.Windows.EventTrigger>(ou a classe derivada), ou para o <xref:System.Windows.EventSetter.Event%2A>propriedade de um <xref:System.Windows.EventSetter>(ou a classe derivada).</xref:System.Windows.EventSetter> </xref:System.Windows.EventSetter.Event%2A> </xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger.RoutedEvent%2A> Para obter mais informações sobre <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, e as utilizações de XAML para essas classes, consulte [descrição geral de eventos encaminhados](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.EventSetter> </xref:System.Windows.EventTrigger>      <a name=&quot;xamlAttributeUsage_RoutedEvent&quot;></a># # Utilização do atributo de XAML ```   <object property=&quot;eventName&quot;/>   - or -   <object property=&quot;type.eventName&quot;/>      ``` <a name=&quot;xamlValues_RoutedEvent&quot;> </a> # # XAML valores *eventName* um nome de evento não qualificados, equivalente para o <xref:System.Windows.RoutedEvent.Name%2A>propriedade do campo da RoutedEvent, não o nome de membro real do campo de identificador da RoutedEvent dentro de um tipo.</xref:System.Windows.RoutedEvent.Name%2A>       Sem qualificação, *eventName* têm nomes um evento como encontrada no tipo que é a <xref:System.Windows.Style.TargetType%2A>do estilo atual que contém a <xref:System.Windows.EventSetter>ou <xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger> </xref:System.Windows.EventSetter> </xref:System.Windows.Style.TargetType%2A>       *tipo* o tipo a utilizar para qualificar o nome de evento. Se fornecidos, sem um prefixo *tipo* deve ser um tipo de espaço de nomes XAML predefinido, e que pode ser mapeado para um tipo CLR existente. Eventos personalizados, ou eventos que estão em tipos fora do XAML espaço de nomes predefinido, a cadeia para *tipo* pode incluir um prefixo para um espaço de nomes XAML mapeado. Esse espaço de nomes XAML deve conter o tipo XAML que pode mapear para um tipo CLR de cópia de segurança e esse tipo CLR deve definir o identificador de evento encaminhado pretendido. Para obter detalhes sobre o mapeamento de espaço de nomes XAML, consulte [espaços de nomes XAML e mapeamento de espaço de nomes para WPF XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public sealed class RoutedEvent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  id: AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Associa outro tipo de proprietário do evento encaminhado representado por um <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> instância e permite o encaminhamento de evento e o processamento."
  remarks: "O tipo de proprietário é utilizado internamente ao resolver um evento por nome."
  example:
  - "The following example adds the current class as another owner of an event defined in a different class. Here, `AnotherEditContainer` is the current class, and the `EditStateChangedEvent`<xref:System.Windows.RoutedEvent> field is defined as a member of that class. The `MyEditContainer` class originally defined the event, registering it with the identically named `EditStateChangedEvent`identifier.  \n  \n [!code-vb[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#routedeventaddowner)]\n [!code-cs[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#routedeventaddowner)]"
  syntax:
    content: public System.Windows.RoutedEvent AddOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "O tipo de onde o evento encaminhado é adicionado."
    return:
      type: System.Windows.RoutedEvent
      description: "O campo de identificador para o evento. Este valor de retorno deve ser utilizado para definir um público estático campo só de leitura que irá armazenar o identificador de representação do evento encaminhado no tipo de proprietário. Este campo é, normalmente, definido com acesso de público, porque o código de utilizador tem de referenciar o campo para anexar a quaisquer processadores de instância para o evento encaminhado ao utilizar o <xref:System.Windows.UIElement.AddHandler*>método do utilitário.</xref:System.Windows.UIElement.AddHandler*>"
  overload: System.Windows.RoutedEvent.AddOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.HandlerType
  id: HandlerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém o tipo de processador do evento encaminhado."
  remarks: "O tipo de processador é o delegado de processador de eventos que deve ser utilizado quando implementar os processadores que irão escutar eventos representado por este <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent>"
  syntax:
    content: public Type HandlerType { get; }
    return:
      type: System.Type
      description: "O tipo de processador do evento encaminhado."
  overload: System.Windows.RoutedEvent.HandlerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.Name
  id: Name
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém o nome de identificação do evento encaminhado."
  remarks: "O nome de um evento encaminhado têm de ser exclusivo dentro de cada tipo de proprietário, mas não é necessário para ser globalmente exclusivo.       O valor desta propriedade origina do <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>método que define um <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> </xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Especificamente, o valor de nome é o `name` valor de parâmetro que foi transmitido aos <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome do evento encaminhado."
  overload: System.Windows.RoutedEvent.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.OwnerType
  id: OwnerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém o tipo de proprietário registado o evento encaminhado."
  remarks: "Este tipo pode ser qualquer tipo de objeto, não necessariamente limitado a <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> Em casos de eventos encaminhados que tenham proprietários adicionados, esta propriedade irá devolver o primeiro proprietário declarado.       O valor desta propriedade origina do <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>método que define um <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> </xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Especificamente, o valor de OwnerType é o `ownerType` valor de parâmetro que foi transmitido aos <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>"
  syntax:
    content: public Type OwnerType { get; }
    return:
      type: System.Type
      description: "O tipo de proprietário do evento encaminhado."
  overload: System.Windows.RoutedEvent.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.RoutingStrategy
  id: RoutingStrategy
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Obtém a estratégia de encaminhamento do evento encaminhado."
  remarks: "Por convenção, túnel eventos encaminhados têm o prefixo de nome &quot;Preview&quot; e um evento bubbling associado definido. Deve ser raro que deverá existir apenas uma versão de túnel e não uma versão bubbling correspondente. Para obter mais informações, consulte [como: criar um evento de encaminhados personalizada](~/add/includes/ajax-current-ext-md.md).       O valor desta propriedade origina do <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>método que define um <xref:System.Windows.RoutedEvent>.</xref:System.Windows.RoutedEvent> </xref:System.Windows.EventManager.RegisterRoutedEvent%2A> Especificamente, o valor de RoutingStrategy é o `routingStrategy` valor de parâmetro que foi transmitido aos <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>"
  syntax:
    content: public System.Windows.RoutingStrategy RoutingStrategy { get; }
    return:
      type: System.Windows.RoutingStrategy
      description: "Um dos valores de enumeração. A predefinição é a predefinição de enumeração, <xref href=&quot;System.Windows.RoutingStrategy&quot;> </xref>."
  overload: System.Windows.RoutedEvent.RoutingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.ToString
  id: ToString
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Devolve a representação de cadeia deste <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de cadeia para este objeto, que é idêntico para o valor devolvido pelo <xref:System.Windows.RoutedEvent.Name*>.</xref:System.Windows.RoutedEvent.Name*>"
  overload: System.Windows.RoutedEvent.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.RoutedEvent.HandlerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutedEvent.OwnerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
- uid: System.Windows.RoutedEvent.AddOwner*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner
  nameWithType: RoutedEvent.AddOwner
- uid: System.Windows.RoutedEvent.HandlerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
- uid: System.Windows.RoutedEvent.OwnerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString
  nameWithType: RoutedEvent.ToString
