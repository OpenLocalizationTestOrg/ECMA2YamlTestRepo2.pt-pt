### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEvent
  id: RoutedEvent
  children:
  - System.Windows.RoutedEvent.AddOwner(System.Type)
  - System.Windows.RoutedEvent.HandlerType
  - System.Windows.RoutedEvent.Name
  - System.Windows.RoutedEvent.OwnerType
  - System.Windows.RoutedEvent.RoutingStrategy
  - System.Windows.RoutedEvent.ToString
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
  type: Class
  summary: "Represents and identifies a routed event and declares its characteristics."
  remarks: "This class contains the <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, and <xref:System.Windows.RoutedEvent.OwnerType%2A> properties. None of these members can have null values.       This class has a XAML usage that is exclusively intended for providing the value of the <xref:System.Windows.EventTrigger.RoutedEvent%2A> property of an <xref:System.Windows.EventTrigger> (or derived class), or for the <xref:System.Windows.EventSetter.Event%2A> property of an <xref:System.Windows.EventSetter> (or derived class). For more information about <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, and the XAML usages for those classes, see [Routed Events Overview](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_RoutedEvent&quot;></a>    ## XAML Attribute Usage      ```   <object property=&quot;eventName&quot;/>   - or -   <object property=&quot;type.eventName&quot;/>      ```      <a name=&quot;xamlValues_RoutedEvent&quot;></a>    ## XAML Values    *eventName*    An unqualified event name, equivalent to the <xref:System.Windows.RoutedEvent.Name%2A> property of the RoutedEvent field, not the actual member name of the RoutedEvent identifier field within a type. Without qualification, *eventName* must name an event as found in the type that is the <xref:System.Windows.Style.TargetType%2A> of the current style containing the <xref:System.Windows.EventSetter> or <xref:System.Windows.EventTrigger>.       *type*    The type to use to qualify the event name. If provided without a prefix, *type* is expected to be a type within the default XAML namespace, and that can be mapped to an existing CLR type. For custom events, or events that are on types outside of the default XAML namespace, the string for *type* can include a prefix for a mapped XAML namespace. That XAML namespace should contain the XAML type that can map to a backing CLR type, and that CLR type should define the desired routed event identifier. For details on XAML namespace mapping, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public sealed class RoutedEvent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  id: AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Associates another owner type with the routed event represented by a <xref href=&quot;System.Windows.RoutedEvent&quot;></xref> instance, and enables routing of the event and its handling."
  remarks: "The owner type is used internally when resolving an event by name."
  example:
  - "The following example adds the current class as another owner of an event defined in a different class. Here, `AnotherEditContainer` is the current class, and the `EditStateChangedEvent`<xref:System.Windows.RoutedEvent> field is defined as a member of that class. The `MyEditContainer` class originally defined the event, registering it with the identically named `EditStateChangedEvent`identifier.  \n  \n [!code-vb[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#routedeventaddowner)]\n [!code-cs[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#routedeventaddowner)]"
  syntax:
    content: public System.Windows.RoutedEvent AddOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "The type where the routed event is added."
    return:
      type: System.Windows.RoutedEvent
      description: "The identifier field for the event. This return value should be used to set a public static read-only field that will store the identifier for the representation of the routed event on the owning type. This field is typically defined with public access, because user code must reference the field in order to attach any instance handlers for the routed event when using the <xref:System.Windows.UIElement.AddHandler*> utility method."
  overload: System.Windows.RoutedEvent.AddOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.HandlerType
  id: HandlerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets the handler type of the routed event."
  remarks: "The handler type is the event handler delegate that should be used when implementing handlers that will listen for the event represented by this <xref:System.Windows.RoutedEvent>."
  syntax:
    content: public Type HandlerType { get; }
    return:
      type: System.Type
      description: "The handler type of the routed event."
  overload: System.Windows.RoutedEvent.HandlerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.Name
  id: Name
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets the identifying name of the routed event."
  remarks: "The name of a routed event must be unique within each owner type, but is not required to be globally unique.       The value of this property originates from the <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> method that defines a <xref:System.Windows.RoutedEvent>. Specifically, the value of Name is the `name` parameter value that was passed to <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the routed event."
  overload: System.Windows.RoutedEvent.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.OwnerType
  id: OwnerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets the registered owner type of the routed event."
  remarks: "This type can be any object type, not necessarily limited to <xref:System.Windows.DependencyObject>. In cases of routed events that have owners added, this property will return the first declared owner.       The value of this property originates from the <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> method that defines a <xref:System.Windows.RoutedEvent>. Specifically, the value of OwnerType is the `ownerType` parameter value that was passed to <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."
  syntax:
    content: public Type OwnerType { get; }
    return:
      type: System.Type
      description: "The owner type of the routed event."
  overload: System.Windows.RoutedEvent.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.RoutingStrategy
  id: RoutingStrategy
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets the routing strategy of the routed event."
  remarks: "By convention, tunneling routed events have the name prefix &quot;Preview&quot; and an associated bubbling event defined. It should be rare that there would be only a tunneling version and not a matching bubbling version. For more information, see [How to: Create a Custom Routed Event](~/add/includes/ajax-current-ext-md.md).       The value of this property originates from the <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> method that defines a <xref:System.Windows.RoutedEvent>. Specifically, the value of RoutingStrategy is the `routingStrategy` parameter value that was passed to <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>."
  syntax:
    content: public System.Windows.RoutingStrategy RoutingStrategy { get; }
    return:
      type: System.Windows.RoutingStrategy
      description: "One of the enumeration values. The default is the enumeration default, <xref href=&quot;System.Windows.RoutingStrategy&quot;></xref>."
  overload: System.Windows.RoutedEvent.RoutingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.ToString
  id: ToString
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returns the string representation of this <xref href=&quot;System.Windows.RoutedEvent&quot;></xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string representation for this object, which is identical to the value returned by <xref:System.Windows.RoutedEvent.Name*>."
  overload: System.Windows.RoutedEvent.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.RoutedEvent.HandlerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutedEvent.OwnerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
- uid: System.Windows.RoutedEvent.AddOwner*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner
  nameWithType: RoutedEvent.AddOwner
- uid: System.Windows.RoutedEvent.HandlerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
- uid: System.Windows.RoutedEvent.OwnerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString
  nameWithType: RoutedEvent.ToString
