### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HierarchicalDataSourceView
  id: HierarchicalDataSourceView
  children:
  - System.Web.UI.HierarchicalDataSourceView.#ctor
  - System.Web.UI.HierarchicalDataSourceView.Select
  langs:
  - csharp
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
  type: Class
  summary: "Representa uma vista de dados num nó ou coleção de nós numa estrutura hierárquica de dados para um <xref href=&quot;System.Web.UI.HierarchicalDataSourceControl&quot;> </xref> controlo."
  remarks: "ASP.NET suporta uma arquitetura de enlace de dados que permite que os controlos de servidor Web vincular a dados e apresentá-lo de forma consistente. Controlos de servidor Web que vincular a dados são designadas por controlos vinculados a dados e as classes que o facilitam esse enlace são denominadas controlos de origem de dados. Controlos de origem de dados podem representar qualquer origem de dados: um ficheiro, um fluxo, uma base de dados relacional, um objecto de negócio e assim sucessivamente. Origem de dados controla presentes dados de forma consistente para controlos vinculados a dados, independentemente de origem ou o formato dos dados subjacentes.       Controlos de origem de dados que representam dados hierárquicos derivam a abstrato <xref:System.Web.UI.HierarchicalDataSourceControl>classe.</xref:System.Web.UI.HierarchicalDataSourceControl> Pode considerar um controlo de origem de dados como a combinação do objeto de controlo de origem de dados e respetivas vistas associadas nos dados subjacentes, que são representados por objetos de vista de origem de dados. Controlos de origem de dados hierárquica suportam uma vista de origem de dados hierárquica para cada nível de dados que representam hierárquica. As vistas de origem de dados não são denominadas, como os <xref:System.Web.UI.DataSourceView>objetos associados a um <xref:System.Web.UI.DataSourceControl>controlo, mas são identificados pelo respetivo caminho exclusiva. hierárquica</xref:System.Web.UI.DataSourceControl> </xref:System.Web.UI.DataSourceView>       Vistas de origem de dados definem as capacidades de um controlo de origem de dados. Todos os dados de origem ver objetos, incluindo HierarchicalDataSourceView, suportam a obtenção de dados da utilização de origem de dados subjacente a <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>método, o que obtém uma lista hierárquica de dados como um <xref:System.Web.UI.IHierarchicalEnumerable>objeto.</xref:System.Web.UI.IHierarchicalEnumerable> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> Ver objetos suportam opcionalmente um conjunto básico de capacidades, incluindo como operações da origem de dados de todos os <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>e ordenação.</xref:System.Web.UI.DataSourceView.Delete%2A> </xref:System.Web.UI.DataSourceView.Update%2A> </xref:System.Web.UI.DataSourceView.Insert%2A> Um controlo vinculado a dados pode detetar as capacidades de um controlo de origem de dados ao aceder a uma origem de dados associada ver utilizando o <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A>método e consultar a vista no momento da conceção ou em tempo de execução.</xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> HierarchicalDataSourceView não suporta atualmente <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>ou <xref:System.Web.UI.DataSourceView.Delete%2A>operações.</xref:System.Web.UI.DataSourceView.Delete%2A> </xref:System.Web.UI.DataSourceView.Update%2A> </xref:System.Web.UI.DataSourceView.Insert%2A>"
  example:
  - "The following code example demonstrates how to derive a class from the HierarchicalDataSourceView class to retrieve data from hierarchical data storage, in this case a file system. The `FileSystemDataSourceView` class is a strongly typed HierarchicalDataSourceView instance that enables hierarchical Web server controls such as the <xref:System.Web.UI.WebControls.TreeView> control to bind to a `FileSystemDataSource` control and display file system information. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/csharp/t-system.web.ui.hierarch_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/visualbasic/t-system.web.ui.hierarch_0_1.vb)]"
  syntax:
    content: public abstract class HierarchicalDataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor
  id: '#ctor'
  parent: System.Web.UI.HierarchicalDataSourceView
  langs:
  - csharp
  name: HierarchicalDataSourceView()
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()
  fullName: System.Web.UI.HierarchicalDataSourceView.HierarchicalDataSourceView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.HierarchicalDataSourceView&quot;> </xref> classe."
  syntax:
    content: protected HierarchicalDataSourceView ();
    parameters: []
  overload: System.Web.UI.HierarchicalDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HierarchicalDataSourceView.Select
  id: Select
  parent: System.Web.UI.HierarchicalDataSourceView
  langs:
  - csharp
  name: Select()
  nameWithType: HierarchicalDataSourceView.Select()
  fullName: System.Web.UI.HierarchicalDataSourceView.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de todos os itens de dados na vista."
  remarks: "O método Select devolve um <xref:System.Web.UI.IHierarchicalEnumerable>colecção de itens de dados na vista atual.</xref:System.Web.UI.IHierarchicalEnumerable> Pode chamar o <xref:System.Collections.IEnumerable.GetEnumerator%2A>método para obter um <xref:System.Collections.IEnumerator>de objeto e itere através da coleção de itens de dados.</xref:System.Collections.IEnumerator> </xref:System.Collections.IEnumerable.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to override the Select method in a class that derives from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve hierarchical <xref:System.IO.FileSystemInfo> data from a file system. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor of the view object might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.hierarch_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.hierarch_1_1.vb)]"
  syntax:
    content: public abstract System.Web.UI.IHierarchicalEnumerable Select ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchicalEnumerable
      description: "Um <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> colecção de itens de dados."
  overload: System.Web.UI.HierarchicalDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: HierarchicalDataSourceView()
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()
  fullName: System.Web.UI.HierarchicalDataSourceView.HierarchicalDataSourceView()
- uid: System.Web.UI.HierarchicalDataSourceView.Select
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: Select()
  nameWithType: HierarchicalDataSourceView.Select()
  fullName: System.Web.UI.HierarchicalDataSourceView.Select()
- uid: System.Web.UI.IHierarchicalEnumerable
  parent: System.Web.UI
  isExternal: false
  name: IHierarchicalEnumerable
  nameWithType: IHierarchicalEnumerable
  fullName: System.Web.UI.IHierarchicalEnumerable
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor*
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView
- uid: System.Web.UI.HierarchicalDataSourceView.Select*
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: Select
  nameWithType: HierarchicalDataSourceView.Select
