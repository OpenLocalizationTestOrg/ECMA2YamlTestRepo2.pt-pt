### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter
  id: SetterTriggerConditionValueConverter
  children:
  - System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor
  - System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: SetterTriggerConditionValueConverter
  nameWithType: SetterTriggerConditionValueConverter
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter
  type: Class
  summary: "Provides type conversion analogous behavior for <see cref=&quot;T:System.Windows.Setter&quot;></see>, <see cref=&quot;T:System.Windows.Trigger&quot;></see> and <see cref=&quot;T:System.Windows.Condition&quot;></see> types that deal with <see cref=&quot;T:System.Windows.DependencyProperty&quot;></see> values. This converter only supports <xref uid=&quot;langword_csharp_ConvertFrom&quot; name=&quot;ConvertFrom&quot; href=&quot;&quot;></xref>."
  remarks: "SetterTriggerConditionValueConverter is not intended for use by user code, it supports WPF feature areas such as processing <xref:System.Windows.Setter>, <xref:System.Windows.Trigger> and <xref:System.Windows.Condition> in templates."
  syntax:
    content: 'public sealed class SetterTriggerConditionValueConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  langs:
  - csharp
  name: SetterTriggerConditionValueConverter()
  nameWithType: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.Markup.SetterTriggerConditionValueConverter&quot;></see> class."
  syntax:
    content: public SetterTriggerConditionValueConverter ();
    parameters: []
  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Returns a value that indicates whether the converter can convert from a source object to a side-effect-produced <see cref=&quot;T:System.Windows.Setter&quot;></see>, <see cref=&quot;T:System.Windows.Trigger&quot;></see> or <see cref=&quot;T:System.Windows.Condition&quot;></see> ."
  remarks: "This implementation only returns `true` for `sourceType` of <xref:System.String> or a byte array."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: sourceType
      type: System.Type
      description: "The type to convert from."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Returns a value that indicates whether the converter can convert to the specified destination type. Always returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: destinationType
      type: System.Type
      description: "The type to convert to."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Converts the converted source value if an underlying type converter can be obtained from context. Otherwise returns an unconverted source."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref:System.Globalization.CultureInfo> to use as the current culture."
    - id: source
      type: System.Object
      description: "The object to convert."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    context or source is ."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "No  service available."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Converts the specified object to the specified type. Always throws an exception."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref:System.Globalization.CultureInfo> to use as the current culture."
    - id: value
      type: System.Object
      description: "The object to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert to."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Thrown in all cases."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: SetterTriggerConditionValueConverter()
  nameWithType: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter()
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.#ctor*
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: SetterTriggerConditionValueConverter
  nameWithType: SetterTriggerConditionValueConverter.SetterTriggerConditionValueConverter
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertFrom*
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: SetterTriggerConditionValueConverter.CanConvertFrom
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.CanConvertTo*
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: SetterTriggerConditionValueConverter.CanConvertTo
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertFrom*
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: SetterTriggerConditionValueConverter.ConvertFrom
- uid: System.Windows.Markup.SetterTriggerConditionValueConverter.ConvertTo*
  parent: System.Windows.Markup.SetterTriggerConditionValueConverter
  isExternal: false
  name: ConvertTo
  nameWithType: SetterTriggerConditionValueConverter.ConvertTo
