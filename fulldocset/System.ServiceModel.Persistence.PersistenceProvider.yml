### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  id: PersistenceProvider
  children:
  - System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  - System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)
  langs:
  - csharp
  name: PersistenceProvider
  nameWithType: PersistenceProvider
  fullName: System.ServiceModel.Persistence.PersistenceProvider
  type: Class
  summary: "The abstract base class from which all durable service persistence providers are derived."
  remarks: "Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely. To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.      > [!NOTE] >  When creating persistence provider implementations, it is important to maintain the thread&quot;s original identity in the new provider&quot;s methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>. Otherwise, security loopholes could be created, because operations would then run under the wrong identity."
  example:
  - For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: PersistenceProvider(Guid)
  nameWithType: PersistenceProvider.PersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.PersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, initializes a new instance of the <xref href=&quot;System.ServiceModel.Persistence.PersistenceProvider&quot;></xref> class."
  remarks: ''
  example:
  - "The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#0](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#0)]"
  syntax:
    content: protected PersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "The unique identifier of the service state data being saved."
  overload: System.ServiceModel.Persistence.PersistenceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the beginning of the Create phase. The Create phase occurs when service instance records are first created in the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the BeginCreate method.  \n  \n [!code-cs[PersistenceProvider#14](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#14)]"
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "The actual instance state."
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the BeginCreate asynchronous method call."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the beginning of the Delete phase. The Delete phase occurs when service state data is permanently deleted from the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the `BeginDelete` method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#6](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#6)]"
  syntax:
    content: public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "The actual instance state."
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the BeginDelete asynchronous method call."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the beginning of the Load phase. The Load phase occurs when state data is loaded into the persistence provider from the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the `BeginLoad` method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#7](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#7)]"
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the BeginLoad asynchronous method call."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the beginning of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the BeginLoadIfChanged method.  \n  \n [!code-cs[PersistenceProvider#11](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#11)]"
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: instanceToken
      type: System.Object
      description: "The token returned by a previous <xref:System.ServiceModel.Persistence.PersistenceProvider.Create*> or <xref:System.ServiceModel.Persistence.PersistenceProvider.Update*> that represents the current state held by the caller."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the BeginLoadIfChanged asynchronous method call."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the beginning of the Update phase. The Update phase occurs when service state data is updated in the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the BeginUpdate method.  \n  \n [!code-cs[PersistenceProvider#17](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#17)]"
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "The actual instance state."
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: callback
      type: System.AsyncCallback
      description: "The method to be called when the operation is completed."
    - id: state
      type: System.Object
      description: "A user-provided object that distinguishes this particular asynchronous operation from other operations."
    return:
      type: System.IAsyncResult
      description: "The state of the BeginUpdate asynchronous method call."
  overload: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan)
  nameWithType: PersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Create(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, creates a service state record in the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the Create method.  \n  \n [!code-cs[PersistenceProvider#15](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#15)]"
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "The actual instance state."
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    return:
      type: System.Object
      description: "The instance token corresponding to the state just saved. This can be passed to <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*> to determine whether the state in the persistence store differs from the state when Create was called."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  id: Delete(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Delete(Object,TimeSpan)
  nameWithType: PersistenceProvider.Delete(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Delete(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, permanently deletes service state information from the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the Delete method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#9](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#9)]"
  syntax:
    content: public abstract void Delete (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "The actual instance state."
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  id: EndCreate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndCreate(IAsyncResult)
  nameWithType: PersistenceProvider.EndCreate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the end of the Create phase. The Create phase occurs when service state records are first created in the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndCreate method.  \n  \n [!code-cs[PersistenceProvider#16](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#16)]"
  syntax:
    content: public abstract object EndCreate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
    return:
      type: System.Object
      description: "The instance token corresponding to the state just saved. This can be passed to <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*> to determine whether the state in the persistence store differs from the state when Create was called."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  id: EndDelete(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndDelete(IAsyncResult)
  nameWithType: PersistenceProvider.EndDelete(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the end of the Delete phase. The Delete phase occurs when state data is permanently deleted from the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndDelete method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. For more information, see the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#5](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#5)]"
  syntax:
    content: public abstract void EndDelete (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndDelete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  id: EndLoad(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndLoad(IAsyncResult)
  nameWithType: PersistenceProvider.EndLoad(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the end of the Load phase. The Load phase occurs when state data is loaded into the persistence provider from the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to use the `EndLoad` method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#1](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#1)]"
  syntax:
    content: public abstract object EndLoad (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
    return:
      type: System.Object
      description: "The service state information."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  id: EndLoadIfChanged(System.IAsyncResult,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndLoadIfChanged(IAsyncResult,Object)
  nameWithType: PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, represents the end of the LoadIfChanged phase. The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndLoadIfChanged method.  \n  \n [!code-cs[PersistenceProvider#12](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#12)]"
  syntax:
    content: public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
    - id: instance
      type: System.Object
      description: "The actual instance state."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the instance <xref uid=&quot;langword_csharp_out&quot; name=&quot;out&quot; href=&quot;&quot;></xref> parameter has been set with the latest copy from the persistence store; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the locally cached state is already up-to-date."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  id: EndUpdate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: EndUpdate(IAsyncResult)
  nameWithType: PersistenceProvider.EndUpdate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the end of the Update phase. The Update phase occurs when service state records are updated in the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the EndUpdate method.  \n  \n [!code-cs[PersistenceProvider#19](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#19)]"
  syntax:
    content: public abstract object EndUpdate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A reference to the result of the operation."
    return:
      type: System.Object
      description: "The instance token corresponding to the state just saved. This can be passed to <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*> to determine whether the state in the persistence store differs from the state when Create was called."
  overload: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id
  id: Id
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Id
  nameWithType: PersistenceProvider.Id
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Id
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Represents the <xref:System.Guid> associated with this instance."
  remarks: ''
  example:
  - "The following code demonstrates how to use the Id property.  \n  \n [!code-cs[PersistenceProvider#10](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#10)]"
  syntax:
    content: public Guid Id { get; }
    return:
      type: System.Guid
      description: "The GUID associated with this instance."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Id*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: PersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, loads service state information from the persistence store."
  remarks: "Changes made to the security token in the Load method, if not reverted, stay in effect for the remainder of that message&quot;s processing. This means that the service operation&quot;s user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context."
  example:
  - "The following code demonstrates how to implement the Load method. This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]the DurableServiceFactory SDK sample.  \n  \n [!code-cs[PersistenceProvider#3](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#3)]"
  syntax:
    content: public abstract object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    return:
      type: System.Object
      description: "The loaded instance state."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, loads service state information from the persistence store if that data has been changed."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the LoadIfChanged method.  \n  \n [!code-cs[PersistenceProvider#13](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#13)]"
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    - id: instanceToken
      type: System.Object
      description: "The token returned by a previous <xref:System.ServiceModel.Persistence.PersistenceProvider.Create*> or <xref:System.ServiceModel.Persistence.PersistenceProvider.Update*>, which represents the current state held by the caller."
    - id: instance
      type: System.Object
      description: "The actual instance state."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>instance</code><xref uid=&quot;langword_csharp_out&quot; name=&quot;out&quot; href=&quot;&quot;></xref> parameter has been set with the latest copy from the persistence store; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the locally cached state is already up to date."
  overload: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan)
  nameWithType: PersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Update(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "When implemented in a derived class, updates service state records in the persistence store."
  remarks: ''
  example:
  - "The following code demonstrates how to implement the Update method.  \n  \n [!code-cs[PersistenceProvider#18](~/add/codesnippet/csharp/persistenceprovider/filepersistenceprovider.cs#18)]"
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "The actual instance state."
    - id: timeout
      type: System.TimeSpan
      description: "The time period after which the persistence provider aborts this attempt."
    return:
      type: System.Object
      description: "The instance token corresponding to the state just saved. This can be passed to <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*> to determine whether the state in the persistence store differs from the state when Create was called."
  overload: System.ServiceModel.Persistence.PersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: PersistenceProvider(Guid)
  nameWithType: PersistenceProvider.PersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.PersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan)
  nameWithType: PersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Create(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Delete(Object,TimeSpan)
  nameWithType: PersistenceProvider.Delete(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Delete(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndCreate(IAsyncResult)
  nameWithType: PersistenceProvider.EndCreate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndCreate(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndDelete(IAsyncResult)
  nameWithType: PersistenceProvider.EndDelete(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndDelete(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoad(IAsyncResult)
  nameWithType: PersistenceProvider.EndLoad(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoad(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoadIfChanged(IAsyncResult,Object)
  nameWithType: PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(IAsyncResult,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndUpdate(IAsyncResult)
  nameWithType: PersistenceProvider.EndUpdate(IAsyncResult)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(IAsyncResult)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Id
  nameWithType: PersistenceProvider.Id
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Id
- uid: System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: PersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
- uid: System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan)
  nameWithType: PersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.PersistenceProvider.Update(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.PersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: PersistenceProvider
  nameWithType: PersistenceProvider.PersistenceProvider
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: PersistenceProvider.BeginCreate
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginDelete*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginDelete
  nameWithType: PersistenceProvider.BeginDelete
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: PersistenceProvider.BeginLoad
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: PersistenceProvider.BeginLoadIfChanged
- uid: System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: PersistenceProvider.BeginUpdate
- uid: System.ServiceModel.Persistence.PersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Create
  nameWithType: PersistenceProvider.Create
- uid: System.ServiceModel.Persistence.PersistenceProvider.Delete*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Delete
  nameWithType: PersistenceProvider.Delete
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndCreate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndCreate
  nameWithType: PersistenceProvider.EndCreate
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndDelete*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndDelete
  nameWithType: PersistenceProvider.EndDelete
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoad*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoad
  nameWithType: PersistenceProvider.EndLoad
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndLoadIfChanged
  nameWithType: PersistenceProvider.EndLoadIfChanged
- uid: System.ServiceModel.Persistence.PersistenceProvider.EndUpdate*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: EndUpdate
  nameWithType: PersistenceProvider.EndUpdate
- uid: System.ServiceModel.Persistence.PersistenceProvider.Id*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Id
  nameWithType: PersistenceProvider.Id
- uid: System.ServiceModel.Persistence.PersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Load
  nameWithType: PersistenceProvider.Load
- uid: System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: PersistenceProvider.LoadIfChanged
- uid: System.ServiceModel.Persistence.PersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: Update
  nameWithType: PersistenceProvider.Update
