### YamlMime:ManagedReference
items:
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute
  id: ComponentGuaranteesAttribute
  children:
  - System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  - System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  langs:
  - csharp
  name: ComponentGuaranteesAttribute
  nameWithType: ComponentGuaranteesAttribute
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute
  type: Class
  summary: "Define a garantia de compatibilidade de um componente, tipo ou membro de tipo que pode abranger várias versões."
  remarks: "O ComponentGuaranteesAttribute é utilizado pelos programadores de componentes e bibliotecas de classes para indicar o nível de compatibilidade que os consumidores da respetiva bibliotecas podem esperar em múltiplas versões. Indica o nível de garantia que uma versão futura da biblioteca ou o componente não irão interromper a um cliente existente. Os clientes, em seguida, podem utilizar o ComponentGuaranteesAttribute como um auxiliar conceber as suas próprias interfaces para garantir a estabilidade entre versões.      > [!NOTE] > O language runtime (CLR) não utiliza este atributo de qualquer forma. O valor reside na formally documentar a intenção do autor do componente. Ferramentas de tempo de compilação também podem utilizar estas declarações para detetar erros de tempo de compilação que caso contrário, seriam interromper a garantia declarada.      ## Níveis de compatibilidade de ComponentGuaranteesAttribute o suporta os seguintes níveis de compatibilidade, que são representados por membros do <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>enumeração:-não compatibilidade da versão para versão (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> O cliente pode esperar que versões futuras irão interromper o cliente existente. Para obter mais informações, consulte o [não compatibilidade](#None) posterior deste tópico.      Compatibilidade de versão para versão lado-lado a lado (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> O componente foi testado para funcionar quando mais do que uma versão da assemblagem carregada no mesmo domínio de aplicação. Em geral, versões futuras podem interromper a compatibilidade. No entanto, quando são efetuadas alterações, a versão anterior não é modificada mas existe juntamente com a nova versão. Execução lado a lado é a forma esperada para que os clientes existentes quando forem efetuadas alterações de trabalho. Para obter mais informações, consulte o [lado a lado compatibilidade](#SideBySide) posterior deste tópico.      -Estável compatibilidade da versão para versão (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Versões futuras não devem interromper o cliente e não deve ser necessária, execução lado a lado. No entanto, se o cliente está quebrado inadvertidamente, poderá ser possível utilizar execução lado a lado para corrigir o problema. Para obter mais informações, consulte o [compatibilidade estável](#Standard) secção.      -Compatibilidade da versão para versão do exchange (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Extraordinary cuidado para garantir que as versões futuras não irão interromper o cliente. O cliente deve utilizar apenas estes tipos na assinatura das interfaces que são utilizadas para comunicação com outras assemblagens que são implementadas independentemente uma da outra. É esperada apenas uma versão dos seguintes tipos de ser um domínio de aplicação específica, o que significa que, se um cliente interrompe, execução lado a lado não é possível corrigir o problema de compatibilidade. Para obter mais informações, consulte o [compatibilidade do tipo de Exchange](#Exchange) secção.       As secções seguintes abordam cada nível de garantia mais detalhadamente.      <a name=&quot;None&quot;></a># # # Não compatibilidade marcar um componente como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>indica que o fornecedor torna sem garantias sobre a compatibilidade.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Os clientes devem evitar colocar quaisquer dependências nas interfaces expostas. Este nível de compatibilidade é útil para tipos que são experimental ou que são expostos publicamente mas destinam-se apenas para os componentes que são sempre atualizados ao mesmo tempo. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>explicitamente indica que este componente não deve ser utilizado por componentes externos.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;SideBySide&quot;></a># # #--Lado compatibilidade marcar um componente como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>indica que o componente foi testado para funcionar quando mais de uma versão da assemblagem é carregada para o mesmo domínio de aplicação.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Eliminar as alterações são permitidas, desde que são introduzidas para a assemblagem que tiver o maior número de versão. Os componentes que estão vinculados a uma versão antiga da assemblagem são esperados para continuar para o enlace para a versão antiga e outros componentes podem vincular para a nova versão. Também é possível atualizar um componente que está declarado como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>destructively modificando a versão antiga.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;Standard&quot;></a># # # Estável compatibilidade marcar um tipo como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>indica que o tipo deve permanecer estável entre versões.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> No entanto, poderá também ser possível para versões de lado a lado de um tipo estável existir no mesmo domínio de aplicação.       Tipos de estáveis mantêm uma barra de compatibilidade de binário elevada. Por este motivo, os fornecedores devem evitar efetuar alterações aos tipos estáveis. Os seguintes tipos de alterações são aceitáveis: - campos de instância privada para adicionar ou remover os campos de um tipo, desde que esta não interromper o formato de serialização.      -Alterar um tipo não serializáveis para um tipo serializável. (No entanto, um tipo serializável não pode ser alterado para um tipo não serializáveis.)      -Nova, argumentoutofrangeexception derivado mais exceções a um método.      -Melhorar o desempenho de um método.      -Alterar o intervalo de valores de retorno, desde que a alteração não afeta negativamente a maioria dos clientes.      -Corrigir os erros graves, se a justificação de negócio é elevada e o número de clientes afetados negativamente é baixo.       Porque novas versões de componentes estáveis não são esperadas para interromper a clientes existentes, geralmente, apenas uma versão de um componente estável é necessário um domínio de aplicação. No entanto, isto não é um requisito porque os tipos estáveis não são utilizados como tipos conhecidos exchange que todos os componentes aceite. Por conseguinte, se uma nova versão de um componente estável inadvertidamente quebrar alguns componentes e outros componentes têm a nova versão, poderá ser possível corrigir o problema ao carregar o componente antigo e novo.       <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>Fornece uma garantia de compatibilidade de versão mais forte que <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions> É uma predefinição para a versão de vários componentes comuns.       <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>pode ser combinado com <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>, que indica que o componente não irão interromper a compatibilidade, mas é testado para funcionar quando mais do que uma versão carregada no domínio de uma aplicação específica.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions></xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       Depois de um tipo ou método está marcado como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>anteriormente, pode ser atualizado para <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> No entanto, este não pode ser alterada uma versão anterior para <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      <a name=&quot;Exchange&quot;></a># # # Exchange marcação de compatibilidade de tipo de um tipo como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName>fornece uma garantia de compatibilidade de versão mais forte que <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>e deve ser aplicado mais estável de todos os tipos.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions?displayProperty=fullName> Estes tipos destinam-se a ser utilizada para intercâmbio entre componentes criados de forma independente em todos os limites de componente atempadamente ambos (qualquer versão do CLR) ou de qualquer versão de um componente ou a aplicação e o espaço (processos cruzados entre-CLR no processo de um, entre domínios de aplicação no um CLR). Se for efetuada uma alteração inovadora para um tipo de exchange, não é possível corrigir o problema ao carregar várias versões do tipo.       Tipos de Exchange devem ser alterados apenas quando um problema é muito grave (por exemplo, um problema grave segurança) ou a probabilidade de breakage é muito baixa (ou seja, se o comportamento já foi quebrado de forma aleatória código foi não pode efetuou uma dependência no). Pode efetuar os seguintes tipos de alterações para um tipo de exchange:-Adicionar herança de novas definições de interface.      -Adicione novos métodos privados que implementam os métodos de definições de interface herdados recentemente.      -Adicione novos campos estáticos.      -Adicione novos métodos estáticos.      -Adicione novos métodos de instância não virtual.       A seguinte é considerada interrompendo as alterações e não é permitida para tipos primitivos:-alterar formatos de serialização. Serialização de tolerância a versão não é necessária.      -Adicionar ou remover os campos de instância privada. Isto riscos alterar o formato de serialização do tipo e eliminar o código de cliente que utiliza reflexão.      -Alterar serializability de um tipo. Um tipo não serializáveis não poderão ser estabelecido serializável e vice-versa.      -Argumentoutofrangeexception diferentes exceções a um método.      -Alterar o intervalo de valores de retorno do método, a menos que a definição de membro gera esta possibilidade e claramente indica a forma como os clientes devem processar valores desconhecidos.      -Corrigir a maioria dos erros. Os consumidores do tipo utilizará o comportamento existente.       Depois de um componente, tipo ou membro está marcado com a <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>garantir a, não pode ser alterada para um <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>ou <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       Normalmente, os tipos de exchange são os tipos básicos (tais como <xref:System.Int32>e <xref:System.String>no .NET Framework) e interfaces (tais como <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, e <xref:System.IComparable%601>) que são frequentemente utilizadas em interfaces públicas.</xref:System.IComparable%601> </xref:System.Collections.Generic.IEnumerable%601> </xref:System.Collections.Generic.IList%601> </xref:System.String> </xref:System.Int32>       Tipos de Exchange publicamente podem expõe apenas outros tipos de que também são marcados com <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>compatibilidade.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> Além disso, os tipos de exchange não é possível dependem o comportamento das APIs do Windows que são suscetíveis a alterar.      ## Garantias de componente: Um resumo da tabela seguinte indica como as características e a utilização de um componente afetam a garantia de compatibilidade.      | Características de componente | Exchange | Estável | Lado a lado | Nenhum |   |-------------------------------|--------------|------------|--------------------|----------|   | Podem ser utilizadas em interfaces entre os componentes que a versão independentemente. | Y | N | N | N |   | Pode ser utilizada (privada) por uma assemblagem que versões independentemente. | Y | Y | Y | N |   | Pode ter várias versões de um domínio de aplicação único. | N | Y | Y | Y |   | Pode efetuar alterações | N | N | Y | Y |   | Testado tornar determinados várias versões da assemblagem pode ser carregado em conjunto. | N | N | Y | N |   | Pode efetuar alterações no local. | N | N | N | Y |   | Pode fazer muito segura sem alterações no local de manutenção quebra. | Y | Y | Y | Y |      # # Aplicar o atributo que pode aplicar o ComponentGuaranteesAttribute para uma assemblagem e um tipo ou membro de tipo. A aplicação é hierárquica. Isto é, por predefinição, a garantia definidos pelo <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>propriedade do atributo ao nível da assemblagem define a garantia de todos os tipos na assemblagem e todos os membros nesses tipos.</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Da mesma forma, se for aplicada a garantia para o tipo, por predefinição também se aplica a cada membro do tipo.       Este garantia herdada pode ser substituída ao aplicar o ComponentGuaranteesAttribute para tipos individuais e o tipo de membros. No entanto, garante que a predefinição de substituição pode apenas enfraquecem da garantia; Não é possível reforçá-lo. Por exemplo, se uma assemblagem está marcada com o <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>garantir, os tipos e membros não têm nenhuma garantia de compatibilidade e quaisquer outra garantia de que é aplicada a membros na assemblagem ou tipos é ignorada.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>      ## Testar a garantia de <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>propriedade devolve um membro do <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>enumeração, que está marcada com o <xref:System.FlagsAttribute>atributo.</xref:System.FlagsAttribute> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Isto significa que deverá testar para o sinalizador que estão interessadas por máscara away sinalizadores potencialmente desconhecidos. Por exemplo, o exemplo seguinte testa se um tipo está marcado como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions>       [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/add/codesnippet/csharp/t-system.runtime.version_1.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/add/codesnippet/visualbasic/t-system.runtime.version_1.vb) ] o exemplo seguinte testa se um tipo está marcado como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>ou <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>         [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/add/codesnippet/csharp/t-system.runtime.version_2.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/add/codesnippet/visualbasic/t-system.runtime.version_2.vb) ] o seguinte exemplo testes wither um tipo está marcado como <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>(ou seja, nenhum <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>nem <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>).</xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions> </xref:System.Runtime.Versioning.ComponentGuaranteesOptions>         [!code-cs[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/add/codesnippet/csharp/t-system.runtime.version_3.cs)][!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3  ](~/add/codesnippet/visualbasic/t-system.runtime.version_3.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)]

      public sealed class ComponentGuaranteesAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  id: '#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)'
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  langs:
  - csharp
  name: ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Versioning
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Versioning.ComponentGuaranteesAttribute&quot;> </xref> classe com um valor que indica uma biblioteca, tipo ou do membro garantida nível de compatibilidade através de múltiplas versões."
  remarks: "Quando o <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>é instanciar a classe, o valor da `guarantees` parâmetro está atribuído ao <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>propriedade.</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> </xref:System.Runtime.Versioning.ComponentGuaranteesAttribute>"
  syntax:
    content: public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);
    parameters:
    - id: guarantees
      type: System.Runtime.Versioning.ComponentGuaranteesOptions
      description: "Um dos valores da enumeração que especifica o nível de compatibilidade que fique em múltiplas versões."
  overload: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  id: Guarantees
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  langs:
  - csharp
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Versioning
  summary: "Obtém um valor que indica o nível de compatibilidade de uma biblioteca, tipo ou membro de tipo que abrange várias versões garantido."
  remarks: "O valor da propriedade garantias corresponde à `guarantees` parâmetro o <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>construtor.</xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>"
  syntax:
    content: public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }
    return:
      type: System.Runtime.Versioning.ComponentGuaranteesOptions
      description: "Um dos valores da enumeração que especifica o nível de compatibilidade que fique em múltiplas versões."
  overload: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.ComponentGuaranteesAttribute(ComponentGuaranteesOptions)
- uid: System.Runtime.Versioning.ComponentGuaranteesOptions
  parent: System.Runtime.Versioning
  isExternal: false
  name: ComponentGuaranteesOptions
  nameWithType: ComponentGuaranteesOptions
  fullName: System.Runtime.Versioning.ComponentGuaranteesOptions
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
  fullName: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor*
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: ComponentGuaranteesAttribute
  nameWithType: ComponentGuaranteesAttribute.ComponentGuaranteesAttribute
- uid: System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees*
  parent: System.Runtime.Versioning.ComponentGuaranteesAttribute
  isExternal: false
  name: Guarantees
  nameWithType: ComponentGuaranteesAttribute.Guarantees
