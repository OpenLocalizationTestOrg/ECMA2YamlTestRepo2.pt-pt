### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbExpressionKind
  id: DbExpressionKind
  children:
  - System.Data.Common.CommandTrees.DbExpressionKind.All
  - System.Data.Common.CommandTrees.DbExpressionKind.And
  - System.Data.Common.CommandTrees.DbExpressionKind.Any
  - System.Data.Common.CommandTrees.DbExpressionKind.Case
  - System.Data.Common.CommandTrees.DbExpressionKind.Cast
  - System.Data.Common.CommandTrees.DbExpressionKind.Constant
  - System.Data.Common.CommandTrees.DbExpressionKind.CrossApply
  - System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin
  - System.Data.Common.CommandTrees.DbExpressionKind.Deref
  - System.Data.Common.CommandTrees.DbExpressionKind.Distinct
  - System.Data.Common.CommandTrees.DbExpressionKind.Divide
  - System.Data.Common.CommandTrees.DbExpressionKind.Element
  - System.Data.Common.CommandTrees.DbExpressionKind.EntityRef
  - System.Data.Common.CommandTrees.DbExpressionKind.Equals
  - System.Data.Common.CommandTrees.DbExpressionKind.Except
  - System.Data.Common.CommandTrees.DbExpressionKind.Filter
  - System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin
  - System.Data.Common.CommandTrees.DbExpressionKind.Function
  - System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan
  - System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals
  - System.Data.Common.CommandTrees.DbExpressionKind.GroupBy
  - System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin
  - System.Data.Common.CommandTrees.DbExpressionKind.Intersect
  - System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty
  - System.Data.Common.CommandTrees.DbExpressionKind.IsNull
  - System.Data.Common.CommandTrees.DbExpressionKind.IsOf
  - System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly
  - System.Data.Common.CommandTrees.DbExpressionKind.Lambda
  - System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin
  - System.Data.Common.CommandTrees.DbExpressionKind.LessThan
  - System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals
  - System.Data.Common.CommandTrees.DbExpressionKind.Like
  - System.Data.Common.CommandTrees.DbExpressionKind.Limit
  - System.Data.Common.CommandTrees.DbExpressionKind.Minus
  - System.Data.Common.CommandTrees.DbExpressionKind.Modulo
  - System.Data.Common.CommandTrees.DbExpressionKind.Multiply
  - System.Data.Common.CommandTrees.DbExpressionKind.NewInstance
  - System.Data.Common.CommandTrees.DbExpressionKind.Not
  - System.Data.Common.CommandTrees.DbExpressionKind.NotEquals
  - System.Data.Common.CommandTrees.DbExpressionKind.Null
  - System.Data.Common.CommandTrees.DbExpressionKind.OfType
  - System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly
  - System.Data.Common.CommandTrees.DbExpressionKind.Or
  - System.Data.Common.CommandTrees.DbExpressionKind.OuterApply
  - System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference
  - System.Data.Common.CommandTrees.DbExpressionKind.Plus
  - System.Data.Common.CommandTrees.DbExpressionKind.Project
  - System.Data.Common.CommandTrees.DbExpressionKind.Property
  - System.Data.Common.CommandTrees.DbExpressionKind.Ref
  - System.Data.Common.CommandTrees.DbExpressionKind.RefKey
  - System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation
  - System.Data.Common.CommandTrees.DbExpressionKind.Scan
  - System.Data.Common.CommandTrees.DbExpressionKind.Skip
  - System.Data.Common.CommandTrees.DbExpressionKind.Sort
  - System.Data.Common.CommandTrees.DbExpressionKind.Treat
  - System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus
  - System.Data.Common.CommandTrees.DbExpressionKind.UnionAll
  - System.Data.Common.CommandTrees.DbExpressionKind.VariableReference
  langs:
  - csharp
  name: DbExpressionKind
  nameWithType: DbExpressionKind
  fullName: System.Data.Common.CommandTrees.DbExpressionKind
  type: Enum
  summary: "Contains values that each expression class uses to denote the operation it represents. The <xref:System.Data.Common.CommandTrees.DbExpression.ExpressionKind*> property of an <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;></xref> can be retrieved to determine which operation that expression represents."
  remarks: "Use the DbExpressionKind enumeration to specify the various kinds of expressions. The Members table lists the functions that are members of this class and the type of expressions they specify."
  syntax:
    content: public enum DbExpressionKind
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.All
  id: All
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: All
  nameWithType: DbExpressionKind.All
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.All
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>-for-all expressions."
  syntax:
    content: All
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.And
  id: And
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: And
  nameWithType: DbExpressionKind.And
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.And
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Logical AND expressions."
  syntax:
    content: And
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Any
  id: Any
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Any
  nameWithType: DbExpressionKind.Any
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Any
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>-for-any expressions."
  syntax:
    content: Any
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Case
  id: Case
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Case
  nameWithType: DbExpressionKind.Case
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Case
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Conditional case statement expressions."
  syntax:
    content: Case
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Cast
  id: Cast
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Cast
  nameWithType: DbExpressionKind.Cast
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Cast
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Polymorphic type cast expressions."
  syntax:
    content: Cast
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Constant
  id: Constant
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Constant
  nameWithType: DbExpressionKind.Constant
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Constant
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Constant value expressions."
  syntax:
    content: Constant
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply
  id: CrossApply
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: CrossApply
  nameWithType: DbExpressionKind.CrossApply
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Cross apply expressions."
  syntax:
    content: CrossApply
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin
  id: CrossJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: CrossJoin
  nameWithType: DbExpressionKind.CrossJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Cross join expressions."
  syntax:
    content: CrossJoin
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Deref
  id: Deref
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Deref
  nameWithType: DbExpressionKind.Deref
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Deref
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Dereference expressions."
  syntax:
    content: Deref
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Distinct
  id: Distinct
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Distinct
  nameWithType: DbExpressionKind.Distinct
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Distinct
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Duplicate removal expressions."
  syntax:
    content: Distinct
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Divide
  id: Divide
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Divide
  nameWithType: DbExpressionKind.Divide
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Divide
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Division expressions."
  syntax:
    content: Divide
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Element
  id: Element
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Element
  nameWithType: DbExpressionKind.Element
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Element
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Set-to-singleton conversion expressions."
  syntax:
    content: Element
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef
  id: EntityRef
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: EntityRef
  nameWithType: DbExpressionKind.EntityRef
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Entity reference value retrieval expressions."
  syntax:
    content: EntityRef
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Equals
  id: Equals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Equals
  nameWithType: DbExpressionKind.Equals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Equals
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Equality expressions."
  syntax:
    content: Equals
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Except
  id: Except
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Except
  nameWithType: DbExpressionKind.Except
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Except
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Set subtraction expressions."
  syntax:
    content: Except
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Filter
  id: Filter
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Filter
  nameWithType: DbExpressionKind.Filter
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Filter
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Restriction expressions."
  syntax:
    content: Filter
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin
  id: FullOuterJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: FullOuterJoin
  nameWithType: DbExpressionKind.FullOuterJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Full outer join expressions."
  syntax:
    content: FullOuterJoin
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Function
  id: Function
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Function
  nameWithType: DbExpressionKind.Function
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Function
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Standalone function expressions."
  syntax:
    content: Function
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan
  id: GreaterThan
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: GreaterThan
  nameWithType: DbExpressionKind.GreaterThan
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Greater than expressions."
  syntax:
    content: GreaterThan
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals
  id: GreaterThanOrEquals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: GreaterThanOrEquals
  nameWithType: DbExpressionKind.GreaterThanOrEquals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Greater than or equal expressions."
  syntax:
    content: GreaterThanOrEquals
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy
  id: GroupBy
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: GroupBy
  nameWithType: DbExpressionKind.GroupBy
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Grouping expressions."
  syntax:
    content: GroupBy
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin
  id: InnerJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: InnerJoin
  nameWithType: DbExpressionKind.InnerJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Inner join expressions."
  syntax:
    content: InnerJoin
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Intersect
  id: Intersect
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Intersect
  nameWithType: DbExpressionKind.Intersect
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Intersect
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Set intersection expressions."
  syntax:
    content: Intersect
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty
  id: IsEmpty
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: IsEmpty
  nameWithType: DbExpressionKind.IsEmpty
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Empty set determination expressions."
  syntax:
    content: IsEmpty
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsNull
  id: IsNull
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: IsNull
  nameWithType: DbExpressionKind.IsNull
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsNull
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Null determination expressions."
  syntax:
    content: IsNull
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOf
  id: IsOf
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: IsOf
  nameWithType: DbExpressionKind.IsOf
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOf
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Type comparison (specified Type or Subtype) expressions."
  syntax:
    content: IsOf
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly
  id: IsOfOnly
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: IsOfOnly
  nameWithType: DbExpressionKind.IsOfOnly
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Type comparison (specified Type only) expressions."
  syntax:
    content: IsOfOnly
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Lambda
  id: Lambda
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Lambda
  nameWithType: DbExpressionKind.Lambda
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Lambda
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Lambda function expressions."
  syntax:
    content: Lambda
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin
  id: LeftOuterJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: LeftOuterJoin
  nameWithType: DbExpressionKind.LeftOuterJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Left outer join expressions."
  syntax:
    content: LeftOuterJoin
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThan
  id: LessThan
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: LessThan
  nameWithType: DbExpressionKind.LessThan
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThan
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Less than expressions."
  syntax:
    content: LessThan
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals
  id: LessThanOrEquals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: LessThanOrEquals
  nameWithType: DbExpressionKind.LessThanOrEquals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Less than or equal expressions."
  syntax:
    content: LessThanOrEquals
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Like
  id: Like
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Like
  nameWithType: DbExpressionKind.Like
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Like
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "String comparison expressions."
  syntax:
    content: Like
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Limit
  id: Limit
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Limit
  nameWithType: DbExpressionKind.Limit
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Limit
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Result count restriction (TOP n)."
  syntax:
    content: Limit
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Minus
  id: Minus
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Minus
  nameWithType: DbExpressionKind.Minus
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Minus
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Subtraction expressions."
  syntax:
    content: Minus
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Modulo
  id: Modulo
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Modulo
  nameWithType: DbExpressionKind.Modulo
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Modulo
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Modulo expressions."
  syntax:
    content: Modulo
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Multiply
  id: Multiply
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Multiply
  nameWithType: DbExpressionKind.Multiply
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Multiply
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Multiplication expressions."
  syntax:
    content: Multiply
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance
  id: NewInstance
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: NewInstance
  nameWithType: DbExpressionKind.NewInstance
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Instance, row, and set construction expressions."
  syntax:
    content: NewInstance
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Not
  id: Not
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Not
  nameWithType: DbExpressionKind.Not
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Not
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Logical NOT expressions."
  syntax:
    content: Not
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals
  id: NotEquals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: NotEquals
  nameWithType: DbExpressionKind.NotEquals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Inequality expressions."
  syntax:
    content: NotEquals
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Null
  id: "Null"
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: "Null"
  nameWithType: DbExpressionKind.Null
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Null
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Null expressions."
  syntax:
    content: "Null"
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfType
  id: OfType
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: OfType
  nameWithType: DbExpressionKind.OfType
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfType
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Set members by type (or subtype) expressions."
  syntax:
    content: OfType
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly
  id: OfTypeOnly
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: OfTypeOnly
  nameWithType: DbExpressionKind.OfTypeOnly
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Set members by exact type expressions."
  syntax:
    content: OfTypeOnly
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Or
  id: Or
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Or
  nameWithType: DbExpressionKind.Or
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Or
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Logical OR expressions."
  syntax:
    content: Or
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply
  id: OuterApply
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: OuterApply
  nameWithType: DbExpressionKind.OuterApply
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Outer apply expressions"
  syntax:
    content: OuterApply
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference
  id: ParameterReference
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: ParameterReference
  nameWithType: DbExpressionKind.ParameterReference
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Reference to a parameter expressions."
  syntax:
    content: ParameterReference
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Plus
  id: Plus
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Plus
  nameWithType: DbExpressionKind.Plus
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Plus
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Addition expressions."
  syntax:
    content: Plus
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Project
  id: Project
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Project
  nameWithType: DbExpressionKind.Project
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Project
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Projection expressions."
  syntax:
    content: Project
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Property
  id: Property
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Property
  nameWithType: DbExpressionKind.Property
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Property
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Static or instance property retrieval expressions."
  syntax:
    content: Property
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Ref
  id: Ref
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Ref
  nameWithType: DbExpressionKind.Ref
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Ref
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Reference expressions."
  syntax:
    content: Ref
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.RefKey
  id: RefKey
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: RefKey
  nameWithType: DbExpressionKind.RefKey
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RefKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Ref key value retrieval expressions."
  syntax:
    content: RefKey
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation
  id: RelationshipNavigation
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: RelationshipNavigation
  nameWithType: DbExpressionKind.RelationshipNavigation
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Relationship (composition or association) navigation expressions."
  syntax:
    content: RelationshipNavigation
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Scan
  id: Scan
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Scan
  nameWithType: DbExpressionKind.Scan
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Scan
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Entity or relationship set scan expressions."
  syntax:
    content: Scan
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Skip
  id: Skip
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Skip
  nameWithType: DbExpressionKind.Skip
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Skip
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Skip elements of an ordered collection."
  syntax:
    content: Skip
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Sort
  id: Sort
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Sort
  nameWithType: DbExpressionKind.Sort
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Sort
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Sorting expressions."
  syntax:
    content: Sort
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Treat
  id: Treat
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: Treat
  nameWithType: DbExpressionKind.Treat
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Treat
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Type conversion expressions."
  syntax:
    content: Treat
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus
  id: UnaryMinus
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: UnaryMinus
  nameWithType: DbExpressionKind.UnaryMinus
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Negation expressions."
  syntax:
    content: UnaryMinus
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll
  id: UnionAll
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: UnionAll
  nameWithType: DbExpressionKind.UnionAll
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Set union (with duplicates) expressions."
  syntax:
    content: UnionAll
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference
  id: VariableReference
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  langs:
  - csharp
  name: VariableReference
  nameWithType: DbExpressionKind.VariableReference
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Reference to a variable expressions."
  syntax:
    content: VariableReference
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Data.Common.CommandTrees.DbExpressionKind.All
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: All
  nameWithType: DbExpressionKind.All
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.All
- uid: System.Data.Common.CommandTrees.DbExpressionKind
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionKind
  nameWithType: DbExpressionKind
  fullName: System.Data.Common.CommandTrees.DbExpressionKind
- uid: System.Data.Common.CommandTrees.DbExpressionKind.And
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: And
  nameWithType: DbExpressionKind.And
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.And
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Any
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Any
  nameWithType: DbExpressionKind.Any
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Any
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Case
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Case
  nameWithType: DbExpressionKind.Case
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Case
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Cast
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Cast
  nameWithType: DbExpressionKind.Cast
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Cast
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Constant
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Constant
  nameWithType: DbExpressionKind.Constant
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Constant
- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: CrossApply
  nameWithType: DbExpressionKind.CrossApply
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossApply
- uid: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: CrossJoin
  nameWithType: DbExpressionKind.CrossJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.CrossJoin
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Deref
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Deref
  nameWithType: DbExpressionKind.Deref
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Deref
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Distinct
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Distinct
  nameWithType: DbExpressionKind.Distinct
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Distinct
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Divide
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Divide
  nameWithType: DbExpressionKind.Divide
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Divide
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Element
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Element
  nameWithType: DbExpressionKind.Element
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Element
- uid: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: EntityRef
  nameWithType: DbExpressionKind.EntityRef
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.EntityRef
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Equals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Equals
  nameWithType: DbExpressionKind.Equals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Equals
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Except
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Except
  nameWithType: DbExpressionKind.Except
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Except
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Filter
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Filter
  nameWithType: DbExpressionKind.Filter
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Filter
- uid: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: FullOuterJoin
  nameWithType: DbExpressionKind.FullOuterJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.FullOuterJoin
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Function
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Function
  nameWithType: DbExpressionKind.Function
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Function
- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: GreaterThan
  nameWithType: DbExpressionKind.GreaterThan
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThan
- uid: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: GreaterThanOrEquals
  nameWithType: DbExpressionKind.GreaterThanOrEquals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GreaterThanOrEquals
- uid: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: GroupBy
  nameWithType: DbExpressionKind.GroupBy
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.GroupBy
- uid: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: InnerJoin
  nameWithType: DbExpressionKind.InnerJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.InnerJoin
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Intersect
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Intersect
  nameWithType: DbExpressionKind.Intersect
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Intersect
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: IsEmpty
  nameWithType: DbExpressionKind.IsEmpty
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsEmpty
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsNull
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: IsNull
  nameWithType: DbExpressionKind.IsNull
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsNull
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOf
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: IsOf
  nameWithType: DbExpressionKind.IsOf
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOf
- uid: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: IsOfOnly
  nameWithType: DbExpressionKind.IsOfOnly
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.IsOfOnly
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Lambda
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Lambda
  nameWithType: DbExpressionKind.Lambda
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Lambda
- uid: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: LeftOuterJoin
  nameWithType: DbExpressionKind.LeftOuterJoin
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LeftOuterJoin
- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThan
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: LessThan
  nameWithType: DbExpressionKind.LessThan
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThan
- uid: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: LessThanOrEquals
  nameWithType: DbExpressionKind.LessThanOrEquals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.LessThanOrEquals
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Like
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Like
  nameWithType: DbExpressionKind.Like
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Like
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Limit
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Limit
  nameWithType: DbExpressionKind.Limit
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Limit
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Minus
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Minus
  nameWithType: DbExpressionKind.Minus
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Minus
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Modulo
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Modulo
  nameWithType: DbExpressionKind.Modulo
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Modulo
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Multiply
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Multiply
  nameWithType: DbExpressionKind.Multiply
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Multiply
- uid: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: NewInstance
  nameWithType: DbExpressionKind.NewInstance
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NewInstance
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Not
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Not
  nameWithType: DbExpressionKind.Not
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Not
- uid: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: NotEquals
  nameWithType: DbExpressionKind.NotEquals
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.NotEquals
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Null
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: "Null"
  nameWithType: DbExpressionKind.Null
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Null
- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfType
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: OfType
  nameWithType: DbExpressionKind.OfType
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfType
- uid: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: OfTypeOnly
  nameWithType: DbExpressionKind.OfTypeOnly
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Or
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Or
  nameWithType: DbExpressionKind.Or
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Or
- uid: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: OuterApply
  nameWithType: DbExpressionKind.OuterApply
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.OuterApply
- uid: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: ParameterReference
  nameWithType: DbExpressionKind.ParameterReference
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.ParameterReference
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Plus
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Plus
  nameWithType: DbExpressionKind.Plus
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Plus
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Project
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Project
  nameWithType: DbExpressionKind.Project
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Project
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Property
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Property
  nameWithType: DbExpressionKind.Property
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Property
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Ref
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Ref
  nameWithType: DbExpressionKind.Ref
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Ref
- uid: System.Data.Common.CommandTrees.DbExpressionKind.RefKey
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: RefKey
  nameWithType: DbExpressionKind.RefKey
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RefKey
- uid: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: RelationshipNavigation
  nameWithType: DbExpressionKind.RelationshipNavigation
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.RelationshipNavigation
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Scan
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Scan
  nameWithType: DbExpressionKind.Scan
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Scan
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Skip
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Skip
  nameWithType: DbExpressionKind.Skip
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Skip
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Sort
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Sort
  nameWithType: DbExpressionKind.Sort
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Sort
- uid: System.Data.Common.CommandTrees.DbExpressionKind.Treat
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: Treat
  nameWithType: DbExpressionKind.Treat
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.Treat
- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: UnaryMinus
  nameWithType: DbExpressionKind.UnaryMinus
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnaryMinus
- uid: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: UnionAll
  nameWithType: DbExpressionKind.UnionAll
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.UnionAll
- uid: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference
  parent: System.Data.Common.CommandTrees.DbExpressionKind
  isExternal: false
  name: VariableReference
  nameWithType: DbExpressionKind.VariableReference
  fullName: System.Data.Common.CommandTrees.DbExpressionKind.VariableReference
