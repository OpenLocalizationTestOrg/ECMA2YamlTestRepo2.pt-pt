### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.RangeHeaderValue
  id: RangeHeaderValue
  children:
  - System.Net.Http.Headers.RangeHeaderValue.#ctor
  - System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  - System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.RangeHeaderValue.GetHashCode
  - System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.RangeHeaderValue.Ranges
  - System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.RangeHeaderValue.ToString
  - System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  - System.Net.Http.Headers.RangeHeaderValue.Unit
  langs:
  - csharp
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: System.Net.Http.Headers.RangeHeaderValue
  type: Class
  summary: "Representa um valor de cabeçalho do intervalo."
  remarks: "The RangeHeaderValue class provides support for the Range header as defined in [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) by the IETF.  \n  \n Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity. However, not all clients and servers need to support byte-range operations.  \n  \n The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity. Servers are not required to support Range header requests.  \n  \n An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:  \n  \n `Range: bytes=0-99\\r\\n\\r\\n`  \n  \n A HTTP server indicates support for Range headers with the Accept-Ranges header. An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:  \n  \n `Accept-Ranges: bytes\\r\\n\\r\\n`  \n  \n If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers. An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:  \n  \n `Accept-Ranges: none\\r\\n\\r\\n`"
  syntax:
    content: 'public class RangeHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: RangeHeaderValue()
  nameWithType: RangeHeaderValue.RangeHeaderValue()
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> classe."
  syntax:
    content: public RangeHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.RangeHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: '#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})'
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> classe com um intervalo de bytes."
  remarks: "This  constructor initializes a new instance of the <xref:System.Net.Http.Headers.RangeHeaderValue> class with a Range header containing a specified byte range.  \n  \n An example of a Range header with a byte range in an HTTP protocol request that requests the first 100 bytes would be would be the following:  \n  \n `Range: bytes=0-99\\r\\n\\r\\n`  \n  \n For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99."
  syntax:
    content: public RangeHeaderValue (Nullable<long> from, Nullable<long> to);
    parameters:
    - id: from
      type: System.Nullable{System.Int64}
      description: "A posição no qual pretende iniciar o envio de dados."
    - id: to
      type: System.Nullable{System.Int64}
      description: "A posição no qual pretende parar de enviar dados."
  overload: System.Net.Http.Headers.RangeHeaderValue.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>from</code>é maior do que <code>to</code> - ou - <code>from</code> ou <code>to</code> é inferior a 0."
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RangeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se especificado <xref:System.Object>é igual a atual <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto para a comparação com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref:System.Object>é igual para o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.RangeHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RangeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.RangeHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Funciona como uma função de hash para uma <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto."
  remarks: "Um código hash é um valor numérico é utilizado para identificar um objeto durante o teste de igualdade. Também podem servir como um índice para um objeto numa coleção.       O método GetHashCode é adequado para utilização em estruturas de dados, tais como uma tabela hash e algoritmos de hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o objeto atual."
  overload: System.Net.Http.Headers.RangeHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: RangeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte uma cadeia para um <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> instância."
  syntax:
    content: public static System.Net.Http.Headers.RangeHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Uma cadeia que representa as informações de valor de cabeçalho do intervalo."
    return:
      type: System.Net.Http.Headers.RangeHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> instância."
  overload: System.Net.Http.Headers.RangeHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>é um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referência."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>Não é informações de valor de cabeçalho de intervalo válido."
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges
  id: Ranges
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
  fullName: System.Net.Http.Headers.RangeHeaderValue.Ranges
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém intervalos especificados a partir de <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.RangeItemHeaderValue> Ranges { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.RangeItemHeaderValue}
      description: "Os intervalos do <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto."
  overload: System.Net.Http.Headers.RangeHeaderValue.Ranges*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: RangeHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Cria um novo objeto é uma cópia de atual <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> instância."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma cópia da instância atual."
  overload: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: RangeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.RangeHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve uma cadeia que representa o atual <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o objeto atual."
  overload: System.Net.Http.Headers.RangeHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: TryParse(String,RangeHeaderValue)
  nameWithType: RangeHeaderValue.TryParse(String,RangeHeaderValue)
  fullName: System.Net.Http.Headers.RangeHeaderValue.TryParse(String,RangeHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se uma cadeia válida <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> informações."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.RangeHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "a cadeia para validar."
    - id: parsedValue
      type: System.Net.Http.Headers.RangeHeaderValue
      description: "O <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> versão da cadeia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.AuthenticationHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.RangeHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.RangeHeaderValue.Unit
  id: Unit
  parent: System.Net.Http.Headers.RangeHeaderValue
  langs:
  - csharp
  name: Unit
  nameWithType: RangeHeaderValue.Unit
  fullName: System.Net.Http.Headers.RangeHeaderValue.Unit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém a unidade a <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public string Unit { get; set; }
    return:
      type: System.String
      description: "A unidade a <xref href=&quot;System.Net.Http.Headers.RangeHeaderValue&quot;> </xref> objeto."
  overload: System.Net.Http.Headers.RangeHeaderValue.Unit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: RangeHeaderValue()
  nameWithType: RangeHeaderValue.RangeHeaderValue()
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue()
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  nameWithType: RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
  fullName: System.Net.Http.Headers.RangeHeaderValue.RangeHeaderValue(Nullable<Int64>,Nullable<Int64>)
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: true
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int64>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: RangeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: RangeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.RangeHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: RangeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.RangeHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.RangeHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue
  fullName: System.Net.Http.Headers.RangeHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
  fullName: System.Net.Http.Headers.RangeHeaderValue.Ranges
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.RangeItemHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<RangeItemHeaderValue>
  nameWithType: ICollection<RangeItemHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.RangeItemHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.RangeItemHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.RangeItemHeaderValue
    name: RangeItemHeaderValue
    nameWithType: RangeItemHeaderValue
    fullName: RangeItemHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: RangeHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.RangeHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.RangeHeaderValue.ToString
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: RangeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.RangeHeaderValue.ToString()
- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: TryParse(String,RangeHeaderValue)
  nameWithType: RangeHeaderValue.TryParse(String,RangeHeaderValue)
  fullName: System.Net.Http.Headers.RangeHeaderValue.TryParse(String,RangeHeaderValue)
- uid: System.Net.Http.Headers.RangeHeaderValue.Unit
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Unit
  nameWithType: RangeHeaderValue.Unit
  fullName: System.Net.Http.Headers.RangeHeaderValue.Unit
- uid: System.Net.Http.Headers.RangeHeaderValue.#ctor*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: RangeHeaderValue
  nameWithType: RangeHeaderValue.RangeHeaderValue
- uid: System.Net.Http.Headers.RangeHeaderValue.Equals*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Equals
  nameWithType: RangeHeaderValue.Equals
- uid: System.Net.Http.Headers.RangeHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: RangeHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.RangeHeaderValue.Parse*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Parse
  nameWithType: RangeHeaderValue.Parse
- uid: System.Net.Http.Headers.RangeHeaderValue.Ranges*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Ranges
  nameWithType: RangeHeaderValue.Ranges
- uid: System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: RangeHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.RangeHeaderValue.ToString*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: ToString
  nameWithType: RangeHeaderValue.ToString
- uid: System.Net.Http.Headers.RangeHeaderValue.TryParse*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: RangeHeaderValue.TryParse
- uid: System.Net.Http.Headers.RangeHeaderValue.Unit*
  parent: System.Net.Http.Headers.RangeHeaderValue
  isExternal: false
  name: Unit
  nameWithType: RangeHeaderValue.Unit
