### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.TempFileCollection
  id: TempFileCollection
  children:
  - System.CodeDom.Compiler.TempFileCollection.#ctor
  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  - System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  - System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.BasePath
  - System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  - System.CodeDom.Compiler.TempFileCollection.Count
  - System.CodeDom.Compiler.TempFileCollection.Delete
  - System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  - System.CodeDom.Compiler.TempFileCollection.Finalize
  - System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  - System.CodeDom.Compiler.TempFileCollection.KeepFiles
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  - System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  - System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  - System.CodeDom.Compiler.TempFileCollection.TempDir
  langs:
  - csharp
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
  type: Class
  summary: "Representa uma coleção de ficheiros temporários."
  remarks: "TempFileCollection pode ser utilizado para gerar nomes de ficheiro exclusivo e para controlar uma lista de ficheiros. Isto pode ser útil para <xref:System.CodeDom.Compiler.ICodeCompiler>implementadores ao gerir uma lista de gerado pelo compilador intermédios ficheiros, o que por vezes, são eliminados depois de utilização.</xref:System.CodeDom.Compiler.ICodeCompiler>       Para especificar um diretório para gerar nomes de ficheiro temporário no, utilize um construtor adequadamente sobrecarregado. Também pode utilizar uma sobrecarga do construtor para indicar se ficheiros adicionados à coleção devem, se não for especificado, caso contrário, ao utilizar o <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>ou <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>métodos, ser eliminado quando a coleção é eliminada ou o <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>método é denominado.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       Um ficheiro em qualquer diretório pode ser adicionado a uma instância de TempFileCollection utilizando o <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>método.</xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       Para gerar um nome exclusivo para um ficheiro temporário de uma extensão de ficheiro específico, chame <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>e especificar a extensão de nome de ficheiro para gerar.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> O <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>método irá devolver uma cadeia consistindo num caminho completo para um nome de ficheiro da extensão especificado no diretório especificado pelo <xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A>propriedade.</xref:System.CodeDom.Compiler.TempFileCollection.TempDir%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> O <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>método só irá devolver um nome de ficheiro exclusivo por extensão de nome de ficheiro.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>       Tanto o <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>e <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>métodos têm sobrecargas que permitem-lhe especificar se os ficheiros devem ser eliminados quando a coleção é eliminada ou o <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>método é chamado.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A>       O <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>método irá eliminar todos os ficheiros na coleção, exceto os que estão marcados para ser mantidos.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>       O <xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>propriedade indica um caminho completo para o nome do ficheiro de base, sem uma extensão de nome de ficheiro utilizado para gerar os nomes de ficheiro devolvidos pelo <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>método.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> </xref:System.CodeDom.Compiler.TempFileCollection.BasePath%2A>      > [!NOTE] > Esta classe contém um pedido de ligação e um pedido de herança ao nível da classe que se aplica a todos os membros. A <xref:System.Security.SecurityException>é acionada quando o chamador imediato ou classe derivada não tem permissão de fidedignidade total.</xref:System.Security.SecurityException> Para obter detalhes sobre as exigências de segurança, consulte [exigências de ligação](~/add/includes/ajax-current-ext-md.md) e [exigências de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example shows the use of the TempFileCollection class and the <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> and <xref:System.CodeDom.Compiler.TempFileCollection.AddFile%2A> methods.  \n  \n [!code-cs[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/csharp/t-system.codedom.compile_1_1.cs)]\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_1_1.vb)]"
  syntax:
    content: 'public class TempFileCollection : IDisposable, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection()
  nameWithType: TempFileCollection.TempFileCollection()
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> classe com valores predefinidos."
  remarks: "Este é um construtor predefinido que inicializa a coleção com as predefinições. Por predefinição, esta coleção de ficheiros temporários irá armazenar os ficheiros num diretório temporário predefinido e irá eliminar os ficheiros temporários depois de ter sido gerados e utilizados."
  syntax:
    content: public TempFileCollection ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection(String)
  nameWithType: TempFileCollection.TempFileCollection(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> classe com o diretório temporário especificado que está definido para eliminar os ficheiros temporários após a respetiva geração e a utilização, por predefinição."
  syntax:
    content: public TempFileCollection (string tempDir);
    parameters:
    - id: tempDir
      type: System.String
      description: "Um caminho para o diretório temporário a utilizar para armazenar os ficheiros temporários."
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempFileCollection(String,Boolean)
  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> classe com o diretório temporário especificado e o valor especificado a indicar se pretende manter ou eliminar os ficheiros temporários após a respetiva geração e a utilização, por predefinição."
  remarks: "O valor de `keepFiles` é utilizado para definir o <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>parâmetro.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> Os ficheiros temporários na coleção são mantidos ou eliminados após a conclusão da atividade do compilador com base no valor da <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>propriedade na coleção.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> Como cada ficheiro seja adicionado à coleção, o valor atual do <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>é associados ao mesmo, a menos que é adicionado com um método que tenha um `keepFile` parâmetro, caso em que se o valor é utilizado para esse ficheiro específico.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> Quando o <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>se chama o método, se <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>é `true`, são eliminados todos os ficheiros, incluindo as que são adicionados com uma <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>valor `true`.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A> Isto permite que ficheiros específicos, os identificado como manter os ficheiros, de ser temporariamente mantidos após compilação para fins tais como o relatório de erros e eliminados quando já não são necessárias."
  syntax:
    content: public TempFileCollection (string tempDir, bool keepFiles);
    parameters:
    - id: tempDir
      type: System.String
      description: "Um caminho para o diretório temporário a utilizar para armazenar os ficheiros temporários."
    - id: keepFiles
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os ficheiros temporários devem ser mantidos após a utilização; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se os ficheiros temporários devem ser eliminados."
  overload: System.CodeDom.Compiler.TempFileCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  id: AddExtension(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddExtension(String)
  nameWithType: TempFileCollection.AddExtension(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Adiciona um nome de ficheiro com a extensão de nome de ficheiro especificado para a coleção."
  remarks: "Este método devolve um nome de ficheiro com a extensão especificada, que foi adicionado à coleção de ficheiros temporários. Outro código ainda tem de criar o ficheiro antes de poder ser utilizada.       Este método pode ser chamado uma vez para cada extensão de nome de ficheiro, porque irá devolver o mesmo nome se denomina-se com a mesma extensão."
  syntax:
    content: public string AddExtension (string fileExtension);
    parameters:
    - id: fileExtension
      type: System.String
      description: "A extensão de nome de ficheiro para o nome de ficheiro temporário gerado automaticamente a adicionar à coleção."
    return:
      type: System.String
      description: "Um nome de ficheiro com a extensão especificada que acabou de ser adicionada à coleção."
  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  id: AddExtension(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddExtension(String,Boolean)
  nameWithType: TempFileCollection.AddExtension(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Adiciona um nome de ficheiro com a extensão de nome de ficheiro especificado para a coleção, utilizando o valor especificado, que indica se o ficheiro deve ser eliminado ou retido."
  remarks: "Este método devolve um nome de ficheiro com a extensão especificada, que foi adicionado à coleção de ficheiros temporários. Outro código ainda tem de criar o ficheiro antes de poder ser utilizada.       Este método pode ser chamado uma vez para cada extensão de nome de ficheiro, porque irá devolver o mesmo nome se denomina-se com a mesma extensão."
  syntax:
    content: public string AddExtension (string fileExtension, bool keepFile);
    parameters:
    - id: fileExtension
      type: System.String
      description: "A extensão de nome de ficheiro para o nome de ficheiro temporário gerado automaticamente a adicionar à coleção."
    - id: keepFile
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ficheiro deve ser mantido após a utilização; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o ficheiro deve ser eliminado."
    return:
      type: System.String
      description: "Um nome de ficheiro com a extensão especificada que acabou de ser adicionada à coleção."
  overload: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileExtension</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  id: AddFile(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: AddFile(String,Boolean)
  nameWithType: TempFileCollection.AddFile(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Adiciona o ficheiro especificado para a coleção, utilizando o valor especificado, que indica se a manter o ficheiro depois da colecção é eliminada ou quando o <xref:System.CodeDom.Compiler.TempFileCollection.Delete*>método é chamado.</xref:System.CodeDom.Compiler.TempFileCollection.Delete*>"
  remarks: ''
  example:
  - "The following example shows the use of the AddFile method to add a file that is to be kept to the collection. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.TempFileCollection> class.  \n  \n [!code-cs[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/csharp/a38042f1-5040-47a0-b145-_1.cs)]\n [!code-vb[System.CodeDom.Compiler.TempFileCollection#2](~/add/codesnippet/visualbasic/a38042f1-5040-47a0-b145-_1.vb)]"
  syntax:
    content: public void AddFile (string fileName, bool keepFile);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome do ficheiro para adicionar à coleção."
    - id: keepFile
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ficheiro deve ser mantido após a utilização; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o ficheiro deve ser eliminado."
  overload: System.CodeDom.Compiler.TempFileCollection.AddFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileName</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia.       - ou - <code>fileName</code> é um duplicado."
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath
  id: BasePath
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: BasePath
  nameWithType: TempFileCollection.BasePath
  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém o caminho completo para o nome do ficheiro de base, sem uma extensão de nome de ficheiro, no caminho de diretório temporário, que é utilizado para gerar nomes de ficheiro temporário para a coleção."
  syntax:
    content: public string BasePath { get; }
    return:
      type: System.String
      description: "O caminho completo para o nome do ficheiro de base, sem uma extensão de nome de ficheiro, no caminho de diretório temporário, que é utilizado para gerar nomes de ficheiro temporário para a coleção."
  overload: System.CodeDom.Compiler.TempFileCollection.BasePath*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Se a propriedade BasePath não foi definida ou está definida como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, e <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref> não é concedida para o diretório temporário indicado pelo <xref:System.CodeDom.Compiler.TempFileCollection.TempDir*>propriedade.</xref:System.CodeDom.Compiler.TempFileCollection.TempDir*>"
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: TempFileCollection.CopyTo(String[],Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Copia os membros da coleção para a cadeia especificada, começando no índice especificado."
  syntax:
    content: public void CopyTo (string[] fileNames, int start);
    parameters:
    - id: fileNames
      type: System.String[]
      description: "A matriz de cadeias para copiar para."
    - id: start
      type: System.Int32
      description: "O índice de matriz para começar a copiar para."
  overload: System.CodeDom.Compiler.TempFileCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Count
  id: Count
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Count
  nameWithType: TempFileCollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém o número de ficheiros na coleção."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de ficheiros na coleção."
  overload: System.CodeDom.Compiler.TempFileCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Delete
  id: Delete
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Delete()
  nameWithType: TempFileCollection.Delete()
  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Elimina os ficheiros temporários dentro desta coleção que não foram marcados para ser mantidos."
  remarks: "O método Delete examina cada ficheiro numa coleção para determinar, de forma individuais, se o ficheiro está a ser mantidos ou eliminado. Os ficheiros podem ser marcados explicitamente manter quando adicionado à coleção utilizar adicionar métodos que utilizam um `keepFile` parâmetro. Ao adicionar um ficheiro para a coleção a utilizar o <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>sobrecarga que não tem um `keepFile` o valor do parâmetro do <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>propriedade é utilizada como indicador de ficheiro de mantenha a predefinição.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> </xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TempFileCollection.Dispose(Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.CodeDom.Compiler.TempFileCollection&quot;> </xref> e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca protegida `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.CodeDom.Compiler.TempFileCollection>referências.</xref:System.CodeDom.Compiler.TempFileCollection> Este método invoca o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.CodeDom.Compiler.TempFileCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize
  id: Finalize
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: TempFileCollection.Finalize()
  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "A tentar eliminar os ficheiros temporários para que este objeto é recuperado através da recolha de lixo."
  remarks: "Este método substitui <xref:System.Object.Finalize%2A?displayProperty=fullName>e limpa os recursos ao chamar `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> Substituir `Dispose(Boolean)` para personalizar a limpeza.       Código da aplicação não deve chamar este método; um objeto `Finalize` método é invocado automaticamente durante a recolha de lixo, a menos que Finalização pelo garbage collector foi desativada por uma chamada para o <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>método.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       Para obter mais informações, consulte [finalizar métodos e os processos de destruição](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md), e [a substituir o método Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~TempFileCollection ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  id: GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TempFileCollection.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém um enumerador que pode enumerar os membros da coleção."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que contém membros da coleção.</xref:System.Collections.IEnumerator>"
  overload: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  id: KeepFiles
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se os ficheiros, por predefinição, quando o <xref:System.CodeDom.Compiler.TempFileCollection.Delete*>método é denominado ou a coleção é eliminada.</xref:System.CodeDom.Compiler.TempFileCollection.Delete*>"
  remarks: "O valor da propriedade KeepFiles é utilizado como predefinição valor quando o <xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A>sobrecarga que não tem um `keepFile` parâmetro é chamado para adicionar um ficheiro temporário à coleção.</xref:System.CodeDom.Compiler.TempFileCollection.AddExtension%2A> Cada ficheiro temporário na coleção tem um sinalizador de ficheiro de manter associado que determina, numa base por ficheiro, se esse ficheiro deve ser mantida ou eliminado. Ficheiros automaticamente são mantidos ou eliminados após a conclusão da compilação com base no respetivo valor de ficheiros de manter associado. No entanto, após a conclusão da compilação, os ficheiros que foram mantidos podem ser libertados ao definir KeepFiles FALSO e chamar a <xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>método.</xref:System.CodeDom.Compiler.TempFileCollection.Delete%2A>  Este procedimento resultará em todos os ficheiros que está a ser eliminados."
  syntax:
    content: public bool KeepFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os ficheiros devem ser mantidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.TempFileCollection.KeepFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Copia os elementos da coleção para uma matriz, que começa no índice especificado da matriz de destino."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.CodeDom.Compiler.TempFileCollection>instância é convertida para um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int start);
    parameters:
    - id: array
      type: System.Array
      description: "Unidimensional <xref:System.Array>que é o destino dos elementos copiados <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Array> O <xref:System.Array>tem de ter a indexação com base em zero.</xref:System.Array>"
    - id: start
      type: System.Int32
      description: "O índice baseado em zero na matriz na qual copiar começa."
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém o número de elementos contidos na coleção."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.CodeDom.Compiler.TempFileCollection>instância é convertida para um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "O número de elementos contidos no <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém um valor que indica se o acesso à coleção está sincronizado (seguros para threads)."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.CodeDom.Compiler.TempFileCollection>instância é convertida para um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à <xref:System.Collections.ICollection>é sincronizado (seguros para threads); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém um objeto que pode ser utilizado para sincronizar o acesso à coleção."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.CodeDom.Compiler.TempFileCollection>instância é convertida para um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser utilizado para sincronizar o acesso ao <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Devolve um enumerador que itera através de uma coleção."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.CodeDom.Compiler.TempFileCollection>instância é convertida para um <xref:System.Collections.IEnumerable>interface.</xref:System.Collections.IEnumerable> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que podem ser utilizados para iterar através da coleção.</xref:System.Collections.IEnumerator>"
  overload: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: TempFileCollection.System.IDisposable.Dispose()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Executa tarefas definidas pela aplicação associadas a libertar, libertar ou repor recursos não geridos."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.CodeDom.Compiler.TempFileCollection>instância é convertida para um <xref:System.IDisposable>interface.</xref:System.IDisposable> </xref:System.CodeDom.Compiler.TempFileCollection>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir
  id: TempDir
  parent: System.CodeDom.Compiler.TempFileCollection
  langs:
  - csharp
  name: TempDir
  nameWithType: TempFileCollection.TempDir
  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém o diretório temporário para armazenar os ficheiros temporários."
  syntax:
    content: public string TempDir { get; }
    return:
      type: System.String
      description: "O diretório temporário para armazenar os ficheiros temporários."
  overload: System.CodeDom.Compiler.TempFileCollection.TempDir*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection()
  nameWithType: TempFileCollection.TempFileCollection()
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection()
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection(String)
  nameWithType: TempFileCollection.TempFileCollection(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection(String,Boolean)
  nameWithType: TempFileCollection.TempFileCollection(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.TempFileCollection(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension(String)
  nameWithType: TempFileCollection.AddExtension(String)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String)
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension(String,Boolean)
  nameWithType: TempFileCollection.AddExtension(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddExtension(String,Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddFile(String,Boolean)
  nameWithType: TempFileCollection.AddFile(String,Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.AddFile(String,Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: BasePath
  nameWithType: TempFileCollection.BasePath
  fullName: System.CodeDom.Compiler.TempFileCollection.BasePath
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: TempFileCollection.CopyTo(String[],Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.TempFileCollection.Count
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Count
  nameWithType: TempFileCollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.Delete
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Delete()
  nameWithType: TempFileCollection.Delete()
  fullName: System.CodeDom.Compiler.TempFileCollection.Delete()
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TempFileCollection.Dispose(Boolean)
  fullName: System.CodeDom.Compiler.TempFileCollection.Dispose(Boolean)
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Finalize()
  nameWithType: TempFileCollection.Finalize()
  fullName: System.CodeDom.Compiler.TempFileCollection.Finalize()
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TempFileCollection.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
  fullName: System.CodeDom.Compiler.TempFileCollection.KeepFiles
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.IsSynchronized
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.ICollection.SyncRoot
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: TempFileCollection.System.IDisposable.Dispose()
  fullName: System.CodeDom.Compiler.TempFileCollection.System.IDisposable.Dispose()
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempDir
  nameWithType: TempFileCollection.TempDir
  fullName: System.CodeDom.Compiler.TempFileCollection.TempDir
- uid: System.CodeDom.Compiler.TempFileCollection.#ctor*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection.TempFileCollection
- uid: System.CodeDom.Compiler.TempFileCollection.AddExtension*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddExtension
  nameWithType: TempFileCollection.AddExtension
- uid: System.CodeDom.Compiler.TempFileCollection.AddFile*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: AddFile
  nameWithType: TempFileCollection.AddFile
- uid: System.CodeDom.Compiler.TempFileCollection.BasePath*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: BasePath
  nameWithType: TempFileCollection.BasePath
- uid: System.CodeDom.Compiler.TempFileCollection.CopyTo*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: CopyTo
  nameWithType: TempFileCollection.CopyTo
- uid: System.CodeDom.Compiler.TempFileCollection.Count*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Count
  nameWithType: TempFileCollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.Delete*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Delete
  nameWithType: TempFileCollection.Delete
- uid: System.CodeDom.Compiler.TempFileCollection.Dispose*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Dispose
  nameWithType: TempFileCollection.Dispose
- uid: System.CodeDom.Compiler.TempFileCollection.Finalize*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: Finalize
  nameWithType: TempFileCollection.Finalize
- uid: System.CodeDom.Compiler.TempFileCollection.GetEnumerator*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TempFileCollection.GetEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.KeepFiles*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: KeepFiles
  nameWithType: TempFileCollection.KeepFiles
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TempFileCollection.System.Collections.ICollection.CopyTo
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TempFileCollection.System.Collections.ICollection.Count
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TempFileCollection.System.Collections.ICollection.IsSynchronized
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TempFileCollection.System.Collections.ICollection.SyncRoot
- uid: System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: TempFileCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: TempFileCollection.System.IDisposable.Dispose
- uid: System.CodeDom.Compiler.TempFileCollection.TempDir*
  parent: System.CodeDom.Compiler.TempFileCollection
  isExternal: false
  name: TempDir
  nameWithType: TempFileCollection.TempDir
