### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.SendPacketsElement
  id: SendPacketsElement
  children:
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.Buffer
  - System.Net.Sockets.SendPacketsElement.Count
  - System.Net.Sockets.SendPacketsElement.EndOfPacket
  - System.Net.Sockets.SendPacketsElement.FilePath
  - System.Net.Sockets.SendPacketsElement.Offset
  langs:
  - csharp
  name: SendPacketsElement
  nameWithType: SendPacketsElement
  fullName: System.Net.Sockets.SendPacketsElement
  type: Class
  summary: "Represents an element in a SendPacketsElement array."
  remarks: "The SendPacketsElement class is used to enhance the <xref:System.Net.Sockets.Socket> class for use by server applications that use asynchronous network I/O to achieve the highest performance. The SendPacketsElement class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method."
  syntax:
    content: public class SendPacketsElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[])
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class using the specified buffer."
  remarks: "The SendPacketsElement constructor initializes a new instance of the <xref:System.Net.Sockets.SendPacketsElement> class with a byte array of data. The <xref:System.Net.Sockets.SendPacketsElement> class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method."
  syntax:
    content: public SendPacketsElement (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A byte array of data to send using the &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; method."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> parameter cannot be null"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String)
  nameWithType: SendPacketsElement.SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class using the specified file."
  remarks: "The SendPacketsElement constructor initializes a new instance of the <xref:System.Net.Sockets.SendPacketsElement> class with a filename of a file. The <xref:System.Net.Sockets.SendPacketsElement> class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method.       Universal Naming Convention (UNC) paths are supported by the `filepath` parameter. If the file is in the current working directory, no path information needs to be specified."
  syntax:
    content: public SendPacketsElement (string filepath);
    parameters:
    - id: filepath
      type: System.String
      description: "The filename of the file to be transmitted using the &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; method."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filepath</code> parameter cannot be null"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[],Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class using the specified buffer, buffer offset, and count."
  remarks: "The SendPacketsElement constructor initializes a new instance of the <xref:System.Net.Sockets.SendPacketsElement> class with a byte array of data. The <xref:System.Net.Sockets.SendPacketsElement> class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method."
  syntax:
    content: public SendPacketsElement (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A byte array of data to send using the &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; method."
    - id: offset
      type: System.Int32
      description: "The offset, in bytes, from the beginning of the `buffer` to the location in the `buffer` to start sending the data specified in the `buffer` parameter."
    - id: count
      type: System.Int32
      description: "The number of bytes to send starting from the `offset` parameter. If `count` is zero, no bytes are sent."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> parameter cannot be null"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>offset</code> and <code>count</code> parameters must be greater than or equal to zero.       The <code>offset</code> and <code>count</code> must be less than the size of the buffer"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String,Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class using the specified filename path, offset, and count."
  remarks: "The SendPacketsElement constructor initializes a new instance of the <xref:System.Net.Sockets.SendPacketsElement> class with a filename of a file. The <xref:System.Net.Sockets.SendPacketsElement> class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method.       Universal Naming Convention (UNC) paths are supported by the `filepath` parameter. If the file is in the current working directory, no path information needs to be specified."
  syntax:
    content: public SendPacketsElement (string filepath, int offset, int count);
    parameters:
    - id: filepath
      type: System.String
      description: "The filename of the file to be transmitted using the &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; method."
    - id: offset
      type: System.Int32
      description: "The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the `filepath` parameter."
    - id: count
      type: System.Int32
      description: "The number of bytes to send starting from the `offset` parameter. If `count` is zero, the entire file is sent."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filepath</code> parameter cannot be null"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>offset</code> and <code>count</code> parameters must be greater than or equal to zero.       The <code>offset</code> and <code>count</code> must be less than the size of the file indicated by the <code>filepath</code> parameter."
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(Byte[],Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class using the specified buffer, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport."
  remarks: "The SendPacketsElement constructor initializes a new instance of the <xref:System.Net.Sockets.SendPacketsElement> class with a byte array of data. The <xref:System.Net.Sockets.SendPacketsElement> class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method."
  syntax:
    content: public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A byte array of data to send using the &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; method."
    - id: offset
      type: System.Int32
      description: "The offset, in bytes, from the beginning of the `buffer` to the location in the `buffer` to start sending the data specified in the `buffer` parameter."
    - id: count
      type: System.Int32
      description: "The number bytes to send starting from the `offset` parameter. If `count` is zero, no bytes are sent."
    - id: endOfPacket
      type: System.Boolean
      description: "A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> parameter cannot be null"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>offset</code> and <code>count</code> parameters must be greater than or equal to zero.       The <code>offset</code> and <code>count</code> must be less than the size of the buffer"
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: SendPacketsElement(String,Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class using the specified filename path, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport."
  remarks: "The SendPacketsElement constructor initializes a new instance of the <xref:System.Net.Sockets.SendPacketsElement> class with a filename of a file. The <xref:System.Net.Sockets.SendPacketsElement> class is used with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=fullName> property to get or set a data buffer or file to be sent using the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName> method.       Universal Naming Convention (UNC) paths are supported by the `filepath` parameter. If the file is in the current working directory, no path information needs to be specified."
  syntax:
    content: public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);
    parameters:
    - id: filepath
      type: System.String
      description: "The filename of the file to be transmitted using the &lt;xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=fullName&gt; method."
    - id: offset
      type: System.Int32
      description: "The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the `filepath` parameter."
    - id: count
      type: System.Int32
      description: "The number of bytes to send starting from the `offset` parameter. If `count` is zero, the entire file is sent."
    - id: endOfPacket
      type: System.Boolean
      description: "A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket."
  overload: System.Net.Sockets.SendPacketsElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filepath</code> parameter cannot be null"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>offset</code> and <code>count</code> parameters must be greater than or equal to zero.       The <code>offset</code> and <code>count</code> must be less than the size of the file indicated by the <code>filepath</code> parameter."
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  id: Buffer
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets the buffer to be sent if the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class was initialized with a <code>buffer</code> parameter."
  remarks: "The default value for the Buffer property is a zero-length array if the <xref:System.Net.Sockets.SendPacketsElement> class was not initialized with a `buffer` parameter."
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "The byte buffer to send if the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class was initialized with a <code>buffer</code> parameter."
  overload: System.Net.Sockets.SendPacketsElement.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Count
  id: Count
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Count
  nameWithType: SendPacketsElement.Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets the count of bytes to be sent."
  remarks: "The default value for the Count property is zero if the <xref:System.Net.Sockets.SendPacketsElement> class was not initialized with a `count` parameter.       If Count is zero for a file, the entire file is sent. If Count is zero for a buffer, no bytes are sent."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The count of bytes to send if the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class was initialized with a <code>count</code> parameter."
  overload: System.Net.Sockets.SendPacketsElement.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  id: EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets a Boolean value that indicates if this element should not be combined with the next element in a single send request from the sockets layer to the transport."
  remarks: "The default value for the EndOfPacket property is false if the <xref:System.Net.Sockets.SendPacketsElement> class was not initialized with an `endOfPacket` parameter set to true."
  syntax:
    content: public bool EndOfPacket { get; }
    return:
      type: System.Boolean
      description: "A Boolean value that indicates if this element should not be combined with the next element in a single send request."
  overload: System.Net.Sockets.SendPacketsElement.EndOfPacket*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  id: FilePath
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets the filename of the file to send if the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class was initialized with a <code>filepath</code> parameter."
  remarks: "Universal Naming Convention (UNC) paths are supported by the FilePath property. If the file is in the current working directory, no path information needs to be specified.       The default value for the FilePath property is an empty string if the <xref:System.Net.Sockets.SendPacketsElement> class was not initialized with a `filepath` parameter."
  syntax:
    content: public string FilePath { get; }
    return:
      type: System.String
      description: "The filename of the file to send if the <xref href=&quot;System.Net.Sockets.SendPacketsElement&quot;></xref> class was initialized with a <code>filepath</code> parameter."
  overload: System.Net.Sockets.SendPacketsElement.FilePath*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.SendPacketsElement.Offset
  id: Offset
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  name: Offset
  nameWithType: SendPacketsElement.Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data."
  remarks: "The default value for the Offset property is zero if the <xref:System.Net.Sockets.SendPacketsElement> class was not initialized with an `offset` parameter."
  syntax:
    content: public int Offset { get; }
    return:
      type: System.Int32
      description: "The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data."
  overload: System.Net.Sockets.SendPacketsElement.Offset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[])
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String)
  nameWithType: SendPacketsElement.SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[],Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String,Int32,Int32)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32)
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(Byte[],Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(Byte[],Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement(String,Int32,Int32,Boolean)
  nameWithType: SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(String,Int32,Int32,Boolean)
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
- uid: System.Net.Sockets.SendPacketsElement.Count
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Count
  nameWithType: SendPacketsElement.Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
- uid: System.Net.Sockets.SendPacketsElement.Offset
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Offset
  nameWithType: SendPacketsElement.Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
- uid: System.Net.Sockets.SendPacketsElement.#ctor*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: SendPacketsElement
  nameWithType: SendPacketsElement.SendPacketsElement
- uid: System.Net.Sockets.SendPacketsElement.Buffer*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Buffer
  nameWithType: SendPacketsElement.Buffer
- uid: System.Net.Sockets.SendPacketsElement.Count*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Count
  nameWithType: SendPacketsElement.Count
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: EndOfPacket
  nameWithType: SendPacketsElement.EndOfPacket
- uid: System.Net.Sockets.SendPacketsElement.FilePath*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: FilePath
  nameWithType: SendPacketsElement.FilePath
- uid: System.Net.Sockets.SendPacketsElement.Offset*
  parent: System.Net.Sockets.SendPacketsElement
  isExternal: false
  name: Offset
  nameWithType: SendPacketsElement.Offset
