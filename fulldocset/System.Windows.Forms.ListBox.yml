### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListBox
  id: ListBox
  children:
  - System.Windows.Forms.ListBox.#ctor
  - System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  - System.Windows.Forms.ListBox.AllowSelection
  - System.Windows.Forms.ListBox.BackColor
  - System.Windows.Forms.ListBox.BackgroundImage
  - System.Windows.Forms.ListBox.BackgroundImageChanged
  - System.Windows.Forms.ListBox.BackgroundImageLayout
  - System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  - System.Windows.Forms.ListBox.BeginUpdate
  - System.Windows.Forms.ListBox.BorderStyle
  - System.Windows.Forms.ListBox.ClearSelected
  - System.Windows.Forms.ListBox.Click
  - System.Windows.Forms.ListBox.ColumnWidth
  - System.Windows.Forms.ListBox.CreateItemCollection
  - System.Windows.Forms.ListBox.CreateParams
  - System.Windows.Forms.ListBox.CustomTabOffsets
  - System.Windows.Forms.ListBox.DefaultItemHeight
  - System.Windows.Forms.ListBox.DefaultSize
  - System.Windows.Forms.ListBox.DrawItem
  - System.Windows.Forms.ListBox.DrawMode
  - System.Windows.Forms.ListBox.EndUpdate
  - System.Windows.Forms.ListBox.FindString(System.String)
  - System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  - System.Windows.Forms.ListBox.FindStringExact(System.String)
  - System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  - System.Windows.Forms.ListBox.Font
  - System.Windows.Forms.ListBox.ForeColor
  - System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  - System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  - System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.GetSelected(System.Int32)
  - System.Windows.Forms.ListBox.HorizontalExtent
  - System.Windows.Forms.ListBox.HorizontalScrollbar
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  - System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  - System.Windows.Forms.ListBox.IntegralHeight
  - System.Windows.Forms.ListBox.ItemHeight
  - System.Windows.Forms.ListBox.Items
  - System.Windows.Forms.ListBox.MeasureItem
  - System.Windows.Forms.ListBox.MouseClick
  - System.Windows.Forms.ListBox.MultiColumn
  - System.Windows.Forms.ListBox.NoMatches
  - System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  - System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  - System.Windows.Forms.ListBox.Padding
  - System.Windows.Forms.ListBox.PaddingChanged
  - System.Windows.Forms.ListBox.Paint
  - System.Windows.Forms.ListBox.PreferredHeight
  - System.Windows.Forms.ListBox.Refresh
  - System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  - System.Windows.Forms.ListBox.RefreshItems
  - System.Windows.Forms.ListBox.ResetBackColor
  - System.Windows.Forms.ListBox.ResetForeColor
  - System.Windows.Forms.ListBox.RightToLeft
  - System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.ScrollAlwaysVisible
  - System.Windows.Forms.ListBox.SelectedIndex
  - System.Windows.Forms.ListBox.SelectedIndexChanged
  - System.Windows.Forms.ListBox.SelectedIndices
  - System.Windows.Forms.ListBox.SelectedItem
  - System.Windows.Forms.ListBox.SelectedItems
  - System.Windows.Forms.ListBox.SelectionMode
  - System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  - System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  - System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  - System.Windows.Forms.ListBox.Sort
  - System.Windows.Forms.ListBox.Sorted
  - System.Windows.Forms.ListBox.Text
  - System.Windows.Forms.ListBox.TextChanged
  - System.Windows.Forms.ListBox.TopIndex
  - System.Windows.Forms.ListBox.ToString
  - System.Windows.Forms.ListBox.UseCustomTabOffsets
  - System.Windows.Forms.ListBox.UseTabStops
  - System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  - System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: ListBox
  nameWithType: ListBox
  fullName: System.Windows.Forms.ListBox
  type: Class
  summary: "Represents a Windows control to display a list of items."
  remarks: "The ListBox control enables you to display a list of items to the user that the user can select by clicking. A ListBox control can provide single or multiple selections using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property. The ListBox also provides the <xref:System.Windows.Forms.ListBox.MultiColumn%2A> property to enable the display of items in columns instead of a straight vertical list of items. With this, the control can display more visible items and the user no longer needs to scroll to an item.       Typically, Windows handles the task of drawing the items to display in the ListBox. You can use the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property, and handle the <xref:System.Windows.Forms.ListBox.MeasureItem> and <xref:System.Windows.Forms.ListBox.DrawItem> events so you can override the automatic drawing that Windows provides and draw the items yourself. You can use owner-drawn ListBox controls to display variable-height items, images, or a different color or font for the text of each item in the list. The <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property, <xref:System.Windows.Forms.ListBox.GetItemHeight%2A>, and <xref:System.Windows.Forms.ListBox.GetItemRectangle%2A> also help you draw your own items.       In addition to display and selection functionality, the ListBox also provides features that enable you to efficiently add items to the ListBox and to find text within the items of the list. The <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods enable you to add a large number of items to the ListBox without the control being repainted each time an item is added to the list. The <xref:System.Windows.Forms.ListBox.FindString%2A> and <xref:System.Windows.Forms.ListBox.FindStringExact%2A> methods enable you to search for an item in the list that contains a specific search string.       The <xref:System.Windows.Forms.ListBox.Items%2A>, <xref:System.Windows.Forms.ListBox.SelectedItems%2A>, and <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> properties provide access to the three collections that are used by the ListBox. The following table outlines the three collections used by the ListBox and their use within the control.      |Collection class|Use within the ListBox|   |----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|   |<xref:System.Windows.Forms.ListBox.ObjectCollection>|Contains all items contained in the ListBox control.|   |<xref:System.Windows.Forms.ListBox.SelectedObjectCollection>|Contains a collection of the selected items which is a subset of the items contained in the ListBox control.|   |<xref:System.Windows.Forms.ListBox.SelectedIndexCollection>|Contains a collection of the selected indexes, which is a subset of the indexes of the <xref:System.Windows.Forms.ListBox.ObjectCollection>. These indexes specify items that are selected.|       The following three examples show the three indexed collections that the ListBox class supports.       The following table shows an example of how the <xref:System.Windows.Forms.ListBox.ObjectCollection> stores the items of the ListBox as well as their selection state within an example ListBox.      |Index|Item|Selection state within the ListBox|   |-----------|----------|----------------------------------------|   |0|object1|Unselected|   |1|object2|Selected|   |2|object3|Unselected|   |3|object4|Selected|   |4|object5|Selected|       Based on the <xref:System.Windows.Forms.ListBox.ObjectCollection> shown in the previous table, this table shows how the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> would appear.      |Index|Item|   |-----------|----------|   |0|object2|   |1|object4|   |2|object5|       Based on the <xref:System.Windows.Forms.ListBox.ObjectCollection> shown in the previous table, this table shows how the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> would appear.      |Index|Index of item|   |-----------|-------------------|   |0|1|   |1|3|   |2|4|       The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class enables you to add items to the ListBox. The <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method can accept any object when adding a member to the ListBox. When an object is being added to the ListBox, the control uses the text defined in the <xref:System.Object.ToString%2A> method of the object unless a member name within the object is specified in the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property. In addition to adding items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class you can also add items using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property of the <xref:System.Windows.Forms.ListControl> class.      > [!NOTE] >  If you have a ListBox, <xref:System.Windows.Forms.ComboBox>, or <xref:System.Windows.Forms.CheckedListBox> on a base Windows form and want to modify the string collections of those controls in a derived Windows form, the string collections of those controls in the base Windows form must be empty. If the string collections are not empty, they become read-only when you derive another Windows form."
  example:
  - "The following code example demonstrates how to create a ListBox control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the ListBox using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/t-system.windows.forms.l_19_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/t-system.windows.forms.l_19_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultBindingProperty("SelectedValue")]

      [System.ComponentModel.DefaultEvent("SelectedIndexChanged")]

      [System.ComponentModel.DefaultProperty("Items")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ListBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ListBox : System.Windows.Forms.ListControl
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Control
  - System.Windows.Forms.ListControl
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.ListControl.DataManager
  - System.Windows.Forms.ListControl.DataSource
  - System.Windows.Forms.ListControl.DataSourceChanged
  - System.Windows.Forms.ListControl.DisplayMember
  - System.Windows.Forms.ListControl.DisplayMemberChanged
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object)
  - System.Windows.Forms.ListControl.FilterItemOnProperty(System.Object,System.String)
  - System.Windows.Forms.ListControl.Format
  - System.Windows.Forms.ListControl.FormatInfo
  - System.Windows.Forms.ListControl.FormatInfoChanged
  - System.Windows.Forms.ListControl.FormatString
  - System.Windows.Forms.ListControl.FormatStringChanged
  - System.Windows.Forms.ListControl.FormattingEnabled
  - System.Windows.Forms.ListControl.FormattingEnabledChanged
  - System.Windows.Forms.ListControl.GetItemText(System.Object)
  - System.Windows.Forms.ListControl.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.ListControl.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormat(System.Windows.Forms.ListControlConvertEventArgs)
  - System.Windows.Forms.ListControl.OnFormatInfoChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormatStringChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnFormattingEnabledChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.OnValueMemberChanged(System.EventArgs)
  - System.Windows.Forms.ListControl.SelectedValue
  - System.Windows.Forms.ListControl.SelectedValueChanged
  - System.Windows.Forms.ListControl.ValueMember
  - System.Windows.Forms.ListControl.ValueMemberChanged
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection, through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property, and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>, through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_9_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_9_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_9_1.vb)]"
  syntax:
    content: public ListBox ();
    parameters: []
  overload: System.Windows.Forms.ListBox.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  id: AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "This member is obsolete, and there is no replacement."
  syntax:
    content: protected virtual void AddItemsCore (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "An array of objects."
  overload: System.Windows.Forms.ListBox.AddItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.AllowSelection
  id: AllowSelection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating whether the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> currently enables selection of list items."
  syntax:
    content: protected override bool AllowSelection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref> is not <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.AllowSelection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackColor
  id: BackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background color for the control."
  syntax:
    content: public override System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;></xref> that represents the background color of the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultBackColor*> property."
  overload: System.Windows.Forms.ListBox.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "This property is not relevant to this class."
  remarks: "This property is not relevant to this class."
  syntax:
    content: public override System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "The background image of the form."
  overload: System.Windows.Forms.ListBox.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.ListBox.BackgroundImage*> property of the label changes."
  remarks: "This event is not relevant to this class."
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the background image layout for a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> as defined in the <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> enumeration."
  remarks: "This property is not relevant to this class."
  syntax:
    content: public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "One of the values of <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>. The values are <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Stretch&quot; name=&quot;Stretch&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Tile&quot; name=&quot;Tile&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Zoom&quot; name=&quot;Zoom&quot; href=&quot;&quot;></xref>. <xref uid=&quot;langword_csharp_Center&quot; name=&quot;Center&quot; href=&quot;&quot;></xref> is the default value."
  overload: System.Windows.Forms.ListBox.BackgroundImageLayout*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The specified enumeration value does not exist."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.ListBox.BackgroundImageLayout*> property changes."
  remarks: "This event is not relevant to this class."
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BeginUpdate
  id: BeginUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Maintains performance while items are added to the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> one at a time by preventing the control from drawing until the <xref:System.Windows.Forms.ListBox.EndUpdate*> method is called."
  remarks: "The preferred way to add multiple items to the <xref:System.Windows.Forms.ListBox> is to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ListBox.Items%2A> property of the <xref:System.Windows.Forms.ListBox>). This enables you to add an array of items to the list in a single operation. However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class, you can use the BeginUpdate method to prevent the control from repainting the <xref:System.Windows.Forms.ListBox> each time an item is added to the list. Once you have completed the task of adding items to the list, call the <xref:System.Windows.Forms.ListBox.EndUpdate%2A> method to enable the <xref:System.Windows.Forms.ListBox> to repaint. This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListBox> when a large number of items are being added to the list."
  example:
  - "The following code example uses the BeginUpdate and <xref:System.Windows.Forms.ListBox.EndUpdate%2A> methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_14_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_14_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_14_1.vb)]"
  syntax:
    content: public void BeginUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.BorderStyle
  id: BorderStyle
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the type of border that is drawn around the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  syntax:
    content: public System.Windows.Forms.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Windows.Forms.BorderStyle
      description: "One of the <xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref> values. The default is <xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref>."
  overload: System.Windows.Forms.ListBox.BorderStyle*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The value is not one of the <xref href=&quot;System.Windows.Forms.BorderStyle&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ClearSelected
  id: ClearSelected
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Unselects all items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "Calling this method is equivalent to setting the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property to negative one (-1). You can use this method to quickly unselect all items in the list."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the ClearSelected method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/m-system.windows.forms.l_12_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/m-system.windows.forms.l_12_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public void ClearSelected ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ClearSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Click
  id: Click
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control is clicked."
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ColumnWidth
  id: ColumnWidth
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the width of columns in a multicolumn <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "If you set the value to zero (0), a default width is assigned to each column. If the <xref:System.Windows.Forms.ListBox> is a multicolumn <xref:System.Windows.Forms.ListBox>, this property returns the current width of each column in the list. You can use this property to ensure that each column in a multicolumn <xref:System.Windows.Forms.ListBox> can properly display its items."
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_20_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_20_1.vb)]"
  syntax:
    content: public int ColumnWidth { get; set; }
    return:
      type: System.Int32
      description: "The width, in pixels, of each column in the control. The default is 0."
  overload: System.Windows.Forms.ListBox.ColumnWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A value less than zero is assigned to the property."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  id: CreateItemCollection
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Creates a new instance of the item collection."
  syntax:
    content: protected virtual System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();
    parameters: []
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "A <xref:System.Windows.Forms.ListBox.ObjectCollection> that represents the new item collection."
  overload: System.Windows.Forms.ListBox.CreateItemCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the required creation parameters when the control handle is created."
  syntax:
    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "A <xref href=&quot;System.Windows.Forms.CreateParams&quot;></xref> that contains the required creation parameters when the handle to the control is created."
  overload: System.Windows.Forms.ListBox.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  id: CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the width of the tabs between the items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "The integer array contains the tab spaces in ascending order."
  syntax:
    content: public System.Windows.Forms.ListBox.IntegerCollection CustomTabOffsets { get; }
    return:
      type: System.Windows.Forms.ListBox.IntegerCollection
      description: "A collection of integers representing the tab widths."
  overload: System.Windows.Forms.ListBox.CustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  id: DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Specifies the default item height for an owner-drawn <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  syntax:
    content: public const int DefaultItemHeight = 13;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the default size of the control."
  syntax:
    content: protected override System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "The default <xref href=&quot;System.Drawing.Size&quot;></xref> of the control."
  overload: System.Windows.Forms.ListBox.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawItem
  id: DrawItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when a visual aspect of an owner-drawn <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> changes."
  remarks: "This event is used by an owner-drawn <xref:System.Windows.Forms.ListBox>. The event is only raised when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawFixed` or `DrawMode.OwnerDrawVariable`. You can use this event to perform the tasks needed to draw items in the <xref:System.Windows.Forms.ListBox>. If you have a variable-sized item (when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`), before drawing an item, the <xref:System.Windows.Forms.ListBox.MeasureItem> event is raised. You can create an event handler for the <xref:System.Windows.Forms.ListBox.MeasureItem> event to specify the size for the item that you are going to draw in your event handler for the DrawItem event.       For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the DrawItem event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the DrawItem event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_2_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/e-system.windows.forms.l_2_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DrawItemEventHandler DrawItem;
    return:
      type: System.Windows.Forms.DrawItemEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.DrawMode
  id: DrawMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the drawing mode for the control."
  remarks: ''
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the DrawMode property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_42_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/p-system.windows.forms.l_42_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.DrawMode DrawMode { get; set; }
    return:
      type: System.Windows.Forms.DrawMode
      description: "One of the <xref href=&quot;System.Windows.Forms.DrawMode&quot;></xref> values representing the mode for drawing the items of the control. The default is <xref uid=&quot;langword_csharp_DrawMode.Normal&quot; name=&quot;DrawMode.Normal&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.DrawMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The value assigned to the property is not a member of the <xref href=&quot;System.Windows.Forms.DrawMode&quot;></xref> enumeration."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A multicolumn <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> cannot have a variable-sized height."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.EndUpdate
  id: EndUpdate
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Resumes painting the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control after painting is suspended by the <xref:System.Windows.Forms.ListBox.BeginUpdate*> method."
  remarks: "The preferred way to add items to the <xref:System.Windows.Forms.ListBox> is to use the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class (through the <xref:System.Windows.Forms.ListBox.Items%2A> property of the <xref:System.Windows.Forms.ListBox>). This enables you to add an array of items to the list at one time. However, if you want to add items one at a time using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class, you can use the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> method to prevent the control from repainting the <xref:System.Windows.Forms.ListBox> each time an item is added to the list. Once you have completed the task of adding items to the list, call the EndUpdate method to enable the <xref:System.Windows.Forms.ListBox> to repaint. This way of adding items can prevent flickered drawing of the <xref:System.Windows.Forms.ListBox> when a large number of items are being added to the list."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> and EndUpdate methods while adding five thousand items to a <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a <xref:System.Windows.Forms.Form> and that this method is placed within the form and called from it.  \n  \n [!code-cs[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_0_1.cs)]\n [!code-cpp[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_0_1.cpp)]\n [!code-vb[Classic ListBox.BeginUpdate Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_0_1.vb)]"
  syntax:
    content: public void EndUpdate ();
    parameters: []
  overload: System.Windows.Forms.ListBox.EndUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  id: FindString(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Finds the first item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> that starts with the specified string."
  remarks: "The search performed by this method is not case-sensitive. The search looks for words that partially match the specified search string parameter, `s`. You can use this method to search for the first item that matches the specified string. You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item&quot;s text. Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ListBox>, you can use the version of the FindString method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ListBox>. If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method."
  example:
  - "The following code example demonstrates how to use the FindString method to search for the first instance of a string in a <xref:System.Windows.Forms.ListBox>. If no items are found that match the search string FindString returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[ListBox.FindString2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_13_1.cs)]\n [!code-cpp[ListBox.FindString2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_13_1.cpp)]\n [!code-vb[ListBox.FindString2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_13_1.vb)]"
  syntax:
    content: public int FindString (string s);
    parameters:
    - id: s
      type: System.String
      description: "The text to search for."
    return:
      type: System.Int32
      description: "The zero-based index of the first item found; returns <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref> if no match is found."
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the <code>s</code> parameter is less than -1 or greater than or equal to the item count."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  id: FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Finds the first item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> that starts with the specified string. The search starts at a specific starting index."
  remarks: "The search performed by this method is not case-sensitive. The search looks for words that partially match the specified search string parameter, `s`. You can use this method to search for the first item that matches the specified string at the specified starting index within the list of items for the <xref:System.Windows.Forms.ListBox>. You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item&quot;s text. This method is typically used after a call has been made using the version of this method that does not specify a starting index. Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text. If you want to perform a search for an exact word match instead of a partial match, use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method.      > [!NOTE] >  When the search reaches the bottom of the <xref:System.Windows.Forms.ListBox>, it continues searching from the top of the <xref:System.Windows.Forms.ListBox> back to the item specified by the `startIndex` parameter."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/m-system.windows.forms.l_10_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/m-system.windows.forms.l_10_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_10_1.vb)]"
  syntax:
    content: public int FindString (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "The text to search for."
    - id: startIndex
      type: System.Int32
      description: "The zero-based index of the item before the first item to be searched. Set to negative one (-1) to search from the beginning of the control."
    return:
      type: System.Int32
      description: "The zero-based index of the first item found; returns <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref> if no match is found."
  overload: System.Windows.Forms.ListBox.FindString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>startIndex</code> parameter is less than zero or greater than or equal to the value of the <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> property of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  id: FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Finds the first item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> that exactly matches the specified string."
  remarks: "The search performed by this method is not case-sensitive. The search looks for an exact match to the words specified in the search string parameter, `s`. You can use this method to search for the first item that matches the specified string. You can then perform tasks such as removing the item that contains the search text by using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or changing the item&quot;s text. Once you have found the specified text, if you want to search for other instances of the text in the <xref:System.Windows.Forms.ListBox>, you can use the version of the FindStringExact method that provides a parameter for specifying a starting index within the <xref:System.Windows.Forms.ListBox>. If you want to perform partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ListBox.FindString%2A> method."
  example:
  - "The following code example demonstrates how to use the FindStringExact method to search a <xref:System.Windows.Forms.ListBox> control for an item that exactly matches a specified string. If no items are found that match the search string, FindStringExact returns a -1 value and the example displays a <xref:System.Windows.Forms.MessageBox>. If an item is found that matches the search text, the example uses the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method to select the item in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-vb[ListBox.FindStringExact#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_16_1.vb)]\n [!code-cs[ListBox.FindStringExact#1](~/add/codesnippet/csharp/m-system.windows.forms.l_16_1.cs)]\n [!code-cpp[ListBox.FindStringExact#1](~/add/codesnippet/cpp/m-system.windows.forms.l_16_1.cpp)]"
  syntax:
    content: public int FindStringExact (string s);
    parameters:
    - id: s
      type: System.String
      description: "The text to search for."
    return:
      type: System.Int32
      description: "The zero-based index of the first item found; returns <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref> if no match is found."
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  id: FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Finds the first item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> that exactly matches the specified string. The search starts at a specific starting index."
  remarks: "The search performed by this method is not case-sensitive. The search looks for words that exactly match the specified search string parameter, `s`. You can use this method to search for the first item that matches the specified string at the specified starting index within the list of items for the <xref:System.Windows.Forms.ListBox>. You can then perform tasks such as removing the item that contains the search text using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> method or change the item&quot;s text. This method is typically used after a call has been made using the version of this method that does not specify a starting index. Once an initial item has been found in the list, this method is typically used to find further instances of the search text by specifying the index position in the `startIndex` parameter of the item after the first found instance of the search text. If you want to perform a partial word search instead of an exact word match, use the <xref:System.Windows.Forms.ListBox.FindString%2A> method.      > [!NOTE] >  When the search reaches the bottom of the <xref:System.Windows.Forms.ListBox>, it continues searching from the top of the <xref:System.Windows.Forms.ListBox> back to the item specified by the `startIndex` parameter."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method to search for all items in a <xref:System.Windows.Forms.ListBox> that exactly match the specified search text. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindStringExact%2A> method begins searching from the top of the list after it reaches the bottom of the list of items, to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cs[ListBox.FindStringExact2#1](~/add/codesnippet/csharp/m-system.windows.forms.l_5_1.cs)]\n [!code-cpp[ListBox.FindStringExact2#1](~/add/codesnippet/cpp/m-system.windows.forms.l_5_1.cpp)]\n [!code-vb[ListBox.FindStringExact2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_5_1.vb)]"
  syntax:
    content: public int FindStringExact (string s, int startIndex);
    parameters:
    - id: s
      type: System.String
      description: "The text to search for."
    - id: startIndex
      type: System.Int32
      description: "The zero-based index of the item before the first item to be searched. Set to negative one (-1) to search from the beginning of the control."
    return:
      type: System.Int32
      description: "The zero-based index of the first item found; returns <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref> if no match is found."
  overload: System.Windows.Forms.ListBox.FindStringExact*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>startIndex</code> parameter is less than zero or greater than or equal to the value of the <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> property of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Font
  id: Font
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the font of the text displayed by the control."
  syntax:
    content: public override System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the text displayed by the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultFont*> property."
  overload: System.Windows.Forms.ListBox.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the foreground color of the control."
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "The foreground <xref href=&quot;System.Drawing.Color&quot;></xref> of the control. The default is the value of the <xref:System.Windows.Forms.Control.DefaultForeColor*> property."
  overload: System.Windows.Forms.ListBox.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  id: GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the height of an item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "If the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is not set to `DrawMode.OwnerDrawVariable`, the value of the index parameter is ignored because all items in a standard <xref:System.Windows.Forms.ListBox> are the same size. You can use this property when you are using an owner-drawn <xref:System.Windows.Forms.ListBox> to determine the size of any item within the <xref:System.Windows.Forms.ListBox>."
  syntax:
    content: public int GetItemHeight (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item to return the height for."
    return:
      type: System.Int32
      description: "The height, in pixels, of the specified item."
  overload: System.Windows.Forms.ListBox.GetItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified value of the <code>index</code> parameter is less than zero or greater than the item count."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  id: GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the bounding rectangle for an item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "If the item specified in the `index` parameter is not visible, the rectangle returned by this method will be outside the visible portion of the control. You can use this method to determine the size and position of an item within the list. To get the height of an item, especially a variable-height owner drawn list item, you can use the <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> method."
  syntax:
    content: public System.Drawing.Rectangle GetItemRectangle (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of item whose bounding rectangle you want to return."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounding rectangle for the specified item."
  overload: System.Windows.Forms.ListBox.GetItemRectangle*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>index</code> parameter is less than zero or greater than or equal to the value of the <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> property of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retrieves the bounds within which the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> is scaled."
  remarks: "The <xref:System.Windows.Forms.ListBox> class overrides the <xref:System.Windows.Forms.Control.GetScaledBounds%2A?displayProperty=fullName> method to ensure that the requested height is scaled rather than the current height."
  syntax:
    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that specifies the area for which to retrieve the display bounds."
    - id: factor
      type: System.Drawing.SizeF
      description: "The height and width of the control&quot;s bounds."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "One of the values of <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref> that specifies the bounds of the control to use when defining its size and position."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> representing the bounds within which the control is scaled."
  overload: System.Windows.Forms.ListBox.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  id: GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating whether the specified item is selected."
  remarks: "You can use this method to quickly determine whether a specified item is selected. This method is useful when a specific operation needs to be performed when a specific item in a multiple-selection <xref:System.Windows.Forms.ListBox> is selected."
  example:
  - "The following code example demonstrates how to use the GetSelected method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/m-system.windows.forms.l_4_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/m-system.windows.forms.l_4_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_4_1.vb)]"
  syntax:
    content: public bool GetSelected (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item that determines whether it is selected."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified item is currently selected in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.GetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>index</code> parameter is less than zero or greater than or equal to the value of the <xref:System.Windows.Forms.ListBox.ObjectCollection.Count*> property of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  id: HorizontalExtent
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the width by which the horizontal scroll bar of a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> can scroll."
  remarks: "This property only reports a useful value if the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property is set to `true`. If the width of the <xref:System.Windows.Forms.ListBox> is smaller than the value of this property, the horizontal scroll bar horizontally scrolls items in the <xref:System.Windows.Forms.ListBox>. If the width of the <xref:System.Windows.Forms.ListBox> is equal to or greater than this value, the horizontal scroll bar is hidden. The value of this property is not dynamically updated by the <xref:System.Windows.Forms.ListBox>. This property is useful when the items of the <xref:System.Windows.Forms.ListBox> are owner-drawn. For example, if the owner drawn items of the <xref:System.Windows.Forms.ListBox> are 200 pixels wide, but the <xref:System.Windows.Forms.ListBox> is 60 pixels wide, the HorizontalExtent property would need to be set to 200 in order to scroll the right edge of the items into the visible region of the control."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and HorizontalExtent properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_74_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_74_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_74_1.vb)]"
  syntax:
    content: public int HorizontalExtent { get; set; }
    return:
      type: System.Int32
      description: "The width, in pixels, that the horizontal scroll bar can scroll the control. The default is zero."
  overload: System.Windows.Forms.ListBox.HorizontalExtent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  id: HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether a horizontal scroll bar is displayed in the control."
  remarks: "The HorizontalScrollbar property determines whether the <xref:System.Windows.Forms.ListBox> should display a horizontal scroll bar when the width of items within the <xref:System.Windows.Forms.ListBox> extend beyond the right edge of the control. When this property is set to `true`, the scroll bar is automatically displayed based on the width of items in the <xref:System.Windows.Forms.ListBox>. If the <xref:System.Windows.Forms.ListBox> is an owner-drawn <xref:System.Windows.Forms.ListBox>, in order to properly display a horizontal scroll bar, you must set the <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> property."
  example:
  - "The following code example demonstrates how to use the HorizontalScrollbar and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the <xref:System.Windows.Forms.ListBox.IntegralHeight%2A> property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_12_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_12_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_12_1.vb)]"
  syntax:
    content: public bool HorizontalScrollbar { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to display a horizontal scroll bar in the control; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.HorizontalScrollbar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  id: IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the zero-based index of the item at the specified coordinates."
  remarks: "This method enables you to determine which item is located at a specific location within the control. You can use this method to determine which item within the list is selected when a user right-clicks the <xref:System.Windows.Forms.ListBox>. The location of the cursor can be determined and passed to the `p` parameter of the IndexFromPoint method to determine which item the user right-clicked the mouse over. You can then display a shortcut menu to the user to provide tasks and features based on the specific item."
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_20_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_20_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_20_1.cs)]"
  syntax:
    content: public int IndexFromPoint (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;></xref> object containing the coordinates used to obtain the item index."
    return:
      type: System.Int32
      description: "The zero-based index of the item found at the specified coordinates; returns <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref> if no match is found."
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  id: IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns the zero-based index of the item at the specified coordinates."
  remarks: "This method enables you to determine which item that is located at a specific location within the control. You can use this method to determine which item within the list is selected when a user right-clicks the <xref:System.Windows.Forms.ListBox>. The location of the cursor can be determined and passed to the `x` and `y` parameters of the <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method to determine which item the user right-clicked the mouse over. You can then display a shortcut menu to the user to provide tasks and features based on the specific item."
  example:
  - "The following code example demonstrates how to perform drag-and-drop operations using a <xref:System.Windows.Forms.ListBox> control that contains items to drop into a <xref:System.Windows.Forms.RichTextBox> control. The constructor of the form sets the <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A> property to `true` to enable drag-and-drop operations to occur in the <xref:System.Windows.Forms.RichTextBox>. The example uses the <xref:System.Windows.Forms.Control.MouseDown> event of the <xref:System.Windows.Forms.ListBox> to start the drag operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method. The example uses the <xref:System.Windows.Forms.Control.DragEnter> event to determine if an item being dragged into the <xref:System.Windows.Forms.RichTextBox> is a valid data type. The <xref:System.Windows.Forms.Control.DragDrop> event performs the actual dropping of a dragged item into the <xref:System.Windows.Forms.RichTextBox> control at the current cursor location within the <xref:System.Windows.Forms.RichTextBox>. This example requires that the <xref:System.Windows.Forms.Control.DragDrop> and <xref:System.Windows.Forms.Control.DragEnter> events have been connected to the event handlers defined in the example.  \n  \n [!code-cpp[RichTextBox.AllowDrop#1](~/add/codesnippet/cpp/m-system.windows.forms.l_18_1.cpp)]\n [!code-vb[RichTextBox.AllowDrop#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_18_1.vb)]\n [!code-cs[RichTextBox.AllowDrop#1](~/add/codesnippet/csharp/m-system.windows.forms.l_18_1.cs)]"
  syntax:
    content: public int IndexFromPoint (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "The x-coordinate of the location to search."
    - id: y
      type: System.Int32
      description: "The y-coordinate of the location to search."
    return:
      type: System.Int32
      description: "The zero-based index of the item found at the specified coordinates; returns <xref uid=&quot;langword_csharp_ListBox.NoMatches&quot; name=&quot;ListBox.NoMatches&quot; href=&quot;&quot;></xref> if no match is found."
  overload: System.Windows.Forms.ListBox.IndexFromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.IntegralHeight
  id: IntegralHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the control should resize to avoid showing partial items."
  remarks: "When this property is set to `true`, the control automatically resizes to ensure that an item is not partially displayed. If you want to maintain the original size of the <xref:System.Windows.Forms.ListBox> based on the space requirements of your form, set this property to `false`.       By default, the <xref:System.Windows.Forms.ListBox> and the <xref:System.Windows.Forms.CheckedListBox> sizes are such that they show only whole items. If you want the <xref:System.Windows.Forms.ListBox> or <xref:System.Windows.Forms.CheckedListBox> to completely fill a docked area, set IntegralHeight to `false`. This causes the control to completely fill the area, but the last item is not fully displayed.       If the <xref:System.Windows.Forms.ListBox> does not contain any items, this property has no effect.      > [!NOTE] >  The integral height is based on the height of the <xref:System.Windows.Forms.ListBox>, rather than the client area height. As a result, when the IntegralHeight property is set `true`, items can still be partially shown if scroll bars are displayed.      > [!NOTE] >  If the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`, this property has no effect."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> and <xref:System.Windows.Forms.ListBox.HorizontalExtent%2A> properties to display a horizontal scroll bar that shows all item text in the <xref:System.Windows.Forms.ListBox> control. The example also uses the IntegralHeight property to ensure that items are not partially displayed due to the size of the <xref:System.Windows.Forms.ListBox> control. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListView.HorizontalExtent#1](~/add/codesnippet/csharp/p-system.windows.forms.l_40_1.cs)]\n [!code-cpp[ListView.HorizontalExtent#1](~/add/codesnippet/cpp/p-system.windows.forms.l_40_1.cpp)]\n [!code-vb[ListView.HorizontalExtent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_40_1.vb)]"
  syntax:
    content: public bool IntegralHeight { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control resizes so that it does not display partial items; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.IntegralHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ItemHeight
  id: ItemHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the height of an item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "When the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawFixed`, all items have the same height. When the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to `DrawMode.OwnerDrawVariable`, the ItemHeight property specifies the height of each item added to the <xref:System.Windows.Forms.ListBox>. Because each item in an owner-drawn list can have a different height, you can use the <xref:System.Windows.Forms.ListBox.GetItemHeight%2A> method to get the height of a specific item in the <xref:System.Windows.Forms.ListBox>. If you use the ItemHeight property on a <xref:System.Windows.Forms.ListBox> with items of variable height, this property returns the height of the first item in the control.       The maximum height of a <xref:System.Windows.Forms.ListBox> item is 255 pixels."
  syntax:
    content: public virtual int ItemHeight { get; set; }
    return:
      type: System.Int32
      description: "The height, in pixels, of an item in the control."
  overload: System.Windows.Forms.ListBox.ItemHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The ItemHeight property was set to less than 0 or more than 255 pixels."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Items
  id: Items
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the items of the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "This property enables you to obtain a reference to the list of items that are currently stored in the <xref:System.Windows.Forms.ListBox>. With this reference, you can add items, remove items, and obtain a count of the items in the collection. For more information about the tasks that can be performed with the item collection, see the <xref:System.Windows.Forms.ListBox.ObjectCollection> class reference topics.       You can also manipulate the items of a <xref:System.Windows.Forms.ListBox> by using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property. If you use the <xref:System.Windows.Forms.ListControl.DataSource%2A> property to add items to a <xref:System.Windows.Forms.ListBox>, you can view the items in the <xref:System.Windows.Forms.ListBox> using the Items property but you cannot add or remove items from the list using the methods of the <xref:System.Windows.Forms.ListBox.ObjectCollection>."
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/p-system.windows.forms.l_50_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/p-system.windows.forms.l_50_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_50_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.ObjectCollection Items { get; }
    return:
      type: System.Windows.Forms.ListBox.ObjectCollection
      description: "An <xref:System.Windows.Forms.ListBox.ObjectCollection> representing the items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  overload: System.Windows.Forms.ListBox.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MeasureItem
  id: MeasureItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when an owner-drawn <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> is created and the sizes of the list items are determined."
  remarks: "You can create an event handler for this event to specify the size an item will be made before it is drawn in the <xref:System.Windows.Forms.ListBox.DrawItem> event. The event is only raised when the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property is set to <xref:System.Windows.Forms.DrawMode>.       The maximum valid height of a <xref:System.Windows.Forms.ListBox> item is 255 pixels. Setting the <xref:System.Windows.Forms.MeasureItemEventArgs.ItemHeight%2A> property of the <xref:System.Windows.Forms.MeasureItemEventArgs> to a value greater than 255 when handling this event may yield unexpected results.       For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to <xref:System.Windows.Forms.DrawMode> and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and MeasureItem events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_12_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/e-system.windows.forms.l_12_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/e-system.windows.forms.l_12_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;
    return:
      type: System.Windows.Forms.MeasureItemEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the user clicks the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control with the mouse pointer."
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.MultiColumn
  id: MultiColumn
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> supports multiple columns."
  remarks: "A multicolumn <xref:System.Windows.Forms.ListBox> places items into as many columns as are needed to make vertical scrolling unnecessary. The user can use the keyboard to navigate to columns that are not currently visible. Set the <xref:System.Windows.Forms.ListBox.HorizontalScrollbar%2A> property to `true` to display a horizontal scroll bar that enables the user to scroll to columns that are not currently shown in the visible region of the <xref:System.Windows.Forms.ListBox>. The value of the <xref:System.Windows.Forms.ListBox.ColumnWidth%2A> property determines the width of each column."
  example:
  - "The following code example demonstrates a simple two-column <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cs[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/csharp/p-system.windows.forms.l_52_1.cs)]\n [!code-vb[System.Windows.Forms.ListBox.MultiColumn#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_52_1.vb)]"
  syntax:
    content: public bool MultiColumn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> supports multiple columns; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.MultiColumn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A multicolumn <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> cannot have a variable-sized height."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.NoMatches
  id: NoMatches
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Specifies that no matches are found during a search."
  remarks: "This constant is returned by the <xref:System.Windows.Forms.ListBox.FindString%2A>, <xref:System.Windows.Forms.ListBox.FindStringExact%2A>, and <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> methods when no matching values are found in a search."
  syntax:
    content: public const int NoMatches = -1;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.ChangeUICues&quot;></xref> event."
  syntax:
    content: protected override void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.UICuesEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.UICuesEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnChangeUICues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  id: OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ListControl.DataSourceChanged&quot;></xref> event."
  syntax:
    content: protected override void OnDataSourceChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnDataSourceChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  id: OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ListControl.DisplayMemberChanged&quot;></xref> event."
  syntax:
    content: protected override void OnDisplayMemberChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ListBox.DrawItem&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnDrawItem method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to create owner-drawn <xref:System.Windows.Forms.ListBox> items. The code uses the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to specify that the items drawn are fixed sized and the <xref:System.Windows.Forms.ListBox.DrawItem> event to perform the drawing of each item into the <xref:System.Windows.Forms.ListBox>. The example code uses the properties and methods of the <xref:System.Windows.Forms.DrawItemEventArgs> class passed as a parameter to the event handler to draw the items. This example requires that a <xref:System.Windows.Forms.ListBox> control called `listBox1` has been added to a form and that the <xref:System.Windows.Forms.ListBox.DrawItem> event is handled by the event handler defined in the example code. The example also requires that items have been added to the <xref:System.Windows.Forms.ListBox> with the text of \"Apple\", \"Orange\", and \"Plum\" in that order.  \n  \n [!code-vb[ListBox.DrawMode#1](~/add/codesnippet/visualbasic/6b0d67e7-dfbb-4ef8-bf2d-_1.vb)]\n [!code-cs[ListBox.DrawMode#1](~/add/codesnippet/csharp/6b0d67e7-dfbb-4ef8-bf2d-_1.cs)]"
  syntax:
    content: protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.DrawItemEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnDrawItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;></xref> event."
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Specifies when the window handle has been created so that column width and other characteristics can be set. Inheriting classes should call <xref uid=&quot;langword_csharp_base.OnHandleCreated&quot; name=&quot;base.OnHandleCreated&quot; href=&quot;&quot;></xref>."
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Overridden to be sure that items are set up and cleared out correctly. Inheriting controls should call <xref uid=&quot;langword_csharp_base.OnHandleDestroyed&quot; name=&quot;base.OnHandleDestroyed&quot; href=&quot;&quot;></xref>."
  syntax:
    content: protected override void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  id: OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ListBox.MeasureItem&quot;></xref> event."
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md).       The OnMeasureItem method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MeasureItemEventArgs
      description: "A <xref href=&quot;System.Windows.Forms.MeasureItemEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnMeasureItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  id: OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.ParentChanged&quot;></xref> event."
  syntax:
    content: protected override void OnParentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.Control.Resize&quot;></xref> event."
  syntax:
    content: protected override void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;></xref> event."
  syntax:
    content: protected override void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  id: OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Raises the <xref href=&quot;System.Windows.Forms.ListControl.SelectedValueChanged&quot;></xref> event."
  syntax:
    content: protected override void OnSelectedValueChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Padding
  id: Padding
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "This property is not relevant to this class."
  remarks: "This property is not relevant to this class."
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "A <xref href=&quot;System.Windows.Forms.Padding&quot;></xref> value."
  overload: System.Windows.Forms.ListBox.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the value of the <xref:System.Windows.Forms.ListBox.Padding*> property changes."
  remarks: "For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Paint
  id: Paint
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control is painted."
  remarks: "This event is not relevant for this class."
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.PreferredHeight
  id: PreferredHeight
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the combined height of all items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "This property enables you to determine the height that the <xref:System.Windows.Forms.ListBox> needs to be sized to, in order to display every available item in the list and to avoid displaying vertical scroll bars. If the amount of items in the <xref:System.Windows.Forms.ListBox> is large, sizing the control using the value of the PreferredHeight property might cause the <xref:System.Windows.Forms.ListBox> to be sized outside of the client area of the form or the <xref:System.Windows.Forms.ListBox> container."
  example:
  - "The following code example demonstrates how to set the <xref:System.Windows.Forms.Control.Size%2A> property of a <xref:System.Windows.Forms.ListBox> based on the value of the PreferredHeight property in order to display all items in the <xref:System.Windows.Forms.ListBox> without use of scroll bars. This example requires that a <xref:System.Windows.Forms.ListBox> control, named `listBox1`, has been added to a form.  \n  \n [!code-cs[ListBox.PreferredHeight#1](~/add/codesnippet/csharp/p-system.windows.forms.l_37_1.cs)]\n [!code-vb[ListBox.PreferredHeight#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_37_1.vb)]\n [!code-cpp[ListBox.PreferredHeight#1](~/add/codesnippet/cpp/p-system.windows.forms.l_37_1.cpp)]"
  syntax:
    content: public int PreferredHeight { get; }
    return:
      type: System.Int32
      description: "The combined height, in pixels, of all items in the control."
  overload: System.Windows.Forms.ListBox.PreferredHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Refresh
  id: Refresh
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Forces the control to invalidate its client area and immediately redraw itself and any child controls."
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  id: RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Refreshes the item contained at the specified index."
  remarks: "If the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property is set and the property in the data source that is assigned to <xref:System.Windows.Forms.ListControl.DisplayMember%2A> changes, use the RefreshItem method to update the value in the <xref:System.Windows.Forms.ListBox> control."
  syntax:
    content: protected override void RefreshItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to refresh."
  overload: System.Windows.Forms.ListBox.RefreshItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RefreshItems
  id: RefreshItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Refreshes all <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> items and retrieves new strings for them."
  syntax:
    content: protected override void RefreshItems ();
    parameters: []
  overload: System.Windows.Forms.ListBox.RefreshItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetBackColor
  id: ResetBackColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Resets the <xref:System.Windows.Forms.Control.BackColor*> property to its default value."
  syntax:
    content: public override void ResetBackColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ResetForeColor
  id: ResetForeColor
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Resets the <xref:System.Windows.Forms.Control.ForeColor*> property to its default value."
  syntax:
    content: public override void ResetForeColor ();
    parameters: []
  overload: System.Windows.Forms.ListBox.ResetForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether text displayed by the control is displayed from right to left."
  remarks: "This property enables your menus to support languages that are written from right to left. When this property is set to `true`, item text is displayed from right to left instead of the default left to right method."
  syntax:
    content: public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "One of the <xref href=&quot;System.Windows.Forms.RightToLeft&quot;></xref> values."
  overload: System.Windows.Forms.ListBox.RightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Scales a control&quot;s location, size, padding and margin."
  syntax:
    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "The factor by which the height and width of the control will be scaled."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref> value that specifies the bounds of the control to use when defining its size and position."
  overload: System.Windows.Forms.ListBox.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  id: ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the vertical scroll bar is shown at all times."
  remarks: "The ScrollAlwaysVisible property indicates whether a vertical scroll bar is always displayed, even if the number of items in the <xref:System.Windows.Forms.ListBox> does not require displaying the vertical scroll bar. By default, a <xref:System.Windows.Forms.ListBox> only shows a vertical scroll bar when there are enough items to warrant displaying. For a multicolumn <xref:System.Windows.Forms.ListBox>, the ScrollAlwaysVisible property indicates that a horizontal scroll bar is displayed. A vertical scroll bar is never displayed regardless of the value of this property for a multicolumn <xref:System.Windows.Forms.ListBox>."
  example:
  - "The following code example demonstrates an owner-drawn <xref:System.Windows.Forms.ListBox> by setting the <xref:System.Windows.Forms.ListBox.DrawMode%2A> property to the `OwnerDrawVariable` value and handling the <xref:System.Windows.Forms.ListBox.DrawItem> and <xref:System.Windows.Forms.ListBox.MeasureItem> events. It also demonstrates setting the <xref:System.Windows.Forms.ListBox.BorderStyle%2A> and ScrollAlwaysVisible properties and using the <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> method.  \n  \n To run this example, paste it in an empty form that imports the <xref:System.Drawing> namespace and the <xref:System.Windows.Forms> namespace. Call `InitializeOwnerDrawnListBox` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_65_1.vb)]\n [!code-cs[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/csharp/p-system.windows.forms.l_65_1.cs)]\n [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/add/codesnippet/cpp/p-system.windows.forms.l_65_1.cpp)]"
  syntax:
    content: public bool ScrollAlwaysVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the vertical scroll bar should always be displayed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndex
  id: SelectedIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the zero-based index of the currently selected item in a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "For a standard <xref:System.Windows.Forms.ListBox>, you can use this property to determine the index of the item that is selected in the <xref:System.Windows.Forms.ListBox>. If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to either `SelectionMode.MultiSimple` or `SelectionMode.MultiExtended` (which indicates a multiple-selection <xref:System.Windows.Forms.ListBox>) and multiple items are selected in the list, this property can return the index to any selected item.       To retrieve a collection containing the indexes of all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property. If you want to obtain the item that is currently selected in the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property. In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property to obtain all the selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>."
  example:
  - "The following code example demonstrates how to use the SelectedIndex property with the <xref:System.Windows.Forms.ListBox.TopIndex%2A> property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_3_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_3_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_3_1.vb)]"
  syntax:
    content: public override int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "A zero-based index of the currently selected item. A value of negative one (-1) is returned if no item is selected."
  overload: System.Windows.Forms.ListBox.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The assigned value is less than -1 or greater than or equal to the item count."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Windows.Forms.ListBox.SelectionMode*> property is set to <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  id: SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.ListBox.SelectedIndex*> property or the <xref:System.Windows.Forms.ListBox.SelectedIndices*> collection has changed."
  remarks: "You can create an event handler for this event to determine when the selected index in the <xref:System.Windows.Forms.ListBox> has been changed. This can be useful when you need to display information in other controls based on the current selection in the <xref:System.Windows.Forms.ListBox>. You can use the event handler for this event to load the information in the other controls.       If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property is set to <xref:System.Windows.Forms.SelectionMode?displayProperty=fullName> or <xref:System.Windows.Forms.SelectionMode?displayProperty=fullName>, any change to the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> collection, including removing an item from the selection, will raise this event.       For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the SelectedIndexChanged event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the SelectedIndexChanged event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by <xref:System.Windows.Forms.ListBox.SelectedItem%2A> in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the SelectedIndexChanged event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/e-system.windows.forms.l_7_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.l_7_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.l_7_1.cs)]"
  syntax:
    content: public event EventHandler SelectedIndexChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedIndices
  id: SelectedIndices
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a collection that contains the zero-based indexes of all currently selected items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "For a multiple-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing the indexes to all items that are selected in the <xref:System.Windows.Forms.ListBox>. For a single-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing a single element containing the index of the only selected item in the <xref:System.Windows.Forms.ListBox>. For more information about how to manipulate the items of the collection, see <xref:System.Windows.Forms.ListBox.SelectedIndexCollection>.       The <xref:System.Windows.Forms.ListBox> class provides a number of ways to reference selected items. Instead of using the SelectedIndices property to obtain the index position of the currently selected item in a single-selection <xref:System.Windows.Forms.ListBox>, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property. If you want to obtain the item that is currently selected in the <xref:System.Windows.Forms.ListBox>, instead of the index position of the item, use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property. In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property if you want to obtain all the selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.FindString%2A> method to search for all instances of the search text in the items of the <xref:System.Windows.Forms.ListBox>. The example uses the version of the <xref:System.Windows.Forms.ListBox.FindString%2A> method that enables you to specify a starting search index from which to do a continual search of all items in the <xref:System.Windows.Forms.ListBox>. The example also demonstrates how to determine when the <xref:System.Windows.Forms.ListBox.FindString%2A> method begins searching from the top of the list after it reaches the bottom of the list of items to prevent a recursive search. Once items are found in the <xref:System.Windows.Forms.ListBox>, they are selected using the <xref:System.Windows.Forms.ListBox.SetSelected%2A> method.  \n  \n [!code-cpp[ListBox.FindString#1](~/add/codesnippet/cpp/p-system.windows.forms.l_81_1.cpp)]\n [!code-cs[ListBox.FindString#1](~/add/codesnippet/csharp/p-system.windows.forms.l_81_1.cs)]\n [!code-vb[ListBox.FindString#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_81_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedIndexCollection SelectedIndices { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedIndexCollection
      description: "A <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> containing the indexes of the currently selected items in the control. If no items are currently selected, an empty <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> is returned."
  overload: System.Windows.Forms.ListBox.SelectedIndices*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItem
  id: SelectedItem
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the currently selected item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "For a standard <xref:System.Windows.Forms.ListBox>, you can use this property to determine which item is selected in the <xref:System.Windows.Forms.ListBox>. If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to either `SelectionMode.MultiSimple` or `SelectionMode.MultiExtended` (which indicates a multiple-selection <xref:System.Windows.Forms.ListBox>) and multiple items are selected in the list, this property can return any selected item.       To retrieve a collection containing all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property. If you want to obtain the index position of the currently selected item in the <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property. In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property to obtain all the selected indexes in a multiple-selection <xref:System.Windows.Forms.ListBox>."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to search for and select an item in a different <xref:System.Windows.Forms.ListBox> control. The example uses the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event to determine when the selected item in the <xref:System.Windows.Forms.ListBox> is changed. The example code then reads the text of the item using the SelectedItem property and calls the <xref:System.Windows.Forms.ListBox.FindString%2A> method on a different <xref:System.Windows.Forms.ListBox> using the text returned by SelectedItem in the first <xref:System.Windows.Forms.ListBox>. If an item is found in the other <xref:System.Windows.Forms.ListBox>, the item is selected. This example requires that two <xref:System.Windows.Forms.ListBox> controls, named `listBox1` and `listBox2`, have been added to a form and that both <xref:System.Windows.Forms.ListBox> controls contain items that are identical. The example also requires that the event-handling method defined in the example is connected to the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event of `listBox1`.  \n  \n [!code-cpp[ListBox.SelectedIndexChanged#1](~/add/codesnippet/cpp/p-system.windows.forms.l_49_1.cpp)]\n [!code-vb[ListBox.SelectedIndexChanged#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_49_1.vb)]\n [!code-cs[ListBox.SelectedIndexChanged#1](~/add/codesnippet/csharp/p-system.windows.forms.l_49_1.cs)]"
  syntax:
    content: public object SelectedItem { get; set; }
    return:
      type: System.Object
      description: "An object that represents the current selection in the control."
  overload: System.Windows.Forms.ListBox.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectedItems
  id: SelectedItems
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a collection containing the currently selected items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "For a multiple-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing all items that are selected in the <xref:System.Windows.Forms.ListBox>. For a single-selection <xref:System.Windows.Forms.ListBox>, this property returns a collection containing a single element containing the only selected item in the <xref:System.Windows.Forms.ListBox>. For more information about how to manipulate the items of the collection, see <xref:System.Windows.Forms.ListBox.SelectedObjectCollection>.       The <xref:System.Windows.Forms.ListBox> class provides a number of ways to reference selected items. Instead of using the SelectedItems property to obtain the currently selected item in a single-selection <xref:System.Windows.Forms.ListBox>, you can use the <xref:System.Windows.Forms.ListBox.SelectedItem%2A> property. If you want to obtain the index position of an item that is currently selected in the <xref:System.Windows.Forms.ListBox>, instead of the item itself, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property. In addition, you can use the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property if you want to obtain the index positions of all selected items in a multiple-selection <xref:System.Windows.Forms.ListBox>."
  syntax:
    content: public System.Windows.Forms.ListBox.SelectedObjectCollection SelectedItems { get; }
    return:
      type: System.Windows.Forms.ListBox.SelectedObjectCollection
      description: "A <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> containing the currently selected items in the control."
  overload: System.Windows.Forms.ListBox.SelectedItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SelectionMode
  id: SelectionMode
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the method in which items are selected in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "The SelectionMode property enables you to determine how many items in the <xref:System.Windows.Forms.ListBox> a user can select at one time and how the user can make multiple-selections. When the SelectionMode property is set to `SelectionMode.MultiExtended`, pressing SHIFT and clicking the mouse or pressing SHIFT and one of the arrow keys (UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW) extends the selection from the previously selected item to the current item. Pressing CTRL and clicking the mouse selects or deselects an item in the list. When the property is set to `SelectionMode.MultiSimple`, a mouse click or pressing the SPACEBAR selects or deselects an item in the list."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the SelectionMode property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the <xref:System.Windows.Forms.ListBox.Sorted%2A> property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_28_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_28_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_28_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.SelectionMode SelectionMode { get; set; }
    return:
      type: System.Windows.Forms.SelectionMode
      description: "One of the <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_SelectionMode.One&quot; name=&quot;SelectionMode.One&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.SelectionMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "The assigned value is not one of the <xref href=&quot;System.Windows.Forms.SelectionMode&quot;></xref> values."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the specified bounds of the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control."
  remarks: "The height of the <xref:System.Windows.Forms.ListBox> control increases and decreases by a multiple of the <xref:System.Windows.Forms.ListBox.ItemHeight%2A> property. If height is a number that is not a multiple of <xref:System.Windows.Forms.ListBox.ItemHeight%2A>, the height of the <xref:System.Windows.Forms.ListBox> will change by the largest multiple that is less than height.       Typically, the parameters that correspond to the bounds not included in the specified parameter are passed in with their current values. For example, the `height`, `width`, or the `x` or `y` properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control. However, all values passed in are honored and applied to the control.       The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application. For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is <xref:System.Windows.Forms.BoundsSpecified>. However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is <xref:System.Windows.Forms.BoundsSpecified>."
  syntax:
    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Left*> property value of the control."
    - id: y
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Top*> property value of the control."
    - id: width
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Width*> property value of the control."
    - id: height
      type: System.Int32
      description: "The new <xref:System.Windows.Forms.Control.Height*> property value of the control."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;></xref> values."
  overload: System.Windows.Forms.ListBox.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  id: SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sets the object with the specified index in the derived class."
  syntax:
    content: protected override void SetItemCore (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The array index of the object."
    - id: value
      type: System.Object
      description: "The object."
  overload: System.Windows.Forms.ListBox.SetItemCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  id: SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Clears the contents of the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> and adds the specified items to the control."
  syntax:
    content: protected override void SetItemsCore (System.Collections.IList value);
    parameters:
    - id: value
      type: System.Collections.IList
      description: "An array of objects to insert into the control."
  overload: System.Windows.Forms.ListBox.SetItemsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  id: SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Selects or clears the selection for the specified item in a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "You can use this property to set the selection of items in a multiple-selection <xref:System.Windows.Forms.ListBox>. To select an item in a single-selection <xref:System.Windows.Forms.ListBox>, use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property."
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> control that displays multiple items in columns and can have more than one item selected in the control's list. The code for the example adds 50 items to the <xref:System.Windows.Forms.ListBox> using the <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection> class and then selects three items from the list using the SetSelected method. The code then displays values from the <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> collection (through the <xref:System.Windows.Forms.ListBox.SelectedItems%2A> property) and the <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (through the <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> property). This example requires that the code is located in and called from a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cpp[Classic ListBox Example#1](~/add/codesnippet/cpp/m-system.windows.forms.l_1_1.cpp)]\n [!code-cs[Classic ListBox Example#1](~/add/codesnippet/csharp/m-system.windows.forms.l_1_1.cs)]\n [!code-vb[Classic ListBox Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_1_1.vb)]"
  syntax:
    content: public void SetSelected (int index, bool value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item in a <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> to select or clear the selection for."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to select the specified item; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.SetSelected*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified index was outside the range of valid values."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Windows.Forms.ListBox.SelectionMode*> property was set to <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sort
  id: Sort
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Sorts the items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "Sort forces the collection to add each item back to itself if the <xref:System.Windows.Forms.ListBox.Sorted%2A> property is `true`. Each item is then inserted into the correct position."
  example:
  - "The following code example demonstrates using the Sort method. The example demonstrates inheriting from the <xref:System.Windows.Forms.ListBox> class and overriding the Sort method in the derived class to perform a user-defined sort. To run this example paste the following code in an empty form.  \n  \n [!code-cpp[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/cpp/m-system.windows.forms.l_19_1.cpp)]\n [!code-cs[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/csharp/m-system.windows.forms.l_19_1.cs)]\n [!code-vb[System.Windows.Forms.ListBoxSort#1](~/add/codesnippet/visualbasic/m-system.windows.forms.l_19_1.vb)]"
  syntax:
    content: protected virtual void Sort ();
    parameters: []
  overload: System.Windows.Forms.ListBox.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Sorted
  id: Sorted
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> are sorted alphabetically."
  remarks: "Use the Sorted property to automatically sort strings alphabetically in a <xref:System.Windows.Forms.ListBox>. As items are added to a sorted <xref:System.Windows.Forms.ListBox>, the items are moved to the appropriate location in the sorted list. When adding items to a <xref:System.Windows.Forms.ListBox>, it is more efficient to sort the items first and then add new items.       A <xref:System.Windows.Forms.ListBox> with its Sorted set to `true` should not be bound to data using the <xref:System.Windows.Forms.ListControl.DataSource%2A> property. To display sorted data in a bound <xref:System.Windows.Forms.ListBox>, you should bind to a data source that supports sorting and have the data source provide the sorting."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.GetSelected%2A> method to determine which items in a <xref:System.Windows.Forms.ListBox> are selected in order to select the items that are not selected and deselect the items that are selected. The example also demonstrates using the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property to enable a <xref:System.Windows.Forms.ListBox> to have more than one selected item and uses the Sorted property to demonstrate how to sort items in a <xref:System.Windows.Forms.ListBox> automatically. This example requires that a <xref:System.Windows.Forms.ListBox>, named `listBox1`, has been added to a form and that the `InitializeMyListBox` method defined in the example is called from the <xref:System.Windows.Forms.Form.Load> event of the form.  \n  \n [!code-cs[ListBox.GetSelected#1](~/add/codesnippet/csharp/p-system.windows.forms.l_17_1.cs)]\n [!code-cpp[ListBox.GetSelected#1](~/add/codesnippet/cpp/p-system.windows.forms.l_17_1.cpp)]\n [!code-vb[ListBox.GetSelected#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_17_1.vb)]"
  syntax:
    content: public bool Sorted { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if items in the control are sorted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.Sorted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.Text
  id: Text
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or searches for the text of the currently selected item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "When the value of this property is set to a string value, the <xref:System.Windows.Forms.ListBox> searches for the item within the <xref:System.Windows.Forms.ListBox> that matches the specified text and selects the item. You can also use this property to determine which items are currently selected in the <xref:System.Windows.Forms.ListBox>. If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is set to `SelectionMode.MultiExtended`, this property returns the text of the first selected item. If the <xref:System.Windows.Forms.ListBox.SelectionMode%2A> property of the <xref:System.Windows.Forms.ListBox> is not set to `SelectionMode.None`, this property returns the text of the first selected item."
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "The text of the currently selected item in the control."
  overload: System.Windows.Forms.ListBox.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Occurs when the <xref:System.Windows.Forms.ListBox.Text*> property is changed."
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.TopIndex
  id: TopIndex
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the index of the first visible item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  remarks: "Initially, the item with the index position zero (0) is at the top of the visible region of the <xref:System.Windows.Forms.ListBox>. If the contents of the <xref:System.Windows.Forms.ListBox> have been scrolled, another item might be at the top of the control&quot;s display area. You can use this property to obtain the index within the <xref:System.Windows.Forms.ListBox.ObjectCollection> for the <xref:System.Windows.Forms.ListBox> of the item that is currently positioned at the top of the visible region of the control. You can also use this property to position an item in the list at the top of the visible region of the control."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> property with the TopIndex property to move the currently selected item to the top of the list of items in the display area of the <xref:System.Windows.Forms.ListBox>. The example further demonstrates how to remove items using the <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> method of the <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=fullName> class, and how to clear all item selection using the <xref:System.Windows.Forms.ListBox.ClearSelected%2A> method. The code first moves the currently selected item in the <xref:System.Windows.Forms.ListBox> to the top of the list. The code then removes all items before the currently selected item and clears all selections in the <xref:System.Windows.Forms.ListBox>. This example requires that a <xref:System.Windows.Forms.ListBox> containing items is added to a form and that an item is currently selected in the <xref:System.Windows.Forms.ListBox>.  \n  \n [!code-cpp[ListBox.SelectedIndex#1](~/add/codesnippet/cpp/p-system.windows.forms.l_70_1.cpp)]\n [!code-cs[ListBox.SelectedIndex#1](~/add/codesnippet/csharp/p-system.windows.forms.l_70_1.cs)]\n [!code-vb[ListBox.SelectedIndex#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_70_1.vb)]"
  syntax:
    content: public int TopIndex { get; set; }
    return:
      type: System.Int32
      description: "The zero-based index of the first visible item in the control."
  overload: System.Windows.Forms.ListBox.TopIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.ToString
  id: ToString
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a string representation of the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that states the control type, the count of items in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control, and the Text property of the first item in the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref>, if the count is not 0."
  overload: System.Windows.Forms.ListBox.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  id: UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> recognizes and expands tab characters when it draws its strings by using the <xref:System.Windows.Forms.ListBox.CustomTabOffsets*> integer array."
  syntax:
    content: public bool UseCustomTabOffsets { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> recognizes and expands tab characters; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.UseTabStops
  id: UseTabStops
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> can recognize and expand tab characters when drawing its strings."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.ListBox> that displays items with tab characters.  \n  \n [!code-cs[ListBox.UseTabStops#1](~/add/codesnippet/csharp/p-system.windows.forms.l_62_1.cs)]\n [!code-vb[ListBox.UseTabStops#1](~/add/codesnippet/visualbasic/p-system.windows.forms.l_62_1.vb)]\n [!code-cpp[ListBox.UseTabStops#1](~/add/codesnippet/cpp/p-system.windows.forms.l_62_1.cpp)]"
  syntax:
    content: public bool UseTabStops { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control can expand tab characters; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.ListBox.UseTabStops*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  id: WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processes the command message the <xref href=&quot;System.Windows.Forms.ListView&quot;></xref> control receives from the top-level window."
  syntax:
    content: protected virtual void WmReflectCommand (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "The <xref href=&quot;System.Windows.Forms.Message&quot;></xref> the top-level window sent to the <xref href=&quot;System.Windows.Forms.ListBox&quot;></xref> control."
  overload: System.Windows.Forms.ListBox.WmReflectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "The list&quot;s window procedure."
  remarks: "Inheriting classes can override this to add extra functionality, but should call the WndProc method on the base class to ensure that the list continues to function properly."
  syntax:
    content: protected override void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "A Windows Message Object."
  overload: System.Windows.Forms.ListBox.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.ListControl
  isExternal: false
  name: System.Windows.Forms.ListControl
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Forms.ListBox.#ctor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox()
  nameWithType: ListBox.ListBox()
  fullName: System.Windows.Forms.ListBox.ListBox()
- uid: System.Windows.Forms.ListBox.AddItemsCore(System.Object[])
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore(Object[])
  nameWithType: ListBox.AddItemsCore(Object[])
  fullName: System.Windows.Forms.ListBox.AddItemsCore(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.ListBox.AllowSelection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
  fullName: System.Windows.Forms.ListBox.AllowSelection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListBox.BackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
  fullName: System.Windows.Forms.ListBox.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListBox.BackgroundImage
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
  fullName: System.Windows.Forms.ListBox.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.ListBox.BackgroundImageChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: ListBox.BackgroundImageChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: ListBox.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.ListBox.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.ListBox.BeginUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate()
  nameWithType: ListBox.BeginUpdate()
  fullName: System.Windows.Forms.ListBox.BeginUpdate()
- uid: System.Windows.Forms.ListBox.BorderStyle
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
  fullName: System.Windows.Forms.ListBox.BorderStyle
- uid: System.Windows.Forms.BorderStyle
  parent: System.Windows.Forms
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Windows.Forms.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected()
  nameWithType: ListBox.ClearSelected()
  fullName: System.Windows.Forms.ListBox.ClearSelected()
- uid: System.Windows.Forms.ListBox.Click
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Click
  nameWithType: ListBox.Click
  fullName: System.Windows.Forms.ListBox.Click
- uid: System.Windows.Forms.ListBox.ColumnWidth
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
  fullName: System.Windows.Forms.ListBox.ColumnWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListBox.CreateItemCollection
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection()
  nameWithType: ListBox.CreateItemCollection()
  fullName: System.Windows.Forms.ListBox.CreateItemCollection()
- uid: System.Windows.Forms.ListBox.ObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+ObjectCollection
  nameWithType: ListBox+ObjectCollection
  fullName: System.Windows.Forms.ListBox+ObjectCollection
- uid: System.Windows.Forms.ListBox.CreateParams
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
  fullName: System.Windows.Forms.ListBox.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
  fullName: System.Windows.Forms.ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.IntegerCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+IntegerCollection
  nameWithType: ListBox+IntegerCollection
  fullName: System.Windows.Forms.ListBox+IntegerCollection
- uid: System.Windows.Forms.ListBox.DefaultItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultItemHeight
  nameWithType: ListBox.DefaultItemHeight
  fullName: System.Windows.Forms.ListBox.DefaultItemHeight
- uid: System.Windows.Forms.ListBox.DefaultSize
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
  fullName: System.Windows.Forms.ListBox.DefaultSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.ListBox.DrawItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawItem
  nameWithType: ListBox.DrawItem
  fullName: System.Windows.Forms.ListBox.DrawItem
- uid: System.Windows.Forms.DrawItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventHandler
  nameWithType: DrawItemEventHandler
  fullName: System.Windows.Forms.DrawItemEventHandler
- uid: System.Windows.Forms.ListBox.DrawMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
  fullName: System.Windows.Forms.ListBox.DrawMode
- uid: System.Windows.Forms.DrawMode
  parent: System.Windows.Forms
  isExternal: false
  name: DrawMode
  nameWithType: DrawMode
  fullName: System.Windows.Forms.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate()
  nameWithType: ListBox.EndUpdate()
  fullName: System.Windows.Forms.ListBox.EndUpdate()
- uid: System.Windows.Forms.ListBox.FindString(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String)
  nameWithType: ListBox.FindString(String)
  fullName: System.Windows.Forms.ListBox.FindString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.ListBox.FindString(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString(String,Int32)
  nameWithType: ListBox.FindString(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindString(String,Int32)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String)
  nameWithType: ListBox.FindStringExact(String)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String)
- uid: System.Windows.Forms.ListBox.FindStringExact(System.String,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact(String,Int32)
  nameWithType: ListBox.FindStringExact(String,Int32)
  fullName: System.Windows.Forms.ListBox.FindStringExact(String,Int32)
- uid: System.Windows.Forms.ListBox.Font
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
  fullName: System.Windows.Forms.ListBox.Font
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.ListBox.ForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
  fullName: System.Windows.Forms.ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight(Int32)
  nameWithType: ListBox.GetItemHeight(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemHeight(Int32)
- uid: System.Windows.Forms.ListBox.GetItemRectangle(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle(Int32)
  nameWithType: ListBox.GetItemRectangle(Int32)
  fullName: System.Windows.Forms.ListBox.GetItemRectangle(Int32)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.ListBox.GetSelected(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected(Int32)
  nameWithType: ListBox.GetSelected(Int32)
  fullName: System.Windows.Forms.ListBox.GetSelected(Int32)
- uid: System.Windows.Forms.ListBox.HorizontalExtent
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
  fullName: System.Windows.Forms.ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
  fullName: System.Windows.Forms.ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Drawing.Point)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Point)
  nameWithType: ListBox.IndexFromPoint(Point)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListBox.IndexFromPoint(System.Int32,System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint(Int32,Int32)
  nameWithType: ListBox.IndexFromPoint(Int32,Int32)
  fullName: System.Windows.Forms.ListBox.IndexFromPoint(Int32,Int32)
- uid: System.Windows.Forms.ListBox.IntegralHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
  fullName: System.Windows.Forms.ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
  fullName: System.Windows.Forms.ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
  fullName: System.Windows.Forms.ListBox.Items
- uid: System.Windows.Forms.ListBox.MeasureItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MeasureItem
  nameWithType: ListBox.MeasureItem
  fullName: System.Windows.Forms.ListBox.MeasureItem
- uid: System.Windows.Forms.MeasureItemEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventHandler
  nameWithType: MeasureItemEventHandler
  fullName: System.Windows.Forms.MeasureItemEventHandler
- uid: System.Windows.Forms.ListBox.MouseClick
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MouseClick
  nameWithType: ListBox.MouseClick
  fullName: System.Windows.Forms.ListBox.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.ListBox.MultiColumn
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
  fullName: System.Windows.Forms.ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.NoMatches
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: NoMatches
  nameWithType: ListBox.NoMatches
  fullName: System.Windows.Forms.ListBox.NoMatches
- uid: System.Windows.Forms.ListBox.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: ListBox.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.ListBox.OnChangeUICues(UICuesEventArgs)
- uid: System.Windows.Forms.UICuesEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventArgs
  nameWithType: UICuesEventArgs
  fullName: System.Windows.Forms.UICuesEventArgs
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged(EventArgs)
  nameWithType: ListBox.OnDataSourceChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDataSourceChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged(EventArgs)
  nameWithType: ListBox.OnDisplayMemberChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnDisplayMemberChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: ListBox.OnDrawItem(DrawItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: System.Windows.Forms.ListBox.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: ListBox.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: ListBox.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: ListBox.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem(MeasureItemEventArgs)
  nameWithType: ListBox.OnMeasureItem(MeasureItemEventArgs)
  fullName: System.Windows.Forms.ListBox.OnMeasureItem(MeasureItemEventArgs)
- uid: System.Windows.Forms.MeasureItemEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MeasureItemEventArgs
  nameWithType: MeasureItemEventArgs
  fullName: System.Windows.Forms.MeasureItemEventArgs
- uid: System.Windows.Forms.ListBox.OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged(EventArgs)
  nameWithType: ListBox.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnParentChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnResize(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: ListBox.OnResize(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnResize(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: ListBox.OnSelectedIndexChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedIndexChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged(System.EventArgs)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged(EventArgs)
  nameWithType: ListBox.OnSelectedValueChanged(EventArgs)
  fullName: System.Windows.Forms.ListBox.OnSelectedValueChanged(EventArgs)
- uid: System.Windows.Forms.ListBox.Padding
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
  fullName: System.Windows.Forms.ListBox.Padding
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.ListBox.PaddingChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PaddingChanged
  nameWithType: ListBox.PaddingChanged
  fullName: System.Windows.Forms.ListBox.PaddingChanged
- uid: System.Windows.Forms.ListBox.Paint
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Paint
  nameWithType: ListBox.Paint
  fullName: System.Windows.Forms.ListBox.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.ListBox.PreferredHeight
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
  fullName: System.Windows.Forms.ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh()
  nameWithType: ListBox.Refresh()
  fullName: System.Windows.Forms.ListBox.Refresh()
- uid: System.Windows.Forms.ListBox.RefreshItem(System.Int32)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem(Int32)
  nameWithType: ListBox.RefreshItem(Int32)
  fullName: System.Windows.Forms.ListBox.RefreshItem(Int32)
- uid: System.Windows.Forms.ListBox.RefreshItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems()
  nameWithType: ListBox.RefreshItems()
  fullName: System.Windows.Forms.ListBox.RefreshItems()
- uid: System.Windows.Forms.ListBox.ResetBackColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor()
  nameWithType: ListBox.ResetBackColor()
  fullName: System.Windows.Forms.ListBox.ResetBackColor()
- uid: System.Windows.Forms.ListBox.ResetForeColor
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor()
  nameWithType: ListBox.ResetForeColor()
  fullName: System.Windows.Forms.ListBox.ResetForeColor()
- uid: System.Windows.Forms.ListBox.RightToLeft
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
  fullName: System.Windows.Forms.ListBox.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: ListBox.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
  fullName: System.Windows.Forms.ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
  fullName: System.Windows.Forms.ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndexChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndexChanged
  nameWithType: ListBox.SelectedIndexChanged
  fullName: System.Windows.Forms.ListBox.SelectedIndexChanged
- uid: System.Windows.Forms.ListBox.SelectedIndices
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
  fullName: System.Windows.Forms.ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedIndexCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedIndexCollection
  nameWithType: ListBox+SelectedIndexCollection
  fullName: System.Windows.Forms.ListBox+SelectedIndexCollection
- uid: System.Windows.Forms.ListBox.SelectedItem
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
  fullName: System.Windows.Forms.ListBox.SelectedItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ListBox.SelectedItems
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
  fullName: System.Windows.Forms.ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectedObjectCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ListBox+SelectedObjectCollection
  nameWithType: ListBox+SelectedObjectCollection
  fullName: System.Windows.Forms.ListBox+SelectedObjectCollection
- uid: System.Windows.Forms.ListBox.SelectionMode
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
  fullName: System.Windows.Forms.ListBox.SelectionMode
- uid: System.Windows.Forms.SelectionMode
  parent: System.Windows.Forms
  isExternal: false
  name: SelectionMode
  nameWithType: SelectionMode
  fullName: System.Windows.Forms.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.ListBox.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.ListBox.SetItemCore(System.Int32,System.Object)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore(Int32,Object)
  nameWithType: ListBox.SetItemCore(Int32,Object)
  fullName: System.Windows.Forms.ListBox.SetItemCore(Int32,Object)
- uid: System.Windows.Forms.ListBox.SetItemsCore(System.Collections.IList)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore(IList)
  nameWithType: ListBox.SetItemsCore(IList)
  fullName: System.Windows.Forms.ListBox.SetItemsCore(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Forms.ListBox.SetSelected(System.Int32,System.Boolean)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected(Int32,Boolean)
  nameWithType: ListBox.SetSelected(Int32,Boolean)
  fullName: System.Windows.Forms.ListBox.SetSelected(Int32,Boolean)
- uid: System.Windows.Forms.ListBox.Sort
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort()
  nameWithType: ListBox.Sort()
  fullName: System.Windows.Forms.ListBox.Sort()
- uid: System.Windows.Forms.ListBox.Sorted
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
  fullName: System.Windows.Forms.ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
  fullName: System.Windows.Forms.ListBox.Text
- uid: System.Windows.Forms.ListBox.TextChanged
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TextChanged
  nameWithType: ListBox.TextChanged
  fullName: System.Windows.Forms.ListBox.TextChanged
- uid: System.Windows.Forms.ListBox.TopIndex
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
  fullName: System.Windows.Forms.ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString()
  nameWithType: ListBox.ToString()
  fullName: System.Windows.Forms.ListBox.ToString()
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
  fullName: System.Windows.Forms.ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
  fullName: System.Windows.Forms.ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand(Message)
  nameWithType: ListBox.WmReflectCommand(Message)
  fullName: System.Windows.Forms.ListBox.WmReflectCommand(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.ListBox.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc(Message)
  nameWithType: ListBox.WndProc(Message)
  fullName: System.Windows.Forms.ListBox.WndProc(Message)
- uid: System.Windows.Forms.ListBox.#ctor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ListBox
  nameWithType: ListBox.ListBox
- uid: System.Windows.Forms.ListBox.AddItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AddItemsCore
  nameWithType: ListBox.AddItemsCore
- uid: System.Windows.Forms.ListBox.AllowSelection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: AllowSelection
  nameWithType: ListBox.AllowSelection
- uid: System.Windows.Forms.ListBox.BackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackColor
  nameWithType: ListBox.BackColor
- uid: System.Windows.Forms.ListBox.BackgroundImage*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImage
  nameWithType: ListBox.BackgroundImage
- uid: System.Windows.Forms.ListBox.BackgroundImageLayout*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: ListBox.BackgroundImageLayout
- uid: System.Windows.Forms.ListBox.BeginUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BeginUpdate
  nameWithType: ListBox.BeginUpdate
- uid: System.Windows.Forms.ListBox.BorderStyle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: BorderStyle
  nameWithType: ListBox.BorderStyle
- uid: System.Windows.Forms.ListBox.ClearSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ClearSelected
  nameWithType: ListBox.ClearSelected
- uid: System.Windows.Forms.ListBox.ColumnWidth*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: ListBox.ColumnWidth
- uid: System.Windows.Forms.ListBox.CreateItemCollection*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateItemCollection
  nameWithType: ListBox.CreateItemCollection
- uid: System.Windows.Forms.ListBox.CreateParams*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CreateParams
  nameWithType: ListBox.CreateParams
- uid: System.Windows.Forms.ListBox.CustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: CustomTabOffsets
  nameWithType: ListBox.CustomTabOffsets
- uid: System.Windows.Forms.ListBox.DefaultSize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DefaultSize
  nameWithType: ListBox.DefaultSize
- uid: System.Windows.Forms.ListBox.DrawMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: DrawMode
  nameWithType: ListBox.DrawMode
- uid: System.Windows.Forms.ListBox.EndUpdate*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: EndUpdate
  nameWithType: ListBox.EndUpdate
- uid: System.Windows.Forms.ListBox.FindString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindString
  nameWithType: ListBox.FindString
- uid: System.Windows.Forms.ListBox.FindStringExact*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: FindStringExact
  nameWithType: ListBox.FindStringExact
- uid: System.Windows.Forms.ListBox.Font*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Font
  nameWithType: ListBox.Font
- uid: System.Windows.Forms.ListBox.ForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ForeColor
  nameWithType: ListBox.ForeColor
- uid: System.Windows.Forms.ListBox.GetItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemHeight
  nameWithType: ListBox.GetItemHeight
- uid: System.Windows.Forms.ListBox.GetItemRectangle*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetItemRectangle
  nameWithType: ListBox.GetItemRectangle
- uid: System.Windows.Forms.ListBox.GetScaledBounds*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetScaledBounds
  nameWithType: ListBox.GetScaledBounds
- uid: System.Windows.Forms.ListBox.GetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: GetSelected
  nameWithType: ListBox.GetSelected
- uid: System.Windows.Forms.ListBox.HorizontalExtent*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalExtent
  nameWithType: ListBox.HorizontalExtent
- uid: System.Windows.Forms.ListBox.HorizontalScrollbar*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: HorizontalScrollbar
  nameWithType: ListBox.HorizontalScrollbar
- uid: System.Windows.Forms.ListBox.IndexFromPoint*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IndexFromPoint
  nameWithType: ListBox.IndexFromPoint
- uid: System.Windows.Forms.ListBox.IntegralHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: IntegralHeight
  nameWithType: ListBox.IntegralHeight
- uid: System.Windows.Forms.ListBox.ItemHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ItemHeight
  nameWithType: ListBox.ItemHeight
- uid: System.Windows.Forms.ListBox.Items*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Items
  nameWithType: ListBox.Items
- uid: System.Windows.Forms.ListBox.MultiColumn*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: MultiColumn
  nameWithType: ListBox.MultiColumn
- uid: System.Windows.Forms.ListBox.OnChangeUICues*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnChangeUICues
  nameWithType: ListBox.OnChangeUICues
- uid: System.Windows.Forms.ListBox.OnDataSourceChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDataSourceChanged
  nameWithType: ListBox.OnDataSourceChanged
- uid: System.Windows.Forms.ListBox.OnDisplayMemberChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDisplayMemberChanged
  nameWithType: ListBox.OnDisplayMemberChanged
- uid: System.Windows.Forms.ListBox.OnDrawItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnDrawItem
  nameWithType: ListBox.OnDrawItem
- uid: System.Windows.Forms.ListBox.OnFontChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnFontChanged
  nameWithType: ListBox.OnFontChanged
- uid: System.Windows.Forms.ListBox.OnHandleCreated*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleCreated
  nameWithType: ListBox.OnHandleCreated
- uid: System.Windows.Forms.ListBox.OnHandleDestroyed*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: ListBox.OnHandleDestroyed
- uid: System.Windows.Forms.ListBox.OnMeasureItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnMeasureItem
  nameWithType: ListBox.OnMeasureItem
- uid: System.Windows.Forms.ListBox.OnParentChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnParentChanged
  nameWithType: ListBox.OnParentChanged
- uid: System.Windows.Forms.ListBox.OnResize*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnResize
  nameWithType: ListBox.OnResize
- uid: System.Windows.Forms.ListBox.OnSelectedIndexChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedIndexChanged
  nameWithType: ListBox.OnSelectedIndexChanged
- uid: System.Windows.Forms.ListBox.OnSelectedValueChanged*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: OnSelectedValueChanged
  nameWithType: ListBox.OnSelectedValueChanged
- uid: System.Windows.Forms.ListBox.Padding*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Padding
  nameWithType: ListBox.Padding
- uid: System.Windows.Forms.ListBox.PreferredHeight*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: PreferredHeight
  nameWithType: ListBox.PreferredHeight
- uid: System.Windows.Forms.ListBox.Refresh*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Refresh
  nameWithType: ListBox.Refresh
- uid: System.Windows.Forms.ListBox.RefreshItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItem
  nameWithType: ListBox.RefreshItem
- uid: System.Windows.Forms.ListBox.RefreshItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RefreshItems
  nameWithType: ListBox.RefreshItems
- uid: System.Windows.Forms.ListBox.ResetBackColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetBackColor
  nameWithType: ListBox.ResetBackColor
- uid: System.Windows.Forms.ListBox.ResetForeColor*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ResetForeColor
  nameWithType: ListBox.ResetForeColor
- uid: System.Windows.Forms.ListBox.RightToLeft*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: RightToLeft
  nameWithType: ListBox.RightToLeft
- uid: System.Windows.Forms.ListBox.ScaleControl*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScaleControl
  nameWithType: ListBox.ScaleControl
- uid: System.Windows.Forms.ListBox.ScrollAlwaysVisible*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ScrollAlwaysVisible
  nameWithType: ListBox.ScrollAlwaysVisible
- uid: System.Windows.Forms.ListBox.SelectedIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndex
  nameWithType: ListBox.SelectedIndex
- uid: System.Windows.Forms.ListBox.SelectedIndices*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedIndices
  nameWithType: ListBox.SelectedIndices
- uid: System.Windows.Forms.ListBox.SelectedItem*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItem
  nameWithType: ListBox.SelectedItem
- uid: System.Windows.Forms.ListBox.SelectedItems*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectedItems
  nameWithType: ListBox.SelectedItems
- uid: System.Windows.Forms.ListBox.SelectionMode*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SelectionMode
  nameWithType: ListBox.SelectionMode
- uid: System.Windows.Forms.ListBox.SetBoundsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetBoundsCore
  nameWithType: ListBox.SetBoundsCore
- uid: System.Windows.Forms.ListBox.SetItemCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemCore
  nameWithType: ListBox.SetItemCore
- uid: System.Windows.Forms.ListBox.SetItemsCore*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetItemsCore
  nameWithType: ListBox.SetItemsCore
- uid: System.Windows.Forms.ListBox.SetSelected*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: SetSelected
  nameWithType: ListBox.SetSelected
- uid: System.Windows.Forms.ListBox.Sort*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sort
  nameWithType: ListBox.Sort
- uid: System.Windows.Forms.ListBox.Sorted*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Sorted
  nameWithType: ListBox.Sorted
- uid: System.Windows.Forms.ListBox.Text*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: Text
  nameWithType: ListBox.Text
- uid: System.Windows.Forms.ListBox.TopIndex*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: TopIndex
  nameWithType: ListBox.TopIndex
- uid: System.Windows.Forms.ListBox.ToString*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: ToString
  nameWithType: ListBox.ToString
- uid: System.Windows.Forms.ListBox.UseCustomTabOffsets*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseCustomTabOffsets
  nameWithType: ListBox.UseCustomTabOffsets
- uid: System.Windows.Forms.ListBox.UseTabStops*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: UseTabStops
  nameWithType: ListBox.UseTabStops
- uid: System.Windows.Forms.ListBox.WmReflectCommand*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WmReflectCommand
  nameWithType: ListBox.WmReflectCommand
- uid: System.Windows.Forms.ListBox.WndProc*
  parent: System.Windows.Forms.ListBox
  isExternal: false
  name: WndProc
  nameWithType: ListBox.WndProc
